digraph "CFG forcom.google.android.gms.common.internal.safeparcel.SafeParcelReader.validateObjectHeader(Landroid\/os\/Parcel;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r5 I:android.os.Parcel) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.readHeader(android.os.Parcel):int type: STATIC \l0x0004: INVOKE  (r1 I:int) = (r5 I:android.os.Parcel), (r0 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.readSize(android.os.Parcel, int):int type: STATIC \l0x0008: INVOKE  (r2 I:int) = (r5 I:android.os.Parcel) android.os.Parcel.dataPosition():int type: VIRTUAL \l0x000c: INVOKE  (r3 I:int) = (r0 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelReader.getFieldId(int):int type: STATIC \l0x0010: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (20293(0x4f45, float:2.8437E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0034 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: NEW_INSTANCE  (r1 I:com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException) =  com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException \l0x0016: CONST_STR  (r2 I:java.lang.String) =  \"Expected object header. Got 0x\" \l0x0018: INVOKE  (r0 I:java.lang.String) = (r0 I:int) java.lang.Integer.toHexString(int):java.lang.String type: STATIC \l0x001c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0020: INVOKE  (r3 I:int) = (r0 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.concat(java.lang.String):java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|0x002b: NEW_INSTANCE  (r0 I:java.lang.String) =  java.lang.String \l0x002d: INVOKE  (r0 I:java.lang.String), (r2 I:java.lang.String) java.lang.String.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: INVOKE  \l  (r1 I:com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException)\l  (r0 I:java.lang.String)\l  (r5 I:android.os.Parcel)\l com.google.android.gms.common.internal.safeparcel.SafeParcelReader.ParseException.\<init\>(java.lang.String, android.os.Parcel):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|0x0033: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: IF  (r1 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:13:0x003e \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: INVOKE  (r0 I:int) = (r5 I:android.os.Parcel) android.os.Parcel.dataSize():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: IF  (r1 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:13:0x003e \l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|0x003d: RETURN  (r1 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|0x003e: NEW_INSTANCE  (r0 I:com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException) =  com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException \l0x0040: CONST  (r3 I:?[int, float, short, byte, char]) = (54 ?[int, float, short, byte, char]) \l0x0042: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0044: INVOKE  (r4 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x0047: CONST_STR  (r3 I:java.lang.String) =  \"Size read is invalid start=\" \l0x0049: INVOKE  (r4 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004c: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x004f: CONST_STR  (r2 I:java.lang.String) =  \" end=\" \l0x0051: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0054: INVOKE  (r4 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0057: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005b: INVOKE  \l  (r0 I:com.google.android.gms.common.internal.safeparcel.SafeParcelReader$ParseException)\l  (r1 I:java.lang.String)\l  (r5 I:android.os.Parcel)\l com.google.android.gms.common.internal.safeparcel.SafeParcelReader.ParseException.\<init\>(java.lang.String, android.os.Parcel):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x005e|0x005e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static int com.google.android.gms.common.internal.safeparcel.SafeParcelReader.validateObjectHeader((r5 I:android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
}

