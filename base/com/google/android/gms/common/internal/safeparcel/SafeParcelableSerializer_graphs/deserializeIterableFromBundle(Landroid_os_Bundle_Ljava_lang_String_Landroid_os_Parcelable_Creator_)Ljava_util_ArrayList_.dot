digraph "CFG forcom.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer.deserializeIterableFromBundle(Landroid\/os\/Bundle;Ljava\/lang\/String;Landroid\/os\/Parcelable$Creator;)Ljava\/util\/ArrayList;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList r3 = (java.util.ArrayList) r3.getSerializable(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3 != null) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|java.util.ArrayList r4 = new java.util.ArrayList\<\>(r3.size())\ljava.util.ArrayList r3 = r3\lint r0 = r3.size()\lr1 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:3:0x000a, B:5:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x001a\-\>B:5:0x001c\l|if (r1 \>= r0) goto L_0x002c\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|LOOP_END\lLOOP:0: B:4:0x001a\-\>B:5:0x001c\l|java.lang.Object r2 = r3.get(r1)\lint r1 = r1 + 1\lr4.add(deserializeFromBytes((byte[]) r2, r5))\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|RETURN\l|return r4\l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static java.util.ArrayList\<T\> com.google.android.gms.common.internal.safeparcel.SafeParcelableSerializer.deserializeIterableFromBundle((r3v0 android.os.Bundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.os.Parcelable$Creator\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Lcom\/google\/android\/gms\/common\/internal\/safeparcel\/SafeParcelable;, \>(, Landroid\/os\/Bundle;, Ljava\/lang\/String;, Landroid\/os\/Parcelable$Creator\<, TT;\>;), Ljava\/util\/ArrayList\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_4;
Node_7 -> Node_6;
}

