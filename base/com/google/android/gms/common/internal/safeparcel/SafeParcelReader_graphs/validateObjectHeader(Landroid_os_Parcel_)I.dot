digraph "CFG forcom.google.android.gms.common.internal.safeparcel.SafeParcelReader.validateObjectHeader(Landroid\/os\/Parcel;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = readHeader(r5)\lint r1 = readSize(r5, r0)\lint r2 = r5.dataPosition()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|if (getFieldId(r0) == 20293) goto L_0x0034\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|java.lang.String r0 = java.lang.String.valueOf(java.lang.Integer.toHexString(r0))\l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|if (r0.length() == 0) goto L_0x002b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|java.lang.String r0 = \"Expected object header. Got 0x\".concat(r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|java.lang.String r0 = new java.lang.String(\"Expected object header. Got 0x\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|PHI: r0 \l  PHI: (r0v5 java.lang.String) = (r0v6 java.lang.String), (r0v7 java.lang.String) binds: [B:5:0x002b, B:4:0x0026] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|throw new com.google.android.gms.common.internal.safeparcel.SafeParcelReader.ParseException(r0, r5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|int r1 = r1 + r2\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|if (r1 \< r2) goto L_0x003e\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037}"];
Node_11 [shape=record,label="{11\:\ 0x003b|if (r1 \> r5.dataSize()) goto L_0x003e\l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|RETURN\l|return r1\l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|java.lang.StringBuilder r4 = new java.lang.StringBuilder(54)\lr4.append(\"Size read is invalid start=\")\lr4.append(r2)\lr4.append(\" end=\")\lr4.append(r1)\l}"];
Node_14 [shape=record,label="{14\:\ 0x005e|throw new com.google.android.gms.common.internal.safeparcel.SafeParcelReader.ParseException(r4.toString(), r5)\l}"];
MethodNode[shape=record,label="{public static int com.google.android.gms.common.internal.safeparcel.SafeParcelReader.validateObjectHeader((r5v0 android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
}

