digraph "CFG forcom.google.android.gms.common.internal.BaseGmsClient.getService()Landroid\/os\/IInterface;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Object r0 = r3.mLock\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?}"];
Node_4 [shape=record,label="{4\:\ 0x0006|if (r3.zzcj == 5) goto L_0x001b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|checkConnected()\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|if (r3.zzcg == null) goto L_0x0011\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|r1 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|r1 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|PHI: r1 \l  PHI: (r1v4 boolean) = (r1v6 boolean), (r1v7 boolean) binds: [B:8:0x0011, B:7:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.gms.common.internal.Preconditions.checkState(r1, \"Client is connected but service is null\")\lT r1 = r3.zzcg\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|monitor\-exit(r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|RETURN\l|return r1\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b}"];
Node_13 [shape=record,label="{13\:\ 0x0020|throw new android.os.DeadObjectException()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|REMOVE\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|REMOVE\l}"];
Node_16 [shape=record,label="{16\:\ 0x0023|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public final T com.google.android.gms.common.internal.BaseGmsClient.getService((r3v0 'this' com.google.android.gms.common.internal.BaseGmsClient A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.DeadObjectException]\}], Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

