digraph "CFG forcom.google.android.gms.common.internal.DialogRedirect.onClick(Landroid\/content\/DialogInterface;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ ActivityNotFoundException \-\> 0x0009, all \-\> 0x0007 \}\lSplitter:B:0:0x0000\l|redirect()     \/\/ Catch:\{ ActivityNotFoundException \-\> 0x0009, all \-\> 0x0007 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|DONT_GENERATE\l|r3.dismiss()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|ExcHandler:  FINALLY\lSplitter:B:7:0x000e\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|ExcHandler: ActivityNotFoundException (r4v1 'e' android.content.ActivityNotFoundException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|android.content.ActivityNotFoundException r4 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a}"];
Node_7 [shape=record,label="{7\:\ 0x000e|SYNTHETIC\lSplitter:B:7:0x000e\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ ActivityNotFoundException \-\> 0x0009, all \-\> 0x0007 \}\lSplitter:B:7:0x000e\l|android.util.Log.e(\"DialogRedirect\", \"Failed to start resolution intent\", r4)     \/\/ Catch:\{ ActivityNotFoundException \-\> 0x0009, all \-\> 0x0007 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|DONT_GENERATE\l|r3.dismiss()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|FINALLY_INSNS\l|r3.dismiss()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|throw r4\l}"];
MethodNode[shape=record,label="{public void com.google.android.gms.common.internal.DialogRedirect.onClick((r2v0 'this' com.google.android.gms.common.internal.DialogRedirect A[IMMUTABLE_TYPE, THIS]), (r3v0 android.content.DialogInterface A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_4;
Node_8 -> Node_9;
Node_8 -> Node_4;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

