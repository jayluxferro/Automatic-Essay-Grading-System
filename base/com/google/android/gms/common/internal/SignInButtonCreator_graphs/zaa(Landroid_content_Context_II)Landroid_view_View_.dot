digraph "CFG forcom.google.android.gms.common.internal.SignInButtonCreator.zaa(Landroid\/content\/Context;II)Landroid\/view\/View;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ Exception \-\> 0x001b \}\lSplitter:B:0:0x0000\l|com.google.android.gms.common.internal.SignInButtonConfig r0 = new com.google.android.gms.common.internal.SignInButtonConfig(r5, r6, (com.google.android.gms.common.api.Scope[]) null)     \/\/ Catch:\{ Exception \-\> 0x001b \}\lcom.google.android.gms.dynamic.IObjectWrapper r1 = com.google.android.gms.dynamic.ObjectWrapper.wrap(r4)     \/\/ Catch:\{ Exception \-\> 0x001b \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|RETURN\l|return (android.view.View) com.google.android.gms.dynamic.ObjectWrapper.unwrap(((com.google.android.gms.common.internal.ISignInButtonCreator) getRemoteCreatorInstance(r4)).newSignInButtonFromConfig(r1, r0))\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|ExcHandler: Exception (r4v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.Exception r4 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|java.lang.StringBuilder r2 = new java.lang.StringBuilder(64)\lr2.append(\"Could not get button with size \")\lr2.append(r5)\lr2.append(\" and color \")\lr2.append(r6)\l}"];
Node_5 [shape=record,label="{5\:\ 0x003c|throw new com.google.android.gms.dynamic.RemoteCreator.RemoteCreatorException(r2.toString(), r4)\l}"];
MethodNode[shape=record,label="{private final android.view.View com.google.android.gms.common.internal.SignInButtonCreator.zaa((r3v0 'this' com.google.android.gms.common.internal.SignInButtonCreator A[IMMUTABLE_TYPE, THIS]), (r4v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.gms.dynamic.RemoteCreator$RemoteCreatorException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

