digraph "CFG forcom.google.android.gms.common.internal.GoogleApiAvailabilityCache.getClientAvailability(Landroid\/content\/Context;Lcom\/google\/android\/gms\/common\/api\/Api$Client;)I" {
subgraph cluster_Region_532237728 {
label = "R(2:0|(2:(1:2)|(2:3|(2:(1:5)|(5:6|(1:(2:9|(2:(2:13|1)|(1:14)))(1:19))|(1:16)|17|18)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.gms.common.internal.Preconditions.checkNotNull(r7)\lcom.google.android.gms.common.internal.Preconditions.checkNotNull(r8)\l}"];
subgraph cluster_Region_811040989 {
label = "R(2:(1:2)|(2:3|(2:(1:5)|(5:6|(1:(2:9|(2:(2:13|1)|(1:14)))(1:19))|(1:16)|17|18))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1241870985 {
label = "IF [B:1:0x000b] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r8.requiresGooglePlayServices() == false) goto L_0x000d\l}"];
subgraph cluster_Region_1909854222 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_508291203 {
label = "R(2:3|(2:(1:5)|(5:6|(1:(2:9|(2:(2:13|1)|(1:14)))(1:19))|(1:16)|17|18)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|int int r8 = r8.getMinApkVersion()\lint int r0 = r6.zaor.get(r8, \-1)\l}"];
subgraph cluster_Region_618108889 {
label = "R(2:(1:5)|(5:6|(1:(2:9|(2:(2:13|1)|(1:14)))(1:19))|(1:16)|17|18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_123227037 {
label = "IF [B:4:0x0019] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|if (r0 != \-1) goto L_0x001b\l}"];
subgraph cluster_Region_223062057 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001b|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1074454446 {
label = "R(5:6|(1:(2:9|(2:(2:13|1)|(1:14)))(1:19))|(1:16)|17|18)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|int r3 = 0\l}"];
subgraph cluster_LoopRegion_680176374 {
label = "LOOP:0: (1:(2:9|(2:(2:13|1)|(1:14)))(1:19))";
node [shape=record,color=blue];
subgraph cluster_Region_1241121876 {
label = "R(1:(2:9|(2:(2:13|1)|(1:14)))(1:19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2127141055 {
label = "IF [B:8:0x0023] THEN: R(2:9|(2:(2:13|1)|(1:14))) ELSE: R(1:19)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0023|if (r3 \< r6.zaor.size()) goto L_0x0025\l}"];
subgraph cluster_Region_773025199 {
label = "R(2:9|(2:(2:13|1)|(1:14)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0025|int int r4 = r6.zaor.keyAt(r3)\l}"];
subgraph cluster_Region_149760773 {
label = "R(2:(2:13|1)|(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_903244176 {
label = "IF [B:10:0x002b, B:12:0x0033] THEN: R(2:13|1) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002b|if (r4 \> r8) goto L_0x002d\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|ADDED_TO_REGION\l|if (r6.zaor.get(r4) == 0) goto L_0x0035\l}"];
subgraph cluster_Region_29636828 {
label = "R(2:13|1)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0035|EDGE_INSN: B:13:0x0035\-\>B:15:0x003a ?: BREAK  \l|r0 = 0\l}"];
Node_InsnContainer_270273694 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_Region_990394592 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0037|LOOP_END\lLOOP:0: B:7:0x001d\-\>B:14:0x0037\l|r3++\l}"];
}
}
}
subgraph cluster_Region_1841088881 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x003a|SYNTHETIC\lEDGE_INSN: B:19:0x003a\-\>B:15:0x003a ?: BREAK  \l|break\l}"];
}
}
}
}
subgraph cluster_IfRegion_455795073 {
label = "IF [B:15:0x003a] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x003a|EDGE_INSN: B:19:0x003a\-\>B:15:0x003a ?: BREAK  \lEDGE_INSN: B:13:0x0035\-\>B:15:0x003a ?: BREAK  \lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v7 int) binds: [B:19:0x003a, B:13:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == \-1) goto L_0x003c\l}"];
subgraph cluster_Region_1208504869 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003c|int r0 = r6.zaos.isGooglePlayServicesAvailable(r7, r8)\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0042|PHI: r0 \l  PHI: (r0v4 int) = (r0v3 int), (r0v6 int) binds: [B:15:0x003a, B:16:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|r6.zaor.put(r8, r0)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0047|RETURN\l|return r0\l}"];
}
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ 0x001d|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:6:0x001c, B:14:0x0037] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x001d\-\>B:14:0x0037\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002d}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0035|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0037|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0037|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int com.google.android.gms.common.internal.GoogleApiAvailabilityCache.getClientAvailability((r6v0 'this' com.google.android.gms.common.internal.GoogleApiAvailabilityCache A[IMMUTABLE_TYPE, THIS]), (r7v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 com.google.android.gms.common.api.Api$Client A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_19[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_21[style=dashed];
Node_12 -> Node_20;
Node_12 -> Node_22[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_7;
Node_19 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_20 -> Node_13;
Node_21 -> Node_14;
Node_22 -> Node_14;
}

