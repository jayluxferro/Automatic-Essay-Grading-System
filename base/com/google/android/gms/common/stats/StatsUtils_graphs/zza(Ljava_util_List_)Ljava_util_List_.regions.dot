digraph "CFG forcom.google.android.gms.common.stats.StatsUtils.zza(Ljava\/util\/List;)Ljava\/util\/List;" {
subgraph cluster_Region_1552343746 {
label = "R(1:(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_1047242489 {
label = "R(2:(1:8)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_394569033 {
label = "IF [B:0:0x0000, B:2:0x0007, B:4:0x0014] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|ADDED_TO_REGION\l|if (r2.size() != 1) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|ADDED_TO_REGION\l|if (\"com.google.android.gms\".equals(r2.get(0)) == false) goto L_?\l}"];
subgraph cluster_Region_2038944694 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_310165174 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0016|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0009}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return r2\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return r2\l}"];
MethodNode[shape=record,label="{static java.util.List\<java.lang.String\> com.google.android.gms.common.stats.StatsUtils.zza((r2v0 java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lAnnotation[BUILD, android.support.annotation.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;), Ljava\/util\/List\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

