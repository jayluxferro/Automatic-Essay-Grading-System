digraph "CFG forcom.google.android.gms.common.images.WebImage.\<init\>(Landroid\/net\/Uri;II)V" {
subgraph cluster_Region_958648964 {
label = "R(2:0|(1:8)(1:(1:6)(0)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|this(1, r2, r3, r4)\l}"];
subgraph cluster_IfRegion_1598150657 {
label = "IF [B:1:0x0004] THEN: R(1:8) ELSE: R(1:(1:6)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r2 == null) goto L_0x0013\l}"];
subgraph cluster_Region_670593355 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001a|throw new java.lang.IllegalArgumentException(\"url cannot be null\")\l}"];
}
subgraph cluster_Region_2137046859 {
label = "R(1:(1:6)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1483793873 {
label = "IF [B:2:0x0006, B:3:0x0008] THEN: R(1:6) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r3 \< 0) goto L_0x000b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|ADDED_TO_REGION\l|if (r4 \< 0) goto L_0x000b\l}"];
subgraph cluster_Region_161529614 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|throw new java.lang.IllegalArgumentException(\"width and height must not be negative\")\l}"];
}
subgraph cluster_Region_1832314200 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x000a}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000b}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0013}"];
MethodNode[shape=record,label="{public void com.google.android.gms.common.images.WebImage.\<init\>((r1v0 'this' com.google.android.gms.common.images.WebImage A[IMMUTABLE_TYPE, THIS]), (r2v0 android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.IllegalArgumentException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

