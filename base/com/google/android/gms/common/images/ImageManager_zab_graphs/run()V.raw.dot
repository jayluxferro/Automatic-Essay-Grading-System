digraph "CFG forcom.google.android.gms.common.images.ImageManager.zab.run()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"LoadBitmapFromDiskRunnable can't be executed in the main thread\" \l0x0002: INVOKE  (r0 I:java.lang.String) com.google.android.gms.common.internal.Asserts.checkNotMainThread(java.lang.String):void type: STATIC \l0x0005: IGET  (r0 I:android.os.ParcelFileDescriptor) = \l  (r12 I:com.google.android.gms.common.images.ImageManager$zab)\l com.google.android.gms.common.images.ImageManager.zab.zamr android.os.ParcelFileDescriptor \l0x0007: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0051 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|SYNTHETIC\lSplitter:B:2:0x000c\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x000c\l|0x000c: IGET  (r0 I:android.os.ParcelFileDescriptor) = \l  (r12 I:com.google.android.gms.common.images.ImageManager$zab)\l com.google.android.gms.common.images.ImageManager.zab.zamr android.os.ParcelFileDescriptor A[Catch:\{ OutOfMemoryError \-\> 0x0018 \}, TRY_ENTER]\l0x000e: INVOKE  (r0 I:java.io.FileDescriptor) = (r0 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.getFileDescriptor():java.io.FileDescriptor type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x0018 \}]\l0x0012: INVOKE  (r0 I:android.graphics.Bitmap) = (r0 I:java.io.FileDescriptor) android.graphics.BitmapFactory.decodeFileDescriptor(java.io.FileDescriptor):android.graphics.Bitmap type: STATIC A[Catch:\{ OutOfMemoryError \-\> 0x0018 \}]\l0x0015: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|ExcHandler: OutOfMemoryError null\lSplitter:B:2:0x000c\l|0x0018: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: CONST_STR  (r2 I:java.lang.String) =  \"ImageManager\" \l0x001b: IGET  (r4 I:android.net.Uri) = \l  (r12 I:com.google.android.gms.common.images.ImageManager$zab)\l com.google.android.gms.common.images.ImageManager.zab.mUri android.net.Uri \l0x001d: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0021: INVOKE  (r5 I:java.lang.String) = (r4 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0025: INVOKE  (r5 I:int) = (r5 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0029: ARITH  (r5 I:int) = (r5 I:int) + (34 int) \l0x002b: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002d: INVOKE  (r6 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x0030: CONST_STR  (r5 I:java.lang.String) =  \"OOM while loading bitmap for uri: \" \l0x0032: INVOKE  (r6 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0035: INVOKE  (r6 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r4 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003c: INVOKE  \l  (r2 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x003f: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|SYNTHETIC\lSplitter:B:7:0x0040\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0040\l|0x0040: IGET  (r0 I:android.os.ParcelFileDescriptor) = \l  (r12 I:com.google.android.gms.common.images.ImageManager$zab)\l com.google.android.gms.common.images.ImageManager.zab.zamr android.os.ParcelFileDescriptor A[Catch:\{ IOException \-\> 0x0046 \}, TRY_ENTER]\l0x0042: INVOKE  (r0 I:android.os.ParcelFileDescriptor) android.os.ParcelFileDescriptor.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0046 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|ExcHandler: IOException null\lSplitter:B:7:0x0040\l|0x0046: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: CONST_STR  (r4 I:java.lang.String) =  \"ImageManager\" \l0x0049: CONST_STR  (r5 I:java.lang.String) =  \"closed failed\" \l0x004b: INVOKE  \l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|0x004e: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004f: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|0x0051: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0052: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0053|0x0053: NEW_INSTANCE  (r0 I:java.util.concurrent.CountDownLatch) =  java.util.concurrent.CountDownLatch \l0x0055: INVOKE  (r0 I:java.util.concurrent.CountDownLatch), (r1 I:int) java.util.concurrent.CountDownLatch.\<init\>(int):void type: DIRECT \l0x0058: IGET  (r1 I:com.google.android.gms.common.images.ImageManager) = \l  (r12 I:com.google.android.gms.common.images.ImageManager$zab)\l com.google.android.gms.common.images.ImageManager.zab.zamq com.google.android.gms.common.images.ImageManager \l0x005a: INVOKE  (r1 I:android.os.Handler) = (r1 I:com.google.android.gms.common.images.ImageManager) com.google.android.gms.common.images.ImageManager.zag(com.google.android.gms.common.images.ImageManager):android.os.Handler type: STATIC \l0x005e: NEW_INSTANCE  (r2 I:com.google.android.gms.common.images.ImageManager$zad) =  com.google.android.gms.common.images.ImageManager$zad \l0x0060: IGET  (r7 I:com.google.android.gms.common.images.ImageManager) = \l  (r12 I:com.google.android.gms.common.images.ImageManager$zab)\l com.google.android.gms.common.images.ImageManager.zab.zamq com.google.android.gms.common.images.ImageManager \l0x0062: IGET  (r8 I:android.net.Uri) = \l  (r12 I:com.google.android.gms.common.images.ImageManager$zab)\l com.google.android.gms.common.images.ImageManager.zab.mUri android.net.Uri \l0x0064: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0065: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0066: INVOKE  \l  (r6 I:com.google.android.gms.common.images.ImageManager$zad)\l  (r7 I:com.google.android.gms.common.images.ImageManager)\l  (r8 I:android.net.Uri)\l  (r9 I:android.graphics.Bitmap)\l  (r10 I:boolean)\l  (r11 I:java.util.concurrent.CountDownLatch)\l com.google.android.gms.common.images.ImageManager.zad.\<init\>(com.google.android.gms.common.images.ImageManager, android.net.Uri, android.graphics.Bitmap, boolean, java.util.concurrent.CountDownLatch):void type: DIRECT \l0x0069: INVOKE  (r1 I:android.os.Handler), (r2 I:java.lang.Runnable) android.os.Handler.post(java.lang.Runnable):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x006c|SYNTHETIC\lSplitter:B:15:0x006c\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x006c\l|0x006c: INVOKE  (r0 I:java.util.concurrent.CountDownLatch) java.util.concurrent.CountDownLatch.await():void type: VIRTUAL A[Catch:\{ InterruptedException \-\> 0x0070 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x006f|0x006f: RETURN   \l}"];
Node_18 [shape=record,label="{18\:\ 0x0070|0x0070: CONST_STR  (r0 I:java.lang.String) =  \"ImageManager\" \l0x0072: IGET  (r1 I:android.net.Uri) = \l  (r12 I:com.google.android.gms.common.images.ImageManager$zab)\l com.google.android.gms.common.images.ImageManager.zab.mUri android.net.Uri \l0x0074: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0078: INVOKE  (r2 I:java.lang.String) = (r1 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x007c: INVOKE  (r2 I:int) = (r2 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0080: ARITH  (r2 I:int) = (r2 I:int) + (32 int) \l0x0082: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0084: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x0087: CONST_STR  (r2 I:java.lang.String) =  \"Latch interrupted while posting \" \l0x0089: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008c: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008f: INVOKE  (r1 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0093: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lExcHandler: InterruptedException null\lSplitter:B:15:0x006c\l}"];
Node_20 [shape=record,label="{20\:\ 0x0096|0x0096: RETURN   \l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.common.images.ImageManager.zab.run((r12 'this' I:com.google.android.gms.common.images.ImageManager$zab A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_10;
Node_8 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_16 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_18;
}

