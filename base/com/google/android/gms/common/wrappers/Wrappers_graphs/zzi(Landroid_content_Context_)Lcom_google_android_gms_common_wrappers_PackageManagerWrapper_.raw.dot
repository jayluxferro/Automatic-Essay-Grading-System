digraph "CFG forcom.google.android.gms.common.wrappers.Wrappers.zzi(Landroid\/content\/Context;)Lcom\/google\/android\/gms\/common\/wrappers\/PackageManagerWrapper;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:com.google.android.gms.common.wrappers.PackageManagerWrapper) = (r1 I:com.google.android.gms.common.wrappers.Wrappers) com.google.android.gms.common.wrappers.Wrappers.zzhy com.google.android.gms.common.wrappers.PackageManagerWrapper A[Catch:\{ all \-\> 0x001b \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0017 A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: INVOKE  (r0 I:android.content.Context) = (r2 I:android.content.Context) android.content.Context.getApplicationContext():android.content.Context type: VIRTUAL A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000c A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: GOTO  \-\> 0x0010 A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: INVOKE  (r2 I:android.content.Context) = (r2 I:android.content.Context) android.content.Context.getApplicationContext():android.content.Context type: VIRTUAL A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:com.google.android.gms.common.wrappers.PackageManagerWrapper) =  com.google.android.gms.common.wrappers.PackageManagerWrapper A[Catch:\{ all \-\> 0x001b \}]\l0x0012: INVOKE  \l  (r0 I:com.google.android.gms.common.wrappers.PackageManagerWrapper)\l  (r2 I:android.content.Context)\l com.google.android.gms.common.wrappers.PackageManagerWrapper.\<init\>(android.content.Context):void type: DIRECT A[Catch:\{ all \-\> 0x001b \}]\l0x0015: IPUT  \l  (r0 I:com.google.android.gms.common.wrappers.PackageManagerWrapper)\l  (r1 I:com.google.android.gms.common.wrappers.Wrappers)\l com.google.android.gms.common.wrappers.Wrappers.zzhy com.google.android.gms.common.wrappers.PackageManagerWrapper A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: IGET  (r2 I:com.google.android.gms.common.wrappers.PackageManagerWrapper) = (r1 I:com.google.android.gms.common.wrappers.Wrappers) com.google.android.gms.common.wrappers.Wrappers.zzhy com.google.android.gms.common.wrappers.PackageManagerWrapper A[Catch:\{ all \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|0x001a: RETURN  \l  (r2 I:com.google.android.gms.common.wrappers.PackageManagerWrapper)\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x001b: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|0x001c: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|0x001d: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private final synchronized com.google.android.gms.common.wrappers.PackageManagerWrapper com.google.android.gms.common.wrappers.Wrappers.zzi((r1 'this' I:com.google.android.gms.common.wrappers.Wrappers A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.util.VisibleForTesting, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

