digraph "CFG forcom.google.android.gms.common.GoogleApiAvailability.checkApiAvailability(Lcom\/google\/android\/gms\/common\/api\/GoogleApi;[Lcom\/google\/android\/gms\/common\/api\/GoogleApi;)Lcom\/google\/android\/gms\/tasks\/Task;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.gms.common.internal.Preconditions.checkNotNull(r5, \"Requested API must not be null.\")\lint r0 = r6.length\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v4 int) binds: [B:0:0x0000, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:2:0x0009\l|if (r1 \>= r0) goto L_0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|LOOP_END\lLOOP:0: B:1:0x0007\-\>B:2:0x0009\l|com.google.android.gms.common.internal.Preconditions.checkNotNull(r6[r1], \"Requested API must not be null.\")\lint r1 = r1 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|java.util.ArrayList r0 = new java.util.ArrayList(r6.length + 1)\lr0.add(r5)\lr0.addAll(java.util.Arrays.asList(r6))\l}"];
Node_4 [shape=record,label="{4\:\ 0x0036|RETURN\l|return com.google.android.gms.common.api.internal.GoogleApiManager.zabc().zaa((java.lang.Iterable\<? extends com.google.android.gms.common.api.GoogleApi\<?\>\>) r0).continueWith(new com.google.android.gms.common.zaa(r4))\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public com.google.android.gms.tasks.Task\<java.lang.Void\> com.google.android.gms.common.GoogleApiAvailability.checkApiAvailability((r4v0 'this' com.google.android.gms.common.GoogleApiAvailability A[IMMUTABLE_TYPE, THIS]), (r5v0 com.google.android.gms.common.api.GoogleApi\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 com.google.android.gms.common.api.GoogleApi\<?\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/gms\/common\/api\/GoogleApi\<, *\>;[, Lcom\/google\/android\/gms\/common\/api\/GoogleApi\<, *\>;), Lcom\/google\/android\/gms\/tasks\/Task\<, Ljava\/lang\/Void;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

