digraph "CFG forcom.google.android.gms.common.sqlite.CursorWrapper.\<init\>(Landroid\/database\/Cursor;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r3 I:android.database.CursorWrapper)\l  (r4 I:android.database.Cursor)\l android.database.CursorWrapper.\<init\>(android.database.Cursor):void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) android.database.CursorWrapper \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: CHECK_CAST  (r4 I:android.database.CursorWrapper) = (android.database.CursorWrapper) (r4 I:?[OBJECT, ARRAY]) \l0x000e: INVOKE  (r4 I:android.database.Cursor) = (r4 I:android.database.CursorWrapper) android.database.CursorWrapper.getWrappedCursor():android.database.Cursor type: VIRTUAL \l0x0012: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) android.database.AbstractWindowedCursor \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001b: CONST_STR  (r1 I:java.lang.String) =  \"Unknown type: \" \l0x001d: INVOKE  (r4 I:java.lang.Class) = (r4 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0021: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l0x0025: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0029: INVOKE  (r2 I:int) = (r4 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0034 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.String), (r4 I:java.lang.String) java.lang.String.concat(java.lang.String):java.lang.String type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: NEW_INSTANCE  (r4 I:java.lang.String) =  java.lang.String \l0x0036: INVOKE  (r4 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: CHECK_CAST  (r4 I:android.database.AbstractWindowedCursor) = (android.database.AbstractWindowedCursor) (r4 I:?[OBJECT, ARRAY]) \l0x003f: IPUT  \l  (r4 I:android.database.AbstractWindowedCursor)\l  (r3 I:com.google.android.gms.common.sqlite.CursorWrapper)\l com.google.android.gms.common.sqlite.CursorWrapper.zzez android.database.AbstractWindowedCursor \l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|0x0041: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.gms.common.sqlite.CursorWrapper.\<init\>((r3 'this' I:com.google.android.gms.common.sqlite.CursorWrapper A[IMMUTABLE_TYPE, THIS]), (r4 I:android.database.Cursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

