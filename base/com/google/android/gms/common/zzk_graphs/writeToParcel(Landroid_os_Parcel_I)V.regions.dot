digraph "CFG forcom.google.android.gms.common.zzk.writeToParcel(Landroid\/os\/Parcel;I)V" {
subgraph cluster_Region_1677029144 {
label = "R(3:0|(1:2)(1:3)|4) | DECL_VAR: android.os.IBinder null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r5 = com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.beginObjectHeader(r4)\lcom.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeString(r4, 1, r3.zzy, false)\l}"];
subgraph cluster_IfRegion_124505195 {
label = "IF [B:1:0x000d] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r3.zzz == null) goto L_0x000f\l}"];
subgraph cluster_Region_1833908003 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000f|android.util.Log.w(\"GoogleCertificatesQuery\", \"certificate binder is null\")\lr0 = null\l}"];
}
subgraph cluster_Region_1784402073 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0018|android.os.IBinder r0 = r3.zzz.asBinder()\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x001e|PHI: r0 \l  PHI: (r0v2 android.os.IBinder) = (r0v6 android.os.IBinder), (r0v8 android.os.IBinder) binds: [B:3:0x0018, B:2:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeIBinder(r4, 2, r0, false)\lcom.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeBoolean(r4, 3, r3.zzaa)\lcom.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeBoolean(r4, 4, r3.zzab)\lcom.google.android.gms.common.internal.safeparcel.SafeParcelWriter.finishObjectHeader(r4, r5)\l}"];
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0031}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.common.zzk.writeToParcel((r3v0 'this' com.google.android.gms.common.zzk A[IMMUTABLE_TYPE, THIS]), (r4v0 android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

