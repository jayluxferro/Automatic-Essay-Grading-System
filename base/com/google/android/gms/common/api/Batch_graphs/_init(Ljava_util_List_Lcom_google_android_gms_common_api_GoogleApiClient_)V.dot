digraph "CFG forcom.google.android.gms.common.api.Batch.\<init\>(Ljava\/util\/List;Lcom\/google\/android\/gms\/common\/api\/GoogleApiClient;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r4)\lr2.mLock = new java.lang.Object()\lr2.zaaz = r3.size()\lr2.zabc = new com.google.android.gms.common.api.PendingResult[r2.zaaz]\l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|if (r3.isEmpty() == false) goto L_0x0029\l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|setResult(new com.google.android.gms.common.api.BatchResult(com.google.android.gms.common.api.Status.RESULT_SUCCESS, r2.zabc))\l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|r4 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|LOOP_START\lPHI: r4 \l  PHI: (r4v7 int) = (r4v6 int), (r4v8 int) binds: [B:4:0x0029, B:7:0x0030] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x002a\-\>B:7:0x0030\l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|if (r4 \>= r3.size()) goto L_0x0045\l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|LOOP_END\lLOOP:0: B:5:0x002a\-\>B:7:0x0030\l|com.google.android.gms.common.api.PendingResult r0 = r3.get(r4)\lr2.zabc[r4] = r0\lr0.addStatusListener(new com.google.android.gms.common.api.zaa(r2))\lint r4 = r4 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0045|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.gms.common.api.Batch.\<init\>((r2v0 'this' com.google.android.gms.common.api.Batch A[IMMUTABLE_TYPE, THIS]), (r3v0 java.util.List\<com.google.android.gms.common.api.PendingResult\<?\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 com.google.android.gms.common.api.GoogleApiClient A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/google\/android\/gms\/common\/api\/PendingResult\<, *\>;\>;, Lcom\/google\/android\/gms\/common\/api\/GoogleApiClient;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_5;
Node_9 -> Node_8;
}

