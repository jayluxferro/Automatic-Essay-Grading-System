digraph "CFG forcom.google.android.gms.common.api.internal.zaam.onReportServiceBinding(Lcom\/google\/android\/gms\/common\/ConnectionResult;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.ref.WeakReference\<com.google.android.gms.common.api.internal.zaak\>) = (r4 I:com.google.android.gms.common.api.internal.zaam) com.google.android.gms.common.api.internal.zaam.zagj java.lang.ref.WeakReference \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:com.google.android.gms.common.api.internal.zaak) = (com.google.android.gms.common.api.internal.zaak) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r1 I:android.os.Looper) =  android.os.Looper.myLooper():android.os.Looper type: STATIC \l0x000f: INVOKE  (r2 I:com.google.android.gms.common.api.internal.zabe) = (r0 I:com.google.android.gms.common.api.internal.zaak) com.google.android.gms.common.api.internal.zaak.zad(com.google.android.gms.common.api.internal.zaak):com.google.android.gms.common.api.internal.zabe type: STATIC \l0x0013: IGET  (r2 I:com.google.android.gms.common.api.internal.zaaw) = (r2 I:com.google.android.gms.common.api.internal.zabe) com.google.android.gms.common.api.internal.zabe.zaed com.google.android.gms.common.api.internal.zaaw \l0x0015: INVOKE  (r2 I:android.os.Looper) = (r2 I:com.google.android.gms.common.api.GoogleApiClient) com.google.android.gms.common.api.GoogleApiClient.getLooper():android.os.Looper type: VIRTUAL \l0x0019: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: CONST_STR  (r2 I:java.lang.String) =  \"onReportServiceBinding must be called on the GoogleApiClient handler thread\" \l0x0021: INVOKE  (r1 I:boolean), (r2 I:java.lang.Object) com.google.android.gms.common.internal.Preconditions.checkState(boolean, java.lang.Object):void type: STATIC \l0x0024: INVOKE  (r1 I:java.util.concurrent.locks.Lock) = (r0 I:com.google.android.gms.common.api.internal.zaak) com.google.android.gms.common.api.internal.zaak.zac(com.google.android.gms.common.api.internal.zaak):java.util.concurrent.locks.Lock type: STATIC \l0x0028: INVOKE  (r1 I:java.util.concurrent.locks.Lock) java.util.concurrent.locks.Lock.lock():void type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|SYNTHETIC\lSplitter:B:8:0x002b\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x002b\l|0x002b: INVOKE  (r1 I:boolean) = \l  (r0 I:com.google.android.gms.common.api.internal.zaak)\l  (r3 I:int)\l com.google.android.gms.common.api.internal.zaak.zaa(com.google.android.gms.common.api.internal.zaak, int):boolean type: STATIC A[Catch:\{ all \-\> 0x0057 \}, TRY_ENTER]\l0x002e: NOP   A[TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0039 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: INVOKE  (r5 I:java.util.concurrent.locks.Lock) = (r0 I:com.google.android.gms.common.api.internal.zaak) com.google.android.gms.common.api.internal.zaak.zac(com.google.android.gms.common.api.internal.zaak):java.util.concurrent.locks.Lock type: STATIC \l0x0035: INVOKE  (r5 I:java.util.concurrent.locks.Lock) java.util.concurrent.locks.Lock.unlock():void type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|0x0038: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|SYNTHETIC\lSplitter:B:13:0x0039\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0039\l|0x0039: INVOKE  (r1 I:boolean) = (r5 I:com.google.android.gms.common.ConnectionResult) com.google.android.gms.common.ConnectionResult.isSuccess():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0057 \}, TRY_ENTER]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0046 A[Catch:\{ all \-\> 0x0057 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: IGET  (r1 I:com.google.android.gms.common.api.Api\<?\>) = (r4 I:com.google.android.gms.common.api.internal.zaam) com.google.android.gms.common.api.internal.zaam.mApi com.google.android.gms.common.api.Api A[Catch:\{ all \-\> 0x0057 \}]\l0x0041: IGET  (r2 I:boolean) = (r4 I:com.google.android.gms.common.api.internal.zaam) com.google.android.gms.common.api.internal.zaam.zaeb boolean A[Catch:\{ all \-\> 0x0057 \}]\l0x0043: INVOKE  \l  (r0 I:com.google.android.gms.common.api.internal.zaak)\l  (r5 I:com.google.android.gms.common.ConnectionResult)\l  (r1 I:com.google.android.gms.common.api.Api)\l  (r2 I:boolean)\l com.google.android.gms.common.api.internal.zaak.zaa(com.google.android.gms.common.api.internal.zaak, com.google.android.gms.common.ConnectionResult, com.google.android.gms.common.api.Api, boolean):void type: STATIC A[Catch:\{ all \-\> 0x0057 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|0x0046: INVOKE  (r5 I:boolean) = (r0 I:com.google.android.gms.common.api.internal.zaak) com.google.android.gms.common.api.internal.zaak.zak(com.google.android.gms.common.api.internal.zaak):boolean type: STATIC A[Catch:\{ all \-\> 0x0057 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004f A[Catch:\{ all \-\> 0x0057 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|0x004c: INVOKE  (r0 I:com.google.android.gms.common.api.internal.zaak) com.google.android.gms.common.api.internal.zaak.zaj(com.google.android.gms.common.api.internal.zaak):void type: STATIC A[Catch:\{ all \-\> 0x0057 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x004f|0x004f: INVOKE  (r5 I:java.util.concurrent.locks.Lock) = (r0 I:com.google.android.gms.common.api.internal.zaak) com.google.android.gms.common.api.internal.zaak.zac(com.google.android.gms.common.api.internal.zaak):java.util.concurrent.locks.Lock type: STATIC \l0x0053: INVOKE  (r5 I:java.util.concurrent.locks.Lock) java.util.concurrent.locks.Lock.unlock():void type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x0056|0x0056: RETURN   \l}"];
Node_22 [shape=record,label="{22\:\ 0x0057|ExcHandler: all null\lSplitter:B:8:0x002b\l|0x0057: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x0058|0x0058: INVOKE  (r0 I:java.util.concurrent.locks.Lock) = (r0 I:com.google.android.gms.common.api.internal.zaak) com.google.android.gms.common.api.internal.zaak.zac(com.google.android.gms.common.api.internal.zaak):java.util.concurrent.locks.Lock type: STATIC \l0x005c: INVOKE  (r0 I:java.util.concurrent.locks.Lock) java.util.concurrent.locks.Lock.unlock():void type: INTERFACE \l}"];
Node_24 [shape=record,label="{24\:\ 0x005f|0x005f: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.common.api.internal.zaam.onReportServiceBinding((r4 'this' I:com.google.android.gms.common.api.internal.zaam A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.gms.common.ConnectionResult A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_22;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_22;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

