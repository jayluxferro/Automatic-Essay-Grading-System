digraph "CFG forcom.google.android.gms.common.api.internal.zaaw.getConnectionResult(Lcom\/google\/android\/gms\/common\/api\/Api;)Lcom\/google\/android\/gms\/common\/ConnectionResult;" {
subgraph cluster_Region_751887115 {
label = "R(2:0|(2:(1:(1:(1:8)))|(2:11|(2:23|24)(1:(1:17)(3:20|21|22)))(1:27)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.zaen.lock()\l}"];
subgraph cluster_TryCatchRegion_195949793 {
label = "Try: R(2:(1:(1:(1:8)))|(2:11|(2:23|24)(1:(1:17)(3:20|21|22)))(1:27)) finally: R(3:28|29|30)";
node [shape=record,color=blue];
subgraph cluster_Region_1961945863 {
label = "R(2:(1:(1:(1:8)))|(2:11|(2:23|24)(1:(1:17)(3:20|21|22)))(1:27))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_584503632 {
label = "IF [B:3:0x0009] THEN: R(1:(1:(1:8))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|Catch:\{ all \-\> 0x0081 \}\l|if (isConnected() == false) goto L_0x000b     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
subgraph cluster_Region_154511034 {
label = "R(1:(1:(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1834701185 {
label = "R(1:(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_511715326 {
label = "IF [B:5:0x000d] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|Catch:\{ all \-\> 0x0081 \}\l|if (r2.zagt != true) goto L_0x0010     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
subgraph cluster_Region_172501295 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0017|Catch:\{ all \-\> 0x0081 \}\l|throw new java.lang.IllegalStateException(\"Cannot invoke getConnectionResult unless GoogleApiClient is connected\")     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
}
}
}
}
}
subgraph cluster_IfRegion_787238570 {
label = "IF [B:10:0x0022] THEN: R(2:11|(2:23|24)(1:(1:17)(3:20|21|22))) ELSE: R(1:27)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0022|Catch:\{ all \-\> 0x0081 \}\l|if (r2.zagy.containsKey(r3.getClientKey()) == true) goto L_0x0024     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
subgraph cluster_Region_692328496 {
label = "R(2:11|(2:23|24)(1:(1:17)(3:20|21|22)))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0024|Catch:\{ all \-\> 0x0081 \}\l|com.google.android.gms.common.ConnectionResult com.google.android.gms.common.ConnectionResult r0 = r2.zags.getConnectionResult(r3)     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
subgraph cluster_IfRegion_1808509700 {
label = "IF [B:12:0x002a] THEN: R(2:23|24) ELSE: R(1:(1:17)(3:20|21|22))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002a|Catch:\{ all \-\> 0x0081 \}\l|if (r0 != null) goto L_0x0067     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
subgraph cluster_Region_220165645 {
label = "R(2:23|24)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0067|r2.zaen.unlock()\l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|RETURN\l|return r0\l}"];
}
subgraph cluster_Region_428656047 {
label = "R(1:(1:17)(3:20|21|22)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_103595703 {
label = "IF [B:14:0x002e] THEN: R(1:17) ELSE: R(3:20|21|22) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002e|Catch:\{ all \-\> 0x0081 \}\l|if (r2.zagt == true) goto L_0x0030     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
subgraph cluster_Region_1306983948 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0037|RETURN\l|return com.google.android.gms.common.ConnectionResult.RESULT_SUCCESS\l}"];
}
subgraph cluster_Region_1607573474 {
label = "R(3:20|21|22)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ ?|Catch:\{ all \-\> 0x0081 \}\lSplitter:B:19:0x003a\l|android.util.Log.w(\"GoogleApiClientImpl\", zaay())     \/\/ Catch:\{ all \-\> 0x0081 \}\landroid.util.Log.wtf(\"GoogleApiClientImpl\", java.lang.String.valueOf(r3.getName()).concat(\" requested in getConnectionResult is not connected but is not present in the failed  connections map\"), new java.lang.Exception())     \/\/ Catch:\{ all \-\> 0x0081 \}\lcom.google.android.gms.common.ConnectionResult com.google.android.gms.common.ConnectionResult r3 = new com.google.android.gms.common.ConnectionResult(8, (android.app.PendingIntent) null)     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0061|r2.zaen.unlock()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0066|RETURN\l|return r3\l}"];
}
}
}
}
}
subgraph cluster_Region_20148228 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0080|Catch:\{ all \-\> 0x0081 \}\l|throw new java.lang.IllegalArgumentException(java.lang.String.valueOf(r3.getName()).concat(\" was never registered with GoogleApiClient\"))     \/\/ Catch:\{ all \-\> 0x0081 \}\l}"];
}
}
}
subgraph cluster_Region_2121100336 {
label = "R(3:28|29|30) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0081|ExcHandler:  FINALLY\lSplitter:B:1:0x0005\l}"];
Node_29 [shape=record,label="{29\:\ 0x0082|FINALLY_INSNS\l|r2.zaen.unlock()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0087|throw r3\l}"];
}
}
}
subgraph cluster_Region_2121100336 {
label = "R(3:28|29|30) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0081|ExcHandler:  FINALLY\lSplitter:B:1:0x0005\l}"];
Node_29 [shape=record,label="{29\:\ 0x0082|FINALLY_INSNS\l|r2.zaen.unlock()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0087|throw r3\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ all \-\> 0x0081 \}\lSplitter:B:1:0x0005\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000f|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0010|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0018|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002c|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0030|Catch:\{ all \-\> 0x0081 \}\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0032|DONT_GENERATE\l|java.util.concurrent.locks.Lock r0 = r2.zaen\lr0.unlock()\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0038}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x003a|SYNTHETIC\lSplitter:B:19:0x003a\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x006d|SYNTHETIC\lSplitter:B:25:0x006d\l}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|Catch:\{ all \-\> 0x0081 \}\lSplitter:B:25:0x006d\l}"];
MethodNode[shape=record,label="{public final com.google.android.gms.common.ConnectionResult com.google.android.gms.common.api.internal.zaaw.getConnectionResult((r2v0 'this' com.google.android.gms.common.api.internal.zaaw A[IMMUTABLE_TYPE, THIS]), (r3v0 com.google.android.gms.common.api.Api\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, android.support.annotation.NonNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/gms\/common\/api\/Api\<, *\>;), Lcom\/google\/android\/gms\/common\/ConnectionResult;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_10 -> Node_11;
Node_10 -> Node_25[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_23;
Node_23 -> Node_24;
Node_14 -> Node_15;
Node_14 -> Node_18[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_1 -> Node_2;
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_28;
Node_25 -> Node_26;
Node_25 -> Node_28;
Node_26 -> Node_27;
}

