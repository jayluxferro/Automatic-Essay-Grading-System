digraph "CFG forcom.google.android.gms.common.api.internal.BasePendingResult.await(JLjava\/util\/concurrent\/TimeUnit;)Lcom\/google\/android\/gms\/common\/api\/Result;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0002: CMP_L  (r0 I:int) = (r4 I:long), (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST_STR  (r0 I:java.lang.String) =  \"await must not be called on the UI thread when time is greater than zero.\" \l0x0008: INVOKE  (r0 I:java.lang.String) com.google.android.gms.common.internal.Preconditions.checkNotMainThread(java.lang.String):void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r0 I:boolean) = \l  (r3 I:com.google.android.gms.common.api.internal.BasePendingResult)\l com.google.android.gms.common.api.internal.BasePendingResult.zadu boolean \l0x000d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000e: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r1 I:?[int, boolean, short, byte, char]) \l0x000f: CONST_STR  (r2 I:java.lang.String) =  \"Result has already been consumed.\" \l0x0011: INVOKE  (r0 I:boolean), (r2 I:java.lang.Object) com.google.android.gms.common.internal.Preconditions.checkState(boolean, java.lang.Object):void type: STATIC \l0x0014: IGET  (r0 I:com.google.android.gms.common.api.internal.zacm\<R\>) = \l  (r3 I:com.google.android.gms.common.api.internal.BasePendingResult)\l com.google.android.gms.common.api.internal.BasePendingResult.zady com.google.android.gms.common.api.internal.zacm \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: CONST_STR  (r0 I:java.lang.String) =  \"Cannot await if then() has been called.\" \l0x001c: INVOKE  (r1 I:boolean), (r0 I:java.lang.Object) com.google.android.gms.common.internal.Preconditions.checkState(boolean, java.lang.Object):void type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|SYNTHETIC\lSplitter:B:8:0x001f\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x001f\l|0x001f: IGET  (r0 I:java.util.concurrent.CountDownLatch) = \l  (r3 I:com.google.android.gms.common.api.internal.BasePendingResult)\l com.google.android.gms.common.api.internal.BasePendingResult.zadq java.util.concurrent.CountDownLatch A[Catch:\{ InterruptedException \-\> 0x002d \}, TRY_ENTER]\l0x0021: INVOKE  (r4 I:boolean) = \l  (r0 I:java.util.concurrent.CountDownLatch)\l  (r4 I:long)\l  (r6 I:java.util.concurrent.TimeUnit)\l java.util.concurrent.CountDownLatch.await(long, java.util.concurrent.TimeUnit):boolean type: VIRTUAL A[Catch:\{ InterruptedException \-\> 0x002d \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0032 A[Catch:\{ InterruptedException \-\> 0x002d \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: SGET  (r4 I:com.google.android.gms.common.api.Status) =  com.google.android.gms.common.api.Status.RESULT_TIMEOUT com.google.android.gms.common.api.Status A[Catch:\{ InterruptedException \-\> 0x002d \}]\l0x0029: INVOKE  \l  (r3 I:com.google.android.gms.common.api.internal.BasePendingResult)\l  (r4 I:com.google.android.gms.common.api.Status)\l com.google.android.gms.common.api.internal.BasePendingResult.zab(com.google.android.gms.common.api.Status):void type: VIRTUAL A[Catch:\{ InterruptedException \-\> 0x002d \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: SGET  (r4 I:com.google.android.gms.common.api.Status) =  com.google.android.gms.common.api.Status.RESULT_INTERRUPTED com.google.android.gms.common.api.Status \l0x002f: INVOKE  \l  (r3 I:com.google.android.gms.common.api.internal.BasePendingResult)\l  (r4 I:com.google.android.gms.common.api.Status)\l com.google.android.gms.common.api.internal.BasePendingResult.zab(com.google.android.gms.common.api.Status):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lExcHandler: InterruptedException null\lSplitter:B:8:0x001f\l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|0x0032: INVOKE  (r4 I:boolean) = \l  (r3 I:com.google.android.gms.common.api.internal.BasePendingResult)\l com.google.android.gms.common.api.internal.BasePendingResult.isReady():boolean type: VIRTUAL \l0x0036: CONST_STR  (r5 I:java.lang.String) =  \"Result is not ready.\" \l0x0038: INVOKE  (r4 I:boolean), (r5 I:java.lang.Object) com.google.android.gms.common.internal.Preconditions.checkState(boolean, java.lang.Object):void type: STATIC \l0x003b: INVOKE  (r4 I:com.google.android.gms.common.api.Result) = \l  (r3 I:com.google.android.gms.common.api.internal.BasePendingResult)\l com.google.android.gms.common.api.internal.BasePendingResult.get():com.google.android.gms.common.api.Result type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: RETURN  (r4 I:R) \l}"];
MethodNode[shape=record,label="{public final R com.google.android.gms.common.api.internal.BasePendingResult.await((r3 'this' I:com.google.android.gms.common.api.internal.BasePendingResult A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.concurrent.TimeUnit A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(J, Ljava\/util\/concurrent\/TimeUnit;, )TR;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_15;
Node_13 -> Node_15;
Node_14 -> Node_13;
Node_15 -> Node_16;
}

