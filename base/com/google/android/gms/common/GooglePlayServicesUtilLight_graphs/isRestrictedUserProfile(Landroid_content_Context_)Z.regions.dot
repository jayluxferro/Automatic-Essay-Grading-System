digraph "CFG forcom.google.android.gms.common.GooglePlayServicesUtilLight.isRestrictedUserProfile(Landroid\/content\/Context;)Z" {
subgraph cluster_Region_785898160 {
label = "R(1:1) | DECL_VAR: android.os.Bundle null\l";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|RETURN\l|return com.google.android.gms.common.util.PlatformVersion.isAtLeastJellyBeanMR2() && r2 != null && \"true\".equals(r2.getString(\"restricted_profile\"))\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006|android.os.Bundle r2 = ((android.os.UserManager) r2.getSystemService(com.mapbox.services.android.navigation.p017v5.navigation.metrics.FeedbackEvent.FEEDBACK_SOURCE_UI)).getApplicationRestrictions(r2.getPackageName())\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0016|REMOVE\lADDED_TO_REGION\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0018}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0024|REMOVE\lADDED_TO_REGION\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0026}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.gms.common.GooglePlayServicesUtilLight.isRestrictedUserProfile((r2v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:2:0x0006, code lost:\l    r2 = ((android.os.UserManager) r2.getSystemService(com.mapbox.services.android.navigation.p017v5.navigation.metrics.FeedbackEvent.FEEDBACK_SOURCE_UI)).getApplicationRestrictions(r2.getPackageName());\l\lAnnotation[BUILD, android.annotation.TargetApi, \{value=18\}], Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9;
}

