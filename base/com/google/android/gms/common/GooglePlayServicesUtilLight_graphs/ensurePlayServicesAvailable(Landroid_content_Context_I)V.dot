digraph "CFG forcom.google.android.gms.common.GooglePlayServicesUtilLight.ensurePlayServicesAvailable(Landroid\/content\/Context;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r4 = com.google.android.gms.common.GoogleApiAvailabilityLight.getInstance().isGooglePlayServicesAvailable(r3, r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r4 == 0) goto L_0x003c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|android.content.Intent r3 = com.google.android.gms.common.GoogleApiAvailabilityLight.getInstance().getErrorResolutionIntent(r3, r4, \"e\")\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder(57)\lr2.append(\"GooglePlayServices not available due to error \")\lr2.append(r4)\landroid.util.Log.e(\"GooglePlayServicesUtil\", r2.toString())\l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|if (r3 != null) goto L_0x0034\l}"];
Node_4 [shape=record,label="{4\:\ 0x002e}"];
Node_5 [shape=record,label="{5\:\ 0x0033|throw new com.google.android.gms.common.GooglePlayServicesNotAvailableException(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0034}"];
Node_7 [shape=record,label="{7\:\ 0x003b|throw new com.google.android.gms.common.GooglePlayServicesRepairableException(r4, \"Google Play Services not available\", r3)\l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public static void com.google.android.gms.common.GooglePlayServicesUtilLight.ensurePlayServicesAvailable((r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.gms.common.GooglePlayServicesRepairableException, com.google.android.gms.common.GooglePlayServicesNotAvailableException]\}], Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}], Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

