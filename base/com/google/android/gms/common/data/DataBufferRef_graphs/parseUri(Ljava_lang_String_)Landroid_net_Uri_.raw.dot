digraph "CFG forcom.google.android.gms.common.data.DataBufferRef.parseUri(Ljava\/lang\/String;)Landroid\/net\/Uri;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.gms.common.data.DataHolder) = (r3 I:com.google.android.gms.common.data.DataBufferRef) com.google.android.gms.common.data.DataBufferRef.mDataHolder com.google.android.gms.common.data.DataHolder \l0x0002: IGET  (r1 I:int) = (r3 I:com.google.android.gms.common.data.DataBufferRef) com.google.android.gms.common.data.DataBufferRef.mDataRow int \l0x0004: IGET  (r2 I:int) = (r3 I:com.google.android.gms.common.data.DataBufferRef) com.google.android.gms.common.data.DataBufferRef.zalm int \l0x0006: INVOKE  (r4 I:java.lang.String) = \l  (r0 I:com.google.android.gms.common.data.DataHolder)\l  (r4 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:int)\l com.google.android.gms.common.data.DataHolder.getString(java.lang.String, int, int):java.lang.String type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r4 I:android.net.Uri) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  (r4 I:android.net.Uri) = (r4 I:java.lang.String) android.net.Uri.parse(java.lang.String):android.net.Uri type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN  (r4 I:android.net.Uri) \l}"];
MethodNode[shape=record,label="{protected android.net.Uri com.google.android.gms.common.data.DataBufferRef.parseUri((r3 'this' I:com.google.android.gms.common.data.DataBufferRef A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, com.google.android.gms.common.annotation.KeepForSdk, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

