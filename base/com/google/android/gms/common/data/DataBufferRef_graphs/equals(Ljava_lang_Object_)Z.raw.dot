digraph "CFG forcom.google.android.gms.common.data.DataBufferRef.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) com.google.android.gms.common.data.DataBufferRef \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0034 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CHECK_CAST  (r4 I:com.google.android.gms.common.data.DataBufferRef) = (com.google.android.gms.common.data.DataBufferRef) (r4 I:?[OBJECT, ARRAY]) \l0x0007: IGET  (r0 I:int) = (r4 I:com.google.android.gms.common.data.DataBufferRef) com.google.android.gms.common.data.DataBufferRef.mDataRow int \l0x0009: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x000d: IGET  (r2 I:int) = (r3 I:com.google.android.gms.common.data.DataBufferRef) com.google.android.gms.common.data.DataBufferRef.mDataRow int \l0x000f: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0013: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r2 I:java.lang.Object) com.google.android.gms.common.internal.Objects.equal(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0033 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IGET  (r0 I:int) = (r4 I:com.google.android.gms.common.data.DataBufferRef) com.google.android.gms.common.data.DataBufferRef.zalm int \l0x001b: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x001f: IGET  (r2 I:int) = (r3 I:com.google.android.gms.common.data.DataBufferRef) com.google.android.gms.common.data.DataBufferRef.zalm int \l0x0021: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0025: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r2 I:java.lang.Object) com.google.android.gms.common.internal.Objects.equal(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0033 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: IGET  (r4 I:com.google.android.gms.common.data.DataHolder) = (r4 I:com.google.android.gms.common.data.DataBufferRef) com.google.android.gms.common.data.DataBufferRef.mDataHolder com.google.android.gms.common.data.DataHolder \l0x002d: IGET  (r0 I:com.google.android.gms.common.data.DataHolder) = (r3 I:com.google.android.gms.common.data.DataBufferRef) com.google.android.gms.common.data.DataBufferRef.mDataHolder com.google.android.gms.common.data.DataHolder \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0033 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: RETURN  (r4 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: RETURN  (r1 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.gms.common.data.DataBufferRef.equals((r3 'this' I:com.google.android.gms.common.data.DataBufferRef A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
}

