digraph "CFG forcom.google.android.gms.common.data.DataHolder.writeToParcel(Landroid\/os\/Parcel;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r6 I:android.os.Parcel) com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.beginObjectHeader(android.os.Parcel):int type: STATIC \l0x0004: IGET  (r1 I:java.lang.String[]) = (r5 I:com.google.android.gms.common.data.DataHolder) com.google.android.gms.common.data.DataHolder.zalp java.lang.String[] \l0x0006: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: INVOKE  \l  (r6 I:android.os.Parcel)\l  (r2 I:int)\l  (r1 I:java.lang.String[])\l  (r3 I:boolean)\l com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeStringArray(android.os.Parcel, int, java.lang.String[], boolean):void type: STATIC \l0x000b: IGET  (r1 I:android.database.CursorWindow[]) = (r5 I:com.google.android.gms.common.data.DataHolder) com.google.android.gms.common.data.DataHolder.zalr android.database.CursorWindow[] \l0x000d: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000e: INVOKE  \l  (r6 I:android.os.Parcel)\l  (r4 I:int)\l  (r1 I:android.os.Parcelable[])\l  (r7 I:int)\l  (r3 I:boolean)\l com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeTypedArray(android.os.Parcel, int, android.os.Parcelable[], int, boolean):void type: STATIC \l0x0011: INVOKE  (r1 I:int) = (r5 I:com.google.android.gms.common.data.DataHolder) com.google.android.gms.common.data.DataHolder.getStatusCode():int type: VIRTUAL \l0x0015: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0016: INVOKE  (r6 I:android.os.Parcel), (r4 I:int), (r1 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeInt(android.os.Parcel, int, int):void type: STATIC \l0x0019: INVOKE  (r1 I:android.os.Bundle) = (r5 I:com.google.android.gms.common.data.DataHolder) com.google.android.gms.common.data.DataHolder.getMetadata():android.os.Bundle type: VIRTUAL \l0x001d: CONST  (r4 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x001e: INVOKE  \l  (r6 I:android.os.Parcel)\l  (r4 I:int)\l  (r1 I:android.os.Bundle)\l  (r3 I:boolean)\l com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeBundle(android.os.Parcel, int, android.os.Bundle, boolean):void type: STATIC \l0x0021: IGET  (r1 I:int) = (r5 I:com.google.android.gms.common.data.DataHolder) com.google.android.gms.common.data.DataHolder.zale int \l0x0023: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1000(0x3e8, float:1.401E\-42) ?[int, float, short, byte, char])\l \l0x0025: INVOKE  (r6 I:android.os.Parcel), (r3 I:int), (r1 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeInt(android.os.Parcel, int, int):void type: STATIC \l0x0028: INVOKE  (r6 I:android.os.Parcel), (r0 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.finishObjectHeader(android.os.Parcel, int):void type: STATIC \l0x002b: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x002d|0x002d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0032 \l}"];
Node_2 [shape=record,label="{2\:\ 0x002f|0x002f: INVOKE  (r5 I:com.google.android.gms.common.data.DataHolder) com.google.android.gms.common.data.DataHolder.close():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0032|0x0032: RETURN   \l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.common.data.DataHolder.writeToParcel((r5 'this' I:com.google.android.gms.common.data.DataHolder A[IMMUTABLE_TYPE, THIS]), (r6 I:android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

