digraph "CFG forcom.google.android.gms.common.data.DataHolder.zaa(Lcom\/google\/android\/gms\/common\/sqlite\/CursorWrapper;)[Landroid\/database\/CursorWindow;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0005\l|0x0005: INVOKE  (r1 I:int) = (r6 I:com.google.android.gms.common.sqlite.CursorWrapper) com.google.android.gms.common.sqlite.CursorWrapper.getCount():int type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}, TRY_ENTER]\l0x0009: INVOKE  (r2 I:android.database.CursorWindow) = (r6 I:com.google.android.gms.common.sqlite.CursorWrapper) com.google.android.gms.common.sqlite.CursorWrapper.getWindow():android.database.CursorWindow type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0069 \}]\l0x000e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0025 A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r5 I:int) = (r2 I:android.database.CursorWindow) android.database.CursorWindow.getStartPosition():int type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0025 A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: INVOKE  (r2 I:android.database.CursorWindow) android.database.CursorWindow.acquireReference():void type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x001a: INVOKE  \l  (r6 I:com.google.android.gms.common.sqlite.CursorWrapper)\l  (r3 I:android.database.CursorWindow)\l com.google.android.gms.common.sqlite.CursorWrapper.setWindow(android.database.CursorWindow):void type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x001d: INVOKE  (r0 I:java.util.ArrayList), (r2 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x0020: INVOKE  (r2 I:int) = (r2 I:android.database.CursorWindow) android.database.CursorWindow.getNumRows():int type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x0024: GOTO  \-\> 0x0026 A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:19:0x0059 A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: INVOKE  (r5 I:boolean) = \l  (r6 I:com.google.android.gms.common.sqlite.CursorWrapper)\l  (r2 I:int)\l com.google.android.gms.common.sqlite.CursorWrapper.moveToPosition(int):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0059 A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: INVOKE  (r5 I:android.database.CursorWindow) = (r6 I:com.google.android.gms.common.sqlite.CursorWrapper) com.google.android.gms.common.sqlite.CursorWrapper.getWindow():android.database.CursorWindow type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|0x0032: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003b A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: INVOKE  (r5 I:android.database.CursorWindow) android.database.CursorWindow.acquireReference():void type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x0037: INVOKE  \l  (r6 I:com.google.android.gms.common.sqlite.CursorWrapper)\l  (r3 I:android.database.CursorWindow)\l com.google.android.gms.common.sqlite.CursorWrapper.setWindow(android.database.CursorWindow):void type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x003a: GOTO  \-\> 0x0046 A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: NEW_INSTANCE  (r5 I:android.database.CursorWindow) =  android.database.CursorWindow A[Catch:\{ all \-\> 0x0069 \}]\l0x003d: INVOKE  (r5 I:android.database.CursorWindow), (r4 I:boolean) android.database.CursorWindow.\<init\>(boolean):void type: DIRECT A[Catch:\{ all \-\> 0x0069 \}]\l0x0040: INVOKE  (r5 I:android.database.CursorWindow), (r2 I:int) android.database.CursorWindow.setStartPosition(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x0043: INVOKE  \l  (r6 I:com.google.android.gms.common.sqlite.CursorWrapper)\l  (r2 I:int)\l  (r5 I:android.database.CursorWindow)\l com.google.android.gms.common.sqlite.CursorWrapper.fillWindow(int, android.database.CursorWindow):void type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|0x0046: INVOKE  (r2 I:int) = (r5 I:android.database.CursorWindow) android.database.CursorWindow.getNumRows():int type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|0x004a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0059 A[Catch:\{ all \-\> 0x0069 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|0x004c: INVOKE  (r0 I:java.util.ArrayList), (r5 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x004f: INVOKE  (r2 I:int) = (r5 I:android.database.CursorWindow) android.database.CursorWindow.getStartPosition():int type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x0053: INVOKE  (r5 I:int) = (r5 I:android.database.CursorWindow) android.database.CursorWindow.getNumRows():int type: VIRTUAL A[Catch:\{ all \-\> 0x0069 \}]\l0x0056: NOP   A[TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0057|0x0057: ARITH  (r2 I:int) = (r2 I:int) + (r5 I:int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0059|0x0059: INVOKE  (r6 I:com.google.android.gms.common.sqlite.CursorWrapper) com.google.android.gms.common.sqlite.CursorWrapper.close():void type: VIRTUAL \l0x005c: INVOKE  (r6 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0060: NEW_ARRAY  (r6 I:android.database.CursorWindow[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: android.database.CursorWindow[] \l0x0062: INVOKE  (r6 I:java.lang.Object[]) = (r0 I:java.util.ArrayList), (r6 I:java.lang.Object[]) java.util.ArrayList.toArray(java.lang.Object[]):java.lang.Object[] type: VIRTUAL \l0x0066: CHECK_CAST  (r6 I:android.database.CursorWindow[]) = (android.database.CursorWindow[]) (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0068|0x0068: RETURN  (r6 I:android.database.CursorWindow[]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0069|ExcHandler: all null\lSplitter:B:1:0x0005\l|0x0069: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_22 [shape=record,label="{22\:\ 0x006a|0x006a: INVOKE  (r6 I:com.google.android.gms.common.sqlite.CursorWrapper) com.google.android.gms.common.sqlite.CursorWrapper.close():void type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x006d|0x006d: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static android.database.CursorWindow[] com.google.android.gms.common.data.DataHolder.zaa((r6 I:com.google.android.gms.common.sqlite.CursorWrapper A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_8;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
}

