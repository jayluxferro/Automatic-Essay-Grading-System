digraph "CFG forcom.google.android.gms.common.data.DataHolder.zaca()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.zalq = new android.os.Bundle()\lr0 = 0\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v8 int) binds: [B:0:0x0000, B:3:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:3:0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|if (r1 \>= r4.zalp.length) goto L_0x001a\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|LOOP_END\lLOOP:0: B:1:0x0009\-\>B:3:0x000e\l|r4.zalq.putInt(r4.zalp[r1], r1)\lint r1 = r1 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|r4.zalu = new int[r4.zalr.length]\lr1 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:4:0x001a, B:7:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v6 int) = (r1v5 int), (r1v7 int) binds: [B:4:0x001a, B:7:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:5:0x0022\-\>B:7:0x0027\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|if (r0 \>= r4.zalr.length) goto L_0x0042\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|LOOP_END\lLOOP:1: B:5:0x0022\-\>B:7:0x0027\l|r4.zalu[r0] = r1\lint r3 = r4.zalr[r0].getNumRows()\lint r1 = r1 + (r3 \- (r1 \- r4.zalr[r0].getStartPosition()))\lint r0 = r0 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|r4.zalv = r1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final void com.google.android.gms.common.data.DataHolder.zaca((r4v0 'this' com.google.android.gms.common.data.DataHolder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_4;
Node_11 -> Node_8;
}

