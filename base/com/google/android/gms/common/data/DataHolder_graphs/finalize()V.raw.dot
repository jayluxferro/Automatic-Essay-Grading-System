digraph "CFG forcom.google.android.gms.common.data.DataHolder.finalize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:boolean) = (r4 I:com.google.android.gms.common.data.DataHolder) com.google.android.gms.common.data.DataHolder.zalw boolean A[Catch:\{ all \-\> 0x003f \}, TRY_ENTER]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003b A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IGET  (r0 I:android.database.CursorWindow[]) = (r4 I:com.google.android.gms.common.data.DataHolder) com.google.android.gms.common.data.DataHolder.zalr android.database.CursorWindow[] A[Catch:\{ all \-\> 0x003f \}]\l0x0006: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x003b A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: INVOKE  (r0 I:boolean) = (r4 I:com.google.android.gms.common.data.DataHolder) com.google.android.gms.common.data.DataHolder.isClosed():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003b A[Catch:\{ all \-\> 0x003f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: INVOKE  (r4 I:com.google.android.gms.common.data.DataHolder) com.google.android.gms.common.data.DataHolder.close():void type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0012: CONST_STR  (r0 I:java.lang.String) =  \"DataBuffer\" A[Catch:\{ all \-\> 0x003f \}]\l0x0014: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.Object) java.lang.Object.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0018: INVOKE  (r2 I:java.lang.String) = (r1 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x003f \}]\l0x001c: INVOKE  (r2 I:int) = (r2 I:java.lang.String) java.lang.String.length():int type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0020: ARITH  (r2 I:int) = (r2 I:int) + (178 int) A[Catch:\{ all \-\> 0x003f \}]\l0x0022: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x003f \}]\l0x0024: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT A[Catch:\{ all \-\> 0x003f \}]\l0x0027: CONST_STR  (r2 I:java.lang.String) =  \"Internal data leak within a DataBuffer object detected!  Be sure to explicitly call release() on all DataBuffer extending objects when you are done with them. (internal object: \" A[Catch:\{ all \-\> 0x003f \}]\l0x0029: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x002c: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x002f: CONST_STR  (r1 I:java.lang.String) =  \")\" A[Catch:\{ all \-\> 0x003f \}]\l0x0031: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0034: INVOKE  (r1 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x003f \}]\l0x0038: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x003f \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|0x003b: INVOKE  (r4 I:java.lang.Object) java.lang.Object.finalize():void type: SUPER \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|ExcHandler: all null\lSplitter:B:0:0x0000\l|0x003f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: INVOKE  (r4 I:java.lang.Object) java.lang.Object.finalize():void type: SUPER \l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|0x0043: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected final void com.google.android.gms.common.data.DataHolder.finalize((r4 'this' I:com.google.android.gms.common.data.DataHolder A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Throwable]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

