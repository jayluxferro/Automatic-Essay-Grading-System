digraph "CFG forcom.google.android.gms.common.data.BitmapTeleporter.writeToParcel(Landroid\/os\/Parcel;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.os.ParcelFileDescriptor) = (r4 I:com.google.android.gms.common.data.BitmapTeleporter) com.google.android.gms.common.data.BitmapTeleporter.zalf android.os.ParcelFileDescriptor \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x005c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.Bitmap) = (r4 I:com.google.android.gms.common.data.BitmapTeleporter) com.google.android.gms.common.data.BitmapTeleporter.zalg android.graphics.Bitmap \l0x0006: INVOKE  (r1 I:int) = (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.getRowBytes():int type: VIRTUAL \l0x000a: INVOKE  (r2 I:int) = (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x000e: ARITH  (r1 I:int) = (r1 I:int) * (r2 I:int) \l0x0010: INVOKE  (r1 I:java.nio.ByteBuffer) = (r1 I:int) java.nio.ByteBuffer.allocate(int):java.nio.ByteBuffer type: STATIC \l0x0014: INVOKE  (r0 I:android.graphics.Bitmap), (r1 I:java.nio.Buffer) android.graphics.Bitmap.copyPixelsToBuffer(java.nio.Buffer):void type: VIRTUAL \l0x0017: INVOKE  (r1 I:byte[]) = (r1 I:java.nio.ByteBuffer) java.nio.ByteBuffer.array():byte[] type: VIRTUAL \l0x001b: NEW_INSTANCE  (r2 I:java.io.BufferedOutputStream) =  java.io.BufferedOutputStream \l0x001d: INVOKE  (r3 I:java.io.FileOutputStream) = (r4 I:com.google.android.gms.common.data.BitmapTeleporter) com.google.android.gms.common.data.BitmapTeleporter.zabz():java.io.FileOutputStream type: DIRECT \l0x0021: INVOKE  \l  (r2 I:java.io.BufferedOutputStream)\l  (r3 I:java.io.OutputStream)\l java.io.BufferedOutputStream.\<init\>(java.io.OutputStream):void type: DIRECT \l0x0024: NEW_INSTANCE  (r3 I:java.io.DataOutputStream) =  java.io.DataOutputStream \l0x0026: INVOKE  \l  (r3 I:java.io.DataOutputStream)\l  (r2 I:java.io.OutputStream)\l java.io.DataOutputStream.\<init\>(java.io.OutputStream):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|SYNTHETIC\lSplitter:B:3:0x0029\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0029\l|0x0029: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) A[Catch:\{ IOException \-\> 0x004f \}, TRY_ENTER]\l0x002a: INVOKE  (r3 I:java.io.DataOutputStream), (r2 I:int) java.io.DataOutputStream.writeInt(int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x004f \}]\l0x002d: INVOKE  (r2 I:int) = (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x004f \}]\l0x0031: INVOKE  (r3 I:java.io.DataOutputStream), (r2 I:int) java.io.DataOutputStream.writeInt(int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x004f \}]\l0x0034: INVOKE  (r2 I:int) = (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x004f \}]\l0x0038: INVOKE  (r3 I:java.io.DataOutputStream), (r2 I:int) java.io.DataOutputStream.writeInt(int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x004f \}]\l0x003b: INVOKE  (r0 I:android.graphics.Bitmap$Config) = (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.getConfig():android.graphics.Bitmap$Config type: VIRTUAL A[Catch:\{ IOException \-\> 0x004f \}]\l0x003f: INVOKE  (r0 I:java.lang.String) = (r0 I:android.graphics.Bitmap$Config) android.graphics.Bitmap.Config.toString():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x004f \}]\l0x0043: INVOKE  (r3 I:java.io.DataOutputStream), (r0 I:java.lang.String) java.io.DataOutputStream.writeUTF(java.lang.String):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x004f \}]\l0x0046: INVOKE  (r3 I:java.io.DataOutputStream), (r1 I:byte[]) java.io.DataOutputStream.write(byte[]):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x004f \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0049|0x0049: INVOKE  (r3 I:java.io.Closeable) com.google.android.gms.common.data.BitmapTeleporter.zaa(java.io.Closeable):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x004d|ExcHandler: all null\lSplitter:B:9:0x0050\l|0x004d: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x004f|ExcHandler: IOException null\lSplitter:B:3:0x0029\l|0x004f: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0050|SYNTHETIC\lSplitter:B:9:0x0050\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0050\l|0x0050: NEW_INSTANCE  (r6 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x004d \}, TRY_ENTER]\l0x0052: CONST_STR  (r0 I:java.lang.String) =  \"Could not write into unlinked file\" A[Catch:\{ all \-\> 0x004d \}]\l0x0054: INVOKE  \l  (r6 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l  (r5 I:java.lang.Throwable)\l java.lang.IllegalStateException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x004d \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0057|0x0057: THROW  (r6 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004d \}, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0058|0x0058: INVOKE  (r3 I:java.io.Closeable) com.google.android.gms.common.data.BitmapTeleporter.zaa(java.io.Closeable):void type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x005b|0x005b: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x005c|0x005c: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x005d: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) \| (r0 I:?[int, boolean, short, byte, char]) \l0x005e: INVOKE  (r1 I:int) = (r5 I:android.os.Parcel) com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.beginObjectHeader(android.os.Parcel):int type: STATIC \l0x0062: IGET  (r2 I:int) = (r4 I:com.google.android.gms.common.data.BitmapTeleporter) com.google.android.gms.common.data.BitmapTeleporter.zale int \l0x0064: INVOKE  (r5 I:android.os.Parcel), (r0 I:int), (r2 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeInt(android.os.Parcel, int, int):void type: STATIC \l0x0067: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0068: IGET  (r2 I:android.os.ParcelFileDescriptor) = (r4 I:com.google.android.gms.common.data.BitmapTeleporter) com.google.android.gms.common.data.BitmapTeleporter.zalf android.os.ParcelFileDescriptor \l0x006a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006b: INVOKE  \l  (r5 I:android.os.Parcel)\l  (r0 I:int)\l  (r2 I:android.os.Parcelable)\l  (r6 I:int)\l  (r3 I:boolean)\l com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeParcelable(android.os.Parcel, int, android.os.Parcelable, int, boolean):void type: STATIC \l0x006e: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x006f: IGET  (r0 I:int) = (r4 I:com.google.android.gms.common.data.BitmapTeleporter) com.google.android.gms.common.data.BitmapTeleporter.mType int \l0x0071: INVOKE  (r5 I:android.os.Parcel), (r6 I:int), (r0 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.writeInt(android.os.Parcel, int, int):void type: STATIC \l0x0074: INVOKE  (r5 I:android.os.Parcel), (r1 I:int) com.google.android.gms.common.internal.safeparcel.SafeParcelWriter.finishObjectHeader(android.os.Parcel, int):void type: STATIC \l0x0077: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0078: IPUT  \l  (r5 I:android.os.ParcelFileDescriptor)\l  (r4 I:com.google.android.gms.common.data.BitmapTeleporter)\l com.google.android.gms.common.data.BitmapTeleporter.zalf android.os.ParcelFileDescriptor \l}"];
Node_15 [shape=record,label="{15\:\ 0x007a|0x007a: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.gms.common.data.BitmapTeleporter.writeToParcel((r4 'this' I:com.google.android.gms.common.data.BitmapTeleporter A[IMMUTABLE_TYPE, THIS]), (r5 I:android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_14;
Node_6 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_6;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

