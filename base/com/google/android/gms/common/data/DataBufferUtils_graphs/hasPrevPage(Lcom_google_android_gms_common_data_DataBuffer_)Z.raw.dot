digraph "CFG forcom.google.android.gms.common.data.DataBufferUtils.hasPrevPage(Lcom\/google\/android\/gms\/common\/data\/DataBuffer;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:android.os.Bundle) = (r1 I:com.google.android.gms.common.data.DataBuffer) com.google.android.gms.common.data.DataBuffer.getMetadata():android.os.Bundle type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST_STR  (r0 I:java.lang.String) =  \"prev_page_token\" \l0x0008: INVOKE  (r1 I:java.lang.String) = (r1 I:android.os.Bundle), (r0 I:java.lang.String) android.os.Bundle.getString(java.lang.String):java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: RETURN  (r1 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.gms.common.data.DataBufferUtils.hasPrevPage((r1 I:com.google.android.gms.common.data.DataBuffer\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/gms\/common\/data\/DataBuffer\<, *\>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

