digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.updatePeriodTrackSelection(JZ[Z)J" {
subgraph cluster_Region_1625463904 {
label = "R(6:0|(3:3|(1:9)(1:7)|8)|10|(2:(2:(1:17)(1:20)|18)(1:24)|19)|26|27) | DECL_VAR: boolean null, boolean null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.exoplayer2.trackselection.TrackSelectionArray com.google.android.exoplayer2.trackselection.TrackSelectionArray r8 = r11.trackSelectorResult.selections\lint r0 = 0\l}"];
subgraph cluster_LoopRegion_1302344370 {
label = "LOOP:0: (3:3|(1:9)(1:7)|8)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|if (r0 \< r8.length) goto L_0x000b\l}"];
subgraph cluster_Region_1091134561 {
label = "R(3:3|(1:9)(1:7)|8)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|boolean[] boolean[] r2 = r11.mayRetainStreamFlags\l}"];
subgraph cluster_IfRegion_233892688 {
label = "IF [B:4:0x000d, B:6:0x0017] THEN: R(1:9) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r14 == true) goto L_0x001f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|ADDED_TO_REGION\l|if (r11.trackSelectorResult.isEquivalent(r11.periodTrackSelectorResult, r0) == false) goto L_0x001f\l}"];
subgraph cluster_Region_137550924 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001f|r1 = false\l}"];
}
subgraph cluster_Region_726534291 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|r1 = true\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x001a|LOOP_END\lPHI: r1 \l  PHI: (r1v18 boolean) = (r1v17 boolean), (r1v21 boolean) binds: [B:30:0x001a, B:29:0x001a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:8:0x001a\l|r2[r0] = r1\lr0++\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0021|long long r12 = r11.mediaPeriod.selectTracks(r8.getAll(), r11.mayRetainStreamFlags, r11.sampleStreams, r15, r12)\lr11.periodTrackSelectorResult = r11.trackSelectorResult\lr11.hasEnabledTracks = false\lint r0 = 0\l}"];
subgraph cluster_LoopRegion_926819401 {
label = "LOOP:1: (2:(2:(1:17)(1:20)|18)(1:24)|19)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003b|if (r0 \< r11.sampleStreams.length) goto L_0x003d\l}"];
subgraph cluster_Region_1709824099 {
label = "R(2:(2:(1:17)(1:20)|18)(1:24)|19)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1867092691 {
label = "IF [B:14:0x0041] THEN: R(2:(1:17)(1:20)|18) ELSE: R(1:24)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0041|if (r11.sampleStreams[r0] != null) goto L_0x0043\l}"];
subgraph cluster_Region_1125706236 {
label = "R(2:(1:17)(1:20)|18)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_417616413 {
label = "IF [B:16:0x0047] THEN: R(1:17) ELSE: R(1:20)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0047|if (r8.get(r0) != null) goto L_0x0049\l}"];
subgraph cluster_Region_590557833 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0049|r1 = true\l}"];
}
subgraph cluster_Region_1701400065 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0052|r1 = false\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x004a|PHI: r1 \l  PHI: (r1v15 boolean) = (r1v14 boolean), (r1v16 boolean) binds: [B:20:0x0052, B:17:0x0049] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r1)\lr11.hasEnabledTracks = true\l}"];
}
subgraph cluster_Region_905772834 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x005b|PHI: r1 \l  PHI: (r1v11 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r8.get(r0) == null)\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x004f|LOOP_END\lLOOP:1: B:11:0x0038\-\>B:19:0x004f\l|r0++\l}"];
}
}
Node_26 [shape=record,label="{26\:\ 0x0061|r11.loadControl.onTracksSelected(r11.renderers, r11.trackSelectorResult.groups, r8)\l}"];
Node_27 [shape=record,label="{27\:\ 0x006c|RETURN\l|return r12\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0007|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v5 'i' int) binds: [B:0:0x0000, B:8:0x001a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:8:0x001a\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000f}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0038|LOOP_START\lPHI: r0 \l  PHI: (r0v3 'i' int) = (r0v2 'i' int), (r0v4 'i' int) binds: [B:10:0x0021, B:19:0x004f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:11:0x0038\-\>B:19:0x004f\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003d}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0043}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0054}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0058}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x005a}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x005f}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0021|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x001a|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x001a|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0061|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x004f|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x004f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.updatePeriodTrackSelection((r11v0 'this' com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder A[IMMUTABLE_TYPE, THIS]), (r12v0 'positionUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'forceRecreateStreams' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'streamResetFlags' boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_28[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_9 -> Node_30;
Node_7 -> Node_29;
Node_8 -> Node_1;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_31[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_21[style=dashed];
Node_16 -> Node_17;
Node_16 -> Node_20[style=dashed];
Node_17 -> Node_18;
Node_20 -> Node_18;
Node_18 -> Node_32;
Node_24 -> Node_33;
Node_19 -> Node_11;
Node_26 -> Node_27;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_25 -> Node_24;
Node_28 -> Node_10;
Node_29 -> Node_8;
Node_30 -> Node_8;
Node_31 -> Node_26;
Node_32 -> Node_19;
Node_33 -> Node_19;
}

