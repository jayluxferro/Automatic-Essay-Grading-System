digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.updatePeriodTrackSelection(JZ[Z)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: IGET  (r1 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.trackSelectorResult com.google.android.exoplayer2.trackselection.TrackSelectorResult \l0x0004: IGET  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray) = \l  (r1 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult)\l com.google.android.exoplayer2.trackselection.TrackSelectorResult.selections com.google.android.exoplayer2.trackselection.TrackSelectionArray \l0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IGET  (r1 I:int) = \l  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray A[D('trackSelections' com.google.android.exoplayer2.trackselection.TrackSelectionArray)])\l com.google.android.exoplayer2.trackselection.TrackSelectionArray.length int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r1 I:?[int, byte, short, char])  \-\> B:10:0x0021 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r2 I:boolean[]) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.mayRetainStreamFlags boolean[] \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('forceRecreateStreams' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IGET  (r1 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.trackSelectorResult com.google.android.exoplayer2.trackselection.TrackSelectorResult \l0x0011: IGET  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.periodTrackSelectorResult com.google.android.exoplayer2.trackselection.TrackSelectorResult \l0x0013: INVOKE  (r1 I:boolean) = \l  (r1 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult)\l  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult)\l  (r0 I:int A[D('i' int)])\l com.google.android.exoplayer2.trackselection.TrackSelectorResult.isEquivalent(com.google.android.exoplayer2.trackselection.TrackSelectorResult, int):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: APUT  \l  (r2 I:boolean[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r1 I:boolean A[IMMUTABLE_TYPE])\l \l0x001c: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IGET  (r1 I:com.google.android.exoplayer2.source.MediaPeriod) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.mediaPeriod com.google.android.exoplayer2.source.MediaPeriod \l0x0023: INVOKE  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelection[]) = \l  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray A[D('trackSelections' com.google.android.exoplayer2.trackselection.TrackSelectionArray)])\l com.google.android.exoplayer2.trackselection.TrackSelectionArray.getAll():com.google.android.exoplayer2.trackselection.TrackSelection[] type: VIRTUAL \l0x0027: IGET  (r3 I:boolean[]) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.mayRetainStreamFlags boolean[] \l0x0029: IGET  (r4 I:com.google.android.exoplayer2.source.SampleStream[]) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.sampleStreams com.google.android.exoplayer2.source.SampleStream[] \l0x002b: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY] A[D('streamResetFlags' boolean[])]) \l0x002c: MOVE  (r6 I:?[long, double]) = (r12 I:?[long, double] A[D('positionUs' long)]) \l0x002d: INVOKE  (r12 I:long A[D('positionUs' long)]) = \l  (r1 I:com.google.android.exoplayer2.source.MediaPeriod)\l  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelection[])\l  (r3 I:boolean[])\l  (r4 I:com.google.android.exoplayer2.source.SampleStream[])\l  (r5 I:boolean[])\l  (r6 I:long)\l com.google.android.exoplayer2.source.MediaPeriod.selectTracks(com.google.android.exoplayer2.trackselection.TrackSelection[], boolean[], com.google.android.exoplayer2.source.SampleStream[], boolean[], long):long type: INTERFACE \l0x0031: IGET  (r1 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.trackSelectorResult com.google.android.exoplayer2.trackselection.TrackSelectorResult \l0x0033: IPUT  \l  (r1 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult)\l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.periodTrackSelectorResult com.google.android.exoplayer2.trackselection.TrackSelectorResult \l0x0035: IPUT  \l  (r10 I:boolean)\l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.hasEnabledTracks boolean \l0x0037: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: IGET  (r1 I:com.google.android.exoplayer2.source.SampleStream[]) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.sampleStreams com.google.android.exoplayer2.source.SampleStream[] \l0x003a: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r1 I:?[int, byte, short, char])  \-\> B:26:0x0061 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: IGET  (r1 I:com.google.android.exoplayer2.source.SampleStream[]) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.sampleStreams com.google.android.exoplayer2.source.SampleStream[] \l0x003f: AGET  (r1 I:?[OBJECT, ARRAY]) = \l  (r1 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|0x0041: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0054 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|0x0043: INVOKE  (r1 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray A[D('trackSelections' com.google.android.exoplayer2.trackselection.TrackSelectionArray)])\l  (r0 I:int A[D('i' int)])\l com.google.android.exoplayer2.trackselection.TrackSelectionArray.get(int):com.google.android.exoplayer2.trackselection.TrackSelection type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|0x0047: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0052 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|0x0049: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: INVOKE  (r1 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x004d: IPUT  \l  (r9 I:boolean)\l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.hasEnabledTracks boolean \l}"];
Node_19 [shape=record,label="{19\:\ 0x004f|0x004f: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|0x0052: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|0x0054: INVOKE  (r1 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray A[D('trackSelections' com.google.android.exoplayer2.trackselection.TrackSelectionArray)])\l  (r0 I:int A[D('i' int)])\l com.google.android.exoplayer2.trackselection.TrackSelectionArray.get(int):com.google.android.exoplayer2.trackselection.TrackSelection type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|0x0058: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x005f \l}"];
Node_23 [shape=record,label="{23\:\ 0x005a|0x005a: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|0x005b: INVOKE  (r1 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l}"];
Node_25 [shape=record,label="{25\:\ 0x005f|0x005f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x0061|0x0061: IGET  (r1 I:com.google.android.exoplayer2.LoadControl) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.loadControl com.google.android.exoplayer2.LoadControl \l0x0063: IGET  (r2 I:com.google.android.exoplayer2.Renderer[]) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.renderers com.google.android.exoplayer2.Renderer[] \l0x0065: IGET  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.trackSelectorResult com.google.android.exoplayer2.trackselection.TrackSelectorResult \l0x0067: IGET  (r3 I:com.google.android.exoplayer2.source.TrackGroupArray) = \l  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult)\l com.google.android.exoplayer2.trackselection.TrackSelectorResult.groups com.google.android.exoplayer2.source.TrackGroupArray \l0x0069: INVOKE  \l  (r1 I:com.google.android.exoplayer2.LoadControl)\l  (r2 I:com.google.android.exoplayer2.Renderer[])\l  (r3 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray A[D('trackSelections' com.google.android.exoplayer2.trackselection.TrackSelectionArray)])\l com.google.android.exoplayer2.LoadControl.onTracksSelected(com.google.android.exoplayer2.Renderer[], com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.TrackSelectionArray):void type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x006c|0x006c: RETURN  (r12 I:long A[D('positionUs' long)]) \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.updatePeriodTrackSelection((r11 'this' I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder A[IMMUTABLE_TYPE, THIS]), (r12 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:boolean A[D('forceRecreateStreams' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:boolean[] A[D('streamResetFlags' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0007\-0x006c: r0 'i' int\l  0x0006\-0x006c: r8 'trackSelections' com.google.android.exoplayer2.trackselection.TrackSelectionArray\l  ?\-0x006c: r12 'positionUs' long\l  ?\-0x006c: r14 'forceRecreateStreams' boolean\l  ?\-0x006c: r15 'streamResetFlags' boolean[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_8;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_26;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_11;
Node_20 -> Node_18;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_19;
Node_25 -> Node_24;
Node_26 -> Node_27;
}

