digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.\<init\>([Lcom\/google\/android\/exoplayer2\/Renderer;[Lcom\/google\/android\/exoplayer2\/RendererCapabilities;JLcom\/google\/android\/exoplayer2\/trackselection\/TrackSelector;Lcom\/google\/android\/exoplayer2\/LoadControl;Lcom\/google\/android\/exoplayer2\/source\/MediaSource;Ljava\/lang\/Object;IZJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r2 I:com.google.android.exoplayer2.Renderer[] A[D('renderers' com.google.android.exoplayer2.Renderer[])])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.renderers com.google.android.exoplayer2.Renderer[] \l0x0005: IPUT  \l  (r3 I:com.google.android.exoplayer2.RendererCapabilities[] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.rendererCapabilities com.google.android.exoplayer2.RendererCapabilities[] \l0x0007: IPUT  \l  (r4 I:long A[D('rendererPositionOffsetUs' long)])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.rendererPositionOffsetUs long \l0x0009: IPUT  \l  (r6 I:com.google.android.exoplayer2.trackselection.TrackSelector A[D('trackSelector' com.google.android.exoplayer2.trackselection.TrackSelector)])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.trackSelector com.google.android.exoplayer2.trackselection.TrackSelector \l0x000b: IPUT  \l  (r7 I:com.google.android.exoplayer2.LoadControl A[D('loadControl' com.google.android.exoplayer2.LoadControl)])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.loadControl com.google.android.exoplayer2.LoadControl \l0x000d: IPUT  \l  (r8 I:com.google.android.exoplayer2.source.MediaSource A[D('mediaSource' com.google.android.exoplayer2.source.MediaSource)])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.mediaSource com.google.android.exoplayer2.source.MediaSource \l0x000f: INVOKE  (r0 I:java.lang.Object) = (r9 I:java.lang.Object A[D('periodUid' java.lang.Object)]) com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0013: IPUT  \l  (r0 I:java.lang.Object)\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.uid java.lang.Object \l0x0015: IPUT  \l  (r10 I:int A[D('periodIndex' int)])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.index int \l0x0017: IPUT  \l  (r11 I:boolean A[D('isLastPeriod' boolean)])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.isLast boolean \l0x0019: IPUT  \l  (r12 I:long A[D('startPositionUs' long)])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.startPositionUs long \l0x001b: ARRAY_LENGTH  (r0 I:int) = \l  (r2 I:?[] A[D('renderers' com.google.android.exoplayer2.Renderer[])])\l \l0x001c: NEW_ARRAY  (r0 I:com.google.android.exoplayer2.source.SampleStream[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.source.SampleStream[] \l0x001e: IPUT  \l  (r0 I:com.google.android.exoplayer2.source.SampleStream[])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.sampleStreams com.google.android.exoplayer2.source.SampleStream[] \l0x0020: ARRAY_LENGTH  (r0 I:int) = \l  (r2 I:?[] A[D('renderers' com.google.android.exoplayer2.Renderer[])])\l \l0x0021: NEW_ARRAY  (r0 I:boolean[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: boolean[] \l0x0023: IPUT  \l  (r0 I:boolean[])\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.mayRetainStreamFlags boolean[] \l0x0025: INVOKE  (r0 I:com.google.android.exoplayer2.upstream.Allocator) = \l  (r7 I:com.google.android.exoplayer2.LoadControl A[D('loadControl' com.google.android.exoplayer2.LoadControl)])\l com.google.android.exoplayer2.LoadControl.getAllocator():com.google.android.exoplayer2.upstream.Allocator type: INTERFACE \l0x0029: INVOKE  (r0 I:com.google.android.exoplayer2.source.MediaPeriod) = \l  (r8 I:com.google.android.exoplayer2.source.MediaSource A[D('mediaSource' com.google.android.exoplayer2.source.MediaSource)])\l  (r10 I:int A[D('periodIndex' int)])\l  (r0 I:com.google.android.exoplayer2.upstream.Allocator)\l  (r12 I:long A[D('startPositionUs' long)])\l com.google.android.exoplayer2.source.MediaSource.createPeriod(int, com.google.android.exoplayer2.upstream.Allocator, long):com.google.android.exoplayer2.source.MediaPeriod type: INTERFACE \l0x002d: IPUT  \l  (r0 I:com.google.android.exoplayer2.source.MediaPeriod)\l  (r1 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.mediaPeriod com.google.android.exoplayer2.source.MediaPeriod \l}"];
Node_1 [shape=record,label="{1\:\ 0x002f|0x002f: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.\<init\>((r1 'this' I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.android.exoplayer2.Renderer[] A[D('renderers' com.google.android.exoplayer2.Renderer[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.android.exoplayer2.RendererCapabilities[] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('rendererPositionOffsetUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.google.android.exoplayer2.trackselection.TrackSelector A[D('trackSelector' com.google.android.exoplayer2.trackselection.TrackSelector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.google.android.exoplayer2.LoadControl A[D('loadControl' com.google.android.exoplayer2.LoadControl), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.exoplayer2.source.MediaSource A[D('mediaSource' com.google.android.exoplayer2.source.MediaSource), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.Object A[D('periodUid' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('periodIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[D('isLastPeriod' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[D('startPositionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x002f: r2 'renderers' com.google.android.exoplayer2.Renderer[]\l  ?\-0x002f: r3 'rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[]\l  ?\-0x002f: r4 'rendererPositionOffsetUs' long\l  ?\-0x002f: r6 'trackSelector' com.google.android.exoplayer2.trackselection.TrackSelector\l  ?\-0x002f: r7 'loadControl' com.google.android.exoplayer2.LoadControl\l  ?\-0x002f: r8 'mediaSource' com.google.android.exoplayer2.source.MediaSource\l  ?\-0x002f: r9 'periodUid' java.lang.Object\l  ?\-0x002f: r10 'periodIndex' int\l  ?\-0x002f: r11 'isLastPeriod' boolean\l  ?\-0x002f: r12 'startPositionUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

