digraph "CFG forcom.google.android.exoplayer2.decoder.SimpleDecoder.queueInputBuffer(Lcom\/google\/android\/exoplayer2\/decoder\/DecoderInputBuffer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Object r1 = r2.lock\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r1)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|maybeThrowException()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|if (r3 != r2.dequeuedInputBuffer) goto L_0x001b\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|r0 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|PHI: r0 \l  PHI: (r0v3 boolean) = (r0v2 boolean), (r0v6 boolean) binds: [B:9:0x001b, B:5:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r0)\lr2.queuedInputBuffers.addLast(r3)\lmaybeNotifyDecodeLoop()\lr2.dequeuedInputBuffer = null\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|monitor\-exit(r1)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|r0 = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|REMOVE\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|REMOVE\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public final void com.google.android.exoplayer2.decoder.SimpleDecoder.queueInputBuffer((r2v0 'this' com.google.android.exoplayer2.decoder.SimpleDecoder A[IMMUTABLE_TYPE, THIS]), (r3v0 'inputBuffer' I A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TI;)V^TE;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_6;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

