digraph "CFG forcom.google.android.exoplayer2.decoder.SimpleDecoder.setInitialInputBufferSize(I)V" {
subgraph cluster_Region_1424750658 {
label = "R(4:0|(1:2)(1:6)|3|(1:5)) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r2 = 0\l}"];
subgraph cluster_IfRegion_1530232250 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.availableInputBufferCount == r4.availableInputBuffers.length) goto L_0x0008\l}"];
subgraph cluster_Region_1640101884 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|r1 = true\l}"];
}
subgraph cluster_Region_1916676319 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|r1 = false\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0009|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v4 boolean) binds: [B:6:0x0019, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r1)\lint int r3 = r4.availableInputBuffers.length\l}"];
subgraph cluster_LoopRegion_382660817 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:3:0x0009, B:5:0x0011] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000f\-\>B:5:0x0011\l|if (r2 \< r3) goto L_0x0011\l}"];
subgraph cluster_Region_152720380 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|LOOP_END\lLOOP:0: B:4:0x000f\-\>B:5:0x0011\l|r0.ensureSpaceForWrite(r5)\lr2++\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ 0x001b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected final void com.google.android.exoplayer2.decoder.SimpleDecoder.setInitialInputBufferSize((r4v0 'this' com.google.android.exoplayer2.decoder.SimpleDecoder A[IMMUTABLE_TYPE, THIS]), (r5v0 'size' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_6 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_5 -> Node_4;
Node_8 -> Node_7;
}

