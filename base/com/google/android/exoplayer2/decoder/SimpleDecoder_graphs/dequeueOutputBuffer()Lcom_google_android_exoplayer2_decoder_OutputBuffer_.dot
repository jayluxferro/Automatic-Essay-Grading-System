digraph "CFG forcom.google.android.exoplayer2.decoder.SimpleDecoder.dequeueOutputBuffer()Lcom\/google\/android\/exoplayer2\/decoder\/OutputBuffer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Object r1 = r2.lock\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r1)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|maybeThrowException()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r2.queuedOutputBuffers.isEmpty() == false) goto L_0x0011\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|r0 = null\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|monitor\-exit(r1)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\lPHI: r0 \l  PHI: (r0v6 O) = (r0v5 O), (r0v7 O) binds: [B:10:0x001a, B:6:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|com.google.android.exoplayer2.decoder.OutputBuffer r0 = (com.google.android.exoplayer2.decoder.OutputBuffer) r2.queuedOutputBuffers.removeFirst()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|monitor\-exit(r1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a}"];
Node_11 [shape=record,label="{11\:\ 0x001b|REMOVE\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|REMOVE\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public final O com.google.android.exoplayer2.decoder.SimpleDecoder.dequeueOutputBuffer((r2v0 'this' com.google.android.exoplayer2.decoder.SimpleDecoder A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TO;^TE;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_7;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

