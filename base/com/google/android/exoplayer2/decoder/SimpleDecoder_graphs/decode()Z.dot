digraph "CFG forcom.google.android.exoplayer2.decoder.SimpleDecoder.decode()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Object r4 = r7.lock\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|monitor\-enter(r4)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|LOOP_START\lSYNTHETIC\lLOOP:0: B:2:0x0004\-\>B:7:0x000e\l}"];
Node_3 [shape=record,label="{3\:\ ?}"];
Node_4 [shape=record,label="{4\:\ 0x0006|if (r7.released != false) goto L_0x0017\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008}"];
Node_6 [shape=record,label="{6\:\ 0x000c|if (canDecodeBuffer() != false) goto L_0x0017\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|LOOP_END\lLOOP:0: B:2:0x0004\-\>B:7:0x000e\l|r7.lock.wait()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|REMOVE\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|REMOVE\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|REMOVE\l|throw r3\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|SYNTHETIC\lDONT_GENERATE\l}"];
Node_12 [shape=record,label="{12\:\ ?}"];
Node_13 [shape=record,label="{13\:\ 0x0019|if (r7.released == false) goto L_0x001d\l}"];
Node_14 [shape=record,label="{14\:\ 0x001b|monitor\-exit(r4)\l}"];
Node_15 [shape=record,label="{15\:\ 0x001d|com.google.android.exoplayer2.decoder.DecoderInputBuffer r0 = (com.google.android.exoplayer2.decoder.DecoderInputBuffer) r7.queuedInputBuffers.removeFirst()\lO[] r5 = r7.availableOutputBuffers\lint r6 = r7.availableOutputBufferCount + \-1\lr7.availableOutputBufferCount = r6\lr1 = r5[r6]\lboolean r2 = r7.flushed\lr7.flushed = false\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|monitor\-exit(r4)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0035}"];
Node_18 [shape=record,label="{18\:\ 0x0039|if (r0.isEndOfStream() == false) goto L_0x004f\l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|r1.addFlag(4)\l}"];
Node_20 [shape=record,label="{20\:\ 0x003f|java.lang.Object r4 = r7.lock\l}"];
Node_21 [shape=record,label="{21\:\ 0x0041|monitor\-enter(r4)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0042|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ ?}"];
Node_24 [shape=record,label="{24\:\ 0x0044|if (r7.flushed == false) goto L_0x006c\l}"];
Node_25 [shape=record,label="{25\:\ 0x0046|releaseOutputBufferInternal(r1)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0049|releaseInputBufferInternal(r0)\l}"];
Node_27 [shape=record,label="{27\:\ 0x004c|monitor\-exit(r4)\l}"];
Node_28 [shape=record,label="{28\:\ 0x004d|SYNTHETIC\lRETURN\l|return true     \/\/ Catch:\{  \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x004f}"];
Node_30 [shape=record,label="{30\:\ 0x0053|if (r0.isDecodeOnly() == false) goto L_0x005a\l}"];
Node_31 [shape=record,label="{31\:\ 0x0055|r1.addFlag(Integer.MIN_VALUE)\l}"];
Node_32 [shape=record,label="{32\:\ 0x005a|r7.exception = decode(r0, r1, r2)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0062|if (r7.exception == null) goto L_0x003f\l}"];
Node_34 [shape=record,label="{34\:\ 0x0064|java.lang.Object r4 = r7.lock\l}"];
Node_35 [shape=record,label="{35\:\ 0x0066|monitor\-enter(r4)\l}"];
Node_36 [shape=record,label="{36\:\ 0x0067|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ ?|monitor\-exit(r4)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0068}"];
Node_39 [shape=record,label="{39\:\ 0x0069|REMOVE\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_40 [shape=record,label="{40\:\ 0x006a|REMOVE\l}"];
Node_41 [shape=record,label="{41\:\ 0x006b|REMOVE\l|throw r3\l}"];
Node_42 [shape=record,label="{42\:\ 0x006c|SYNTHETIC\lSplitter:B:42:0x006c\l}"];
Node_43 [shape=record,label="{43\:\ ?|Splitter:B:42:0x006c\l}"];
Node_44 [shape=record,label="{44\:\ 0x0070|if (r1.isDecodeOnly() == false) goto L_0x007f\l}"];
Node_45 [shape=record,label="{45\:\ 0x0072|r7.skippedOutputBufferCount = r7.skippedOutputBufferCount + 1\lreleaseOutputBufferInternal(r1)\l}"];
Node_46 [shape=record,label="{46\:\ 0x007c|REMOVE\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_47 [shape=record,label="{47\:\ 0x007d|REMOVE\l}"];
Node_48 [shape=record,label="{48\:\ 0x007e|REMOVE\l|throw r3\l}"];
Node_49 [shape=record,label="{49\:\ 0x007f|SYNTHETIC\lSplitter:B:49:0x007f\l}"];
Node_50 [shape=record,label="{50\:\ ?|Splitter:B:49:0x007f\l|r1.skippedOutputBufferCount = r7.skippedOutputBufferCount\lr7.skippedOutputBufferCount = 0\lr7.queuedOutputBuffers.addLast(r1)\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|return false     \/\/ Catch:\{  \}\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.decoder.SimpleDecoder.decode((r7v0 'this' com.google.android.exoplayer2.decoder.SimpleDecoder A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_2;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_51;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_29;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_46;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_42;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_20;
Node_33 -> Node_34[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_39;
Node_37 -> Node_38;
Node_38 -> Node_52;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_42 -> Node_43;
Node_42 -> Node_46;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_49;
Node_45 -> Node_26;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_49 -> Node_50;
Node_49 -> Node_46;
Node_50 -> Node_46;
Node_50 -> Node_26;
}

