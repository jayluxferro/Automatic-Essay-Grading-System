digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecInfo.isCodecSupported(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r11 == null) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r10.mimeType != null) goto L_0x000a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000a|java.lang.String r1 = com.google.android.exoplayer2.util.MimeTypes.getMediaMimeType(r11)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|if (r1 != null) goto L_0x0012\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010}"];
Node_8 [shape=record,label="{8\:\ 0x0012}"];
Node_9 [shape=record,label="{9\:\ 0x0018|if (r10.mimeType.equals(r1) != false) goto L_0x003c\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|logNoSupport(new java.lang.StringBuilder().append(\"codec.mime \").append(r11).append(\", \").append(r1).toString())\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|android.util.Pair r2 = com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getCodecProfileAndLevel(r11)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|if (r2 != null) goto L_0x0044\l}"];
Node_13 [shape=record,label="{13\:\ 0x0042}"];
Node_14 [shape=record,label="{14\:\ 0x0044|android.media.MediaCodecInfo$CodecProfileLevel[] r7 = getProfileLevels()\lint r8 = r7.length\lr6 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|LOOP_START\lPHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:14:0x0044, B:21:0x0068] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x004a\-\>B:21:0x0068\l|if (r6 \>= r8) goto L_0x006c\l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|r0 = r7[r6]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0058|if (r0.profile != ((java.lang.Integer) r2.first).intValue()) goto L_0x0068\l}"];
Node_18 [shape=record,label="{18\:\ 0x005a}"];
Node_19 [shape=record,label="{19\:\ 0x0064|if (r0.level \< ((java.lang.Integer) r2.second).intValue()) goto L_0x0068\l}"];
Node_20 [shape=record,label="{20\:\ 0x0066}"];
Node_21 [shape=record,label="{21\:\ 0x0068|LOOP_END\lLOOP:0: B:15:0x004a\-\>B:21:0x0068\l|r6 = r6 + 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x006c|logNoSupport(new java.lang.StringBuilder().append(\"codec.profileLevel, \").append(r11).append(\", \").append(r1).toString())\l}"];
Node_23 [shape=record,label="{23\:\ 0x0066|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0068|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0068|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.mediacodec.MediaCodecInfo.isCodecSupported((r10v0 'this' com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[IMMUTABLE_TYPE, THIS]), (r11v0 'codec' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_27;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_28;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_29;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_30;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_23[style=dashed];
Node_19 -> Node_26;
Node_20 -> Node_31;
Node_21 -> Node_15;
Node_22 -> Node_32;
Node_23 -> Node_20;
Node_24 -> Node_22;
Node_25 -> Node_21;
Node_26 -> Node_21;
}

