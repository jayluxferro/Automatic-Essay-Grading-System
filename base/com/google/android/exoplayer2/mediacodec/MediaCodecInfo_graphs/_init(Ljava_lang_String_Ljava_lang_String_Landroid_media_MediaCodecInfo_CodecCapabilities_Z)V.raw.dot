digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecInfo.\<init\>(Ljava\/lang\/String;Ljava\/lang\/String;Landroid\/media\/MediaCodecInfo$CodecCapabilities;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.lang.Object A[D('name' java.lang.String)]) com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0009: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x000b: IPUT  \l  (r0 I:java.lang.String)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.name java.lang.String \l0x000d: IPUT  \l  (r5 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.mimeType java.lang.String \l0x000f: IPUT  \l  (r6 I:android.media.MediaCodecInfo$CodecCapabilities A[D('capabilities' android.media.MediaCodecInfo$CodecCapabilities)])\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.capabilities android.media.MediaCodecInfo$CodecCapabilities \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('forceDisableAdaptive' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0029 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('capabilities' android.media.MediaCodecInfo$CodecCapabilities)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0029 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: INVOKE  (r0 I:boolean) = \l  (r6 I:android.media.MediaCodecInfo$CodecCapabilities A[D('capabilities' android.media.MediaCodecInfo$CodecCapabilities)])\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.isAdaptive(android.media.MediaCodecInfo$CodecCapabilities):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0029 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IPUT  \l  (r0 I:boolean)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.adaptive boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('capabilities' android.media.MediaCodecInfo$CodecCapabilities)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002b \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: INVOKE  (r0 I:boolean) = \l  (r6 I:android.media.MediaCodecInfo$CodecCapabilities A[D('capabilities' android.media.MediaCodecInfo$CodecCapabilities)])\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.isTunneling(android.media.MediaCodecInfo$CodecCapabilities):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: IPUT  \l  (r1 I:boolean)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.tunneling boolean \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: RETURN   \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.mediacodec.MediaCodecInfo.\<init\>((r3 'this' I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[D('mimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.media.MediaCodecInfo$CodecCapabilities A[D('capabilities' android.media.MediaCodecInfo$CodecCapabilities), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('forceDisableAdaptive' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x002c: r4 'name' java.lang.String\l  ?\-0x002c: r5 'mimeType' java.lang.String\l  ?\-0x002c: r6 'capabilities' android.media.MediaCodecInfo$CodecCapabilities\l  ?\-0x002c: r7 'forceDisableAdaptive' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_12 -> Node_6;
Node_13 -> Node_10;
}

