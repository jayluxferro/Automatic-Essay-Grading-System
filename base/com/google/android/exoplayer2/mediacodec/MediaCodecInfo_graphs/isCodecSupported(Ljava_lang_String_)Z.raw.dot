digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecInfo.isCodecSupported(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('codec' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r3 I:java.lang.String) = \l  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.mimeType java.lang.String \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: RETURN  (r3 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: INVOKE  (r1 I:java.lang.String) = (r11 I:java.lang.String A[D('codec' java.lang.String)]) com.google.android.exoplayer2.util.MimeTypes.getMediaMimeType(java.lang.String):java.lang.String type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('codecMimeType' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0012 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: IGET  (r3 I:java.lang.String) = \l  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.mimeType java.lang.String \l0x0014: INVOKE  (r3 I:boolean) = \l  (r3 I:java.lang.String)\l  (r1 I:java.lang.Object A[D('codecMimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|0x0018: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003c \l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|0x001a: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001c: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001f: CONST_STR  (r4 I:java.lang.String) =  \"codec.mime \" \l0x0021: INVOKE  (r3 I:java.lang.StringBuilder) = (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r3 I:java.lang.StringBuilder) = \l  (r3 I:java.lang.StringBuilder)\l  (r11 I:java.lang.String A[D('codec' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0029: CONST_STR  (r4 I:java.lang.String) =  \", \" \l0x002b: INVOKE  (r3 I:java.lang.StringBuilder) = (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r3 I:java.lang.StringBuilder) = \l  (r3 I:java.lang.StringBuilder)\l  (r1 I:java.lang.String A[D('codecMimeType' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0033: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0037: INVOKE  \l  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l  (r3 I:java.lang.String)\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.logNoSupport(java.lang.String):void type: DIRECT \l0x003a: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: INVOKE  (r2 I:android.util.Pair) = (r11 I:java.lang.String A[D('codec' java.lang.String)]) com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getCodecProfileAndLevel(java.lang.String):android.util.Pair type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|0x0040: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('codecProfileAndLevel' android.util.Pair\<java.lang.Integer, java.lang.Integer\>)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0044 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|0x0042: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: INVOKE  (r7 I:android.media.MediaCodecInfo$CodecProfileLevel[]) = \l  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.getProfileLevels():android.media.MediaCodecInfo$CodecProfileLevel[] type: VIRTUAL \l0x0048: ARRAY_LENGTH  (r8 I:int) = (r7 I:?[]) \l0x0049: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|0x004a: IF  (r6 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:23:0x006c \l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|0x004c: AGET  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x004e: IGET  (r9 I:int) = \l  (r0 I:android.media.MediaCodecInfo$CodecProfileLevel A[D('capabilities' android.media.MediaCodecInfo$CodecProfileLevel)])\l android.media.MediaCodecInfo.CodecProfileLevel.profile int \l0x0050: IGET  (r3 I:java.lang.Object) = \l  (r2 I:android.util.Pair A[D('codecProfileAndLevel' android.util.Pair\<java.lang.Integer, java.lang.Integer\>)])\l android.util.Pair.first java.lang.Object \l0x0052: CHECK_CAST  (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:?[OBJECT, ARRAY]) \l0x0054: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0058|0x0058: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0068 \l}"];
Node_19 [shape=record,label="{19\:\ 0x005a|0x005a: IGET  (r9 I:int) = \l  (r0 I:android.media.MediaCodecInfo$CodecProfileLevel A[D('capabilities' android.media.MediaCodecInfo$CodecProfileLevel)])\l android.media.MediaCodecInfo.CodecProfileLevel.level int \l0x005c: IGET  (r3 I:java.lang.Object) = \l  (r2 I:android.util.Pair A[D('codecProfileAndLevel' android.util.Pair\<java.lang.Integer, java.lang.Integer\>)])\l android.util.Pair.second java.lang.Object \l0x005e: CHECK_CAST  (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:?[OBJECT, ARRAY]) \l0x0060: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0064|0x0064: IF  (r9 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:22:0x0068 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0066|0x0066: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0068|0x0068: ARITH  (r3 I:int) = (r6 I:int) + (1 int) \l0x006a: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x006c|0x006c: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x006e: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0071: CONST_STR  (r4 I:java.lang.String) =  \"codec.profileLevel, \" \l0x0073: INVOKE  (r3 I:java.lang.StringBuilder) = (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0077: INVOKE  (r3 I:java.lang.StringBuilder) = \l  (r3 I:java.lang.StringBuilder)\l  (r11 I:java.lang.String A[D('codec' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007b: CONST_STR  (r4 I:java.lang.String) =  \", \" \l0x007d: INVOKE  (r3 I:java.lang.StringBuilder) = (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0081: INVOKE  (r3 I:java.lang.StringBuilder) = \l  (r3 I:java.lang.StringBuilder)\l  (r1 I:java.lang.String A[D('codecMimeType' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0085: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0089: INVOKE  \l  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l  (r3 I:java.lang.String)\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.logNoSupport(java.lang.String):void type: DIRECT \l0x008c: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.mediacodec.MediaCodecInfo.isCodecSupported((r10 'this' I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[IMMUTABLE_TYPE, THIS]), (r11 I:java.lang.String A[D('codec' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x004e\-0x006c: r0 'capabilities' android.media.MediaCodecInfo$CodecProfileLevel\l  0x000e\-0x008e: r1 'codecMimeType' java.lang.String\l  0x0040\-0x008e: r2 'codecProfileAndLevel' android.util.Pair\<java.lang.Integer, java.lang.Integer\>\l  ?\-0x008e: r11 'codec' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_5;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_5;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_5;
Node_22 -> Node_16;
Node_23 -> Node_5;
}

