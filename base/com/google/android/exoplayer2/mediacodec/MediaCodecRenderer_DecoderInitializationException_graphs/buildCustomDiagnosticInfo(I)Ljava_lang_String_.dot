digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException.buildCustomDiagnosticInfo(I)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 \>= 0) goto L_0x0020\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|java.lang.String r0 = \"neg_\"\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|PHI: r0 \l  PHI: (r0v1 'sign' java.lang.String) = (r0v0 'sign' java.lang.String), (r0v2 'sign' java.lang.String) binds: [B:4:0x0020, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|RETURN\l|return new java.lang.StringBuilder().append(\"com.google.android.exoplayer.MediaCodecTrackRenderer_\").append(r0).append(java.lang.Math.abs(r3)).toString()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|java.lang.String r0 = \"\"\l}"];
MethodNode[shape=record,label="{private static java.lang.String com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException.buildCustomDiagnosticInfo((r3v0 'errorCode' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_2;
}

