digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.getDecoderInfo(Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecSelector;Lcom\/google\/android\/exoplayer2\/Format;Z)Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecInfo;" {
subgraph cluster_Region_1385219301 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|RETURN\l|return r2.getDecoderInfo(r3.sampleMimeType, r4)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.mediacodec.MediaCodecInfo com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.getDecoderInfo((r1v0 'this' com.google.android.exoplayer2.mediacodec.MediaCodecRenderer A[IMMUTABLE_TYPE, THIS]), (r2v0 'mediaCodecSelector' com.google.android.exoplayer2.mediacodec.MediaCodecSelector A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'format' com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'requiresSecureDecoder' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

