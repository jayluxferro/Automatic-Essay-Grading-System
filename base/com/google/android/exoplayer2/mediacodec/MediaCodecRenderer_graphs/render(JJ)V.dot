digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render(JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r7.outputStreamEnded == false) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|renderToEndOfStream()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b}"];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r7.format != null) goto L_0x0025\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|r7.flagsOnlyBuffer.clear()\lint r0 = readSource(r7.formatHolder, r7.flagsOnlyBuffer, true)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|if (r0 != \-5) goto L_0x0046\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|onInputFormatChanged(r7.formatHolder.format)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|maybeInitCodec()\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|if (r7.codec == null) goto L_0x0057\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|com.google.android.exoplayer2.util.TraceUtil.beginSection(\"drainAndFeed\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|LOOP_START\lLOOP:0: B:11:0x0031\-\>B:12:0x0035\l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|LOOP_END\lLOOP:0: B:11:0x0031\-\>B:12:0x0035\l|if (drainOutputBuffer(r8, r10) != false) goto L_0x0031\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|LOOP_START\lLOOP:1: B:13:0x0037\-\>B:14:0x003b\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|LOOP_END\lLOOP:1: B:13:0x0037\-\>B:14:0x003b\l|if (feedInputBuffer() != false) goto L_0x0037\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|com.google.android.exoplayer2.util.TraceUtil.endSection()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|r7.decoderCounters.ensureUpdated()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|if (r0 != \-4) goto L_?\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|com.google.android.exoplayer2.util.Assertions.checkState(r7.flagsOnlyBuffer.isEndOfStream())\lr7.inputStreamEnded = true\lprocessEndOfStream()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|skipSource(r8)\lr7.flagsOnlyBuffer.clear()\lint r0 = readSource(r7.formatHolder, r7.flagsOnlyBuffer, false)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0068|if (r0 != \-5) goto L_0x0072\l}"];
Node_21 [shape=record,label="{21\:\ 0x006a|onInputFormatChanged(r7.formatHolder.format)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0072|if (r0 != \-4) goto L_0x0040\l}"];
Node_23 [shape=record,label="{23\:\ 0x0074|com.google.android.exoplayer2.util.Assertions.checkState(r7.flagsOnlyBuffer.isEndOfStream())\lr7.inputStreamEnded = true\lprocessEndOfStream()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0037|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x003d|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.render((r7v0 'this' com.google.android.exoplayer2.mediacodec.MediaCodecRenderer A[IMMUTABLE_TYPE, THIS]), (r8v0 'positionUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'elapsedRealtimeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_26;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_17;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_11;
Node_12 -> Node_24[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_13;
Node_14 -> Node_25[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_27;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_28;
Node_18 -> Node_29;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_16;
Node_22 -> Node_16;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_16;
Node_24 -> Node_13;
Node_25 -> Node_15;
}

