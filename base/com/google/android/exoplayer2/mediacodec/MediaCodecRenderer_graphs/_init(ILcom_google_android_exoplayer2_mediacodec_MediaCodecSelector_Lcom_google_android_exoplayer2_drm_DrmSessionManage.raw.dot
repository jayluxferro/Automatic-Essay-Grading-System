digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.\<init\>(ILcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecSelector;Lcom\/google\/android\/exoplayer2\/drm\/DrmSessionManager;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  \l  (r3 I:com.google.android.exoplayer2.BaseRenderer)\l  (r4 I:int A[D('trackType' int)])\l com.google.android.exoplayer2.BaseRenderer.\<init\>(int):void type: DIRECT \l0x0004: SGET  (r0 I:int) =  com.google.android.exoplayer2.util.Util.SDK_INT int \l0x0006: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:5:0x0041 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x000e: INVOKE  (r0 I:java.lang.Object) = \l  (r5 I:java.lang.Object A[D('mediaCodecSelector' com.google.android.exoplayer2.mediacodec.MediaCodecSelector)])\l com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0012: CHECK_CAST  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecSelector) = (com.google.android.exoplayer2.mediacodec.MediaCodecSelector) (r0 I:?[OBJECT, ARRAY]) \l0x0014: IPUT  \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecSelector)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.mediaCodecSelector com.google.android.exoplayer2.mediacodec.MediaCodecSelector \l0x0016: IPUT  \l  (r6 I:com.google.android.exoplayer2.drm.DrmSessionManager\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\> A[D('drmSessionManager' com.google.android.exoplayer2.drm.DrmSessionManager\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\>)])\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drmSessionManager com.google.android.exoplayer2.drm.DrmSessionManager \l0x0018: IPUT  \l  (r7 I:boolean A[D('playClearSamplesWithoutKeys' boolean)])\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.playClearSamplesWithoutKeys boolean \l0x001a: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) =  com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x001c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l  (r1 I:int)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.\<init\>(int):void type: DIRECT \l0x001f: IPUT  \l  (r0 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x0021: INVOKE  (r0 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) =  com.google.android.exoplayer2.decoder.DecoderInputBuffer.newFlagsOnlyInstance():com.google.android.exoplayer2.decoder.DecoderInputBuffer type: STATIC \l0x0025: IPUT  \l  (r0 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.flagsOnlyBuffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x0027: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.FormatHolder) =  com.google.android.exoplayer2.FormatHolder \l0x0029: INVOKE  (r0 I:com.google.android.exoplayer2.FormatHolder) com.google.android.exoplayer2.FormatHolder.\<init\>():void type: DIRECT \l0x002c: IPUT  \l  (r0 I:com.google.android.exoplayer2.FormatHolder)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.formatHolder com.google.android.exoplayer2.FormatHolder \l0x002e: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0030: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0033: IPUT  \l  (r0 I:java.util.List\<java.lang.Long\>)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.decodeOnlyPresentationTimestamps java.util.List \l0x0035: NEW_INSTANCE  (r0 I:android.media.MediaCodec$BufferInfo) =  android.media.MediaCodec$BufferInfo \l0x0037: INVOKE  (r0 I:android.media.MediaCodec$BufferInfo) android.media.MediaCodec.BufferInfo.\<init\>():void type: DIRECT \l0x003a: IPUT  \l  (r0 I:android.media.MediaCodec$BufferInfo)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.outputBufferInfo android.media.MediaCodec$BufferInfo \l0x003c: IPUT  \l  (r1 I:int)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReconfigurationState int \l0x003e: IPUT  \l  (r1 I:int)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReinitializationState int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0040|0x0040: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|0x0041: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.\<init\>((r3 'this' I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('trackType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.google.android.exoplayer2.mediacodec.MediaCodecSelector A[D('mediaCodecSelector' com.google.android.exoplayer2.mediacodec.MediaCodecSelector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.google.android.exoplayer2.drm.DrmSessionManager\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('playClearSamplesWithoutKeys' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0042: r4 'trackType' int\l  ?\-0x0042: r5 'mediaCodecSelector' com.google.android.exoplayer2.mediacodec.MediaCodecSelector\l  0x0000\-0x0042: r6 'drmSessionManager' com.google.android.exoplayer2.drm.DrmSessionManager\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\>\l  ?\-0x0042: r7 'playClearSamplesWithoutKeys' boolean\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I, Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecSelector;, Lcom\/google\/android\/exoplayer2\/drm\/DrmSessionManager, \<, Lcom\/google\/android\/exoplayer2\/drm\/FrameworkMediaCrypto;, \>;Z)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

