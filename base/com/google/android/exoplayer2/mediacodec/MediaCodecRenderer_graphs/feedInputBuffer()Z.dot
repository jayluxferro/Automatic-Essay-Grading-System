digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r21.codec == null) goto L_0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r21.codecReinitializationState == 2) goto L_0x0013\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r21.inputStreamEnded == false) goto L_0x0015\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015}"];
Node_8 [shape=record,label="{8\:\ 0x0019|if (r21.inputIndex \>= 0) goto L_0x0048\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|r21.inputIndex = r21.codec.dequeueInputBuffer(0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|if (r21.inputIndex \>= 0) goto L_0x0031\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|SYNTHETIC\lRETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|com.google.android.exoplayer2.decoder.DecoderInputBuffer r2 = r21.buffer\lr2.data = r21.inputBuffers[r21.inputIndex]\lr21.buffer.clear()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0048}"];
Node_14 [shape=record,label="{14\:\ 0x004d|if (r21.codecReinitializationState != 1) goto L_0x0077\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f}"];
Node_16 [shape=record,label="{16\:\ 0x0053|if (r21.codecNeedsEosPropagationWorkaround == false) goto L_0x005c\l}"];
Node_17 [shape=record,label="{17\:\ 0x0055|r21.codecReinitializationState = 2\l}"];
Node_18 [shape=record,label="{18\:\ 0x005c|r21.codecReceivedEos = true\lr21.codec.queueInputBuffer(r21.inputIndex, 0, 0, 0, 4)\lr21.inputIndex = \-1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0077}"];
Node_20 [shape=record,label="{20\:\ 0x007b|if (r21.codecNeedsAdaptationWorkaroundBuffer == false) goto L_0x00ac\l}"];
Node_21 [shape=record,label="{21\:\ 0x007d|r21.codecNeedsAdaptationWorkaroundBuffer = false\lr21.buffer.data.put(ADAPTATION_WORKAROUND_BUFFER)\lr21.codec.queueInputBuffer(r21.inputIndex, 0, ADAPTATION_WORKAROUND_BUFFER.length, 0, 0)\lr21.inputIndex = \-1\lr21.codecReceivedBuffers = true\l}"];
Node_22 [shape=record,label="{22\:\ 0x00ac|r15 = 0\l}"];
Node_23 [shape=record,label="{23\:\ 0x00b1|if (r21.waitingForKeys == false) goto L_0x00bd\l}"];
Node_24 [shape=record,label="{24\:\ 0x00b3|r20 = \-4\l}"];
Node_25 [shape=record,label="{25\:\ 0x00b5|PHI: r15 r20 \l  PHI: (r15v2 'adaptiveReconfigurationBytes' int) = (r15v1 'adaptiveReconfigurationBytes' int), (r15v0 'adaptiveReconfigurationBytes' int) binds: [B:35:0x00f5, B:24:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v1 'result' int) = (r20v0 'result' int), (r20v2 'result' int) binds: [B:35:0x00f5, B:24:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x00b8|if (r20 != \-3) goto L_0x010f\l}"];
Node_27 [shape=record,label="{27\:\ 0x00ba|SYNTHETIC\lRETURN\l|return false\l}"];
Node_28 [shape=record,label="{28\:\ 0x00bd}"];
Node_29 [shape=record,label="{29\:\ 0x00c2|if (r21.codecReconfigurationState != 1) goto L_0x00f5\l}"];
Node_30 [shape=record,label="{30\:\ 0x00c4|r19 = 0\l}"];
Node_31 [shape=record,label="{31\:\ 0x00c6|LOOP_START\lPHI: r19 \l  PHI: (r19v1 'i' int) = (r19v0 'i' int), (r19v2 'i' int) binds: [B:30:0x00c4, B:33:0x00d4] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:31:0x00c6\-\>B:33:0x00d4\l}"];
Node_32 [shape=record,label="{32\:\ 0x00d2|if (r19 \>= r21.format.initializationData.size()) goto L_0x00f0\l}"];
Node_33 [shape=record,label="{33\:\ 0x00d4|LOOP_END\lLOOP:0: B:31:0x00c6\-\>B:33:0x00d4\l|r21.buffer.data.put(r21.format.initializationData.get(r19))\lint r19 = r19 + 1\l}"];
Node_34 [shape=record,label="{34\:\ 0x00f0|r21.codecReconfigurationState = 2\l}"];
Node_35 [shape=record,label="{35\:\ 0x00f5|int r15 = r21.buffer.data.position()\lcom.google.android.exoplayer2.FormatHolder r2 = r21.formatHolder\lcom.google.android.exoplayer2.decoder.DecoderInputBuffer r3 = r21.buffer\lint r20 = readSource(r2, r3, false)\l}"];
Node_36 [shape=record,label="{36\:\ 0x010f}"];
Node_37 [shape=record,label="{37\:\ 0x0112|if (r20 != \-5) goto L_0x0135\l}"];
Node_38 [shape=record,label="{38\:\ 0x0114}"];
Node_39 [shape=record,label="{39\:\ 0x0119|if (r21.codecReconfigurationState != 2) goto L_0x0127\l}"];
Node_40 [shape=record,label="{40\:\ 0x011b|r21.buffer.clear()\lr21.codecReconfigurationState = 1\l}"];
Node_41 [shape=record,label="{41\:\ 0x0127|r0 = r21\lonInputFormatChanged(r21.formatHolder.format)\l}"];
Node_42 [shape=record,label="{42\:\ 0x0135}"];
Node_43 [shape=record,label="{43\:\ 0x013d|if (r21.buffer.isEndOfStream() == false) goto L_0x0193\l}"];
Node_44 [shape=record,label="{44\:\ 0x013f}"];
Node_45 [shape=record,label="{45\:\ 0x0144|if (r21.codecReconfigurationState != 2) goto L_0x0152\l}"];
Node_46 [shape=record,label="{46\:\ 0x0146|r21.buffer.clear()\lr21.codecReconfigurationState = 1\l}"];
Node_47 [shape=record,label="{47\:\ 0x0152|r21.inputStreamEnded = true\l}"];
Node_48 [shape=record,label="{48\:\ 0x015b|if (r21.codecReceivedBuffers != false) goto L_0x0163\l}"];
Node_49 [shape=record,label="{49\:\ 0x015d|processEndOfStream()\l}"];
Node_50 [shape=record,label="{50\:\ 0x0163}"];
Node_51 [shape=record,label="{51\:\ 0x0165|SYNTHETIC\lSplitter:B:51:0x0165\l}"];
Node_52 [shape=record,label="{52\:\ ?|Catch:\{ CryptoException \-\> 0x0187 \}\lSplitter:B:51:0x0165\l}"];
Node_53 [shape=record,label="{53\:\ 0x0167|Catch:\{ CryptoException \-\> 0x0187 \}\l|if (r21.codecNeedsEosPropagationWorkaround == false) goto L_0x016c     \/\/ Catch:\{ CryptoException \-\> 0x0187 \}\l}"];
Node_54 [shape=record,label="{54\:\ 0x0169|Catch:\{ CryptoException \-\> 0x0187 \}\l}"];
Node_55 [shape=record,label="{55\:\ 0x016c|Catch:\{ CryptoException \-\> 0x0187 \}\l|r21.codecReceivedEos = true     \/\/ Catch:\{ CryptoException \-\> 0x0187 \}\lr21.codec.queueInputBuffer(r21.inputIndex, 0, 0, 0, 4)     \/\/ Catch:\{ CryptoException \-\> 0x0187 \}\lr21.inputIndex = \-1     \/\/ Catch:\{ CryptoException \-\> 0x0187 \}\l}"];
Node_56 [shape=record,label="{56\:\ 0x0187|ExcHandler: CryptoException (r18v1 'e' android.media.MediaCodec$CryptoException A[CUSTOM_DECLARE])\lSplitter:B:51:0x0165\l|android.media.MediaCodec$CryptoException r18 = move\-exception\l}"];
Node_57 [shape=record,label="{57\:\ 0x0188|r0 = r18\l}"];
Node_58 [shape=record,label="{58\:\ 0x0192|throw com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(r0, getIndex())\l}"];
Node_59 [shape=record,label="{59\:\ 0x0193}"];
Node_60 [shape=record,label="{60\:\ 0x0197|if (r21.waitingForFirstSyncFrame == false) goto L_0x01b9\l}"];
Node_61 [shape=record,label="{61\:\ 0x0199}"];
Node_62 [shape=record,label="{62\:\ 0x01a1|if (r21.buffer.isKeyFrame() != false) goto L_0x01b9\l}"];
Node_63 [shape=record,label="{63\:\ 0x01a3|r21.buffer.clear()\l}"];
Node_64 [shape=record,label="{64\:\ 0x01af|if (r21.codecReconfigurationState != 2) goto L_0x01b6\l}"];
Node_65 [shape=record,label="{65\:\ 0x01b1|r21.codecReconfigurationState = 1\l}"];
Node_66 [shape=record,label="{66\:\ 0x01b6|SYNTHETIC\lRETURN\l|return true\l}"];
Node_67 [shape=record,label="{67\:\ 0x01b9|r21.waitingForFirstSyncFrame = false\lboolean r16 = r21.buffer.isEncrypted()\lr21.waitingForKeys = shouldWaitForKeys(r16)\l}"];
Node_68 [shape=record,label="{68\:\ 0x01d6|if (r21.waitingForKeys == false) goto L_0x01db\l}"];
Node_69 [shape=record,label="{69\:\ 0x01d8|SYNTHETIC\lRETURN\l|return false\l}"];
Node_70 [shape=record,label="{70\:\ 0x01db}"];
Node_71 [shape=record,label="{71\:\ 0x01df|if (r21.codecNeedsDiscardToSpsWorkaround == false) goto L_0x0200\l}"];
Node_72 [shape=record,label="{72\:\ 0x01e1|if (r16 != false) goto L_0x0200\l}"];
Node_73 [shape=record,label="{73\:\ 0x01e3|com.google.android.exoplayer2.util.NalUnitUtil.discardToSps(r21.buffer.data)\l}"];
Node_74 [shape=record,label="{74\:\ 0x01f6|if (r21.buffer.data.position() != 0) goto L_0x01fb\l}"];
Node_75 [shape=record,label="{75\:\ 0x01f8|SYNTHETIC\lRETURN\l|return true\l}"];
Node_76 [shape=record,label="{76\:\ 0x01fb|r21.codecNeedsDiscardToSpsWorkaround = false\l}"];
Node_77 [shape=record,label="{77\:\ 0x0200}"];
Node_78 [shape=record,label="{78\:\ 0x0202|SYNTHETIC\lSplitter:B:78:0x0202\l}"];
Node_79 [shape=record,label="{79\:\ ?|Catch:\{ CryptoException \-\> 0x0277 \}\lSplitter:B:78:0x0202\l|long r6 = r21.buffer.timeUs     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\l}"];
Node_80 [shape=record,label="{80\:\ 0x020e|Catch:\{ CryptoException \-\> 0x0277 \}\l|if (r21.buffer.isDecodeOnly() == false) goto L_0x021b     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\l}"];
Node_81 [shape=record,label="{81\:\ 0x0210|Catch:\{ CryptoException \-\> 0x0277 \}\l|r21.decodeOnlyPresentationTimestamps.add(java.lang.Long.valueOf(r6))     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\l}"];
Node_82 [shape=record,label="{82\:\ 0x021b|Catch:\{ CryptoException \-\> 0x0277 \}\l|r21.buffer.flip()     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\lcom.google.android.exoplayer2.decoder.DecoderInputBuffer r2 = r21.buffer     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\lonQueueInputBuffer(r2)     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\l}"];
Node_83 [shape=record,label="{83\:\ 0x022b|Catch:\{ CryptoException \-\> 0x0277 \}\l|if (r16 == false) goto L_0x025e     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\l}"];
Node_84 [shape=record,label="{84\:\ 0x022d|Catch:\{ CryptoException \-\> 0x0277 \}\l|android.media.MediaCodec$CryptoInfo r5 = getFrameworkCryptoInfo(r21.buffer, r15)     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\lr21.codec.queueSecureInputBuffer(r21.inputIndex, 0, r5, r6, 0)     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\l}"];
Node_85 [shape=record,label="{85\:\ 0x0242|Catch:\{ CryptoException \-\> 0x0277 \}\l|r21.inputIndex = \-1     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\lr21.codecReceivedBuffers = true     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\lr21.codecReconfigurationState = 0     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\lcom.google.android.exoplayer2.decoder.DecoderCounters r2 = r21.decoderCounters     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\lr2.inputBufferCount = r2.inputBufferCount + 1     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\l}"];
Node_86 [shape=record,label="{86\:\ 0x025e|Catch:\{ CryptoException \-\> 0x0277 \}\l|r21.codec.queueInputBuffer(r21.inputIndex, 0, r21.buffer.data.limit(), r6, 0)     \/\/ Catch:\{ CryptoException \-\> 0x0277 \}\l}"];
Node_87 [shape=record,label="{87\:\ 0x0277|ExcHandler: CryptoException (r18v0 'e' android.media.MediaCodec$CryptoException A[CUSTOM_DECLARE])\lSplitter:B:78:0x0202\l|android.media.MediaCodec$CryptoException r18 = move\-exception\l}"];
Node_88 [shape=record,label="{88\:\ 0x0278|r0 = r18\l}"];
Node_89 [shape=record,label="{89\:\ 0x0282|throw com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(r0, getIndex())\l}"];
Node_90 [shape=record,label="{90\:\ 0x00f0|SYNTHETIC\l}"];
Node_91 [shape=record,label="{91\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_92 [shape=record,label="{92\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_93 [shape=record,label="{93\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_94 [shape=record,label="{94\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_95 [shape=record,label="{95\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_96 [shape=record,label="{96\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer((r21v0 'this' com.google.android.exoplayer2.mediacodec.MediaCodecRenderer A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_91;
Node_18 -> Node_17;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_92;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_36;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_90;
Node_33 -> Node_31;
Node_34 -> Node_35;
Node_35 -> Node_25;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_42;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_93;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_59;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_94;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_56;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_95;
Node_55 -> Node_54;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_67;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_67;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_66;
Node_65 -> Node_66;
Node_67 -> Node_68;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_77;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_77;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_78 -> Node_87;
Node_79 -> Node_80;
Node_80 -> Node_81[style=dashed];
Node_80 -> Node_82;
Node_81 -> Node_82;
Node_82 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_86;
Node_84 -> Node_85;
Node_85 -> Node_96;
Node_86 -> Node_85;
Node_87 -> Node_88;
Node_88 -> Node_89;
Node_90 -> Node_34;
}

