digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()V" {
subgraph cluster_Region_1081208122 {
label = "R(1:(1:(8:2|(2:4|(1:7)(1:(1:12)(1:36)))|13|(2:15|(1:20))|(1:22)|23|(1:25)|29)))";
node [shape=record,color=blue];
subgraph cluster_Region_1870257493 {
label = "R(1:(8:2|(2:4|(1:7)(1:(1:12)(1:36)))|13|(2:15|(1:20))|(1:22)|23|(1:25)|29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1525160840 {
label = "IF [B:1:0x0004] THEN: R(8:2|(2:4|(1:7)(1:(1:12)(1:36)))|13|(2:15|(1:20))|(1:22)|23|(1:25)|29) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (shouldInitCodec() != false) goto L_0x0007\l}"];
subgraph cluster_Region_47426195 {
label = "R(8:2|(2:4|(1:7)(1:(1:12)(1:36)))|13|(2:15|(1:20))|(1:22)|23|(1:25)|29)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|r18.drmSession = r18.pendingDrmSession\ljava.lang.String java.lang.String r15 = r18.format.sampleMimeType\landroid.media.MediaCrypto r14 = null\lboolean r11 = false\l}"];
subgraph cluster_IfRegion_1532926920 {
label = "IF [B:3:0x001b] THEN: R(2:4|(1:7)(1:(1:12)(1:36))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001b|if (r18.drmSession != null) goto L_0x001d\l}"];
subgraph cluster_Region_480909286 {
label = "R(2:4|(1:7)(1:(1:12)(1:36)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001d|int int r12 = r18.drmSession.getState()\l}"];
subgraph cluster_IfRegion_10028464 {
label = "IF [B:5:0x0025] THEN: R(1:7) ELSE: R(1:(1:12)(1:36))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0025|if (r12 == 0) goto L_0x0027\l}"];
subgraph cluster_Region_344565156 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0037|throw com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(r18.drmSession.getError(), getIndex())\l}"];
}
subgraph cluster_Region_901464341 {
label = "R(1:(1:12)(1:36)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1479313341 {
label = "IF [B:9:0x0039, B:11:0x003c] THEN: R(1:12) ELSE: R(1:36) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0039|if (r12 == 3) goto L_0x003e\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|ADDED_TO_REGION\l|if (r12 == 4) goto L_0x003e\l}"];
subgraph cluster_Region_22540912 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003e|android.media.MediaCrypto r14 = r18.drmSession.getMediaCrypto().getWrappedMediaCrypto()\lboolean r11 = r18.drmSession.requiresSecureDecoderComponent(r15)\l}"];
}
subgraph cluster_Region_798308465 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x0054|PHI: r11 r14 \l  PHI: (r11v1 'drmSessionRequiresSecureDecoder' boolean) = (r11v0 'drmSessionRequiresSecureDecoder' boolean), (r11v2 'drmSessionRequiresSecureDecoder' boolean) binds: [B:3:0x001b, B:12:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 'mediaCrypto' android.media.MediaCrypto) = (r14v0 'mediaCrypto' android.media.MediaCrypto), (r14v2 'mediaCrypto' android.media.MediaCrypto) binds: [B:3:0x001b, B:12:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.mediacodec.MediaCodecInfo r10 = null\l}"];
subgraph cluster_TryCatchRegion_3831440 {
label = "Try: R(2:15|(1:20)) catches: R(2:30|31)";
node [shape=record,color=blue];
subgraph cluster_Region_626426286 {
label = "R(2:15|(1:20))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ ?|Catch:\{ DecoderQueryException \-\> 0x01a0 \}\lSplitter:B:14:0x0057\l|com.google.android.exoplayer2.mediacodec.MediaCodecInfo r10 = getDecoderInfo(r18.mediaCodecSelector, r18.format, r11)     \/\/ Catch:\{ DecoderQueryException \-\> 0x01a0 \}\l}"];
subgraph cluster_IfRegion_464270086 {
label = "IF [B:16:0x0063, B:17:0x0065, B:19:0x0076] THEN: R(1:20) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0063|ADDED_TO_REGION\lCatch:\{ DecoderQueryException \-\> 0x01a0 \}\l|if (r10 == null) goto L_0x0065     \/\/ Catch:\{ DecoderQueryException \-\> 0x01a0 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0065|ADDED_TO_REGION\lCatch:\{ DecoderQueryException \-\> 0x01a0 \}\l|if (r11 == true) goto L_0x0067     \/\/ Catch:\{ DecoderQueryException \-\> 0x01a0 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0076|ADDED_TO_REGION\lCatch:\{ DecoderQueryException \-\> 0x01a0 \}\l|if ((r10 = getDecoderInfo(r18.mediaCodecSelector, r18.format, false)) != null) goto L_0x0078     \/\/ Catch:\{ DecoderQueryException \-\> 0x01a0 \}\l}"];
subgraph cluster_Region_1022806777 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0078|Catch:\{ DecoderQueryException \-\> 0x01a0 \}\l|android.util.Log.w(TAG, \"Drm session requires secure decoder for \" + r15 + \", but \" + \"no secure decoder available. Trying to proceed with \" + r10.name + \".\")     \/\/ Catch:\{ DecoderQueryException \-\> 0x01a0 \}\l}"];
}
}
}
subgraph cluster_Region_285709192 {
label = "R(2:30|31) | ExcHandler: DecoderQueryException (r13v0 'e' com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x01a0|ExcHandler: DecoderQueryException (r13v0 'e' com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException A[CUSTOM_DECLARE])\lSplitter:B:14:0x0057\l}"];
Node_31 [shape=record,label="{31\:\ 0x01a1|throwDecoderInitError(new com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException(r18.format, (java.lang.Throwable) r13, r11, \-49998))\l}"];
}
}
subgraph cluster_IfRegion_823941534 {
label = "IF [B:21:0x00a8] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x00a8|PHI: r10 \l  PHI: (r10v1 'decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo) = (r10v0 'decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo), (r10v2 'decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo), (r10v2 'decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo), (r10v3 'decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo), (r10v3 'decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo) binds: [B:31:0x01a1, B:16:0x0063, B:17:0x0065, B:19:0x0076, B:20:0x0078] A[DONT_GENERATE, DONT_INLINE]\l|if (r10 == null) goto L_0x00aa\l}"];
subgraph cluster_Region_1519965949 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x00aa|throwDecoderInitError(new com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException(r18.format, (java.lang.Throwable) null, r11, \-49999))\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x00be|java.lang.String java.lang.String r3 = r10.name\lr18.codecIsAdaptive = r10.adaptive\lr18.codecNeedsDiscardToSpsWorkaround = codecNeedsDiscardToSpsWorkaround(r3, r18.format)\lr18.codecNeedsFlushWorkaround = codecNeedsFlushWorkaround(r3)\lr18.codecNeedsAdaptationWorkaround = codecNeedsAdaptationWorkaround(r3)\lr18.codecNeedsEosPropagationWorkaround = codecNeedsEosPropagationWorkaround(r3)\lr18.codecNeedsEosFlushWorkaround = codecNeedsEosFlushWorkaround(r3)\lr18.codecNeedsEosOutputExceptionWorkaround = codecNeedsEosOutputExceptionWorkaround(r3)\lr18.codecNeedsMonoChannelCountWorkaround = codecNeedsMonoChannelCountWorkaround(r3, r18.format)\l}"];
subgraph cluster_TryCatchRegion_1506232246 {
label = "Try: R(1:25) catches: R(2:32|33)";
node [shape=record,color=blue];
subgraph cluster_Region_978199366 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ ?|Catch:\{ Exception \-\> 0x01b4 \}\lSplitter:B:24:0x0106\l|long long r8 = android.os.SystemClock.elapsedRealtime()     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lcom.google.android.exoplayer2.util.TraceUtil.beginSection(\"createCodec:\" + r3)     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lr18.codec = android.media.MediaCodec.createByCodecName(r3)     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lcom.google.android.exoplayer2.util.TraceUtil.endSection()     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lcom.google.android.exoplayer2.util.TraceUtil.beginSection(\"configureCodec\")     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lconfigureCodec(r10, r18.codec, r18.format, r14)     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lcom.google.android.exoplayer2.util.TraceUtil.endSection()     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lcom.google.android.exoplayer2.util.TraceUtil.beginSection(\"startCodec\")     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lr18.codec.start()     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lcom.google.android.exoplayer2.util.TraceUtil.endSection()     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\llong long r4 = android.os.SystemClock.elapsedRealtime()     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lonCodecInitialized(r3, r4, r4 \- r8)     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lr18.inputBuffers = r18.codec.getInputBuffers()     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\lr18.outputBuffers = r18.codec.getOutputBuffers()     \/\/ Catch:\{ Exception \-\> 0x01b4 \}\l}"];
}
subgraph cluster_Region_1263691761 {
label = "R(2:32|33) | ExcHandler: Exception (r13v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x01b4|ExcHandler: Exception (r13v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:24:0x0106\l}"];
Node_33 [shape=record,label="{33\:\ 0x01b5|throwDecoderInitError(new com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException(r18.format, (java.lang.Throwable) r13, r11, r3))\l}"];
}
}
Node_29 [shape=record,label="{29\:\ 0x0181|PHI: r6 \l  PHI: (r6v4 long) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r18.codecHotswapDeadlineMs = getState() == 2 ? android.os.SystemClock.elapsedRealtime() + MAX_CODEC_HOTSWAP_TIME_MS : com.google.android.exoplayer2.C1260C.TIME_UNSET\lr18.inputIndex = \-1\lr18.outputIndex = \-1\lr18.waitingForFirstSyncFrame = true\lr18.decoderCounters.decoderInitCount++\l}"];
}
}
}
}
subgraph cluster_Region_285709192 {
label = "R(2:30|31) | ExcHandler: DecoderQueryException (r13v0 'e' com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x01a0|ExcHandler: DecoderQueryException (r13v0 'e' com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException A[CUSTOM_DECLARE])\lSplitter:B:14:0x0057\l}"];
Node_31 [shape=record,label="{31\:\ 0x01a1|throwDecoderInitError(new com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException(r18.format, (java.lang.Throwable) r13, r11, \-49998))\l}"];
}
subgraph cluster_Region_1263691761 {
label = "R(2:32|33) | ExcHandler: Exception (r13v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x01b4|ExcHandler: Exception (r13v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:24:0x0106\l}"];
Node_33 [shape=record,label="{33\:\ 0x01b5|throwDecoderInitError(new com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException(r18.format, (java.lang.Throwable) r13, r11, r3))\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0027}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0038}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003b}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0057|SYNTHETIC\lSplitter:B:14:0x0057\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0067|Catch:\{ DecoderQueryException \-\> 0x01a0 \}\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0106|SYNTHETIC\lSplitter:B:24:0x0106\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0172}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0177}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0179}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x01c4}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected final void com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec((r18v0 'this' com.google.android.exoplayer2.mediacodec.MediaCodecRenderer A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_35[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_13[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_11 -> Node_12;
Node_11 -> Node_36[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_21[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_21[style=dashed];
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_21;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_25 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_26;
Node_29 -> Node_37;
Node_30 -> Node_31;
Node_31 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_26;
Node_0 -> Node_1;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_14 -> Node_15;
Node_14 -> Node_30;
Node_18 -> Node_19;
Node_24 -> Node_25;
Node_24 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_34;
Node_28 -> Node_29;
Node_34 -> Node_29;
}

