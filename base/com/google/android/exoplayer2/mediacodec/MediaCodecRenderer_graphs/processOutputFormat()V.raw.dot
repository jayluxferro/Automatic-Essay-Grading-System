digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.processOutputFormat()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0002: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: IGET  (r1 I:android.media.MediaCodec) = \l  (r4 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec \l0x0005: INVOKE  (r0 I:android.media.MediaFormat) = (r1 I:android.media.MediaCodec) android.media.MediaCodec.getOutputFormat():android.media.MediaFormat type: VIRTUAL \l0x0009: IGET  (r1 I:boolean) = \l  (r4 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsAdaptationWorkaround boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: CONST_STR  (r1 I:java.lang.String) =  \"width\" \l0x000f: INVOKE  (r1 I:int) = \l  (r0 I:android.media.MediaFormat A[D('format' android.media.MediaFormat)])\l  (r1 I:java.lang.String)\l android.media.MediaFormat.getInteger(java.lang.String):int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: CONST_STR  (r1 I:java.lang.String) =  \"height\" \l0x0017: INVOKE  (r1 I:int) = \l  (r0 I:android.media.MediaFormat A[D('format' android.media.MediaFormat)])\l  (r1 I:java.lang.String)\l android.media.MediaFormat.getInteger(java.lang.String):int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: IPUT  \l  (r2 I:boolean)\l  (r4 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.shouldSkipAdaptationWorkaroundOutputBuffer boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IGET  (r1 I:boolean) = \l  (r4 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsMonoChannelCountWorkaround boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0029 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: CONST_STR  (r1 I:java.lang.String) =  \"channel\-count\" \l0x0026: INVOKE  \l  (r0 I:android.media.MediaFormat A[D('format' android.media.MediaFormat)])\l  (r1 I:java.lang.String)\l  (r2 I:int)\l android.media.MediaFormat.setInteger(java.lang.String, int):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: IGET  (r1 I:android.media.MediaCodec) = \l  (r4 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec \l0x002b: INVOKE  \l  (r4 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r1 I:android.media.MediaCodec)\l  (r0 I:android.media.MediaFormat A[D('format' android.media.MediaFormat)])\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onOutputFormatChanged(android.media.MediaCodec, android.media.MediaFormat):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.processOutputFormat((r4 'this' I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0009\-0x002e: r0 'format' android.media.MediaFormat\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_7;
}

