digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0002: IGET  (r2 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0008: IGET  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReinitializationState int \l0x000a: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x000f: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputStreamEnded boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0015 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: RETURN  (r2 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0017: IGET  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:14:0x0048 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x001d: IGET  (r2 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec \l0x001f: CONST  (r8 I:?[long, double]) = (0 ?[long, double]) \l0x0021: INVOKE  (r2 I:int) = (r2 I:android.media.MediaCodec), (r8 I:long) android.media.MediaCodec.dequeueInputBuffer(long):int type: VIRTUAL \l0x0025: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0027: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int \l0x0029: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x002b: IGET  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:13:0x0031 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0033: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x0035: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0037: IGET  (r3 I:java.nio.ByteBuffer[]) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputBuffers java.nio.ByteBuffer[] \l0x0039: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x003b: IGET  (r4 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int \l0x003d: AGET  (r3 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x003f: IPUT  \l  (r3 I:java.nio.ByteBuffer)\l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.data java.nio.ByteBuffer \l0x0041: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0043: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x0045: INVOKE  \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.clear():void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|0x0048: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x004a: IGET  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReinitializationState int \l0x004c: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|0x004d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0077 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|0x004f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0051: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsEosPropagationWorkaround boolean \l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|0x0053: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x005c \l}"];
Node_18 [shape=record,label="{18\:\ 0x0055|0x0055: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0056: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0058: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReinitializationState int \l0x005a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x005c|0x005c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x005d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x005f: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReceivedEos boolean \l0x0061: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0063: IGET  (r2 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec \l0x0065: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0067: IGET  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int \l0x0069: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006a: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006b: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x006d: CONST  (r8 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x006e: INVOKE  \l  (r2 I:android.media.MediaCodec)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:long)\l  (r8 I:int)\l android.media.MediaCodec.queueInputBuffer(int, int, int, long, int):void type: VIRTUAL \l0x0071: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0072: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0074: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int \l}"];
Node_20 [shape=record,label="{20\:\ 0x0077|0x0077: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0079: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsAdaptationWorkaroundBuffer boolean \l}"];
Node_21 [shape=record,label="{21\:\ 0x007b|0x007b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00ac \l}"];
Node_22 [shape=record,label="{22\:\ 0x007d|0x007d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0080: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsAdaptationWorkaroundBuffer boolean \l0x0082: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0084: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x0086: IGET  (r2 I:java.nio.ByteBuffer) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.data java.nio.ByteBuffer \l0x0088: SGET  (r3 I:byte[]) =  com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.ADAPTATION_WORKAROUND_BUFFER byte[] \l0x008a: INVOKE  (r2 I:java.nio.ByteBuffer), (r3 I:byte[]) java.nio.ByteBuffer.put(byte[]):java.nio.ByteBuffer type: VIRTUAL \l0x008d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x008f: IGET  (r2 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec \l0x0091: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0093: IGET  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int \l0x0095: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0096: SGET  (r8 I:byte[]) =  com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.ADAPTATION_WORKAROUND_BUFFER byte[] \l0x0098: ARRAY_LENGTH  (r5 I:int) = (r8 I:?[]) \l0x0099: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x009b: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009c: INVOKE  \l  (r2 I:android.media.MediaCodec)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:long)\l  (r8 I:int)\l android.media.MediaCodec.queueInputBuffer(int, int, int, long, int):void type: VIRTUAL \l0x009f: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x00a0: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00a2: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int \l0x00a4: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00a5: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00a7: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReceivedBuffers boolean \l0x00a9: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ac|0x00ac: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ad: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00af: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.waitingForKeys boolean \l}"];
Node_24 [shape=record,label="{24\:\ 0x00b1|0x00b1: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00bd \l}"];
Node_25 [shape=record,label="{25\:\ 0x00b3|0x00b3: CONST  (r20 I:?[int, float, short, byte, char]) = (\-4 ?[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b5|0x00b5: CONST  (r2 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l0x00b6: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('result' int)])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b8|0x00b8: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x010f \l}"];
Node_28 [shape=record,label="{28\:\ 0x00ba|0x00ba: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_29 [shape=record,label="{29\:\ 0x00bd|0x00bd: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00bf: IGET  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReconfigurationState int \l0x00c1: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00c2|0x00c2: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00f5 \l}"];
Node_31 [shape=record,label="{31\:\ 0x00c4|0x00c4: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x00c6|0x00c6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00c8: IGET  (r2 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format \l0x00ca: IGET  (r2 I:java.util.List\<byte[]\>) = (r2 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.initializationData java.util.List \l0x00cc: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x00d0: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x00d2|0x00d2: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:35:0x00f0 \l}"];
Node_34 [shape=record,label="{34\:\ 0x00d4|0x00d4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00d6: IGET  (r2 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format \l0x00d8: IGET  (r2 I:java.util.List\<byte[]\>) = (r2 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.initializationData java.util.List \l0x00da: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l0x00dc: INVOKE  (r17 I:java.lang.Object) = (r2 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x00e0: CHECK_CAST  (r17 I:byte[]) = (byte[]) (r17 I:?[OBJECT, ARRAY]) \l0x00e2: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00e4: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x00e6: IGET  (r2 I:java.nio.ByteBuffer) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.data java.nio.ByteBuffer \l0x00e8: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY] A[D('data' byte[])]) \l0x00ea: INVOKE  (r2 I:java.nio.ByteBuffer), (r0 I:byte[]) java.nio.ByteBuffer.put(byte[]):java.nio.ByteBuffer type: VIRTUAL \l0x00ed: ARITH  (r19 I:int A[D('i' int)]) = (r19 I:int A[D('i' int)]) + (1 int) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00f0|0x00f0: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x00f1: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00f3: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReconfigurationState int \l}"];
Node_36 [shape=record,label="{36\:\ 0x00f5|0x00f5: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00f7: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x00f9: IGET  (r2 I:java.nio.ByteBuffer) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.data java.nio.ByteBuffer \l0x00fb: INVOKE  (r15 I:int A[D('adaptiveReconfigurationBytes' int)]) = (r2 I:java.nio.ByteBuffer) java.nio.ByteBuffer.position():int type: VIRTUAL \l0x00ff: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0101: IGET  (r2 I:com.google.android.exoplayer2.FormatHolder) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.formatHolder com.google.android.exoplayer2.FormatHolder \l0x0103: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0105: IGET  (r3 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x0107: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0108: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x010a: INVOKE  (r20 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r2 I:com.google.android.exoplayer2.FormatHolder)\l  (r3 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l  (r4 I:boolean)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.readSource(com.google.android.exoplayer2.FormatHolder, com.google.android.exoplayer2.decoder.DecoderInputBuffer, boolean):int type: VIRTUAL \l}"];
Node_37 [shape=record,label="{37\:\ 0x010f|0x010f: CONST  (r2 I:?[int, float, short, byte, char]) = (\-5 ?[int, float, short, byte, char]) \l0x0110: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('result' int)])\l \l}"];
Node_38 [shape=record,label="{38\:\ 0x0112|0x0112: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0135 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0114|0x0114: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0116: IGET  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReconfigurationState int \l0x0118: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0119|0x0119: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0127 \l}"];
Node_41 [shape=record,label="{41\:\ 0x011b|0x011b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x011d: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x011f: INVOKE  \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.clear():void type: VIRTUAL \l0x0122: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0123: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0125: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReconfigurationState int \l}"];
Node_42 [shape=record,label="{42\:\ 0x0127|0x0127: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0129: IGET  (r2 I:com.google.android.exoplayer2.FormatHolder) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.formatHolder com.google.android.exoplayer2.FormatHolder \l0x012b: IGET  (r2 I:com.google.android.exoplayer2.Format) = (r2 I:com.google.android.exoplayer2.FormatHolder) com.google.android.exoplayer2.FormatHolder.format com.google.android.exoplayer2.Format \l0x012d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x012f: INVOKE  \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r2 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onInputFormatChanged(com.google.android.exoplayer2.Format):void type: VIRTUAL \l0x0132: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0135|0x0135: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0137: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x0139: INVOKE  (r2 I:boolean) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.isEndOfStream():boolean type: VIRTUAL \l}"];
Node_44 [shape=record,label="{44\:\ 0x013d|0x013d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x0193 \l}"];
Node_45 [shape=record,label="{45\:\ 0x013f|0x013f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0141: IGET  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReconfigurationState int \l0x0143: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0144|0x0144: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0152 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0146|0x0146: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0148: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x014a: INVOKE  \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.clear():void type: VIRTUAL \l0x014d: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x014e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0150: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReconfigurationState int \l}"];
Node_48 [shape=record,label="{48\:\ 0x0152|0x0152: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0153: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0155: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputStreamEnded boolean \l0x0157: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0159: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReceivedBuffers boolean \l}"];
Node_49 [shape=record,label="{49\:\ 0x015b|0x015b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0163 \l}"];
Node_50 [shape=record,label="{50\:\ 0x015d|0x015d: INVOKE  \l  (r21 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.processEndOfStream():void type: DIRECT \l0x0160: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_51 [shape=record,label="{51\:\ 0x0163|0x0163: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0165|SYNTHETIC\lSplitter:B:52:0x0165\l}"];
Node_53 [shape=record,label="{53\:\ ?|Splitter:B:52:0x0165\l|0x0165: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsEosPropagationWorkaround boolean A[Catch:\{ CryptoException \-\> 0x0187 \}, TRY_ENTER]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0167|0x0167: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x016c A[Catch:\{ CryptoException \-\> 0x0187 \}]\l}"];
Node_55 [shape=record,label="{55\:\ 0x0169|0x0169: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x016a: GOTO  \-\> 0x0014 A[Catch:\{ CryptoException \-\> 0x0187 \}]\l}"];
Node_56 [shape=record,label="{56\:\ 0x016c|0x016c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x016d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x016f: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReceivedEos boolean A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x0171: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x0173: IGET  (r2 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x0175: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x0177: IGET  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x0179: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x017a: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x017b: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x017d: CONST  (r8 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x017e: INVOKE  \l  (r2 I:android.media.MediaCodec)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:long)\l  (r8 I:int)\l android.media.MediaCodec.queueInputBuffer(int, int, int, long, int):void type: VIRTUAL A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x0181: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x0182: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0187 \}]\l0x0184: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int A[Catch:\{ CryptoException \-\> 0x0187 \}, TRY_LEAVE]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0187|ExcHandler: CryptoException null\lSplitter:B:52:0x0165\l|0x0187: MOVE_EXCEPTION  (r18 I:?[OBJECT]) =  \l}"];
Node_59 [shape=record,label="{59\:\ 0x0188|0x0188: INVOKE  (r2 I:int) = \l  (r21 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.getIndex():int type: VIRTUAL \l0x018c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('e' android.media.MediaCodec$CryptoException)])\l \l0x018e: INVOKE  (r2 I:com.google.android.exoplayer2.ExoPlaybackException) = (r0 I:java.lang.Exception), (r2 I:int) com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_60 [shape=record,label="{60\:\ 0x0192|0x0192: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_61 [shape=record,label="{61\:\ 0x0193|0x0193: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0195: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.waitingForFirstSyncFrame boolean \l}"];
Node_62 [shape=record,label="{62\:\ 0x0197|0x0197: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x01b9 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0199|0x0199: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x019b: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x019d: INVOKE  (r2 I:boolean) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.isKeyFrame():boolean type: VIRTUAL \l}"];
Node_64 [shape=record,label="{64\:\ 0x01a1|0x01a1: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x01b9 \l}"];
Node_65 [shape=record,label="{65\:\ 0x01a3|0x01a3: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01a5: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x01a7: INVOKE  \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.clear():void type: VIRTUAL \l0x01aa: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01ac: IGET  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReconfigurationState int \l0x01ae: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_66 [shape=record,label="{66\:\ 0x01af|0x01af: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:68:0x01b6 \l}"];
Node_67 [shape=record,label="{67\:\ 0x01b1|0x01b1: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x01b2: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01b4: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReconfigurationState int \l}"];
Node_68 [shape=record,label="{68\:\ 0x01b6|0x01b6: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_69 [shape=record,label="{69\:\ 0x01b9|0x01b9: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01ba: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01bc: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.waitingForFirstSyncFrame boolean \l0x01be: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01c0: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x01c2: INVOKE  (r16 I:boolean) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.isEncrypted():boolean type: VIRTUAL \l0x01c6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01c8: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bufferEncrypted' boolean)])\l \l0x01ca: INVOKE  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r1 I:boolean)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.shouldWaitForKeys(boolean):boolean type: DIRECT \l0x01ce: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01d0: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.waitingForKeys boolean \l0x01d2: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01d4: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.waitingForKeys boolean \l}"];
Node_70 [shape=record,label="{70\:\ 0x01d6|0x01d6: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x01db \l}"];
Node_71 [shape=record,label="{71\:\ 0x01d8|0x01d8: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_72 [shape=record,label="{72\:\ 0x01db|0x01db: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01dd: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDiscardToSpsWorkaround boolean \l}"];
Node_73 [shape=record,label="{73\:\ 0x01df|0x01df: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x0200 \l}"];
Node_74 [shape=record,label="{74\:\ 0x01e1|0x01e1: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bufferEncrypted' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:79:0x0200 \l}"];
Node_75 [shape=record,label="{75\:\ 0x01e3|0x01e3: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01e5: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x01e7: IGET  (r2 I:java.nio.ByteBuffer) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.data java.nio.ByteBuffer \l0x01e9: INVOKE  (r2 I:java.nio.ByteBuffer) com.google.android.exoplayer2.util.NalUnitUtil.discardToSps(java.nio.ByteBuffer):void type: STATIC \l0x01ec: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01ee: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x01f0: IGET  (r2 I:java.nio.ByteBuffer) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.data java.nio.ByteBuffer \l0x01f2: INVOKE  (r2 I:int) = (r2 I:java.nio.ByteBuffer) java.nio.ByteBuffer.position():int type: VIRTUAL \l}"];
Node_76 [shape=record,label="{76\:\ 0x01f6|0x01f6: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x01fb \l}"];
Node_77 [shape=record,label="{77\:\ 0x01f8|0x01f8: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_78 [shape=record,label="{78\:\ 0x01fb|0x01fb: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01fc: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01fe: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDiscardToSpsWorkaround boolean \l}"];
Node_79 [shape=record,label="{79\:\ 0x0200|0x0200: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l}"];
Node_80 [shape=record,label="{80\:\ 0x0202|SYNTHETIC\lSplitter:B:80:0x0202\l}"];
Node_81 [shape=record,label="{81\:\ ?|Splitter:B:80:0x0202\l|0x0202: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer A[Catch:\{ CryptoException \-\> 0x0277 \}, TRY_ENTER]\l0x0204: IGET  (r6 I:long) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.timeUs long A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0206: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0208: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x020a: INVOKE  (r2 I:boolean) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.isDecodeOnly():boolean type: VIRTUAL A[Catch:\{ CryptoException \-\> 0x0277 \}]\l}"];
Node_82 [shape=record,label="{82\:\ 0x020e|0x020e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:84:0x021b A[Catch:\{ CryptoException \-\> 0x0277 \}]\l}"];
Node_83 [shape=record,label="{83\:\ 0x0210|0x0210: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0212: IGET  (r2 I:java.util.List\<java.lang.Long\>) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.decodeOnlyPresentationTimestamps java.util.List A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0214: INVOKE  (r3 I:java.lang.Long) = (r6 I:long A[D('presentationTimeUs' long)]) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0218: INVOKE  (r2 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE A[Catch:\{ CryptoException \-\> 0x0277 \}]\l}"];
Node_84 [shape=record,label="{84\:\ 0x021b|0x021b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x021d: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x021f: INVOKE  \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.flip():void type: VIRTUAL A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0222: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0224: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0226: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0228: INVOKE  \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onQueueInputBuffer(com.google.android.exoplayer2.decoder.DecoderInputBuffer):void type: VIRTUAL A[Catch:\{ CryptoException \-\> 0x0277 \}]\l}"];
Node_85 [shape=record,label="{85\:\ 0x022b|0x022b: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bufferEncrypted' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:88:0x025e A[Catch:\{ CryptoException \-\> 0x0277 \}]\l}"];
Node_86 [shape=record,label="{86\:\ 0x022d|0x022d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x022f: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0231: INVOKE  (r5 I:android.media.MediaCodec$CryptoInfo) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l  (r15 I:int A[D('adaptiveReconfigurationBytes' int)])\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.getFrameworkCryptoInfo(com.google.android.exoplayer2.decoder.DecoderInputBuffer, int):android.media.MediaCodec$CryptoInfo type: STATIC A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0235: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0237: IGET  (r2 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0239: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x023b: IGET  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x023d: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x023e: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x023f: INVOKE  \l  (r2 I:android.media.MediaCodec)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:android.media.MediaCodec$CryptoInfo A[D('cryptoInfo' android.media.MediaCodec$CryptoInfo)])\l  (r6 I:long A[D('presentationTimeUs' long)])\l  (r8 I:int)\l android.media.MediaCodec.queueSecureInputBuffer(int, int, android.media.MediaCodec$CryptoInfo, long, int):void type: VIRTUAL A[Catch:\{ CryptoException \-\> 0x0277 \}]\l}"];
Node_87 [shape=record,label="{87\:\ 0x0242|0x0242: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0243: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0245: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0247: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0248: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x024a: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReceivedBuffers boolean A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x024c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x024d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x024f: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecReconfigurationState int A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0251: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0253: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0255: IGET  (r3 I:int) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.inputBufferCount int A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0257: ARITH  (r3 I:int) = (r3 I:int) + (1 int) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0259: IPUT  \l  (r3 I:int)\l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.inputBufferCount int A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x025b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x025c: GOTO  \-\> 0x0014 A[Catch:\{ CryptoException \-\> 0x0277 \}]\l}"];
Node_88 [shape=record,label="{88\:\ 0x025e|0x025e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0260: IGET  (r8 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0262: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0264: IGET  (r9 I:int) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0266: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0267: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0269: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.buffer com.google.android.exoplayer2.decoder.DecoderInputBuffer A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x026b: IGET  (r2 I:java.nio.ByteBuffer) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.data java.nio.ByteBuffer A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x026d: INVOKE  (r11 I:int) = (r2 I:java.nio.ByteBuffer) java.nio.ByteBuffer.limit():int type: VIRTUAL A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0271: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0272: MOVE  (r12 I:?[long, double]) = (r6 I:?[long, double] A[D('presentationTimeUs' long)]) A[Catch:\{ CryptoException \-\> 0x0277 \}]\l0x0273: INVOKE  \l  (r8 I:android.media.MediaCodec)\l  (r9 I:int)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:long)\l  (r14 I:int)\l android.media.MediaCodec.queueInputBuffer(int, int, int, long, int):void type: VIRTUAL A[Catch:\{ CryptoException \-\> 0x0277 \}, TRY_LEAVE]\l}"];
Node_90 [shape=record,label="{90\:\ 0x0277|ExcHandler: CryptoException null\lSplitter:B:80:0x0202\l|0x0277: MOVE_EXCEPTION  (r18 I:?[OBJECT]) =  \l}"];
Node_91 [shape=record,label="{91\:\ 0x0278|0x0278: INVOKE  (r2 I:int) = \l  (r21 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.getIndex():int type: VIRTUAL \l0x027c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('e' android.media.MediaCodec$CryptoException)])\l \l0x027e: INVOKE  (r2 I:com.google.android.exoplayer2.ExoPlaybackException) = (r0 I:java.lang.Exception), (r2 I:int) com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_92 [shape=record,label="{92\:\ 0x0282|0x0282: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.feedInputBuffer((r21 'this' I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x00b5\-0x00bd: r20 'result' int\l  0x00e2\-0x00f0: r17 'data' byte[]\l  0x00c6\-0x00f5: r19 'i' int\l  0x0188\-0x0193: r18 'e' android.media.MediaCodec$CryptoException\l  0x0235\-0x0242: r5 'cryptoInfo' android.media.MediaCodec$CryptoInfo\l  0x0206\-0x0277: r6 'presentationTimeUs' long\l  0x00ad\-0x0282: r15 'adaptiveReconfigurationBytes' int\l  0x01c6\-0x0282: r16 'bufferEncrypted' boolean\l  0x0278\-0x0282: r18 'e' android.media.MediaCodec$CryptoException\l  0x010e\-0x0282: r20 'result' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_7;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_7;
Node_19 -> Node_18;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_7;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_37;
Node_28 -> Node_7;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_36;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_32;
Node_35 -> Node_36;
Node_36 -> Node_26;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_43;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_7;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_61;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_7;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_52 -> Node_58;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_7;
Node_56 -> Node_55;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_69;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_69;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_68;
Node_68 -> Node_7;
Node_69 -> Node_70;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_72;
Node_71 -> Node_7;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_79;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_79;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_78;
Node_77 -> Node_7;
Node_78 -> Node_79;
Node_79 -> Node_80;
Node_80 -> Node_81;
Node_80 -> Node_90;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_84;
Node_83 -> Node_84;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_88;
Node_86 -> Node_87;
Node_87 -> Node_7;
Node_88 -> Node_87;
Node_90 -> Node_91;
Node_91 -> Node_92;
}

