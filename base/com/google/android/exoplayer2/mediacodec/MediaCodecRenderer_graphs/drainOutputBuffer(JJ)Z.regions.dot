digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer(JJ)Z" {
subgraph cluster_Region_389764065 {
label = "R(3:(2:(1:18)(1:(1:7))|(1:(2:12|55)(1:(2:21|56)(3:22|(1:24)|25)))(1:(2:36|58)(1:(2:39|59)(2:(1:46)|47))))|(1:53)(1:(1:31))|(2:(1:54)|(2:33|57))) | DECL_VAR: boolean processedOutputBuffer\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1932843454 {
label = "IF [B:1:0x0002] THEN: R(2:(1:18)(1:(1:7))|(1:(2:12|55)(1:(2:21|56)(3:22|(1:24)|25)))(1:(2:36|58)(1:(2:39|59)(2:(1:46)|47)))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r15.outputIndex \< 0) goto L_0x0004\l}"];
subgraph cluster_Region_175927373 {
label = "R(2:(1:18)(1:(1:7))|(1:(2:12|55)(1:(2:21|56)(3:22|(1:24)|25)))(1:(2:36|58)(1:(2:39|59)(2:(1:46)|47))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1120334080 {
label = "IF [B:3:0x0006, B:5:0x000a] THEN: R(1:18) ELSE: R(1:(1:7))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r15.codecNeedsEosOutputExceptionWorkaround == false) goto L_0x003f\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|ADDED_TO_REGION\l|if (r15.codecReceivedEos == false) goto L_0x003f\l}"];
subgraph cluster_Region_254740194 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x003f|r15.outputIndex = r15.codec.dequeueOutputBuffer(r15.outputBufferInfo, getDequeueOutputBufferTimeoutUs())\l}"];
}
subgraph cluster_Region_1518589840 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_856963733 {
label = "Try: R(1:7) catches: R(3:14|(1:16)|17)";
node [shape=record,color=blue];
subgraph cluster_Region_1177518854 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ IllegalStateException \-\> 0x0032 \}\lSplitter:B:6:0x000c\l|r15.outputIndex = r15.codec.dequeueOutputBuffer(r15.outputBufferInfo, getDequeueOutputBufferTimeoutUs())     \/\/ Catch:\{ IllegalStateException \-\> 0x0032 \}\l}"];
}
subgraph cluster_Region_826311991 {
label = "R(3:14|(1:16)|17) | ExcHandler: IllegalStateException (e java.lang.IllegalStateException)\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0033|processEndOfStream()\l}"];
subgraph cluster_IfRegion_1966861272 {
label = "IF [B:15:0x0038] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0038|if (r15.outputStreamEnded == true) goto L_0x003a\l}"];
subgraph cluster_Region_1734981496 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003a|releaseCodec()\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x003d|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
subgraph cluster_IfRegion_1566846752 {
label = "IF [B:9:0x001c] THEN: R(1:(2:12|55)(1:(2:21|56)(3:22|(1:24)|25))) ELSE: R(1:(2:36|58)(1:(2:39|59)(2:(1:46)|47)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001c|if (r15.outputIndex \>= 0) goto L_0x001e\l}"];
subgraph cluster_Region_1748525190 {
label = "R(1:(2:12|55)(1:(2:21|56)(3:22|(1:24)|25)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1123496818 {
label = "IF [B:11:0x0020] THEN: R(2:12|55) ELSE: R(1:(2:21|56)(3:22|(1:24)|25))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0020|if (r15.shouldSkipAdaptationWorkaroundOutputBuffer == true) goto L_0x0022\l}"];
subgraph cluster_Region_1754242595 {
label = "R(2:12|55)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0022|r15.shouldSkipAdaptationWorkaroundOutputBuffer = false\lr15.codec.releaseOutputBuffer(r15.outputIndex, false)\lr15.outputIndex = \-1\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
subgraph cluster_Region_342798653 {
label = "R(1:(2:21|56)(3:22|(1:24)|25)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1064951654 {
label = "IF [B:20:0x0054] THEN: R(2:21|56) ELSE: R(3:22|(1:24)|25) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0054|if ((r15.outputBufferInfo.flags & 4) != 0) goto L_0x0056\l}"];
subgraph cluster_Region_1156454232 {
label = "R(2:21|56)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0056|processEndOfStream()\lr15.outputIndex = \-1\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
subgraph cluster_Region_175075674 {
label = "R(3:22|(1:24)|25)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x005e|java.nio.ByteBuffer r13 = r15.outputBuffers[r15.outputIndex]\l}"];
subgraph cluster_IfRegion_1063871584 {
label = "IF [B:23:0x0064] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0064|if (r13 != null) goto L_0x0066\l}"];
subgraph cluster_Region_464867063 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0066|r13.position(r15.outputBufferInfo.offset)\lr13.limit(r15.outputBufferInfo.offset + r15.outputBufferInfo.size)\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x0079|r15.shouldSkipOutputBuffer = shouldSkipOutputBuffer(r15.outputBufferInfo.presentationTimeUs)\l}"];
}
}
}
}
}
subgraph cluster_Region_1342502752 {
label = "R(1:(2:36|58)(1:(2:39|59)(2:(1:46)|47))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_830620420 {
label = "IF [B:35:0x00ba] THEN: R(2:36|58) ELSE: R(1:(2:39|59)(2:(1:46)|47)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x00ba|if (r15.outputIndex == \-2) goto L_0x00bc\l}"];
subgraph cluster_Region_1089546429 {
label = "R(2:36|58)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00bc|processOutputFormat()\l}"];
Node_58 [shape=record,label="{58\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
subgraph cluster_Region_1947317036 {
label = "R(1:(2:39|59)(2:(1:46)|47)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_64615737 {
label = "IF [B:38:0x00c5] THEN: R(2:39|59) ELSE: R(2:(1:46)|47) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x00c5|if (r15.outputIndex == \-3) goto L_0x00c7\l}"];
subgraph cluster_Region_543165477 {
label = "R(2:39|59)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x00c7|processOutputBuffersChanged()\l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
subgraph cluster_Region_1771928660 {
label = "R(2:(1:46)|47)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_283912856 {
label = "IF [B:41:0x00cf, B:43:0x00d3, B:45:0x00d8] THEN: R(1:46) ELSE: null";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x00cf|ADDED_TO_REGION\l|if (r15.codecNeedsEosPropagationWorkaround == true) goto L_0x00d1\l}"];
Node_43 [shape=record,label="{43\:\ 0x00d3|ADDED_TO_REGION\l|if (r15.inputStreamEnded == true) goto L_0x00da\l}"];
Node_45 [shape=record,label="{45\:\ 0x00d8|ADDED_TO_REGION\l|if (r15.codecReinitializationState == 2) goto L_0x00da\l}"];
subgraph cluster_Region_1548776833 {
label = "R(1:46)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x00da|processEndOfStream()\l}"];
}
}
Node_47 [shape=record,label="{47\:\ 0x00dd|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
}
}
}
}
subgraph cluster_IfRegion_2087803658 {
label = "IF [B:27:0x0085, B:29:0x0089] THEN: R(1:53) ELSE: R(1:(1:31))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0085|if (r15.codecNeedsEosOutputExceptionWorkaround == false) goto L_0x00ee\l}"];
Node_29 [shape=record,label="{29\:\ 0x0089|ADDED_TO_REGION\l|if (r15.codecReceivedEos == false) goto L_0x00ee\l}"];
subgraph cluster_Region_697417023 {
label = "R(1:53)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x00ee|boolean r14 = processOutputBuffer(r16, r18, r15.codec, r15.outputBuffers[r15.outputIndex], r15.outputIndex, r15.outputBufferInfo.flags, r15.outputBufferInfo.presentationTimeUs, r15.shouldSkipOutputBuffer)\l}"];
}
subgraph cluster_Region_2123167500 {
label = "R(1:(1:31))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_264616623 {
label = "Try: R(1:31) catches: R(3:49|(1:51)|52)";
node [shape=record,color=blue];
subgraph cluster_Region_140796380 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ ?|Catch:\{ IllegalStateException \-\> 0x00e0 \}\lSplitter:B:30:0x008b\l|boolean r14 = processOutputBuffer(r16, r18, r15.codec, r15.outputBuffers[r15.outputIndex], r15.outputIndex, r15.outputBufferInfo.flags, r15.outputBufferInfo.presentationTimeUs, r15.shouldSkipOutputBuffer)     \/\/ Catch:\{ IllegalStateException \-\> 0x00e0 \}\l}"];
}
subgraph cluster_Region_1357265579 {
label = "R(3:49|(1:51)|52) | ExcHandler: IllegalStateException (e java.lang.IllegalStateException)\l";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x00e1|processEndOfStream()\l}"];
subgraph cluster_IfRegion_649691830 {
label = "IF [B:50:0x00e6] THEN: R(1:51) ELSE: null";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x00e6|if (r15.outputStreamEnded == true) goto L_0x00e8\l}"];
subgraph cluster_Region_1058285050 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00e8|releaseCodec()\l}"];
}
}
Node_52 [shape=record,label="{52\:\ 0x00eb|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
subgraph cluster_Region_489087093 {
label = "R(2:(1:54)|(2:33|57))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2096407064 {
label = "IF [B:32:0x00a8] THEN: R(1:54) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x00a8|PHI: r14 \l  PHI: (r14v1 'processedOutputBuffer' boolean) = (r14v0 'processedOutputBuffer' boolean), (r14v2 'processedOutputBuffer' boolean) binds: [B:53:0x00ee, B:31:?] A[DONT_GENERATE, DONT_INLINE]\l|if (r14 != true) goto L_0x010c\l}"];
subgraph cluster_Region_380777218 {
label = "R(1:54)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x010c|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_144175067 {
label = "R(2:33|57)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00aa|onProcessedOutputBuffer(r15.outputBufferInfo.presentationTimeUs)\lr15.outputIndex = \-1\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
subgraph cluster_Region_826311991 {
label = "R(3:14|(1:16)|17) | ExcHandler: IllegalStateException (e java.lang.IllegalStateException)\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0033|processEndOfStream()\l}"];
subgraph cluster_IfRegion_1966861272 {
label = "IF [B:15:0x0038] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0038|if (r15.outputStreamEnded == true) goto L_0x003a\l}"];
subgraph cluster_Region_1734981496 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003a|releaseCodec()\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x003d|SYNTHETIC\lRETURN\l|return false\l}"];
}
subgraph cluster_Region_1357265579 {
label = "R(3:49|(1:51)|52) | ExcHandler: IllegalStateException (e java.lang.IllegalStateException)\l";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x00e1|processEndOfStream()\l}"];
subgraph cluster_IfRegion_649691830 {
label = "IF [B:50:0x00e6] THEN: R(1:51) ELSE: null";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x00e6|if (r15.outputStreamEnded == true) goto L_0x00e8\l}"];
subgraph cluster_Region_1058285050 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00e8|releaseCodec()\l}"];
}
}
Node_52 [shape=record,label="{52\:\ 0x00eb|SYNTHETIC\lRETURN\l|return false\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0008}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000c|SYNTHETIC\lSplitter:B:6:0x000c\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001a}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001e}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0032|ExcHandler: IllegalStateException (e java.lang.IllegalStateException)\lSplitter:B:6:0x000c\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x004e}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0083}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0087}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x008b|SYNTHETIC\lSplitter:B:30:0x008b\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x00b7}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00c2}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00cd}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00d1}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x00d5}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x00e0|ExcHandler: IllegalStateException (e java.lang.IllegalStateException)\lSplitter:B:30:0x008b\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drainOutputBuffer((r15v0 'this' com.google.android.exoplayer2.mediacodec.MediaCodecRenderer A[IMMUTABLE_TYPE, THIS]), (r16v0 'positionUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'elapsedRealtimeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_26[style=dashed];
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_18 -> Node_8;
Node_7 -> Node_8;
Node_7 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_9 -> Node_10;
Node_9 -> Node_34[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_19[style=dashed];
Node_12 -> Node_55;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_56;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_35 -> Node_36;
Node_35 -> Node_37[style=dashed];
Node_36 -> Node_58;
Node_38 -> Node_39;
Node_38 -> Node_40[style=dashed];
Node_39 -> Node_59;
Node_41 -> Node_42;
Node_41 -> Node_47[style=dashed];
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_46;
Node_45 -> Node_46;
Node_45 -> Node_47[style=dashed];
Node_46 -> Node_47;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_53;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_53;
Node_53 -> Node_32;
Node_31 -> Node_48;
Node_31 -> Node_32;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_50 -> Node_52[style=dashed];
Node_51 -> Node_52;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_54;
Node_33 -> Node_57;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_50 -> Node_52[style=dashed];
Node_51 -> Node_52;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_13;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_19 -> Node_20;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_30 -> Node_48;
Node_34 -> Node_35;
Node_37 -> Node_38;
Node_40 -> Node_41;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_48 -> Node_49;
}

