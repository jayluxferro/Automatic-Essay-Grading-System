digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsMonoChannelCountWorkaround(Ljava\/lang\/String;Lcom\/google\/android\/exoplayer2\/Format;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (com.google.android.exoplayer2.util.Util.SDK_INT \> 18) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r4.channelCount != 1) goto L_0x0014\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if (\"OMX.MTK.AUDIO.DECODER.MP3\".equals(r3) == false) goto L_0x0014\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|SYNTHETIC\lRETURN\l|return false\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsMonoChannelCountWorkaround((r3v0 'name' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'format' com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
}

