digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:boolean) = \l  (r18 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.shouldInitCodec():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0009: IGET  (r2 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\>) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.pendingDrmSession com.google.android.exoplayer2.drm.DrmSession \l0x000b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x000d: IPUT  \l  (r2 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\>)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l0x000f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0011: IGET  (r2 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format \l0x0013: IGET  (r15 I:java.lang.String) = (r2 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x0015: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0019: IGET  (r2 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\>) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0054 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x001f: IGET  (r2 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\>) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l0x0021: INVOKE  (r12 I:int) = (r2 I:com.google.android.exoplayer2.drm.DrmSession) com.google.android.exoplayer2.drm.DrmSession.getState():int type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drmSessionState' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0038 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0029: IGET  (r2 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\>) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l0x002b: INVOKE  (r2 I:com.google.android.exoplayer2.drm.DrmSession$DrmSessionException) = (r2 I:com.google.android.exoplayer2.drm.DrmSession) com.google.android.exoplayer2.drm.DrmSession.getError():com.google.android.exoplayer2.drm.DrmSession$DrmSessionException type: INTERFACE \l0x002f: INVOKE  (r6 I:int) = \l  (r18 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.getIndex():int type: VIRTUAL \l0x0033: INVOKE  (r2 I:com.google.android.exoplayer2.ExoPlaybackException) = (r2 I:java.lang.Exception), (r6 I:int) com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|0x0037: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drmSessionState' int)]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003e \l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drmSessionState' int)]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0006 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|0x003e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0040: IGET  (r2 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\>) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l0x0042: INVOKE  (r2 I:com.google.android.exoplayer2.drm.ExoMediaCrypto) = (r2 I:com.google.android.exoplayer2.drm.DrmSession) com.google.android.exoplayer2.drm.DrmSession.getMediaCrypto():com.google.android.exoplayer2.drm.ExoMediaCrypto type: INTERFACE \l0x0046: CHECK_CAST  (r2 I:com.google.android.exoplayer2.drm.FrameworkMediaCrypto) = (com.google.android.exoplayer2.drm.FrameworkMediaCrypto) (r2 I:?[OBJECT, ARRAY]) \l0x0048: INVOKE  (r14 I:android.media.MediaCrypto A[D('mediaCrypto' android.media.MediaCrypto)]) = \l  (r2 I:com.google.android.exoplayer2.drm.FrameworkMediaCrypto)\l com.google.android.exoplayer2.drm.FrameworkMediaCrypto.getWrappedMediaCrypto():android.media.MediaCrypto type: VIRTUAL \l0x004c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x004e: IGET  (r2 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\>) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l0x0050: INVOKE  (r11 I:boolean A[D('drmSessionRequiresSecureDecoder' boolean)]) = \l  (r2 I:com.google.android.exoplayer2.drm.DrmSession)\l  (r15 I:java.lang.String A[D('mimeType' java.lang.String)])\l com.google.android.exoplayer2.drm.DrmSession.requiresSecureDecoderComponent(java.lang.String):boolean type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|0x0054: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0055: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0057|SYNTHETIC\lSplitter:B:15:0x0057\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x0057\l|0x0057: IGET  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecSelector) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.mediaCodecSelector com.google.android.exoplayer2.mediacodec.MediaCodecSelector A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}, TRY_ENTER]\l0x0059: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x005b: IGET  (r6 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x005d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x005f: INVOKE  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)]) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecSelector)\l  (r6 I:com.google.android.exoplayer2.Format)\l  (r11 I:boolean A[D('drmSessionRequiresSecureDecoder' boolean)])\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.getDecoderInfo(com.google.android.exoplayer2.mediacodec.MediaCodecSelector, com.google.android.exoplayer2.Format, boolean):com.google.android.exoplayer2.mediacodec.MediaCodecInfo type: VIRTUAL A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0063|0x0063: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00a8 A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0065|0x0065: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drmSessionRequiresSecureDecoder' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00a8 A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0067|0x0067: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x0069: IGET  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecSelector) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.mediaCodecSelector com.google.android.exoplayer2.mediacodec.MediaCodecSelector A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x006b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x006d: IGET  (r6 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x006f: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x0070: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x0072: INVOKE  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)]) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecSelector)\l  (r6 I:com.google.android.exoplayer2.Format)\l  (r7 I:boolean)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.getDecoderInfo(com.google.android.exoplayer2.mediacodec.MediaCodecSelector, com.google.android.exoplayer2.Format, boolean):com.google.android.exoplayer2.mediacodec.MediaCodecInfo type: VIRTUAL A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0076|0x0076: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00a8 A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0078|0x0078: CONST_STR  (r2 I:java.lang.String) =  \"MediaCodecRenderer\" A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x007a: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x007c: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x007f: CONST_STR  (r7 I:java.lang.String) =  \"Drm session requires secure decoder for \" A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x0081: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x0085: INVOKE  (r6 I:java.lang.StringBuilder) = \l  (r6 I:java.lang.StringBuilder)\l  (r15 I:java.lang.String A[D('mimeType' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x0089: CONST_STR  (r7 I:java.lang.String) =  \", but \" A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x008b: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x008f: CONST_STR  (r7 I:java.lang.String) =  \"no secure decoder available. Trying to proceed with \" A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x0091: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x0095: IGET  (r7 I:java.lang.String) = \l  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)])\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.name java.lang.String A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x0097: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x009b: CONST_STR  (r7 I:java.lang.String) =  \".\" A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x009d: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x00a1: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}]\l0x00a5: INVOKE  (r2 I:java.lang.String), (r6 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ DecoderQueryException \-\> 0x01a0 \}, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a8|0x00a8: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00be \l}"];
Node_23 [shape=record,label="{23\:\ 0x00aa|0x00aa: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException) =  com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException \l0x00ac: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00ae: IGET  (r6 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format \l0x00b0: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b1: CONST  (r16 I:?[int, float, short, byte, char]) = \l  (\-49999(0xffffffffffff3cb1, float:NaN) ?[int, float, short, byte, char])\l \l0x00b4: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b6: INVOKE  \l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException)\l  (r6 I:com.google.android.exoplayer2.Format)\l  (r7 I:java.lang.Throwable)\l  (r11 I:boolean A[D('drmSessionRequiresSecureDecoder' boolean)])\l  (r0 I:int)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException.\<init\>(com.google.android.exoplayer2.Format, java.lang.Throwable, boolean, int):void type: DIRECT \l0x00b9: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00bb: INVOKE  \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.throwDecoderInitError(com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x00be|0x00be: IGET  (r3 I:java.lang.String) = \l  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)])\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.name java.lang.String \l0x00c0: IGET  (r2 I:boolean) = \l  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)])\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.adaptive boolean \l0x00c2: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00c4: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecIsAdaptive boolean \l0x00c6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00c8: IGET  (r2 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format \l0x00ca: INVOKE  (r2 I:boolean) = \l  (r3 I:java.lang.String A[D('codecName' java.lang.String)])\l  (r2 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDiscardToSpsWorkaround(java.lang.String, com.google.android.exoplayer2.Format):boolean type: STATIC \l0x00ce: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00d0: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsDiscardToSpsWorkaround boolean \l0x00d2: INVOKE  (r2 I:boolean) = (r3 I:java.lang.String A[D('codecName' java.lang.String)]) com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsFlushWorkaround(java.lang.String):boolean type: STATIC \l0x00d6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00d8: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsFlushWorkaround boolean \l0x00da: INVOKE  (r2 I:boolean) = (r3 I:java.lang.String A[D('codecName' java.lang.String)]) com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsAdaptationWorkaround(java.lang.String):boolean type: STATIC \l0x00de: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00e0: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsAdaptationWorkaround boolean \l0x00e2: INVOKE  (r2 I:boolean) = (r3 I:java.lang.String A[D('codecName' java.lang.String)]) com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsEosPropagationWorkaround(java.lang.String):boolean type: STATIC \l0x00e6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00e8: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsEosPropagationWorkaround boolean \l0x00ea: INVOKE  (r2 I:boolean) = (r3 I:java.lang.String A[D('codecName' java.lang.String)]) com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsEosFlushWorkaround(java.lang.String):boolean type: STATIC \l0x00ee: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00f0: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsEosFlushWorkaround boolean \l0x00f2: INVOKE  (r2 I:boolean) = (r3 I:java.lang.String A[D('codecName' java.lang.String)]) com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsEosOutputExceptionWorkaround(java.lang.String):boolean type: STATIC \l0x00f6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00f8: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsEosOutputExceptionWorkaround boolean \l0x00fa: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00fc: IGET  (r2 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format \l0x00fe: INVOKE  (r2 I:boolean) = \l  (r3 I:java.lang.String A[D('codecName' java.lang.String)])\l  (r2 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsMonoChannelCountWorkaround(java.lang.String, com.google.android.exoplayer2.Format):boolean type: STATIC \l0x0102: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0104: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsMonoChannelCountWorkaround boolean \l}"];
Node_25 [shape=record,label="{25\:\ 0x0106|SYNTHETIC\lSplitter:B:25:0x0106\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x0106\l|0x0106: INVOKE  (r8 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC A[Catch:\{ Exception \-\> 0x01b4 \}, TRY_ENTER]\l0x010a: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x010c: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x010f: CONST_STR  (r6 I:java.lang.String) =  \"createCodec:\" A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0111: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0115: INVOKE  (r2 I:java.lang.StringBuilder) = \l  (r2 I:java.lang.StringBuilder)\l  (r3 I:java.lang.String A[D('codecName' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0119: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x011d: INVOKE  (r2 I:java.lang.String) com.google.android.exoplayer2.util.TraceUtil.beginSection(java.lang.String):void type: STATIC A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0120: INVOKE  (r2 I:android.media.MediaCodec) = (r3 I:java.lang.String A[D('codecName' java.lang.String)]) android.media.MediaCodec.createByCodecName(java.lang.String):android.media.MediaCodec type: STATIC A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0124: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0126: IPUT  \l  (r2 I:android.media.MediaCodec)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0128: INVOKE   com.google.android.exoplayer2.util.TraceUtil.endSection():void type: STATIC A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x012b: CONST_STR  (r2 I:java.lang.String) =  \"configureCodec\" A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x012d: INVOKE  (r2 I:java.lang.String) com.google.android.exoplayer2.util.TraceUtil.beginSection(java.lang.String):void type: STATIC A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0130: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0132: IGET  (r2 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0134: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0136: IGET  (r6 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0138: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x013a: INVOKE  \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r10 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)])\l  (r2 I:android.media.MediaCodec)\l  (r6 I:com.google.android.exoplayer2.Format)\l  (r14 I:android.media.MediaCrypto A[D('mediaCrypto' android.media.MediaCrypto)])\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.configureCodec(com.google.android.exoplayer2.mediacodec.MediaCodecInfo, android.media.MediaCodec, com.google.android.exoplayer2.Format, android.media.MediaCrypto):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x013d: INVOKE   com.google.android.exoplayer2.util.TraceUtil.endSection():void type: STATIC A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0140: CONST_STR  (r2 I:java.lang.String) =  \"startCodec\" A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0142: INVOKE  (r2 I:java.lang.String) com.google.android.exoplayer2.util.TraceUtil.beginSection(java.lang.String):void type: STATIC A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0145: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0147: IGET  (r2 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0149: INVOKE  (r2 I:android.media.MediaCodec) android.media.MediaCodec.start():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x014c: INVOKE   com.google.android.exoplayer2.util.TraceUtil.endSection():void type: STATIC A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x014f: INVOKE  (r4 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0153: ARITH  (r6 I:long) = (r4 I:long A[D('codecInitializedTimestamp' long)]) \- (r8 I:long A[D('codecInitializingTimestamp' long)]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0155: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0157: INVOKE  \l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r3 I:java.lang.String A[D('codecName' java.lang.String)])\l  (r4 I:long A[D('codecInitializedTimestamp' long)])\l  (r6 I:long)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onCodecInitialized(java.lang.String, long, long):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x015a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x015c: IGET  (r2 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x015e: INVOKE  (r2 I:java.nio.ByteBuffer[]) = (r2 I:android.media.MediaCodec) android.media.MediaCodec.getInputBuffers():java.nio.ByteBuffer[] type: VIRTUAL A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0162: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0164: IPUT  \l  (r2 I:java.nio.ByteBuffer[])\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputBuffers java.nio.ByteBuffer[] A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0166: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0168: IGET  (r2 I:android.media.MediaCodec) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codec android.media.MediaCodec A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x016a: INVOKE  (r2 I:java.nio.ByteBuffer[]) = (r2 I:android.media.MediaCodec) android.media.MediaCodec.getOutputBuffers():java.nio.ByteBuffer[] type: VIRTUAL A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x016e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x01b4 \}]\l0x0170: IPUT  \l  (r2 I:java.nio.ByteBuffer[])\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.outputBuffers java.nio.ByteBuffer[] A[Catch:\{ Exception \-\> 0x01b4 \}, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0172|0x0172: INVOKE  (r2 I:int) = \l  (r18 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.getState():int type: VIRTUAL \l0x0176: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0177|0x0177: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x01c4 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0179|0x0179: INVOKE  (r6 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC \l0x017d: CONST  (r16 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x017f: ARITH  (r6 I:long) = (r6 I:long) + (r16 I:long) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0181|0x0181: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0183: IPUT  \l  (r6 I:long)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecHotswapDeadlineMs long \l0x0185: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0186: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0188: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.inputIndex int \l0x018a: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x018b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x018d: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.outputIndex int \l0x018f: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0190: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0192: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.waitingForFirstSyncFrame boolean \l0x0194: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0196: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters \l0x0198: IGET  (r6 I:int) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.decoderInitCount int \l0x019a: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l0x019c: IPUT  \l  (r6 I:int)\l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.decoderInitCount int \l}"];
Node_31 [shape=record,label="{31\:\ 0x01a0|ExcHandler: DecoderQueryException null\lSplitter:B:15:0x0057\l|0x01a0: MOVE_EXCEPTION  (r13 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x01a1|0x01a1: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException) =  com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException \l0x01a3: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x01a5: IGET  (r6 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format \l0x01a7: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (\-49998(0xffffffffffff3cb2, float:NaN) ?[int, float, short, byte, char])\l \l0x01aa: INVOKE  \l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException)\l  (r6 I:com.google.android.exoplayer2.Format)\l  (r13 I:java.lang.Throwable A[D('e' com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException)])\l  (r11 I:boolean A[D('drmSessionRequiresSecureDecoder' boolean)])\l  (r7 I:int)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException.\<init\>(com.google.android.exoplayer2.Format, java.lang.Throwable, boolean, int):void type: DIRECT \l0x01ad: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x01af: INVOKE  \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.throwDecoderInitError(com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException):void type: DIRECT \l}"];
Node_33 [shape=record,label="{33\:\ 0x01b4|ExcHandler: Exception null\lSplitter:B:25:0x0106\l|0x01b4: MOVE_EXCEPTION  (r13 I:?[OBJECT] A[D('e' com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException)]) =  \l}"];
Node_34 [shape=record,label="{34\:\ 0x01b5|0x01b5: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException) =  com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException \l0x01b7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x01b9: IGET  (r6 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.format com.google.android.exoplayer2.Format \l0x01bb: INVOKE  \l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException)\l  (r6 I:com.google.android.exoplayer2.Format)\l  (r13 I:java.lang.Throwable A[D('e' java.lang.Exception)])\l  (r11 I:boolean A[D('drmSessionRequiresSecureDecoder' boolean)])\l  (r3 I:java.lang.String A[D('codecName' java.lang.String)])\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException.\<init\>(com.google.android.exoplayer2.Format, java.lang.Throwable, boolean, java.lang.String):void type: DIRECT \l0x01be: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x01c0: INVOKE  \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.throwDecoderInitError(com.google.android.exoplayer2.mediacodec.MediaCodecRenderer$DecoderInitializationException):void type: DIRECT \l}"];
Node_35 [shape=record,label="{35\:\ 0x01c4|0x01c4: CONST  (r6 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l}"];
MethodNode[shape=record,label="{protected final void com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.maybeInitCodec((r18 'this' I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0025\-0x0054: r12 'drmSessionState' int\l  0x0153\-0x0172: r4 'codecInitializedTimestamp' long\l  0x010a\-0x0172: r8 'codecInitializingTimestamp' long\l  0x00c0\-0x01a0: r3 'codecName' java.lang.String\l  0x01a1\-0x01b4: r13 'e' com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException\l  0x01b5\-0x01c4: r13 'e' java.lang.Exception\l  0x01b4\-0x01c9: r3 'codecName' java.lang.String\l  0x0055\-0x01c9: r10 'decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo\l  0x0017\-0x01c9: r11 'drmSessionRequiresSecureDecoder' boolean\l  0x0016\-0x01c9: r14 'mediaCrypto' android.media.MediaCrypto\l  0x0015\-0x01c9: r15 'mimeType' java.lang.String\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_2;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_31;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_33;
Node_26 -> Node_27;
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_35;
Node_29 -> Node_30;
Node_30 -> Node_2;
Node_31 -> Node_32;
Node_32 -> Node_22;
Node_33 -> Node_34;
Node_34 -> Node_27;
Node_35 -> Node_30;
}

