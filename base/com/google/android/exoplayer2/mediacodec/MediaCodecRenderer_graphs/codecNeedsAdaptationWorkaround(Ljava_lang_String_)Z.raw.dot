digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsAdaptationWorkaround(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  com.google.android.exoplayer2.util.Util.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:16:0x0040 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST_STR  (r0 I:java.lang.String) =  \"OMX.Nvidia.h264.decode\" \l0x0008: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('name' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: CONST_STR  (r0 I:java.lang.String) =  \"OMX.Nvidia.h264.decode.secure\" \l0x0010: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('name' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0040 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: CONST_STR  (r0 I:java.lang.String) =  \"flounder\" \l0x0018: SGET  (r1 I:java.lang.String) =  com.google.android.exoplayer2.util.Util.DEVICE java.lang.String \l0x001a: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: CONST_STR  (r0 I:java.lang.String) =  \"flounder_lte\" \l0x0022: SGET  (r1 I:java.lang.String) =  com.google.android.exoplayer2.util.Util.DEVICE java.lang.String \l0x0024: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003e \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: CONST_STR  (r0 I:java.lang.String) =  \"grouper\" \l0x002c: SGET  (r1 I:java.lang.String) =  com.google.android.exoplayer2.util.Util.DEVICE java.lang.String \l0x002e: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: CONST_STR  (r0 I:java.lang.String) =  \"tilapia\" \l0x0036: SGET  (r1 I:java.lang.String) =  com.google.android.exoplayer2.util.Util.DEVICE java.lang.String \l0x0038: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0040 \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: RETURN  (r0 I:boolean) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|0x0040: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.codecNeedsAdaptationWorkaround((r2 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0041: r2 'name' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_15;
}

