digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecUtil.maxH264DecodableFrameSize()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: SGET  (r4 I:int) =  com.google.android.exoplayer2.mediacodec.MediaCodecUtil.maxH264DecodableFrameSize int \l0x0003: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0034 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST_STR  (r4 I:java.lang.String) =  \"video\/avc\" \l0x0009: INVOKE  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo) = (r4 I:java.lang.String), (r3 I:boolean) com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfo(java.lang.String, boolean):com.google.android.exoplayer2.mediacodec.MediaCodecInfo type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0032 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: INVOKE  (r4 I:android.media.MediaCodecInfo$CodecProfileLevel[]) = \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[D('decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)])\l com.google.android.exoplayer2.mediacodec.MediaCodecInfo.getProfileLevels():android.media.MediaCodecInfo$CodecProfileLevel[] type: VIRTUAL \l0x0013: ARRAY_LENGTH  (r5 I:int) = (r4 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r3 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:7:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: AGET  (r1 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0018: IGET  (r6 I:int) = \l  (r1 I:android.media.MediaCodecInfo$CodecProfileLevel A[D('profileLevel' android.media.MediaCodecInfo$CodecProfileLevel)])\l android.media.MediaCodecInfo.CodecProfileLevel.level int \l0x001a: INVOKE  (r6 I:int) = (r6 I:int) com.google.android.exoplayer2.mediacodec.MediaCodecUtil.avcLevelToMaxFrameSize(int):int type: STATIC \l0x001e: INVOKE  (r2 I:int A[D('result' int)]) = (r6 I:int), (r2 I:int A[D('result' int)]) java.lang.Math.max(int, int):int type: STATIC \l0x0022: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: SGET  (r3 I:int) =  com.google.android.exoplayer2.util.Util.SDK_INT int \l0x0027: CONST  (r4 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: IF  (r3 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:14:0x0037 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (345600(0x54600, float:4.84289E\-40) ?[int, float, short, byte, char])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: INVOKE  (r2 I:int A[D('result' int)]) = (r2 I:int A[D('result' int)]), (r3 I:int) java.lang.Math.max(int, int):int type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: SPUT  (r2 I:int A[D('result' int)]) com.google.android.exoplayer2.mediacodec.MediaCodecUtil.maxH264DecodableFrameSize int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: SGET  (r3 I:int) =  com.google.android.exoplayer2.mediacodec.MediaCodecUtil.maxH264DecodableFrameSize int \l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|0x0036: RETURN  (r3 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (172800(0x2a300, float:2.42144E\-40) ?[int, float, short, byte, char])\l \l}"];
MethodNode[shape=record,label="{public static int com.google.android.exoplayer2.mediacodec.MediaCodecUtil.maxH264DecodableFrameSize()  | Debug Info:\l  0x0018\-0x0025: r1 'profileLevel' android.media.MediaCodecInfo$CodecProfileLevel\l  0x000d\-0x003a: r0 'decoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo\l  0x0007\-0x003a: r2 'result' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_10;
}

