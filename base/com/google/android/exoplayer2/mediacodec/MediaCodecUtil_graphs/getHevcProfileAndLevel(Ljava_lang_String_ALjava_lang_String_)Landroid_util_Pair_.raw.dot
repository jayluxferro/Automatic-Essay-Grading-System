digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecUtil.getHevcProfileAndLevel(Ljava\/lang\/String;[Ljava\/lang\/String;)Landroid\/util\/Pair;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: ARRAY_LENGTH  (r5 I:int) = (r10 I:?[] A[D('parts' java.lang.String[])]) \l0x0003: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r5 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:4:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST_STR  (r5 I:java.lang.String) =  \"MediaCodecUtil\" \l0x0008: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000a: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000d: CONST_STR  (r7 I:java.lang.String) =  \"Ignoring malformed HEVC codec string: \" \l0x000f: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0013: INVOKE  (r6 I:java.lang.StringBuilder) = \l  (r6 I:java.lang.StringBuilder)\l  (r9 I:java.lang.String A[D('codec' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0017: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001b: INVOKE  (r5 I:java.lang.String), (r6 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: RETURN  \l  (r4 I:android.util.Pair\<java.lang.Integer, java.lang.Integer\>)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: SGET  (r5 I:java.util.regex.Pattern) =  com.google.android.exoplayer2.mediacodec.MediaCodecUtil.PROFILE_PATTERN java.util.regex.Pattern \l0x0021: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][] A[D('parts' java.lang.String[])])\l  (r8 I:?[int, short, byte, char])\l \l0x0023: INVOKE  (r1 I:java.util.regex.Matcher) = \l  (r5 I:java.util.regex.Pattern)\l  (r6 I:java.lang.CharSequence)\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x0027: INVOKE  (r5 I:boolean) = \l  (r1 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l java.util.regex.Matcher.matches():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|0x002b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0046 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: CONST_STR  (r5 I:java.lang.String) =  \"MediaCodecUtil\" \l0x002f: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0031: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0034: CONST_STR  (r7 I:java.lang.String) =  \"Ignoring malformed HEVC codec string: \" \l0x0036: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: INVOKE  (r6 I:java.lang.StringBuilder) = \l  (r6 I:java.lang.StringBuilder)\l  (r9 I:java.lang.String A[D('codec' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003e: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0042: INVOKE  (r5 I:java.lang.String), (r6 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0046|0x0046: INVOKE  (r3 I:java.lang.String) = \l  (r1 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r8 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l0x004a: CONST_STR  (r5 I:java.lang.String) =  \"1\" \l0x004c: INVOKE  (r5 I:boolean) = \l  (r5 I:java.lang.String)\l  (r3 I:java.lang.Object A[D('profileString' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0050|0x0050: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x007d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0052|0x0052: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0053|0x0053: SGET  (r5 I:java.util.Map\<java.lang.String, java.lang.Integer\>) =  com.google.android.exoplayer2.mediacodec.MediaCodecUtil.HEVC_CODEC_STRING_TO_PROFILE_LEVEL java.util.Map \l0x0055: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0056: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][] A[D('parts' java.lang.String[])])\l  (r6 I:?[int, short, byte, char])\l \l0x0058: INVOKE  (r0 I:java.lang.Object) = (r5 I:java.util.Map), (r6 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x005c: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x005e|0x005e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('level' java.lang.Integer)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x00a1 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0060|0x0060: CONST_STR  (r5 I:java.lang.String) =  \"MediaCodecUtil\" \l0x0062: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0064: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0067: CONST_STR  (r7 I:java.lang.String) =  \"Unknown HEVC level string: \" \l0x0069: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006d: INVOKE  (r7 I:java.lang.String) = \l  (r1 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r8 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l0x0071: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0075: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0079: INVOKE  (r5 I:java.lang.String), (r6 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x007d|0x007d: CONST_STR  (r5 I:java.lang.String) =  \"2\" \l0x007f: INVOKE  (r5 I:boolean) = \l  (r5 I:java.lang.String)\l  (r3 I:java.lang.Object A[D('profileString' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0083|0x0083: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0087 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0085|0x0085: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0087|0x0087: CONST_STR  (r5 I:java.lang.String) =  \"MediaCodecUtil\" \l0x0089: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x008b: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x008e: CONST_STR  (r7 I:java.lang.String) =  \"Unknown HEVC profile string: \" \l0x0090: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0094: INVOKE  (r6 I:java.lang.StringBuilder) = \l  (r6 I:java.lang.StringBuilder)\l  (r3 I:java.lang.String A[D('profileString' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0098: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x009c: INVOKE  (r5 I:java.lang.String), (r6 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x00a1|0x00a1: NEW_INSTANCE  (r4 I:android.util.Pair) =  android.util.Pair \l0x00a3: INVOKE  (r5 I:java.lang.Integer) = (r2 I:int A[D('profile' int)]) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x00a7: INVOKE  \l  (r4 I:android.util.Pair)\l  (r5 I:java.lang.Object)\l  (r0 I:java.lang.Object A[D('level' java.lang.Integer)])\l android.util.Pair.\<init\>(java.lang.Object, java.lang.Object):void type: DIRECT \l}"];
MethodNode[shape=record,label="{private static android.util.Pair\<java.lang.Integer, java.lang.Integer\> com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getHevcProfileAndLevel((r9 I:java.lang.String A[D('codec' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String[] A[D('parts' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x005e\-0x007d: r0 'level' java.lang.Integer\l  0x0053\-0x007d: r2 'profile' int\l  0x0086\-0x0087: r2 'profile' int\l  0x00a1\-0x00ab: r0 'level' java.lang.Integer\l  0x0027\-0x00ab: r1 'matcher' java.util.regex.Matcher\l  0x00a1\-0x00ab: r2 'profile' int\l  0x004a\-0x00ab: r3 'profileString' java.lang.String\l  ?\-0x00ab: r9 'codec' java.lang.String\l  ?\-0x00ab: r10 'parts' java.lang.String[]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, [, Ljava\/lang\/String;, ), Landroid\/util\/Pair, \<, Ljava\/lang\/Integer;, Ljava\/lang\/Integer;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_3;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_10;
Node_16 -> Node_3;
Node_17 -> Node_3;
}

