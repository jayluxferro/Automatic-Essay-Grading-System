digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecUtil.getAvcProfileAndLevel(Ljava\/lang\/String;[Ljava\/lang\/String;)Landroid\/util\/Pair;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0001: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: ARRAY_LENGTH  (r6 I:int) = (r10 I:?[] A[D('codecsParts' java.lang.String[])]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r6 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:4:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST_STR  (r6 I:java.lang.String) =  \"MediaCodecUtil\" \l0x0007: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0009: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000c: CONST_STR  (r8 I:java.lang.String) =  \"Ignoring malformed AVC codec string: \" \l0x000e: INVOKE  (r7 I:java.lang.StringBuilder) = (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0012: INVOKE  (r7 I:java.lang.StringBuilder) = \l  (r7 I:java.lang.StringBuilder)\l  (r9 I:java.lang.String A[D('codec' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0016: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001a: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: RETURN  \l  (r5 I:android.util.Pair\<java.lang.Integer, java.lang.Integer\>)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|SYNTHETIC\lSplitter:B:5:0x001f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x001f\l|0x001f: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][] A[D('codecsParts' java.lang.String[])])\l  (r6 I:?[int, short, byte, char])\l A[Catch:\{ NumberFormatException \-\> 0x00ab \}, TRY_ENTER]\l0x0021: INVOKE  (r6 I:int) = (r6 I:java.lang.String) java.lang.String.length():int type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0025: CONST  (r7 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0076 A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0029: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][] A[D('codecsParts' java.lang.String[])])\l  (r6 I:?[int, short, byte, char])\l A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x002b: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x002c: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x002d: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.String), (r7 I:int), (r8 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0031: CONST  (r7 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0033: INVOKE  (r6 I:int) = (r6 I:java.lang.String), (r7 I:int) java.lang.Integer.parseInt(java.lang.String, int):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0037: INVOKE  (r4 I:java.lang.Integer) = (r6 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x003b: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x003c: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][] A[D('codecsParts' java.lang.String[])])\l  (r6 I:?[int, short, byte, char])\l A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x003e: CONST  (r7 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x003f: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.String), (r7 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0043: CONST  (r7 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0045: INVOKE  (r6 I:int) = (r6 I:java.lang.String), (r7 I:int) java.lang.Integer.parseInt(java.lang.String, int):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0049: INVOKE  (r2 I:java.lang.Integer) = (r6 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00ab \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|0x004d: SGET  (r6 I:android.util.SparseIntArray) =  com.google.android.exoplayer2.mediacodec.MediaCodecUtil.AVC_PROFILE_NUMBER_TO_CONST android.util.SparseIntArray \l0x004f: INVOKE  (r7 I:int) = \l  (r4 I:java.lang.Integer A[D('profileInteger' java.lang.Integer)])\l java.lang.Integer.intValue():int type: VIRTUAL \l0x0053: INVOKE  (r6 I:int) = (r6 I:android.util.SparseIntArray), (r7 I:int) android.util.SparseIntArray.get(int):int type: VIRTUAL \l0x0057: INVOKE  (r3 I:java.lang.Integer) = (r6 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x005b|0x005b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('profile' java.lang.Integer)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x00c6 \l}"];
Node_12 [shape=record,label="{12\:\ 0x005d|0x005d: CONST_STR  (r6 I:java.lang.String) =  \"MediaCodecUtil\" \l0x005f: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0061: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0064: CONST_STR  (r8 I:java.lang.String) =  \"Unknown AVC profile: \" \l0x0066: INVOKE  (r7 I:java.lang.StringBuilder) = (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006a: INVOKE  (r7 I:java.lang.StringBuilder) = \l  (r7 I:java.lang.StringBuilder)\l  (r4 I:java.lang.Object A[D('profileInteger' java.lang.Integer)])\l java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x006e: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0072: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0076|SYNTHETIC\lSplitter:B:13:0x0076\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0076\l|0x0076: ARRAY_LENGTH  (r6 I:int) = (r10 I:?[] A[D('codecsParts' java.lang.String[])]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}, TRY_ENTER]\l0x0077: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0078|0x0078: IF  (r6 I:?[int, byte, short, char]) \< (r7 I:?[int, byte, short, char])  \-\> B:17:0x0091 A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x007a|0x007a: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x007b: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][] A[D('codecsParts' java.lang.String[])])\l  (r6 I:?[int, short, byte, char])\l A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x007d: INVOKE  (r6 I:int) = (r6 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0081: INVOKE  (r4 I:java.lang.Integer) = (r6 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0085: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0086: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][] A[D('codecsParts' java.lang.String[])])\l  (r6 I:?[int, short, byte, char])\l A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0088: INVOKE  (r6 I:int) = (r6 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x008c: INVOKE  (r2 I:java.lang.Integer) = (r6 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0090: GOTO  \-\> 0x004d A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0091|0x0091: CONST_STR  (r6 I:java.lang.String) =  \"MediaCodecUtil\" A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0093: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0095: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x0098: CONST_STR  (r8 I:java.lang.String) =  \"Ignoring malformed AVC codec string: \" A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x009a: INVOKE  (r7 I:java.lang.StringBuilder) = (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x009e: INVOKE  (r7 I:java.lang.StringBuilder) = \l  (r7 I:java.lang.StringBuilder)\l  (r9 I:java.lang.String A[D('codec' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x00a2: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00ab \}]\l0x00a6: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00ab \}, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x00ab|ExcHandler: NumberFormatException null\lSplitter:B:5:0x001f\l|0x00ab: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x00ac|0x00ac: CONST_STR  (r6 I:java.lang.String) =  \"MediaCodecUtil\" \l0x00ae: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00b0: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00b3: CONST_STR  (r8 I:java.lang.String) =  \"Ignoring malformed AVC codec string: \" \l0x00b5: INVOKE  (r7 I:java.lang.StringBuilder) = (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b9: INVOKE  (r7 I:java.lang.StringBuilder) = \l  (r7 I:java.lang.StringBuilder)\l  (r9 I:java.lang.String A[D('codec' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00bd: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00c1: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_21 [shape=record,label="{21\:\ 0x00c6|0x00c6: SGET  (r6 I:android.util.SparseIntArray) =  com.google.android.exoplayer2.mediacodec.MediaCodecUtil.AVC_LEVEL_NUMBER_TO_CONST android.util.SparseIntArray \l0x00c8: INVOKE  (r7 I:int) = \l  (r2 I:java.lang.Integer A[D('levelInteger' java.lang.Integer)])\l java.lang.Integer.intValue():int type: VIRTUAL \l0x00cc: INVOKE  (r6 I:int) = (r6 I:android.util.SparseIntArray), (r7 I:int) android.util.SparseIntArray.get(int):int type: VIRTUAL \l0x00d0: INVOKE  (r1 I:java.lang.Integer) = (r6 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x00d4|0x00d4: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('level' java.lang.Integer)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00f0 \l}"];
Node_23 [shape=record,label="{23\:\ 0x00d6|0x00d6: CONST_STR  (r6 I:java.lang.String) =  \"MediaCodecUtil\" \l0x00d8: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00da: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00dd: CONST_STR  (r8 I:java.lang.String) =  \"Unknown AVC level: \" \l0x00df: INVOKE  (r7 I:java.lang.StringBuilder) = (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00e3: INVOKE  (r7 I:java.lang.StringBuilder) = \l  (r7 I:java.lang.StringBuilder)\l  (r2 I:java.lang.Object A[D('levelInteger' java.lang.Integer)])\l java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00e7: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00eb: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x00f0|0x00f0: NEW_INSTANCE  (r5 I:android.util.Pair) =  android.util.Pair \l0x00f2: INVOKE  \l  (r5 I:android.util.Pair)\l  (r3 I:java.lang.Object A[D('profile' java.lang.Integer)])\l  (r1 I:java.lang.Object A[D('level' java.lang.Integer)])\l android.util.Pair.\<init\>(java.lang.Object, java.lang.Object):void type: DIRECT \l}"];
MethodNode[shape=record,label="{private static android.util.Pair\<java.lang.Integer, java.lang.Integer\> com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getAvcProfileAndLevel((r9 I:java.lang.String A[D('codec' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String[] A[D('codecsParts' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x004d\-0x0076: r2 'levelInteger' java.lang.Integer\l  0x005b\-0x0076: r3 'profile' java.lang.Integer\l  0x003b\-0x0076: r4 'profileInteger' java.lang.Integer\l  0x0090\-0x0091: r2 'levelInteger' java.lang.Integer\l  0x0085\-0x0091: r4 'profileInteger' java.lang.Integer\l  0x00ac\-0x00c6: r0 'e' java.lang.NumberFormatException\l  0x00d4\-0x00f6: r1 'level' java.lang.Integer\l  0x00c6\-0x00f6: r2 'levelInteger' java.lang.Integer\l  0x00c6\-0x00f6: r3 'profile' java.lang.Integer\l  0x00c6\-0x00f6: r4 'profileInteger' java.lang.Integer\l  ?\-0x00f6: r9 'codec' java.lang.String\l  ?\-0x00f6: r10 'codecsParts' java.lang.String[]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, [, Ljava\/lang\/String;, ), Landroid\/util\/Pair, \<, Ljava\/lang\/Integer;, Ljava\/lang\/Integer;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_19;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_3;
Node_13 -> Node_14;
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_10;
Node_17 -> Node_3;
Node_19 -> Node_20;
Node_20 -> Node_3;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_3;
Node_24 -> Node_3;
}

