digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecUtil.getCodecProfileAndLevel(Ljava\/lang\/String;)Landroid\/util\/Pair;" {
subgraph cluster_Region_1934465781 {
label = "R(2:0|(2:(1:19)|(3:2|3|5)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|char r2 = 0\l}"];
subgraph cluster_Region_865885640 {
label = "R(2:(1:19)|(3:2|3|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1812467731 {
label = "IF [B:1:0x0002] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r6 == null) goto L_?\l}"];
subgraph cluster_Region_2008665569 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_744728042 {
label = "R(3:2|3|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|java.lang.String[] java.lang.String[] r0 = r6.split(\".\")\ljava.lang.String r4 = r0[0]\l}"];
subgraph cluster_SwitchRegion_581074033 {
label = "Switch: 4, default: R(2:4|1)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0012|switch(r4.hashCode()) \{\l    case 3006243: goto L_0x0032;\l    case 3006244: goto L_0x003c;\l    case 3199032: goto L_0x001f;\l    case 3214780: goto L_0x0028;\l    default: goto L_0x0015;\l\}\l}"];
subgraph cluster_Region_601965345 {
label = "R(1:(2:14|1)) | FALL_THROUGH\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_325046586 {
label = "IF [B:13:0x0038] THEN: R(2:14|1) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0038|if (r4.equals(CODEC_ID_AVC1) == true) goto L_0x003a\l}"];
subgraph cluster_Region_1150513349 {
label = "R(2:14|1)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x003a|r2 = 2\l}"];
Node_InsnContainer_1916938376 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1592145499 {
label = "R(1:(2:17|1)) | FALL_THROUGH\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_389596623 {
label = "IF [B:16:0x0042] THEN: R(2:17|1) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0042|if (r4.equals(CODEC_ID_AVC2) == true) goto L_0x0044\l}"];
subgraph cluster_Region_808005867 {
label = "R(2:17|1)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0044|r2 = 3\l}"];
Node_InsnContainer_1728659107 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1322815784 {
label = "R(1:1) | FALL_THROUGH\l";
node [shape=record,color=blue];
Node_InsnContainer_759031315 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1116100865 {
label = "R(1:(2:11|1)) | FALL_THROUGH\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_899378901 {
label = "IF [B:10:0x002e] THEN: R(2:11|1) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002e|if (r4.equals(CODEC_ID_HVC1) == true) goto L_0x0030\l}"];
subgraph cluster_Region_368806838 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0030|r2 = 1\l}"];
Node_InsnContainer_1825872852 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_184426958 {
label = "R(2:4|1)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|FALL_THROUGH\l|r2 = 65535\l}"];
Node_InsnContainer_1720653495 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_SwitchRegion_1932129810 {
label = "Switch: 2, default: R(1:22)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0016|PHI: r2 \l  PHI: (r2v10 char) = (r2v3 char), (r2v6 char), (r2v9 char), (r2v0 char), (r2v11 char) binds: [B:17:0x0044, B:14:0x003a, B:11:0x0030, B:8:0x0025, B:4:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|switch(r2) \{\l    case 0: goto L_0x001a;\l    case 1: goto L_0x001a;\l    case 2: goto L_0x0046;\l    case 3: goto L_0x0046;\l    default: goto L_0x0019;\l\}\l}"];
subgraph cluster_Region_1695297003 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return getHevcProfileAndLevel(r6, r0)\l}"];
}
subgraph cluster_Region_512196821 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return getAvcProfileAndLevel(r6, r0)\l}"];
}
subgraph cluster_Region_608200971 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ 0x001a}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0025|if (r4.equals(CODEC_ID_HEV1) != false) goto L_0x0016\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0028}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0032}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x003c}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0046}"];
MethodNode[shape=record,label="{public static android.util.Pair\<java.lang.Integer, java.lang.Integer\> com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getCodecProfileAndLevel((r6v0 'codec' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCan't fix incorrect switch cases order\lCode restructure failed: missing block: B:8:0x0025, code lost:\l    if (r4.equals(CODEC_ID_HEV1) != false) goto L_0x0016;\l\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, ), Landroid\/util\/Pair, \<, Ljava\/lang\/Integer;, Ljava\/lang\/Integer;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_3 -> Node_9;
Node_3 -> Node_12;
Node_3 -> Node_15;
Node_13 -> Node_4[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_5;
Node_16 -> Node_4[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_5;
Node_10 -> Node_4[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_18;
Node_5 -> Node_22;
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_4[style=dashed];
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_18 -> Node_21;
}

