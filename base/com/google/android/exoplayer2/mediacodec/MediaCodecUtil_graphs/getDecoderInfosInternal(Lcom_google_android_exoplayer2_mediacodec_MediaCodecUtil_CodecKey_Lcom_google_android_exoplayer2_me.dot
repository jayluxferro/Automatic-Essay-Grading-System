digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal(Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecUtil$CodecKey;Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecUtil$MediaCodecListCompat;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lSplitter:B:0:0x0000\l|java.util.ArrayList r5 = new java.util.ArrayList\<\>()     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\ljava.lang.String r9 = r20.mimeType     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lint r10 = r21.getCodecCount()     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lboolean r12 = r21.secureDecodersExplicit()     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lr8 = 0     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|LOOP_START\lCatch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lPHI: r8 \l  PHI: (r8v1 'i' int) = (r8v0 'i' int), (r8v2 'i' int) binds: [B:1:?, B:38:0x00f0] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0012\-\>B:38:0x00f0\l|if (r8 \>= r10) goto L_0x008c     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|android.media.MediaCodecInfo r3 = r21.getCodecInfoAt(r8)     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\ljava.lang.String r4 = r3.getName()     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|if (isCodecUsableDecoder(r3, r4, r12) == false) goto L_0x00f0     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|java.lang.String[] r15 = r3.getSupportedTypes()     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lr16 = r15.length     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lr14 = 0     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|LOOP_START\lCatch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lPHI: r14 \l  PHI: (r14v3 int) = (r14v2 int), (r14v4 int) binds: [B:5:0x0024, B:19:0x0065] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:6:0x002c\-\>B:19:0x0065\l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|if (r14 \>= r16) goto L_0x00f0     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|r13 = r15[r14]     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|if (r13.equalsIgnoreCase(r9) == false) goto L_0x0065\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|SYNTHETIC\lSplitter:B:10:0x0038\l}"];
Node_11 [shape=record,label="{11\:\ ?|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lSplitter:B:10:0x0038\l|android.media.MediaCodecInfo$CodecCapabilities r2 = r3.getCapabilitiesForType(r13)     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lboolean r11 = r21.isSecurePlaybackSupported(r9, r2)     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lboolean r7 = codecNeedsDisableAdaptationWorkaround(r4)     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|if (r12 == false) goto L_0x0052     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0050|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|if (r20.secure == r11) goto L_0x005c     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0052|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|if (r12 != false) goto L_0x0068     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0054|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x005a|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|if (r20.secure != false) goto L_0x0068     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x005c|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|r5.add(com.google.android.exoplayer2.mediacodec.MediaCodecInfo.newInstance(r4, r9, r2, r7))     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0065|LOOP_END\lCatch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lLOOP:1: B:6:0x002c\-\>B:19:0x0065\l|int r14 = r14 + 1     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0068|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|if (r12 != false) goto L_0x0065     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x006a|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|if (r11 == false) goto L_0x0065     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x006c|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|r5.add(com.google.android.exoplayer2.mediacodec.MediaCodecInfo.newInstance(new java.lang.StringBuilder().append(r4).append(\".secure\").toString(), r9, r2, r7))     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x008c|RETURN\l|return r5\l}"];
Node_24 [shape=record,label="{24\:\ 0x008d|ExcHandler: Exception (r6v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:10:0x0038\l|java.lang.Exception r6 = move\-exception\l}"];
Node_25 [shape=record,label="{25\:\ 0x008e|SYNTHETIC\lSplitter:B:25:0x008e\l}"];
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lSplitter:B:25:0x008e\l}"];
Node_27 [shape=record,label="{27\:\ 0x0096|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|if (com.google.android.exoplayer2.util.Util.SDK_INT \> 23) goto L_0x00c7     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x0098|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x009c|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|if (r5.isEmpty() != false) goto L_0x00c7     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x009e|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|android.util.Log.e(TAG, new java.lang.StringBuilder().append(\"Skipping codec \").append(r4).append(\" (failed to query capabilities)\").toString())     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_31 [shape=record,label="{31\:\ 0x00bf|ExcHandler: Exception (r6v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.Exception r6 = move\-exception\l}"];
Node_32 [shape=record,label="{32\:\ 0x00c0}"];
Node_33 [shape=record,label="{33\:\ 0x00c6|throw new com.google.android.exoplayer2.mediacodec.MediaCodecUtil.DecoderQueryException(r6, (com.google.android.exoplayer2.mediacodec.MediaCodecUtil.C13091) null)\l}"];
Node_34 [shape=record,label="{34\:\ 0x00c7}"];
Node_35 [shape=record,label="{35\:\ 0x00c9|SYNTHETIC\lSplitter:B:35:0x00c9\l}"];
Node_36 [shape=record,label="{36\:\ ?|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\lSplitter:B:35:0x00c9\l|android.util.Log.e(TAG, new java.lang.StringBuilder().append(\"Failed to query codec \").append(r4).append(\" (\").append(r13).append(\")\").toString())     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_37 [shape=record,label="{37\:\ 0x00ef|Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l|throw r6     \/\/ Catch:\{ Exception \-\> 0x008d, Exception \-\> 0x00bf \}\l}"];
Node_38 [shape=record,label="{38\:\ 0x00f0|LOOP_END\lLOOP:0: B:2:0x0012\-\>B:38:0x00f0\l|int r8 = r8 + 1\l}"];
Node_39 [shape=record,label="{39\:\ 0x008c|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x00c7|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00c7|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x006c|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x00f0|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x00f0|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0065|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0065|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0065|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0065|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0065|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static java.util.List\<com.google.android.exoplayer2.mediacodec.MediaCodecInfo\> com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfosInternal((r20v0 'key' com.google.android.exoplayer2.mediacodec.MediaCodecUtil$CodecKey A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'mediaCodecList' com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompat A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecUtil$CodecKey;, Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecUtil$MediaCodecListCompat;, ), Ljava\/util\/List, \<, Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecInfo;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_31;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_39;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_43;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_44;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_46;
Node_10 -> Node_11;
Node_10 -> Node_24;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_45;
Node_19 -> Node_6;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_47;
Node_21 -> Node_42[style=dashed];
Node_21 -> Node_48;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_40;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_41;
Node_30 -> Node_49;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_31;
Node_36 -> Node_37;
Node_38 -> Node_2;
Node_39 -> Node_23;
Node_40 -> Node_34;
Node_41 -> Node_34;
Node_42 -> Node_22;
Node_43 -> Node_38;
Node_44 -> Node_38;
Node_45 -> Node_19;
Node_46 -> Node_19;
Node_47 -> Node_19;
Node_48 -> Node_19;
Node_49 -> Node_19;
}

