digraph "CFG forcom.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfo(Ljava\/lang\/String;Z)Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecInfo;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.List) = \l  (r2 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r3 I:boolean A[D('secure' boolean)])\l com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfos(java.lang.String, boolean):java.util.List type: STATIC \l0x0004: INVOKE  (r1 I:boolean) = \l  (r0 I:java.util.List A[D('decoderInfos' java.util.List\<com.google.android.exoplayer2.mediacodec.MediaCodecInfo\>)])\l java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN  \l  (r1 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:java.util.List A[D('decoderInfos' java.util.List\<com.google.android.exoplayer2.mediacodec.MediaCodecInfo\>)])\l  (r1 I:int)\l java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0011: CHECK_CAST  (r1 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo) = (com.google.android.exoplayer2.mediacodec.MediaCodecInfo) (r1 I:?[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.mediacodec.MediaCodecInfo com.google.android.exoplayer2.mediacodec.MediaCodecUtil.getDecoderInfo((r2 I:java.lang.String A[D('mimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[D('secure' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0004\-0x0013: r0 'decoderInfos' java.util.List\<com.google.android.exoplayer2.mediacodec.MediaCodecInfo\>\l  ?\-0x0013: r2 'mimeType' java.lang.String\l  ?\-0x0013: r3 'secure' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
}

