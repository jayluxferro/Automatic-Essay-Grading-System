digraph "CFG forcom.google.android.exoplayer2.drm.DefaultDrmSessionManager.openInternal(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r1 I:com.google.android.exoplayer2.drm.ExoMediaDrm\<T\>) = \l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.mediaDrm com.google.android.exoplayer2.drm.ExoMediaDrm A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}, TRY_ENTER]\l0x0002: INVOKE  (r1 I:byte[]) = (r1 I:com.google.android.exoplayer2.drm.ExoMediaDrm) com.google.android.exoplayer2.drm.ExoMediaDrm.openSession():byte[] type: INTERFACE A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}]\l0x0006: IPUT  \l  (r1 I:byte[])\l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.sessionId byte[] A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}]\l0x0008: IGET  (r1 I:com.google.android.exoplayer2.drm.ExoMediaDrm\<T\>) = \l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.mediaDrm com.google.android.exoplayer2.drm.ExoMediaDrm A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}]\l0x000a: IGET  (r2 I:java.util.UUID) = \l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.uuid java.util.UUID A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}]\l0x000c: IGET  (r3 I:byte[]) = \l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.sessionId byte[] A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}]\l0x000e: INVOKE  (r1 I:com.google.android.exoplayer2.drm.ExoMediaCrypto) = \l  (r1 I:com.google.android.exoplayer2.drm.ExoMediaDrm)\l  (r2 I:java.util.UUID)\l  (r3 I:byte[])\l com.google.android.exoplayer2.drm.ExoMediaDrm.createMediaCrypto(java.util.UUID, byte[]):com.google.android.exoplayer2.drm.ExoMediaCrypto type: INTERFACE A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}]\l0x0012: IPUT  \l  (r1 I:T)\l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.mediaCrypto com.google.android.exoplayer2.drm.ExoMediaCrypto A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}]\l0x0014: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}]\l0x0015: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.state int A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}]\l0x0017: INVOKE  \l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.doLicense():void type: DIRECT A[Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|ExcHandler: NotProvisionedException null\lSplitter:B:0:0x0000\l|0x001b: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allowProvisioning' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: INVOKE  \l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.postProvisionRequest():void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: INVOKE  \l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l  (r0 I:java.lang.Exception A[D('e' android.media.NotProvisionedException)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.onError(java.lang.Exception):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x0026: MOVE_EXCEPTION  (r0 I:?[OBJECT] A[D('e' android.media.NotProvisionedException)]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: INVOKE  \l  (r4 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l  (r0 I:java.lang.Exception A[D('e' java.lang.Exception)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.onError(java.lang.Exception):void type: DIRECT \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.drm.DefaultDrmSessionManager.openInternal((r4 'this' I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[IMMUTABLE_TYPE, THIS]), (r5 I:boolean A[D('allowProvisioning' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001c\-0x0026: r0 'e' android.media.NotProvisionedException\l  0x0027\-0x002a: r0 'e' java.lang.Exception\l  0x0000\-0x002a: r4 'this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>\l  ?\-0x002a: r5 'allowProvisioning' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_2;
Node_6 -> Node_2;
Node_7 -> Node_8;
Node_8 -> Node_2;
}

