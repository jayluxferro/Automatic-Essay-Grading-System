digraph "CFG forcom.google.android.exoplayer2.drm.DefaultDrmSessionManager.postKeyRequest([BI)V" {
subgraph cluster_Region_360825457 {
label = "R(1:(1:1))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_449591573 {
label = "Try: R(1:1) catches: R(2:2|3)";
node [shape=record,color=blue];
subgraph cluster_Region_224537214 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ Exception \-\> 0x0019 \}\lSplitter:B:0:0x0000\l|r8.postRequestHandler.obtainMessage(1, r8.mediaDrm.getKeyRequest(r9, r8.schemeInitData, r8.schemeMimeType, r10, r8.optionalKeyRequestParameters)).sendToTarget()     \/\/ Catch:\{ Exception \-\> 0x0019 \}\l}"];
}
subgraph cluster_Region_228276406 {
label = "R(2:2|3) | ExcHandler: Exception (r6v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0019|ExcHandler: Exception (r6v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|onKeysError(r6)\l}"];
}
}
}
subgraph cluster_Region_228276406 {
label = "R(2:2|3) | ExcHandler: Exception (r6v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0019|ExcHandler: Exception (r6v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|onKeysError(r6)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.drm.DefaultDrmSessionManager.postKeyRequest((r8v0 'this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[IMMUTABLE_TYPE, THIS]), (r9v0 'scope' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'keyType' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_0 -> Node_1;
Node_0 -> Node_2;
}

