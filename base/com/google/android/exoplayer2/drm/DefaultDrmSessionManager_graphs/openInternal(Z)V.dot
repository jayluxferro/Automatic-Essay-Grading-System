digraph "CFG forcom.google.android.exoplayer2.drm.DefaultDrmSessionManager.openInternal(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}\lSplitter:B:0:0x0000\l|r4.sessionId = r4.mediaDrm.openSession()     \/\/ Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}\lr4.mediaCrypto = r4.mediaDrm.createMediaCrypto(r4.uuid, r4.sessionId)     \/\/ Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}\lr4.state = 3     \/\/ Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}\ldoLicense()     \/\/ Catch:\{ NotProvisionedException \-\> 0x001b, Exception \-\> 0x0026 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|ExcHandler: NotProvisionedException (r0v1 'e' android.media.NotProvisionedException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|android.media.NotProvisionedException r0 = move\-exception\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|if (r5 == false) goto L_0x0022\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|postProvisionRequest()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|onError(r0)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|ExcHandler: Exception (r0v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.Exception r0 = move\-exception\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|onError(r0)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.drm.DefaultDrmSessionManager.openInternal((r4v0 'this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[IMMUTABLE_TYPE, THIS]), (r5v0 'allowProvisioning' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2;
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_11;
}

