digraph "CFG forcom.google.android.exoplayer2.drm.DefaultDrmSessionManager.setMode(I[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: IGET  (r0 I:int) = \l  (r2 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.openCount int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mode' int)]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mode' int)]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0011 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: INVOKE  \l  (r4 I:java.lang.Object A[D('offlineLicenseKeySetId' byte[])])\l com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: IPUT  \l  (r3 I:int A[D('mode' int)])\l  (r2 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.mode int \l0x0013: IPUT  \l  (r4 I:byte[] A[D('offlineLicenseKeySetId' byte[])])\l  (r2 I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[D('this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>)])\l com.google.android.exoplayer2.drm.DefaultDrmSessionManager.offlineLicenseKeySetId byte[] \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.drm.DefaultDrmSessionManager.setMode((r2 'this' I:com.google.android.exoplayer2.drm.DefaultDrmSessionManager A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('mode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:byte[] A[D('offlineLicenseKeySetId' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0000\-0x0017: r2 'this' com.google.android.exoplayer2.drm.DefaultDrmSessionManager\<T\>\l  ?\-0x0017: r3 'mode' int\l  ?\-0x0017: r4 'offlineLicenseKeySetId' byte[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_3;
}

