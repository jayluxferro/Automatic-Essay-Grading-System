digraph "CFG forcom.google.android.exoplayer2.drm.FrameworkMediaDrm.getKeyRequest([B[BLjava\/lang\/String;ILjava\/util\/HashMap;)Lcom\/google\/android\/exoplayer2\/drm\/ExoMediaDrm$KeyRequest;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.media.MediaDrm) = (r7 I:com.google.android.exoplayer2.drm.FrameworkMediaDrm) com.google.android.exoplayer2.drm.FrameworkMediaDrm.mediaDrm android.media.MediaDrm \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY] A[D('scope' byte[])]) \l0x0003: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY] A[D('init' byte[])]) \l0x0004: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY] A[D('mimeType' java.lang.String)]) \l0x0005: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('keyType' int)])\l \l0x0006: MOVE  (r5 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY] A[D('optionalParameters' java.util.HashMap\<java.lang.String, java.lang.String\>)])\l \l0x0007: INVOKE  (r6 I:android.media.MediaDrm$KeyRequest) = \l  (r0 I:android.media.MediaDrm)\l  (r1 I:byte[])\l  (r2 I:byte[])\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:java.util.HashMap)\l android.media.MediaDrm.getKeyRequest(byte[], byte[], java.lang.String, int, java.util.HashMap):android.media.MediaDrm$KeyRequest type: VIRTUAL \l0x000b: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.drm.FrameworkMediaDrm$2) =  com.google.android.exoplayer2.drm.FrameworkMediaDrm$2 \l0x000d: INVOKE  \l  (r0 I:com.google.android.exoplayer2.drm.FrameworkMediaDrm$2)\l  (r7 I:com.google.android.exoplayer2.drm.FrameworkMediaDrm)\l  (r6 I:android.media.MediaDrm$KeyRequest A[D('request' android.media.MediaDrm$KeyRequest)])\l com.google.android.exoplayer2.drm.FrameworkMediaDrm.2.\<init\>(com.google.android.exoplayer2.drm.FrameworkMediaDrm, android.media.MediaDrm$KeyRequest):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN  \l  (r0 I:com.google.android.exoplayer2.drm.ExoMediaDrm$KeyRequest)\l \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.drm.ExoMediaDrm$KeyRequest com.google.android.exoplayer2.drm.FrameworkMediaDrm.getKeyRequest((r7 'this' I:com.google.android.exoplayer2.drm.FrameworkMediaDrm A[IMMUTABLE_TYPE, THIS]), (r8 I:byte[] A[D('scope' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:byte[] A[D('init' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[D('mimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('keyType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.util.HashMap\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000b\-0x0010: r6 'request' android.media.MediaDrm$KeyRequest\l  ?\-0x0010: r8 'scope' byte[]\l  ?\-0x0010: r9 'init' byte[]\l  ?\-0x0010: r10 'mimeType' java.lang.String\l  ?\-0x0010: r11 'keyType' int\l  0x0000\-0x0010: r12 'optionalParameters' java.util.HashMap\<java.lang.String, java.lang.String\>\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.media.NotProvisionedException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([B[B, Ljava\/lang\/String;, I, Ljava\/util\/HashMap, \<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;), Lcom\/google\/android\/exoplayer2\/drm\/ExoMediaDrm$KeyRequest;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

