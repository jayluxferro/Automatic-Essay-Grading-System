digraph "CFG forcom.google.android.exoplayer2.drm.OfflineLicenseHelper.newWidevineInstance(Ljava\/lang\/String;Lcom\/google\/android\/exoplayer2\/upstream\/HttpDataSource$Factory;)Lcom\/google\/android\/exoplayer2\/drm\/OfflineLicenseHelper;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|RETURN\l|return newWidevineInstance((com.google.android.exoplayer2.drm.MediaDrmCallback) new com.google.android.exoplayer2.drm.HttpMediaDrmCallback(r2, r3), (java.util.HashMap\<java.lang.String, java.lang.String\>) null)\l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.drm.OfflineLicenseHelper\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\> com.google.android.exoplayer2.drm.OfflineLicenseHelper.newWidevineInstance((r2v0 'licenseUrl' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'httpDataSourceFactory' com.google.android.exoplayer2.upstream.HttpDataSource$Factory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.drm.UnsupportedDrmException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/upstream\/HttpDataSource$Factory;, ), Lcom\/google\/android\/exoplayer2\/drm\/OfflineLicenseHelper, \<, Lcom\/google\/android\/exoplayer2\/drm\/FrameworkMediaCrypto;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

