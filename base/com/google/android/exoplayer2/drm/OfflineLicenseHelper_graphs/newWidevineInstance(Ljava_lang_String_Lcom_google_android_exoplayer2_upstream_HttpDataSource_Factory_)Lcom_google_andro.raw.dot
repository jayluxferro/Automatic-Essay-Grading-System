digraph "CFG forcom.google.android.exoplayer2.drm.OfflineLicenseHelper.newWidevineInstance(Ljava\/lang\/String;Lcom\/google\/android\/exoplayer2\/upstream\/HttpDataSource$Factory;)Lcom\/google\/android\/exoplayer2\/drm\/OfflineLicenseHelper;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.drm.HttpMediaDrmCallback) =  com.google.android.exoplayer2.drm.HttpMediaDrmCallback \l0x0002: INVOKE  \l  (r0 I:com.google.android.exoplayer2.drm.HttpMediaDrmCallback)\l  (r2 I:java.lang.String A[D('licenseUrl' java.lang.String)])\l  (r3 I:com.google.android.exoplayer2.upstream.HttpDataSource$Factory A[D('httpDataSourceFactory' com.google.android.exoplayer2.upstream.HttpDataSource$Factory)])\l com.google.android.exoplayer2.drm.HttpMediaDrmCallback.\<init\>(java.lang.String, com.google.android.exoplayer2.upstream.HttpDataSource$Factory):void type: DIRECT \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: INVOKE  (r0 I:com.google.android.exoplayer2.drm.OfflineLicenseHelper) = \l  (r0 I:com.google.android.exoplayer2.drm.MediaDrmCallback)\l  (r1 I:java.util.HashMap)\l com.google.android.exoplayer2.drm.OfflineLicenseHelper.newWidevineInstance(com.google.android.exoplayer2.drm.MediaDrmCallback, java.util.HashMap):com.google.android.exoplayer2.drm.OfflineLicenseHelper type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN  \l  (r0 I:com.google.android.exoplayer2.drm.OfflineLicenseHelper\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\>)\l \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.drm.OfflineLicenseHelper\<com.google.android.exoplayer2.drm.FrameworkMediaCrypto\> com.google.android.exoplayer2.drm.OfflineLicenseHelper.newWidevineInstance((r2 I:java.lang.String A[D('licenseUrl' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.android.exoplayer2.upstream.HttpDataSource$Factory A[D('httpDataSourceFactory' com.google.android.exoplayer2.upstream.HttpDataSource$Factory), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000a: r2 'licenseUrl' java.lang.String\l  ?\-0x000a: r3 'httpDataSourceFactory' com.google.android.exoplayer2.upstream.HttpDataSource$Factory\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.drm.UnsupportedDrmException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/upstream\/HttpDataSource$Factory;, ), Lcom\/google\/android\/exoplayer2\/drm\/OfflineLicenseHelper, \<, Lcom\/google\/android\/exoplayer2\/drm\/FrameworkMediaCrypto;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

