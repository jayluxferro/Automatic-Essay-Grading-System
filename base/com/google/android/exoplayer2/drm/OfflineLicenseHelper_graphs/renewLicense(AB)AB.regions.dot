digraph "CFG forcom.google.android.exoplayer2.drm.OfflineLicenseHelper.renewLicense([B)[B" {
subgraph cluster_Region_1842820908 {
label = "R(2:(1:(1:2))|4)";
node [shape=record,color=blue];
subgraph cluster_Region_1556012684 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_Region_275397196 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|com.google.android.exoplayer2.util.Assertions.checkNotNull(r3)\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x000b|RETURN\l|return blockingKeyRequest(2, r3, (com.google.android.exoplayer2.drm.DrmInitData) null)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a|DONT_GENERATE\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000c|REMOVE\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d|REMOVE\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000e|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public synchronized byte[] com.google.android.exoplayer2.drm.OfflineLicenseHelper.renewLicense((r2v0 'this' com.google.android.exoplayer2.drm.OfflineLicenseHelper A[IMMUTABLE_TYPE, THIS]), (r3v0 'offlineLicenseKeySetId' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.drm.DrmSession$DrmSessionException]\}]\l}"];
MethodNode -> Node_0;
Node_2 -> Node_5;
Node_2 -> Node_3;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

