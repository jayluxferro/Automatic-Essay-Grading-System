digraph "CFG forcom.google.android.exoplayer2.drm.DrmInitData.get(Ljava\/util\/UUID;)Lcom\/google\/android\/exoplayer2\/drm\/DrmInitData$SchemeData;" {
subgraph cluster_Region_549466716 {
label = "R(3:0|(2:2|(2:(1:8)|(1:4)))|5)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r3 = r5.schemeDatas.length\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_59891888 {
label = "LOOP:0: (2:2|(2:(1:8)|(1:4)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:4:0x000f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:4:0x000f\l|if (r1 \< r3) goto L_0x0006\l}"];
subgraph cluster_Region_2110435148 {
label = "R(2:2|(2:(1:8)|(1:4)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r0 = r2[r1]\l}"];
subgraph cluster_Region_1539678878 {
label = "R(2:(1:8)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1716965105 {
label = "IF [B:3:0x000c] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r0.matches(r6) == true) goto L_0x000e\l}"];
subgraph cluster_Region_1403999882 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1014813798 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|LOOP_END\lLOOP:0: B:1:0x0004\-\>B:4:0x000f\l|r1++\l}"];
}
}
}
}
Node_5 [shape=record,label="{5\:\ 0x0012|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
Node_6 [shape=record,color=red,label="{6\:\ 0x0012|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.drm.DrmInitData$SchemeData com.google.android.exoplayer2.drm.DrmInitData.get((r5v0 'this' com.google.android.exoplayer2.drm.DrmInitData A[IMMUTABLE_TYPE, THIS]), (r6v0 'uuid' java.util.UUID A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_1;
Node_6 -> Node_5;
Node_7 -> Node_8;
}

