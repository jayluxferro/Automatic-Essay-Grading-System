digraph "CFG forcom.google.android.exoplayer2.BaseRenderer.enable(Lcom\/google\/android\/exoplayer2\/RendererConfiguration;[Lcom\/google\/android\/exoplayer2\/Format;Lcom\/google\/android\/exoplayer2\/source\/SampleStream;JZJ)V" {
subgraph cluster_Region_1061070871 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|PHI: r0 \l  PHI: (r0v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r2.state == 0)\lr2.configuration = r3\lr2.state = 1\lonEnabled(r8)\lreplaceStream(r4, r5, r9)\lonPositionReset(r6, r8)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0003}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0016}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0017}"];
MethodNode[shape=record,label="{public final void com.google.android.exoplayer2.BaseRenderer.enable((r2v0 'this' com.google.android.exoplayer2.BaseRenderer A[IMMUTABLE_TYPE, THIS]), (r3v0 'configuration' com.google.android.exoplayer2.RendererConfiguration A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'formats' com.google.android.exoplayer2.Format[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'stream' com.google.android.exoplayer2.source.SampleStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'positionUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'joining' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'offsetUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_5 -> Node_3;
}

