digraph "CFG forcom.google.android.exoplayer2.BaseRenderer.readSource(Lcom\/google\/android\/exoplayer2\/FormatHolder;Lcom\/google\/android\/exoplayer2\/decoder\/DecoderInputBuffer;Z)I" {
subgraph cluster_Region_366376463 {
label = "R(3:0|(1:(2:(2:4|(2:(1:14)|(1:6)))|(1:7)))(1:(2:11|(1:13)))|15)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r1 = r6.stream.readData(r7, r8, r9)\l}"];
subgraph cluster_IfRegion_1508785498 {
label = "IF [B:1:0x0007] THEN: R(1:(2:(2:4|(2:(1:14)|(1:6)))|(1:7))) ELSE: R(1:(2:11|(1:13)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r1 == \-4) goto L_0x0009\l}"];
subgraph cluster_Region_1593327282 {
label = "R(1:(2:(2:4|(2:(1:14)|(1:6)))|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1120524996 {
label = "R(2:(2:4|(2:(1:14)|(1:6)))|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2110675393 {
label = "IF [B:3:0x000d] THEN: R(2:4|(2:(1:14)|(1:6))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r8.isEndOfStream() == true) goto L_0x000f\l}"];
subgraph cluster_Region_1839203896 {
label = "R(2:4|(2:(1:14)|(1:6)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|r6.readEndOfStream = true\l}"];
subgraph cluster_Region_1915926672 {
label = "R(2:(1:14)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2116113384 {
label = "IF [B:5:0x0014] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r6.streamIsFinal == true) goto L_?\l}"];
subgraph cluster_Region_1907232188 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return \-4\l}"];
}
}
subgraph cluster_Region_483542135 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|SYNTHETIC\lRETURN\l|return \-3\l}"];
}
}
}
}
subgraph cluster_Region_2076412229 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|r8.timeUs += r6.streamOffsetUs\l}"];
}
}
}
subgraph cluster_Region_252263366 {
label = "R(1:(2:11|(1:13))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_998898740 {
label = "IF [B:10:0x0023] THEN: R(2:11|(1:13)) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0023|if (r1 == \-5) goto L_0x0025\l}"];
subgraph cluster_Region_1118783628 {
label = "R(2:11|(1:13))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0025|com.google.android.exoplayer2.Format com.google.android.exoplayer2.Format r0 = r7.format\l}"];
subgraph cluster_IfRegion_1685006552 {
label = "IF [B:12:0x0030] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0030|if (r0.subsampleOffsetUs != Long.MAX_VALUE) goto L_0x0032\l}"];
subgraph cluster_Region_1279516130 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0032|r7.format = r0.copyWithSubsampleOffsetUs(r0.subsampleOffsetUs + r6.streamOffsetUs)\l}"];
}
}
}
}
}
}
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0020}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0022}"];
MethodNode[shape=record,label="{protected final int com.google.android.exoplayer2.BaseRenderer.readSource((r6v0 'this' com.google.android.exoplayer2.BaseRenderer A[IMMUTABLE_TYPE, THIS]), (r7v0 'formatHolder' com.google.android.exoplayer2.FormatHolder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'formatRequired' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_7 -> Node_8;
Node_10 -> Node_8[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_8[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_2 -> Node_3;
Node_8 -> Node_15;
Node_9 -> Node_10;
}

