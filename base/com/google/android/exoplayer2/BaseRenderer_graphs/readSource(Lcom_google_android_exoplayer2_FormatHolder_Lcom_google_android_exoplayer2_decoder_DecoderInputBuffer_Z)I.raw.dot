digraph "CFG forcom.google.android.exoplayer2.BaseRenderer.readSource(Lcom\/google\/android\/exoplayer2\/FormatHolder;Lcom\/google\/android\/exoplayer2\/decoder\/DecoderInputBuffer;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, short, byte, char]) = (\-4 ?[int, float, short, byte, char]) \l0x0001: IGET  (r3 I:com.google.android.exoplayer2.source.SampleStream) = (r6 I:com.google.android.exoplayer2.BaseRenderer) com.google.android.exoplayer2.BaseRenderer.stream com.google.android.exoplayer2.source.SampleStream \l0x0003: INVOKE  (r1 I:int) = \l  (r3 I:com.google.android.exoplayer2.source.SampleStream)\l  (r7 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder)])\l  (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l  (r9 I:boolean A[D('formatRequired' boolean)])\l com.google.android.exoplayer2.source.SampleStream.readData(com.google.android.exoplayer2.FormatHolder, com.google.android.exoplayer2.decoder.DecoderInputBuffer, boolean):int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r3 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.isEndOfStream():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0010: IPUT  \l  (r3 I:boolean)\l  (r6 I:com.google.android.exoplayer2.BaseRenderer)\l com.google.android.exoplayer2.BaseRenderer.readEndOfStream boolean \l0x0012: IGET  (r3 I:boolean) = (r6 I:com.google.android.exoplayer2.BaseRenderer) com.google.android.exoplayer2.BaseRenderer.streamIsFinal boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: RETURN  (r2 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: CONST  (r2 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.timeUs long \l0x001b: IGET  (r4 I:long) = (r6 I:com.google.android.exoplayer2.BaseRenderer) com.google.android.exoplayer2.BaseRenderer.streamOffsetUs long \l0x001d: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) \l0x001e: IPUT  \l  (r2 I:long)\l  (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.timeUs long \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('result' int)])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: CONST  (r2 I:?[int, float, short, byte, char]) = (\-5 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: IGET  (r0 I:com.google.android.exoplayer2.Format) = \l  (r7 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder)])\l com.google.android.exoplayer2.FormatHolder.format com.google.android.exoplayer2.Format \l0x0027: IGET  (r2 I:long) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.subsampleOffsetUs long \l0x0029: CONST  (r4 I:?[long, double]) = \l  (9223372036854775807(0x7fffffffffffffff, double:NaN) ?[long, double])\l \l0x002e: CMP_L  (r2 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: IGET  (r2 I:long) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.subsampleOffsetUs long \l0x0034: IGET  (r4 I:long) = (r6 I:com.google.android.exoplayer2.BaseRenderer) com.google.android.exoplayer2.BaseRenderer.streamOffsetUs long \l0x0036: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) \l0x0037: INVOKE  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)]) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l  (r2 I:long)\l com.google.android.exoplayer2.Format.copyWithSubsampleOffsetUs(long):com.google.android.exoplayer2.Format type: VIRTUAL \l0x003b: IPUT  \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l  (r7 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder)])\l com.google.android.exoplayer2.FormatHolder.format com.google.android.exoplayer2.Format \l}"];
MethodNode[shape=record,label="{protected final int com.google.android.exoplayer2.BaseRenderer.readSource((r6 'this' I:com.google.android.exoplayer2.BaseRenderer A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('formatRequired' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0027\-0x003d: r0 'format' com.google.android.exoplayer2.Format\l  0x0007\-0x003d: r1 'result' int\l  ?\-0x003d: r7 'formatHolder' com.google.android.exoplayer2.FormatHolder\l  ?\-0x003d: r8 'buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer\l  ?\-0x003d: r9 'formatRequired' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_6;
Node_8 -> Node_9;
Node_9 -> Node_6;
Node_10 -> Node_11;
Node_11 -> Node_9;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_9;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_9;
}

