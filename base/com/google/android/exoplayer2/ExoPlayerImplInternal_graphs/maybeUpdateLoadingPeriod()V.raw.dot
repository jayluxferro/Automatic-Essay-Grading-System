digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImplInternal.maybeUpdateLoadingPeriod()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0002: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0008: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.playbackInfo com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo \l0x000a: IGET  (r0 I:int) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo)\l com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfo.periodIndex int \l0x000c: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0010: IGET  (r3 I:com.google.android.exoplayer2.Timeline) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x0012: INVOKE  (r3 I:int) = (r3 I:com.google.android.exoplayer2.Timeline) com.google.android.exoplayer2.Timeline.getPeriodCount():int type: VIRTUAL \l0x0016: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newLoadingPeriodIndex' int)])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r0 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:18:0x0072 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x001c: IGET  (r3 I:com.google.android.exoplayer2.source.MediaSource) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.mediaSource com.google.android.exoplayer2.source.MediaSource \l0x001e: INVOKE  (r3 I:com.google.android.exoplayer2.source.MediaSource) com.google.android.exoplayer2.source.MediaSource.maybeThrowSourceInfoRefreshError():void type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0024: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x0026: IGET  (r0 I:int) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.index int \l0x0028: MOVE  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x002c: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x002e: IGET  (r3 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.isLast boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0021 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0034: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x0036: INVOKE  (r3 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.isFullyBuffered():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0021 \l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x003e: IGET  (r3 I:com.google.android.exoplayer2.Timeline) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x0040: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0042: IGET  (r4 I:com.google.android.exoplayer2.Timeline$Period) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.period com.google.android.exoplayer2.Timeline$Period \l0x0044: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('loadingPeriodIndex' int)])\l \l0x0046: INVOKE  (r3 I:com.google.android.exoplayer2.Timeline$Period) = \l  (r3 I:com.google.android.exoplayer2.Timeline)\l  (r0 I:int)\l  (r4 I:com.google.android.exoplayer2.Timeline$Period)\l com.google.android.exoplayer2.Timeline.getPeriod(int, com.google.android.exoplayer2.Timeline$Period):com.google.android.exoplayer2.Timeline$Period type: VIRTUAL \l0x004a: INVOKE  (r8 I:long) = (r3 I:com.google.android.exoplayer2.Timeline$Period) com.google.android.exoplayer2.Timeline.Period.getDurationUs():long type: VIRTUAL \l0x004e: CONST  (r12 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0053: CMP_L  (r3 I:int) = (r8 I:long), (r12 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0055|0x0055: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0021 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0057|0x0057: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0059: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.playingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l}"];
Node_14 [shape=record,label="{14\:\ 0x005b|0x005b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0069 \l}"];
Node_15 [shape=record,label="{15\:\ 0x005d|0x005d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x005f: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.playingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x0061: IGET  (r3 I:int) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.index int \l0x0063: ARITH  (r3 I:int) = (r22 I:int A[D('loadingPeriodIndex' int)]) \- (r3 I:int) \l0x0065: CONST  (r4 I:?[int, float, short, byte, char]) = (100 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0067|0x0067: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0021 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0069|0x0069: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x006b: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x006d: IGET  (r3 I:int) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.index int \l0x006f: ARITH  (r16 I:int) = (r3 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0072|0x0072: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0074: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l}"];
Node_19 [shape=record,label="{19\:\ 0x0076|0x0076: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0101 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0078|0x0078: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x007a: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.playbackInfo com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo \l0x007c: IGET  (r0 I:long) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo)\l com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfo.positionUs long \l0x007e: MOVE  (r18 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0080|0x0080: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0082: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l}"];
Node_22 [shape=record,label="{22\:\ 0x0084|0x0084: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0177 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0086|0x0086: CONST  (r8 I:?[long, double]) = \l  (60000000(0x3938700, double:2.96439388E\-316) ?[long, double])\l \l0x0089: ARITH  (r10 I:long) = (r18 I:long A[D('newLoadingPeriodStartPositionUs' long)]) + (r8 I:long) \l}"];
Node_24 [shape=record,label="{24\:\ 0x008b|0x008b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x008d: IGET  (r3 I:com.google.android.exoplayer2.Timeline) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x008f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0091: IGET  (r4 I:com.google.android.exoplayer2.Timeline$Period) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.period com.google.android.exoplayer2.Timeline$Period \l0x0093: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0094: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newLoadingPeriodIndex' int)])\l \l0x0096: INVOKE  \l  (r3 I:com.google.android.exoplayer2.Timeline)\l  (r0 I:int)\l  (r4 I:com.google.android.exoplayer2.Timeline$Period)\l  (r6 I:boolean)\l com.google.android.exoplayer2.Timeline.getPeriod(int, com.google.android.exoplayer2.Timeline$Period, boolean):com.google.android.exoplayer2.Timeline$Period type: VIRTUAL \l0x0099: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x009b: IGET  (r3 I:com.google.android.exoplayer2.Timeline) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x009d: INVOKE  (r3 I:int) = (r3 I:com.google.android.exoplayer2.Timeline) com.google.android.exoplayer2.Timeline.getPeriodCount():int type: VIRTUAL \l0x00a1: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) \l0x00a3: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newLoadingPeriodIndex' int)])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a5|0x00a5: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0199 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a7|0x00a7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00a9: IGET  (r3 I:com.google.android.exoplayer2.Timeline) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x00ab: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00ad: IGET  (r4 I:com.google.android.exoplayer2.Timeline$Period) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.period com.google.android.exoplayer2.Timeline$Period \l0x00af: IGET  (r4 I:int) = (r4 I:com.google.android.exoplayer2.Timeline$Period) com.google.android.exoplayer2.Timeline.Period.windowIndex int \l0x00b1: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00b3: IGET  (r6 I:com.google.android.exoplayer2.Timeline$Window) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.window com.google.android.exoplayer2.Timeline$Window \l0x00b5: INVOKE  (r3 I:com.google.android.exoplayer2.Timeline$Window) = \l  (r3 I:com.google.android.exoplayer2.Timeline)\l  (r4 I:int)\l  (r6 I:com.google.android.exoplayer2.Timeline$Window)\l com.google.android.exoplayer2.Timeline.getWindow(int, com.google.android.exoplayer2.Timeline$Window):com.google.android.exoplayer2.Timeline$Window type: VIRTUAL \l0x00b9: IGET  (r3 I:boolean) = (r3 I:com.google.android.exoplayer2.Timeline$Window) com.google.android.exoplayer2.Timeline.Window.isDynamic boolean \l}"];
Node_27 [shape=record,label="{27\:\ 0x00bb|0x00bb: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0199 \l}"];
Node_28 [shape=record,label="{28\:\ 0x00bd|0x00bd: CONST  (r17 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00bf|0x00bf: NEW_INSTANCE  (r7 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) =  com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x00c1: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00c3: IGET  (r8 I:com.google.android.exoplayer2.Renderer[]) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.renderers com.google.android.exoplayer2.Renderer[] \l0x00c5: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00c7: IGET  (r9 I:com.google.android.exoplayer2.RendererCapabilities[]) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.rendererCapabilities com.google.android.exoplayer2.RendererCapabilities[] \l0x00c9: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00cb: IGET  (r12 I:com.google.android.exoplayer2.trackselection.TrackSelector) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.trackSelector com.google.android.exoplayer2.trackselection.TrackSelector \l0x00cd: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00cf: IGET  (r13 I:com.google.android.exoplayer2.LoadControl) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadControl com.google.android.exoplayer2.LoadControl \l0x00d1: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00d3: IGET  (r14 I:com.google.android.exoplayer2.source.MediaSource) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.mediaSource com.google.android.exoplayer2.source.MediaSource \l0x00d5: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00d7: IGET  (r3 I:com.google.android.exoplayer2.Timeline$Period) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.period com.google.android.exoplayer2.Timeline$Period \l0x00d9: IGET  (r15 I:java.lang.Object) = (r3 I:com.google.android.exoplayer2.Timeline$Period) com.google.android.exoplayer2.Timeline.Period.uid java.lang.Object \l0x00db: INVOKE  \l  (r7 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l  (r8 I:com.google.android.exoplayer2.Renderer[])\l  (r9 I:com.google.android.exoplayer2.RendererCapabilities[])\l  (r10 I:long A[D('rendererPositionOffsetUs' long)])\l  (r12 I:com.google.android.exoplayer2.trackselection.TrackSelector)\l  (r13 I:com.google.android.exoplayer2.LoadControl)\l  (r14 I:com.google.android.exoplayer2.source.MediaSource)\l  (r15 I:java.lang.Object)\l  (r16 I:int A[D('newLoadingPeriodIndex' int)])\l  (r17 I:boolean A[D('isLastPeriod' boolean)])\l  (r18 I:long A[D('newLoadingPeriodStartPositionUs' long)])\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.\<init\>(com.google.android.exoplayer2.Renderer[], com.google.android.exoplayer2.RendererCapabilities[], long, com.google.android.exoplayer2.trackselection.TrackSelector, com.google.android.exoplayer2.LoadControl, com.google.android.exoplayer2.source.MediaSource, java.lang.Object, int, boolean, long):void type: DIRECT \l0x00de: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00e0: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l}"];
Node_30 [shape=record,label="{30\:\ 0x00e2|0x00e2: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00ea \l}"];
Node_31 [shape=record,label="{31\:\ 0x00e4|0x00e4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00e6: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x00e8: IPUT  \l  (r7 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder A[D('newPeriodHolder' com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)])\l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.next com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l}"];
Node_32 [shape=record,label="{32\:\ 0x00ea|0x00ea: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00ec: IPUT  \l  (r7 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder A[D('newPeriodHolder' com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)])\l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x00ee: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00f0: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x00f2: IGET  (r3 I:com.google.android.exoplayer2.source.MediaPeriod) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.mediaPeriod com.google.android.exoplayer2.source.MediaPeriod \l0x00f4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00f6: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.MediaPeriod)\l  (r0 I:com.google.android.exoplayer2.source.MediaPeriod$Callback)\l com.google.android.exoplayer2.source.MediaPeriod.prepare(com.google.android.exoplayer2.source.MediaPeriod$Callback):void type: INTERFACE \l0x00f9: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00fa: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00fc: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l  (r3 I:boolean)\l com.google.android.exoplayer2.ExoPlayerImplInternal.setIsLoading(boolean):void type: DIRECT \l}"];
Node_33 [shape=record,label="{33\:\ 0x0101|0x0101: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0103: IGET  (r3 I:com.google.android.exoplayer2.Timeline) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x0105: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0107: IGET  (r4 I:com.google.android.exoplayer2.Timeline$Period) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.period com.google.android.exoplayer2.Timeline$Period \l0x0109: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newLoadingPeriodIndex' int)])\l \l0x010b: INVOKE  (r3 I:com.google.android.exoplayer2.Timeline$Period) = \l  (r3 I:com.google.android.exoplayer2.Timeline)\l  (r0 I:int)\l  (r4 I:com.google.android.exoplayer2.Timeline$Period)\l com.google.android.exoplayer2.Timeline.getPeriod(int, com.google.android.exoplayer2.Timeline$Period):com.google.android.exoplayer2.Timeline$Period type: VIRTUAL \l0x010f: IGET  (r5 I:int) = (r3 I:com.google.android.exoplayer2.Timeline$Period) com.google.android.exoplayer2.Timeline.Period.windowIndex int \l0x0111: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0113: IGET  (r3 I:com.google.android.exoplayer2.Timeline) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x0115: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0117: IGET  (r4 I:com.google.android.exoplayer2.Timeline$Window) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.window com.google.android.exoplayer2.Timeline$Window \l0x0119: INVOKE  (r3 I:com.google.android.exoplayer2.Timeline$Window) = \l  (r3 I:com.google.android.exoplayer2.Timeline)\l  (r5 I:int A[D('newLoadingWindowIndex' int)])\l  (r4 I:com.google.android.exoplayer2.Timeline$Window)\l com.google.android.exoplayer2.Timeline.getWindow(int, com.google.android.exoplayer2.Timeline$Window):com.google.android.exoplayer2.Timeline$Window type: VIRTUAL \l0x011d: IGET  (r3 I:int) = (r3 I:com.google.android.exoplayer2.Timeline$Window) com.google.android.exoplayer2.Timeline.Window.firstPeriodIndex int \l0x011f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('newLoadingPeriodIndex' int)])\l \l}"];
Node_34 [shape=record,label="{34\:\ 0x0121|0x0121: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0127 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0123|0x0123: CONST  (r18 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0127|0x0127: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0129: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x012b: INVOKE  (r8 I:long) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.getRendererOffset():long type: VIRTUAL \l0x012f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0131: IGET  (r3 I:com.google.android.exoplayer2.Timeline) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x0133: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0135: IGET  (r4 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x0137: IGET  (r4 I:int) = \l  (r4 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.index int \l0x0139: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x013b: IGET  (r6 I:com.google.android.exoplayer2.Timeline$Period) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.period com.google.android.exoplayer2.Timeline$Period \l0x013d: INVOKE  (r3 I:com.google.android.exoplayer2.Timeline$Period) = \l  (r3 I:com.google.android.exoplayer2.Timeline)\l  (r4 I:int)\l  (r6 I:com.google.android.exoplayer2.Timeline$Period)\l com.google.android.exoplayer2.Timeline.getPeriod(int, com.google.android.exoplayer2.Timeline$Period):com.google.android.exoplayer2.Timeline$Period type: VIRTUAL \l0x0141: INVOKE  (r12 I:long) = (r3 I:com.google.android.exoplayer2.Timeline$Period) com.google.android.exoplayer2.Timeline.Period.getDurationUs():long type: VIRTUAL \l0x0145: ARITH  (r8 I:long) = (r8 I:long) + (r12 I:long) \l0x0146: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0148: IGET  (r12 I:long) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.rendererPositionUs long \l0x014a: ARITH  (r20 I:long) = (r8 I:long) \- (r12 I:long) \l0x014c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x014e: IGET  (r4 I:com.google.android.exoplayer2.Timeline) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x0150: CONST  (r6 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0155: CONST  (r8 I:?[long, double]) = (0 ?[long, double]) \l0x0157: MOVE  (r0 I:?[long, double]) = \l  (r20 I:?[long, double] A[D('defaultPositionProjectionUs' long)])\l \l0x0159: INVOKE  (r8 I:long) = (r8 I:long), (r0 I:long) java.lang.Math.max(long, long):long type: STATIC \l0x015d: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x015f: INVOKE  (r2 I:android.util.Pair) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l  (r4 I:com.google.android.exoplayer2.Timeline)\l  (r5 I:int A[D('newLoadingWindowIndex' int)])\l  (r6 I:long)\l  (r8 I:long)\l com.google.android.exoplayer2.ExoPlayerImplInternal.getPeriodPosition(com.google.android.exoplayer2.Timeline, int, long, long):android.util.Pair type: DIRECT \l}"];
Node_37 [shape=record,label="{37\:\ 0x0163|0x0163: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('defaultPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0021 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0165|0x0165: IGET  (r3 I:java.lang.Object) = \l  (r2 I:android.util.Pair A[D('defaultPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>)])\l android.util.Pair.first java.lang.Object \l0x0167: CHECK_CAST  (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:?[OBJECT, ARRAY]) \l0x0169: INVOKE  (r16 I:int A[D('newLoadingPeriodIndex' int)]) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x016d: IGET  (r3 I:java.lang.Object) = \l  (r2 I:android.util.Pair A[D('defaultPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>)])\l android.util.Pair.second java.lang.Object \l0x016f: CHECK_CAST  (r3 I:java.lang.Long) = (java.lang.Long) (r3 I:?[OBJECT, ARRAY]) \l0x0171: INVOKE  (r18 I:long) = (r3 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x0177|0x0177: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0179: IGET  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x017b: INVOKE  (r8 I:long) = \l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.getRendererOffset():long type: VIRTUAL \l0x017f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0181: IGET  (r3 I:com.google.android.exoplayer2.Timeline) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x0183: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0185: IGET  (r4 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.loadingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x0187: IGET  (r4 I:int) = \l  (r4 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.index int \l0x0189: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x018b: IGET  (r6 I:com.google.android.exoplayer2.Timeline$Period) = (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.period com.google.android.exoplayer2.Timeline$Period \l0x018d: INVOKE  (r3 I:com.google.android.exoplayer2.Timeline$Period) = \l  (r3 I:com.google.android.exoplayer2.Timeline)\l  (r4 I:int)\l  (r6 I:com.google.android.exoplayer2.Timeline$Period)\l com.google.android.exoplayer2.Timeline.getPeriod(int, com.google.android.exoplayer2.Timeline$Period):com.google.android.exoplayer2.Timeline$Period type: VIRTUAL \l0x0191: INVOKE  (r12 I:long) = (r3 I:com.google.android.exoplayer2.Timeline$Period) com.google.android.exoplayer2.Timeline.Period.getDurationUs():long type: VIRTUAL \l0x0195: ARITH  (r10 I:long) = (r8 I:long) + (r12 I:long) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0199|0x0199: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.ExoPlayerImplInternal.maybeUpdateLoadingPeriod((r23 'this' I:com.google.android.exoplayer2.ExoPlayerImplInternal A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x000e\-0x0021: r16 'newLoadingPeriodIndex' int\l  0x002a\-0x0072: r22 'loadingPeriodIndex' int\l  0x00de\-0x0101: r7 'newPeriodHolder' com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder\l  0x008b\-0x0101: r10 'rendererPositionOffsetUs' long\l  0x00bf\-0x0101: r17 'isLastPeriod' boolean\l  0x0080\-0x0101: r18 'newLoadingPeriodStartPositionUs' long\l  0x0125\-0x0127: r18 'newLoadingPeriodStartPositionUs' long\l  0x0163\-0x0177: r2 'defaultPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>\l  0x0111\-0x0177: r5 'newLoadingWindowIndex' int\l  0x014c\-0x0177: r20 'defaultPositionProjectionUs' long\l  0x0199\-0x019c: r10 'rendererPositionOffsetUs' long\l  0x0071\-0x019c: r16 'newLoadingPeriodIndex' int\l  0x0175\-0x019c: r18 'newLoadingPeriodStartPositionUs' long\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_6;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_6;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_6;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_6;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_3;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_33;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_39;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_40;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_40;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_6;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_21;
Node_36 -> Node_37;
Node_37 -> Node_6;
Node_37 -> Node_38[style=dashed];
Node_38 -> Node_21;
Node_39 -> Node_24;
Node_40 -> Node_29;
}

