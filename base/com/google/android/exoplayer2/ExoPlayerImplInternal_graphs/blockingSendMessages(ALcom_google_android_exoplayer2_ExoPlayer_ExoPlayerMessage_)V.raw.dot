digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImplInternal.blockingSendMessages([Lcom\/google\/android\/exoplayer2\/ExoPlayer$ExoPlayerMessage;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r2 I:boolean) = (r4 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.released boolean A[Catch:\{ all \-\> 0x0030 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000e A[Catch:\{ all \-\> 0x0030 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: CONST_STR  (r2 I:java.lang.String) =  \"ExoPlayerImplInternal\" A[Catch:\{ all \-\> 0x0030 \}]\l0x0007: CONST_STR  (r3 I:java.lang.String) =  \"Ignoring messages sent after release.\" A[Catch:\{ all \-\> 0x0030 \}]\l0x0009: INVOKE  (r2 I:java.lang.String), (r3 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x0030 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|SYNTHETIC\lSplitter:B:7:0x000e\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x000e\l|0x000e: IGET  (r1 I:int) = (r4 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.customMessagesSent int A[Catch:\{ all \-\> 0x0030 \}, TRY_ENTER]\l0x0010: ARITH  (r2 I:int) = (r1 I:int) + (1 int) A[Catch:\{ all \-\> 0x0030 \}]\l0x0012: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l com.google.android.exoplayer2.ExoPlayerImplInternal.customMessagesSent int A[Catch:\{ all \-\> 0x0030 \}]\l0x0014: IGET  (r2 I:android.os.Handler) = (r4 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.handler android.os.Handler A[Catch:\{ all \-\> 0x0030 \}]\l0x0016: CONST  (r3 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0030 \}]\l0x0018: INVOKE  (r2 I:android.os.Message) = \l  (r2 I:android.os.Handler)\l  (r3 I:int)\l  (r5 I:java.lang.Object A[D('messages' com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[])])\l android.os.Handler.obtainMessage(int, java.lang.Object):android.os.Message type: VIRTUAL A[Catch:\{ all \-\> 0x0030 \}]\l0x001c: INVOKE  (r2 I:android.os.Message) android.os.Message.sendToTarget():void type: VIRTUAL A[Catch:\{ all \-\> 0x0030 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IGET  (r2 I:int) = (r4 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.customMessagesProcessed int A[Catch:\{ all \-\> 0x0030 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IF  (r2 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char] A[D('messageNumber' int)])  \-\> B:5:0x000c \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|SYNTHETIC\lSplitter:B:11:0x0023\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x0023\l|0x0023: INVOKE  (r4 I:java.lang.Object) java.lang.Object.wait():void type: VIRTUAL A[Catch:\{ InterruptedException \-\> 0x0027 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|ExcHandler: InterruptedException null\lSplitter:B:11:0x0023\l|0x0027: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|SYNTHETIC\lSplitter:B:15:0x0028\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x0028\l|0x0028: INVOKE  (r2 I:java.lang.Thread) =  java.lang.Thread.currentThread():java.lang.Thread type: STATIC A[Catch:\{ all \-\> 0x0030 \}, TRY_ENTER]\l0x002c: INVOKE  (r2 I:java.lang.Thread) java.lang.Thread.interrupt():void type: VIRTUAL A[Catch:\{ all \-\> 0x0030 \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0030: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x0031|0x0031: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0032|0x0032: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void com.google.android.exoplayer2.ExoPlayerImplInternal.blockingSendMessages((r4 'this' I:com.google.android.exoplayer2.ExoPlayerImplInternal A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[] A[D('messages' com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0028\-0x0030: r0 'e' java.lang.InterruptedException\l  0x0014\-0x0030: r1 'messageNumber' int\l  ?\-0x0032: r5 'messages' com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_5;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_12 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_16 -> Node_18;
Node_16 -> Node_9;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

