digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImplInternal.resolveSeekPosition(Lcom\/google\/android\/exoplayer2\/ExoPlayerImplInternal$SeekPosition;)Landroid\/util\/Pair;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: IGET  (r3 I:com.google.android.exoplayer2.Timeline) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition A[D('seekPosition' com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition)])\l com.google.android.exoplayer2.ExoPlayerImplInternal.SeekPosition.timeline com.google.android.exoplayer2.Timeline \l0x0003: INVOKE  (r4 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.Timeline A[D('seekTimeline' com.google.android.exoplayer2.Timeline)])\l com.google.android.exoplayer2.Timeline.isEmpty():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r3 I:com.google.android.exoplayer2.Timeline A[D('seekTimeline' com.google.android.exoplayer2.Timeline)]) = (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|SYNTHETIC\lSplitter:B:3:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000b\l|0x000b: IGET  (r4 I:int) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition A[D('seekPosition' com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition)])\l com.google.android.exoplayer2.ExoPlayerImplInternal.SeekPosition.windowIndex int A[Catch:\{ IndexOutOfBoundsException \-\> 0x0018 \}, TRY_ENTER]\l0x000d: IGET  (r6 I:long) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition A[D('seekPosition' com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition)])\l com.google.android.exoplayer2.ExoPlayerImplInternal.SeekPosition.windowPositionUs long A[Catch:\{ IndexOutOfBoundsException \-\> 0x0018 \}]\l0x000f: INVOKE  (r2 I:android.util.Pair) = \l  (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l  (r3 I:com.google.android.exoplayer2.Timeline A[D('seekTimeline' com.google.android.exoplayer2.Timeline)])\l  (r4 I:int)\l  (r6 I:long)\l com.google.android.exoplayer2.ExoPlayerImplInternal.getPeriodPosition(com.google.android.exoplayer2.Timeline, int, long):android.util.Pair type: DIRECT A[Catch:\{ IndexOutOfBoundsException \-\> 0x0018 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0013: IGET  (r4 I:com.google.android.exoplayer2.Timeline) = (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('seekTimeline' com.google.android.exoplayer2.Timeline)])  \-\> B:11:0x0025 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: RETURN  \l  (r2 I:android.util.Pair\<java.lang.Integer, java.lang.Long\> A[D('periodPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>)])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|ExcHandler: IndexOutOfBoundsException null\lSplitter:B:3:0x000b\l|0x0018: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: NEW_INSTANCE  (r4 I:com.google.android.exoplayer2.IllegalSeekPositionException) =  com.google.android.exoplayer2.IllegalSeekPositionException \l0x001b: IGET  (r5 I:com.google.android.exoplayer2.Timeline) = (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x001d: IGET  (r6 I:int) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition A[D('seekPosition' com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition)])\l com.google.android.exoplayer2.ExoPlayerImplInternal.SeekPosition.windowIndex int \l0x001f: IGET  (r8 I:long) = \l  (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition A[D('seekPosition' com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition)])\l com.google.android.exoplayer2.ExoPlayerImplInternal.SeekPosition.windowPositionUs long \l0x0021: INVOKE  \l  (r4 I:com.google.android.exoplayer2.IllegalSeekPositionException)\l  (r5 I:com.google.android.exoplayer2.Timeline)\l  (r6 I:int)\l  (r8 I:long)\l com.google.android.exoplayer2.IllegalSeekPositionException.\<init\>(com.google.android.exoplayer2.Timeline, int, long):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IGET  (r5 I:com.google.android.exoplayer2.Timeline) = (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x0027: IGET  (r4 I:java.lang.Object) = \l  (r2 I:android.util.Pair A[D('periodPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>)])\l android.util.Pair.first java.lang.Object \l0x0029: CHECK_CAST  (r4 I:java.lang.Integer) = (java.lang.Integer) (r4 I:?[OBJECT, ARRAY]) \l0x002b: INVOKE  (r4 I:int) = (r4 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x002f: IGET  (r6 I:com.google.android.exoplayer2.Timeline$Period) = (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.period com.google.android.exoplayer2.Timeline$Period \l0x0031: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0032: INVOKE  (r4 I:com.google.android.exoplayer2.Timeline$Period) = \l  (r3 I:com.google.android.exoplayer2.Timeline A[D('seekTimeline' com.google.android.exoplayer2.Timeline)])\l  (r4 I:int)\l  (r6 I:com.google.android.exoplayer2.Timeline$Period)\l  (r7 I:boolean)\l com.google.android.exoplayer2.Timeline.getPeriod(int, com.google.android.exoplayer2.Timeline$Period, boolean):com.google.android.exoplayer2.Timeline$Period type: VIRTUAL \l0x0036: IGET  (r4 I:java.lang.Object) = (r4 I:com.google.android.exoplayer2.Timeline$Period) com.google.android.exoplayer2.Timeline.Period.uid java.lang.Object \l0x0038: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.Timeline)\l  (r4 I:java.lang.Object)\l com.google.android.exoplayer2.Timeline.getIndexOfPeriod(java.lang.Object):int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('periodIndex' int)]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0049 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|0x003e: INVOKE  (r4 I:java.lang.Integer) = (r1 I:int A[D('periodIndex' int)]) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0042: IGET  (r5 I:java.lang.Object) = \l  (r2 I:android.util.Pair A[D('periodPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>)])\l android.util.Pair.second java.lang.Object \l0x0044: INVOKE  (r2 I:android.util.Pair A[D('periodPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>)]) = (r4 I:java.lang.Object), (r5 I:java.lang.Object) android.util.Pair.create(java.lang.Object, java.lang.Object):android.util.Pair type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|0x0049: IGET  (r4 I:java.lang.Object) = \l  (r2 I:android.util.Pair A[D('periodPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>)])\l android.util.Pair.first java.lang.Object \l0x004b: CHECK_CAST  (r4 I:java.lang.Integer) = (java.lang.Integer) (r4 I:?[OBJECT, ARRAY]) \l0x004d: INVOKE  (r4 I:int) = (r4 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0051: IGET  (r5 I:com.google.android.exoplayer2.Timeline) = (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x0053: INVOKE  (r1 I:int A[D('periodIndex' int)]) = \l  (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l  (r4 I:int)\l  (r3 I:com.google.android.exoplayer2.Timeline A[D('seekTimeline' com.google.android.exoplayer2.Timeline)])\l  (r5 I:com.google.android.exoplayer2.Timeline)\l com.google.android.exoplayer2.ExoPlayerImplInternal.resolveSubsequentPeriod(int, com.google.android.exoplayer2.Timeline, com.google.android.exoplayer2.Timeline):int type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0057|0x0057: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('periodIndex' int)]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x006d \l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|0x0059: IGET  (r4 I:com.google.android.exoplayer2.Timeline) = (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.timeline com.google.android.exoplayer2.Timeline \l0x005b: IGET  (r5 I:com.google.android.exoplayer2.Timeline$Period) = (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.period com.google.android.exoplayer2.Timeline$Period \l0x005d: INVOKE  (r4 I:com.google.android.exoplayer2.Timeline$Period) = \l  (r4 I:com.google.android.exoplayer2.Timeline)\l  (r1 I:int A[D('periodIndex' int)])\l  (r5 I:com.google.android.exoplayer2.Timeline$Period)\l com.google.android.exoplayer2.Timeline.getPeriod(int, com.google.android.exoplayer2.Timeline$Period):com.google.android.exoplayer2.Timeline$Period type: VIRTUAL \l0x0061: IGET  (r4 I:int) = (r4 I:com.google.android.exoplayer2.Timeline$Period) com.google.android.exoplayer2.Timeline.Period.windowIndex int \l0x0063: CONST  (r6 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0068: INVOKE  (r2 I:android.util.Pair A[D('periodPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>)]) = \l  (r10 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l  (r4 I:int)\l  (r6 I:long)\l com.google.android.exoplayer2.ExoPlayerImplInternal.getPeriodPosition(int, long):android.util.Pair type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x006d|0x006d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('periodPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private android.util.Pair\<java.lang.Integer, java.lang.Long\> com.google.android.exoplayer2.ExoPlayerImplInternal.resolveSeekPosition((r10 'this' I:com.google.android.exoplayer2.ExoPlayerImplInternal A[IMMUTABLE_TYPE, THIS]), (r11 I:com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition A[D('seekPosition' com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0013\-0x0017: r2 'periodPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>\l  0x0019\-0x0025: r0 'e' java.lang.IndexOutOfBoundsException\l  0x003c\-0x006e: r1 'periodIndex' int\l  0x0025\-0x006e: r2 'periodPosition' android.util.Pair\<java.lang.Integer, java.lang.Long\>\l  0x0003\-0x006e: r3 'seekTimeline' com.google.android.exoplayer2.Timeline\l  ?\-0x006e: r11 'seekPosition' com.google.android.exoplayer2.ExoPlayerImplInternal$SeekPosition\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/exoplayer2\/ExoPlayerImplInternal$SeekPosition;, ), Landroid\/util\/Pair, \<, Ljava\/lang\/Integer;, Ljava\/lang\/Long;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_7;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_7;
Node_17 -> Node_7;
}

