digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImplInternal.setPlayingPeriodHolder(Lcom\/google\/android\/exoplayer2\/ExoPlayerImplInternal$MediaPeriodHolder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r5 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.playingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('periodHolder' com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: IGET  (r5 I:com.google.android.exoplayer2.Renderer[]) = (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.renderers com.google.android.exoplayer2.Renderer[] \l0x0009: ARRAY_LENGTH  (r5 I:int) = (r5 I:?[]) \l0x000a: NEW_ARRAY  (r4 I:boolean[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: boolean[] \l0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r5 I:com.google.android.exoplayer2.Renderer[]) = (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.renderers com.google.android.exoplayer2.Renderer[] \l0x000f: ARRAY_LENGTH  (r5 I:int) = (r5 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r5 I:?[int, byte, short, char])  \-\> B:25:0x005d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IGET  (r5 I:com.google.android.exoplayer2.Renderer[]) = (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.renderers com.google.android.exoplayer2.Renderer[] \l0x0014: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r5 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0016: INVOKE  (r5 I:int) = \l  (r3 I:com.google.android.exoplayer2.Renderer A[D('renderer' com.google.android.exoplayer2.Renderer)])\l com.google.android.exoplayer2.Renderer.getState():int type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005b \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: APUT  \l  (r4 I:boolean[] A[D('rendererWasEnabledFlags' boolean[]), IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l  (r5 I:boolean A[IMMUTABLE_TYPE])\l \l0x001f: IGET  (r5 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult) = \l  (r9 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder A[D('periodHolder' com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)])\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.trackSelectorResult com.google.android.exoplayer2.trackselection.TrackSelectorResult \l0x0021: IGET  (r5 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray) = \l  (r5 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult)\l com.google.android.exoplayer2.trackselection.TrackSelectorResult.selections com.google.android.exoplayer2.trackselection.TrackSelectionArray \l0x0023: INVOKE  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r5 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray)\l  (r1 I:int A[D('i' int)])\l com.google.android.exoplayer2.trackselection.TrackSelectionArray.get(int):com.google.android.exoplayer2.trackselection.TrackSelection type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newSelection' com.google.android.exoplayer2.trackselection.TrackSelection)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002b \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: ARITH  (r0 I:int A[D('enabledRendererCount' int)]) = (r0 I:int A[D('enabledRendererCount' int)]) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: AGET  (r5 I:boolean A[IMMUTABLE_TYPE]) = \l  (r4 I:boolean[] A[D('rendererWasEnabledFlags' boolean[]), IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0058 \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('newSelection' com.google.android.exoplayer2.trackselection.TrackSelection)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0043 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: INVOKE  (r5 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.Renderer A[D('renderer' com.google.android.exoplayer2.Renderer)])\l com.google.android.exoplayer2.Renderer.isCurrentStreamFinal():boolean type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|0x0035: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0058 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|0x0037: INVOKE  (r5 I:com.google.android.exoplayer2.source.SampleStream) = \l  (r3 I:com.google.android.exoplayer2.Renderer A[D('renderer' com.google.android.exoplayer2.Renderer)])\l com.google.android.exoplayer2.Renderer.getStream():com.google.android.exoplayer2.source.SampleStream type: INTERFACE \l0x003b: IGET  (r6 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.playingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x003d: IGET  (r6 I:com.google.android.exoplayer2.source.SampleStream[]) = \l  (r6 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.sampleStreams com.google.android.exoplayer2.source.SampleStream[] \l0x003f: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|0x0041: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0058 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|0x0043: IGET  (r5 I:com.google.android.exoplayer2.Renderer) = (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.rendererMediaClockSource com.google.android.exoplayer2.Renderer \l}"];
Node_20 [shape=record,label="{20\:\ 0x0045|0x0045: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('renderer' com.google.android.exoplayer2.Renderer)]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0052 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0047|0x0047: IGET  (r5 I:com.google.android.exoplayer2.util.StandaloneMediaClock) = (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.standaloneMediaClock com.google.android.exoplayer2.util.StandaloneMediaClock \l0x0049: IGET  (r6 I:com.google.android.exoplayer2.util.MediaClock) = (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.rendererMediaClock com.google.android.exoplayer2.util.MediaClock \l0x004b: INVOKE  \l  (r5 I:com.google.android.exoplayer2.util.StandaloneMediaClock)\l  (r6 I:com.google.android.exoplayer2.util.MediaClock)\l com.google.android.exoplayer2.util.StandaloneMediaClock.synchronize(com.google.android.exoplayer2.util.MediaClock):void type: VIRTUAL \l0x004e: IPUT  \l  (r7 I:com.google.android.exoplayer2.util.MediaClock)\l  (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l com.google.android.exoplayer2.ExoPlayerImplInternal.rendererMediaClock com.google.android.exoplayer2.util.MediaClock \l0x0050: IPUT  \l  (r7 I:com.google.android.exoplayer2.Renderer)\l  (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l com.google.android.exoplayer2.ExoPlayerImplInternal.rendererMediaClockSource com.google.android.exoplayer2.Renderer \l}"];
Node_22 [shape=record,label="{22\:\ 0x0052|0x0052: INVOKE  \l  (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l  (r3 I:com.google.android.exoplayer2.Renderer A[D('renderer' com.google.android.exoplayer2.Renderer)])\l com.google.android.exoplayer2.ExoPlayerImplInternal.ensureStopped(com.google.android.exoplayer2.Renderer):void type: DIRECT \l0x0055: INVOKE  \l  (r3 I:com.google.android.exoplayer2.Renderer A[D('renderer' com.google.android.exoplayer2.Renderer)])\l com.google.android.exoplayer2.Renderer.disable():void type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x0058|0x0058: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|0x005b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x005d|0x005d: IPUT  \l  (r9 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder A[D('periodHolder' com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)])\l  (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l com.google.android.exoplayer2.ExoPlayerImplInternal.playingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x005f: IGET  (r5 I:android.os.Handler) = (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.eventHandler android.os.Handler \l0x0061: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0062: IGET  (r7 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult) = \l  (r9 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder A[D('periodHolder' com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)])\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.trackSelectorResult com.google.android.exoplayer2.trackselection.TrackSelectorResult \l0x0064: INVOKE  (r5 I:android.os.Message) = \l  (r5 I:android.os.Handler)\l  (r6 I:int)\l  (r7 I:java.lang.Object)\l android.os.Handler.obtainMessage(int, java.lang.Object):android.os.Message type: VIRTUAL \l0x0068: INVOKE  (r5 I:android.os.Message) android.os.Message.sendToTarget():void type: VIRTUAL \l0x006b: INVOKE  \l  (r8 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l  (r4 I:boolean[] A[D('rendererWasEnabledFlags' boolean[])])\l  (r0 I:int A[D('enabledRendererCount' int)])\l com.google.android.exoplayer2.ExoPlayerImplInternal.enableRenderers(boolean[], int):void type: DIRECT \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.ExoPlayerImplInternal.setPlayingPeriodHolder((r8 'this' I:com.google.android.exoplayer2.ExoPlayerImplInternal A[IMMUTABLE_TYPE, THIS]), (r9 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder A[D('periodHolder' com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0027\-0x005b: r2 'newSelection' com.google.android.exoplayer2.trackselection.TrackSelection\l  0x0016\-0x005d: r3 'renderer' com.google.android.exoplayer2.Renderer\l  0x0007\-0x006e: r0 'enabledRendererCount' int\l  0x000d\-0x006e: r1 'i' int\l  0x000c\-0x006e: r4 'rendererWasEnabledFlags' boolean[]\l  ?\-0x006e: r9 'periodHolder' com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_25;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_24;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_23;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_23;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_4;
Node_24 -> Node_9;
Node_25 -> Node_2;
}

