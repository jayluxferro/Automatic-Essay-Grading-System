digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImplInternal.maybeUpdateLoadingPeriod()V" {
subgraph cluster_Region_838022458 {
label = "R(2:(1:2)(2:6|(1:(2:(1:43)|(1:(1:16)(1:44))))(1:42))|(2:(2:5|40)|(6:(1:19)(2:32|(1:34)(2:35|(1:37)(1:46)))|(1:22)(1:38)|23|28|(1:30)|31))) | DECL_VAR: int newLoadingPeriodIndex, long newLoadingPeriodStartPositionUs, long rendererPositionOffsetUs\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_506541147 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: R(2:6|(1:(2:(1:43)|(1:(1:16)(1:44))))(1:42))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r23.loadingPeriodHolder == null) goto L_0x0006\l}"];
subgraph cluster_Region_768498985 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r16 = r23.playbackInfo.periodIndex\l}"];
}
subgraph cluster_Region_1041548936 {
label = "R(2:6|(1:(2:(1:43)|(1:(1:16)(1:44))))(1:42))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0022|int r22 = r23.loadingPeriodHolder.index\l}"];
subgraph cluster_IfRegion_1193829550 {
label = "IF [B:7:0x0030, B:9:0x003a] THEN: R(1:(2:(1:43)|(1:(1:16)(1:44)))) ELSE: R(1:42)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0030|if (r23.loadingPeriodHolder.isLast != true) goto L_0x0032\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|ADDED_TO_REGION\l|if (r23.loadingPeriodHolder.isFullyBuffered() != false) goto L_0x003c\l}"];
subgraph cluster_Region_1257886547 {
label = "R(1:(2:(1:43)|(1:(1:16)(1:44))))";
node [shape=record,color=blue];
subgraph cluster_Region_1653306835 {
label = "R(2:(1:43)|(1:(1:16)(1:44)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1180261057 {
label = "IF [B:11:0x0055] THEN: R(1:43) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0055|if (r23.timeline.getPeriod(r22, r23.period).getDurationUs() == com.google.android.exoplayer2.C1260C.TIME_UNSET) goto L_?\l}"];
subgraph cluster_Region_1972311605 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1896218942 {
label = "R(1:(1:16)(1:44))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_957144702 {
label = "IF [B:13:0x005b, B:15:0x0067] THEN: R(1:16) ELSE: R(1:44)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x005b|if (r23.playingPeriodHolder == null) goto L_0x0069\l}"];
Node_15 [shape=record,label="{15\:\ 0x0067|ADDED_TO_REGION\l|if ((r22 \- r23.playingPeriodHolder.index) != 100) goto L_0x0069\l}"];
subgraph cluster_Region_972371363 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0069|int r16 = r23.loadingPeriodHolder.index + 1\l}"];
}
subgraph cluster_Region_1969305350 {
label = "R(1:44)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
}
subgraph cluster_Region_1291706772 {
label = "R(1:42)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_1104046208 {
label = "R(2:(2:5|40)|(6:(1:19)(2:32|(1:34)(2:35|(1:37)(1:46)))|(1:22)(1:38)|23|28|(1:30)|31))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_40566 {
label = "IF [B:4:0x0018] THEN: R(2:5|40) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|if (r16 \>= r23.timeline.getPeriodCount()) goto L_0x001a\l}"];
subgraph cluster_Region_2082820215 {
label = "R(2:5|40)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|r23.mediaSource.maybeThrowSourceInfoRefreshError()\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
}
}
subgraph cluster_Region_804472306 {
label = "R(6:(1:19)(2:32|(1:34)(2:35|(1:37)(1:46)))|(1:22)(1:38)|23|28|(1:30)|31)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1601695526 {
label = "IF [B:18:0x0076] THEN: R(1:19) ELSE: R(2:32|(1:34)(2:35|(1:37)(1:46)))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0076|if (r23.loadingPeriodHolder == null) goto L_0x0078\l}"];
subgraph cluster_Region_599742944 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0078|r18 = r23.playbackInfo.positionUs\l}"];
}
subgraph cluster_Region_1928235456 {
label = "R(2:32|(1:34)(2:35|(1:37)(1:46)))";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0101|int int r5 = r23.timeline.getPeriod(r16, r23.period).windowIndex\l}"];
subgraph cluster_IfRegion_1655104019 {
label = "IF [B:33:0x0121] THEN: R(1:34) ELSE: R(2:35|(1:37)(1:46))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0121|if (r16 != r23.timeline.getWindow(r5, r23.window).firstPeriodIndex) goto L_0x0123\l}"];
subgraph cluster_Region_1994169170 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0123|r18 = 0\l}"];
}
subgraph cluster_Region_797084616 {
label = "R(2:35|(1:37)(1:46))";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0127|android.util.Pair android.util.Pair\<java.lang.Integer, java.lang.Long\> r2 = getPeriodPosition(r23.timeline, r5, com.google.android.exoplayer2.C1260C.TIME_UNSET, java.lang.Math.max(0, (r23.loadingPeriodHolder.getRendererOffset() + r23.timeline.getPeriod(r23.loadingPeriodHolder.index, r23.period).getDurationUs()) \- r23.rendererPositionUs))\l}"];
subgraph cluster_IfRegion_1895476228 {
label = "IF [B:36:0x0163] THEN: R(1:37) ELSE: R(1:46)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0163|if (r2 != null) goto L_0x0165\l}"];
subgraph cluster_Region_558728339 {
label = "R(1:37)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0165|int r16 = ((java.lang.Integer) r2.first).intValue()\llong r18 = ((java.lang.Long) r2.second).longValue()\l}"];
}
subgraph cluster_Region_1842288160 {
label = "R(1:46)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
}
}
subgraph cluster_IfRegion_1773721281 {
label = "IF [B:21:0x0084] THEN: R(1:22) ELSE: R(1:38)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0084|if (r23.loadingPeriodHolder == null) goto L_0x0086\l}"];
subgraph cluster_Region_1030180615 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0086|long r10 = r18 + 60000000\l}"];
}
subgraph cluster_Region_416832148 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0177|long r10 = r23.loadingPeriodHolder.getRendererOffset() + r23.timeline.getPeriod(r23.loadingPeriodHolder.index, r23.period).getDurationUs()\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x008b|PHI: r10 \l  PHI: (r10v1 'rendererPositionOffsetUs' long) = (r10v0 'rendererPositionOffsetUs' long), (r10v2 'rendererPositionOffsetUs' long) binds: [B:38:0x0177, B:22:0x0086] A[DONT_GENERATE, DONT_INLINE]\l|r23.timeline.getPeriod(r16, r23.period, true)\l}"];
Node_28 [shape=record,label="{28\:\ 0x00bf|PHI: r17 \l  PHI: (r17v1 'isLastPeriod' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder r7 = new com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder(r23.renderers, r23.rendererCapabilities, r10, r23.trackSelector, r23.loadControl, r23.mediaSource, r23.period.uid, r16, r16 == r23.timeline.getPeriodCount() + \-1 && !r23.timeline.getWindow(r23.period.windowIndex, r23.window).isDynamic, r18)\l}"];
subgraph cluster_IfRegion_1061721449 {
label = "IF [B:29:0x00e2] THEN: R(1:30) ELSE: null";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00e2|if (r23.loadingPeriodHolder != null) goto L_0x00e4\l}"];
subgraph cluster_Region_1994029493 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00e4|r23.loadingPeriodHolder.next = r7\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x00ea|r23.loadingPeriodHolder = r7\lr23.loadingPeriodHolder.mediaPeriod.prepare(r23)\lsetIsLoading(true)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000e|PHI: r16 \l  PHI: (r16v1 'newLoadingPeriodIndex' int) = (r16v0 'newLoadingPeriodIndex' int), (r16v4 'newLoadingPeriodIndex' int) binds: [B:16:0x0069, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0032}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003c}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0057}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x005d}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0072}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0080|PHI: r16 r18 \l  PHI: (r16v3 'newLoadingPeriodIndex' int) = (r16v2 'newLoadingPeriodIndex' int), (r16v1 'newLoadingPeriodIndex' int), (r16v1 'newLoadingPeriodIndex' int) binds: [B:37:0x0165, B:34:0x0123, B:19:0x0078] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v2 'newLoadingPeriodStartPositionUs' long) = (r18v0 'newLoadingPeriodStartPositionUs' long), (r18v1 'newLoadingPeriodStartPositionUs' long), (r18v3 'newLoadingPeriodStartPositionUs' long) binds: [B:37:0x0165, B:34:0x0123, B:19:0x0078] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x00a5}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x00a7}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x00bb|REMOVE\lADDED_TO_REGION\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x00bd}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0199}"];
Node_41 [shape=record,color=red,label="{41\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_45 [shape=record,color=red,label="{45\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.ExoPlayerImplInternal.maybeUpdateLoadingPeriod((r23v0 'this' com.google.android.exoplayer2.ExoPlayerImplInternal A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_41[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_42[style=dashed];
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_43;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_15 -> Node_16;
Node_15 -> Node_44[style=dashed];
Node_16 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_17[style=dashed];
Node_5 -> Node_40;
Node_18 -> Node_19;
Node_18 -> Node_32[style=dashed];
Node_19 -> Node_20;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_35[style=dashed];
Node_34 -> Node_20;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_46[style=dashed];
Node_37 -> Node_20;
Node_21 -> Node_22;
Node_21 -> Node_38[style=dashed];
Node_22 -> Node_23;
Node_38 -> Node_23;
Node_23 -> Node_24;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_45;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_17 -> Node_18;
Node_20 -> Node_21;
Node_24 -> Node_25;
Node_24 -> Node_39;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_39;
Node_27 -> Node_28;
Node_39 -> Node_28;
}

