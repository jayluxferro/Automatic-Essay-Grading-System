digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImplInternal.isTimelineReady(J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0005: CMP_L  (r0 I:int) = \l  (r4 I:long A[D('playingPeriodDurationUs' long)])\l  (r0 I:long)\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo) = (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.playbackInfo com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo \l0x000b: IGET  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo)\l com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfo.positionUs long \l0x000d: CMP_L  (r0 I:int) = \l  (r0 I:long)\l  (r4 I:long A[D('playingPeriodDurationUs' long)])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IGET  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.playingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x0013: IGET  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.next com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0021 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IGET  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.playingPeriodHolder com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x0019: IGET  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder) = \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.next com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder \l0x001b: IGET  (r0 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$MediaPeriodHolder)\l com.google.android.exoplayer2.ExoPlayerImplInternal.MediaPeriodHolder.prepared boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: RETURN  (r0 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.ExoPlayerImplInternal.isTimelineReady((r3 'this' I:com.google.android.exoplayer2.ExoPlayerImplInternal A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[D('playingPeriodDurationUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0022: r4 'playingPeriodDurationUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_9;
}

