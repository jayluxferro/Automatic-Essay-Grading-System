digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImplInternal.setPlayWhenReadyInternal(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0001: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: IPUT  \l  (r0 I:boolean)\l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l com.google.android.exoplayer2.ExoPlayerImplInternal.rebuffering boolean \l0x0004: IPUT  \l  (r4 I:boolean A[D('playWhenReady' boolean)])\l  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l com.google.android.exoplayer2.ExoPlayerImplInternal.playWhenReady boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('playWhenReady' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.stopRenderers():void type: DIRECT \l0x000b: INVOKE  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.updatePlaybackPositions():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IGET  (r0 I:int) = (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.state int \l0x0011: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.startRenderers():void type: DIRECT \l0x0017: IGET  (r0 I:android.os.Handler) = (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.handler android.os.Handler \l0x0019: INVOKE  (r0 I:android.os.Handler), (r2 I:int) android.os.Handler.sendEmptyMessage(int):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IGET  (r0 I:int) = (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.state int \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IGET  (r0 I:android.os.Handler) = (r3 I:com.google.android.exoplayer2.ExoPlayerImplInternal) com.google.android.exoplayer2.ExoPlayerImplInternal.handler android.os.Handler \l0x0023: INVOKE  (r0 I:android.os.Handler), (r2 I:int) android.os.Handler.sendEmptyMessage(int):boolean type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.ExoPlayerImplInternal.setPlayWhenReadyInternal((r3 'this' I:com.google.android.exoplayer2.ExoPlayerImplInternal A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[D('playWhenReady' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0026: r4 'playWhenReady' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_3;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_3;
}

