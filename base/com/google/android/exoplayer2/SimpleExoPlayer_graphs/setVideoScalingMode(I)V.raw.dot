digraph "CFG forcom.google.android.exoplayer2.SimpleExoPlayer.setVideoScalingMode(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r11 I:int A[D('videoScalingMode' int)])\l  (r10 I:com.google.android.exoplayer2.SimpleExoPlayer)\l com.google.android.exoplayer2.SimpleExoPlayer.videoScalingMode int \l0x0002: IGET  (r4 I:int) = (r10 I:com.google.android.exoplayer2.SimpleExoPlayer) com.google.android.exoplayer2.SimpleExoPlayer.videoRendererCount int \l0x0004: NEW_ARRAY  (r2 I:com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[] \l0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: IGET  (r5 I:com.google.android.exoplayer2.Renderer[]) = (r10 I:com.google.android.exoplayer2.SimpleExoPlayer) com.google.android.exoplayer2.SimpleExoPlayer.renderers com.google.android.exoplayer2.Renderer[] \l0x0009: ARRAY_LENGTH  (r6 I:int) = (r5 I:?[]) \l0x000a: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r4 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:6:0x0029 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: AGET  (r3 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0010: INVOKE  (r7 I:int) = \l  (r3 I:com.google.android.exoplayer2.Renderer A[D('renderer' com.google.android.exoplayer2.Renderer)])\l com.google.android.exoplayer2.Renderer.getTrackType():int type: INTERFACE \l0x0014: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: ARITH  (r0 I:int) = (r1 I:int A[D('count' int)]) + (1 int) \l0x0019: NEW_INSTANCE  (r7 I:com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage) =  com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage \l0x001b: CONST  (r8 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x001c: INVOKE  (r9 I:java.lang.Integer) = (r11 I:int A[D('videoScalingMode' int)]) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0020: INVOKE  \l  (r7 I:com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage)\l  (r3 I:com.google.android.exoplayer2.ExoPlayer$ExoPlayerComponent A[D('renderer' com.google.android.exoplayer2.Renderer)])\l  (r8 I:int)\l  (r9 I:java.lang.Object)\l com.google.android.exoplayer2.ExoPlayer.ExoPlayerMessage.\<init\>(com.google.android.exoplayer2.ExoPlayer$ExoPlayerComponent, int, java.lang.Object):void type: DIRECT \l0x0023: APUT  \l  (r2 I:?[OBJECT, ARRAY][] A[D('messages' com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[])])\l  (r1 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x0027: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: IGET  (r4 I:com.google.android.exoplayer2.ExoPlayer) = (r10 I:com.google.android.exoplayer2.SimpleExoPlayer) com.google.android.exoplayer2.SimpleExoPlayer.player com.google.android.exoplayer2.ExoPlayer \l0x002b: INVOKE  \l  (r4 I:com.google.android.exoplayer2.ExoPlayer)\l  (r2 I:com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[] A[D('messages' com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[])])\l com.google.android.exoplayer2.ExoPlayer.sendMessages(com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[]):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('count' int)])\l \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.SimpleExoPlayer.setVideoScalingMode((r10 'this' I:com.google.android.exoplayer2.SimpleExoPlayer A[IMMUTABLE_TYPE, THIS]), (r11 I:int A[D('videoScalingMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0007\-0x000c: r0 'count' int\l  0x000c\-0x0019: r1 'count' int\l  0x0019\-0x0028: r0 'count' int\l  0x0010\-0x0029: r3 'renderer' com.google.android.exoplayer2.Renderer\l  0x0028\-0x0030: r1 'count' int\l  0x0030\-0x0030: r0 'count' int\l  0x0006\-0x0030: r2 'messages' com.google.android.exoplayer2.ExoPlayer$ExoPlayerMessage[]\l  0x002f\-0x0030: r3 'renderer' com.google.android.exoplayer2.Renderer\l  ?\-0x0030: r11 'videoScalingMode' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_8 -> Node_5;
}

