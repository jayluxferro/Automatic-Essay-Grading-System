digraph "CFG forcom.google.android.exoplayer2.util.AtomicFile.openRead()Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:com.google.android.exoplayer2.util.AtomicFile) com.google.android.exoplayer2.util.AtomicFile.restoreBackup():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0005: IGET  (r1 I:java.io.File) = (r2 I:com.google.android.exoplayer2.util.AtomicFile) com.google.android.exoplayer2.util.AtomicFile.baseName java.io.File \l0x0007: INVOKE  (r0 I:java.io.FileInputStream), (r1 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN  (r0 I:java.io.InputStream) \l}"];
MethodNode[shape=record,label="{public java.io.InputStream com.google.android.exoplayer2.util.AtomicFile.openRead((r2 'this' I:com.google.android.exoplayer2.util.AtomicFile A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.FileNotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

