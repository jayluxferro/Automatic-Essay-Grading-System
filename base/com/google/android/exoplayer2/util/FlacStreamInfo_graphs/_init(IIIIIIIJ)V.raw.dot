digraph "CFG forcom.google.android.exoplayer2.util.FlacStreamInfo.\<init\>(IIIIIIIJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:int A[D('minBlockSize' int)])\l  (r0 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.minBlockSize int \l0x0005: IPUT  \l  (r2 I:int A[D('maxBlockSize' int)])\l  (r0 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.maxBlockSize int \l0x0007: IPUT  \l  (r3 I:int A[D('minFrameSize' int)])\l  (r0 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.minFrameSize int \l0x0009: IPUT  \l  (r4 I:int A[D('maxFrameSize' int)])\l  (r0 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.maxFrameSize int \l0x000b: IPUT  \l  (r5 I:int A[D('sampleRate' int)])\l  (r0 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.sampleRate int \l0x000d: IPUT  \l  (r6 I:int A[D('channels' int)])\l  (r0 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.channels int \l0x000f: IPUT  \l  (r7 I:int A[D('bitsPerSample' int)])\l  (r0 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.bitsPerSample int \l0x0011: IPUT  \l  (r8 I:long A[D('totalSamples' long)])\l  (r0 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.totalSamples long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.util.FlacStreamInfo.\<init\>((r0 'this' I:com.google.android.exoplayer2.util.FlacStreamInfo A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[D('minBlockSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('maxBlockSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('minFrameSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('maxFrameSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('sampleRate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('channels' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('bitsPerSample' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[D('totalSamples' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0013: r1 'minBlockSize' int\l  ?\-0x0013: r2 'maxBlockSize' int\l  ?\-0x0013: r3 'minFrameSize' int\l  ?\-0x0013: r4 'maxFrameSize' int\l  ?\-0x0013: r5 'sampleRate' int\l  ?\-0x0013: r6 'channels' int\l  ?\-0x0013: r7 'bitsPerSample' int\l  ?\-0x0013: r8 'totalSamples' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

