digraph "CFG forcom.google.android.exoplayer2.util.FlacStreamInfo.\<init\>([BI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x0002: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0004: INVOKE  (r4 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0007: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) =  com.google.android.exoplayer2.util.ParsableBitArray \l0x0009: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r5 I:byte[] A[D('data' byte[])])\l com.google.android.exoplayer2.util.ParsableBitArray.\<init\>(byte[]):void type: DIRECT \l0x000c: ARITH  (r1 I:int) = (r6 I:int A[D('offset' int)]) * (8 int) \l0x000e: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratch' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.setPosition(int):void type: VIRTUAL \l0x0011: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratch' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0015: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.minBlockSize int \l0x0017: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratch' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x001b: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.maxBlockSize int \l0x001d: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratch' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0021: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.minFrameSize int \l0x0023: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratch' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0027: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.maxFrameSize int \l0x0029: CONST  (r1 I:?[int, float, short, byte, char]) = (20 ?[int, float, short, byte, char]) \l0x002b: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratch' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x002f: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.sampleRate int \l0x0031: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0032: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratch' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0036: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0038: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.channels int \l0x003a: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x003b: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratch' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x003f: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x0041: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.bitsPerSample int \l0x0043: CONST  (r1 I:?[int, float, short, byte, char]) = (36 ?[int, float, short, byte, char]) \l0x0045: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratch' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0049: CAST  (r2 I:long) = (long) (r1 I:int) \l0x004a: IPUT  \l  (r2 I:long)\l  (r4 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l com.google.android.exoplayer2.util.FlacStreamInfo.totalSamples long \l}"];
Node_1 [shape=record,label="{1\:\ 0x004c|0x004c: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.util.FlacStreamInfo.\<init\>((r4 'this' I:com.google.android.exoplayer2.util.FlacStreamInfo A[IMMUTABLE_TYPE, THIS]), (r5 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000c\-0x004c: r0 'scratch' com.google.android.exoplayer2.util.ParsableBitArray\l  ?\-0x004c: r5 'data' byte[]\l  ?\-0x004c: r6 'offset' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

