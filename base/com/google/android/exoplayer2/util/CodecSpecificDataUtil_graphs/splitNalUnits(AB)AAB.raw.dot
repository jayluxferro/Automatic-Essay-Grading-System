digraph "CFG forcom.google.android.exoplayer2.util.CodecSpecificDataUtil.splitNalUnits([B)[[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r7 I:boolean) = (r9 I:byte[] A[D('data' byte[])]), (r8 I:int) com.google.android.exoplayer2.util.CodecSpecificDataUtil.isNalStartCode(byte[], int):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: CHECK_CAST  (r7 I:byte[][]) = (byte[][]) (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r7 I:byte[][]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: NEW_INSTANCE  (r6 I:java.util.ArrayList) =  java.util.ArrayList \l0x000d: INVOKE  (r6 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0010: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: INVOKE  (r7 I:java.lang.Integer) = (r3 I:int A[D('nalUnitIndex' int)]) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0015: INVOKE  \l  (r6 I:java.util.List A[D('starts' java.util.List\<java.lang.Integer\>)])\l  (r7 I:java.lang.Object)\l java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0018: SGET  (r7 I:byte[]) =  com.google.android.exoplayer2.util.CodecSpecificDataUtil.NAL_START_CODE byte[] \l0x001a: ARRAY_LENGTH  (r7 I:int) = (r7 I:?[]) \l0x001b: ARITH  (r7 I:int) = (r7 I:int) + (r3 I:int A[D('nalUnitIndex' int)]) \l0x001c: INVOKE  (r3 I:int A[D('nalUnitIndex' int)]) = (r9 I:byte[] A[D('data' byte[])]), (r7 I:int) com.google.android.exoplayer2.util.CodecSpecificDataUtil.findNalStartCode(byte[], int):int type: STATIC \l0x0020: CONST  (r7 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nalUnitIndex' int)]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: INVOKE  (r7 I:int) = \l  (r6 I:java.util.List A[D('starts' java.util.List\<java.lang.Integer\>)])\l java.util.List.size():int type: INTERFACE \l0x0027: NEW_ARRAY  (r4 I:byte[][]) = (r7 I:int A[IMMUTABLE_TYPE]) type: byte[][] \l0x0029: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: INVOKE  (r7 I:int) = \l  (r6 I:java.util.List A[D('starts' java.util.List\<java.lang.Integer\>)])\l java.util.List.size():int type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r7 I:?[int, byte, short, char])  \-\> B:15:0x005d \l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: INVOKE  (r7 I:java.lang.Object) = \l  (r6 I:java.util.List A[D('starts' java.util.List\<java.lang.Integer\>)])\l  (r1 I:int A[D('i' int)])\l java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0034: CHECK_CAST  (r7 I:java.lang.Integer) = (java.lang.Integer) (r7 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  (r5 I:int) = (r7 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x003a: INVOKE  (r7 I:int) = \l  (r6 I:java.util.List A[D('starts' java.util.List\<java.lang.Integer\>)])\l java.util.List.size():int type: INTERFACE \l0x003e: ARITH  (r7 I:int) = (r7 I:int) + (\-1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r7 I:?[int, byte, short, char])  \-\> B:14:0x005b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: ARITH  (r7 I:int) = (r1 I:int A[D('i' int)]) + (1 int) \l0x0044: INVOKE  (r7 I:java.lang.Object) = \l  (r6 I:java.util.List A[D('starts' java.util.List\<java.lang.Integer\>)])\l  (r7 I:int)\l java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0048: CHECK_CAST  (r7 I:java.lang.Integer) = (java.lang.Integer) (r7 I:?[OBJECT, ARRAY]) \l0x004a: INVOKE  (r0 I:int) = (r7 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x004e|0x004e: ARITH  (r7 I:int) = (r0 I:int A[D('endIndex' int)]) \- (r5 I:int A[D('startIndex' int)]) \l0x0050: NEW_ARRAY  (r2 I:byte[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0052: ARRAY_LENGTH  (r7 I:int) = (r2 I:?[] A[D('nal' byte[])]) \l0x0053: INVOKE  \l  (r9 I:java.lang.Object A[D('data' byte[])])\l  (r5 I:int A[D('startIndex' int)])\l  (r2 I:java.lang.Object A[D('nal' byte[])])\l  (r8 I:int)\l  (r7 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0056: APUT  \l  (r4 I:?[OBJECT, ARRAY][] A[D('split' byte[][])])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l  (r2 I:?[OBJECT, ARRAY] A[D('nal' byte[])])\l \l0x0058: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x005b|0x005b: ARRAY_LENGTH  (r0 I:int A[D('endIndex' int)]) = (r9 I:?[] A[D('data' byte[])]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x005d|0x005d: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY] A[D('split' byte[][])]) \l}"];
MethodNode[shape=record,label="{public static byte[][] com.google.android.exoplayer2.util.CodecSpecificDataUtil.splitNalUnits((r9 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x004e\-0x005b: r0 'endIndex' int\l  0x0052\-0x005b: r2 'nal' byte[]\l  0x003a\-0x005d: r5 'startIndex' int\l  0x002a\-0x005e: r1 'i' int\l  0x0011\-0x005e: r3 'nalUnitIndex' int\l  0x0029\-0x005e: r4 'split' byte[][]\l  0x0010\-0x005e: r6 'starts' java.util.List\<java.lang.Integer\>\l  ?\-0x005e: r9 'data' byte[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_5;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_14 -> Node_13;
Node_15 -> Node_3;
}

