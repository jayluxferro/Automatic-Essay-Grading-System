digraph "CFG forcom.google.android.exoplayer2.util.CodecSpecificDataUtil.isNalStartCode([BI)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: ARRAY_LENGTH  (r2 I:int) = (r4 I:?[] A[D('data' byte[])]) \l0x0002: ARITH  (r2 I:int) = (r2 I:int) \- (r5 I:int A[D('index' int)]) \l0x0003: SGET  (r3 I:byte[]) =  com.google.android.exoplayer2.util.CodecSpecificDataUtil.NAL_START_CODE byte[] \l0x0005: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r2 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: SGET  (r2 I:byte[]) =  com.google.android.exoplayer2.util.CodecSpecificDataUtil.NAL_START_CODE byte[] \l0x000c: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:?[int, byte, short, char] A[D('j' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:9:0x001c \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: ARITH  (r2 I:int) = (r5 I:int A[D('index' int)]) + (r0 I:int A[D('j' int)]) \l0x0011: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0013: SGET  (r3 I:byte[]) =  com.google.android.exoplayer2.util.CodecSpecificDataUtil.NAL_START_CODE byte[] \l0x0015: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r3 I:byte[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('j' int)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0008 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: ARITH  (r0 I:int A[D('j' int)]) = (r0 I:int A[D('j' int)]) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.util.CodecSpecificDataUtil.isNalStartCode((r4 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000a\-0x001d: r0 'j' int\l  ?\-0x001d: r4 'data' byte[]\l  ?\-0x001d: r5 'index' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_2;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_4;
Node_9 -> Node_2;
}

