digraph "CFG forcom.google.android.exoplayer2.util.CodecSpecificDataUtil.buildAacLcAudioSpecificConfig(II)[B" {
subgraph cluster_Region_2068962167 {
label = "R(5:0|(2:(1:5)(0)|6)|7|(2:(1:12)(0)|13)|(2:(1:19)|(1:17)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r2 = \-1\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1614709204 {
label = "LOOP:0: (2:(1:5)(0)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r1 \< AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE.length) goto L_0x0008\l}"];
subgraph cluster_Region_356607175 {
label = "R(2:(1:5)(0)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_632009957 {
label = "IF [B:4:0x000c] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r6 == AUDIO_SPECIFIC_CONFIG_SAMPLING_RATE_TABLE[r1]) goto L_0x000e\l}"];
subgraph cluster_Region_1151240338 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|r2 = r1\l}"];
}
subgraph cluster_Region_60449074 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_6 [shape=record,label="{6\:\ 0x000f|LOOP_END\lPHI: r2 \l  PHI: (r2v2 'sampleRateIndex' int) = (r2v1 'sampleRateIndex' int), (r2v3 'sampleRateIndex' int) binds: [B:22:0x000f, B:21:0x000f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:6:0x000f\l|r1++\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0012|int r0 = \-1\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_150198717 {
label = "LOOP:1: (2:(1:12)(0)|13)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0017|if (r1 \< AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE.length) goto L_0x0019\l}"];
subgraph cluster_Region_1879529690 {
label = "R(2:(1:12)(0)|13)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_89533252 {
label = "IF [B:11:0x001d] THEN: R(1:12) ELSE: R(0)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001d|if (r7 == AUDIO_SPECIFIC_CONFIG_CHANNEL_COUNT_TABLE[r1]) goto L_0x001f\l}"];
subgraph cluster_Region_45015367 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x001f|r0 = r1\l}"];
}
subgraph cluster_Region_1554811513 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_13 [shape=record,label="{13\:\ 0x0020|LOOP_END\lPHI: r0 \l  PHI: (r0v2 'channelConfig' int) = (r0v1 'channelConfig' int), (r0v3 'channelConfig' int) binds: [B:25:0x0020, B:24:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:8:0x0014\-\>B:13:0x0020\l|r1++\l}"];
}
}
subgraph cluster_Region_1967655081 {
label = "R(2:(1:19)|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_369811687 {
label = "IF [B:14:0x0023, B:15:0x0025] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0023|if (r6 != \-1) goto L_0x0025\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|ADDED_TO_REGION\l|if (r0 != \-1) goto L_0x004a\l}"];
subgraph cluster_Region_1765393268 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x004f|RETURN\l|return buildAacAudioSpecificConfig(2, r2, r0)\l}"];
}
}
subgraph cluster_Region_529175339 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0049|throw new java.lang.IllegalArgumentException(\"Invalid sample rate or number of channels: \" + r6 + \", \" + r7)\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0003|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v5 'i' int) binds: [B:0:0x0000, B:6:0x000f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'sampleRateIndex' int) = (r2v0 'sampleRateIndex' int), (r2v2 'sampleRateIndex' int) binds: [B:0:0x0000, B:6:0x000f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:6:0x000f\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0014|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v1 'channelConfig' int) = (r0v0 'channelConfig' int), (r0v2 'channelConfig' int) binds: [B:7:0x0012, B:13:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v3 'i' int) = (r1v2 'i' int), (r1v4 'i' int) binds: [B:7:0x0012, B:13:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:8:0x0014\-\>B:13:0x0020\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0019}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0027}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x004a}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0012|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x000f|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x000f|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0023|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0020|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static byte[] com.google.android.exoplayer2.util.CodecSpecificDataUtil.buildAacLcAudioSpecificConfig((r6v0 'sampleRate' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'numChannels' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_20[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_22[style=dashed];
Node_5 -> Node_21;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_23[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_25[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_8;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_7;
Node_21 -> Node_6;
Node_22 -> Node_6;
Node_23 -> Node_14;
Node_24 -> Node_13;
Node_25 -> Node_13;
}

