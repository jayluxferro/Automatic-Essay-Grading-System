digraph "CFG forcom.google.android.exoplayer2.util.Assertions.checkIndex(III)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, byte, short, char] A[D('index' int)]) \< (r2 I:?[int, byte, short, char] A[D('start' int)])  \-\> B:2:0x0004 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, byte, short, char] A[D('index' int)]) \< (r3 I:?[int, byte, short, char] A[D('limit' int)])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.lang.IndexOutOfBoundsException) =  java.lang.IndexOutOfBoundsException \l0x0006: INVOKE  (r0 I:java.lang.IndexOutOfBoundsException) java.lang.IndexOutOfBoundsException.\<init\>():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: RETURN  (r1 I:int A[D('index' int)]) \l}"];
MethodNode[shape=record,label="{public static int com.google.android.exoplayer2.util.Assertions.checkIndex((r1 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000a: r1 'index' int\l  ?\-0x000a: r2 'start' int\l  ?\-0x000a: r3 'limit' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

