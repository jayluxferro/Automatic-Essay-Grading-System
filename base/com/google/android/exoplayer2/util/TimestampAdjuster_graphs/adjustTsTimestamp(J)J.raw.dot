digraph "CFG forcom.google.android.exoplayer2.util.TimestampAdjuster.adjustTsTimestamp(J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0005: CMP_L  (r8 I:int) = (r14 I:long A[D('pts' long)]), (r8 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r8 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  (r8 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IGET  (r8 I:long) = \l  (r13 I:com.google.android.exoplayer2.util.TimestampAdjuster)\l com.google.android.exoplayer2.util.TimestampAdjuster.lastSampleTimestamp long \l0x0011: CONST  (r10 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0016: CMP_L  (r8 I:int) = (r8 I:long), (r10 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0052 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IGET  (r8 I:long) = \l  (r13 I:com.google.android.exoplayer2.util.TimestampAdjuster)\l com.google.android.exoplayer2.util.TimestampAdjuster.lastSampleTimestamp long \l0x001c: INVOKE  (r2 I:long) = (r8 I:long) com.google.android.exoplayer2.util.TimestampAdjuster.usToPts(long):long type: STATIC \l0x0020: CONST  (r8 I:?[long, double]) = \l  (4294967296(0x100000000, double:2.121995791E\-314) ?[long, double])\l \l0x0025: ARITH  (r8 I:long) = (r8 I:long) + (r2 I:long A[D('lastPts' long)]) \l0x0026: CONST  (r10 I:?[long, double]) = \l  (8589934592(0x200000000, double:4.243991582E\-314) ?[long, double])\l \l0x002b: ARITH  (r0 I:long) = (r8 I:long) \/ (r10 I:long) \l0x002d: CONST  (r8 I:?[long, double]) = \l  (8589934592(0x200000000, double:4.243991582E\-314) ?[long, double])\l \l0x0032: CONST  (r10 I:?[long, double]) = (1 ?[long, double]) \l0x0034: ARITH  (r10 I:long) = (r0 I:long A[D('closestWrapCount' long)]) \- (r10 I:long) \l0x0036: ARITH  (r8 I:long) = (r8 I:long) * (r10 I:long) \l0x0037: ARITH  (r6 I:long) = (r14 I:long A[D('pts' long)]) + (r8 I:long) \l0x0039: CONST  (r8 I:?[long, double]) = \l  (8589934592(0x200000000, double:4.243991582E\-314) ?[long, double])\l \l0x003e: ARITH  (r8 I:long) = (r8 I:long) * (r0 I:long A[D('closestWrapCount' long)]) \l0x003f: ARITH  (r4 I:long) = (r14 I:long A[D('pts' long)]) + (r8 I:long) \l0x0041: ARITH  (r8 I:long) = (r6 I:long A[D('ptsWrapBelow' long)]) \- (r2 I:long A[D('lastPts' long)]) \l0x0043: INVOKE  (r8 I:long) = (r8 I:long) java.lang.Math.abs(long):long type: STATIC \l0x0047: ARITH  (r10 I:long) = (r4 I:long A[D('ptsWrapAbove' long)]) \- (r2 I:long A[D('lastPts' long)]) \l0x0049: INVOKE  (r10 I:long) = (r10 I:long) java.lang.Math.abs(long):long type: STATIC \l0x004d: CMP_L  (r8 I:int) = (r8 I:long), (r10 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x004f|0x004f: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:10:0x005b \l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|0x0051: MOVE  (r14 I:?[long, double] A[D('pts' long)]) = (r6 I:?[long, double] A[D('ptsWrapBelow' long)]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0052|0x0052: INVOKE  (r8 I:long) = (r14 I:long A[D('pts' long)]) com.google.android.exoplayer2.util.TimestampAdjuster.ptsToUs(long):long type: STATIC \l0x0056: INVOKE  (r8 I:long) = \l  (r13 I:com.google.android.exoplayer2.util.TimestampAdjuster)\l  (r8 I:long)\l com.google.android.exoplayer2.util.TimestampAdjuster.adjustSampleTimestamp(long):long type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x005b|0x005b: MOVE  (r14 I:?[long, double] A[D('pts' long)]) = (r4 I:?[long, double] A[D('ptsWrapAbove' long)]) \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.util.TimestampAdjuster.adjustTsTimestamp((r13 'this' I:com.google.android.exoplayer2.util.TimestampAdjuster A[IMMUTABLE_TYPE, THIS]), (r14 I:long A[D('pts' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x002d\-0x0052: r0 'closestWrapCount' long\l  0x0020\-0x0052: r2 'lastPts' long\l  0x0041\-0x0052: r4 'ptsWrapAbove' long\l  0x0039\-0x0052: r6 'ptsWrapBelow' long\l  0x005b\-0x005c: r0 'closestWrapCount' long\l  0x005b\-0x005c: r2 'lastPts' long\l  0x005b\-0x005c: r4 'ptsWrapAbove' long\l  0x005b\-0x005c: r6 'ptsWrapBelow' long\l  ?\-0x005c: r14 'pts' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_3;
Node_10 -> Node_9;
}

