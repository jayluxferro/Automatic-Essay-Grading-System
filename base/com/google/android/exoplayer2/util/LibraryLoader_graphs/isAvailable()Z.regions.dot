digraph "CFG forcom.google.android.exoplayer2.util.LibraryLoader.isAvailable()Z" {
subgraph cluster_Region_1918202677 {
label = "R(2:(1:(1:(1:4)(3:9|(3:11|(1:13)|14)|16)))|6) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1009421114 {
label = "R(1:(1:(1:4)(3:9|(3:11|(1:13)|14)|16)))";
node [shape=record,color=blue];
subgraph cluster_Region_698457096 {
label = "R(1:(1:4)(3:9|(3:11|(1:13)|14)|16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2060911193 {
label = "IF [B:3:0x0003] THEN: R(1:4) ELSE: R(3:9|(3:11|(1:13)|14)|16)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r4.loadAttempted == true) goto L_0x0005\l}"];
subgraph cluster_Region_1102575382 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|boolean r1 = r4.isAvailable\l}"];
}
subgraph cluster_Region_1875704522 {
label = "R(3:9|(3:11|(1:13)|14)|16)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x000a\l|r4.loadAttempted = true\l}"];
subgraph cluster_TryCatchRegion_591534829 {
label = "Try: R(3:11|(1:13)|14) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_1032472674 {
label = "R(3:11|(1:13)|14)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ ?|Catch:\{ UnsatisfiedLinkError \-\> 0x0023 \}\lSplitter:B:10:0x000c\l|int int r3 = r4.nativeLibraries.length     \/\/ Catch:\{ UnsatisfiedLinkError \-\> 0x0023 \}\lint r1 = 0     \/\/ Catch:\{ UnsatisfiedLinkError \-\> 0x0023 \}\l}"];
subgraph cluster_LoopRegion_1264137956 {
label = "LOOP:0: (1:13)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0010|LOOP_START\lCatch:\{ UnsatisfiedLinkError \-\> 0x0023 \}\lPHI: r1 \l  PHI: (r1v6 int) = (r1v5 int), (r1v8 int) binds: [B:11:?, B:13:0x0012] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:12:0x0010\-\>B:13:0x0012\l|if (r1 \< r3) goto L_0x0012     \/\/ Catch:\{ UnsatisfiedLinkError \-\> 0x0023 \}\l}"];
subgraph cluster_Region_1995062817 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0012|LOOP_END\lCatch:\{ UnsatisfiedLinkError \-\> 0x0023 \}\lLOOP:0: B:12:0x0010\-\>B:13:0x0012\l|java.lang.System.loadLibrary(r0)     \/\/ Catch:\{ UnsatisfiedLinkError \-\> 0x0023 \}\lr1++     \/\/ Catch:\{ UnsatisfiedLinkError \-\> 0x0023 \}\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x001a|Catch:\{ UnsatisfiedLinkError \-\> 0x0023 \}\l|r4.isAvailable = true     \/\/ Catch:\{ UnsatisfiedLinkError \-\> 0x0023 \}\l}"];
}
subgraph cluster_Region_1849533019 {
label = "R(0) | ExcHandler: UnsatisfiedLinkError (e java.lang.UnsatisfiedLinkError)\l";
node [shape=record,color=blue];
}
}
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x001d\l|boolean r1 = r4.isAvailable\l}"];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x0008|RETURN\l|return r1\l}"];
}
subgraph cluster_Region_1849533019 {
label = "R(0) | ExcHandler: UnsatisfiedLinkError (e java.lang.UnsatisfiedLinkError)\l";
node [shape=record,color=blue];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0007|DONT_GENERATE\lPHI: r1 \l  PHI: (r1v9 boolean) = (r1v4 boolean), (r1v10 boolean) binds: [B:16:?, B:4:0x0005] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0009}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000a|SYNTHETIC\lSplitter:B:8:0x000a\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x000c|SYNTHETIC\lSplitter:B:10:0x000c\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x001d|SYNTHETIC\lSplitter:B:15:0x001d\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0020|REMOVE\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0021|REMOVE\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0022|REMOVE\l|throw r1\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0023|ExcHandler: UnsatisfiedLinkError (e java.lang.UnsatisfiedLinkError)\lSplitter:B:10:0x000c\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x001a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public synchronized boolean com.google.android.exoplayer2.util.LibraryLoader.isAvailable((r4v0 'this' com.google.android.exoplayer2.util.LibraryLoader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_9 -> Node_10;
Node_9 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_21[style=dashed];
Node_13 -> Node_12;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_5;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_17;
Node_10 -> Node_11;
Node_10 -> Node_20;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_15;
Node_21 -> Node_14;
}

