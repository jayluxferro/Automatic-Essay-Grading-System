digraph "CFG forcom.google.android.exoplayer2.util.ConditionVariable.close()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:boolean) = (r2 I:com.google.android.exoplayer2.util.ConditionVariable) com.google.android.exoplayer2.util.ConditionVariable.isOpen boolean A[Catch:\{ all \-\> 0x0008 \}, TRY_ENTER]\l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0008 \}]\l0x0004: IPUT  \l  (r1 I:boolean)\l  (r2 I:com.google.android.exoplayer2.util.ConditionVariable)\l com.google.android.exoplayer2.util.ConditionVariable.isOpen boolean A[Catch:\{ all \-\> 0x0008 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: RETURN  (r0 I:boolean A[D('wasOpen' boolean)]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0008: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized boolean com.google.android.exoplayer2.util.ConditionVariable.close((r2 'this' I:com.google.android.exoplayer2.util.ConditionVariable A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0003\-0x0008: r0 'wasOpen' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

