digraph "CFG forcom.google.android.exoplayer2.util.MimeTypes.getTrackType(Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: INVOKE  (r1 I:boolean) = \l  (r2 I:java.lang.CharSequence A[D('mimeType' java.lang.String)])\l android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r0 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r1 I:boolean) = (r2 I:java.lang.String A[D('mimeType' java.lang.String)]) com.google.android.exoplayer2.util.MimeTypes.isAudio(java.lang.String):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r1 I:boolean) = (r2 I:java.lang.String A[D('mimeType' java.lang.String)]) com.google.android.exoplayer2.util.MimeTypes.isVideo(java.lang.String):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0018 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: INVOKE  (r1 I:boolean) = (r2 I:java.lang.String A[D('mimeType' java.lang.String)]) com.google.android.exoplayer2.util.MimeTypes.isText(java.lang.String):boolean type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: CONST_STR  (r1 I:java.lang.String) =  \"application\/cea\-608\" \l0x0020: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: CONST_STR  (r1 I:java.lang.String) =  \"application\/cea\-708\" \l0x0028: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: CONST_STR  (r1 I:java.lang.String) =  \"application\/x\-mp4\-cea\-608\" \l0x0030: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: CONST_STR  (r1 I:java.lang.String) =  \"application\/x\-subrip\" \l0x0038: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|0x003c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_19 [shape=record,label="{19\:\ 0x003e|0x003e: CONST_STR  (r1 I:java.lang.String) =  \"application\/ttml+xml\" \l0x0040: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0044|0x0044: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|0x0046: CONST_STR  (r1 I:java.lang.String) =  \"application\/x\-quicktime\-tx3g\" \l0x0048: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x004c|0x004c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|0x004e: CONST_STR  (r1 I:java.lang.String) =  \"application\/x\-mp4\-vtt\" \l0x0050: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0054|0x0054: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0056|0x0056: CONST_STR  (r1 I:java.lang.String) =  \"application\/x\-rawcc\" \l0x0058: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x005c|0x005c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_27 [shape=record,label="{27\:\ 0x005e|0x005e: CONST_STR  (r1 I:java.lang.String) =  \"application\/vobsub\" \l0x0060: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x0064|0x0064: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0066|0x0066: CONST_STR  (r1 I:java.lang.String) =  \"application\/pgs\" \l0x0068: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x006c|0x006c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0076 \l}"];
Node_31 [shape=record,label="{31\:\ 0x006e|0x006e: CONST_STR  (r1 I:java.lang.String) =  \"application\/dvbsubs\" \l0x0070: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x0074|0x0074: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0078 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0076|0x0076: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0078|0x0078: CONST_STR  (r1 I:java.lang.String) =  \"application\/id3\" \l0x007a: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x007e|0x007e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0098 \l}"];
Node_36 [shape=record,label="{36\:\ 0x0080|0x0080: CONST_STR  (r1 I:java.lang.String) =  \"application\/x\-emsg\" \l0x0082: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_37 [shape=record,label="{37\:\ 0x0086|0x0086: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0098 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0088|0x0088: CONST_STR  (r1 I:java.lang.String) =  \"application\/x\-scte35\" \l0x008a: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x008e|0x008e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0098 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0090|0x0090: CONST_STR  (r1 I:java.lang.String) =  \"application\/x\-camera\-motion\" \l0x0092: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_41 [shape=record,label="{41\:\ 0x0096|0x0096: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0007 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0098|0x0098: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public static int com.google.android.exoplayer2.util.MimeTypes.getTrackType((r2 I:java.lang.String A[D('mimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x009a: r2 'mimeType' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_2;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_2;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_33;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_33;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_33;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_33;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_33;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_33;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_33;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_2;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_42;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_42;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
Node_41 -> Node_2;
Node_41 -> Node_42[style=dashed];
Node_42 -> Node_2;
}

