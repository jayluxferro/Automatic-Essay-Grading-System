digraph "CFG forcom.google.android.exoplayer2.util.MimeTypes.getTopLevelType(Ljava\/lang\/String;)Ljava\/lang\/String;" {
subgraph cluster_Region_1237979754 {
label = "R(1:(2:(1:1)|(2:2|(2:(1:7)|(1:5)))))";
node [shape=record,color=blue];
subgraph cluster_Region_507075040 {
label = "R(2:(1:1)|(2:2|(2:(1:7)|(1:5))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_448305522 {
label = "IF [B:0:0x0000] THEN: R(1:1) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 == null) goto L_0x0002\l}"];
subgraph cluster_Region_1951746230 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1367523139 {
label = "R(2:2|(2:(1:7)|(1:5)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|int int r0 = r4.indexOf(47)\l}"];
subgraph cluster_Region_1830116628 {
label = "R(2:(1:7)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_985104145 {
label = "IF [B:3:0x000b] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r0 != \-1) goto L_0x0026\l}"];
subgraph cluster_Region_322326929 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return r4.substring(0, r0)\l}"];
}
}
subgraph cluster_Region_968359695 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0025|throw new java.lang.IllegalArgumentException(\"Invalid mime type: \" + r4)\l}"];
}
}
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x000d}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0026}"];
MethodNode[shape=record,label="{private static java.lang.String com.google.android.exoplayer2.util.MimeTypes.getTopLevelType((r4v0 'mimeType' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

