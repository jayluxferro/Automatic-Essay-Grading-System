digraph "CFG forcom.google.android.exoplayer2.util.PriorityTaskManager.proceed(I)V" {
subgraph cluster_Region_1517235325 {
label = "R(2:0|2)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_SynchronizedRegion_372898256 {
label = "Synchronized:R(2:1|(1:(1:5)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
subgraph cluster_Region_1825638085 {
label = "R(1:(1:5))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1562077548 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|if (r2.highestPriority != r3) goto L_0x0007\l}"];
subgraph cluster_Region_2125773430 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0007|LOOP_END\lLOOP:0: B:2:0x0003\-\>B:5:0x0007\l|r2.lock.wait()\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0003|LOOP_START\lSYNTHETIC\lLOOP:0: B:2:0x0003\-\>B:5:0x0007\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d|REMOVE\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000e|REMOVE\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000f|REMOVE\l|throw r0\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0010|SYNTHETIC\lSplitter:B:9:0x0010\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|DONT_GENERATE\lSplitter:B:9:0x0010\l|monitor\-exit(\l\/\/ error: 0x0010: MONITOR_EXIT  \l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0011}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.util.PriorityTaskManager.proceed((r2v0 'this' com.google.android.exoplayer2.util.PriorityTaskManager A[IMMUTABLE_TYPE, THIS]), (r3v0 'priority' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_6;
Node_10 -> Node_11;
Node_10 -> Node_6;
}

