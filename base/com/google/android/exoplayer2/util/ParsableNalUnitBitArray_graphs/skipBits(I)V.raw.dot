digraph "CFG forcom.google.android.exoplayer2.util.ParsableNalUnitBitArray.skipBits(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0002: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0004: ARITH  (r3 I:int) = (r5 I:int A[D('n' int)]) \/ (8 int) \l0x0006: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0007: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0009: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l0x000b: ARITH  (r3 I:int) = (r5 I:int A[D('n' int)]) % (8 int) \l0x000d: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x000e: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l0x0010: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l0x0012: CONST  (r3 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r2 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:3:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0017: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0019: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x001b: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l0x001d: ARITH  (r2 I:int) = (r2 I:int) + (\-8 int) \l0x001f: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|0x0021: ARITH  (r0 I:int) = (r1 I:int A[D('oldByteOffset' int)]) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \> (r2 I:?[int, byte, short, char])  \-\> B:10:0x0038 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: INVOKE  (r2 I:boolean) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l  (r0 I:int A[D('i' int)])\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.shouldSkipByte(int):boolean type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0035 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x002f: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0031: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0033: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (2 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: INVOKE  \l  (r4 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.assertValidOffset():void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.util.ParsableNalUnitBitArray.skipBits((r4 'this' I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0023\-0x003b: r0 'i' int\l  0x0002\-0x003b: r1 'oldByteOffset' int\l  ?\-0x003b: r5 'n' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_4;
Node_10 -> Node_11;
}

