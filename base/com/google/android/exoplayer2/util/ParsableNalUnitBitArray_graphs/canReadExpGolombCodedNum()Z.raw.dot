digraph "CFG forcom.google.android.exoplayer2.util.ParsableNalUnitBitArray.canReadExpGolombCodedNum()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: IGET  (r2 I:int) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0004: IGET  (r1 I:int) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IGET  (r6 I:int) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0009: IGET  (r7 I:int) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteLimit int \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IF  (r6 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: INVOKE  (r6 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.readBit():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: ARITH  (r3 I:int A[D('leadingZeros' int)]) = (r3 I:int A[D('leadingZeros' int)]) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IGET  (r6 I:int) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0018: IGET  (r7 I:int) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteLimit int \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IPUT  \l  (r2 I:int A[D('initialByteOffset' int)])\l  (r8 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x001f: IPUT  \l  (r1 I:int A[D('initialBitOffset' int)])\l  (r8 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hitLimit' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0030 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: ARITH  (r6 I:int) = (r3 I:int A[D('leadingZeros' int)]) * (2 int) \l0x0025: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l0x0027: INVOKE  (r6 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.canReadBits(int):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0030 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: RETURN  (r4 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('hitLimit' boolean)]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|0x0030: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.util.ParsableNalUnitBitArray.canReadExpGolombCodedNum((r8 'this' I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x001d\-0x002e: r0 'hitLimit' boolean\l  0x0030\-0x0031: r0 'hitLimit' boolean\l  0x0006\-0x0031: r1 'initialBitOffset' int\l  0x0004\-0x0031: r2 'initialByteOffset' int\l  0x0007\-0x0031: r3 'leadingZeros' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_14 -> Node_9;
Node_15 -> Node_13;
}

