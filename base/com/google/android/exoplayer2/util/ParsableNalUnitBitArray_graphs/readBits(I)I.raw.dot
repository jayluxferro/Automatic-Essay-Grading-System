digraph "CFG forcom.google.android.exoplayer2.util.ParsableNalUnitBitArray.readBits(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r10 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('numBits' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r4 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: ARITH  (r5 I:int) = (r12 I:int A[D('numBits' int)]) \/ (8 int) \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r5 I:?[int, byte, short, char] A[D('wholeBytes' int)])  \-\> B:15:0x004d \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x000e: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l0x0010: INVOKE  (r7 I:boolean) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l  (r7 I:int)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.shouldSkipByte(int):boolean type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0018: ARITH  (r3 I:int) = (r7 I:int) + (2 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0046 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: IGET  (r7 I:byte[]) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.data byte[] \l0x0020: IGET  (r8 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0022: AGET  (r7 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l \l0x0024: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0026: IGET  (r8 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l0x0028: ARITH  (r7 I:int) = (r7 I:int) \<\< (r8 I:int) \l0x0029: IGET  (r8 I:byte[]) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.data byte[] \l0x002b: AGET  (r8 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char] A[D('nextByteOffset' int)])\l \l0x002d: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x002f: IGET  (r9 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l0x0031: ARITH  (r9 I:int) = (8 int) \- (r9 I:int) \l0x0033: ARITH  (r8 I:int) = (r8 I:int) \>\>\> (r9 I:int) \l0x0034: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) \| (r8 I:?[int, boolean, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: ARITH  (r12 I:int A[D('numBits' int)]) = (r12 I:int A[D('numBits' int)]) + (\-8 int) \l0x0038: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char] A[D('byteValue' int)]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x003a: ARITH  (r7 I:int) = (r7 I:int) \<\< (r12 I:int A[D('numBits' int)]) \l0x003b: ARITH  (r4 I:?[int, boolean, short, byte, char] A[D('returnValue' int)]) = (r4 I:?[int, boolean, short, byte, char] A[D('returnValue' int)]) \| (r7 I:?[int, boolean, short, byte, char]) \l0x003c: IPUT  \l  (r3 I:int A[D('nextByteOffset' int)])\l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x003e: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0043: ARITH  (r3 I:int) = (r7 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: IGET  (r7 I:byte[]) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.data byte[] \l0x0048: IGET  (r8 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x004a: AGET  (r0 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|0x004d: IF  (r12 I:?[int, byte, short, char] A[D('numBits' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:22:0x0086 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|0x004f: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l0x0051: ARITH  (r2 I:int) = (r7 I:int) + (r12 I:int A[D('numBits' int)]) \l0x0053: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l0x0055: ARITH  (r8 I:int) = (8 int) \- (r12 I:int A[D('numBits' int)]) \l0x0057: ARITH  (r7 I:int) = (r7 I:int) \>\> (r8 I:int) \l0x0058: CAST  (r6 I:byte) = (byte) (r7 I:int) \l0x0059: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x005b: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l0x005d: INVOKE  (r7 I:boolean) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l  (r7 I:int)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.shouldSkipByte(int):boolean type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0061|0x0061: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x008b \l}"];
Node_18 [shape=record,label="{18\:\ 0x0063|0x0063: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0065: ARITH  (r3 I:int) = (r7 I:int) + (2 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0067|0x0067: IF  (r2 I:?[int, byte, short, char] A[D('nextBit' int)]) \<= (r10 I:?[int, byte, short, char])  \-\> B:24:0x0090 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0069|0x0069: IGET  (r7 I:byte[]) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.data byte[] \l0x006b: IGET  (r8 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x006d: AGET  (r7 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l \l0x006f: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0071: ARITH  (r8 I:int) = (r2 I:int A[D('nextBit' int)]) + (\-8 int) \l0x0073: ARITH  (r7 I:int) = (r7 I:int) \<\< (r8 I:int) \l0x0074: IGET  (r8 I:byte[]) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.data byte[] \l0x0076: AGET  (r8 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char] A[D('nextByteOffset' int)])\l \l0x0078: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x007a: ARITH  (r9 I:int) = (16 int) \- (r2 I:int A[D('nextBit' int)]) \l0x007c: ARITH  (r8 I:int) = (r8 I:int) \>\> (r9 I:int) \l0x007d: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) \| (r8 I:?[int, boolean, short, byte, char]) \l0x007e: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (r6 I:?[int, boolean, short, byte, char] A[D('writeMask' byte)]) \l0x007f: ARITH  (r4 I:?[int, boolean, short, byte, char] A[D('returnValue' int)]) = (r4 I:?[int, boolean, short, byte, char] A[D('returnValue' int)]) \| (r7 I:?[int, boolean, short, byte, char]) \l0x0080: IPUT  \l  (r3 I:int A[D('nextByteOffset' int)])\l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l}"];
Node_21 [shape=record,label="{21\:\ 0x0082|0x0082: ARITH  (r7 I:int) = (r2 I:int A[D('nextBit' int)]) % (8 int) \l0x0084: IPUT  \l  (r7 I:int)\l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.bitOffset int \l}"];
Node_22 [shape=record,label="{22\:\ 0x0086|0x0086: INVOKE  \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.assertValidOffset():void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x008b|0x008b: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x008d: ARITH  (r3 I:int) = (r7 I:int) + (1 int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0090|0x0090: IGET  (r7 I:byte[]) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.data byte[] \l0x0092: IGET  (r8 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l0x0094: AGET  (r7 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l \l0x0096: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0098: ARITH  (r8 I:int) = (8 int) \- (r2 I:int A[D('nextBit' int)]) \l0x009a: ARITH  (r7 I:int) = (r7 I:int) \>\> (r8 I:int) \l0x009b: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (r6 I:?[int, boolean, short, byte, char] A[D('writeMask' byte)]) \l0x009c: ARITH  (r4 I:?[int, boolean, short, byte, char] A[D('returnValue' int)]) = (r4 I:?[int, boolean, short, byte, char] A[D('returnValue' int)]) \| (r7 I:?[int, boolean, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x009d|0x009d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nextBit' int)]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0082 \l}"];
Node_26 [shape=record,label="{26\:\ 0x009f|0x009f: IPUT  \l  (r3 I:int A[D('nextByteOffset' int)])\l  (r11 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray)\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.byteOffset int \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.util.ParsableNalUnitBitArray.readBits((r11 'this' I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray A[IMMUTABLE_TYPE, THIS]), (r12 I:int A[D('numBits' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0036\-0x0041: r0 'byteValue' int\l  0x001a\-0x0041: r3 'nextByteOffset' int\l  0x004c\-0x004d: r0 'byteValue' int\l  0x0046\-0x004d: r3 'nextByteOffset' int\l  0x0053\-0x0086: r2 'nextBit' int\l  0x0067\-0x0086: r3 'nextByteOffset' int\l  0x0059\-0x0086: r6 'writeMask' byte\l  0x000a\-0x00a1: r1 'i' int\l  0x008b\-0x00a1: r2 'nextBit' int\l  0x0090\-0x00a1: r3 'nextByteOffset' int\l  0x0007\-0x00a1: r4 'returnValue' int\l  0x0009\-0x00a1: r5 'wholeBytes' int\l  0x008b\-0x00a1: r6 'writeMask' byte\l  ?\-0x00a1: r12 'numBits' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_5;
Node_13 -> Node_9;
Node_14 -> Node_12;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_3;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_21;
Node_25 -> Node_26[style=dashed];
Node_26 -> Node_21;
}

