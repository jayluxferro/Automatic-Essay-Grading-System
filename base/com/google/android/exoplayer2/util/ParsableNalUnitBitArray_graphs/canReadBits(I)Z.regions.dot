digraph "CFG forcom.google.android.exoplayer2.util.ParsableNalUnitBitArray.canReadBits(I)Z" {
subgraph cluster_Region_1938720791 {
label = "R(5:0|(1:2)|3|(2:(1:9)(0)|10)|12)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r3 = r6.byteOffset\lint int r2 = r6.byteOffset + (r7 \/ 8)\lint int r1 = r6.bitOffset + (r7 % 8)\l}"];
subgraph cluster_IfRegion_1342945288 {
label = "IF [B:1:0x000f] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000f|if (r1 \> 7) goto L_0x0011\l}"];
subgraph cluster_Region_541827367 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0011|r2++\lr1 \-= 8\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0015|PHI: r1 r2 \l  PHI: (r1v1 'newBitOffset' int) = (r1v0 'newBitOffset' int), (r1v2 'newBitOffset' int) binds: [B:1:0x000f, B:2:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'newByteOffset' int) = (r2v0 'newByteOffset' int), (r2v5 'newByteOffset' int) binds: [B:1:0x000f, B:2:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|int int r0 = r3 + 1\l}"];
subgraph cluster_LoopRegion_1472355543 {
label = "LOOP:0: (2:(1:9)(0)|10)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v3 'i' int) binds: [B:3:0x0015, B:10:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 'newByteOffset' int) = (r2v1 'newByteOffset' int), (r2v3 'newByteOffset' int) binds: [B:3:0x0015, B:10:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0017\-\>B:10:0x0027\l|if (r0 \<= r2) goto L_0x0019\l}"];
subgraph cluster_Region_117058081 {
label = "R(2:(1:9)(0)|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2076569920 {
label = "IF [B:8:0x0021] THEN: R(1:9) ELSE: R(0)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0021|if (shouldSkipByte(r0) == true) goto L_0x0023\l}"];
subgraph cluster_Region_177969031 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0023|r2++\lr0 += 2\l}"];
}
subgraph cluster_Region_619607811 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_10 [shape=record,label="{10\:\ 0x0027|LOOP_END\lPHI: r0 r2 \l  PHI: (r0v2 'i' int) = (r0v1 'i' int), (r0v4 'i' int) binds: [B:21:0x0027, B:20:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'newByteOffset' int) = (r2v2 'newByteOffset' int), (r2v4 'newByteOffset' int) binds: [B:21:0x0027, B:20:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0017\-\>B:10:0x0027\l|r0++\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x002c|RETURN\l|return r2 \< r6.byteLimit \|\| (r2 == r6.byteLimit && r1 == 0)\l}"];
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0019}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001b|ADDED_TO_REGION\l|if (r2 \< r6.byteLimit) goto L_0x001d\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001d}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002a}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002e}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0030|REMOVE\lADDED_TO_REGION\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0032|REMOVE\lADDED_TO_REGION\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0034|SYNTHETIC\lORIG_RETURN\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0036|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x002a|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x002a|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0027|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0027|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.util.ParsableNalUnitBitArray.canReadBits((r6v0 'this' com.google.android.exoplayer2.util.ParsableNalUnitBitArray A[IMMUTABLE_TYPE, THIS]), (r7v0 'n' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_18[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_21[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_4;
Node_12 -> Node_13;
Node_12 -> Node_16;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_19[style=dashed];
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_15 -> Node_17;
Node_18 -> Node_11;
Node_19 -> Node_11;
Node_20 -> Node_10;
Node_21 -> Node_10;
}

