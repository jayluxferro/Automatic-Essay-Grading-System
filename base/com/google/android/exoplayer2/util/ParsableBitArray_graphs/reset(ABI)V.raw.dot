digraph "CFG forcom.google.android.exoplayer2.util.ParsableBitArray.reset([BI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  \l  (r2 I:byte[] A[D('data' byte[])])\l  (r1 I:com.google.android.exoplayer2.util.ParsableBitArray)\l com.google.android.exoplayer2.util.ParsableBitArray.data byte[] \l0x0003: IPUT  \l  (r0 I:int)\l  (r1 I:com.google.android.exoplayer2.util.ParsableBitArray)\l com.google.android.exoplayer2.util.ParsableBitArray.byteOffset int \l0x0005: IPUT  \l  (r0 I:int)\l  (r1 I:com.google.android.exoplayer2.util.ParsableBitArray)\l com.google.android.exoplayer2.util.ParsableBitArray.bitOffset int \l0x0007: IPUT  \l  (r3 I:int A[D('limit' int)])\l  (r1 I:com.google.android.exoplayer2.util.ParsableBitArray)\l com.google.android.exoplayer2.util.ParsableBitArray.byteLimit int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.util.ParsableBitArray.reset((r1 'this' I:com.google.android.exoplayer2.util.ParsableBitArray A[IMMUTABLE_TYPE, THIS]), (r2 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0009: r2 'data' byte[]\l  ?\-0x0009: r3 'limit' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

