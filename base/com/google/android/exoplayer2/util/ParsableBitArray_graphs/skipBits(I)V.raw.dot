digraph "CFG forcom.google.android.exoplayer2.util.ParsableBitArray.skipBits(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) com.google.android.exoplayer2.util.ParsableBitArray.byteOffset int \l0x0002: ARITH  (r1 I:int) = (r3 I:int A[D('n' int)]) \/ (8 int) \l0x0004: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0005: IPUT  \l  (r0 I:int)\l  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray)\l com.google.android.exoplayer2.util.ParsableBitArray.byteOffset int \l0x0007: IGET  (r0 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) com.google.android.exoplayer2.util.ParsableBitArray.bitOffset int \l0x0009: ARITH  (r1 I:int) = (r3 I:int A[D('n' int)]) % (8 int) \l0x000b: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x000c: IPUT  \l  (r0 I:int)\l  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray)\l com.google.android.exoplayer2.util.ParsableBitArray.bitOffset int \l0x000e: IGET  (r0 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) com.google.android.exoplayer2.util.ParsableBitArray.bitOffset int \l0x0010: CONST  (r1 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:3:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IGET  (r0 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) com.google.android.exoplayer2.util.ParsableBitArray.byteOffset int \l0x0015: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0017: IPUT  \l  (r0 I:int)\l  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray)\l com.google.android.exoplayer2.util.ParsableBitArray.byteOffset int \l0x0019: IGET  (r0 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) com.google.android.exoplayer2.util.ParsableBitArray.bitOffset int \l0x001b: ARITH  (r0 I:int) = (r0 I:int) + (\-8 int) \l0x001d: IPUT  \l  (r0 I:int)\l  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray)\l com.google.android.exoplayer2.util.ParsableBitArray.bitOffset int \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: INVOKE  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) com.google.android.exoplayer2.util.ParsableBitArray.assertValidOffset():void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.util.ParsableBitArray.skipBits((r2 'this' I:com.google.android.exoplayer2.util.ParsableBitArray A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('n' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0022: r3 'n' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

