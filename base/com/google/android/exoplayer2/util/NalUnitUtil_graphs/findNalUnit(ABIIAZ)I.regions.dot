digraph "CFG forcom.google.android.exoplayer2.util.NalUnitUtil.findNalUnit([BII[Z)I" {
subgraph cluster_Region_1340382970 {
label = "R(4:0|(1:2)(1:5)|3|(2:(1:86)|(4:(1:(2:9|87)(1:(2:15|88)(1:(2:23|89))))|24|(2:(1:(2:(2:(1:36)|90)|(1:38)))(0)|28)|(2:(1:91)|(6:48|(1:51)(1:76)|55|(1:81)|57|92))))) | DECL_VAR: boolean null, boolean null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r4 = true\lint int r1 = r9 \- r8\l}"];
subgraph cluster_IfRegion_2024158247 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r1 \>= 0) goto L_0x0007\l}"];
subgraph cluster_Region_1660026538 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|r3 = true\l}"];
}
subgraph cluster_Region_736291314 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|r3 = false\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0008|PHI: r3 \l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v51 boolean) binds: [B:5:0x000e, B:2:0x0007] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r3)\l}"];
subgraph cluster_Region_224935394 {
label = "R(2:(1:86)|(4:(1:(2:9|87)(1:(2:15|88)(1:(2:23|89))))|24|(2:(1:(2:(2:(1:36)|90)|(1:38)))(0)|28)|(2:(1:91)|(6:48|(1:51)(1:76)|55|(1:81)|57|92))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_324957831 {
label = "IF [B:4:0x000b] THEN: R(1:86) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r1 == 0) goto L_?\l}"];
subgraph cluster_Region_1279219586 {
label = "R(1:86)";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r9\l}"];
}
}
subgraph cluster_Region_1377712842 {
label = "R(4:(1:(2:9|87)(1:(2:15|88)(1:(2:23|89))))|24|(2:(1:(2:(2:(1:36)|90)|(1:38)))(0)|28)|(2:(1:91)|(6:48|(1:51)(1:76)|55|(1:81)|57|92)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1287711513 {
label = "IF [B:6:0x0010] THEN: R(1:(2:9|87)(1:(2:15|88)(1:(2:23|89)))) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0010|if (r10 != null) goto L_0x0012\l}"];
subgraph cluster_Region_1198605580 {
label = "R(1:(2:9|87)(1:(2:15|88)(1:(2:23|89))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_188409645 {
label = "IF [B:8:0x0014] THEN: R(2:9|87) ELSE: R(1:(2:15|88)(1:(2:23|89)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0014|if (r10[0] == true) goto L_0x0016\l}"];
subgraph cluster_Region_1032794767 {
label = "R(2:9|87)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0016|clearPrefixFlags(r10)\l}"];
Node_87 [shape=record,label="{87\:\ ?|SYNTHETIC\lRETURN\l|return r8 \- 3\l}"];
}
subgraph cluster_Region_1985781252 {
label = "R(1:(2:15|88)(1:(2:23|89))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1648748 {
label = "IF [B:10:0x001c, B:12:0x0020, B:14:0x0024] THEN: R(2:15|88) ELSE: R(1:(2:23|89)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001c|if (r1 \> 1) goto L_0x001e\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|ADDED_TO_REGION\l|if (r10[1] != false) goto L_0x0022\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|ADDED_TO_REGION\l|if (r7[r8] == 1) goto L_0x0026\l}"];
subgraph cluster_Region_1003027686 {
label = "R(2:15|88)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0026|clearPrefixFlags(r10)\l}"];
Node_88 [shape=record,label="{88\:\ ?|SYNTHETIC\lRETURN\l|return r8 \- 2\l}"];
}
subgraph cluster_Region_1737979709 {
label = "R(1:(2:23|89)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_36069161 {
label = "IF [B:16:0x002c, B:18:0x0030, B:20:0x0034, B:22:0x003a] THEN: R(2:23|89) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002c|ADDED_TO_REGION\l|if (r1 \> 2) goto L_0x002e\l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|ADDED_TO_REGION\l|if (r10[2] == true) goto L_0x0032\l}"];
Node_20 [shape=record,label="{20\:\ 0x0034|ADDED_TO_REGION\l|if (r7[r8] == 0) goto L_0x0036\l}"];
Node_22 [shape=record,label="{22\:\ 0x003a|ADDED_TO_REGION\l|if (r7[r8 + 1] == 1) goto L_0x003c\l}"];
subgraph cluster_Region_591931914 {
label = "R(2:23|89)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x003c|clearPrefixFlags(r10)\l}"];
Node_89 [shape=record,label="{89\:\ ?|SYNTHETIC\lRETURN\l|return r8 \- 1\l}"];
}
}
}
}
}
}
}
}
Node_24 [shape=record,label="{24\:\ 0x0042|int int r2 = r9 \- 1\lint int r0 = r8 + 2\l}"];
subgraph cluster_LoopRegion_1541217963 {
label = "LOOP:0: (2:(1:(2:(2:(1:36)|90)|(1:38)))(0)|28)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0046|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v4 'i' int) binds: [B:24:0x0042, B:28:0x004e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:25:0x0046\-\>B:28:0x004e\l|if (r0 \< r2) goto L_0x0048\l}"];
subgraph cluster_Region_178612150 {
label = "R(2:(1:(2:(2:(1:36)|90)|(1:38)))(0)|28)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_701416514 {
label = "IF [B:27:0x004c] THEN: R(1:(2:(2:(1:36)|90)|(1:38))) ELSE: R(0)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x004c|if ((r7[r0] & 254) == 0) goto L_0x0051\l}"];
subgraph cluster_Region_838216921 {
label = "R(1:(2:(2:(1:36)|90)|(1:38)))";
node [shape=record,color=blue];
subgraph cluster_Region_1302714829 {
label = "R(2:(2:(1:36)|90)|(1:38))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_450215830 {
label = "IF [B:30:0x0055, B:32:0x005b, B:34:0x005f] THEN: R(2:(1:36)|90) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0055|if (r7[r0 \- 2] == 0) goto L_0x0057\l}"];
Node_32 [shape=record,label="{32\:\ 0x005b|ADDED_TO_REGION\l|if (r7[r0 \- 1] == 0) goto L_0x005d\l}"];
Node_34 [shape=record,label="{34\:\ 0x005f|ADDED_TO_REGION\l|if (r7[r0] == 1) goto L_0x0061\l}"];
subgraph cluster_Region_462578590 {
label = "R(2:(1:36)|90)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_290943451 {
label = "IF [B:35:0x0061] THEN: R(1:36) ELSE: null";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0061|if (r10 != null) goto L_0x0063\l}"];
subgraph cluster_Region_1940722049 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0063|clearPrefixFlags(r10)\l}"];
}
}
Node_90 [shape=record,label="{90\:\ ?|SYNTHETIC\lRETURN\l|return r0 \- 2\l}"];
}
}
subgraph cluster_Region_1733087579 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0069|r0 \-= 2\l}"];
}
}
}
subgraph cluster_Region_1933409225 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_28 [shape=record,label="{28\:\ 0x004e|LOOP_END\lPHI: r0 \l  PHI: (r0v3 'i' int) = (r0v1 'i' int), (r0v2 'i' int) binds: [B:84:0x004e, B:85:0x004e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:25:0x0046\-\>B:28:0x004e\l|r0 += 3\l}"];
}
}
subgraph cluster_Region_280346578 {
label = "R(2:(1:91)|(6:48|(1:51)(1:76)|55|(1:81)|57|92))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_986107318 {
label = "IF [B:39:0x006c] THEN: R(1:91) ELSE: null";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x006c|if (r10 == null) goto L_?\l}"];
subgraph cluster_Region_561832566 {
label = "R(1:91)";
node [shape=record,color=blue];
Node_91 [shape=record,label="{91\:\ ?|SYNTHETIC\lRETURN\l|return r9\l}"];
}
}
subgraph cluster_Region_1265187484 {
label = "R(6:48|(1:51)(1:76)|55|(1:81)|57|92)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0083|PHI: r3 \l  PHI: (r3v14 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r10[0] = r1 \> 2 ? r7[r9 + \-3] == 0 && r7[r9 + \-2] == 0 && r7[r9 + \-1] == 1 : r1 == 2 ? r10[2] && r7[r9 + \-2] == 0 && r7[r9 + \-1] == 1 : r10[1] && r7[r9 + \-1] == 1\l}"];
subgraph cluster_IfRegion_1273517126 {
label = "IF [B:49:0x0085] THEN: R(1:51) ELSE: R(1:76)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x0085|if (r1 \> 1) goto L_0x0087\l}"];
subgraph cluster_Region_1696075870 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x008b|r3 = r7[r9 + \-2] == 0 && r7[r9 + \-1] == 0\l}"];
}
subgraph cluster_Region_975908749 {
label = "R(1:76)";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x00ca|r3 = r10[2] && r7[r9 + \-1] == 0\l}"];
}
}
Node_55 [shape=record,label="{55\:\ 0x0094|PHI: r3 \l  PHI: (r3v20 boolean) = (r3v16 boolean), (r3v25 boolean) binds: [B:80:0x00d4, B:74:0x00c6] A[DONT_GENERATE, DONT_INLINE]\l|r10[1] = r3\l}"];
subgraph cluster_IfRegion_965162659 {
label = "IF [B:56:0x009a] THEN: R(1:81) ELSE: null";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x009a|if (r7[r9 \- 1] != 0) goto L_0x00d6\l}"];
subgraph cluster_Region_898942984 {
label = "R(1:81)";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x00d6|r4 = false\l}"];
}
}
Node_57 [shape=record,label="{57\:\ 0x009c|PHI: r4 \l  PHI: (r4v2 boolean) = (r4v0 boolean), (r4v1 boolean) binds: [B:56:0x009a, B:81:0x00d6] A[DONT_GENERATE, DONT_INLINE]\l|r10[2] = r4\l}"];
Node_92 [shape=record,label="{92\:\ ?|SYNTHETIC\lRETURN\l|return r9\l}"];
}
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ 0x0012}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001e}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0022}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x002e}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0032}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0036}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0048}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0051}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0057}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x005d}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0066}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x006e}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x0070}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0074}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0076}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x007a|REMOVE\lADDED_TO_REGION\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x007c}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0080|REMOVE\lADDED_TO_REGION\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0082}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0087}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x008d}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0091|REMOVE\lADDED_TO_REGION\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x0093}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x00a0}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x00a2}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x00a4}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x00a6}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x00a8}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x00ac|REMOVE\lADDED_TO_REGION\l}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x00ae}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x00b2|REMOVE\lADDED_TO_REGION\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x00b4}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x00b6}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x00b8}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x00ba}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x00bc}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x00c0|REMOVE\lADDED_TO_REGION\l}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x00c2}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x00c4}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x00c6}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x00c8}"];
Node_77 [shape=record,color=red,label="{77\:\ 0x00cc}"];
Node_78 [shape=record,color=red,label="{78\:\ 0x00d0|REMOVE\lADDED_TO_REGION\l}"];
Node_79 [shape=record,color=red,label="{79\:\ 0x00d2}"];
Node_80 [shape=record,color=red,label="{80\:\ 0x00d4}"];
Node_82 [shape=record,color=red,label="{82\:\ 0x006c|SYNTHETIC\l}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0061|SYNTHETIC\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x004e|SYNTHETIC\l}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x004e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static int com.google.android.exoplayer2.util.NalUnitUtil.findNalUnit((r7v0 'data' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'startOffset' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'endOffset' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'prefixFlags' boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_5 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_86;
Node_6 -> Node_7;
Node_6 -> Node_24[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_87;
Node_10 -> Node_11;
Node_10 -> Node_16[style=dashed];
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_88;
Node_16 -> Node_17;
Node_16 -> Node_24[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_24[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_24[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_89;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_82[style=dashed];
Node_27 -> Node_29;
Node_27 -> Node_84[style=dashed];
Node_30 -> Node_31;
Node_30 -> Node_38[style=dashed];
Node_32 -> Node_33;
Node_32 -> Node_38[style=dashed];
Node_34 -> Node_38[style=dashed];
Node_34 -> Node_83;
Node_35 -> Node_36;
Node_35 -> Node_37[style=dashed];
Node_36 -> Node_37;
Node_38 -> Node_85;
Node_28 -> Node_25;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_91;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_49 -> Node_75[style=dashed];
Node_51 -> Node_52;
Node_51 -> Node_74;
Node_76 -> Node_77;
Node_76 -> Node_80;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_81;
Node_81 -> Node_57;
Node_57 -> Node_92;
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_26 -> Node_27;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_37 -> Node_90;
Node_40 -> Node_41;
Node_40 -> Node_59;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_42 -> Node_58;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_44 -> Node_58;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_46 -> Node_58;
Node_47 -> Node_48;
Node_50 -> Node_51;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_53 -> Node_74;
Node_54 -> Node_55;
Node_58 -> Node_48;
Node_59 -> Node_60;
Node_59 -> Node_68;
Node_60 -> Node_61;
Node_61 -> Node_62;
Node_61 -> Node_67;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_63 -> Node_67;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_65 -> Node_67;
Node_66 -> Node_48;
Node_67 -> Node_48;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_69 -> Node_73;
Node_70 -> Node_71;
Node_71 -> Node_72;
Node_71 -> Node_73;
Node_72 -> Node_48;
Node_73 -> Node_48;
Node_74 -> Node_55;
Node_75 -> Node_76;
Node_77 -> Node_78;
Node_78 -> Node_79;
Node_78 -> Node_80;
Node_79 -> Node_55;
Node_80 -> Node_55;
Node_82 -> Node_39;
Node_83 -> Node_35;
Node_84 -> Node_28;
Node_85 -> Node_28;
}

