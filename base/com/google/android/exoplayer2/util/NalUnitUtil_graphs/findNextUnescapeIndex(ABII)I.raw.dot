digraph "CFG forcom.google.android.exoplayer2.util.NalUnitUtil.findNextUnescapeIndex([BII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('offset' int)])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: ARITH  (r1 I:int) = (r5 I:int A[D('limit' int)]) + (\-2 int) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r1 I:?[int, byte, short, char])  \-\> B:11:0x001a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r3 I:byte[] A[D('bytes' byte[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0017 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: ARITH  (r1 I:int) = (r0 I:int A[D('i' int)]) + (1 int) \l0x000b: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r3 I:byte[] A[D('bytes' byte[]), IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0017 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: ARITH  (r1 I:int) = (r0 I:int A[D('i' int)]) + (2 int) \l0x0011: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r3 I:byte[] A[D('bytes' byte[]), IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0013: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0017 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: RETURN  (r0 I:int A[D('i' int)]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|0x001a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('limit' int)])\l \l}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.util.NalUnitUtil.findNextUnescapeIndex((r3 I:byte[] A[D('bytes' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0001\-0x0016: r0 'i' int\l  0x0017\-0x001b: r0 'i' int\l  ?\-0x001b: r3 'bytes' byte[]\l  ?\-0x001b: r4 'offset' int\l  ?\-0x001b: r5 'limit' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_9;
}

