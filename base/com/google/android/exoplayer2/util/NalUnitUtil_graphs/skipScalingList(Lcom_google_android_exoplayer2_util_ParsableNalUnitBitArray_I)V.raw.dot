digraph "CFG forcom.google.android.exoplayer2.util.NalUnitUtil.skipScalingList(Lcom\/google\/android\/exoplayer2\/util\/ParsableNalUnitBitArray;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0002: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r6 I:?[int, byte, short, char] A[D('size' int)])  \-\> B:7:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nextScale' int)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray A[D('bitArray' com.google.android.exoplayer2.util.ParsableNalUnitBitArray)])\l com.google.android.exoplayer2.util.ParsableNalUnitBitArray.readSignedExpGolombCodedInt():int type: VIRTUAL \l0x000d: ARITH  (r4 I:int) = (r2 I:int A[D('lastScale' int)]) + (r0 I:int A[D('deltaScale' int)]) \l0x000f: ARITH  (r4 I:int) = (r4 I:int) + (256 int) \l0x0011: ARITH  (r3 I:int A[D('nextScale' int)]) = (r4 I:int) % (256 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nextScale' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lastScale' int)]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nextScale' int)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.util.NalUnitUtil.skipScalingList((r5 I:com.google.android.exoplayer2.util.ParsableNalUnitBitArray A[D('bitArray' com.google.android.exoplayer2.util.ParsableNalUnitBitArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000d\-0x0013: r0 'deltaScale' int\l  0x0005\-0x001a: r1 'i' int\l  0x0002\-0x001a: r2 'lastScale' int\l  0x0004\-0x001a: r3 'nextScale' int\l  ?\-0x001a: r5 'bitArray' com.google.android.exoplayer2.util.ParsableNalUnitBitArray\l  ?\-0x001a: r6 'size' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_5;
}

