digraph "CFG forcom.google.android.exoplayer2.util.ReusableBufferedOutputStream.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: IPUT  \l  (r2 I:boolean)\l  (r3 I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream)\l com.google.android.exoplayer2.util.ReusableBufferedOutputStream.closed boolean \l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|SYNTHETIC\lSplitter:B:1:0x0004\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0004\l|0x0004: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream)\l com.google.android.exoplayer2.util.ReusableBufferedOutputStream.flush():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0012 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|SYNTHETIC\lSplitter:B:3:0x0007\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0007\l|0x0007: IGET  (r2 I:java.io.OutputStream) = \l  (r3 I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream)\l com.google.android.exoplayer2.util.ReusableBufferedOutputStream.out java.io.OutputStream A[Catch:\{ Throwable \-\> 0x0015 \}, TRY_ENTER]\l0x0009: INVOKE  (r2 I:java.io.OutputStream) java.io.OutputStream.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('thrown' java.lang.Throwable)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: INVOKE  \l  (r1 I:java.lang.Throwable A[D('thrown' java.lang.Throwable)])\l com.google.android.exoplayer2.util.Util.sneakyThrow(java.lang.Throwable):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|ExcHandler: Throwable null\lSplitter:B:1:0x0004\l|0x0012: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: MOVE  (r1 I:?[OBJECT, ARRAY] A[D('thrown' java.lang.Throwable)]) = (r0 I:?[OBJECT, ARRAY] A[D('e' java.lang.Throwable)]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|ExcHandler: Throwable null\lSplitter:B:3:0x0007\l|0x0015: MOVE_EXCEPTION  (r0 I:?[OBJECT] A[D('e' java.lang.Throwable)]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|0x0016: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('thrown' java.lang.Throwable)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|0x0018: MOVE  (r1 I:?[OBJECT, ARRAY] A[D('thrown' java.lang.Throwable)]) = (r0 I:?[OBJECT, ARRAY] A[D('e' java.lang.Throwable)]) \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.util.ReusableBufferedOutputStream.close((r3 'this' I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0013\-0x0015: r0 'e' java.lang.Throwable\l  0x0016\-0x0019: r0 'e' java.lang.Throwable\l  0x0004\-0x0019: r1 'thrown' java.lang.Throwable\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_4 -> Node_10;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_3;
Node_10 -> Node_11;
Node_11 -> Node_5;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_5;
}

