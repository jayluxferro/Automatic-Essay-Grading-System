digraph "CFG forcom.google.android.exoplayer2.util.SlidingPercentile.\<init\>(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r2 I:int A[D('maxWeight' int)])\l  (r1 I:com.google.android.exoplayer2.util.SlidingPercentile)\l com.google.android.exoplayer2.util.SlidingPercentile.maxWeight int \l0x0005: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0006: NEW_ARRAY  (r0 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.util.SlidingPercentile$Sample[] \l0x0008: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample[])\l  (r1 I:com.google.android.exoplayer2.util.SlidingPercentile)\l com.google.android.exoplayer2.util.SlidingPercentile.recycledSamples com.google.android.exoplayer2.util.SlidingPercentile$Sample[] \l0x000a: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000c: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000f: IPUT  \l  (r0 I:java.util.ArrayList\<com.google.android.exoplayer2.util.SlidingPercentile$Sample\>)\l  (r1 I:com.google.android.exoplayer2.util.SlidingPercentile)\l com.google.android.exoplayer2.util.SlidingPercentile.samples java.util.ArrayList \l0x0011: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0012: IPUT  \l  (r0 I:int)\l  (r1 I:com.google.android.exoplayer2.util.SlidingPercentile)\l com.google.android.exoplayer2.util.SlidingPercentile.currentSortOrder int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.util.SlidingPercentile.\<init\>((r1 'this' I:com.google.android.exoplayer2.util.SlidingPercentile A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('maxWeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0014: r2 'maxWeight' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

