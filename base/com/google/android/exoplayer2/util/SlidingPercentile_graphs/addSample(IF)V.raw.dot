digraph "CFG forcom.google.android.exoplayer2.util.SlidingPercentile.addSample(IF)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.ensureSortedByIndex():void type: DIRECT \l0x0004: IGET  (r3 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.recycledSampleCount int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x005c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r3 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample[]) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.recycledSamples com.google.android.exoplayer2.util.SlidingPercentile$Sample[] \l0x000a: IGET  (r4 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.recycledSampleCount int \l0x000c: ARITH  (r4 I:int) = (r4 I:int) + (\-1 int) \l0x000e: IPUT  \l  (r4 I:int)\l  (r7 I:com.google.android.exoplayer2.util.SlidingPercentile)\l com.google.android.exoplayer2.util.SlidingPercentile.recycledSampleCount int \l0x0010: AGET  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IGET  (r3 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.nextSampleIndex int \l0x0014: ARITH  (r4 I:int) = (r3 I:int) + (1 int) \l0x0016: IPUT  \l  (r4 I:int)\l  (r7 I:com.google.android.exoplayer2.util.SlidingPercentile)\l com.google.android.exoplayer2.util.SlidingPercentile.nextSampleIndex int \l0x0018: IPUT  \l  (r3 I:int)\l  (r1 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample A[D('newSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample)])\l com.google.android.exoplayer2.util.SlidingPercentile.Sample.index int \l0x001a: IPUT  \l  (r8 I:int A[D('weight' int)])\l  (r1 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample A[D('newSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample)])\l com.google.android.exoplayer2.util.SlidingPercentile.Sample.weight int \l0x001c: IPUT  \l  (r9 I:float A[D('value' float)])\l  (r1 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample A[D('newSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample)])\l com.google.android.exoplayer2.util.SlidingPercentile.Sample.value float \l0x001e: IGET  (r3 I:java.util.ArrayList\<com.google.android.exoplayer2.util.SlidingPercentile$Sample\>) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.samples java.util.ArrayList \l0x0020: INVOKE  \l  (r3 I:java.util.ArrayList)\l  (r1 I:java.lang.Object A[D('newSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample)])\l java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0023: IGET  (r3 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.totalWeight int \l0x0025: ARITH  (r3 I:int) = (r3 I:int) + (r8 I:int A[D('weight' int)]) \l0x0026: IPUT  \l  (r3 I:int)\l  (r7 I:com.google.android.exoplayer2.util.SlidingPercentile)\l com.google.android.exoplayer2.util.SlidingPercentile.totalWeight int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: IGET  (r3 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.totalWeight int \l0x002a: IGET  (r4 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.maxWeight int \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IF  (r3 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:13:0x006e \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: IGET  (r3 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.totalWeight int \l0x0030: IGET  (r4 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.maxWeight int \l0x0032: ARITH  (r0 I:int) = (r3 I:int) \- (r4 I:int) \l0x0034: IGET  (r3 I:java.util.ArrayList\<com.google.android.exoplayer2.util.SlidingPercentile$Sample\>) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.samples java.util.ArrayList \l0x0036: INVOKE  (r2 I:java.lang.Object) = (r3 I:java.util.ArrayList), (r6 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x003a: CHECK_CAST  (r2 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample) = (com.google.android.exoplayer2.util.SlidingPercentile$Sample) (r2 I:?[OBJECT, ARRAY]) \l0x003c: IGET  (r3 I:int) = \l  (r2 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample A[D('oldestSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample)])\l com.google.android.exoplayer2.util.SlidingPercentile.Sample.weight int \l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: IF  (r3 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char] A[D('excessWeight' int)])  \-\> B:12:0x0063 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|0x0040: IGET  (r3 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.totalWeight int \l0x0042: IGET  (r4 I:int) = \l  (r2 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample A[D('oldestSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample)])\l com.google.android.exoplayer2.util.SlidingPercentile.Sample.weight int \l0x0044: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x0045: IPUT  \l  (r3 I:int)\l  (r7 I:com.google.android.exoplayer2.util.SlidingPercentile)\l com.google.android.exoplayer2.util.SlidingPercentile.totalWeight int \l0x0047: IGET  (r3 I:java.util.ArrayList\<com.google.android.exoplayer2.util.SlidingPercentile$Sample\>) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.samples java.util.ArrayList \l0x0049: INVOKE  (r3 I:java.util.ArrayList), (r6 I:int) java.util.ArrayList.remove(int):java.lang.Object type: VIRTUAL \l0x004c: IGET  (r3 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.recycledSampleCount int \l0x004e: CONST  (r4 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x004f|0x004f: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:4:0x0028 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0051|0x0051: IGET  (r3 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample[]) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.recycledSamples com.google.android.exoplayer2.util.SlidingPercentile$Sample[] \l0x0053: IGET  (r4 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.recycledSampleCount int \l0x0055: ARITH  (r5 I:int) = (r4 I:int) + (1 int) \l0x0057: IPUT  \l  (r5 I:int)\l  (r7 I:com.google.android.exoplayer2.util.SlidingPercentile)\l com.google.android.exoplayer2.util.SlidingPercentile.recycledSampleCount int \l0x0059: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY] A[D('oldestSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample)])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x005c|0x005c: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample A[D('newSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample)]) =  com.google.android.exoplayer2.util.SlidingPercentile$Sample \l0x005e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005f: INVOKE  \l  (r1 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample)\l  (r3 I:com.google.android.exoplayer2.util.SlidingPercentile$1)\l com.google.android.exoplayer2.util.SlidingPercentile.Sample.\<init\>(com.google.android.exoplayer2.util.SlidingPercentile$1):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0063|0x0063: IGET  (r3 I:int) = \l  (r2 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample A[D('oldestSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample)])\l com.google.android.exoplayer2.util.SlidingPercentile.Sample.weight int \l0x0065: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int A[D('excessWeight' int)]) \l0x0066: IPUT  \l  (r3 I:int)\l  (r2 I:com.google.android.exoplayer2.util.SlidingPercentile$Sample A[D('oldestSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample)])\l com.google.android.exoplayer2.util.SlidingPercentile.Sample.weight int \l0x0068: IGET  (r3 I:int) = (r7 I:com.google.android.exoplayer2.util.SlidingPercentile) com.google.android.exoplayer2.util.SlidingPercentile.totalWeight int \l0x006a: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int A[D('excessWeight' int)]) \l0x006b: IPUT  \l  (r3 I:int)\l  (r7 I:com.google.android.exoplayer2.util.SlidingPercentile)\l com.google.android.exoplayer2.util.SlidingPercentile.totalWeight int \l}"];
Node_13 [shape=record,label="{13\:\ 0x006e|0x006e: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.util.SlidingPercentile.addSample((r7 'this' I:com.google.android.exoplayer2.util.SlidingPercentile A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[D('weight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:float A[D('value' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0034\-0x005c: r0 'excessWeight' int\l  0x0012\-0x005c: r1 'newSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample\l  0x003c\-0x005c: r2 'oldestSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample\l  0x0063\-0x006e: r0 'excessWeight' int\l  0x0063\-0x006e: r2 'oldestSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample\l  0x0063\-0x006e: r1 'newSample' com.google.android.exoplayer2.util.SlidingPercentile$Sample\l  ?\-0x006e: r8 'weight' int\l  ?\-0x006e: r9 'value' float\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_4;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_4;
Node_11 -> Node_3;
Node_12 -> Node_4;
}

