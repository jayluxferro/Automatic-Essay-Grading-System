digraph "CFG forcom.google.android.exoplayer2.util.ParsableByteArray.readLine()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: RETURN  (r0 I:java.lang.String) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r1 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IGET  (r2 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.limit int \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IF  (r1 I:?[int, byte, short, char] A[D('lineLimit' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:10:0x001b \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IGET  (r2 I:byte[]) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0010: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char] A[D('lineLimit' int)])\l \l0x0012: INVOKE  (r2 I:boolean) = (r2 I:int) com.google.android.exoplayer2.util.Util.isLinebreak(int):boolean type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: ARITH  (r1 I:int A[D('lineLimit' int)]) = (r1 I:int A[D('lineLimit' int)]) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: IGET  (r2 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x001d: ARITH  (r2 I:int) = (r1 I:int A[D('lineLimit' int)]) \- (r2 I:int) \l0x001f: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:19:0x004a \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: IGET  (r2 I:byte[]) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0024: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x0026: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0028: CONST  (r3 I:?[int, float, short, byte, char]) = (\-17 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004a \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: IGET  (r2 I:byte[]) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x002e: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x0030: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x0032: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0034: CONST  (r3 I:?[int, float, short, byte, char]) = (\-69 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: IGET  (r2 I:byte[]) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x003a: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x003c: ARITH  (r3 I:int) = (r3 I:int) + (2 int) \l0x003e: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0040: CONST  (r3 I:?[int, float, short, byte, char]) = (\-65 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|0x0042: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004a \l}"];
Node_18 [shape=record,label="{18\:\ 0x0044|0x0044: IGET  (r2 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x0046: ARITH  (r2 I:int) = (r2 I:int) + (3 int) \l0x0048: IPUT  \l  (r2 I:int)\l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray)\l com.google.android.exoplayer2.util.ParsableByteArray.position int \l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: NEW_INSTANCE  (r0 I:java.lang.String) =  java.lang.String \l0x004c: IGET  (r2 I:byte[]) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x004e: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x0050: IGET  (r4 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x0052: ARITH  (r4 I:int) = (r1 I:int A[D('lineLimit' int)]) \- (r4 I:int) \l0x0054: INVOKE  \l  (r0 I:java.lang.String)\l  (r2 I:byte[])\l  (r3 I:int)\l  (r4 I:int)\l java.lang.String.\<init\>(byte[], int, int):void type: DIRECT \l0x0057: IPUT  \l  (r1 I:int A[D('lineLimit' int)])\l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray)\l com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x0059: IGET  (r2 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x005b: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.limit int \l}"];
Node_20 [shape=record,label="{20\:\ 0x005d|0x005d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_21 [shape=record,label="{21\:\ 0x005f|0x005f: IGET  (r2 I:byte[]) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0061: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x0063: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0065: CONST  (r3 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0067|0x0067: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0075 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0069|0x0069: IGET  (r2 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x006b: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x006d: IPUT  \l  (r2 I:int)\l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray)\l com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x006f: IGET  (r2 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x0071: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.limit int \l}"];
Node_24 [shape=record,label="{24\:\ 0x0073|0x0073: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0075|0x0075: IGET  (r2 I:byte[]) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0077: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x0079: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x007b: CONST  (r3 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x007d|0x007d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_27 [shape=record,label="{27\:\ 0x007f|0x007f: IGET  (r2 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.position int \l0x0081: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0083: IPUT  \l  (r2 I:int)\l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray)\l com.google.android.exoplayer2.util.ParsableByteArray.position int \l}"];
MethodNode[shape=record,label="{public java.lang.String com.google.android.exoplayer2.util.ParsableByteArray.readLine((r5 'this' I:com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0057\-0x0085: r0 'line' java.lang.String\l  0x000a\-0x0085: r1 'lineLimit' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_3;
Node_20 -> Node_21[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_3;
Node_24 -> Node_25[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_3;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_3;
}

