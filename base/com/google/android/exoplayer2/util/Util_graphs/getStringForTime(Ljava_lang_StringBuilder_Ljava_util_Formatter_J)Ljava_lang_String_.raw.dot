digraph "CFG forcom.google.android.exoplayer2.util.Util.getStringForTime(Ljava\/lang\/StringBuilder;Ljava\/util\/Formatter;J)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0005: CMP_L  (r8 I:int) = (r14 I:long A[D('timeMs' long)]), (r8 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r14 I:?[long, double] A[D('timeMs' long)]) = (0 ?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r8 I:?[long, double]) = (500(0x1f4, double:2.47E\-321) ?[long, double]) \l0x000d: ARITH  (r8 I:long) = (r8 I:long) + (r14 I:long A[D('timeMs' long)]) \l0x000e: CONST  (r10 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x0010: ARITH  (r6 I:long) = (r8 I:long) \/ (r10 I:long) \l0x0012: CONST  (r8 I:?[long, double]) = (60 ?[long, double]) \l0x0014: ARITH  (r4 I:long) = (r6 I:long A[D('totalSeconds' long)]) % (r8 I:long) \l0x0016: CONST  (r8 I:?[long, double]) = (60 ?[long, double]) \l0x0018: ARITH  (r8 I:long) = (r6 I:long A[D('totalSeconds' long)]) \/ (r8 I:long) \l0x001a: CONST  (r10 I:?[long, double]) = (60 ?[long, double]) \l0x001c: ARITH  (r2 I:long) = (r8 I:long) % (r10 I:long) \l0x001e: CONST  (r8 I:?[long, double]) = (3600(0xe10, double:1.7786E\-320) ?[long, double]) \l0x0020: ARITH  (r0 I:long) = (r6 I:long A[D('totalSeconds' long)]) \/ (r8 I:long) \l0x0022: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: INVOKE  \l  (r12 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l  (r8 I:int)\l java.lang.StringBuilder.setLength(int):void type: VIRTUAL \l0x0026: CONST  (r8 I:?[long, double]) = (0 ?[long, double]) \l0x0028: CMP_L  (r8 I:int) = (r0 I:long A[D('hours' long)]), (r8 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x004f \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: CONST_STR  (r8 I:java.lang.String) =  \"%d:%02d:%02d\" \l0x002e: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x002f: NEW_ARRAY  (r9 I:java.lang.Object[]) = (r9 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0031: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0032: INVOKE  (r11 I:java.lang.Long) = (r0 I:long A[D('hours' long)]) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0036: APUT  \l  (r9 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l  (r11 I:?[OBJECT, ARRAY])\l \l0x0038: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0039: INVOKE  (r11 I:java.lang.Long) = (r2 I:long A[D('minutes' long)]) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x003d: APUT  \l  (r9 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l  (r11 I:?[OBJECT, ARRAY])\l \l0x003f: CONST  (r10 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0040: INVOKE  (r11 I:java.lang.Long) = (r4 I:long A[D('seconds' long)]) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0044: APUT  \l  (r9 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l  (r11 I:?[OBJECT, ARRAY])\l \l0x0046: INVOKE  (r8 I:java.util.Formatter) = \l  (r13 I:java.util.Formatter A[D('formatter' java.util.Formatter)])\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.Object[])\l java.util.Formatter.format(java.lang.String, java.lang.Object[]):java.util.Formatter type: VIRTUAL \l0x004a: INVOKE  (r8 I:java.lang.String) = (r8 I:java.util.Formatter) java.util.Formatter.toString():java.lang.String type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x004e|0x004e: RETURN  (r8 I:java.lang.String) \l}"];
Node_7 [shape=record,label="{7\:\ 0x004f|0x004f: CONST_STR  (r8 I:java.lang.String) =  \"%02d:%02d\" \l0x0051: CONST  (r9 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0052: NEW_ARRAY  (r9 I:java.lang.Object[]) = (r9 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0054: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0055: INVOKE  (r11 I:java.lang.Long) = (r2 I:long A[D('minutes' long)]) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0059: APUT  \l  (r9 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l  (r11 I:?[OBJECT, ARRAY])\l \l0x005b: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x005c: INVOKE  (r11 I:java.lang.Long) = (r4 I:long A[D('seconds' long)]) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0060: APUT  \l  (r9 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l  (r11 I:?[OBJECT, ARRAY])\l \l0x0062: INVOKE  (r8 I:java.util.Formatter) = \l  (r13 I:java.util.Formatter A[D('formatter' java.util.Formatter)])\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.Object[])\l java.util.Formatter.format(java.lang.String, java.lang.Object[]):java.util.Formatter type: VIRTUAL \l0x0066: INVOKE  (r8 I:java.lang.String) = (r8 I:java.util.Formatter) java.util.Formatter.toString():java.lang.String type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public static java.lang.String com.google.android.exoplayer2.util.Util.getStringForTime((r12 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.util.Formatter A[D('formatter' java.util.Formatter), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:long A[D('timeMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0022\-0x006a: r0 'hours' long\l  0x001e\-0x006a: r2 'minutes' long\l  0x0016\-0x006a: r4 'seconds' long\l  0x0012\-0x006a: r6 'totalSeconds' long\l  ?\-0x006a: r12 'builder' java.lang.StringBuilder\l  ?\-0x006a: r13 'formatter' java.util.Formatter\l  ?\-0x006a: r14 'timeMs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_6;
}

