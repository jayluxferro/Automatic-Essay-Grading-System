digraph "CFG forcom.google.android.exoplayer2.util.Util.binarySearchFloor([JJZZ)I" {
subgraph cluster_Region_1522502968 {
label = "R(3:0|(1:2)(2:(4:5|(1:(1:10))|5|11)|(0))|3)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = java.util.Arrays.binarySearch(r5, r6)\l}"];
subgraph cluster_IfRegion_481902338 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: R(2:(4:5|(1:(1:10))|5|11)|(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 \< 0) goto L_0x0006\l}"];
subgraph cluster_Region_977904446 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|int r0 = \-(r0 + 2)\l}"];
}
subgraph cluster_Region_798522980 {
label = "R(2:(4:5|(1:(1:10))|5|11)|(0))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_51180396 {
label = "LOOP:0: (4:5|(1:(1:10))|5|11)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0019|LOOP_END\lLOOP:0: B:5:0x0011\-\>B:8:0x0019\l|if (r5[r0] != r6) goto L_0x001b\l}"];
subgraph cluster_Region_730236316 {
label = "R(4:5|(1:(1:10))|5|11)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'index' int) = (r0v0 'index' int), (r0v2 'index' int) binds: [B:1:0x0004, B:8:0x0019] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0011\-\>B:8:0x0019\l|r0\-\-\l}"];
subgraph cluster_IfRegion_1740135207 {
label = "IF [B:6:0x0013, B:8:0x0019] THEN: R(1:(1:10)) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0013|ADDED_TO_REGION\l|if (r0 \< 0) goto L_0x001b\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|LOOP_END\lLOOP:0: B:5:0x0011\-\>B:8:0x0019\l|if (r5[r0] != r6) goto L_0x001b\l}"];
subgraph cluster_Region_37171583 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1389278118 {
label = "IF [B:9:0x001b] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001b|EDGE_INSN: B:11:0x001b\-\>B:9:0x001b ?: BREAK  \l|if (r8 == true) goto L_0x001d\l}"];
subgraph cluster_Region_1461086418 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001d|r0++\l}"];
}
}
}
}
Node_5 [shape=record,label="{5\:\ 0x0011|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'index' int) = (r0v0 'index' int), (r0v2 'index' int) binds: [B:1:0x0004, B:8:0x0019] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0011\-\>B:8:0x0019\l|r0\-\-\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:11:0x001b\-\>B:9:0x001b ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_IfRegion_1206789695 {
label = "IF [B:9:0x001b] THEN: R(0) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001b|EDGE_INSN: B:11:0x001b\-\>B:9:0x001b ?: BREAK  \l|if (r8 == true) goto L_0x001d\l}"];
subgraph cluster_Region_728304632 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\lPHI: r0 \l  PHI: (r0v4 'index' int) = (r0v2 'index' int), (r0v3 'index' int), (r0v6 'index' int) binds: [B:9:0x001b, B:10:0x001d, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|return r9 ? java.lang.Math.max(0, r0) : r0\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x000b}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0015}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001b|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static int com.google.android.exoplayer2.util.Util.binarySearchFloor((r5v0 'array' long[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'value' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'inclusive' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'stayInBounds' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lRemoved duplicated region for block: B:10:0x001d \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_8 -> Node_5[style=dashed];
Node_8 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_8 -> Node_5[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_3[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_3;
Node_5 -> Node_6;
Node_11 -> Node_9;
Node_9 -> Node_3[style=dashed];
Node_9 -> Node_10;
Node_3 -> Node_4;
Node_3 -> Node_14;
Node_4 -> Node_13;
Node_7 -> Node_8;
Node_12 -> Node_9;
}

