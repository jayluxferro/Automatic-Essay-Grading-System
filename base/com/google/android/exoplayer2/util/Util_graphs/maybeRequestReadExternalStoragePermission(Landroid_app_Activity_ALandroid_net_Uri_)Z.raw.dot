digraph "CFG forcom.google.android.exoplayer2.util.Util.maybeRequestReadExternalStoragePermission(Landroid\/app\/Activity;[Landroid\/net\/Uri;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: SGET  (r3 I:int) =  com.google.android.exoplayer2.util.Util.SDK_INT int \l0x0004: CONST  (r4 I:?[int, float, short, byte, char]) = (23 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: ARRAY_LENGTH  (r4 I:int) = (r7 I:?[] A[D('uris' android.net.Uri[])]) \l0x000a: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:2:0x0008 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: AGET  (r0 I:?[OBJECT, ARRAY]) = \l  (r7 I:?[OBJECT, ARRAY][] A[D('uris' android.net.Uri[])])\l  (r3 I:?[int, short, byte, char])\l \l0x000f: INVOKE  (r5 I:boolean) = (r0 I:android.net.Uri A[D('uri' android.net.Uri)]) com.google.android.exoplayer2.util.Util.isLocalFileUri(android.net.Uri):boolean type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: CONST_STR  (r3 I:java.lang.String) =  \"android.permission.READ_EXTERNAL_STORAGE\" \l0x0017: INVOKE  (r3 I:int) = \l  (r6 I:android.app.Activity A[D('activity' android.app.Activity)])\l  (r3 I:java.lang.String)\l android.app.Activity.checkSelfPermission(java.lang.String):int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0008 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: NEW_ARRAY  (r3 I:java.lang.String[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x001f: CONST_STR  (r4 I:java.lang.String) =  \"android.permission.READ_EXTERNAL_STORAGE\" \l0x0021: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0023: INVOKE  \l  (r6 I:android.app.Activity A[D('activity' android.app.Activity)])\l  (r3 I:java.lang.String[])\l  (r1 I:int)\l android.app.Activity.requestPermissions(java.lang.String[], int):void type: VIRTUAL \l0x0026: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.exoplayer2.util.Util.maybeRequestReadExternalStoragePermission((r6 I:android.app.Activity A[D('activity' android.app.Activity), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.net.Uri[] A[D('uris' android.net.Uri[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000f\-0x002a: r0 'uri' android.net.Uri\l  ?\-0x002a: r6 'activity' android.app.Activity\l  ?\-0x002a: r7 'uris' android.net.Uri[]\lAnnotation[BUILD, android.annotation.TargetApi, \{value=23\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_2;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_2;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_2;
Node_10 -> Node_4;
}

