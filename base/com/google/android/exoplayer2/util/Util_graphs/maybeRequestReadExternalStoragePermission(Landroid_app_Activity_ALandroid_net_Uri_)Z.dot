digraph "CFG forcom.google.android.exoplayer2.util.Util.maybeRequestReadExternalStoragePermission(Landroid\/app\/Activity;[Landroid\/net\/Uri;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (SDK_INT \>= 23) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|int r4 = r7.length\lr3 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|LOOP_START\lPHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v6 int) binds: [B:2:0x0009, B:9:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000b\-\>B:9:0x0028\l|if (r3 \>= r4) goto L_0x0008\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if (isLocalFileUri(r7[r3]) == false) goto L_0x0028\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015}"];
Node_7 [shape=record,label="{7\:\ 0x001b|if (r6.checkSelfPermission(\"android.permission.READ_EXTERNAL_STORAGE\") == 0) goto L_?\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|java.lang.String[] r3 = new java.lang.String[]\{\"android.permission.READ_EXTERNAL_STORAGE\"\}\lr6.requestPermissions(r3, 0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|LOOP_END\lLOOP:0: B:3:0x000b\-\>B:9:0x0028\l|int r3 = r3 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0008|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.exoplayer2.util.Util.maybeRequestReadExternalStoragePermission((r6v0 'activity' android.app.Activity A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'uris' android.net.Uri[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=23\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_12[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_9;
Node_5 -> Node_10[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_14;
Node_9 -> Node_3;
Node_10 -> Node_6;
Node_11 -> Node_15;
}

