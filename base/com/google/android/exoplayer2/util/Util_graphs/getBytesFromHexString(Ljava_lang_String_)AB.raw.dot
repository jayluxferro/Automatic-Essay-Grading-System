digraph "CFG forcom.google.android.exoplayer2.util.Util.getBytesFromHexString(Ljava\/lang\/String;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r5 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0002: INVOKE  (r3 I:int) = (r6 I:java.lang.String A[D('hexString' java.lang.String)]) java.lang.String.length():int type: VIRTUAL \l0x0006: ARITH  (r3 I:int) = (r3 I:int) \/ (2 int) \l0x0008: NEW_ARRAY  (r0 I:byte[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[] A[D('data' byte[])]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r3 I:?[int, byte, short, char])  \-\> B:4:0x002b \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: ARITH  (r2 I:int) = (r1 I:int A[D('i' int)]) * (2 int) \l0x0010: INVOKE  (r3 I:char) = \l  (r6 I:java.lang.String A[D('hexString' java.lang.String)])\l  (r2 I:int A[D('stringOffset' int)])\l java.lang.String.charAt(int):char type: VIRTUAL \l0x0014: INVOKE  (r3 I:int) = (r3 I:char), (r5 I:int) java.lang.Character.digit(char, int):int type: STATIC \l0x0018: ARITH  (r3 I:int) = (r3 I:int) \<\< (4 int) \l0x001a: ARITH  (r4 I:int) = (r2 I:int A[D('stringOffset' int)]) + (1 int) \l0x001c: INVOKE  (r4 I:char) = \l  (r6 I:java.lang.String A[D('hexString' java.lang.String)])\l  (r4 I:int)\l java.lang.String.charAt(int):char type: VIRTUAL \l0x0020: INVOKE  (r4 I:int) = (r4 I:char), (r5 I:int) java.lang.Character.digit(char, int):int type: STATIC \l0x0024: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0025: CAST  (r3 I:byte) = (byte) (r3 I:int) \l0x0026: APUT  \l  (r0 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l  (r3 I:byte A[IMMUTABLE_TYPE])\l \l0x0028: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002b|0x002b: RETURN  (r0 I:byte[] A[D('data' byte[])]) \l}"];
MethodNode[shape=record,label="{public static byte[] com.google.android.exoplayer2.util.Util.getBytesFromHexString((r6 I:java.lang.String A[D('hexString' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0010\-0x002b: r2 'stringOffset' int\l  0x000a\-0x002b: r0 'data' byte[]\l  0x000b\-0x002b: r1 'i' int\l  ?\-0x002b: r6 'hexString' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

