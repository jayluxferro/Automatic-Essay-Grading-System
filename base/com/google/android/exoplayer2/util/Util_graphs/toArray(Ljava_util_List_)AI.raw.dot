digraph "CFG forcom.google.android.exoplayer2.util.Util.toArray(Ljava\/util\/List;)[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('list' java.util.List\<java.lang.Integer\>)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r1 I:int[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INVOKE  (r2 I:int) = \l  (r4 I:java.util.List A[D('list' java.util.List\<java.lang.Integer\>)])\l java.util.List.size():int type: INTERFACE \l0x0008: NEW_ARRAY  (r1 I:int[]) = (r2 I:int A[D('length' int), IMMUTABLE_TYPE]) type: int[] \l0x000a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char] A[D('length' int)])  \-\> B:2:0x0003 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: INVOKE  (r3 I:java.lang.Object) = \l  (r4 I:java.util.List A[D('list' java.util.List\<java.lang.Integer\>)])\l  (r0 I:int A[D('i' int)])\l java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0011: CHECK_CAST  (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:?[OBJECT, ARRAY]) \l0x0013: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0017: APUT  \l  (r1 I:?[int, float][] A[D('intArray' int[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r3 I:?[int, float])\l \l0x0019: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
MethodNode[shape=record,label="{public static int[] com.google.android.exoplayer2.util.Util.toArray((r4 I:java.util.List\<java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000b\-0x001b: r0 'i' int\l  0x000a\-0x001b: r1 'intArray' int[]\l  0x0008\-0x001b: r2 'length' int\l  0x0000\-0x001b: r4 'list' java.util.List\<java.lang.Integer\>\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List, \<, Ljava\/lang\/Integer;, \>;)[I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_2;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_4;
}

