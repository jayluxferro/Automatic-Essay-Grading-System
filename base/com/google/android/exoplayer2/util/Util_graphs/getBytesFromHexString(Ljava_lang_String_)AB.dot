digraph "CFG forcom.google.android.exoplayer2.util.Util.getBytesFromHexString(Ljava\/lang\/String;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|byte[] r0 = new byte[(r6.length() \/ 2)]\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|LOOP_START\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:0:0x0000, B:3:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:3:0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|if (r1 \>= r0.length) goto L_0x002b\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|LOOP_END\lLOOP:0: B:1:0x000b\-\>B:3:0x000e\l|int r2 = r1 * 2\lr0[r1] = (byte) ((java.lang.Character.digit(r6.charAt(r2), 16) \<\< 4) + java.lang.Character.digit(r6.charAt(r2 + 1), 16))\lint r1 = r1 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x002b|RETURN\l|return r0\l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static byte[] com.google.android.exoplayer2.util.Util.getBytesFromHexString((r6v0 'hexString' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_1;
Node_5 -> Node_4;
}

