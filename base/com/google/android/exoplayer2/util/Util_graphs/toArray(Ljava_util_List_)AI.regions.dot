digraph "CFG forcom.google.android.exoplayer2.util.Util.toArray(Ljava\/util\/List;)[I" {
subgraph cluster_Region_1082208367 {
label = "R(1:(2:(1:1)|(3:2|(1:4)|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_408788440 {
label = "R(2:(1:1)|(3:2|(1:4)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1391100634 {
label = "IF [B:0:0x0000] THEN: R(1:1) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 == null) goto L_0x0002\l}"];
subgraph cluster_Region_1633878533 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1723613947 {
label = "R(3:2|(1:4)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|int int r2 = r4.size()\lint[] int[] r1 = new int[r2]\lint r0 = 0\l}"];
subgraph cluster_LoopRegion_154516914 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:2:0x0004, B:4:0x000d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000b\-\>B:4:0x000d\l|if (r0 \< r2) goto L_0x000d\l}"];
subgraph cluster_Region_749423693 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|LOOP_END\lLOOP:0: B:3:0x000b\-\>B:4:0x000d\l|r1[r0] = r4.get(r0).intValue()\lr0++\l}"];
}
}
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
}
}
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0003|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static int[] com.google.android.exoplayer2.util.Util.toArray((r4v0 'list' java.util.List\<java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List, \<, Ljava\/lang\/Integer;, \>;)[I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_3;
Node_5 -> Node_6;
}

