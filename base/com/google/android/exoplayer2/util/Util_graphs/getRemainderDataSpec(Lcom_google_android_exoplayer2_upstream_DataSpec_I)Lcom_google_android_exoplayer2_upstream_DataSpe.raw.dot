digraph "CFG forcom.google.android.exoplayer2.util.Util.getRemainderDataSpec(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;I)Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[long, double]) = (\-1 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bytesLoaded' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  \l  (r8 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r0 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.length long \l0x0007: CMP_L  (r0 I:int) = (r0 I:long), (r4 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.upstream.DataSpec) =  com.google.android.exoplayer2.upstream.DataSpec \l0x000d: IGET  (r1 I:android.net.Uri) = \l  (r8 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.uri android.net.Uri \l0x000f: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.position long \l0x0011: CAST  (r6 I:long) = (long) (r9 I:int A[D('bytesLoaded' int)]) \l0x0012: ARITH  (r2 I:long) = (r2 I:long) + (r6 I:long) \l0x0013: IGET  (r6 I:java.lang.String) = \l  (r8 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.key java.lang.String \l0x0015: IGET  (r7 I:int) = \l  (r8 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.flags int \l0x0017: INVOKE  \l  (r0 I:com.google.android.exoplayer2.upstream.DataSpec)\l  (r1 I:android.net.Uri)\l  (r2 I:long)\l  (r4 I:long A[D('remainingLength' long)])\l  (r6 I:java.lang.String)\l  (r7 I:int)\l com.google.android.exoplayer2.upstream.DataSpec.\<init\>(android.net.Uri, long, long, java.lang.String, int):void type: DIRECT \l0x001a: MOVE  (r8 I:?[OBJECT, ARRAY] A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IGET  (r0 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.length long \l0x001e: CAST  (r2 I:long) = (long) (r9 I:int A[D('bytesLoaded' int)]) \l0x001f: ARITH  (r4 I:long) = (r0 I:long) \- (r2 I:long) \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.upstream.DataSpec com.google.android.exoplayer2.util.Util.getRemainderDataSpec((r8 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('bytesLoaded' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0004: r8 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\l  0x000b\-0x001c: r4 'remainingLength' long\l  0x0005\-0x0021: r8 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\l  ?\-0x0021: r9 'bytesLoaded' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_2;
Node_6 -> Node_5;
}

