digraph "CFG forcom.google.android.exoplayer2.util.UriUtil.removeDotSegments(Ljava\/lang\/StringBuilder;II)Ljava\/lang\/String;" {
subgraph cluster_Region_727144885 {
label = "R(1:(2:(1:38)|(4:(1:5)|6|(2:(1:9)(1:(1:17)(1:18))|(1:14)(1:(3:25|(1:27)(1:29)|28)(1:30)))|39))) | DECL_VAR: int nextSegmentStart, int removeFrom\l";
node [shape=record,color=blue];
subgraph cluster_Region_715621628 {
label = "R(2:(1:38)|(4:(1:5)|6|(2:(1:9)(1:(1:17)(1:18))|(1:14)(1:(3:25|(1:27)(1:29)|28)(1:30)))|39))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1783380624 {
label = "IF [B:1:0x0004] THEN: R(1:38) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r10 \>= r11) goto L_0x0006\l}"];
subgraph cluster_Region_384923046 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r9.toString()\l}"];
}
}
subgraph cluster_Region_1945736082 {
label = "R(4:(1:5)|6|(2:(1:9)(1:(1:17)(1:18))|(1:14)(1:(3:25|(1:27)(1:29)|28)(1:30)))|39)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_133831740 {
label = "IF [B:4:0x000f] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r9.charAt(r10) == '\/') goto L_0x0011\l}"];
subgraph cluster_Region_292350043 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|r10++\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0013|PHI: r10 \l  PHI: (r10v1 'offset' int) = (r10v0 'offset' int), (r10v2 'offset' int) binds: [B:4:0x000f, B:5:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|int r4 = r10\lint r0 = r10\l}"];
subgraph cluster_LoopRegion_1114925678 {
label = "LOOP:0: (2:(1:9)(1:(1:17)(1:18))|(1:14)(1:(3:25|(1:27)(1:29)|28)(1:30)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|LOOP_START\lPHI: r0 r4 r11 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:6:0x0013, B:32:0x0015] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'segmentStart' int) = (r4v0 'segmentStart' int), (r4v2 'segmentStart' int) binds: [B:6:0x0013, B:32:0x0015] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 'limit' int) = (r11v0 'limit' int), (r11v2 'limit' int) binds: [B:6:0x0013, B:32:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x0015\-\>B:32:0x0015\l|if (r0 \<= r11) goto L_0x0017\l}"];
subgraph cluster_Region_444586076 {
label = "R(2:(1:9)(1:(1:17)(1:18))|(1:14)(1:(3:25|(1:27)(1:29)|28)(1:30)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_859487126 {
label = "IF [B:8:0x0017] THEN: R(1:9) ELSE: R(1:(1:17)(1:18))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0017|if (r0 == r11) goto L_0x0019\l}"];
subgraph cluster_Region_1538914925 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0019|r1 = r0\l}"];
}
subgraph cluster_Region_129942256 {
label = "R(1:(1:17)(1:18)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1272522905 {
label = "IF [B:16:0x0030] THEN: R(1:17) ELSE: R(1:18) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0030|if (r9.charAt(r0) == '\/') goto L_0x0032\l}"];
subgraph cluster_Region_706682006 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0032|int r1 = r0 + 1\l}"];
}
subgraph cluster_Region_1606023466 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0035|r0++\l}"];
}
}
}
}
subgraph cluster_IfRegion_22249579 {
label = "IF [B:11:0x001c, B:13:0x0022] THEN: R(1:14) ELSE: R(1:(3:25|(1:27)(1:29)|28)(1:30))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001c|if (r0 == (r4 + 1)) goto L_0x001e\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|ADDED_TO_REGION\l|if (r9.charAt(r4) == '.') goto L_0x0024\l}"];
subgraph cluster_Region_1049224912 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0024|r9.delete(r4, r1)\lr11 \-= r1 \- r4\lr0 = r4\l}"];
}
subgraph cluster_Region_1358050759 {
label = "R(1:(3:25|(1:27)(1:29)|28)(1:30)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_428752032 {
label = "IF [B:20:0x003a, B:22:0x0040, B:24:0x0048] THEN: R(3:25|(1:27)(1:29)|28) ELSE: R(1:30) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x003a|if (r0 == (r4 + 2)) goto L_0x003c\l}"];
Node_22 [shape=record,label="{22\:\ 0x0040|ADDED_TO_REGION\l|if (r9.charAt(r4) == '.') goto L_0x0042\l}"];
Node_24 [shape=record,label="{24\:\ 0x0048|ADDED_TO_REGION\l|if (r9.charAt(r4 + 1) == '.') goto L_0x004a\l}"];
subgraph cluster_Region_206128924 {
label = "R(3:25|(1:27)(1:29)|28)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x004a|int int r2 = r9.lastIndexOf(\"\/\", r4 \- 2) + 1\l}"];
subgraph cluster_IfRegion_1285547080 {
label = "IF [B:26:0x0054] THEN: R(1:27) ELSE: R(1:29)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0054|if (r2 \> r10) goto L_0x0056\l}"];
subgraph cluster_Region_1482753316 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0056|r3 = r2\l}"];
}
subgraph cluster_Region_1518236497 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0060|r3 = r10\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x0057|PHI: r3 \l  PHI: (r3v1 'removeFrom' int) = (r3v0 'removeFrom' int), (r3v2 'removeFrom' int) binds: [B:29:0x0060, B:27:0x0056] A[DONT_GENERATE, DONT_INLINE]\l|r9.delete(r3, r1)\lr11 \-= r1 \- r3\lr4 = r2\lr0 = r2\l}"];
}
subgraph cluster_Region_1934265676 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0062|r0++\lr4 = r0\l}"];
}
}
}
}
}
}
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return r9.toString()\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001a|PHI: r1 \l  PHI: (r1v1 'nextSegmentStart' int) = (r1v0 'nextSegmentStart' int), (r1v2 'nextSegmentStart' int) binds: [B:17:0x0032, B:9:0x0019] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001e}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002c}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0038}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x003c}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0042}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0066}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0015|LOOP_END\lSYNTHETIC\lPHI: r0 r4 r11 \l  PHI: (r0v2 'i' int) = (r0v3 'i' int), (r0v4 'i' int), (r0v5 'i' int), (r0v6 'i' int) binds: [B:35:0x0015, B:37:0x0015, B:36:0x0015, B:34:0x0015] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 'segmentStart' int) = (r4v1 'segmentStart' int), (r4v3 'segmentStart' int), (r4v4 'segmentStart' int), (r4v1 'segmentStart' int) binds: [B:35:0x0015, B:37:0x0015, B:36:0x0015, B:34:0x0015] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v2 'limit' int) = (r11v1 'limit' int), (r11v1 'limit' int), (r11v3 'limit' int), (r11v4 'limit' int) binds: [B:35:0x0015, B:37:0x0015, B:36:0x0015, B:34:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x0015\-\>B:32:0x0015\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0066|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0015|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0015|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0015|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0015|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static java.lang.String com.google.android.exoplayer2.util.UriUtil.removeDotSegments((r9v0 'uri' java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'offset' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'limit' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_33[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_15[style=dashed];
Node_9 -> Node_10;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_10;
Node_18 -> Node_35;
Node_11 -> Node_12;
Node_11 -> Node_19[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_19[style=dashed];
Node_14 -> Node_34;
Node_20 -> Node_21;
Node_20 -> Node_30[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_30[style=dashed];
Node_24 -> Node_25;
Node_24 -> Node_30[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_29[style=dashed];
Node_27 -> Node_28;
Node_29 -> Node_28;
Node_28 -> Node_36;
Node_30 -> Node_37;
Node_0 -> Node_1;
Node_2 -> Node_38;
Node_3 -> Node_4;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_31 -> Node_39;
Node_32 -> Node_7;
Node_33 -> Node_31;
Node_34 -> Node_32;
Node_35 -> Node_32;
Node_36 -> Node_32;
Node_37 -> Node_32;
}

