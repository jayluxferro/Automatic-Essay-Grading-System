digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImpl.\<init\>([Lcom\/google\/android\/exoplayer2\/Renderer;Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelector;Lcom\/google\/android\/exoplayer2\/LoadControl;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r9 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"ExoPlayerImpl\" \l0x0007: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0009: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000c: CONST_STR  (r4 I:java.lang.String) =  \"Init ExoPlayerLib\/2.4.2 [\" \l0x000e: INVOKE  (r3 I:java.lang.StringBuilder) = (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0012: SGET  (r4 I:java.lang.String) =  com.google.android.exoplayer2.util.Util.DEVICE_DEBUG_INFO java.lang.String \l0x0014: INVOKE  (r3 I:java.lang.StringBuilder) = (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0018: CONST_STR  (r4 I:java.lang.String) =  \"]\" \l0x001a: INVOKE  (r3 I:java.lang.StringBuilder) = (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0022: INVOKE  (r0 I:java.lang.String), (r3 I:java.lang.String) android.util.Log.i(java.lang.String, java.lang.String):int type: STATIC \l0x0025: ARRAY_LENGTH  (r0 I:int) = \l  (r10 I:?[] A[D('renderers' com.google.android.exoplayer2.Renderer[])])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|0x0026: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x009b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0028|0x0028: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|0x0029: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x002c: INVOKE  (r0 I:java.lang.Object) = \l  (r10 I:java.lang.Object A[D('renderers' com.google.android.exoplayer2.Renderer[])])\l com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0030: CHECK_CAST  (r0 I:com.google.android.exoplayer2.Renderer[]) = (com.google.android.exoplayer2.Renderer[]) (r0 I:?[OBJECT, ARRAY]) \l0x0032: IPUT  \l  (r0 I:com.google.android.exoplayer2.Renderer[])\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.renderers com.google.android.exoplayer2.Renderer[] \l0x0034: INVOKE  (r0 I:java.lang.Object) = \l  (r11 I:java.lang.Object A[D('trackSelector' com.google.android.exoplayer2.trackselection.TrackSelector)])\l com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0038: CHECK_CAST  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelector) = (com.google.android.exoplayer2.trackselection.TrackSelector) (r0 I:?[OBJECT, ARRAY]) \l0x003a: IPUT  \l  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelector)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.trackSelector com.google.android.exoplayer2.trackselection.TrackSelector \l0x003c: IPUT  \l  (r2 I:boolean)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.playWhenReady boolean \l0x003e: IPUT  \l  (r1 I:int)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.playbackState int \l0x0040: NEW_INSTANCE  (r0 I:java.util.concurrent.CopyOnWriteArraySet) =  java.util.concurrent.CopyOnWriteArraySet \l0x0042: INVOKE  (r0 I:java.util.concurrent.CopyOnWriteArraySet) java.util.concurrent.CopyOnWriteArraySet.\<init\>():void type: DIRECT \l0x0045: IPUT  \l  (r0 I:java.util.concurrent.CopyOnWriteArraySet\<com.google.android.exoplayer2.ExoPlayer$EventListener\>)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.listeners java.util.concurrent.CopyOnWriteArraySet \l0x0047: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray) =  com.google.android.exoplayer2.trackselection.TrackSelectionArray \l0x0049: ARRAY_LENGTH  (r1 I:int) = \l  (r10 I:?[] A[D('renderers' com.google.android.exoplayer2.Renderer[])])\l \l0x004a: NEW_ARRAY  (r1 I:com.google.android.exoplayer2.trackselection.TrackSelection[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.trackselection.TrackSelection[] \l0x004c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray)\l  (r1 I:com.google.android.exoplayer2.trackselection.TrackSelection[])\l com.google.android.exoplayer2.trackselection.TrackSelectionArray.\<init\>(com.google.android.exoplayer2.trackselection.TrackSelection[]):void type: DIRECT \l0x004f: IPUT  \l  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.emptyTrackSelections com.google.android.exoplayer2.trackselection.TrackSelectionArray \l0x0051: SGET  (r0 I:com.google.android.exoplayer2.Timeline) =  com.google.android.exoplayer2.Timeline.EMPTY com.google.android.exoplayer2.Timeline \l0x0053: IPUT  \l  (r0 I:com.google.android.exoplayer2.Timeline)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.timeline com.google.android.exoplayer2.Timeline \l0x0055: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.Timeline$Window) =  com.google.android.exoplayer2.Timeline$Window \l0x0057: INVOKE  (r0 I:com.google.android.exoplayer2.Timeline$Window) com.google.android.exoplayer2.Timeline.Window.\<init\>():void type: DIRECT \l0x005a: IPUT  \l  (r0 I:com.google.android.exoplayer2.Timeline$Window)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.window com.google.android.exoplayer2.Timeline$Window \l0x005c: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.Timeline$Period) =  com.google.android.exoplayer2.Timeline$Period \l0x005e: INVOKE  (r0 I:com.google.android.exoplayer2.Timeline$Period) com.google.android.exoplayer2.Timeline.Period.\<init\>():void type: DIRECT \l0x0061: IPUT  \l  (r0 I:com.google.android.exoplayer2.Timeline$Period)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.period com.google.android.exoplayer2.Timeline$Period \l0x0063: SGET  (r0 I:com.google.android.exoplayer2.source.TrackGroupArray) =  com.google.android.exoplayer2.source.TrackGroupArray.EMPTY com.google.android.exoplayer2.source.TrackGroupArray \l0x0065: IPUT  \l  (r0 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.trackGroups com.google.android.exoplayer2.source.TrackGroupArray \l0x0067: IGET  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray) = (r9 I:com.google.android.exoplayer2.ExoPlayerImpl) com.google.android.exoplayer2.ExoPlayerImpl.emptyTrackSelections com.google.android.exoplayer2.trackselection.TrackSelectionArray \l0x0069: IPUT  \l  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.trackSelections com.google.android.exoplayer2.trackselection.TrackSelectionArray \l0x006b: SGET  (r0 I:com.google.android.exoplayer2.PlaybackParameters) =  com.google.android.exoplayer2.PlaybackParameters.DEFAULT com.google.android.exoplayer2.PlaybackParameters \l0x006d: IPUT  \l  (r0 I:com.google.android.exoplayer2.PlaybackParameters)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.playbackParameters com.google.android.exoplayer2.PlaybackParameters \l0x006f: INVOKE  (r0 I:android.os.Looper) =  android.os.Looper.myLooper():android.os.Looper type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0073|0x0073: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x009d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0075|0x0075: INVOKE  (r8 I:android.os.Looper) =  android.os.Looper.myLooper():android.os.Looper type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0079|0x0079: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.ExoPlayerImpl$1) =  com.google.android.exoplayer2.ExoPlayerImpl$1 \l0x007b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImpl$1)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l  (r8 I:android.os.Looper A[D('eventLooper' android.os.Looper)])\l com.google.android.exoplayer2.ExoPlayerImpl.1.\<init\>(com.google.android.exoplayer2.ExoPlayerImpl, android.os.Looper):void type: DIRECT \l0x007e: IPUT  \l  (r0 I:android.os.Handler)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.eventHandler android.os.Handler \l0x0080: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo) =  com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo \l0x0082: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0084: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo)\l  (r2 I:int)\l  (r4 I:long)\l com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfo.\<init\>(int, long):void type: DIRECT \l0x0087: IPUT  \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.playbackInfo com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo \l0x0089: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal) =  com.google.android.exoplayer2.ExoPlayerImplInternal \l0x008b: IGET  (r4 I:boolean) = (r9 I:com.google.android.exoplayer2.ExoPlayerImpl) com.google.android.exoplayer2.ExoPlayerImpl.playWhenReady boolean \l0x008d: IGET  (r5 I:android.os.Handler) = (r9 I:com.google.android.exoplayer2.ExoPlayerImpl) com.google.android.exoplayer2.ExoPlayerImpl.eventHandler android.os.Handler \l0x008f: IGET  (r6 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo) = (r9 I:com.google.android.exoplayer2.ExoPlayerImpl) com.google.android.exoplayer2.ExoPlayerImpl.playbackInfo com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo \l0x0091: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY] A[D('renderers' com.google.android.exoplayer2.Renderer[])])\l \l0x0092: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r11 I:?[OBJECT, ARRAY] A[D('trackSelector' com.google.android.exoplayer2.trackselection.TrackSelector)])\l \l0x0093: MOVE  (r3 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY] A[D('loadControl' com.google.android.exoplayer2.LoadControl)])\l \l0x0094: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0095: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l  (r1 I:com.google.android.exoplayer2.Renderer[])\l  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelector)\l  (r3 I:com.google.android.exoplayer2.LoadControl)\l  (r4 I:boolean)\l  (r5 I:android.os.Handler)\l  (r6 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo)\l  (r7 I:com.google.android.exoplayer2.ExoPlayer)\l com.google.android.exoplayer2.ExoPlayerImplInternal.\<init\>(com.google.android.exoplayer2.Renderer[], com.google.android.exoplayer2.trackselection.TrackSelector, com.google.android.exoplayer2.LoadControl, boolean, android.os.Handler, com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo, com.google.android.exoplayer2.ExoPlayer):void type: DIRECT \l0x0098: IPUT  \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal)\l  (r9 I:com.google.android.exoplayer2.ExoPlayerImpl)\l com.google.android.exoplayer2.ExoPlayerImpl.internalPlayer com.google.android.exoplayer2.ExoPlayerImplInternal \l}"];
Node_7 [shape=record,label="{7\:\ 0x009a|0x009a: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x009b|0x009b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x009d|0x009d: INVOKE  (r8 I:android.os.Looper) =  android.os.Looper.getMainLooper():android.os.Looper type: STATIC \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.ExoPlayerImpl.\<init\>((r9 'this' I:com.google.android.exoplayer2.ExoPlayerImpl A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.android.exoplayer2.Renderer[] A[D('renderers' com.google.android.exoplayer2.Renderer[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.google.android.exoplayer2.trackselection.TrackSelector A[D('trackSelector' com.google.android.exoplayer2.trackselection.TrackSelector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:com.google.android.exoplayer2.LoadControl A[D('loadControl' com.google.android.exoplayer2.LoadControl), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0079\-0x009b: r8 'eventLooper' android.os.Looper\l  ?\-0x00a1: r10 'renderers' com.google.android.exoplayer2.Renderer[]\l  ?\-0x00a1: r11 'trackSelector' com.google.android.exoplayer2.trackselection.TrackSelector\l  ?\-0x00a1: r12 'loadControl' com.google.android.exoplayer2.LoadControl\lAnnotation[BUILD, android.annotation.SuppressLint, \{value=[HandlerLeak]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_3;
Node_9 -> Node_6;
}

