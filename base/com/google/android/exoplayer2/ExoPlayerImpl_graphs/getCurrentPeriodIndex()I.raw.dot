digraph "CFG forcom.google.android.exoplayer2.ExoPlayerImpl.getCurrentPeriodIndex()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.exoplayer2.Timeline) = (r1 I:com.google.android.exoplayer2.ExoPlayerImpl) com.google.android.exoplayer2.ExoPlayerImpl.timeline com.google.android.exoplayer2.Timeline \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:com.google.android.exoplayer2.Timeline) com.google.android.exoplayer2.Timeline.isEmpty():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:int) = (r1 I:com.google.android.exoplayer2.ExoPlayerImpl) com.google.android.exoplayer2.ExoPlayerImpl.pendingSeekAcks int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r0 I:int) = (r1 I:com.google.android.exoplayer2.ExoPlayerImpl) com.google.android.exoplayer2.ExoPlayerImpl.maskingPeriodIndex int \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: RETURN  (r0 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo) = (r1 I:com.google.android.exoplayer2.ExoPlayerImpl) com.google.android.exoplayer2.ExoPlayerImpl.playbackInfo com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo \l0x0011: IGET  (r0 I:int) = \l  (r0 I:com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfo)\l com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfo.periodIndex int \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.ExoPlayerImpl.getCurrentPeriodIndex((r1 'this' I:com.google.android.exoplayer2.ExoPlayerImpl A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_5;
}

