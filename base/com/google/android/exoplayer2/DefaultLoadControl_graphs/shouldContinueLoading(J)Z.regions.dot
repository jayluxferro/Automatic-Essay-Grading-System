digraph "CFG forcom.google.android.exoplayer2.DefaultLoadControl.shouldContinueLoading(J)Z" {
subgraph cluster_Region_1389419328 {
label = "R(7:0|(1:2)(1:18)|3|(1:19)|9|(1:(1:15)(1:20))|17) | DECL_VAR: boolean targetBufferSizeReached\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r3 = true\lint int r0 = getBufferTimeState(r8)\l}"];
subgraph cluster_IfRegion_5503029 {
label = "IF [B:1:0x000e] THEN: R(1:2) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r7.allocator.getTotalBytesAllocated() \>= r7.targetBufferSize) goto L_0x0010\l}"];
subgraph cluster_Region_1719471695 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0010|r1 = true\l}"];
}
subgraph cluster_Region_841206160 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0034|r1 = false\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0011|PHI: r1 \l  PHI: (r1v1 'targetBufferSizeReached' boolean) = (r1v0 'targetBufferSizeReached' boolean), (r1v2 'targetBufferSizeReached' boolean) binds: [B:18:0x0034, B:2:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|boolean boolean r2 = r7.isBuffering\l}"];
subgraph cluster_IfRegion_608985428 {
label = "IF [B:4:0x0014, B:5:0x0016, B:7:0x001a, B:8:0x001c] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014|ADDED_TO_REGION\l|if (r0 != 2) goto L_0x0016\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|ADDED_TO_REGION\l|if (r0 != 1) goto L_0x0036\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|ADDED_TO_REGION\l|if (r7.isBuffering == false) goto L_0x0036\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|ADDED_TO_REGION\l|if (r1 == true) goto L_0x0036\l}"];
subgraph cluster_Region_1530362256 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0036|r3 = false\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x001e|PHI: r3 \l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v8 boolean), (r3v0 boolean) binds: [B:4:0x0014, B:19:0x0036, B:8:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|r7.isBuffering = r3\l}"];
subgraph cluster_IfRegion_115740905 {
label = "IF [B:10:0x0022, B:12:0x0026] THEN: R(1:(1:15)(1:20)) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0022|ADDED_TO_REGION\l|if (r7.priorityTaskManager == null) goto L_0x0031\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|ADDED_TO_REGION\l|if (r7.isBuffering == r2) goto L_0x0031\l}"];
subgraph cluster_Region_1619533856 {
label = "R(1:(1:15)(1:20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1133404000 {
label = "IF [B:14:0x002a] THEN: R(1:15) ELSE: R(1:20)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002a|if (r7.isBuffering == true) goto L_0x002c\l}"];
subgraph cluster_Region_395503614 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002c|r7.priorityTaskManager.add(0)\l}"];
}
subgraph cluster_Region_136263529 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0038|r7.priorityTaskManager.remove(0)\l}"];
}
}
}
}
Node_17 [shape=record,label="{17\:\ 0x0033|RETURN\l|return r7.isBuffering\l}"];
}
Node_6 [shape=record,color=red,label="{6\:\ 0x0018}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0024}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0028}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0031}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.DefaultLoadControl.shouldContinueLoading((r7v0 'this' com.google.android.exoplayer2.DefaultLoadControl A[IMMUTABLE_TYPE, THIS]), (r8v0 'bufferedDurationUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18[style=dashed];
Node_2 -> Node_3;
Node_18 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_19;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_19;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_19;
Node_19 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_20[style=dashed];
Node_15 -> Node_16;
Node_20 -> Node_16;
Node_6 -> Node_7;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_16 -> Node_17;
}

