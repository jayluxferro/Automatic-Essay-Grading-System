digraph "CFG forcom.google.android.exoplayer2.DefaultLoadControl.onTracksSelected([Lcom\/google\/android\/exoplayer2\/Renderer;Lcom\/google\/android\/exoplayer2\/source\/TrackGroupArray;Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelectionArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.targetBufferSize = 0\lr0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:0:0x0000, B:6:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:6:0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r0 \>= r4.length) goto L_0x001f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r6.get(r0) == null) goto L_0x001c\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|r3.targetBufferSize = r3.targetBufferSize + com.google.android.exoplayer2.util.Util.getDefaultBufferSize(r4[r0].getTrackType())\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|LOOP_END\lLOOP:0: B:1:0x0004\-\>B:6:0x001c\l|int r0 = r0 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|r3.allocator.setTargetBufferSize(r3.targetBufferSize)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.DefaultLoadControl.onTracksSelected((r3v0 'this' com.google.android.exoplayer2.DefaultLoadControl A[IMMUTABLE_TYPE, THIS]), (r4v0 'renderers' com.google.android.exoplayer2.Renderer[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'trackGroups' com.google.android.exoplayer2.source.TrackGroupArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'trackSelections' com.google.android.exoplayer2.trackselection.TrackSelectionArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_10;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_9 -> Node_7;
Node_10 -> Node_6;
Node_11 -> Node_6;
}

