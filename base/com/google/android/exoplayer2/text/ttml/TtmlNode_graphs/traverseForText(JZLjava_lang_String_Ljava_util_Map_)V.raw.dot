digraph "CFG forcom.google.android.exoplayer2.text.ttml.TtmlNode.traverseForText(JZLjava\/lang\/String;Ljava\/util\/Map;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:java.util.HashMap\<java.lang.String, java.lang.Integer\>) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.nodeStartsByRegion java.util.HashMap \l0x0002: INVOKE  (r1 I:java.util.HashMap) java.util.HashMap.clear():void type: VIRTUAL \l0x0005: IGET  (r1 I:java.util.HashMap\<java.lang.String, java.lang.Integer\>) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.nodeEndsByRegion java.util.HashMap \l0x0007: INVOKE  (r1 I:java.util.HashMap) java.util.HashMap.clear():void type: VIRTUAL \l0x000a: IGET  (r5 I:java.lang.String) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.regionId java.lang.String \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"\" \l0x000e: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r5 I:java.lang.Object A[D('resolvedRegionId' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: MOVE  (r5 I:?[OBJECT, ARRAY] A[D('resolvedRegionId' java.lang.String)]) = \l  (r13 I:?[OBJECT, ARRAY] A[D('inheritedRegion' java.lang.String)])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IGET  (r1 I:boolean) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.isTextNode boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0025 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('descendsPNode' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: INVOKE  (r1 I:android.text.SpannableStringBuilder) = \l  (r5 I:java.lang.String A[D('resolvedRegionId' java.lang.String)])\l  (r14 I:java.util.Map A[D('regionOutputs' java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\>)])\l com.google.android.exoplayer2.text.ttml.TtmlNode.getRegionOutput(java.lang.String, java.util.Map):android.text.SpannableStringBuilder type: STATIC \l0x001f: IGET  (r2 I:java.lang.String) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.text java.lang.String \l0x0021: INVOKE  \l  (r1 I:android.text.SpannableStringBuilder)\l  (r2 I:java.lang.CharSequence)\l android.text.SpannableStringBuilder.append(java.lang.CharSequence):android.text.SpannableStringBuilder type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: CONST_STR  (r1 I:java.lang.String) =  \"br\" \l0x0027: IGET  (r2 I:java.lang.String) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.tag java.lang.String \l0x0029: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003b \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('descendsPNode' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003b \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: INVOKE  (r1 I:android.text.SpannableStringBuilder) = \l  (r5 I:java.lang.String A[D('resolvedRegionId' java.lang.String)])\l  (r14 I:java.util.Map A[D('regionOutputs' java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\>)])\l com.google.android.exoplayer2.text.ttml.TtmlNode.getRegionOutput(java.lang.String, java.util.Map):android.text.SpannableStringBuilder type: STATIC \l0x0035: CONST  (r2 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0037: INVOKE  (r1 I:android.text.SpannableStringBuilder), (r2 I:char) android.text.SpannableStringBuilder.append(char):android.text.SpannableStringBuilder type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: CONST_STR  (r1 I:java.lang.String) =  \"metadata\" \l0x003d: IGET  (r2 I:java.lang.String) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.tag java.lang.String \l0x003f: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|0x0045: INVOKE  (r1 I:boolean) = \l  (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode)\l  (r10 I:long A[D('timeUs' long)])\l com.google.android.exoplayer2.text.ttml.TtmlNode.isActive(long):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0049|0x0049: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|0x004b: CONST_STR  (r1 I:java.lang.String) =  \"p\" \l0x004d: IGET  (r2 I:java.lang.String) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.tag java.lang.String \l0x004f: INVOKE  (r8 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l0x0053: INVOKE  (r1 I:java.util.Set) = \l  (r14 I:java.util.Map A[D('regionOutputs' java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\>)])\l java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0057: INVOKE  (r2 I:java.util.Iterator) = (r1 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x005b|0x005b: INVOKE  (r1 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|0x005f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x007f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0061|0x0061: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0065: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) \l0x0067: IGET  (r3 I:java.util.HashMap\<java.lang.String, java.lang.Integer\>) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.nodeStartsByRegion java.util.HashMap \l0x0069: INVOKE  (r4 I:java.lang.Object) = \l  (r0 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.String, android.text.SpannableStringBuilder\>)])\l java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x006d: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.String, android.text.SpannableStringBuilder\>)])\l java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0071: CHECK_CAST  (r1 I:android.text.SpannableStringBuilder) = (android.text.SpannableStringBuilder) (r1 I:?[OBJECT, ARRAY]) \l0x0073: INVOKE  (r1 I:int) = (r1 I:android.text.SpannableStringBuilder) android.text.SpannableStringBuilder.length():int type: VIRTUAL \l0x0077: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x007b: INVOKE  \l  (r3 I:java.util.HashMap)\l  (r4 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x007f|0x007f: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0080|0x0080: INVOKE  (r1 I:int) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.getChildCount():int type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0084|0x0084: IF  (r7 I:?[int, byte, short, char] A[D('i' int)]) \>= (r1 I:?[int, byte, short, char])  \-\> B:29:0x0099 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0086|0x0086: INVOKE  (r1 I:com.google.android.exoplayer2.text.ttml.TtmlNode) = \l  (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode)\l  (r7 I:int A[D('i' int)])\l com.google.android.exoplayer2.text.ttml.TtmlNode.getChild(int):com.google.android.exoplayer2.text.ttml.TtmlNode type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x008a|0x008a: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('descendsPNode' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x008e \l}"];
Node_25 [shape=record,label="{25\:\ 0x008c|0x008c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isPNode' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0097 \l}"];
Node_26 [shape=record,label="{26\:\ 0x008e|0x008e: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x008f|0x008f: MOVE  (r2 I:?[long, double]) = (r10 I:?[long, double] A[D('timeUs' long)]) \l0x0090: MOVE  (r6 I:?[OBJECT, ARRAY]) = \l  (r14 I:?[OBJECT, ARRAY] A[D('regionOutputs' java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\>)])\l \l0x0091: INVOKE  \l  (r1 I:com.google.android.exoplayer2.text.ttml.TtmlNode)\l  (r2 I:long)\l  (r4 I:boolean)\l  (r5 I:java.lang.String A[D('resolvedRegionId' java.lang.String)])\l  (r6 I:java.util.Map)\l com.google.android.exoplayer2.text.ttml.TtmlNode.traverseForText(long, boolean, java.lang.String, java.util.Map):void type: DIRECT \l0x0094: ARITH  (r7 I:int A[D('i' int)]) = (r7 I:int A[D('i' int)]) + (1 int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0097|0x0097: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_29 [shape=record,label="{29\:\ 0x0099|0x0099: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isPNode' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00a2 \l}"];
Node_30 [shape=record,label="{30\:\ 0x009b|0x009b: INVOKE  (r1 I:android.text.SpannableStringBuilder) = \l  (r5 I:java.lang.String A[D('resolvedRegionId' java.lang.String)])\l  (r14 I:java.util.Map A[D('regionOutputs' java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\>)])\l com.google.android.exoplayer2.text.ttml.TtmlNode.getRegionOutput(java.lang.String, java.util.Map):android.text.SpannableStringBuilder type: STATIC \l0x009f: INVOKE  (r1 I:android.text.SpannableStringBuilder) com.google.android.exoplayer2.text.ttml.TtmlRenderUtil.endParagraph(android.text.SpannableStringBuilder):void type: STATIC \l}"];
Node_31 [shape=record,label="{31\:\ 0x00a2|0x00a2: INVOKE  (r1 I:java.util.Set) = \l  (r14 I:java.util.Map A[D('regionOutputs' java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\>)])\l java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x00a6: INVOKE  (r2 I:java.util.Iterator) = (r1 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_32 [shape=record,label="{32\:\ 0x00aa|0x00aa: INVOKE  (r1 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_33 [shape=record,label="{33\:\ 0x00ae|0x00ae: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_34 [shape=record,label="{34\:\ 0x00b0|0x00b0: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00b4: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) \l0x00b6: IGET  (r3 I:java.util.HashMap\<java.lang.String, java.lang.Integer\>) = (r9 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.nodeEndsByRegion java.util.HashMap \l0x00b8: INVOKE  (r4 I:java.lang.Object) = \l  (r0 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.String, android.text.SpannableStringBuilder\>)])\l java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x00bc: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.String, android.text.SpannableStringBuilder\>)])\l java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x00c0: CHECK_CAST  (r1 I:android.text.SpannableStringBuilder) = (android.text.SpannableStringBuilder) (r1 I:?[OBJECT, ARRAY]) \l0x00c2: INVOKE  (r1 I:int) = (r1 I:android.text.SpannableStringBuilder) android.text.SpannableStringBuilder.length():int type: VIRTUAL \l0x00c6: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x00ca: INVOKE  \l  (r3 I:java.util.HashMap)\l  (r4 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.text.ttml.TtmlNode.traverseForText((r9 'this' I:com.google.android.exoplayer2.text.ttml.TtmlNode A[IMMUTABLE_TYPE, THIS]), (r10 I:long A[D('timeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[D('descendsPNode' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.String A[D('inheritedRegion' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0067\-0x007f: r0 'entry' java.util.Map$Entry\<java.lang.String, android.text.SpannableStringBuilder\>\l  0x00b6\-0x00cd: r0 'entry' java.util.Map$Entry\<java.lang.String, android.text.SpannableStringBuilder\>\l  0x000c\-0x00cd: r5 'resolvedRegionId' java.lang.String\l  0x0080\-0x00cd: r7 'i' int\l  0x0053\-0x00cd: r8 'isPNode' boolean\l  ?\-0x00cd: r10 'timeUs' long\l  ?\-0x00cd: r12 'descendsPNode' boolean\l  ?\-0x00cd: r13 'inheritedRegion' java.lang.String\l  0x0000\-0x00cd: r14 'regionOutputs' java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\>\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(JZ, Ljava\/lang\/String;, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Landroid\/text\/SpannableStringBuilder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_7;
Node_12 -> Node_13;
Node_13 -> Node_7;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_7;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_17;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_29;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_21;
Node_28 -> Node_27;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_7;
Node_33 -> Node_34[style=dashed];
Node_34 -> Node_32;
}

