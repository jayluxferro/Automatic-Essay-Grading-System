digraph "CFG forcom.google.android.exoplayer2.text.ttml.TtmlNode.buildTextNode(Ljava\/lang\/String;)Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlNode;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.text.ttml.TtmlNode) =  com.google.android.exoplayer2.text.ttml.TtmlNode \l0x0008: INVOKE  (r3 I:java.lang.String) = (r11 I:java.lang.String A[D('text' java.lang.String)]) com.google.android.exoplayer2.text.ttml.TtmlRenderUtil.applyTextElementSpacePolicy(java.lang.String):java.lang.String type: STATIC \l0x000c: CONST_STR  (r10 I:java.lang.String) =  \"\" \l0x000e: MOVE  (r6 I:?[long, double]) = (r4 I:?[long, double]) \l0x000f: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0010: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0011: INVOKE  \l  (r1 I:com.google.android.exoplayer2.text.ttml.TtmlNode)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:com.google.android.exoplayer2.text.ttml.TtmlStyle)\l  (r9 I:java.lang.String[])\l  (r10 I:java.lang.String)\l com.google.android.exoplayer2.text.ttml.TtmlNode.\<init\>(java.lang.String, java.lang.String, long, long, com.google.android.exoplayer2.text.ttml.TtmlStyle, java.lang.String[], java.lang.String):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: RETURN  (r1 I:com.google.android.exoplayer2.text.ttml.TtmlNode) \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.text.ttml.TtmlNode com.google.android.exoplayer2.text.ttml.TtmlNode.buildTextNode((r11 I:java.lang.String A[D('text' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0014: r11 'text' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

