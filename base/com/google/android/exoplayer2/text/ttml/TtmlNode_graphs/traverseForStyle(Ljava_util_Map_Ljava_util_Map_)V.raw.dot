digraph "CFG forcom.google.android.exoplayer2.text.ttml.TtmlNode.traverseForStyle(Ljava\/util\/Map;Ljava\/util\/Map;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r4 I:java.util.HashMap\<java.lang.String, java.lang.Integer\>) = (r7 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.nodeEndsByRegion java.util.HashMap \l0x0002: INVOKE  (r4 I:java.util.Set) = (r4 I:java.util.HashMap) java.util.HashMap.entrySet():java.util.Set type: VIRTUAL \l0x0006: INVOKE  (r6 I:java.util.Iterator) = (r4 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: INVOKE  (r4 I:boolean) = (r6 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0056 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: INVOKE  (r0 I:java.lang.Object) = (r6 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.String, java.lang.Integer\>)])\l java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x001a: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x001c: IGET  (r4 I:java.util.HashMap\<java.lang.String, java.lang.Integer\>) = (r7 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.nodeStartsByRegion java.util.HashMap \l0x001e: INVOKE  (r4 I:boolean) = \l  (r4 I:java.util.HashMap)\l  (r2 I:java.lang.Object A[D('regionId' java.lang.String)])\l java.util.HashMap.containsKey(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0054 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: IGET  (r4 I:java.util.HashMap\<java.lang.String, java.lang.Integer\>) = (r7 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.nodeStartsByRegion java.util.HashMap \l0x0026: INVOKE  (r4 I:java.lang.Object) = \l  (r4 I:java.util.HashMap)\l  (r2 I:java.lang.Object A[D('regionId' java.lang.String)])\l java.util.HashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x002a: CHECK_CAST  (r4 I:java.lang.Integer) = (java.lang.Integer) (r4 I:?[OBJECT, ARRAY]) \l0x002c: INVOKE  (r3 I:int) = (r4 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: INVOKE  (r4 I:java.lang.Object) = \l  (r9 I:java.util.Map A[D('regionOutputs' java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\>)])\l  (r2 I:java.lang.Object A[D('regionId' java.lang.String)])\l java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0034: CHECK_CAST  (r4 I:android.text.SpannableStringBuilder) = (android.text.SpannableStringBuilder) (r4 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  (r5 I:java.lang.Object) = \l  (r0 I:java.util.Map$Entry A[D('entry' java.util.Map$Entry\<java.lang.String, java.lang.Integer\>)])\l java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x003a: CHECK_CAST  (r5 I:java.lang.Integer) = (java.lang.Integer) (r5 I:?[OBJECT, ARRAY]) \l0x003c: INVOKE  (r5 I:int) = (r5 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0040: INVOKE  \l  (r7 I:com.google.android.exoplayer2.text.ttml.TtmlNode)\l  (r8 I:java.util.Map A[D('globalStyles' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\>)])\l  (r4 I:android.text.SpannableStringBuilder)\l  (r3 I:int A[D('start' int)])\l  (r5 I:int)\l com.google.android.exoplayer2.text.ttml.TtmlNode.applyStyleToOutput(java.util.Map, android.text.SpannableStringBuilder, int, int):void type: DIRECT \l0x0043: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|0x0044: INVOKE  (r4 I:int) = (r7 I:com.google.android.exoplayer2.text.ttml.TtmlNode) com.google.android.exoplayer2.text.ttml.TtmlNode.getChildCount():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0048|0x0048: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r4 I:?[int, byte, short, char])  \-\> B:1:0x000a \l}"];
Node_9 [shape=record,label="{9\:\ 0x004a|0x004a: INVOKE  (r4 I:com.google.android.exoplayer2.text.ttml.TtmlNode) = \l  (r7 I:com.google.android.exoplayer2.text.ttml.TtmlNode)\l  (r1 I:int A[D('i' int)])\l com.google.android.exoplayer2.text.ttml.TtmlNode.getChild(int):com.google.android.exoplayer2.text.ttml.TtmlNode type: VIRTUAL \l0x004e: INVOKE  \l  (r4 I:com.google.android.exoplayer2.text.ttml.TtmlNode)\l  (r8 I:java.util.Map A[D('globalStyles' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\>)])\l  (r9 I:java.util.Map A[D('regionOutputs' java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\>)])\l com.google.android.exoplayer2.text.ttml.TtmlNode.traverseForStyle(java.util.Map, java.util.Map):void type: DIRECT \l0x0051: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0054|0x0054: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('start' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0056|0x0056: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.text.ttml.TtmlNode.traverseForStyle((r7 'this' I:com.google.android.exoplayer2.text.ttml.TtmlNode A[IMMUTABLE_TYPE, THIS]), (r8 I:java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0044\-0x0054: r1 'i' int\l  0x0030\-0x0054: r3 'start' int\l  0x0016\-0x0056: r0 'entry' java.util.Map$Entry\<java.lang.String, java.lang.Integer\>\l  0x001c\-0x0056: r2 'regionId' java.lang.String\l  0x0000\-0x0056: r8 'globalStyles' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\>\l  0x0000\-0x0056: r9 'regionOutputs' java.util.Map\<java.lang.String, android.text.SpannableStringBuilder\>\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlStyle;, \>;, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Landroid\/text\/SpannableStringBuilder;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_7;
Node_10 -> Node_6;
}

