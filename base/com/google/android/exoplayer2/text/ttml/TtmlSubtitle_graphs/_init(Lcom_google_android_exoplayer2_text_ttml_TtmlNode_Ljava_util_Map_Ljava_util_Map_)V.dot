digraph "CFG forcom.google.android.exoplayer2.text.ttml.TtmlSubtitle.\<init\>(Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlNode;Ljava\/util\/Map;Ljava\/util\/Map;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.root = r2\lr1.regionMap = r4\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r3 == null) goto L_0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|java.util.Map r0 = java.util.Collections.unmodifiableMap(r3)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|PHI: r0 \l  PHI: (r0v1 java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\>) = (r0v0 java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\>), (r0v3 java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\>) binds: [B:5:0x0016, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|r1.globalStyles = r0\lr1.eventTimesUs = r2.getEventTimesUs()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|java.util.Map r0 = java.util.Collections.emptyMap()\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.text.ttml.TtmlSubtitle.\<init\>((r1v0 'this' com.google.android.exoplayer2.text.ttml.TtmlSubtitle A[IMMUTABLE_TYPE, THIS]), (r2v0 'root' com.google.android.exoplayer2.text.ttml.TtmlNode A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'globalStyles' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'regionMap' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlRegion\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlNode;, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlStyle;, \>;, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlRegion;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

