digraph "CFG forcom.google.android.exoplayer2.text.ttml.TtmlStyle.setItalic(Z)Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlStyle;" {
subgraph cluster_Region_1970224858 {
label = "R(6:0|(1:2)(1:7)|3|(1:8)|5|6) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 1\l}"];
subgraph cluster_IfRegion_1367133554 {
label = "IF [B:1:0x0004] THEN: R(1:2) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3.inheritableStyle == null) goto L_0x0006\l}"];
subgraph cluster_Region_1394878063 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r0 = true\l}"];
}
subgraph cluster_Region_1693292104 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x000f|r0 = false\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0007|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v1 boolean), (r0v3 boolean) binds: [B:7:0x000f, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r0)\l}"];
subgraph cluster_IfRegion_176254798 {
label = "IF [B:4:0x000a] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r4 == false) goto L_0x0011\l}"];
subgraph cluster_Region_1942371621 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0011|r1 = 0\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x000c|PHI: r1 \l  PHI: (r1v2 int) = (r1v0 int), (r1v1 int) binds: [B:4:0x000a, B:8:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r3.italic = r1\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|RETURN\l|return r3\l}"];
}
MethodNode[shape=record,label="{public com.google.android.exoplayer2.text.ttml.TtmlStyle com.google.android.exoplayer2.text.ttml.TtmlStyle.setItalic((r3v0 'this' com.google.android.exoplayer2.text.ttml.TtmlStyle A[IMMUTABLE_TYPE, THIS]), (r4v0 'italic' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_7 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_8 -> Node_5;
Node_5 -> Node_6;
}

