digraph "CFG forcom.google.android.exoplayer2.text.ttml.TtmlDecoder.parseHeader(Lorg\/xmlpull\/v1\/XmlPullParser;Ljava\/util\/Map;Ljava\/util\/Map;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r9 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x0003: CONST_STR  (r4 I:java.lang.String) =  \"style\" \l0x0005: INVOKE  (r4 I:boolean) = \l  (r9 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l  (r4 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isStartTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004a \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: CONST_STR  (r4 I:java.lang.String) =  \"style\" \l0x000d: INVOKE  (r1 I:java.lang.String) = \l  (r9 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l  (r4 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.getAttributeValue(org.xmlpull.v1.XmlPullParser, java.lang.String):java.lang.String type: STATIC \l0x0011: NEW_INSTANCE  (r4 I:com.google.android.exoplayer2.text.ttml.TtmlStyle) =  com.google.android.exoplayer2.text.ttml.TtmlStyle \l0x0013: INVOKE  (r4 I:com.google.android.exoplayer2.text.ttml.TtmlStyle) com.google.android.exoplayer2.text.ttml.TtmlStyle.\<init\>():void type: DIRECT \l0x0016: INVOKE  (r2 I:com.google.android.exoplayer2.text.ttml.TtmlStyle) = \l  (r8 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder)\l  (r9 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l  (r4 I:com.google.android.exoplayer2.text.ttml.TtmlStyle)\l com.google.android.exoplayer2.text.ttml.TtmlDecoder.parseStyleAttributes(org.xmlpull.v1.XmlPullParser, com.google.android.exoplayer2.text.ttml.TtmlStyle):com.google.android.exoplayer2.text.ttml.TtmlStyle type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parentStyleId' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0034 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: INVOKE  (r6 I:java.lang.String[]) = \l  (r8 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder)\l  (r1 I:java.lang.String A[D('parentStyleId' java.lang.String)])\l com.google.android.exoplayer2.text.ttml.TtmlDecoder.parseStyleIds(java.lang.String):java.lang.String[] type: DIRECT \l0x0020: ARRAY_LENGTH  (r7 I:int) = (r6 I:?[]) \l0x0021: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0022: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: IF  (r5 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:7:0x0034 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: AGET  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x0027: INVOKE  (r4 I:java.lang.Object) = \l  (r10 I:java.util.Map A[D('globalStyles' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\>)])\l  (r0 I:java.lang.Object A[D('id' java.lang.String)])\l java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x002b: CHECK_CAST  (r4 I:com.google.android.exoplayer2.text.ttml.TtmlStyle) = (com.google.android.exoplayer2.text.ttml.TtmlStyle) (r4 I:?[OBJECT, ARRAY]) \l0x002d: INVOKE  \l  (r2 I:com.google.android.exoplayer2.text.ttml.TtmlStyle A[D('style' com.google.android.exoplayer2.text.ttml.TtmlStyle)])\l  (r4 I:com.google.android.exoplayer2.text.ttml.TtmlStyle)\l com.google.android.exoplayer2.text.ttml.TtmlStyle.chain(com.google.android.exoplayer2.text.ttml.TtmlStyle):com.google.android.exoplayer2.text.ttml.TtmlStyle type: VIRTUAL \l0x0030: ARITH  (r4 I:int) = (r5 I:int) + (1 int) \l0x0032: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: INVOKE  (r4 I:java.lang.String) = \l  (r2 I:com.google.android.exoplayer2.text.ttml.TtmlStyle A[D('style' com.google.android.exoplayer2.text.ttml.TtmlStyle)])\l com.google.android.exoplayer2.text.ttml.TtmlStyle.getId():java.lang.String type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|0x0038: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0041 \l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|0x003a: INVOKE  (r4 I:java.lang.String) = \l  (r2 I:com.google.android.exoplayer2.text.ttml.TtmlStyle A[D('style' com.google.android.exoplayer2.text.ttml.TtmlStyle)])\l com.google.android.exoplayer2.text.ttml.TtmlStyle.getId():java.lang.String type: VIRTUAL \l0x003e: INVOKE  \l  (r10 I:java.util.Map A[D('globalStyles' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\>)])\l  (r4 I:java.lang.Object)\l  (r2 I:java.lang.Object A[D('style' com.google.android.exoplayer2.text.ttml.TtmlStyle)])\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: CONST_STR  (r4 I:java.lang.String) =  \"head\" \l0x0043: INVOKE  (r4 I:boolean) = \l  (r9 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l  (r4 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isEndTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:0:0x0000 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|0x0049: RETURN  \l  (r10 I:java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\> A[D('globalStyles' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\>)])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|0x004a: CONST_STR  (r4 I:java.lang.String) =  \"region\" \l0x004c: INVOKE  (r4 I:boolean) = \l  (r9 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l  (r4 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isStartTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0050|0x0050: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0041 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0052|0x0052: INVOKE  (r3 I:com.google.android.exoplayer2.text.ttml.TtmlRegion) = \l  (r8 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder)\l  (r9 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l com.google.android.exoplayer2.text.ttml.TtmlDecoder.parseRegionAttributes(org.xmlpull.v1.XmlPullParser):com.google.android.exoplayer2.text.ttml.TtmlRegion type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0056|0x0056: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ttmlRegion' com.google.android.exoplayer2.text.ttml.TtmlRegion)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0041 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0058|0x0058: IGET  (r4 I:java.lang.String) = \l  (r3 I:com.google.android.exoplayer2.text.ttml.TtmlRegion A[D('ttmlRegion' com.google.android.exoplayer2.text.ttml.TtmlRegion)])\l com.google.android.exoplayer2.text.ttml.TtmlRegion.id java.lang.String \l0x005a: INVOKE  \l  (r11 I:java.util.Map A[D('globalRegions' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlRegion\>)])\l  (r4 I:java.lang.Object)\l  (r3 I:java.lang.Object A[D('ttmlRegion' com.google.android.exoplayer2.text.ttml.TtmlRegion)])\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
MethodNode[shape=record,label="{private java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\> com.google.android.exoplayer2.text.ttml.TtmlDecoder.parseHeader((r8 'this' I:com.google.android.exoplayer2.text.ttml.TtmlDecoder A[IMMUTABLE_TYPE, THIS]), (r9 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlRegion\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0027\-0x0034: r0 'id' java.lang.String\l  0x0011\-0x0041: r1 'parentStyleId' java.lang.String\l  0x001a\-0x0041: r2 'style' com.google.android.exoplayer2.text.ttml.TtmlStyle\l  0x0056\-0x005d: r3 'ttmlRegion' com.google.android.exoplayer2.text.ttml.TtmlRegion\l  ?\-0x005d: r9 'xmlParser' org.xmlpull.v1.XmlPullParser\l  0x0000\-0x005d: r10 'globalStyles' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlStyle\>\l  0x0000\-0x005d: r11 'globalRegions' java.util.Map\<java.lang.String, com.google.android.exoplayer2.text.ttml.TtmlRegion\>\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/xmlpull\/v1\/XmlPullParser;, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlStyle;, \>;, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlRegion;, \>;), Ljava\/util\/Map, \<, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlStyle;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_0;
Node_11 -> Node_12[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_10;
Node_14 -> Node_15[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_10;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_10;
}

