digraph "CFG forcom.google.android.exoplayer2.text.ttml.TtmlDecoder.parseFontSize(Ljava\/lang\/String;Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlStyle;)V" {
subgraph cluster_Region_2007692873 {
label = "R(3:0|(1:2)(1:(1:12)(1:14))|(2:(5:5|6|7|25|26)|(1:30))) | DECL_VAR: java.util.regex.Matcher matcher\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String[] java.lang.String[] r0 = r8.split(\"s+\")\l}"];
subgraph cluster_IfRegion_857662550 {
label = "IF [B:1:0x000a] THEN: R(1:2) ELSE: R(1:(1:12)(1:14))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r0.length == 1) goto L_0x000c\l}"];
subgraph cluster_Region_2116000478 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|java.util.regex.Matcher r1 = FONT_SIZE.matcher(r8)\l}"];
}
subgraph cluster_Region_1660527739 {
label = "R(1:(1:12)(1:14)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_713844790 {
label = "IF [B:11:0x0047] THEN: R(1:12) ELSE: R(1:14) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0047|if (r0.length == 2) goto L_0x0049\l}"];
subgraph cluster_Region_450842668 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0049|java.util.regex.Matcher r1 = FONT_SIZE.matcher(r0[1])\landroid.util.Log.w(TAG, \"Multiple values in fontSize attribute. Picking the second value for vertical font size and ignoring the first.\")\l}"];
}
subgraph cluster_Region_988280192 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0078|throw new com.google.android.exoplayer2.text.SubtitleDecoderException(\"Invalid number of entries for fontSize: \" + r0.length + \".\")\l}"];
}
}
}
}
subgraph cluster_Region_676335685 {
label = "R(2:(5:5|6|7|25|26)|(1:30))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_286291529 {
label = "IF [B:4:0x0016] THEN: R(5:5|6|7|25|26) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r1.matches() == true) goto L_0x0018\l}"];
subgraph cluster_Region_924553459 {
label = "R(5:5|6|7|25|26)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|java.lang.String java.lang.String r2 = r1.group(3)\lchar r3 = 65535\l}"];
subgraph cluster_SwitchRegion_1470494732 {
label = "Switch: 3, default: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0021|switch(r2.hashCode()) \{\l    case 37: goto L_0x008d;\l    case 3240: goto L_0x0083;\l    case 3592: goto L_0x0079;\l    default: goto L_0x0024;\l\}\l}"];
subgraph cluster_Region_1167873713 {
label = "R(2:(2:23|1)|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1391156365 {
label = "IF [B:22:0x0093] THEN: R(2:23|1) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0093|if (r2.equals(\"%\") == true) goto L_0x0095\l}"];
subgraph cluster_Region_1263383205 {
label = "R(2:23|1)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0095|r3 = 2\l}"];
Node_InsnContainer_1785325573 [shape=record,label="{|break\l}"];
}
}
Node_InsnContainer_1108549429 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1344506624 {
label = "R(2:(2:20|1)|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1344333156 {
label = "IF [B:19:0x0089] THEN: R(2:20|1) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0089|if (r2.equals(\"em\") == true) goto L_0x008b\l}"];
subgraph cluster_Region_479294829 {
label = "R(2:20|1)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x008b|r3 = 1\l}"];
Node_InsnContainer_1999464043 [shape=record,label="{|break\l}"];
}
}
Node_InsnContainer_1386320203 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_143771293 {
label = "R(2:(2:17|1)|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_995584923 {
label = "IF [B:16:0x007f] THEN: R(2:17|1) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x007f|if (r2.equals(\"px\") == true) goto L_0x0081\l}"];
subgraph cluster_Region_471523031 {
label = "R(2:17|1)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0081|r3 = 0\l}"];
Node_InsnContainer_1143351044 [shape=record,label="{|break\l}"];
}
}
Node_InsnContainer_1487146965 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_SwitchRegion_197928328 {
label = "Switch: 3, default: R(1:9)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0024|PHI: r3 \l  PHI: (r3v12 char) = (r3v8 char), (r3v8 char), (r3v9 char), (r3v8 char), (r3v10 char), (r3v8 char), (r3v11 char) binds: [B:6:0x0021, B:22:0x0093, B:23:0x0095, B:19:0x0089, B:20:0x008b, B:16:0x007f, B:17:0x0081] A[DONT_GENERATE, DONT_INLINE]\l|switch(r3) \{\l    case 0: goto L_0x0097;\l    case 1: goto L_0x00aa;\l    case 2: goto L_0x00ae;\l    default: goto L_0x0027;\l\}\l}"];
subgraph cluster_Region_114423363 {
label = "R(2:24|1)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0097|r9.setFontSizeUnit(1)\l}"];
Node_InsnContainer_7499050 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1964598311 {
label = "R(2:27|1)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x00aa|r9.setFontSizeUnit(2)\l}"];
Node_InsnContainer_221972470 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_72453116 {
label = "R(2:28|1)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00ae|r9.setFontSizeUnit(3)\l}"];
Node_InsnContainer_391753057 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1137348965 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0045|throw new com.google.android.exoplayer2.text.SubtitleDecoderException(\"Invalid unit for fontSize: '\" + r2 + \"'.\")\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x009a|r9.setFontSize(java.lang.Float.valueOf(r1.group(1)).floatValue())\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a9|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_694143985 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00d0|throw new com.google.android.exoplayer2.text.SubtitleDecoderException(\"Invalid expression for fontSize: '\" + r8 + \"'.\")\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0012|PHI: r1 \l  PHI: (r1v1 'matcher' java.util.regex.Matcher) = (r1v0 'matcher' java.util.regex.Matcher), (r1v2 'matcher' java.util.regex.Matcher) binds: [B:12:0x0049, B:2:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0027}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0046}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0059}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0079}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0083}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x008d}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x00b2}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.text.ttml.TtmlDecoder.parseFontSize((r8v0 'expression' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'out' com.google.android.exoplayer2.text.ttml.TtmlStyle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.text.SubtitleDecoderException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10[style=dashed];
Node_2 -> Node_3;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_29[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_15;
Node_6 -> Node_18;
Node_6 -> Node_21;
Node_22 -> Node_7[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_7;
Node_19 -> Node_7[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_7;
Node_16 -> Node_7[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_24;
Node_7 -> Node_27;
Node_7 -> Node_28;
Node_24 -> Node_25;
Node_27 -> Node_25;
Node_28 -> Node_25;
Node_25 -> Node_26;
Node_3 -> Node_4;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_21 -> Node_22;
Node_29 -> Node_30;
}

