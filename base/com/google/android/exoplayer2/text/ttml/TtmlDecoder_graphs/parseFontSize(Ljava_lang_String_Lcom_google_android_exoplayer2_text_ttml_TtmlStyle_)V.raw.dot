digraph "CFG forcom.google.android.exoplayer2.text.ttml.TtmlDecoder.parseFontSize(Ljava\/lang\/String;Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlStyle;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0001: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0002: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: CONST_STR  (r3 I:java.lang.String) =  \"s+\" \l0x0005: INVOKE  (r0 I:java.lang.String[]) = \l  (r8 I:java.lang.String A[D('expression' java.lang.String)])\l  (r3 I:java.lang.String)\l java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL \l0x0009: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[] A[D('expressions' java.lang.String[])]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0046 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: SGET  (r3 I:java.util.regex.Pattern) =  com.google.android.exoplayer2.text.ttml.TtmlDecoder.FONT_SIZE java.util.regex.Pattern \l0x000e: INVOKE  (r1 I:java.util.regex.Matcher) = \l  (r3 I:java.util.regex.Pattern)\l  (r8 I:java.lang.CharSequence A[D('expression' java.lang.String)])\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r3 I:boolean) = \l  (r1 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l java.util.regex.Matcher.matches():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00b2 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  (r2 I:java.lang.String) = \l  (r1 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r7 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l0x001c: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x001d: INVOKE  (r6 I:int) = (r2 I:java.lang.String A[D('unit' java.lang.String)]) java.lang.String.hashCode():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: SWITCH  \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[37, 3240, 3592] t:[0x008d, 0x0083, 0x0079] \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2] t:[0x0097, 0x00aa, 0x00ae] \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.text.SubtitleDecoderException) =  com.google.android.exoplayer2.text.SubtitleDecoderException \l0x0029: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002b: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002e: CONST_STR  (r5 I:java.lang.String) =  \"Invalid unit for fontSize: '\" \l0x0030: INVOKE  (r4 I:java.lang.StringBuilder) = (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  (r4 I:java.lang.StringBuilder) = \l  (r4 I:java.lang.StringBuilder)\l  (r2 I:java.lang.String A[D('unit' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: CONST_STR  (r5 I:java.lang.String) =  \"'.\" \l0x003a: INVOKE  (r4 I:java.lang.StringBuilder) = (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003e: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0042: INVOKE  \l  (r3 I:com.google.android.exoplayer2.text.SubtitleDecoderException)\l  (r4 I:java.lang.String)\l com.google.android.exoplayer2.text.SubtitleDecoderException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|0x0045: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|0x0046: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[] A[D('expressions' java.lang.String[])]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0059 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|0x0049: SGET  (r3 I:java.util.regex.Pattern) =  com.google.android.exoplayer2.text.ttml.TtmlDecoder.FONT_SIZE java.util.regex.Pattern \l0x004b: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r0 I:?[OBJECT, ARRAY][] A[D('expressions' java.lang.String[])])\l  (r4 I:?[int, short, byte, char])\l \l0x004d: INVOKE  (r1 I:java.util.regex.Matcher) = \l  (r3 I:java.util.regex.Pattern)\l  (r6 I:java.lang.CharSequence)\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x0051: CONST_STR  (r3 I:java.lang.String) =  \"TtmlDecoder\" \l0x0053: CONST_STR  (r6 I:java.lang.String) =  \"Multiple values in fontSize attribute. Picking the second value for vertical font size and ignoring the first.\" \l0x0055: INVOKE  (r3 I:java.lang.String), (r6 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0059|0x0059: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.text.SubtitleDecoderException) =  com.google.android.exoplayer2.text.SubtitleDecoderException \l0x005b: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x005d: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0060: CONST_STR  (r5 I:java.lang.String) =  \"Invalid number of entries for fontSize: \" \l0x0062: INVOKE  (r4 I:java.lang.StringBuilder) = (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0066: ARRAY_LENGTH  (r5 I:int) = (r0 I:?[] A[D('expressions' java.lang.String[])]) \l0x0067: INVOKE  (r4 I:java.lang.StringBuilder) = (r4 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x006b: CONST_STR  (r5 I:java.lang.String) =  \".\" \l0x006d: INVOKE  (r4 I:java.lang.StringBuilder) = (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0071: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0075: INVOKE  \l  (r3 I:com.google.android.exoplayer2.text.SubtitleDecoderException)\l  (r4 I:java.lang.String)\l com.google.android.exoplayer2.text.SubtitleDecoderException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0078|0x0078: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0079|0x0079: CONST_STR  (r6 I:java.lang.String) =  \"px\" \l0x007b: INVOKE  (r6 I:boolean) = \l  (r2 I:java.lang.String A[D('unit' java.lang.String)])\l  (r6 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x007f|0x007f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0081|0x0081: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0083|0x0083: CONST_STR  (r6 I:java.lang.String) =  \"em\" \l0x0085: INVOKE  (r6 I:boolean) = \l  (r2 I:java.lang.String A[D('unit' java.lang.String)])\l  (r6 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0089|0x0089: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_20 [shape=record,label="{20\:\ 0x008b|0x008b: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x008d|0x008d: CONST_STR  (r6 I:java.lang.String) =  \"%\" \l0x008f: INVOKE  (r6 I:boolean) = \l  (r2 I:java.lang.String A[D('unit' java.lang.String)])\l  (r6 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0093|0x0093: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0095|0x0095: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x0097|0x0097: INVOKE  \l  (r9 I:com.google.android.exoplayer2.text.ttml.TtmlStyle A[D('out' com.google.android.exoplayer2.text.ttml.TtmlStyle)])\l  (r4 I:int)\l com.google.android.exoplayer2.text.ttml.TtmlStyle.setFontSizeUnit(int):com.google.android.exoplayer2.text.ttml.TtmlStyle type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x009a|0x009a: INVOKE  (r3 I:java.lang.String) = \l  (r1 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r4 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l0x009e: INVOKE  (r3 I:java.lang.Float) = (r3 I:java.lang.String) java.lang.Float.valueOf(java.lang.String):java.lang.Float type: STATIC \l0x00a2: INVOKE  (r3 I:float) = (r3 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x00a6: INVOKE  \l  (r9 I:com.google.android.exoplayer2.text.ttml.TtmlStyle A[D('out' com.google.android.exoplayer2.text.ttml.TtmlStyle)])\l  (r3 I:float)\l com.google.android.exoplayer2.text.ttml.TtmlStyle.setFontSize(float):com.google.android.exoplayer2.text.ttml.TtmlStyle type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a9|0x00a9: RETURN   \l}"];
Node_27 [shape=record,label="{27\:\ 0x00aa|0x00aa: INVOKE  \l  (r9 I:com.google.android.exoplayer2.text.ttml.TtmlStyle A[D('out' com.google.android.exoplayer2.text.ttml.TtmlStyle)])\l  (r5 I:int)\l com.google.android.exoplayer2.text.ttml.TtmlStyle.setFontSizeUnit(int):com.google.android.exoplayer2.text.ttml.TtmlStyle type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x00ae|0x00ae: INVOKE  \l  (r9 I:com.google.android.exoplayer2.text.ttml.TtmlStyle A[D('out' com.google.android.exoplayer2.text.ttml.TtmlStyle)])\l  (r7 I:int)\l com.google.android.exoplayer2.text.ttml.TtmlStyle.setFontSizeUnit(int):com.google.android.exoplayer2.text.ttml.TtmlStyle type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b2|0x00b2: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.text.SubtitleDecoderException) =  com.google.android.exoplayer2.text.SubtitleDecoderException \l0x00b4: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00b6: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00b9: CONST_STR  (r5 I:java.lang.String) =  \"Invalid expression for fontSize: '\" \l0x00bb: INVOKE  (r4 I:java.lang.StringBuilder) = (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00bf: INVOKE  (r4 I:java.lang.StringBuilder) = \l  (r4 I:java.lang.StringBuilder)\l  (r8 I:java.lang.String A[D('expression' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c3: CONST_STR  (r5 I:java.lang.String) =  \"'.\" \l0x00c5: INVOKE  (r4 I:java.lang.StringBuilder) = (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c9: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00cd: INVOKE  \l  (r3 I:com.google.android.exoplayer2.text.SubtitleDecoderException)\l  (r4 I:java.lang.String)\l com.google.android.exoplayer2.text.SubtitleDecoderException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_30 [shape=record,label="{30\:\ 0x00d0|0x00d0: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.text.ttml.TtmlDecoder.parseFontSize((r8 I:java.lang.String A[D('expression' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.google.android.exoplayer2.text.ttml.TtmlStyle A[D('out' com.google.android.exoplayer2.text.ttml.TtmlStyle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0012\-0x0046: r1 'matcher' java.util.regex.Matcher\l  0x001c\-0x0046: r2 'unit' java.lang.String\l  0x0051\-0x0059: r1 'matcher' java.util.regex.Matcher\l  0x0079\-0x00b2: r2 'unit' java.lang.String\l  0x0009\-0x00e9: r0 'expressions' java.lang.String[]\l  0x0079\-0x00e9: r1 'matcher' java.util.regex.Matcher\l  ?\-0x00e9: r8 'expression' java.lang.String\l  ?\-0x00e9: r9 'out' com.google.android.exoplayer2.text.ttml.TtmlStyle\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.text.SubtitleDecoderException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_29;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_15;
Node_6 -> Node_18;
Node_6 -> Node_21;
Node_7 -> Node_8;
Node_7 -> Node_24;
Node_7 -> Node_27;
Node_7 -> Node_28;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_3;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_7;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_7;
Node_18 -> Node_19;
Node_19 -> Node_7;
Node_19 -> Node_20[style=dashed];
Node_20 -> Node_7;
Node_21 -> Node_22;
Node_22 -> Node_7;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_7;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_25;
Node_28 -> Node_25;
Node_29 -> Node_30;
}

