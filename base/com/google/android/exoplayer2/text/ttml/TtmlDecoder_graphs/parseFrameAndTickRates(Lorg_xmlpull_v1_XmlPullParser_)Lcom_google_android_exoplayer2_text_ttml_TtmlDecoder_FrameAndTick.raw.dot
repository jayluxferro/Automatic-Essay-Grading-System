digraph "CFG forcom.google.android.exoplayer2.text.ttml.TtmlDecoder.parseFrameAndTickRates(Lorg\/xmlpull\/v1\/XmlPullParser;)Lcom\/google\/android\/exoplayer2\/text\/ttml\/TtmlDecoder$FrameAndTickRate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, short, byte, char]) = (30 ?[int, float, short, byte, char]) \l0x0002: CONST_STR  (r11 I:java.lang.String) =  \"http:\/\/www.w3.org\/ns\/ttml#parameter\" \l0x0004: CONST_STR  (r12 I:java.lang.String) =  \"frameRate\" \l0x0006: INVOKE  (r4 I:java.lang.String) = \l  (r14 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l  (r11 I:java.lang.String)\l  (r12 I:java.lang.String)\l org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('frameRateString' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r1 I:int A[D('frameRate' int)]) = \l  (r4 I:java.lang.String A[D('frameRateString' java.lang.String)])\l java.lang.Integer.parseInt(java.lang.String):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0012: CONST_STR  (r11 I:java.lang.String) =  \"http:\/\/www.w3.org\/ns\/ttml#parameter\" \l0x0014: CONST_STR  (r12 I:java.lang.String) =  \"frameRateMultiplier\" \l0x0016: INVOKE  (r3 I:java.lang.String) = \l  (r14 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l  (r11 I:java.lang.String)\l  (r12 I:java.lang.String)\l org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('frameRateMultiplierString' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0040 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: CONST_STR  (r11 I:java.lang.String) =  \" \" \l0x001e: INVOKE  (r6 I:java.lang.String[]) = \l  (r3 I:java.lang.String A[D('frameRateMultiplierString' java.lang.String)])\l  (r11 I:java.lang.String)\l java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL \l0x0022: ARRAY_LENGTH  (r11 I:int) = (r6 I:?[] A[D('parts' java.lang.String[])]) \l0x0023: CONST  (r12 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: NEW_INSTANCE  (r11 I:com.google.android.exoplayer2.text.SubtitleDecoderException) =  com.google.android.exoplayer2.text.SubtitleDecoderException \l0x0028: CONST_STR  (r12 I:java.lang.String) =  \"frameRateMultiplier doesn't have 2 parts\" \l0x002a: INVOKE  \l  (r11 I:com.google.android.exoplayer2.text.SubtitleDecoderException)\l  (r12 I:java.lang.String)\l com.google.android.exoplayer2.text.SubtitleDecoderException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: THROW  (r11 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: AGET  (r11 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][] A[D('parts' java.lang.String[])])\l  (r11 I:?[int, short, byte, char])\l \l0x0031: INVOKE  (r11 I:int) = (r11 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC \l0x0035: CAST  (r5 I:float) = (float) (r11 I:int) \l0x0036: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0037: AGET  (r11 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][] A[D('parts' java.lang.String[])])\l  (r11 I:?[int, short, byte, char])\l \l0x0039: INVOKE  (r11 I:int) = (r11 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC \l0x003d: CAST  (r0 I:float) = (float) (r11 I:int) \l0x003e: ARITH  (r2 I:float A[D('frameRateMultiplier' float)]) = (r5 I:float A[D('numerator' float)]) \/ (r0 I:float A[D('denominator' float)]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: SGET  (r11 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate) =  com.google.android.exoplayer2.text.ttml.TtmlDecoder.DEFAULT_FRAME_AND_TICK_RATE com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate \l0x0042: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate)\l com.google.android.exoplayer2.text.ttml.TtmlDecoder.FrameAndTickRate.subFrameRate int \l0x0044: CONST_STR  (r11 I:java.lang.String) =  \"http:\/\/www.w3.org\/ns\/ttml#parameter\" \l0x0046: CONST_STR  (r12 I:java.lang.String) =  \"subFrameRate\" \l0x0048: INVOKE  (r8 I:java.lang.String) = \l  (r14 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l  (r11 I:java.lang.String)\l  (r12 I:java.lang.String)\l org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x004c|0x004c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('subFrameRateString' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0052 \l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|0x004e: INVOKE  (r7 I:int A[D('subFrameRate' int)]) = \l  (r8 I:java.lang.String A[D('subFrameRateString' java.lang.String)])\l java.lang.Integer.parseInt(java.lang.String):int type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|0x0052: SGET  (r11 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate) =  com.google.android.exoplayer2.text.ttml.TtmlDecoder.DEFAULT_FRAME_AND_TICK_RATE com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate \l0x0054: IGET  (r9 I:int) = \l  (r11 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate)\l com.google.android.exoplayer2.text.ttml.TtmlDecoder.FrameAndTickRate.tickRate int \l0x0056: CONST_STR  (r11 I:java.lang.String) =  \"http:\/\/www.w3.org\/ns\/ttml#parameter\" \l0x0058: CONST_STR  (r12 I:java.lang.String) =  \"tickRate\" \l0x005a: INVOKE  (r10 I:java.lang.String) = \l  (r14 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser)])\l  (r11 I:java.lang.String)\l  (r12 I:java.lang.String)\l org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x005e|0x005e: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tickRateString' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0064 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0060|0x0060: INVOKE  (r9 I:int A[D('tickRate' int)]) = \l  (r10 I:java.lang.String A[D('tickRateString' java.lang.String)])\l java.lang.Integer.parseInt(java.lang.String):int type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: NEW_INSTANCE  (r11 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate) =  com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate \l0x0066: CAST  (r12 I:float) = (float) (r1 I:int A[D('frameRate' int)]) \l0x0067: ARITH  (r12 I:float) = (r12 I:float) * (r2 I:float A[D('frameRateMultiplier' float)]) \l0x0068: INVOKE  \l  (r11 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate)\l  (r12 I:float)\l  (r7 I:int A[D('subFrameRate' int)])\l  (r9 I:int A[D('tickRate' int)])\l com.google.android.exoplayer2.text.ttml.TtmlDecoder.FrameAndTickRate.\<init\>(float, int, int):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x006b|0x006b: RETURN  \l  (r11 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate)\l \l}"];
MethodNode[shape=record,label="{private com.google.android.exoplayer2.text.ttml.TtmlDecoder$FrameAndTickRate com.google.android.exoplayer2.text.ttml.TtmlDecoder.parseFrameAndTickRates((r13 'this' I:com.google.android.exoplayer2.text.ttml.TtmlDecoder A[IMMUTABLE_TYPE, THIS]), (r14 I:org.xmlpull.v1.XmlPullParser A[D('xmlParser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x003e\-0x0040: r0 'denominator' float\l  0x0036\-0x0040: r5 'numerator' float\l  0x0022\-0x0040: r6 'parts' java.lang.String[]\l  0x0002\-0x006b: r1 'frameRate' int\l  0x0012\-0x006b: r2 'frameRateMultiplier' float\l  0x001a\-0x006b: r3 'frameRateMultiplierString' java.lang.String\l  0x000a\-0x006b: r4 'frameRateString' java.lang.String\l  0x0044\-0x006b: r7 'subFrameRate' int\l  0x004c\-0x006b: r8 'subFrameRateString' java.lang.String\l  0x0056\-0x006b: r9 'tickRate' int\l  0x005e\-0x006b: r10 'tickRateString' java.lang.String\l  ?\-0x006b: r14 'xmlParser' org.xmlpull.v1.XmlPullParser\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.text.SubtitleDecoderException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

