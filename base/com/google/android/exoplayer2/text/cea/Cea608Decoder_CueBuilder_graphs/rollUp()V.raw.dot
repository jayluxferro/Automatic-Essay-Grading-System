digraph "CFG forcom.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.rollUp()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:java.util.List\<android.text.SpannableString\>) = \l  (r3 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.rolledUpCaptions java.util.List \l0x0002: INVOKE  (r2 I:android.text.SpannableString) = \l  (r3 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.buildSpannableString():android.text.SpannableString type: VIRTUAL \l0x0006: INVOKE  (r1 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0009: IGET  (r1 I:android.text.SpannableStringBuilder) = \l  (r3 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.captionStringBuilder android.text.SpannableStringBuilder \l0x000b: INVOKE  (r1 I:android.text.SpannableStringBuilder) android.text.SpannableStringBuilder.clear():void type: VIRTUAL \l0x000e: IGET  (r1 I:java.util.List\<android.text.style.CharacterStyle\>) = \l  (r3 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.preambleStyles java.util.List \l0x0010: INVOKE  (r1 I:java.util.List) java.util.List.clear():void type: INTERFACE \l0x0013: IGET  (r1 I:java.util.List\<com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder$CueStyle\>) = \l  (r3 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.midrowStyles java.util.List \l0x0015: INVOKE  (r1 I:java.util.List) java.util.List.clear():void type: INTERFACE \l0x0018: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0019: IPUT  \l  (r1 I:int)\l  (r3 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.underlineStartPosition int \l0x001b: IGET  (r1 I:int) = \l  (r3 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.captionRowCount int \l0x001d: IGET  (r2 I:int) = \l  (r3 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.row int \l0x001f: INVOKE  (r0 I:int) = (r1 I:int), (r2 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0023|0x0023: IGET  (r1 I:java.util.List\<android.text.SpannableString\>) = \l  (r3 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.rolledUpCaptions java.util.List \l0x0025: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0029|0x0029: IF  (r1 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char] A[D('numRows' int)])  \-\> B:4:0x0032 \l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|0x002b: IGET  (r1 I:java.util.List\<android.text.SpannableString\>) = \l  (r3 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.rolledUpCaptions java.util.List \l0x002d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002e: INVOKE  (r1 I:java.util.List), (r2 I:int) java.util.List.remove(int):java.lang.Object type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|0x0032: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.rollUp((r3 'this' I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0023\-0x0032: r0 'numRows' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

