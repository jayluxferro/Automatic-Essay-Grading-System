digraph "CFG forcom.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.build()Lcom\/google\/android\/exoplayer2\/text\/Cue;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r1 I:android.text.SpannableStringBuilder) =  android.text.SpannableStringBuilder \l0x0002: INVOKE  (r1 I:android.text.SpannableStringBuilder) android.text.SpannableStringBuilder.\<init\>():void type: DIRECT \l0x0005: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IGET  (r0 I:java.util.List\<android.text.SpannableString\>) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.rolledUpCaptions java.util.List \l0x0008: INVOKE  (r0 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r10 I:?[int, byte, short, char] A[D('i' int)]) \>= (r0 I:?[int, byte, short, char])  \-\> B:4:0x0021 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IGET  (r0 I:java.util.List\<android.text.SpannableString\>) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.rolledUpCaptions java.util.List \l0x0010: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r10 I:int A[D('i' int)]) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  \l  (r1 I:android.text.SpannableStringBuilder A[D('cueString' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.CharSequence)\l android.text.SpannableStringBuilder.append(java.lang.CharSequence):android.text.SpannableStringBuilder type: VIRTUAL \l0x0019: CONST  (r0 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x001b: INVOKE  \l  (r1 I:android.text.SpannableStringBuilder A[D('cueString' android.text.SpannableStringBuilder)])\l  (r0 I:char)\l android.text.SpannableStringBuilder.append(char):android.text.SpannableStringBuilder type: VIRTUAL \l0x001e: ARITH  (r10 I:int A[D('i' int)]) = (r10 I:int A[D('i' int)]) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: INVOKE  (r0 I:android.text.SpannableString) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.buildSpannableString():android.text.SpannableString type: VIRTUAL \l0x0025: INVOKE  \l  (r1 I:android.text.SpannableStringBuilder A[D('cueString' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.CharSequence)\l android.text.SpannableStringBuilder.append(java.lang.CharSequence):android.text.SpannableStringBuilder type: VIRTUAL \l0x0028: INVOKE  (r0 I:int) = \l  (r1 I:android.text.SpannableStringBuilder A[D('cueString' android.text.SpannableStringBuilder)])\l android.text.SpannableStringBuilder.length():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0030 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: RETURN  (r0 I:com.google.android.exoplayer2.text.Cue) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IGET  (r0 I:int) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.indent int \l0x0032: IGET  (r2 I:int) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.tabOffset int \l0x0034: ARITH  (r13 I:int) = (r0 I:int) + (r2 I:int) \l0x0036: ARITH  (r0 I:int) = (32 int) \- (r13 I:int A[D('startPadding' int)]) \l0x0038: INVOKE  (r2 I:int) = \l  (r1 I:android.text.SpannableStringBuilder A[D('cueString' android.text.SpannableStringBuilder)])\l android.text.SpannableStringBuilder.length():int type: VIRTUAL \l0x003c: ARITH  (r9 I:int) = (r0 I:int) \- (r2 I:int) \l0x003e: ARITH  (r12 I:int) = (r13 I:int A[D('startPadding' int)]) \- (r9 I:int A[D('endPadding' int)]) \l0x0040: IGET  (r0 I:int) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.captionMode int \l0x0042: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0043|0x0043: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|0x0045: INVOKE  (r0 I:int) = (r12 I:int A[D('startEndPaddingDelta' int)]) java.lang.Math.abs(int):int type: STATIC \l0x0049: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|0x004a: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:19:0x006b \l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|0x004c: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l0x004e: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|0x004f: IGET  (r0 I:int) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.captionMode int \l0x0051: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|0x0052: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0059 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|0x0054: IGET  (r0 I:int) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.row int \l0x0056: CONST  (r2 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0057|0x0057: IF  (r0 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:24:0x0094 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0059|0x0059: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x005a: IGET  (r0 I:int) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.row int \l0x005c: ARITH  (r11 I:int) = (r0 I:int) + (\-15 int) \l0x005e: ARITH  (r11 I:int A[D('line' int)]) = (r11 I:int A[D('line' int)]) + (\-2 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|0x0060: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.text.Cue) =  com.google.android.exoplayer2.text.Cue \l0x0062: SGET  (r2 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_NORMAL android.text.Layout$Alignment \l0x0064: CAST  (r3 I:float) = (float) (r11 I:int A[D('line' int)]) \l0x0065: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0066: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0067: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.Cue)\l  (r1 I:java.lang.CharSequence A[D('cueString' android.text.SpannableStringBuilder)])\l  (r2 I:android.text.Layout$Alignment)\l  (r3 I:float)\l  (r4 I:int)\l  (r5 I:int A[D('lineAnchor' int)])\l  (r6 I:float A[D('position' float)])\l  (r7 I:int A[D('positionAnchor' int)])\l  (r8 I:float)\l com.google.android.exoplayer2.text.Cue.\<init\>(java.lang.CharSequence, android.text.Layout$Alignment, float, int, int, float, int, float):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x006b|0x006b: IGET  (r0 I:int) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.captionMode int \l0x006d: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x006e|0x006e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0084 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0070|0x0070: IF  (r12 I:?[int, byte, short, char] A[D('startEndPaddingDelta' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:23:0x0084 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0072|0x0072: ARITH  (r0 I:int) = (32 int) \- (r9 I:int A[D('endPadding' int)]) \l0x0074: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0075: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1107296256(0x42000000, float:32.0) ?[int, float, short, byte, char])\l \l0x0077: ARITH  (r6 I:float) = (r0 I:float) \/ (r2 I:float) \l0x0079: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1061997773(0x3f4ccccd, float:0.8) ?[int, float, short, byte, char])\l \l0x007c: ARITH  (r0 I:float) = (r0 I:float) * (r6 I:float A[D('position' float)]) \l0x007d: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1036831949(0x3dcccccd, float:0.1) ?[int, float, short, byte, char])\l \l0x0080: ARITH  (r6 I:float A[D('position' float)]) = (r0 I:float) + (r2 I:float) \l0x0082: CONST  (r7 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0084|0x0084: CAST  (r0 I:float) = (float) (r13 I:int A[D('startPadding' int)]) \l0x0085: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1107296256(0x42000000, float:32.0) ?[int, float, short, byte, char])\l \l0x0087: ARITH  (r6 I:float) = (r0 I:float) \/ (r2 I:float) \l0x0089: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1061997773(0x3f4ccccd, float:0.8) ?[int, float, short, byte, char])\l \l0x008c: ARITH  (r0 I:float) = (r0 I:float) * (r6 I:float A[D('position' float)]) \l0x008d: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1036831949(0x3dcccccd, float:0.1) ?[int, float, short, byte, char])\l \l0x0090: ARITH  (r6 I:float A[D('position' float)]) = (r0 I:float) + (r2 I:float) \l0x0092: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x0094|0x0094: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0095: IGET  (r11 I:int) = \l  (r14 I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.row int \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.text.Cue com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.build((r14 'this' I:com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x005a\-0x006b: r5 'lineAnchor' int\l  0x004e\-0x006b: r6 'position' float\l  0x004f\-0x006b: r7 'positionAnchor' int\l  0x005e\-0x006b: r11 'line' int\l  0x0079\-0x0084: r6 'position' float\l  0x0083\-0x0084: r7 'positionAnchor' int\l  0x0005\-0x0097: r1 'cueString' android.text.SpannableStringBuilder\l  0x0095\-0x0097: r5 'lineAnchor' int\l  0x0089\-0x0097: r6 'position' float\l  0x0093\-0x0097: r7 'positionAnchor' int\l  0x003e\-0x0097: r9 'endPadding' int\l  0x0006\-0x0097: r10 'i' int\l  0x0097\-0x0097: r11 'line' int\l  0x0040\-0x0097: r12 'startEndPaddingDelta' int\l  0x0036\-0x0097: r13 'startPadding' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_7;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_13;
Node_23 -> Node_13;
Node_24 -> Node_18;
}

