digraph "CFG forcom.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.setUnderline(Z)V" {
subgraph cluster_Region_1310598824 {
label = "R(1:(1:2)(1:(1:5)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1428843844 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: R(1:(1:5)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r7 == true) goto L_0x0003\l}"];
subgraph cluster_Region_1464047571 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|r6.underlineStartPosition = r6.captionStringBuilder.length()\l}"];
}
subgraph cluster_Region_572752087 {
label = "R(1:(1:5)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_498587997 {
label = "IF [B:4:0x000e] THEN: R(1:5) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r6.underlineStartPosition != \-1) goto L_0x0010\l}"];
subgraph cluster_Region_468834274 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|r6.captionStringBuilder.setSpan(new android.text.style.UnderlineSpan(), r6.underlineStartPosition, r6.captionStringBuilder.length(), 33)\lr6.underlineStartPosition = \-1\l}"];
}
subgraph cluster_Region_1355228736 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000c}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.setUnderline((r6v0 'this' com.google.android.exoplayer2.text.cea.Cea608Decoder$CueBuilder A[IMMUTABLE_TYPE, THIS]), (r7v0 'enabled' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_8;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

