digraph "CFG forcom.google.android.exoplayer2.text.cea.Cea608Decoder.handleMidrowCtrl(B)V" {
subgraph cluster_Region_1907284732 {
label = "R(2:3|(2:(2:5|8)|(1:7)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|PHI: r1 \l  PHI: (r1v1 'isUnderlined' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r6.currentCueBuilder.setUnderline((r7 & 1) == 1)\lint r0 = (r7 \>\> 1) & 15\l}"];
subgraph cluster_Region_2012547207 {
label = "R(2:(2:5|8)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_560786803 {
label = "IF [B:4:0x0011] THEN: R(2:5|8) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r0 == 7) goto L_0x0013\l}"];
subgraph cluster_Region_254721948 {
label = "R(2:5|8)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|r6.currentCueBuilder.setMidrowStyle(new android.text.style.StyleSpan(2), 2)\lr6.currentCueBuilder.setMidrowStyle(new android.text.style.ForegroundColorSpan(\-1), 1)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1696409632 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002b|r6.currentCueBuilder.setMidrowStyle(new android.text.style.ForegroundColorSpan(COLORS[r0]), 1)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0004}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0029}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.text.cea.Cea608Decoder.handleMidrowCtrl((r6v0 'this' com.google.android.exoplayer2.text.cea.Cea608Decoder A[IMMUTABLE_TYPE, THIS]), (r7v0 'cc2' byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_8;
Node_7 -> Node_9;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_6 -> Node_3;
}

