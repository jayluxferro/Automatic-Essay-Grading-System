digraph "CFG forcom.google.android.exoplayer2.text.cea.CeaDecoder.dequeueInputBuffer()Lcom\/google\/android\/exoplayer2\/text\/SubtitleInputBuffer;" {
subgraph cluster_Region_673345041 {
label = "R(2:3|(2:(1:5)|(2:7|8)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|PHI: r0 \l  PHI: (r0v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r1.dequeuedInputBuffer == null)\l}"];
subgraph cluster_Region_953216473 {
label = "R(2:(1:5)|(2:7|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_408504595 {
label = "IF [B:4:0x000e] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r1.availableInputBuffers.isEmpty() == true) goto L_0x0010\l}"];
subgraph cluster_Region_2073864709 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1089798529 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0014|r1.dequeuedInputBuffer = r1.availableInputBuffers.pollFirst()\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return r1.dequeuedInputBuffer\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0012}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.text.SubtitleInputBuffer com.google.android.exoplayer2.text.cea.CeaDecoder.dequeueInputBuffer((r1v0 'this' com.google.android.exoplayer2.text.cea.CeaDecoder A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.text.SubtitleDecoderException]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_6 -> Node_3;
}

