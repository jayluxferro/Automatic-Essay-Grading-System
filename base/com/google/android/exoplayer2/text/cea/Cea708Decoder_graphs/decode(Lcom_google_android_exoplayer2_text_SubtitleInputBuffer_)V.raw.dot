digraph "CFG forcom.google.android.exoplayer2.text.cea.Cea708Decoder.decode(Lcom\/google\/android\/exoplayer2\/text\/SubtitleInputBuffer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.ccData com.google.android.exoplayer2.util.ParsableByteArray \l0x0002: IGET  (r8 I:java.nio.ByteBuffer) = \l  (r12 I:com.google.android.exoplayer2.text.SubtitleInputBuffer A[D('inputBuffer' com.google.android.exoplayer2.text.SubtitleInputBuffer)])\l com.google.android.exoplayer2.text.SubtitleInputBuffer.data java.nio.ByteBuffer \l0x0004: INVOKE  (r8 I:byte[]) = (r8 I:java.nio.ByteBuffer) java.nio.ByteBuffer.array():byte[] type: VIRTUAL \l0x0008: IGET  (r9 I:java.nio.ByteBuffer) = \l  (r12 I:com.google.android.exoplayer2.text.SubtitleInputBuffer A[D('inputBuffer' com.google.android.exoplayer2.text.SubtitleInputBuffer)])\l com.google.android.exoplayer2.text.SubtitleInputBuffer.data java.nio.ByteBuffer \l0x000a: INVOKE  (r9 I:int) = (r9 I:java.nio.ByteBuffer) java.nio.ByteBuffer.limit():int type: VIRTUAL \l0x000e: INVOKE  \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r8 I:byte[])\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.reset(byte[], int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IGET  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.ccData com.google.android.exoplayer2.util.ParsableByteArray \l0x0013: INVOKE  (r7 I:int) = (r7 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x0017: CONST  (r8 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: IF  (r7 I:?[int, byte, short, char]) \< (r8 I:?[int, byte, short, char])  \-\> B:29:0x00ab \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IGET  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.ccData com.google.android.exoplayer2.util.ParsableByteArray \l0x001c: INVOKE  (r7 I:int) = (r7 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0020: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (7 ?[int, float, short, byte, char]) \l0x0022: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char] A[D('ccTypeAndValid' int)]) & (3 ?[int, float, short, byte, char]) \l0x0024: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char] A[D('ccTypeAndValid' int)]) & (4 ?[int, float, short, byte, char]) \l0x0026: CONST  (r8 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|0x0027: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0077 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IGET  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.ccData com.google.android.exoplayer2.util.ParsableByteArray \l0x002c: INVOKE  (r7 I:int) = (r7 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0030: CAST  (r0 I:byte) = (byte) (r7 I:int) \l0x0031: IGET  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.ccData com.google.android.exoplayer2.util.ParsableByteArray \l0x0033: INVOKE  (r7 I:int) = (r7 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0037: CAST  (r1 I:byte) = (byte) (r7 I:int) \l0x0038: CONST  (r7 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|0x0039: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ccType' int)]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003e \l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|0x003b: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|0x003c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ccType' int)]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0011 \l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|0x003e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ccValid' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0011 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ccType' int)]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0079 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: INVOKE  \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.finalizeCurrentPacket():void type: DIRECT \l0x0046: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char] A[D('ccData1' byte)]) & (192(0xc0, float:2.69E\-43) ?[int, float, short, byte, char]) \l0x0048: ARITH  (r6 I:int) = (r7 I:int) \>\> (6 int) \l0x004a: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char] A[D('ccData1' byte)]) & (63 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('packetSize' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0050 \l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|0x004e: CONST  (r5 I:?[int, float, short, byte, char] A[D('packetSize' int)]) = (64 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|0x0050: NEW_INSTANCE  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket) =  com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l0x0052: INVOKE  \l  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l  (r6 I:int A[D('sequenceNumber' int)])\l  (r5 I:int A[D('packetSize' int)])\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.\<init\>(int, int):void type: DIRECT \l0x0055: IPUT  \l  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.currentDtvCcPacket com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l0x0057: IGET  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.currentDtvCcPacket com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l0x0059: IGET  (r7 I:byte[]) = \l  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.packetData byte[] \l0x005b: IGET  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.currentDtvCcPacket com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l0x005d: IGET  (r9 I:int) = \l  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.currentIndex int \l0x005f: ARITH  (r10 I:int) = (r9 I:int) + (1 int) \l0x0061: IPUT  \l  (r10 I:int)\l  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.currentIndex int \l0x0063: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l  (r1 I:byte A[D('ccData2' byte), IMMUTABLE_TYPE])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0065|0x0065: IGET  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.currentDtvCcPacket com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l0x0067: IGET  (r7 I:int) = \l  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.currentIndex int \l0x0069: IGET  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.currentDtvCcPacket com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l0x006b: IGET  (r8 I:int) = \l  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.packetSize int \l0x006d: ARITH  (r8 I:int) = (r8 I:int) * (2 int) \l0x006f: ARITH  (r8 I:int) = (r8 I:int) + (\-1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0071|0x0071: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0011 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0073|0x0073: INVOKE  \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.finalizeCurrentPacket():void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x0077|0x0077: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('ccValid' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0079|0x0079: CONST  (r7 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x007a|0x007a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ccType' int)]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x008c \l}"];
Node_23 [shape=record,label="{23\:\ 0x007c|0x007c: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x007d|0x007d: INVOKE  (r7 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x0080: IGET  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.currentDtvCcPacket com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l}"];
Node_25 [shape=record,label="{25\:\ 0x0082|0x0082: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x008e \l}"];
Node_26 [shape=record,label="{26\:\ 0x0084|0x0084: CONST_STR  (r7 I:java.lang.String) =  \"Cea708Decoder\" \l0x0086: CONST_STR  (r8 I:java.lang.String) =  \"Encountered DTVCC_PACKET_DATA before DTVCC_PACKET_START\" \l0x0088: INVOKE  (r7 I:java.lang.String), (r8 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x008c|0x008c: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x008e|0x008e: IGET  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.currentDtvCcPacket com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l0x0090: IGET  (r7 I:byte[]) = \l  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.packetData byte[] \l0x0092: IGET  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.currentDtvCcPacket com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l0x0094: IGET  (r9 I:int) = \l  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.currentIndex int \l0x0096: ARITH  (r10 I:int) = (r9 I:int) + (1 int) \l0x0098: IPUT  \l  (r10 I:int)\l  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.currentIndex int \l0x009a: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l  (r0 I:byte A[D('ccData1' byte), IMMUTABLE_TYPE])\l \l0x009c: IGET  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.currentDtvCcPacket com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l0x009e: IGET  (r7 I:byte[]) = \l  (r7 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.packetData byte[] \l0x00a0: IGET  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket) = \l  (r11 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.currentDtvCcPacket com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket \l0x00a2: IGET  (r9 I:int) = \l  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.currentIndex int \l0x00a4: ARITH  (r10 I:int) = (r9 I:int) + (1 int) \l0x00a6: IPUT  \l  (r10 I:int)\l  (r8 I:com.google.android.exoplayer2.text.cea.Cea708Decoder$DtvCcPacket)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket.currentIndex int \l0x00a8: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l  (r1 I:byte A[D('ccData2' byte), IMMUTABLE_TYPE])\l \l}"];
Node_29 [shape=record,label="{29\:\ 0x00ab|0x00ab: RETURN   \l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.text.cea.Cea708Decoder.decode((r11 'this' I:com.google.android.exoplayer2.text.cea.Cea708Decoder A[IMMUTABLE_TYPE, THIS]), (r12 I:com.google.android.exoplayer2.text.SubtitleInputBuffer A[D('inputBuffer' com.google.android.exoplayer2.text.SubtitleInputBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x004c\-0x0065: r5 'packetSize' int\l  0x004a\-0x0065: r6 'sequenceNumber' int\l  0x0031\-0x0077: r0 'ccData1' byte\l  0x0038\-0x0077: r1 'ccData2' byte\l  0x002a\-0x0077: r4 'ccValid' boolean\l  0x0079\-0x00ab: r0 'ccData1' byte\l  0x0079\-0x00ab: r1 'ccData2' byte\l  0x0024\-0x00ab: r2 'ccType' int\l  0x0022\-0x00ab: r3 'ccTypeAndValid' int\l  0x0079\-0x00ab: r4 'ccValid' boolean\l  ?\-0x00ab: r12 'inputBuffer' com.google.android.exoplayer2.text.SubtitleInputBuffer\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_29;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_20;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_21;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_1;
Node_20 -> Node_6;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_1;
Node_27 -> Node_24;
Node_28 -> Node_17;
}

