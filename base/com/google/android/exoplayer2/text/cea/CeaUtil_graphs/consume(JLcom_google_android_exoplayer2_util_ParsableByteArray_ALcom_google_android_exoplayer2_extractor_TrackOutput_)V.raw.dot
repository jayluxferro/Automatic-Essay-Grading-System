digraph "CFG forcom.google.android.exoplayer2.text.cea.CeaUtil.consume(JLcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;[Lcom\/google\/android\/exoplayer2\/extractor\/TrackOutput;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x0004: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r4 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:14:0x007b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r11 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.text.cea.CeaUtil.readNon255TerminatedValue(com.google.android.exoplayer2.util.ParsableByteArray):int type: STATIC \l0x000b: INVOKE  (r10 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.text.cea.CeaUtil.readNon255TerminatedValue(com.google.android.exoplayer2.util.ParsableByteArray):int type: STATIC \l0x000f: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('payloadSize' int)]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: INVOKE  (r4 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r10 I:?[int, byte, short, char] A[D('payloadSize' int)]) \<= (r4 I:?[int, byte, short, char])  \-\> B:7:0x0029 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: CONST_STR  (r4 I:java.lang.String) =  \"CeaUtil\" \l0x001a: CONST_STR  (r5 I:java.lang.String) =  \"Skipping remainder of malformed SEI NAL unit.\" \l0x001c: INVOKE  (r4 I:java.lang.String), (r5 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l0x001f: INVOKE  (r4 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x0023: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0025: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x002b: INVOKE  (r4 I:boolean) = \l  (r11 I:int A[D('payloadType' int)])\l  (r10 I:int A[D('payloadSize' int)])\l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l com.google.android.exoplayer2.text.cea.CeaUtil.isSeiMessageCea608(int, int, com.google.android.exoplayer2.util.ParsableByteArray):boolean type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0075 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: CONST  (r4 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0033: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0035: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0038: INVOKE  (r4 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x003c: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (31 ?[int, float, short, byte, char]) \l0x003e: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0041: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0044: ARITH  (r7 I:int) = (r2 I:int A[D('ccCount' int)]) * (3 int) \l0x0046: INVOKE  (r12 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x004a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('outputs' com.google.android.exoplayer2.extractor.TrackOutput[])])\l \l0x004c: ARRAY_LENGTH  (r14 I:int) = (r0 I:?[]) \l0x004d: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004e: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x004f|0x004f: IF  (r13 I:?[int, byte, short, char]) \>= (r14 I:?[int, byte, short, char])  \-\> B:12:0x0069 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0051|0x0051: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY][] A[D('outputs' com.google.android.exoplayer2.extractor.TrackOutput[])])\l  (r13 I:?[int, short, byte, char])\l \l0x0053: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0055: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r12 I:int A[D('sampleStartPosition' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0058: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x005a: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.TrackOutput A[D('output' com.google.android.exoplayer2.extractor.TrackOutput)])\l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r7 I:int A[D('sampleLength' int)])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x005d: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x005e: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005f: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0060: MOVE  (r4 I:?[long, double]) = (r16 I:?[long, double] A[D('presentationTimeUs' long)]) \l0x0062: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.TrackOutput A[D('output' com.google.android.exoplayer2.extractor.TrackOutput)])\l  (r4 I:long)\l  (r6 I:int)\l  (r7 I:int A[D('sampleLength' int)])\l  (r8 I:int)\l  (r9 I:byte[])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleMetadata(long, int, int, int, byte[]):void type: INTERFACE \l0x0065: ARITH  (r4 I:int) = (r13 I:int) + (1 int) \l0x0067: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0069|0x0069: ARITH  (r4 I:int) = (r2 I:int A[D('ccCount' int)]) * (3 int) \l0x006b: ARITH  (r4 I:int) = (r4 I:int) + (10 int) \l0x006d: ARITH  (r4 I:int) = (r10 I:int A[D('payloadSize' int)]) \- (r4 I:int) \l0x006f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0071: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0075|0x0075: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0077: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r10 I:int A[D('payloadSize' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x007b|0x007b: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.google.android.exoplayer2.text.cea.CeaUtil.consume((r16 I:long A[D('presentationTimeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:com.google.android.exoplayer2.extractor.TrackOutput[] A[D('outputs' com.google.android.exoplayer2.extractor.TrackOutput[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0053\-0x0069: r3 'output' com.google.android.exoplayer2.extractor.TrackOutput\l  0x003e\-0x0075: r2 'ccCount' int\l  0x0046\-0x0075: r7 'sampleLength' int\l  0x004a\-0x0075: r12 'sampleStartPosition' int\l  0x000f\-0x007b: r10 'payloadSize' int\l  0x000b\-0x007b: r11 'payloadType' int\l  ?\-0x007b: r16 'presentationTimeUs' long\l  ?\-0x007b: r18 'seiBuffer' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x007b: r19 'outputs' com.google.android.exoplayer2.extractor.TrackOutput[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_0;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_10;
Node_12 -> Node_0;
Node_13 -> Node_0;
}

