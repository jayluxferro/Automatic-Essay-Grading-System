digraph "CFG forcom.google.android.exoplayer2.text.cea.Cea708Decoder.CueBuilder.getArgbColorFromCeaColor(IIII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l0x0002: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0004: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: INVOKE  (r6 I:int A[D('red' int)]), (r2 I:int), (r3 I:int) com.google.android.exoplayer2.util.Assertions.checkIndex(int, int, int):int type: STATIC \l0x0008: INVOKE  (r7 I:int A[D('green' int)]), (r2 I:int), (r3 I:int) com.google.android.exoplayer2.util.Assertions.checkIndex(int, int, int):int type: STATIC \l0x000b: INVOKE  (r8 I:int A[D('blue' int)]), (r2 I:int), (r3 I:int) com.google.android.exoplayer2.util.Assertions.checkIndex(int, int, int):int type: STATIC \l0x000e: INVOKE  (r9 I:int A[D('opacity' int)]), (r2 I:int), (r3 I:int) com.google.android.exoplayer2.util.Assertions.checkIndex(int, int, int):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: SWITCH  \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('opacity' int)])\l k:[0, 1, 2, 3] t:[0x0023, 0x0023, 0x0026, 0x0029] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r6 I:?[int, byte, short, char] A[D('red' int)]) \<= (r5 I:?[int, byte, short, char])  \-\> B:13:0x002b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IF  (r7 I:?[int, byte, short, char] A[D('green' int)]) \<= (r5 I:?[int, byte, short, char])  \-\> B:14:0x002d \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IF  (r8 I:?[int, byte, short, char] A[D('blue' int)]) \<= (r5 I:?[int, byte, short, char])  \-\> B:15:0x002f \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: INVOKE  (r1 I:int) = \l  (r0 I:int A[D('alpha' int)])\l  (r4 I:int)\l  (r3 I:int)\l  (r1 I:int)\l android.graphics.Color.argb(int, int, int, int):int type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: RETURN  (r1 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: CONST  (r0 I:?[int, float, short, byte, char] A[D('alpha' int)]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: CONST  (r0 I:?[int, float, short, byte, char] A[D('alpha' int)]) = \l  (127(0x7f, float:1.78E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('alpha' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public static int com.google.android.exoplayer2.text.cea.Cea708Decoder.CueBuilder.getArgbColorFromCeaColor((r6 I:int A[D('red' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('green' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('blue' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('opacity' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0016\-0x0023: r0 'alpha' int\l  0x0025\-0x0026: r0 'alpha' int\l  0x0028\-0x0029: r0 'alpha' int\l  0x002a\-0x003d: r0 'alpha' int\l  ?\-0x003d: r6 'red' int\l  ?\-0x003d: r7 'green' int\l  ?\-0x003d: r8 'blue' int\l  ?\-0x003d: r9 'opacity' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_1 -> Node_11;
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_10 -> Node_3;
Node_11 -> Node_3;
Node_12 -> Node_3;
Node_13 -> Node_5;
Node_14 -> Node_7;
Node_15 -> Node_8;
}

