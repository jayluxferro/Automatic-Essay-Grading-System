digraph "CFG forcom.google.android.exoplayer2.text.SimpleSubtitleDecoder.\<init\>(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0001: NEW_ARRAY  (r0 I:com.google.android.exoplayer2.text.SubtitleInputBuffer[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.text.SubtitleInputBuffer[] \l0x0003: NEW_ARRAY  (r1 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.text.SubtitleOutputBuffer[] \l0x0005: INVOKE  \l  (r2 I:com.google.android.exoplayer2.decoder.SimpleDecoder)\l  (r0 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer[])\l  (r1 I:com.google.android.exoplayer2.decoder.OutputBuffer[])\l com.google.android.exoplayer2.decoder.SimpleDecoder.\<init\>(com.google.android.exoplayer2.decoder.DecoderInputBuffer[], com.google.android.exoplayer2.decoder.OutputBuffer[]):void type: DIRECT \l0x0008: IPUT  \l  (r3 I:java.lang.String A[D('name' java.lang.String)])\l  (r2 I:com.google.android.exoplayer2.text.SimpleSubtitleDecoder)\l com.google.android.exoplayer2.text.SimpleSubtitleDecoder.name java.lang.String \l0x000a: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1024(0x400, float:1.435E\-42) ?[int, float, short, byte, char])\l \l0x000c: INVOKE  \l  (r2 I:com.google.android.exoplayer2.text.SimpleSubtitleDecoder)\l  (r0 I:int)\l com.google.android.exoplayer2.text.SimpleSubtitleDecoder.setInitialInputBufferSize(int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.text.SimpleSubtitleDecoder.\<init\>((r2 'this' I:com.google.android.exoplayer2.text.SimpleSubtitleDecoder A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000f: r3 'name' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

