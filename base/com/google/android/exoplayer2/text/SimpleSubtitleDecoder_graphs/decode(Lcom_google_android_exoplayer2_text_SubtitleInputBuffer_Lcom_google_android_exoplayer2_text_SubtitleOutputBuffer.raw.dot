digraph "CFG forcom.google.android.exoplayer2.text.SimpleSubtitleDecoder.decode(Lcom\/google\/android\/exoplayer2\/text\/SubtitleInputBuffer;Lcom\/google\/android\/exoplayer2\/text\/SubtitleOutputBuffer;Z)Lcom\/google\/android\/exoplayer2\/text\/SubtitleDecoderException;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r7 I:java.nio.ByteBuffer) = \l  (r9 I:com.google.android.exoplayer2.text.SubtitleInputBuffer A[D('inputBuffer' com.google.android.exoplayer2.text.SubtitleInputBuffer)])\l com.google.android.exoplayer2.text.SubtitleInputBuffer.data java.nio.ByteBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x001d \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:byte[]) = \l  (r7 I:java.nio.ByteBuffer A[D('inputData' java.nio.ByteBuffer)])\l java.nio.ByteBuffer.array():byte[] type: VIRTUAL A[Catch:\{ SubtitleDecoderException \-\> 0x001d \}]\l0x0006: INVOKE  (r1 I:int) = \l  (r7 I:java.nio.ByteBuffer A[D('inputData' java.nio.ByteBuffer)])\l java.nio.ByteBuffer.limit():int type: VIRTUAL A[Catch:\{ SubtitleDecoderException \-\> 0x001d \}]\l0x000a: INVOKE  (r3 I:com.google.android.exoplayer2.text.Subtitle) = \l  (r8 I:com.google.android.exoplayer2.text.SimpleSubtitleDecoder)\l  (r0 I:byte[])\l  (r1 I:int)\l  (r11 I:boolean A[D('reset' boolean)])\l com.google.android.exoplayer2.text.SimpleSubtitleDecoder.decode(byte[], int, boolean):com.google.android.exoplayer2.text.Subtitle type: VIRTUAL A[Catch:\{ SubtitleDecoderException \-\> 0x001d \}]\l0x000e: IGET  (r1 I:long) = \l  (r9 I:com.google.android.exoplayer2.text.SubtitleInputBuffer A[D('inputBuffer' com.google.android.exoplayer2.text.SubtitleInputBuffer)])\l com.google.android.exoplayer2.text.SubtitleInputBuffer.timeUs long A[Catch:\{ SubtitleDecoderException \-\> 0x001d \}]\l0x0010: IGET  (r4 I:long) = \l  (r9 I:com.google.android.exoplayer2.text.SubtitleInputBuffer A[D('inputBuffer' com.google.android.exoplayer2.text.SubtitleInputBuffer)])\l com.google.android.exoplayer2.text.SubtitleInputBuffer.subsampleOffsetUs long A[Catch:\{ SubtitleDecoderException \-\> 0x001d \}]\l0x0012: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY] A[D('outputBuffer' com.google.android.exoplayer2.text.SubtitleOutputBuffer)])\l A[Catch:\{ SubtitleDecoderException \-\> 0x001d \}]\l0x0013: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer)\l  (r1 I:long)\l  (r3 I:com.google.android.exoplayer2.text.Subtitle A[D('subtitle' com.google.android.exoplayer2.text.Subtitle)])\l  (r4 I:long)\l com.google.android.exoplayer2.text.SubtitleOutputBuffer.setContent(long, com.google.android.exoplayer2.text.Subtitle, long):void type: VIRTUAL A[Catch:\{ SubtitleDecoderException \-\> 0x001d \}]\l0x0016: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l A[Catch:\{ SubtitleDecoderException \-\> 0x001d \}]\l0x0018: INVOKE  \l  (r10 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer A[D('outputBuffer' com.google.android.exoplayer2.text.SubtitleOutputBuffer)])\l  (r0 I:int)\l com.google.android.exoplayer2.text.SubtitleOutputBuffer.clearFlag(int):void type: VIRTUAL A[Catch:\{ SubtitleDecoderException \-\> 0x001d \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|0x001b: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: RETURN  \l  (r6 I:com.google.android.exoplayer2.text.SubtitleDecoderException)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|ExcHandler: SubtitleDecoderException null\lSplitter:B:0:0x0000\l|0x001d: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
MethodNode[shape=record,label="{protected final com.google.android.exoplayer2.text.SubtitleDecoderException com.google.android.exoplayer2.text.SimpleSubtitleDecoder.decode((r8 'this' I:com.google.android.exoplayer2.text.SimpleSubtitleDecoder A[IMMUTABLE_TYPE, THIS]), (r9 I:com.google.android.exoplayer2.text.SubtitleInputBuffer A[D('inputBuffer' com.google.android.exoplayer2.text.SubtitleInputBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer A[D('outputBuffer' com.google.android.exoplayer2.text.SubtitleOutputBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[D('reset' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000e\-0x001c: r3 'subtitle' com.google.android.exoplayer2.text.Subtitle\l  0x0002\-0x001c: r7 'inputData' java.nio.ByteBuffer\l  0x001e\-0x001e: r6 'e' com.google.android.exoplayer2.text.SubtitleDecoderException\l  ?\-0x001e: r9 'inputBuffer' com.google.android.exoplayer2.text.SubtitleInputBuffer\l  ?\-0x001e: r10 'outputBuffer' com.google.android.exoplayer2.text.SubtitleOutputBuffer\l  ?\-0x001e: r11 'reset' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
}

