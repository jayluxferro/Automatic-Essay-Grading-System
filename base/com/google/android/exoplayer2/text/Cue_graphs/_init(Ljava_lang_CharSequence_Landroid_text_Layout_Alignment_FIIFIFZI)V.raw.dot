digraph "CFG forcom.google.android.exoplayer2.text.Cue.\<init\>(Ljava\/lang\/CharSequence;Landroid\/text\/Layout$Alignment;FIIFIFZI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r14 I:?[OBJECT, ARRAY] A[D('text' java.lang.CharSequence)])\l \l0x0004: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r15 I:?[OBJECT, ARRAY] A[D('textAlignment' android.text.Layout$Alignment)])\l \l0x0005: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('line' float)])\l \l0x0007: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lineType' int)])\l \l0x0009: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lineAnchor' int)])\l \l0x000b: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' float)])\l \l0x000d: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('positionAnchor' int)])\l \l0x000f: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('size' float)])\l \l0x0011: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('windowColorSet' boolean)])\l \l0x0013: MOVE  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('windowColor' int)])\l \l0x0015: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.Cue)\l  (r1 I:java.lang.CharSequence)\l  (r2 I:android.text.Layout$Alignment)\l  (r3 I:android.graphics.Bitmap)\l  (r4 I:float)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:float)\l  (r8 I:int)\l  (r9 I:float)\l  (r10 I:float)\l  (r11 I:boolean)\l  (r12 I:int)\l com.google.android.exoplayer2.text.Cue.\<init\>(java.lang.CharSequence, android.text.Layout$Alignment, android.graphics.Bitmap, float, int, int, float, int, float, float, boolean, int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.text.Cue.\<init\>((r13 'this' I:com.google.android.exoplayer2.text.Cue A[IMMUTABLE_TYPE, THIS]), (r14 I:java.lang.CharSequence A[D('text' java.lang.CharSequence), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:android.text.Layout$Alignment A[D('textAlignment' android.text.Layout$Alignment), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:float A[D('line' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('lineType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('lineAnchor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:float A[D('position' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[D('positionAnchor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:float A[D('size' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:boolean A[D('windowColorSet' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[D('windowColor' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0018: r14 'text' java.lang.CharSequence\l  ?\-0x0018: r15 'textAlignment' android.text.Layout$Alignment\l  ?\-0x0018: r16 'line' float\l  ?\-0x0018: r17 'lineType' int\l  ?\-0x0018: r18 'lineAnchor' int\l  ?\-0x0018: r19 'position' float\l  ?\-0x0018: r20 'positionAnchor' int\l  ?\-0x0018: r21 'size' float\l  ?\-0x0018: r22 'windowColorSet' boolean\l  ?\-0x0018: r23 'windowColor' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

