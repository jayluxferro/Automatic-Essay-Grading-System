digraph "CFG forcom.google.android.exoplayer2.text.tx3g.Tx3gDecoder.decode([BIZ)Lcom\/google\/android\/exoplayer2\/text\/Subtitle;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0002: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY] A[D('bytes' byte[])]) \l0x0006: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('length' int)])\l \l0x0008: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r0 I:byte[])\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.reset(byte[], int):void type: VIRTUAL \l0x000b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x000d: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x000f: INVOKE  (r14 I:java.lang.String) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.readSubtitleText(com.google.android.exoplayer2.util.ParsableByteArray):java.lang.String type: STATIC \l0x0013: INVOKE  (r3 I:boolean) = \l  (r14 I:java.lang.String A[D('cueTextString' java.lang.String)])\l java.lang.String.isEmpty():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|0x0019: SGET  (r3 I:com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle) =  com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle.EMPTY com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: RETURN  (r3 I:com.google.android.exoplayer2.text.Subtitle) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: NEW_INSTANCE  (r2 I:android.text.SpannableStringBuilder) =  android.text.SpannableStringBuilder \l0x001e: INVOKE  \l  (r2 I:android.text.SpannableStringBuilder)\l  (r14 I:java.lang.CharSequence A[D('cueTextString' java.lang.String)])\l android.text.SpannableStringBuilder.\<init\>(java.lang.CharSequence):void type: DIRECT \l0x0021: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0023: IGET  (r3 I:int) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.defaultFontFace int \l0x0025: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0026: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: INVOKE  (r6 I:int) = \l  (r2 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder)])\l android.text.SpannableStringBuilder.length():int type: VIRTUAL \l0x002b: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (16711680(0xff0000, float:2.3418052E\-38) ?[int, float, short, byte, char])\l \l0x002d: INVOKE  \l  (r2 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder)])\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.attachFontFace(android.text.SpannableStringBuilder, int, int, int, int, int):void type: STATIC \l0x0030: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0032: IGET  (r3 I:int) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.defaultColorRgba int \l0x0034: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0035: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0036: INVOKE  (r6 I:int) = \l  (r2 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder)])\l android.text.SpannableStringBuilder.length():int type: VIRTUAL \l0x003a: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (16711680(0xff0000, float:2.3418052E\-38) ?[int, float, short, byte, char])\l \l0x003c: INVOKE  \l  (r2 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder)])\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.attachColor(android.text.SpannableStringBuilder, int, int, int, int, int):void type: STATIC \l0x003f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0041: IGET  (r3 I:java.lang.String) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.defaultFontFamily java.lang.String \l0x0043: CONST_STR  (r4 I:java.lang.String) =  \"sans\-serif\" \l0x0045: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0046: INVOKE  (r6 I:int) = \l  (r2 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder)])\l android.text.SpannableStringBuilder.length():int type: VIRTUAL \l0x004a: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (16711680(0xff0000, float:2.3418052E\-38) ?[int, float, short, byte, char])\l \l0x004c: INVOKE  \l  (r2 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder)])\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.attachFontFamily(android.text.SpannableStringBuilder, java.lang.String, java.lang.String, int, int, int):void type: STATIC \l0x004f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0051: IGET  (r6 I:float) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.defaultVerticalPlacement float \l}"];
Node_5 [shape=record,label="{5\:\ 0x0053|0x0053: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0055: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x0057: INVOKE  (r3 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x005b: CONST  (r4 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x005d|0x005d: IF  (r3 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:27:0x00e5 \l}"];
Node_7 [shape=record,label="{7\:\ 0x005f|0x005f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0061: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x0063: INVOKE  (r16 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0067: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0069: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x006b: INVOKE  (r12 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x006f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0071: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x0073: INVOKE  (r13 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0077: SGET  (r3 I:int) =  com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.TYPE_STYL int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0079|0x0079: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atomType' int)]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x00a5 \l}"];
Node_9 [shape=record,label="{9\:\ 0x007b|0x007b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x007d: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x007f: INVOKE  (r3 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x0083: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0084|0x0084: IF  (r3 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:16:0x00a3 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0086|0x0086: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0087|0x0087: INVOKE  (r3 I:boolean) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.assertTrue(boolean):void type: STATIC \l0x008a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x008c: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x008e: INVOKE  (r18 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x0092: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0093|0x0093: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('styleRecordCount' int)])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0095|0x0095: IF  (r15 I:?[int, byte, short, char] A[D('i' int)]) \>= (r0 I:?[int, byte, short, char])  \-\> B:25:0x00d8 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0097|0x0097: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0099: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x009b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x009d: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder)\l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder)])\l com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.applyStyleRecord(com.google.android.exoplayer2.util.ParsableByteArray, android.text.SpannableStringBuilder):void type: DIRECT \l0x00a0: ARITH  (r15 I:int A[D('i' int)]) = (r15 I:int A[D('i' int)]) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x00a3|0x00a3: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x00a5|0x00a5: SGET  (r3 I:int) =  com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.TYPE_TBOX int \l}"];
Node_18 [shape=record,label="{18\:\ 0x00a7|0x00a7: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atomType' int)]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00d8 \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a9|0x00a9: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00ab: IGET  (r3 I:boolean) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.customVerticalPlacement boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x00ad|0x00ad: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00d8 \l}"];
Node_21 [shape=record,label="{21\:\ 0x00af|0x00af: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00b1: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x00b3: INVOKE  (r3 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x00b7: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x00b8|0x00b8: IF  (r3 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:26:0x00e3 \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ba|0x00ba: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00bb|0x00bb: INVOKE  (r3 I:boolean) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.assertTrue(boolean):void type: STATIC \l0x00be: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00c0: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x00c2: INVOKE  (r17 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x00c6: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('requestedVerticalPlacement' int)])\l \l0x00c8: CAST  (r3 I:float) = (float) (r0 I:int) \l0x00c9: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00cb: IGET  (r4 I:int) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.calculatedVideoTrackHeight int \l0x00cd: CAST  (r4 I:float) = (float) (r4 I:int) \l0x00ce: ARITH  (r6 I:float A[D('verticalPlacement' float)]) = (r3 I:float) \/ (r4 I:float) \l0x00d0: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d1: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1064514355(0x3f733333, float:0.95) ?[int, float, short, byte, char])\l \l0x00d4: INVOKE  (r6 I:float A[D('verticalPlacement' float)]) = \l  (r6 I:float A[D('verticalPlacement' float)])\l  (r3 I:float)\l  (r4 I:float)\l com.google.android.exoplayer2.util.Util.constrainValue(float, float, float):float type: STATIC \l}"];
Node_25 [shape=record,label="{25\:\ 0x00d8|0x00d8: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00da: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.parsableByteArray com.google.android.exoplayer2.util.ParsableByteArray \l0x00dc: ARITH  (r4 I:int) = (r16 I:int A[D('position' int)]) + (r12 I:int A[D('atomSize' int)]) \l0x00de: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x00e3|0x00e3: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x00e5|0x00e5: NEW_INSTANCE  (r19 I:com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle) =  com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle \l0x00e7: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.text.Cue) =  com.google.android.exoplayer2.text.Cue \l0x00e9: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ea: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00eb: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ec: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00ed: CONST  (r10 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l0x00ef: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00f0: MOVE  (r4 I:?[OBJECT, ARRAY]) = \l  (r2 I:?[OBJECT, ARRAY] A[D('cueText' android.text.SpannableStringBuilder)])\l \l0x00f1: INVOKE  \l  (r3 I:com.google.android.exoplayer2.text.Cue)\l  (r4 I:java.lang.CharSequence)\l  (r5 I:android.text.Layout$Alignment)\l  (r6 I:float A[D('verticalPlacement' float)])\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:float)\l  (r10 I:int)\l  (r11 I:float)\l com.google.android.exoplayer2.text.Cue.\<init\>(java.lang.CharSequence, android.text.Layout$Alignment, float, int, int, float, int, float):void type: DIRECT \l0x00f4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x00f6: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle)\l  (r3 I:com.google.android.exoplayer2.text.Cue)\l com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle.\<init\>(com.google.android.exoplayer2.text.Cue):void type: DIRECT \l0x00f9: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.text.Subtitle com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.decode((r20 'this' I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder A[IMMUTABLE_TYPE, THIS]), (r21 I:byte[] A[D('bytes' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:boolean A[D('reset' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0093\-0x00a3: r15 'i' int\l  0x0092\-0x00a3: r18 'styleRecordCount' int\l  0x00c6\-0x00d8: r17 'requestedVerticalPlacement' int\l  0x006f\-0x00e5: r12 'atomSize' int\l  0x0077\-0x00e5: r13 'atomType' int\l  0x0067\-0x00e5: r16 'position' int\l  0x0021\-0x00fc: r2 'cueText' android.text.SpannableStringBuilder\l  0x0053\-0x00fc: r6 'verticalPlacement' float\l  0x0013\-0x00fc: r14 'cueTextString' java.lang.String\l  ?\-0x00fc: r21 'bytes' byte[]\l  ?\-0x00fc: r22 'length' int\l  ?\-0x00fc: r23 'reset' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.text.SubtitleDecoderException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_27;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_25;
Node_15 -> Node_13;
Node_16 -> Node_12;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_5;
Node_26 -> Node_24;
Node_27 -> Node_3;
}

