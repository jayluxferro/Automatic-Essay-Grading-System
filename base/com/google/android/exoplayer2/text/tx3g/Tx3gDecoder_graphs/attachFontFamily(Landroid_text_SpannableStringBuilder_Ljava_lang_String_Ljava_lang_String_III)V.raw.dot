digraph "CFG forcom.google.android.exoplayer2.text.tx3g.Tx3gDecoder.attachFontFamily(Landroid\/text\/SpannableStringBuilder;Ljava\/lang\/String;Ljava\/lang\/String;III)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('fontFamily' java.lang.String)]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('defaultFontFamily' java.lang.String)])  \-\> B:2:0x000c \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r0 I:android.text.style.TypefaceSpan) =  android.text.style.TypefaceSpan \l0x0004: INVOKE  \l  (r0 I:android.text.style.TypefaceSpan)\l  (r3 I:java.lang.String A[D('fontFamily' java.lang.String)])\l android.text.style.TypefaceSpan.\<init\>(java.lang.String):void type: DIRECT \l0x0007: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char] A[D('spanPriority' int)]) \| (33 ?[int, float, short, byte, char]) \l0x0009: INVOKE  \l  (r2 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r5 I:int A[D('start' int)])\l  (r6 I:int A[D('end' int)])\l  (r1 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.attachFontFamily((r2 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[D('fontFamily' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[D('defaultFontFamily' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('spanPriority' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000c: r2 'cueText' android.text.SpannableStringBuilder\l  ?\-0x000c: r3 'fontFamily' java.lang.String\l  ?\-0x000c: r4 'defaultFontFamily' java.lang.String\l  ?\-0x000c: r5 'start' int\l  ?\-0x000c: r6 'end' int\l  ?\-0x000c: r7 'spanPriority' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
}

