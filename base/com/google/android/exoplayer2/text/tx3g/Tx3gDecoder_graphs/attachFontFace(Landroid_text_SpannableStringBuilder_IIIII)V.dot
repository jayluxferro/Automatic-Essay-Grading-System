digraph "CFG forcom.google.android.exoplayer2.text.tx3g.Tx3gDecoder.attachFontFace(Landroid\/text\/SpannableStringBuilder;IIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3 = true\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r8 == r9) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r0 = r12 \| 33\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if ((r8 & 1) == 0) goto L_0x003a\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|r1 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|PHI: r1 \l  PHI: (r1v1 'isBold' boolean) = (r1v0 'isBold' boolean), (r1v2 'isBold' boolean) binds: [B:19:0x003a, B:4:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|if ((r8 & 2) == 0) goto L_0x003c\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|r2 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|PHI: r2 \l  PHI: (r2v1 'isItalic' boolean) = (r2v0 'isItalic' boolean), (r2v2 'isItalic' boolean) binds: [B:20:0x003c, B:7:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_0x0047\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|if (r2 == false) goto L_0x003e\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|r7.setSpan(new android.text.style.StyleSpan(3), r10, r11, r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d}"];
Node_12 [shape=record,label="{12\:\ 0x001f|if ((r8 & 4) == 0) goto L_0x0053\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|PHI: r3 \l  PHI: (r3v2 'isUnderlined' boolean) = (r3v0 'isUnderlined' boolean), (r3v1 'isUnderlined' boolean) binds: [B:12:0x001f, B:24:0x0053] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L_0x002b\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|r7.setSpan(new android.text.style.UnderlineSpan(), r10, r11, r0)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|if (r3 != false) goto L_?\l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|if (r1 != false) goto L_?\l}"];
Node_17 [shape=record,label="{17\:\ 0x002f|if (r2 != false) goto L_?\l}"];
Node_18 [shape=record,label="{18\:\ 0x0031|r7.setSpan(new android.text.style.StyleSpan(0), r10, r11, r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|r1 = false\l}"];
Node_20 [shape=record,label="{20\:\ 0x003c|r2 = false\l}"];
Node_21 [shape=record,label="{21\:\ 0x003e|r7.setSpan(new android.text.style.StyleSpan(1), r10, r11, r0)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0047|if (r2 == false) goto L_0x001d\l}"];
Node_23 [shape=record,label="{23\:\ 0x0049|r7.setSpan(new android.text.style.StyleSpan(2), r10, r11, r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0053|r3 = false\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.attachFontFace((r7v0 'cueText' android.text.SpannableStringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'fontFace' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'defaultFontFace' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'start' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'end' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'spanPriority' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_26;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_19;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_22;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_21;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_27;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_28;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_29;
Node_18 -> Node_25;
Node_19 -> Node_5;
Node_20 -> Node_8;
Node_21 -> Node_11;
Node_22 -> Node_11;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_11;
Node_24 -> Node_13;
}

