digraph "CFG forcom.google.android.exoplayer2.text.tx3g.Tx3gDecoder.attachColor(Landroid\/text\/SpannableStringBuilder;IIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('colorRgba' int)]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('defaultColorRgba' int)])  \-\> B:2:0x0014 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char] A[D('colorRgba' int)]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0004: ARITH  (r1 I:int) = (r1 I:int) \<\< (24 int) \l0x0006: ARITH  (r2 I:int) = (r4 I:int A[D('colorRgba' int)]) \>\>\> (8 int) \l0x0008: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) \| (r2 I:?[int, boolean, short, byte, char]) \l0x000a: NEW_INSTANCE  (r1 I:android.text.style.ForegroundColorSpan) =  android.text.style.ForegroundColorSpan \l0x000c: INVOKE  \l  (r1 I:android.text.style.ForegroundColorSpan)\l  (r0 I:int A[D('colorArgb' int)])\l android.text.style.ForegroundColorSpan.\<init\>(int):void type: DIRECT \l0x000f: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char] A[D('spanPriority' int)]) \| (33 ?[int, float, short, byte, char]) \l0x0011: INVOKE  \l  (r3 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder)])\l  (r1 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r2 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.attachColor((r3 I:android.text.SpannableStringBuilder A[D('cueText' android.text.SpannableStringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('colorRgba' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('defaultColorRgba' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('spanPriority' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000a\-0x0014: r0 'colorArgb' int\l  ?\-0x0014: r3 'cueText' android.text.SpannableStringBuilder\l  ?\-0x0014: r4 'colorRgba' int\l  ?\-0x0014: r5 'defaultColorRgba' int\l  ?\-0x0014: r6 'start' int\l  ?\-0x0014: r7 'end' int\l  ?\-0x0014: r8 'spanPriority' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
}

