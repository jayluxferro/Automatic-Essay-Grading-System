digraph "CFG forcom.google.android.exoplayer2.text.webvtt.CssParser.parseBlock(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Lcom\/google\/android\/exoplayer2\/text\/webvtt\/WebvttCssStyle;" {
subgraph cluster_Region_201018381 {
label = "R(2:0|(2:(1:22)|(3:5|(3:7|(1:11)(1:14)|(1:13)(0))|(2:(1:24)|(1:23)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r11.stringBuilder.setLength(0)\lint int r1 = r12.getPosition()\lskipStyleBlock(r12)\lr11.styleInput.reset(r12.data, r12.getPosition())\lr11.styleInput.setPosition(r1)\ljava.lang.String java.lang.String r3 = parseSelector(r11.styleInput, r11.stringBuilder)\l}"];
subgraph cluster_Region_995339468 {
label = "R(2:(1:22)|(3:5|(3:7|(1:11)(1:14)|(1:13)(0))|(2:(1:24)|(1:23))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2042833745 {
label = "IF [B:1:0x0026, B:3:0x0036] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0026|if (r3 == null) goto L_0x0038\l}"];
Node_3 [shape=record,label="{3\:\ 0x0036|ADDED_TO_REGION\l|if (BLOCK_START.equals(parseNextToken(r11.styleInput, r11.stringBuilder)) == false) goto L_0x0038\l}"];
subgraph cluster_Region_207340504 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1519011890 {
label = "R(3:5|(3:7|(1:11)(1:14)|(1:13)(0))|(2:(1:24)|(1:23)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x003a|com.google.android.exoplayer2.text.webvtt.WebvttCssStyle com.google.android.exoplayer2.text.webvtt.WebvttCssStyle r4 = new com.google.android.exoplayer2.text.webvtt.WebvttCssStyle()\lapplySelectorToStyle(r4, r3)\ljava.lang.String r5 = null\lboolean r0 = false\l}"];
subgraph cluster_LoopRegion_1247800191 {
label = "LOOP:0: (3:7|(1:11)(1:14)|(1:13)(0))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0044|LOOP_START\lPHI: r0 r5 \l  PHI: (r0v1 'blockEndFound' boolean) = (r0v0 'blockEndFound' boolean), (r0v2 'blockEndFound' boolean) binds: [B:5:0x003a, B:18:0x0044] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'token' java.lang.String) = (r5v0 'token' java.lang.String), (r5v2 'token' java.lang.String) binds: [B:5:0x003a, B:18:0x0044] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0044\-\>B:18:0x0044\l|if (r0 == false) goto L_0x0046\l}"];
subgraph cluster_Region_1448520580 {
label = "R(3:7|(1:11)(1:14)|(1:13)(0))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0046|int int r2 = r11.styleInput.getPosition()\ljava.lang.String r5 = parseNextToken(r11.styleInput, r11.stringBuilder)\l}"];
subgraph cluster_IfRegion_278788884 {
label = "IF [B:8:0x0054, B:10:0x005c] THEN: R(1:11) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0054|if (r5 == null) goto L_0x005e\l}"];
Node_10 [shape=record,label="{10\:\ 0x005c|ADDED_TO_REGION\l|if (BLOCK_END.equals(r5) == true) goto L_0x005e\l}"];
subgraph cluster_Region_1522918459 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x005e|r0 = true\l}"];
}
subgraph cluster_Region_967601772 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x006e|r0 = false\l}"];
}
}
subgraph cluster_IfRegion_895872123 {
label = "IF [B:12:0x005f] THEN: R(1:13) ELSE: R(0)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x005f|PHI: r0 \l  PHI: (r0v2 'blockEndFound' boolean) = (r0v3 'blockEndFound' boolean), (r0v4 'blockEndFound' boolean) binds: [B:11:0x005e, B:14:0x006e] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0061\l}"];
subgraph cluster_Region_1734681702 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0061|r11.styleInput.setPosition(r2)\lparseStyleDeclaration(r11.styleInput, r4, r11.stringBuilder)\l}"];
}
subgraph cluster_Region_187735263 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
subgraph cluster_Region_736059384 {
label = "R(2:(1:24)|(1:23))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1578476196 {
label = "IF [B:16:0x0076] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0076|if (BLOCK_END.equals(r5) == false) goto L_0x0078\l}"];
subgraph cluster_Region_223130499 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_917473187 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return r4\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0028}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0038}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0056}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0070}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0078}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0044|LOOP_END\lSYNTHETIC\lLOOP:0: B:6:0x0044\-\>B:18:0x0044\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0070|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0044|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0044|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.text.webvtt.WebvttCssStyle com.google.android.exoplayer2.text.webvtt.CssParser.parseBlock((r11v0 'this' com.google.android.exoplayer2.text.webvtt.CssParser A[IMMUTABLE_TYPE, THIS]), (r12v0 'input' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_19[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_10 -> Node_11;
Node_10 -> Node_14[style=dashed];
Node_11 -> Node_12;
Node_14 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_20[style=dashed];
Node_13 -> Node_21;
Node_16 -> Node_17;
Node_16 -> Node_23[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_22;
Node_9 -> Node_10;
Node_15 -> Node_16;
Node_17 -> Node_24;
Node_18 -> Node_6;
Node_19 -> Node_15;
Node_20 -> Node_18;
Node_21 -> Node_18;
}

