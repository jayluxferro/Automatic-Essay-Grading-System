digraph "CFG forcom.google.android.exoplayer2.text.webvtt.CssParser.applySelectorToStyle(Lcom\/google\/android\/exoplayer2\/text\/webvtt\/WebvttCssStyle;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r9 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST_STR  (r5 I:java.lang.String) =  \"\" \l0x0005: INVOKE  (r5 I:boolean) = \l  (r5 I:java.lang.String)\l  (r12 I:java.lang.Object A[D('selector' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST  (r5 I:?[int, float, short, byte, char]) = (91 ?[int, float, short, byte, char]) \l0x000e: INVOKE  (r4 I:int) = \l  (r12 I:java.lang.String A[D('selector' java.lang.String)])\l  (r5 I:int)\l java.lang.String.indexOf(int):int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('voiceStartIndex' int)]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: SGET  (r5 I:java.util.regex.Pattern) =  com.google.android.exoplayer2.text.webvtt.CssParser.VOICE_NAME_PATTERN java.util.regex.Pattern \l0x0016: INVOKE  (r6 I:java.lang.String) = \l  (r12 I:java.lang.String A[D('selector' java.lang.String)])\l  (r4 I:int A[D('voiceStartIndex' int)])\l java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x001a: INVOKE  (r2 I:java.util.regex.Matcher) = \l  (r5 I:java.util.regex.Pattern)\l  (r6 I:java.lang.CharSequence)\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x001e: INVOKE  (r5 I:boolean) = \l  (r2 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l java.util.regex.Matcher.matches():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: INVOKE  (r5 I:java.lang.String) = \l  (r2 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r8 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l0x0028: INVOKE  \l  (r11 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l  (r5 I:java.lang.String)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.setTargetVoice(java.lang.String):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: INVOKE  (r12 I:java.lang.String A[D('selector' java.lang.String)]) = \l  (r12 I:java.lang.String A[D('selector' java.lang.String)])\l  (r7 I:int)\l  (r4 I:int A[D('voiceStartIndex' int)])\l java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: CONST_STR  (r5 I:java.lang.String) =  \".\" \l0x0031: INVOKE  (r0 I:java.lang.String[]) = \l  (r12 I:java.lang.String A[D('selector' java.lang.String)])\l  (r5 I:java.lang.String)\l java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL \l0x0035: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r0 I:?[OBJECT, ARRAY][] A[D('classDivision' java.lang.String[])])\l  (r7 I:?[int, short, byte, char])\l \l0x0037: CONST  (r5 I:?[int, float, short, byte, char]) = (35 ?[int, float, short, byte, char]) \l0x0039: INVOKE  (r1 I:int) = \l  (r3 I:java.lang.String A[D('tagAndIdDivision' java.lang.String)])\l  (r5 I:int)\l java.lang.String.indexOf(int):int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|0x003d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('idPrefixIndex' int)]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x005d \l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|0x003f: INVOKE  (r5 I:java.lang.String) = \l  (r3 I:java.lang.String A[D('tagAndIdDivision' java.lang.String)])\l  (r7 I:int)\l  (r1 I:int A[D('idPrefixIndex' int)])\l java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0043: INVOKE  \l  (r11 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l  (r5 I:java.lang.String)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.setTargetTagName(java.lang.String):void type: VIRTUAL \l0x0046: ARITH  (r5 I:int) = (r1 I:int A[D('idPrefixIndex' int)]) + (1 int) \l0x0048: INVOKE  (r5 I:java.lang.String) = \l  (r3 I:java.lang.String A[D('tagAndIdDivision' java.lang.String)])\l  (r5 I:int)\l java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x004c: INVOKE  \l  (r11 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l  (r5 I:java.lang.String)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.setTargetId(java.lang.String):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x004f|0x004f: ARRAY_LENGTH  (r5 I:int) = (r0 I:?[] A[D('classDivision' java.lang.String[])]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0050|0x0050: IF  (r5 I:?[int, byte, short, char]) \<= (r8 I:?[int, byte, short, char])  \-\> B:2:0x000b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|0x0052: ARRAY_LENGTH  (r5 I:int) = (r0 I:?[] A[D('classDivision' java.lang.String[])]) \l0x0053: INVOKE  (r5 I:java.lang.Object[]) = \l  (r0 I:java.lang.Object[] A[D('classDivision' java.lang.String[])])\l  (r8 I:int)\l  (r5 I:int)\l java.util.Arrays.copyOfRange(java.lang.Object[], int, int):java.lang.Object[] type: STATIC \l0x0057: CHECK_CAST  (r5 I:java.lang.String[]) = (java.lang.String[]) (r5 I:?[OBJECT, ARRAY]) \l0x0059: INVOKE  \l  (r11 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l  (r5 I:java.lang.String[])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.setTargetClasses(java.lang.String[]):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x005d|0x005d: INVOKE  \l  (r11 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l  (r3 I:java.lang.String A[D('tagAndIdDivision' java.lang.String)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.setTargetTagName(java.lang.String):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.text.webvtt.CssParser.applySelectorToStyle((r10 'this' I:com.google.android.exoplayer2.text.webvtt.CssParser A[IMMUTABLE_TYPE, THIS]), (r11 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.lang.String A[D('selector' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001e\-0x002f: r2 'matcher' java.util.regex.Matcher\l  0x0035\-0x0060: r0 'classDivision' java.lang.String[]\l  0x003d\-0x0060: r1 'idPrefixIndex' int\l  0x0037\-0x0060: r3 'tagAndIdDivision' java.lang.String\l  0x0012\-0x0060: r4 'voiceStartIndex' int\l  ?\-0x0060: r11 'style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle\l  ?\-0x0060: r12 'selector' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_2;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_2;
Node_15 -> Node_12;
}

