digraph "CFG forcom.google.android.exoplayer2.text.webvtt.CssParser.skipWhitespaceAndComments(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = true\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'skipping' boolean) = (r0v0 'skipping' boolean), (r0v2 'skipping' boolean) binds: [B:0:0x0000, B:10:0x0001] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:10:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r2.bytesLeft() \<= 0) goto L_0x0019\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r0 == false) goto L_0x0019\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if (maybeSkipWhitespace(r2) != false) goto L_0x0015\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f}"];
Node_7 [shape=record,label="{7\:\ 0x0013|if (maybeSkipComment(r2) == false) goto L_0x0017\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|r0 = true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|r0 = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0001|LOOP_END\lSYNTHETIC\lPHI: r0 \l  PHI: (r0v2 'skipping' boolean) = (r0v3 'skipping' boolean), (r0v4 'skipping' boolean) binds: [B:13:0x0001, B:14:0x0001] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:10:0x0001\l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0001|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0001|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{static void com.google.android.exoplayer2.text.webvtt.CssParser.skipWhitespaceAndComments((r2v0 'input' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_13;
Node_9 -> Node_14;
Node_10 -> Node_1;
Node_11 -> Node_15;
Node_12 -> Node_16;
Node_13 -> Node_10;
Node_14 -> Node_10;
}

