digraph "CFG forcom.google.android.exoplayer2.text.webvtt.CssParser.maybeSkipComment(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, short, byte, char]) = (47 ?[int, float, short, byte, char]) \l0x0002: CONST  (r6 I:?[int, float, short, byte, char]) = (42 ?[int, float, short, byte, char]) \l0x0004: INVOKE  (r2 I:int) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('input' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0008: INVOKE  (r1 I:int) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('input' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x000c: IGET  (r0 I:byte[]) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('input' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x000e: ARITH  (r5 I:int) = (r2 I:int A[D('position' int)]) + (2 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r5 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char] A[D('limit' int)])  \-\> B:18:0x0041 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: ARITH  (r3 I:int) = (r2 I:int A[D('position' int)]) + (1 int) \l0x0014: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char] A[D('position' int)])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0040 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: ARITH  (r2 I:int) = (r3 I:int A[D('position' int)]) + (1 int) \l0x001a: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char] A[D('position' int)])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0041 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: ARITH  (r5 I:int) = (r3 I:int A[D('position' int)]) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IF  (r5 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char] A[D('limit' int)])  \-\> B:15:0x0034 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: ARITH  (r2 I:int) = (r3 I:int A[D('position' int)]) + (1 int) \l0x0025: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char] A[D('position' int)])\l \l0x0027: CAST  (r4 I:char) = (char) (r5 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('skippedChar' char)]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0032 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char] A[D('position' int)])\l \l0x002c: CAST  (r5 I:char) = (char) (r5 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0032 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: ARITH  (r2 I:int A[D('position' int)]) = (r2 I:int A[D('position' int)]) + (1 int) \l0x0031: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('limit' int)]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: INVOKE  (r5 I:int) = \l  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('input' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0038: ARITH  (r5 I:int) = (r1 I:int A[D('limit' int)]) \- (r5 I:int) \l0x003a: INVOKE  \l  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('input' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x003d: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003e: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: RETURN  (r5 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0040|0x0040: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|0x0041: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.text.webvtt.CssParser.maybeSkipComment((r8 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('input' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0008\-0x0014: r2 'position' int\l  0x0014\-0x001a: r3 'position' int\l  0x001a\-0x001f: r2 'position' int\l  0x001f\-0x0025: r3 'position' int\l  0x0025\-0x0033: r2 'position' int\l  0x0028\-0x0034: r4 'skippedChar' char\l  0x0033\-0x003f: r3 'position' int\l  0x003f\-0x0040: r2 'position' int\l  0x0040\-0x0041: r3 'position' int\l  0x000e\-0x0042: r0 'data' byte[]\l  0x000c\-0x0042: r1 'limit' int\l  0x0041\-0x0042: r2 'position' int\l  ?\-0x0042: r8 'input' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_7;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_16;
}

