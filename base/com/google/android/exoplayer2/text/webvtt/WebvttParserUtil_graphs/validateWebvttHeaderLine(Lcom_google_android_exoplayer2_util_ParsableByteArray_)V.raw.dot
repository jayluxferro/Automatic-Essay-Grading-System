digraph "CFG forcom.google.android.exoplayer2.text.webvtt.WebvttParserUtil.validateWebvttHeaderLine(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('input' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readLine():java.lang.String type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('line' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: SGET  (r1 I:java.util.regex.Pattern) =  com.google.android.exoplayer2.text.webvtt.WebvttParserUtil.HEADER java.util.regex.Pattern \l0x0008: INVOKE  (r1 I:java.util.regex.Matcher) = \l  (r1 I:java.util.regex.Pattern)\l  (r0 I:java.lang.CharSequence A[D('line' java.lang.String)])\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x000c: INVOKE  (r1 I:boolean) = (r1 I:java.util.regex.Matcher) java.util.regex.Matcher.matches():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.text.SubtitleDecoderException) =  com.google.android.exoplayer2.text.SubtitleDecoderException \l0x0014: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0016: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0019: CONST_STR  (r3 I:java.lang.String) =  \"Expected WEBVTT. Got \" \l0x001b: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001f: INVOKE  (r2 I:java.lang.StringBuilder) = \l  (r2 I:java.lang.StringBuilder)\l  (r0 I:java.lang.String A[D('line' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0023: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0027: INVOKE  \l  (r1 I:com.google.android.exoplayer2.text.SubtitleDecoderException)\l  (r2 I:java.lang.String)\l com.google.android.exoplayer2.text.SubtitleDecoderException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: RETURN   \l}"];
MethodNode[shape=record,label="{public static void com.google.android.exoplayer2.text.webvtt.WebvttParserUtil.validateWebvttHeaderLine((r4 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('input' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0004\-0x002b: r0 'line' java.lang.String\l  ?\-0x002b: r4 'input' com.google.android.exoplayer2.util.ParsableByteArray\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.text.SubtitleDecoderException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
}

