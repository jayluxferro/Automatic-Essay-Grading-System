digraph "CFG forcom.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getSpecificityScore(Ljava\/lang\/String;Ljava\/lang\/String;[Ljava\/lang\/String;Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r2 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.targetId java.lang.String \l0x0003: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String) java.lang.String.isEmpty():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0029 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r2 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.targetTag java.lang.String \l0x000b: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String) java.lang.String.isEmpty():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0029 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IGET  (r2 I:java.util.List\<java.lang.String\>) = \l  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.targetClasses java.util.List \l0x0013: INVOKE  (r2 I:boolean) = (r2 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0029 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IGET  (r2 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.targetVoice java.lang.String \l0x001b: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String) java.lang.String.isEmpty():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0029 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: INVOKE  (r2 I:boolean) = (r6 I:java.lang.String A[D('tag' java.lang.String)]) java.lang.String.isEmpty():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0028 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: RETURN  (r1 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002a: IGET  (r2 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.targetId java.lang.String \l0x002c: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x002e: INVOKE  (r0 I:int A[D('score' int)]) = \l  (r0 I:int A[D('score' int)])\l  (r2 I:java.lang.String)\l  (r5 I:java.lang.String A[D('id' java.lang.String)])\l  (r3 I:int)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.updateScoreForMatch(int, java.lang.String, java.lang.String, int):int type: STATIC \l0x0032: IGET  (r2 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.targetTag java.lang.String \l0x0034: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0035: INVOKE  (r0 I:int A[D('score' int)]) = \l  (r0 I:int A[D('score' int)])\l  (r2 I:java.lang.String)\l  (r6 I:java.lang.String A[D('tag' java.lang.String)])\l  (r3 I:int)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.updateScoreForMatch(int, java.lang.String, java.lang.String, int):int type: STATIC \l0x0039: IGET  (r2 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.targetVoice java.lang.String \l0x003b: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x003c: INVOKE  (r0 I:int A[D('score' int)]) = \l  (r0 I:int A[D('score' int)])\l  (r2 I:java.lang.String)\l  (r8 I:java.lang.String A[D('voice' java.lang.String)])\l  (r3 I:int)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.updateScoreForMatch(int, java.lang.String, java.lang.String, int):int type: STATIC \l0x0040: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('score' int)]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0028 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0043|0x0043: INVOKE  (r2 I:java.util.List) = \l  (r7 I:java.lang.Object[] A[D('classes' java.lang.String[])])\l java.util.Arrays.asList(java.lang.Object[]):java.util.List type: STATIC \l0x0047: IGET  (r3 I:java.util.List\<java.lang.String\>) = \l  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.targetClasses java.util.List \l0x0049: INVOKE  (r2 I:boolean) = (r2 I:java.util.List), (r3 I:java.util.Collection) java.util.List.containsAll(java.util.Collection):boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|0x004d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0028 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|0x004f: IGET  (r1 I:java.util.List\<java.lang.String\>) = \l  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.targetClasses java.util.List \l0x0051: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0055: ARITH  (r1 I:int) = (r1 I:int) * (4 int) \l0x0057: ARITH  (r0 I:int A[D('score' int)]) = (r0 I:int A[D('score' int)]) + (r1 I:int) \l0x0058: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('score' int)])\l \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getSpecificityScore((r4 'this' I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[D('id' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[D('tag' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String[] A[D('classes' java.lang.String[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[D('voice' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x002a\-0x0059: r0 'score' int\l  ?\-0x0059: r5 'id' java.lang.String\l  ?\-0x0059: r6 'tag' java.lang.String\l  ?\-0x0059: r7 'classes' java.lang.String[]\l  ?\-0x0059: r8 'voice' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_11;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_11;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_11;
}

