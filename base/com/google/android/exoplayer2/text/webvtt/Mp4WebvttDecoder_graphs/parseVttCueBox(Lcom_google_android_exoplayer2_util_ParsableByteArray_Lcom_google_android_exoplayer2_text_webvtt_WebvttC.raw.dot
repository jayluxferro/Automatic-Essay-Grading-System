digraph "CFG forcom.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.parseVttCueBox(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;Lcom\/google\/android\/exoplayer2\/text\/webvtt\/WebvttCue$Builder;I)Lcom\/google\/android\/exoplayer2\/text\/Cue;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r8 I:com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder A[D('builder' com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder)])\l com.google.android.exoplayer2.text.webvtt.WebvttCue.Builder.reset():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r9 I:?[int, byte, short, char] A[D('remainingCueBoxBytes' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0045 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST  (r4 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r9 I:?[int, byte, short, char] A[D('remainingCueBoxBytes' int)]) \>= (r4 I:?[int, byte, short, char])  \-\> B:6:0x0011 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r4 I:com.google.android.exoplayer2.text.SubtitleDecoderException) =  com.google.android.exoplayer2.text.SubtitleDecoderException \l0x000b: CONST_STR  (r5 I:java.lang.String) =  \"Incomplete vtt cue box header found.\" \l0x000d: INVOKE  \l  (r4 I:com.google.android.exoplayer2.text.SubtitleDecoderException)\l  (r5 I:java.lang.String)\l com.google.android.exoplayer2.text.SubtitleDecoderException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: INVOKE  (r1 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sampleData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0015: INVOKE  (r2 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sampleData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0019: ARITH  (r9 I:int A[D('remainingCueBoxBytes' int)]) = (r9 I:int A[D('remainingCueBoxBytes' int)]) + (\-8 int) \l0x001b: ARITH  (r3 I:int) = (r1 I:int A[D('boxSize' int)]) + (\-8 int) \l0x001d: NEW_INSTANCE  (r0 I:java.lang.String) =  java.lang.String \l0x001f: IGET  (r4 I:byte[]) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sampleData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0021: INVOKE  (r5 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sampleData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0025: INVOKE  \l  (r0 I:java.lang.String)\l  (r4 I:byte[])\l  (r5 I:int)\l  (r3 I:int A[D('payloadLength' int)])\l java.lang.String.\<init\>(byte[], int, int):void type: DIRECT \l0x0028: INVOKE  \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sampleData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r3 I:int A[D('payloadLength' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x002b: ARITH  (r9 I:int A[D('remainingCueBoxBytes' int)]) = (r9 I:int A[D('remainingCueBoxBytes' int)]) \- (r3 I:int A[D('payloadLength' int)]) \l0x002c: SGET  (r4 I:int) =  com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.TYPE_sttg int \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('boxType' int)]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0034 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: INVOKE  \l  (r0 I:java.lang.String A[D('boxPayload' java.lang.String)])\l  (r8 I:com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder A[D('builder' com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder)])\l com.google.android.exoplayer2.text.webvtt.WebvttCueParser.parseCueSettingsList(java.lang.String, com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder):void type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: SGET  (r4 I:int) =  com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.TYPE_payl int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('boxType' int)]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0003 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0039: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.String A[D('boxPayload' java.lang.String)]) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x003d: INVOKE  (r6 I:java.util.List) =  java.util.Collections.emptyList():java.util.List type: STATIC \l0x0041: INVOKE  \l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r8 I:com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder A[D('builder' com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder)])\l  (r6 I:java.util.List)\l com.google.android.exoplayer2.text.webvtt.WebvttCueParser.parseCueText(java.lang.String, java.lang.String, com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder, java.util.List):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|0x0045: INVOKE  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCue) = \l  (r8 I:com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder A[D('builder' com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder)])\l com.google.android.exoplayer2.text.webvtt.WebvttCue.Builder.build():com.google.android.exoplayer2.text.webvtt.WebvttCue type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|0x0049: RETURN  (r4 I:com.google.android.exoplayer2.text.Cue) \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.text.Cue com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.parseVttCueBox((r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sampleData' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder A[D('builder' com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('remainingCueBoxBytes' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0028\-0x0045: r0 'boxPayload' java.lang.String\l  0x0015\-0x0045: r1 'boxSize' int\l  0x0019\-0x0045: r2 'boxType' int\l  0x001d\-0x0045: r3 'payloadLength' int\l  ?\-0x0049: r7 'sampleData' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0049: r8 'builder' com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder\l  ?\-0x0049: r9 'remainingCueBoxBytes' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.text.SubtitleDecoderException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_1;
Node_12 -> Node_13;
}

