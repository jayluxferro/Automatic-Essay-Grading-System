digraph "CFG forcom.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.decode([BIZ)Lcom\/google\/android\/exoplayer2\/text\/webvtt\/Mp4WebvttSubtitle;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder)\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.sampleData com.google.android.exoplayer2.util.ParsableByteArray \l0x0002: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r7 I:byte[] A[D('bytes' byte[])])\l  (r8 I:int A[D('length' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.reset(byte[], int):void type: VIRTUAL \l0x0005: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0007: INVOKE  (r2 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder)\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.sampleData com.google.android.exoplayer2.util.ParsableByteArray \l0x000c: INVOKE  (r3 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x004a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder)\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.sampleData com.google.android.exoplayer2.util.ParsableByteArray \l0x0014: INVOKE  (r3 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x0018: CONST  (r4 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.text.SubtitleDecoderException) =  com.google.android.exoplayer2.text.SubtitleDecoderException \l0x001e: CONST_STR  (r4 I:java.lang.String) =  \"Incomplete Mp4Webvtt Top Level box header found.\" \l0x0020: INVOKE  \l  (r3 I:com.google.android.exoplayer2.text.SubtitleDecoderException)\l  (r4 I:java.lang.String)\l com.google.android.exoplayer2.text.SubtitleDecoderException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder)\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.sampleData com.google.android.exoplayer2.util.ParsableByteArray \l0x0026: INVOKE  (r0 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x002a: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder)\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.sampleData com.google.android.exoplayer2.util.ParsableByteArray \l0x002c: INVOKE  (r1 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0030: SGET  (r3 I:int) =  com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.TYPE_vttc int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('boxType' int)]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0042 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder)\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.sampleData com.google.android.exoplayer2.util.ParsableByteArray \l0x0036: IGET  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder) = \l  (r6 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder)\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.builder com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder \l0x0038: ARITH  (r5 I:int) = (r0 I:int A[D('boxSize' int)]) + (\-8 int) \l0x003a: INVOKE  (r3 I:com.google.android.exoplayer2.text.Cue) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r4 I:com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder)\l  (r5 I:int)\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.parseVttCueBox(com.google.android.exoplayer2.util.ParsableByteArray, com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder, int):com.google.android.exoplayer2.text.Cue type: STATIC \l0x003e: INVOKE  \l  (r2 I:java.util.List A[D('resultingCueList' java.util.List\<com.google.android.exoplayer2.text.Cue\>)])\l  (r3 I:java.lang.Object)\l java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|0x0042: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder)\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.sampleData com.google.android.exoplayer2.util.ParsableByteArray \l0x0044: ARITH  (r4 I:int) = (r0 I:int A[D('boxSize' int)]) + (\-8 int) \l0x0046: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|0x004a: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle) =  com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle \l0x004c: INVOKE  \l  (r3 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle)\l  (r2 I:java.util.List A[D('resultingCueList' java.util.List\<com.google.android.exoplayer2.text.Cue\>)])\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle.\<init\>(java.util.List):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x004f|0x004f: RETURN  \l  (r3 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle)\l \l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.decode((r6 'this' I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder A[IMMUTABLE_TYPE, THIS]), (r7 I:byte[] A[D('bytes' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('reset' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x002a\-0x004a: r0 'boxSize' int\l  0x0030\-0x004a: r1 'boxType' int\l  0x000a\-0x004f: r2 'resultingCueList' java.util.List\<com.google.android.exoplayer2.text.Cue\>\l  ?\-0x004f: r7 'bytes' byte[]\l  ?\-0x004f: r8 'length' int\l  ?\-0x004f: r9 'reset' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.text.SubtitleDecoderException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_1;
Node_10 -> Node_1;
Node_11 -> Node_12;
}

