digraph "CFG forcom.google.android.exoplayer2.text.webvtt.WebvttCueParser.parseCue(Ljava\/lang\/String;Ljava\/util\/regex\/Matcher;Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;Lcom\/google\/android\/exoplayer2\/text\/webvtt\/WebvttCue$Builder;Ljava\/lang\/StringBuilder;Ljava\/util\/List;)Z" {
subgraph cluster_Region_1024057230 {
label = "R(1:(5:2|3|(2:4|(1:14)(2:(1:10)(0)|11))|14|20))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1899268542 {
label = "Try: R(5:2|3|(2:4|(1:14)(2:(1:10)(0)|11))|14|20) catches: R(2:13|19)";
node [shape=record,color=blue];
subgraph cluster_Region_1514605553 {
label = "R(5:2|3|(2:4|(1:14)(2:(1:10)(0)|11))|14|20)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ NumberFormatException \-\> 0x0045 \}\lSplitter:B:1:0x0003\l|r11.setStartTime(com.google.android.exoplayer2.text.webvtt.WebvttParserUtil.parseTimestampUs(r9.group(1))).setEndTime(com.google.android.exoplayer2.text.webvtt.WebvttParserUtil.parseTimestampUs(r9.group(2)))     \/\/ Catch:\{ NumberFormatException \-\> 0x0045 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|parseCueSettingsList(r9.group(3), r11)\lr12.setLength(0)\l}"];
subgraph cluster_LoopRegion_105892055 {
label = "LOOP:0: (2:4|(1:14)(2:(1:10)(0)|11))";
node [shape=record,color=blue];
subgraph cluster_Region_682255746 {
label = "R(2:4|(1:14)(2:(1:10)(0)|11))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0026|LOOP_START\lLOOP:0: B:4:0x0026\-\>B:11:0x003d\l|java.lang.String java.lang.String r1 = r10.readLine()\l}"];
subgraph cluster_IfRegion_1299985348 {
label = "IF [B:5:0x002a, B:7:0x0030] THEN: R(1:14) ELSE: R(2:(1:10)(0)|11)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002a|if (r1 == null) goto L_0x0064\l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|ADDED_TO_REGION\l|if (r1.isEmpty() == true) goto L_0x0064\l}"];
subgraph cluster_Region_1976144447 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0064|EDGE_INSN: B:15:0x0064\-\>B:14:0x0064 ?: BREAK  \lEDGE_INSN: B:16:0x0064\-\>B:14:0x0064 ?: BREAK  \l|parseCueText(r8, r12.toString(), r11, r13)\l}"];
}
subgraph cluster_Region_1385157627 {
label = "R(2:(1:10)(0)|11)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_551918657 {
label = "IF [B:9:0x0036] THEN: R(1:10) ELSE: R(0)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0036|if (r12.length() \> 0) goto L_0x0038\l}"];
subgraph cluster_Region_1109328687 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0038|r12.append(\"n\")\l}"];
}
subgraph cluster_Region_980312779 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_11 [shape=record,label="{11\:\ 0x003d|LOOP_END\lLOOP:0: B:4:0x0026\-\>B:11:0x003d\l|r12.append(r1.trim())\l}"];
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x0064|EDGE_INSN: B:15:0x0064\-\>B:14:0x0064 ?: BREAK  \lEDGE_INSN: B:16:0x0064\-\>B:14:0x0064 ?: BREAK  \l|parseCueText(r8, r12.toString(), r11, r13)\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
subgraph cluster_Region_51333075 {
label = "R(2:13|19) | ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0046|android.util.Log.w(TAG, \"Skipping cue with bad header: \" + r9.group())\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
}
subgraph cluster_Region_51333075 {
label = "R(2:13|19) | ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0046|android.util.Log.w(TAG, \"Skipping cue with bad header: \" + r9.group())\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002c}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0032}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0045|ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\lSplitter:B:1:0x0003\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0064|SYNTHETIC\lEDGE_INSN: B:15:0x0064\-\>B:14:0x0064 ?: BREAK  \l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0064|SYNTHETIC\lADDED_TO_REGION\lEDGE_INSN: B:16:0x0064\-\>B:14:0x0064 ?: BREAK  \l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003d|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.text.webvtt.WebvttCueParser.parseCue((r8v0 'id' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'cueHeaderMatcher' java.util.regex.Matcher A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'webvttData' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'builder' com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'textBuilder' java.lang.StringBuilder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'styles' java.util.List\<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/util\/regex\/Matcher;, Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;, Lcom\/google\/android\/exoplayer2\/text\/webvtt\/WebvttCue$Builder;, Ljava\/lang\/StringBuilder;, Ljava\/util\/List, \<, Lcom\/google\/android\/exoplayer2\/text\/webvtt\/WebvttCssStyle;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_14 -> Node_20;
Node_9 -> Node_10;
Node_9 -> Node_18[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_4;
Node_14 -> Node_20;
Node_13 -> Node_19;
Node_13 -> Node_19;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_12;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_12 -> Node_13;
Node_15 -> Node_14;
Node_16 -> Node_14;
Node_17 -> Node_11;
Node_18 -> Node_11;
}

