digraph "CFG forcom.google.android.exoplayer2.text.webvtt.WebvttCueParser.parseCueText(Ljava\/lang\/String;Ljava\/lang\/String;Lcom\/google\/android\/exoplayer2\/text\/webvtt\/WebvttCue$Builder;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r13 I:android.text.SpannableStringBuilder) =  android.text.SpannableStringBuilder \l0x0002: INVOKE  (r13 I:android.text.SpannableStringBuilder) android.text.SpannableStringBuilder.\<init\>():void type: DIRECT \l0x0005: NEW_INSTANCE  (r15 I:java.util.Stack) =  java.util.Stack \l0x0007: INVOKE  (r15 I:java.util.Stack) java.util.Stack.\<init\>():void type: DIRECT \l0x000a: NEW_INSTANCE  (r10 I:java.util.ArrayList) =  java.util.ArrayList \l0x000c: INVOKE  (r10 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000f: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: INVOKE  (r17 I:int) = (r20 I:java.lang.String A[D('markup' java.lang.String)]) java.lang.String.length():int type: VIRTUAL \l0x0014: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: IF  (r9 I:?[int, byte, short, char] A[D('pos' int)]) \>= (r0 I:?[int, byte, short, char])  \-\> B:50:0x0122 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('markup' java.lang.String)]) \l0x001a: INVOKE  (r3 I:char) = (r0 I:java.lang.String), (r9 I:int A[D('pos' int)]) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('curr' char)])\l k:[38, 60] t:[0x00c9, 0x0027] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: INVOKE  \l  (r13 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r3 I:char A[D('curr' char)])\l android.text.SpannableStringBuilder.append(char):android.text.SpannableStringBuilder type: VIRTUAL \l0x0024: ARITH  (r9 I:int A[D('pos' int)]) = (r9 I:int A[D('pos' int)]) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: ARITH  (r17 I:int) = (r9 I:int A[D('pos' int)]) + (1 int) \l0x0029: INVOKE  (r18 I:int) = (r20 I:java.lang.String A[D('markup' java.lang.String)]) java.lang.String.length():int type: VIRTUAL \l0x002d: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|0x0031: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:9:0x0036 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|0x0033: ARITH  (r9 I:int A[D('pos' int)]) = (r9 I:int A[D('pos' int)]) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pos' int)])\l \l0x0037: ARITH  (r17 I:int) = (r8 I:int A[D('ltPos' int)]) + (1 int) \l0x0039: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('markup' java.lang.String)]) \l0x003b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003d: INVOKE  (r17 I:char) = (r0 I:java.lang.String), (r1 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0041: CONST  (r18 I:?[int, float, short, byte, char]) = (47 ?[int, float, short, byte, char]) \l0x0043: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0045: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0047|0x0047: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00ac \l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|0x0049: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|0x004a: ARITH  (r17 I:int) = (r8 I:int A[D('ltPos' int)]) + (1 int) \l0x004c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('markup' java.lang.String)]) \l0x004e: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0050: INVOKE  (r9 I:int A[D('pos' int)]) = (r0 I:java.lang.String), (r1 I:int) com.google.android.exoplayer2.text.webvtt.WebvttCueParser.findEndOfTag(java.lang.String, int):int type: STATIC \l0x0054: ARITH  (r17 I:int) = (r9 I:int A[D('pos' int)]) + (\-2 int) \l0x0056: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('markup' java.lang.String)]) \l0x0058: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005a: INVOKE  (r17 I:char) = (r0 I:java.lang.String), (r1 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x005e: CONST  (r18 I:?[int, float, short, byte, char]) = (47 ?[int, float, short, byte, char]) \l0x0060: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0062: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|0x0064: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00ae \l}"];
Node_14 [shape=record,label="{14\:\ 0x0066|0x0066: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0067|0x0067: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isClosingTag' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00b0 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|0x0069: CONST  (r17 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x006b|0x006b: ARITH  (r18 I:int) = (r8 I:int A[D('ltPos' int)]) + (r17 I:int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x006d|0x006d: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isVoidTag' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00b3 \l}"];
Node_19 [shape=record,label="{19\:\ 0x006f|0x006f: ARITH  (r17 I:int) = (r9 I:int A[D('pos' int)]) + (\-2 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0071|0x0071: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('markup' java.lang.String)]) \l0x0073: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0075: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0077: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:int), (r2 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x007b: INVOKE  (r16 I:java.lang.String) = \l  (r5 I:java.lang.String A[D('fullTagExpression' java.lang.String)])\l com.google.android.exoplayer2.text.webvtt.WebvttCueParser.getTagName(java.lang.String):java.lang.String type: STATIC \l}"];
Node_21 [shape=record,label="{21\:\ 0x007f|0x007f: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tagName' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0010 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0081|0x0081: INVOKE  (r17 I:boolean) = (r16 I:java.lang.String A[D('tagName' java.lang.String)]) com.google.android.exoplayer2.text.webvtt.WebvttCueParser.isSupportedTag(java.lang.String):boolean type: STATIC \l}"];
Node_23 [shape=record,label="{23\:\ 0x0085|0x0085: IF  (r17 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0010 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0087|0x0087: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isClosingTag' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x00b6 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0089|0x0089: INVOKE  (r17 I:boolean) = \l  (r15 I:java.util.Stack A[D('startTagStack' java.util.Stack\<com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag\>)])\l java.util.Stack.isEmpty():boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x008d|0x008d: IF  (r17 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0010 \l}"];
Node_27 [shape=record,label="{27\:\ 0x008f|0x008f: INVOKE  (r14 I:java.lang.Object) = \l  (r15 I:java.util.Stack A[D('startTagStack' java.util.Stack\<com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag\>)])\l java.util.Stack.pop():java.lang.Object type: VIRTUAL \l0x0093: CHECK_CAST  (r14 I:com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag) = (com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag) (r14 I:?[OBJECT, ARRAY]) \l0x0095: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x0097: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('styles' java.util.List\<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle\>)])\l \l0x0099: INVOKE  \l  (r0 I:java.lang.String)\l  (r14 I:com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag A[D('startTag' com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag)])\l  (r13 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r1 I:java.util.List)\l  (r10 I:java.util.List A[D('scratchStyleMatches' java.util.List\<com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StyleMatch\>)])\l com.google.android.exoplayer2.text.webvtt.WebvttCueParser.applySpansForTag(java.lang.String, com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag, android.text.SpannableStringBuilder, java.util.List, java.util.List):void type: STATIC \l0x009c: IGET  (r0 I:java.lang.String) = \l  (r14 I:com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag A[D('startTag' com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag)])\l com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StartTag.name java.lang.String \l0x009e: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00a0: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x00a2: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY] A[D('tagName' java.lang.String)]) \l0x00a4: INVOKE  (r17 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x00a8|0x00a8: IF  (r17 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0089 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00ac|0x00ac: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isClosingTag' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x00ae|0x00ae: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x00b0|0x00b0: CONST  (r17 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x00b3|0x00b3: ARITH  (r17 I:int) = (r9 I:int A[D('pos' int)]) + (\-1 int) \l}"];
Node_34 [shape=record,label="{34\:\ 0x00b6|0x00b6: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isVoidTag' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0010 \l}"];
Node_35 [shape=record,label="{35\:\ 0x00b8|0x00b8: INVOKE  (r17 I:int) = \l  (r13 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l android.text.SpannableStringBuilder.length():int type: VIRTUAL \l0x00bc: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00be: INVOKE  (r17 I:com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag) = \l  (r5 I:java.lang.String A[D('fullTagExpression' java.lang.String)])\l  (r0 I:int)\l com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StartTag.buildStartTag(java.lang.String, int):com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag type: STATIC \l0x00c2: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x00c4: INVOKE  \l  (r15 I:java.util.Stack A[D('startTagStack' java.util.Stack\<com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag\>)])\l  (r0 I:java.lang.Object)\l java.util.Stack.push(java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x00c9|0x00c9: CONST  (r17 I:?[int, float, short, byte, char]) = (59 ?[int, float, short, byte, char]) \l0x00cb: ARITH  (r18 I:int) = (r9 I:int A[D('pos' int)]) + (1 int) \l0x00cd: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('markup' java.lang.String)]) \l0x00cf: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d1: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d3: INVOKE  (r11 I:int) = (r0 I:java.lang.String), (r1 I:int), (r2 I:int) java.lang.String.indexOf(int, int):int type: VIRTUAL \l0x00d7: CONST  (r17 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x00d9: ARITH  (r18 I:int) = (r9 I:int A[D('pos' int)]) + (1 int) \l0x00db: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('markup' java.lang.String)]) \l0x00dd: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00df: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e1: INVOKE  (r12 I:int) = (r0 I:java.lang.String), (r1 I:int), (r2 I:int) java.lang.String.indexOf(int, int):int type: VIRTUAL \l0x00e5: CONST  (r17 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x00e7: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x00e9|0x00e9: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('semiColonEndIndex' int)]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x010e \l}"];
Node_38 [shape=record,label="{38\:\ 0x00eb|0x00eb: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('spaceEndIndex' int)])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x00ec|0x00ec: CONST  (r17 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x00ee: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_40 [shape=record,label="{40\:\ 0x00f0|0x00f0: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('entityEndIndex' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x011b \l}"];
Node_41 [shape=record,label="{41\:\ 0x00f2|0x00f2: ARITH  (r17 I:int) = (r9 I:int A[D('pos' int)]) + (1 int) \l0x00f4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('markup' java.lang.String)]) \l0x00f6: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00f8: INVOKE  (r17 I:java.lang.String) = \l  (r0 I:java.lang.String)\l  (r1 I:int)\l  (r4 I:int A[D('entityEndIndex' int)])\l java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x00fc: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x00fe: INVOKE  \l  (r0 I:java.lang.String)\l  (r13 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l com.google.android.exoplayer2.text.webvtt.WebvttCueParser.applyEntity(java.lang.String, android.text.SpannableStringBuilder):void type: STATIC \l}"];
Node_42 [shape=record,label="{42\:\ 0x0101|0x0101: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('entityEndIndex' int)]) != (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('spaceEndIndex' int)])  \-\> B:44:0x010a \l}"];
Node_43 [shape=record,label="{43\:\ 0x0103|0x0103: CONST_STR  (r17 I:java.lang.String) =  \" \" \l0x0105: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0107: INVOKE  \l  (r13 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.CharSequence)\l android.text.SpannableStringBuilder.append(java.lang.CharSequence):android.text.SpannableStringBuilder type: VIRTUAL \l}"];
Node_44 [shape=record,label="{44\:\ 0x010a|0x010a: ARITH  (r9 I:int A[D('pos' int)]) = (r4 I:int A[D('entityEndIndex' int)]) + (1 int) \l}"];
Node_45 [shape=record,label="{45\:\ 0x010e|0x010e: CONST  (r17 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0110: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_46 [shape=record,label="{46\:\ 0x0112|0x0112: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('spaceEndIndex' int)]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x0116 \l}"];
Node_47 [shape=record,label="{47\:\ 0x0114|0x0114: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('semiColonEndIndex' int)])\l \l}"];
Node_48 [shape=record,label="{48\:\ 0x0116|0x0116: INVOKE  (r4 I:int) = \l  (r11 I:int A[D('semiColonEndIndex' int)])\l  (r12 I:int A[D('spaceEndIndex' int)])\l java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_49 [shape=record,label="{49\:\ 0x011b|0x011b: INVOKE  \l  (r13 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r3 I:char A[D('curr' char)])\l android.text.SpannableStringBuilder.append(char):android.text.SpannableStringBuilder type: VIRTUAL \l0x011e: ARITH  (r9 I:int A[D('pos' int)]) = (r9 I:int A[D('pos' int)]) + (1 int) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0122|0x0122: INVOKE  (r17 I:boolean) = \l  (r15 I:java.util.Stack A[D('startTagStack' java.util.Stack\<com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag\>)])\l java.util.Stack.isEmpty():boolean type: VIRTUAL \l}"];
Node_51 [shape=record,label="{51\:\ 0x0126|0x0126: IF  (r17 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0138 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0128|0x0128: INVOKE  (r17 I:java.lang.Object) = \l  (r15 I:java.util.Stack A[D('startTagStack' java.util.Stack\<com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag\>)])\l java.util.Stack.pop():java.lang.Object type: VIRTUAL \l0x012c: CHECK_CAST  (r17 I:com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag) = (com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag) (r17 I:?[OBJECT, ARRAY]) \l0x012e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x0130: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0132: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('styles' java.util.List\<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle\>)])\l \l0x0134: INVOKE  \l  (r0 I:java.lang.String)\l  (r1 I:com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag)\l  (r13 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r2 I:java.util.List)\l  (r10 I:java.util.List A[D('scratchStyleMatches' java.util.List\<com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StyleMatch\>)])\l com.google.android.exoplayer2.text.webvtt.WebvttCueParser.applySpansForTag(java.lang.String, com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag, android.text.SpannableStringBuilder, java.util.List, java.util.List):void type: STATIC \l}"];
Node_53 [shape=record,label="{53\:\ 0x0138|0x0138: INVOKE  (r17 I:com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag) =  com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StartTag.buildWholeCueVirtualTag():com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag type: STATIC \l0x013c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x013e: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0140: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('styles' java.util.List\<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle\>)])\l \l0x0142: INVOKE  \l  (r0 I:java.lang.String)\l  (r1 I:com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag)\l  (r13 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r2 I:java.util.List)\l  (r10 I:java.util.List A[D('scratchStyleMatches' java.util.List\<com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StyleMatch\>)])\l com.google.android.exoplayer2.text.webvtt.WebvttCueParser.applySpansForTag(java.lang.String, com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag, android.text.SpannableStringBuilder, java.util.List, java.util.List):void type: STATIC \l0x0145: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('builder' com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder)])\l \l0x0147: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder)\l  (r13 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l com.google.android.exoplayer2.text.webvtt.WebvttCue.Builder.setText(android.text.SpannableStringBuilder):com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder type: VIRTUAL \l}"];
Node_54 [shape=record,label="{54\:\ 0x014a|0x014a: RETURN   \l}"];
MethodNode[shape=record,label="{static void com.google.android.exoplayer2.text.webvtt.WebvttCueParser.parseCueText((r19 I:java.lang.String A[D('id' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:java.lang.String A[D('markup' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder A[D('builder' com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:java.util.List\<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x007b\-0x00ac: r5 'fullTagExpression' java.lang.String\l  0x004a\-0x00ac: r6 'isClosingTag' boolean\l  0x0067\-0x00ac: r7 'isVoidTag' boolean\l  0x0095\-0x00ac: r14 'startTag' com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag\l  0x007f\-0x00ac: r16 'tagName' java.lang.String\l  0x00b6\-0x00c9: r5 'fullTagExpression' java.lang.String\l  0x00ae\-0x00c9: r6 'isClosingTag' boolean\l  0x00b0\-0x00c9: r7 'isVoidTag' boolean\l  0x0037\-0x00c9: r8 'ltPos' int\l  0x00b6\-0x00c9: r16 'tagName' java.lang.String\l  0x00ec\-0x010e: r4 'entityEndIndex' int\l  0x001e\-0x0122: r3 'curr' char\l  0x011b\-0x0122: r4 'entityEndIndex' int\l  0x00d7\-0x0122: r11 'semiColonEndIndex' int\l  0x00e5\-0x0122: r12 'spaceEndIndex' int\l  0x0010\-0x0155: r9 'pos' int\l  0x000f\-0x0155: r10 'scratchStyleMatches' java.util.List\<com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StyleMatch\>\l  0x0005\-0x0155: r13 'spannedText' android.text.SpannableStringBuilder\l  0x000a\-0x0155: r15 'startTagStack' java.util.Stack\<com.google.android.exoplayer2.text.webvtt.WebvttCueParser$StartTag\>\l  ?\-0x0155: r19 'id' java.lang.String\l  ?\-0x0155: r20 'markup' java.lang.String\l  ?\-0x0155: r21 'builder' com.google.android.exoplayer2.text.webvtt.WebvttCue$Builder\l  0x0000\-0x0155: r22 'styles' java.util.List\<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle\>\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/text\/webvtt\/WebvttCue$Builder;, Ljava\/util\/List, \<, Lcom\/google\/android\/exoplayer2\/text\/webvtt\/WebvttCssStyle;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_50;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_4 -> Node_36;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_30;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_31;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_32;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_33;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_21 -> Node_22[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_1;
Node_23 -> Node_24[style=dashed];
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_34;
Node_25 -> Node_26;
Node_26 -> Node_1;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_25;
Node_28 -> Node_1[style=dashed];
Node_30 -> Node_12;
Node_31 -> Node_15;
Node_32 -> Node_17;
Node_33 -> Node_20;
Node_34 -> Node_1;
Node_34 -> Node_35[style=dashed];
Node_35 -> Node_1;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_45;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_49;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_1;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_39;
Node_48 -> Node_39;
Node_49 -> Node_1;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_50;
Node_53 -> Node_54;
}

