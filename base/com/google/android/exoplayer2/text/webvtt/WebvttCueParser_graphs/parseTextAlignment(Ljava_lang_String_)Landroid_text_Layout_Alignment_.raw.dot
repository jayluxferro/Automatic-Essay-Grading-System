digraph "CFG forcom.google.android.exoplayer2.text.webvtt.WebvttCueParser.parseTextAlignment(Ljava\/lang\/String;)Landroid\/text\/Layout$Alignment;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: INVOKE  (r1 I:int) = (r3 I:java.lang.String A[D('s' java.lang.String)]) java.lang.String.hashCode():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[\-1364013995, \-1074341483, 100571, 3317767, 108511772, 109757538] t:[0x0039, 0x0043, 0x004d, 0x002f, 0x0057, 0x0025] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3, 4, 5] t:[0x0061, 0x0061, 0x0064, 0x0064, 0x0067, 0x0067] \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST_STR  (r0 I:java.lang.String) =  \"WebvttCueParser\" \l0x000d: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0012: CONST_STR  (r2 I:java.lang.String) =  \"Invalid alignment value: \" \l0x0014: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0018: INVOKE  (r1 I:java.lang.StringBuilder) = \l  (r1 I:java.lang.StringBuilder)\l  (r3 I:java.lang.String A[D('s' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001c: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0020: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l0x0023: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: RETURN  (r0 I:android.text.Layout$Alignment) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: CONST_STR  (r1 I:java.lang.String) =  \"start\" \l0x0027: INVOKE  (r1 I:boolean) = \l  (r3 I:java.lang.String A[D('s' java.lang.String)])\l  (r1 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0008 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: CONST_STR  (r1 I:java.lang.String) =  \"left\" \l0x0031: INVOKE  (r1 I:boolean) = \l  (r3 I:java.lang.String A[D('s' java.lang.String)])\l  (r1 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0008 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: CONST_STR  (r1 I:java.lang.String) =  \"center\" \l0x003b: INVOKE  (r1 I:boolean) = \l  (r3 I:java.lang.String A[D('s' java.lang.String)])\l  (r1 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0008 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0043|0x0043: CONST_STR  (r1 I:java.lang.String) =  \"middle\" \l0x0045: INVOKE  (r1 I:boolean) = \l  (r3 I:java.lang.String A[D('s' java.lang.String)])\l  (r1 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0049|0x0049: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0008 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|0x004b: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|0x004d: CONST_STR  (r1 I:java.lang.String) =  \"end\" \l0x004f: INVOKE  (r1 I:boolean) = \l  (r3 I:java.lang.String A[D('s' java.lang.String)])\l  (r1 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|0x0053: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0008 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|0x0055: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|0x0057: CONST_STR  (r1 I:java.lang.String) =  \"right\" \l0x0059: INVOKE  (r1 I:boolean) = \l  (r3 I:java.lang.String A[D('s' java.lang.String)])\l  (r1 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x005d|0x005d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0008 \l}"];
Node_22 [shape=record,label="{22\:\ 0x005f|0x005f: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0061|0x0061: SGET  (r0 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_NORMAL android.text.Layout$Alignment \l}"];
Node_24 [shape=record,label="{24\:\ 0x0064|0x0064: SGET  (r0 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_CENTER android.text.Layout$Alignment \l}"];
Node_25 [shape=record,label="{25\:\ 0x0067|0x0067: SGET  (r0 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_OPPOSITE android.text.Layout$Alignment \l}"];
MethodNode[shape=record,label="{private static android.text.Layout$Alignment com.google.android.exoplayer2.text.webvtt.WebvttCueParser.parseTextAlignment((r3 I:java.lang.String A[D('s' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0093: r3 's' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_1 -> Node_8;
Node_1 -> Node_11;
Node_1 -> Node_14;
Node_1 -> Node_17;
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_2 -> Node_23;
Node_2 -> Node_24;
Node_2 -> Node_25;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_2;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_2;
Node_8 -> Node_9;
Node_9 -> Node_2;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_2;
Node_11 -> Node_12;
Node_12 -> Node_2;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_2;
Node_14 -> Node_15;
Node_15 -> Node_2;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_2;
Node_17 -> Node_18;
Node_18 -> Node_2;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_2;
Node_20 -> Node_21;
Node_21 -> Node_2;
Node_21 -> Node_22[style=dashed];
Node_22 -> Node_2;
Node_23 -> Node_4;
Node_24 -> Node_4;
Node_25 -> Node_4;
}

