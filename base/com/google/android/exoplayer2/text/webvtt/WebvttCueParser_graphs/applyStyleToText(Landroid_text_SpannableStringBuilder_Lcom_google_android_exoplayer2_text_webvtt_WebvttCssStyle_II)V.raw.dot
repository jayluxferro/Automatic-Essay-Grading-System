digraph "CFG forcom.google.android.exoplayer2.text.webvtt.WebvttCueParser.applyStyleToText(Landroid\/text\/SpannableStringBuilder;Lcom\/google\/android\/exoplayer2\/text\/webvtt\/WebvttCssStyle;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, short, byte, char]) = (33 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getStyle():int type: VIRTUAL \l0x0009: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:android.text.style.StyleSpan) =  android.text.style.StyleSpan \l0x000e: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getStyle():int type: VIRTUAL \l0x0012: INVOKE  (r0 I:android.text.style.StyleSpan), (r1 I:int) android.text.style.StyleSpan.\<init\>(int):void type: DIRECT \l0x0015: INVOKE  \l  (r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r3 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: INVOKE  (r0 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.isLinethrough():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0026 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: NEW_INSTANCE  (r0 I:android.text.style.StrikethroughSpan) =  android.text.style.StrikethroughSpan \l0x0020: INVOKE  (r0 I:android.text.style.StrikethroughSpan) android.text.style.StrikethroughSpan.\<init\>():void type: DIRECT \l0x0023: INVOKE  \l  (r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r3 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: INVOKE  (r0 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.isUnderline():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0034 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: NEW_INSTANCE  (r0 I:android.text.style.UnderlineSpan) =  android.text.style.UnderlineSpan \l0x002e: INVOKE  (r0 I:android.text.style.UnderlineSpan) android.text.style.UnderlineSpan.\<init\>():void type: DIRECT \l0x0031: INVOKE  \l  (r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r3 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: INVOKE  (r0 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.hasFontColor():boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0046 \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: NEW_INSTANCE  (r0 I:android.text.style.ForegroundColorSpan) =  android.text.style.ForegroundColorSpan \l0x003c: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getFontColor():int type: VIRTUAL \l0x0040: INVOKE  (r0 I:android.text.style.ForegroundColorSpan), (r1 I:int) android.text.style.ForegroundColorSpan.\<init\>(int):void type: DIRECT \l0x0043: INVOKE  \l  (r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r3 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|0x0046: INVOKE  (r0 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.hasBackgroundColor():boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|0x004a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0058 \l}"];
Node_17 [shape=record,label="{17\:\ 0x004c|0x004c: NEW_INSTANCE  (r0 I:android.text.style.BackgroundColorSpan) =  android.text.style.BackgroundColorSpan \l0x004e: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getBackgroundColor():int type: VIRTUAL \l0x0052: INVOKE  (r0 I:android.text.style.BackgroundColorSpan), (r1 I:int) android.text.style.BackgroundColorSpan.\<init\>(int):void type: DIRECT \l0x0055: INVOKE  \l  (r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r3 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0058|0x0058: INVOKE  (r0 I:java.lang.String) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getFontFamily():java.lang.String type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x005c|0x005c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x006a \l}"];
Node_20 [shape=record,label="{20\:\ 0x005e|0x005e: NEW_INSTANCE  (r0 I:android.text.style.TypefaceSpan) =  android.text.style.TypefaceSpan \l0x0060: INVOKE  (r1 I:java.lang.String) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getFontFamily():java.lang.String type: VIRTUAL \l0x0064: INVOKE  \l  (r0 I:android.text.style.TypefaceSpan)\l  (r1 I:java.lang.String)\l android.text.style.TypefaceSpan.\<init\>(java.lang.String):void type: DIRECT \l0x0067: INVOKE  \l  (r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r3 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x006a|0x006a: INVOKE  (r0 I:android.text.Layout$Alignment) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getTextAlign():android.text.Layout$Alignment type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x006e|0x006e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x007c \l}"];
Node_23 [shape=record,label="{23\:\ 0x0070|0x0070: NEW_INSTANCE  (r0 I:android.text.style.AlignmentSpan$Standard) =  android.text.style.AlignmentSpan$Standard \l0x0072: INVOKE  (r1 I:android.text.Layout$Alignment) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getTextAlign():android.text.Layout$Alignment type: VIRTUAL \l0x0076: INVOKE  \l  (r0 I:android.text.style.AlignmentSpan$Standard)\l  (r1 I:android.text.Layout$Alignment)\l android.text.style.AlignmentSpan.Standard.\<init\>(android.text.Layout$Alignment):void type: DIRECT \l0x0079: INVOKE  \l  (r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r3 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x007c|0x007c: INVOKE  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getFontSizeUnit():int type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0080|0x0080: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3] t:[0x0084, 0x0094, 0x00a2] \l}"];
Node_27 [shape=record,label="{27\:\ 0x0084|0x0084: NEW_INSTANCE  (r0 I:android.text.style.AbsoluteSizeSpan) =  android.text.style.AbsoluteSizeSpan \l0x0086: INVOKE  (r1 I:float) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getFontSize():float type: VIRTUAL \l0x008a: CAST  (r1 I:int) = (int) (r1 I:float) \l0x008b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x008c: INVOKE  \l  (r0 I:android.text.style.AbsoluteSizeSpan)\l  (r1 I:int)\l  (r2 I:boolean)\l android.text.style.AbsoluteSizeSpan.\<init\>(int, boolean):void type: DIRECT \l0x008f: INVOKE  \l  (r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r3 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x0094|0x0094: NEW_INSTANCE  (r0 I:android.text.style.RelativeSizeSpan) =  android.text.style.RelativeSizeSpan \l0x0096: INVOKE  (r1 I:float) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getFontSize():float type: VIRTUAL \l0x009a: INVOKE  (r0 I:android.text.style.RelativeSizeSpan), (r1 I:float) android.text.style.RelativeSizeSpan.\<init\>(float):void type: DIRECT \l0x009d: INVOKE  \l  (r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r3 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00a2|0x00a2: NEW_INSTANCE  (r0 I:android.text.style.RelativeSizeSpan) =  android.text.style.RelativeSizeSpan \l0x00a4: INVOKE  (r1 I:float) = \l  (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle)])\l com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.getFontSize():float type: VIRTUAL \l0x00a8: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1120403456(0x42c80000, float:100.0) ?[int, float, short, byte, char])\l \l0x00aa: ARITH  (r1 I:float) = (r1 I:float) \/ (r2 I:float) \l0x00ab: INVOKE  (r0 I:android.text.style.RelativeSizeSpan), (r1 I:float) android.text.style.RelativeSizeSpan.\<init\>(float):void type: DIRECT \l0x00ae: INVOKE  \l  (r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder)])\l  (r0 I:java.lang.Object)\l  (r6 I:int A[D('start' int)])\l  (r7 I:int A[D('end' int)])\l  (r3 I:int)\l android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.text.webvtt.WebvttCueParser.applyStyleToText((r4 I:android.text.SpannableStringBuilder A[D('spannedText' android.text.SpannableStringBuilder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.google.android.exoplayer2.text.webvtt.WebvttCssStyle A[D('style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('start' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('end' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x00bd: r4 'spannedText' android.text.SpannableStringBuilder\l  ?\-0x00bd: r5 'style' com.google.android.exoplayer2.text.webvtt.WebvttCssStyle\l  ?\-0x00bd: r6 'start' int\l  ?\-0x00bd: r7 'end' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_25 -> Node_28;
Node_25 -> Node_29;
Node_25 -> Node_2;
Node_27 -> Node_2;
Node_28 -> Node_2;
Node_29 -> Node_2;
}

