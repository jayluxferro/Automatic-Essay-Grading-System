digraph "CFG forcom.google.android.exoplayer2.text.subrip.SubripDecoder.decode([BIZ)Lcom\/google\/android\/exoplayer2\/text\/subrip\/SubripSubtitle;" {
subgraph cluster_Region_1671322510 {
label = "R(2:0|(2:1|(2:25|26)(1:(1:(3:6|7|(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0))(1:21)))(0))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList java.util.ArrayList\<com.google.android.exoplayer2.text.Cue\> r2 = new java.util.ArrayList\<\>()\lcom.google.android.exoplayer2.util.LongArray com.google.android.exoplayer2.util.LongArray r0 = new com.google.android.exoplayer2.util.LongArray()\lcom.google.android.exoplayer2.util.ParsableByteArray com.google.android.exoplayer2.util.ParsableByteArray r8 = new com.google.android.exoplayer2.util.ParsableByteArray(r14, r15)\l}"];
subgraph cluster_LoopRegion_692759938 {
label = "LOOP:0: (2:1|(2:25|26)(1:(1:(3:6|7|(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0))(1:21)))(0)))";
node [shape=record,color=blue];
subgraph cluster_Region_541238744 {
label = "R(2:1|(2:25|26)(1:(1:(3:6|7|(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0))(1:21)))(0)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000f|LOOP_START\lLOOP:0: B:1:0x000f\-\>B:27:0x000f\l|java.lang.String java.lang.String r4 = r8.readLine()\l}"];
subgraph cluster_IfRegion_1490528045 {
label = "IF [B:2:0x0013] THEN: R(2:25|26) ELSE: R(1:(1:(3:6|7|(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0))(1:21)))(0))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0013|if (r4 == null) goto L_0x00c2\l}"];
subgraph cluster_Region_1979409759 {
label = "R(2:25|26)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x00c2|com.google.android.exoplayer2.text.Cue[] com.google.android.exoplayer2.text.Cue[] r3 = new com.google.android.exoplayer2.text.Cue[r2.size()]\lr2.toArray(r3)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00d4|RETURN\l|return new com.google.android.exoplayer2.text.subrip.SubripSubtitle(r3, r0.toArray())\l}"];
}
subgraph cluster_Region_980737681 {
label = "R(1:(1:(3:6|7|(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0))(1:21)))(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1829676426 {
label = "IF [B:4:0x0019] THEN: R(1:(3:6|7|(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0))(1:21))) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|if (r4.length() != 0) goto L_0x001b\l}"];
subgraph cluster_Region_1820067730 {
label = "R(1:(3:6|7|(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0))(1:21)))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_83771320 {
label = "Try: R(3:6|7|(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0))(1:21)) catches: R(1:20)";
node [shape=record,color=blue];
subgraph cluster_Region_1390150077 {
label = "R(3:6|7|(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0))(1:21))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ NumberFormatException \-\> 0x0074 \}\lSplitter:B:5:0x001b\l|java.lang.Integer.parseInt(r4)     \/\/ Catch:\{ NumberFormatException \-\> 0x0074 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|boolean r6 = false\ljava.lang.String java.lang.String r4 = r8.readLine()\ljava.util.regex.Matcher java.util.regex.Matcher r7 = SUBRIP_TIMING_LINE.matcher(r4)\l}"];
subgraph cluster_IfRegion_1964536180 {
label = "IF [B:8:0x002d] THEN: R(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0)) ELSE: R(1:21)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002d|if (r7.matches() == true) goto L_0x002f\l}"];
subgraph cluster_Region_952718513 {
label = "R(6:9|(1:11)|12|(2:13|(2:(1:34)|(2:(1:17)(0)|18)))|22|(1:24)(0))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002f|r0.add(parseTimecode(r7, 1))\l}"];
subgraph cluster_IfRegion_1178958288 {
label = "IF [B:10:0x0040] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0040|if (android.text.TextUtils.isEmpty(r7.group(6)) == false) goto L_0x0042\l}"];
subgraph cluster_Region_238938333 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0042|r6 = true\lr0.add(parseTimecode(r7, 6))\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x004b|PHI: r6 \l  PHI: (r6v1 'haveEndTimecode' boolean) = (r6v0 'haveEndTimecode' boolean), (r6v2 'haveEndTimecode' boolean) binds: [B:10:0x0040, B:11:0x0042] A[DONT_GENERATE, DONT_INLINE]\l|r13.textBuilder.setLength(0)\l}"];
subgraph cluster_LoopRegion_2024059928 {
label = "LOOP:1: (2:13|(2:(1:34)|(2:(1:17)(0)|18)))";
node [shape=record,color=blue];
subgraph cluster_Region_961399769 {
label = "R(2:13|(2:(1:34)|(2:(1:17)(0)|18)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0051|LOOP_START\lLOOP:1: B:13:0x0051\-\>B:18:0x006a\l|java.lang.String java.lang.String r4 = r8.readLine()\l}"];
subgraph cluster_Region_1689812427 {
label = "R(2:(1:34)|(2:(1:17)(0)|18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_49465739 {
label = "IF [B:14:0x0059] THEN: R(1:34) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0059|if (android.text.TextUtils.isEmpty(r4) != false) goto L_0x00a8\l}"];
subgraph cluster_Region_1760863833 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00a8|SYNTHETIC\lEDGE_INSN: B:34:0x00a8\-\>B:22:0x00a8 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_2054513977 {
label = "R(2:(1:17)(0)|18)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_495081216 {
label = "IF [B:16:0x0061] THEN: R(1:17) ELSE: R(0)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0061|if (r13.textBuilder.length() \> 0) goto L_0x0063\l}"];
subgraph cluster_Region_1079715036 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0063|r13.textBuilder.append(\"\<br\>\")\l}"];
}
subgraph cluster_Region_1739214649 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_18 [shape=record,label="{18\:\ 0x006a|LOOP_END\lLOOP:1: B:13:0x0051\-\>B:18:0x006a\l|r13.textBuilder.append(r4.trim())\l}"];
}
}
}
}
Node_22 [shape=record,label="{22\:\ 0x00a8|EDGE_INSN: B:34:0x00a8\-\>B:22:0x00a8 ?: BREAK  \l|r2.add(new com.google.android.exoplayer2.text.Cue(android.text.Html.fromHtml(r13.textBuilder.toString())))\l}"];
subgraph cluster_IfRegion_145333064 {
label = "IF [B:23:0x00ba] THEN: R(1:24) ELSE: R(0)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00ba|if (r6 == true) goto L_0x00bc\l}"];
subgraph cluster_Region_535728773 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x00bc|r2.add((java.lang.Object) null)\l}"];
}
subgraph cluster_Region_715254779 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_1839377343 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x008e|android.util.Log.w(TAG, \"Skipping invalid timing: \" + r4)\l}"];
}
}
}
subgraph cluster_Region_1601011839 {
label = "R(1:20) | ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0075|android.util.Log.w(TAG, \"Skipping invalid index: \" + r4)\l}"];
}
}
}
subgraph cluster_Region_630494200 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
subgraph cluster_Region_1601011839 {
label = "R(1:20) | ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0075|android.util.Log.w(TAG, \"Skipping invalid index: \" + r4)\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0015}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001b|SYNTHETIC\lSplitter:B:5:0x001b\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x005b}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0074|ExcHandler: NumberFormatException (e java.lang.NumberFormatException)\lSplitter:B:5:0x001b\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x000f|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x000f\-\>B:27:0x000f\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x00c2|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x000f|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x000f|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x000f|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x000f|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x000f|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x006a|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x006a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.text.subrip.SubripSubtitle com.google.android.exoplayer2.text.subrip.SubripDecoder.decode((r13v0 'this' com.google.android.exoplayer2.text.subrip.SubripDecoder A[IMMUTABLE_TYPE, THIS]), (r14v0 'bytes' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'length' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'reset' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_28;
Node_25 -> Node_26;
Node_4 -> Node_5;
Node_4 -> Node_29[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_19;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_21[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_34;
Node_34 -> Node_22;
Node_16 -> Node_17;
Node_16 -> Node_36[style=dashed];
Node_17 -> Node_35;
Node_18 -> Node_13;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_32[style=dashed];
Node_24 -> Node_33;
Node_21 -> Node_31;
Node_20 -> Node_30;
Node_20 -> Node_30;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_19;
Node_15 -> Node_16;
Node_19 -> Node_20;
Node_27 -> Node_1;
Node_28 -> Node_25;
Node_29 -> Node_27;
Node_30 -> Node_27;
Node_31 -> Node_27;
Node_32 -> Node_27;
Node_33 -> Node_27;
Node_35 -> Node_18;
Node_36 -> Node_18;
}

