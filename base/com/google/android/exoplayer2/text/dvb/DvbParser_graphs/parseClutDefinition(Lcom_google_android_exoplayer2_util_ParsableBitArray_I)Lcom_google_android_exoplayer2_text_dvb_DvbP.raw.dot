digraph "CFG forcom.google.android.exoplayer2.text.dvb.DvbParser.parseClutDefinition(Lcom\/google\/android\/exoplayer2\/util\/ParsableBitArray;I)Lcom\/google\/android\/exoplayer2\/text\/dvb\/DvbParser$ClutDefinition;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r20 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0004: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: INVOKE  (r11 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x000a: CONST  (r20 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x000c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x000e: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x0013: ARITH  (r17 I:int) = (r27 I:int A[D('length' int)]) + (\-2 int) \l0x0015: INVOKE  (r8 I:int[]) =  com.google.android.exoplayer2.text.dvb.DvbParser.generateDefault2BitClutEntries():int[] type: STATIC \l0x0019: INVOKE  (r9 I:int[]) =  com.google.android.exoplayer2.text.dvb.DvbParser.generateDefault4BitClutEntries():int[] type: STATIC \l0x001d: INVOKE  (r10 I:int[]) =  com.google.android.exoplayer2.text.dvb.DvbParser.generateDefault8BitClutEntries():int[] type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: IF  (r17 I:?[int, byte, short, char] A[D('remainingLength' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:16:0x014f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0023|0x0023: CONST  (r20 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0025: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0027: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0029: INVOKE  (r14 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x002d: CONST  (r20 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x002f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0031: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0033: INVOKE  (r13 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0037: ARITH  (r17 I:int A[D('remainingLength' int)]) = (r17 I:int A[D('remainingLength' int)]) + (\-2 int) \l0x0039: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r13 I:?[int, boolean, short, byte, char] A[D('entryFlags' int)]) & (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char]) \l0x003b: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x003d|0x003d: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0111 \l}"];
Node_4 [shape=record,label="{4\:\ 0x003f|0x003f: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY] A[D('clutEntries2Bit' int[])]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0040|0x0040: ARITH  (r20 I:?[int, boolean, short, byte, char]) = (r13 I:?[int, boolean, short, byte, char] A[D('entryFlags' int)]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0042|0x0042: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x011b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|0x0044: CONST  (r20 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0046: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0048: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004a: INVOKE  (r19 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x004e: CONST  (r20 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0050: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0052: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0054: INVOKE  (r12 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0058: CONST  (r20 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x005a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x005c: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005e: INVOKE  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0062: CONST  (r20 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0064: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0066: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0068: INVOKE  (r18 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x006c: ARITH  (r17 I:int A[D('remainingLength' int)]) = (r17 I:int A[D('remainingLength' int)]) + (\-4 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x006e|0x006e: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('y' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0074 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0070|0x0070: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cr' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0071: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('cb' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0072: CONST  (r18 I:?[int, float, short, byte, char] A[D('t' int)]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0074|0x0074: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('t' int)])\l \l0x0076: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0078: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007c: ARITH  (r0 I:int) = (255 int) \- (r0 I:int) \l0x007e: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0080: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0082: CAST  (r4 I:byte) = (byte) (r0 I:int) \l0x0083: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('y' int)])\l \l0x0085: CAST  (r0 I:double) = (double) (r0 I:int) \l0x0086: MOVE  (r20 I:?[long, double]) = (r0 I:?[long, double]) \l0x0088: CONST  (r22 I:?[long, double]) = \l  (4608992865850220347(0x3ff66e978d4fdf3b, double:1.402) ?[long, double])\l \l0x008d: ARITH  (r24 I:int) = (r12 I:int A[D('cr' int)]) + (\-128 int) \l0x008f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0091: CAST  (r0 I:double) = (double) (r0 I:int) \l0x0092: MOVE  (r24 I:?[long, double]) = (r0 I:?[long, double]) \l0x0094: ARITH  (r22 I:double) = (r22 I:double) * (r24 I:double) \l0x0096: ARITH  (r20 I:double) = (r20 I:double) + (r22 I:double) \l0x0098: MOVE  (r0 I:?[long, double]) = (r20 I:?[long, double]) \l0x009a: CAST  (r0 I:int) = (int) (r0 I:double) \l0x009b: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009d: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('y' int)])\l \l0x009f: CAST  (r0 I:double) = (double) (r0 I:int) \l0x00a0: MOVE  (r20 I:?[long, double]) = (r0 I:?[long, double]) \l0x00a2: CONST  (r22 I:?[long, double]) = \l  (4599871095020959050(0x3fd60663c74fb54a, double:0.34414) ?[long, double])\l \l0x00a7: ARITH  (r24 I:int) = (r6 I:int A[D('cb' int)]) + (\-128 int) \l0x00a9: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ab: CAST  (r0 I:double) = (double) (r0 I:int) \l0x00ac: MOVE  (r24 I:?[long, double]) = (r0 I:?[long, double]) \l0x00ae: ARITH  (r22 I:double) = (r22 I:double) * (r24 I:double) \l0x00b0: ARITH  (r20 I:double) = (r20 I:double) \- (r22 I:double) \l0x00b2: CONST  (r22 I:?[long, double]) = \l  (4604607620821057148(0x3fe6da3c21187e7c, double:0.71414) ?[long, double])\l \l0x00b7: ARITH  (r24 I:int) = (r12 I:int A[D('cr' int)]) + (\-128 int) \l0x00b9: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00bb: CAST  (r0 I:double) = (double) (r0 I:int) \l0x00bc: MOVE  (r24 I:?[long, double]) = (r0 I:?[long, double]) \l0x00be: ARITH  (r22 I:double) = (r22 I:double) * (r24 I:double) \l0x00c0: ARITH  (r20 I:double) = (r20 I:double) \- (r22 I:double) \l0x00c2: MOVE  (r0 I:?[long, double]) = (r20 I:?[long, double]) \l0x00c4: CAST  (r15 I:int) = (int) (r0 I:double) \l0x00c5: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('y' int)])\l \l0x00c7: CAST  (r0 I:double) = (double) (r0 I:int) \l0x00c8: MOVE  (r20 I:?[long, double]) = (r0 I:?[long, double]) \l0x00ca: CONST  (r22 I:?[long, double]) = \l  (4610659197712347431(0x3ffc5a1cac083127, double:1.772) ?[long, double])\l \l0x00cf: ARITH  (r24 I:int) = (r6 I:int A[D('cb' int)]) + (\-128 int) \l0x00d1: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d3: CAST  (r0 I:double) = (double) (r0 I:int) \l0x00d4: MOVE  (r24 I:?[long, double]) = (r0 I:?[long, double]) \l0x00d6: ARITH  (r22 I:double) = (r22 I:double) * (r24 I:double) \l0x00d8: ARITH  (r20 I:double) = (r20 I:double) + (r22 I:double) \l0x00da: MOVE  (r0 I:?[long, double]) = (r20 I:?[long, double]) \l0x00dc: CAST  (r5 I:int) = (int) (r0 I:double) \l0x00dd: CONST  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00df: CONST  (r21 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l0x00e1: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('r' int)])\l \l0x00e3: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e5: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e7: INVOKE  (r20 I:int) = (r0 I:int), (r1 I:int), (r2 I:int) com.google.android.exoplayer2.util.Util.constrainValue(int, int, int):int type: STATIC \l0x00eb: CONST  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ed: CONST  (r22 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l0x00ef: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00f1: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00f3: INVOKE  (r21 I:int) = (r15 I:int A[D('g' int)]), (r0 I:int), (r1 I:int) com.google.android.exoplayer2.util.Util.constrainValue(int, int, int):int type: STATIC \l0x00f7: CONST  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00f9: CONST  (r23 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l0x00fb: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00fd: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ff: INVOKE  (r22 I:int) = (r5 I:int A[D('b' int)]), (r0 I:int), (r1 I:int) com.google.android.exoplayer2.util.Util.constrainValue(int, int, int):int type: STATIC \l0x0103: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0105: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0107: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0109: INVOKE  (r20 I:int) = \l  (r4 I:int A[D('a' int)])\l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:int)\l com.google.android.exoplayer2.text.dvb.DvbParser.getColor(int, int, int, int):int type: STATIC \l0x010d: APUT  \l  (r7 I:?[int, float][] A[D('clutEntries' int[])])\l  (r14 I:?[int, short, byte, char] A[D('entryId' int)])\l  (r20 I:?[int, float])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0111|0x0111: ARITH  (r20 I:?[int, boolean, short, byte, char]) = (r13 I:?[int, boolean, short, byte, char] A[D('entryFlags' int)]) & (64 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0113|0x0113: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0118 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0115|0x0115: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY] A[D('clutEntries4Bit' int[])]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0118|0x0118: MOVE  (r7 I:?[OBJECT, ARRAY] A[D('clutEntries' int[])]) = (r10 I:?[OBJECT, ARRAY] A[D('clutEntries8Bit' int[])]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x011b|0x011b: CONST  (r20 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x011d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x011f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0121: INVOKE  (r20 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0125: ARITH  (r19 I:int) = (r20 I:int) \<\< (2 int) \l0x0127: CONST  (r20 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0129: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x012b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x012d: INVOKE  (r20 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0131: ARITH  (r12 I:int) = (r20 I:int) \<\< (4 int) \l0x0133: CONST  (r20 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0135: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0137: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0139: INVOKE  (r20 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x013d: ARITH  (r6 I:int) = (r20 I:int) \<\< (4 int) \l0x013f: CONST  (r20 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0141: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0143: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0145: INVOKE  (r20 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0149: ARITH  (r18 I:int) = (r20 I:int) \<\< (6 int) \l0x014b: ARITH  (r17 I:int A[D('remainingLength' int)]) = (r17 I:int A[D('remainingLength' int)]) + (\-2 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x014f|0x014f: NEW_INSTANCE  (r20 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition) =  com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition \l0x0151: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0153: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)\l  (r11 I:int A[D('clutId' int)])\l  (r8 I:int[] A[D('clutEntries2Bit' int[])])\l  (r9 I:int[] A[D('clutEntries4Bit' int[])])\l  (r10 I:int[] A[D('clutEntries8Bit' int[])])\l com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition.\<init\>(int, int[], int[], int[]):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0156|0x0156: RETURN  \l  (r20 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)\l \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition com.google.android.exoplayer2.text.dvb.DvbParser.parseClutDefinition((r26 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0083\-0x0111: r4 'a' int\l  0x00dd\-0x0111: r5 'b' int\l  0x0062\-0x0111: r6 'cb' int\l  0x0040\-0x0111: r7 'clutEntries' int[]\l  0x0058\-0x0111: r12 'cr' int\l  0x00c5\-0x0111: r15 'g' int\l  0x009d\-0x0111: r16 'r' int\l  0x006c\-0x0111: r18 't' int\l  0x004e\-0x0111: r19 'y' int\l  0x0116\-0x0118: r7 'clutEntries' int[]\l  0x013f\-0x014f: r6 'cb' int\l  0x0119\-0x014f: r7 'clutEntries' int[]\l  0x0133\-0x014f: r12 'cr' int\l  0x0037\-0x014f: r13 'entryFlags' int\l  0x002d\-0x014f: r14 'entryId' int\l  0x014b\-0x014f: r18 't' int\l  0x0127\-0x014f: r19 'y' int\l  0x0019\-0x0156: r8 'clutEntries2Bit' int[]\l  0x001d\-0x0156: r9 'clutEntries4Bit' int[]\l  0x0021\-0x0156: r10 'clutEntries8Bit' int[]\l  0x000a\-0x0156: r11 'clutId' int\l  0x0015\-0x0156: r17 'remainingLength' int\l  ?\-0x0156: r26 'data' com.google.android.exoplayer2.util.ParsableBitArray\l  ?\-0x0156: r27 'length' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_5;
Node_14 -> Node_5;
Node_15 -> Node_8;
Node_16 -> Node_17;
}

