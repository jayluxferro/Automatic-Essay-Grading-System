digraph "CFG forcom.google.android.exoplayer2.text.dvb.DvbParser.paintPixelDataSubBlocks(Lcom\/google\/android\/exoplayer2\/text\/dvb\/DvbParser$ObjectData;Lcom\/google\/android\/exoplayer2\/text\/dvb\/DvbParser$ClutDefinition;IIILandroid\/graphics\/Paint;Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('regionDepth' int)]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IGET  (r1 I:int[]) = \l  (r8 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)])\l com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition.clutEntries8Bit int[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r0 I:byte[]) = \l  (r7 I:com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData A[D('objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)])\l com.google.android.exoplayer2.text.dvb.DvbParser.ObjectData.topFieldData byte[] \l0x0007: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('regionDepth' int)])\l \l0x0008: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('horizontalAddress' int)])\l \l0x0009: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('verticalAddress' int)])\l \l0x000a: MOVE  (r5 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY] A[D('paint' android.graphics.Paint)])\l \l0x000b: MOVE  (r6 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)])\l \l0x000c: INVOKE  \l  (r0 I:byte[])\l  (r1 I:int[] A[D('clutEntries' int[])])\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:android.graphics.Paint)\l  (r6 I:android.graphics.Canvas)\l com.google.android.exoplayer2.text.dvb.DvbParser.paintPixelDataSubBlock(byte[], int[], int, int, int, android.graphics.Paint, android.graphics.Canvas):void type: STATIC \l0x000f: IGET  (r0 I:byte[]) = \l  (r7 I:com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData A[D('objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)])\l com.google.android.exoplayer2.text.dvb.DvbParser.ObjectData.bottomFieldData byte[] \l0x0011: ARITH  (r4 I:int) = (r11 I:int A[D('verticalAddress' int)]) + (1 int) \l0x0013: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('regionDepth' int)])\l \l0x0014: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('horizontalAddress' int)])\l \l0x0015: MOVE  (r5 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY] A[D('paint' android.graphics.Paint)])\l \l0x0016: MOVE  (r6 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY] A[D('canvas' android.graphics.Canvas)])\l \l0x0017: INVOKE  \l  (r0 I:byte[])\l  (r1 I:int[] A[D('clutEntries' int[])])\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:android.graphics.Paint)\l  (r6 I:android.graphics.Canvas)\l com.google.android.exoplayer2.text.dvb.DvbParser.paintPixelDataSubBlock(byte[], int[], int, int, int, android.graphics.Paint, android.graphics.Canvas):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('regionDepth' int)]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IGET  (r1 I:int[]) = \l  (r8 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)])\l com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition.clutEntries4Bit int[] \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IGET  (r1 I:int[] A[D('clutEntries' int[])]) = \l  (r8 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)])\l com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition.clutEntries2Bit int[] \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.text.dvb.DvbParser.paintPixelDataSubBlocks((r7 I:com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData A[D('objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('regionDepth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('horizontalAddress' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('verticalAddress' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:android.graphics.Paint A[D('paint' android.graphics.Paint), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.graphics.Canvas A[D('canvas' android.graphics.Canvas), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0005\-0x001b: r1 'clutEntries' int[]\l  0x0020\-0x0021: r1 'clutEntries' int[]\l  0x0023\-0x0023: r1 'clutEntries' int[]\l  ?\-0x0023: r7 'objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData\l  ?\-0x0023: r8 'clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition\l  ?\-0x0023: r9 'regionDepth' int\l  ?\-0x0023: r10 'horizontalAddress' int\l  ?\-0x0023: r11 'verticalAddress' int\l  ?\-0x0023: r12 'paint' android.graphics.Paint\l  ?\-0x0023: r13 'canvas' android.graphics.Canvas\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_3;
Node_8 -> Node_3;
}

