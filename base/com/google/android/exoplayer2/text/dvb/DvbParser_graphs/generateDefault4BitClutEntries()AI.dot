digraph "CFG forcom.google.android.exoplayer2.text.dvb.DvbParser.generateDefault4BitClutEntries()[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int[] r0 = new int[16]\lr0[0] = 0\lr1 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|LOOP_START\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:0:0x0000, B:15:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:15:0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|if (r1 \>= r0.length) goto L_0x004d\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r1 \>= 8) goto L_0x0031\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013}"];
Node_6 [shape=record,label="{6\:\ 0x0015|if ((r1 & 1) == 0) goto L_0x002b\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|r7 = 255\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|PHI: r7 \l  PHI: (r7v4 int) = (r7v3 int), (r7v5 int) binds: [B:16:0x002b, B:7:0x0017] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|if ((r1 & 2) == 0) goto L_0x002d\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|r6 = 255\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|PHI: r6 \l  PHI: (r6v4 int) = (r6v3 int), (r6v5 int) binds: [B:17:0x002d, B:10:0x001c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|if ((r1 & 4) == 0) goto L_0x002f\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|r2 = 255\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|PHI: r2 \l  PHI: (r2v14 int) = (r2v13 int), (r2v16 int) binds: [B:18:0x002f, B:13:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|r0[r1] = getColor(255, r7, r6, r2)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|LOOP_END\lLOOP:0: B:1:0x000c\-\>B:15:0x0028\l|int r1 = r1 + 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x002b|r7 = 0\l}"];
Node_17 [shape=record,label="{17\:\ 0x002d|r6 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x002f|r2 = 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x0031}"];
Node_20 [shape=record,label="{20\:\ 0x0033|if ((r1 & 1) == 0) goto L_0x0047\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|r7 = 127\l}"];
Node_22 [shape=record,label="{22\:\ 0x0036|PHI: r7 \l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:29:0x0047, B:21:0x0035] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0038|if ((r1 & 2) == 0) goto L_0x0049\l}"];
Node_24 [shape=record,label="{24\:\ 0x003a|r6 = 127\l}"];
Node_25 [shape=record,label="{25\:\ 0x003b|PHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:30:0x0049, B:24:0x003a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x003d|if ((r1 & 4) == 0) goto L_0x004b\l}"];
Node_27 [shape=record,label="{27\:\ 0x003f|r2 = 127\l}"];
Node_28 [shape=record,label="{28\:\ 0x0040|PHI: r2 \l  PHI: (r2v7 int) = (r2v6 int), (r2v9 int) binds: [B:31:0x004b, B:27:0x003f] A[DONT_GENERATE, DONT_INLINE]\l|r0[r1] = getColor(255, r7, r6, r2)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0047|r7 = 0\l}"];
Node_30 [shape=record,label="{30\:\ 0x0049|r6 = 0\l}"];
Node_31 [shape=record,label="{31\:\ 0x004b|r2 = 0\l}"];
Node_32 [shape=record,label="{32\:\ 0x004d|RETURN\l|return r0\l}"];
Node_33 [shape=record,label="{33\:\ 0x004d|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0028|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0028|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static int[] com.google.android.exoplayer2.text.dvb.DvbParser.generateDefault4BitClutEntries() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_33;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_34;
Node_15 -> Node_1;
Node_16 -> Node_8;
Node_17 -> Node_11;
Node_18 -> Node_14;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_29;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_30;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_28;
Node_28 -> Node_35;
Node_29 -> Node_22;
Node_30 -> Node_25;
Node_31 -> Node_28;
Node_33 -> Node_32;
Node_34 -> Node_15;
Node_35 -> Node_15;
}

