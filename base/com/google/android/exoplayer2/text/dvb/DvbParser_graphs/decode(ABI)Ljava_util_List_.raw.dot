digraph "CFG forcom.google.android.exoplayer2.text.dvb.DvbParser.decode([BI)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r23 I:com.google.android.exoplayer2.util.ParsableBitArray) =  com.google.android.exoplayer2.util.ParsableBitArray \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r35 I:?[OBJECT, ARRAY] A[D('data' byte[])]) \l0x0006: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r36 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('limit' int)])\l \l0x0008: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:byte[])\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.\<init\>(byte[], int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: INVOKE  (r5 I:int) = \l  (r23 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('dataBitArray' com.google.android.exoplayer2.util.ParsableBitArray)])\l com.google.android.exoplayer2.util.ParsableBitArray.bitsLeft():int type: VIRTUAL \l0x000f: CONST  (r6 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: IF  (r5 I:?[int, byte, short, char]) \< (r6 I:?[int, byte, short, char])  \-\> B:6:0x0029 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: CONST  (r5 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0015: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('dataBitArray' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0017: INVOKE  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x001b: CONST  (r6 I:?[int, float, short, byte, char]) = (15 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0029 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0021: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.subtitleService com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService \l0x0023: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('dataBitArray' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0025: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)\l com.google.android.exoplayer2.text.dvb.DvbParser.parseSubtitlingSegment(com.google.android.exoplayer2.util.ParsableBitArray, com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x002b: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.subtitleService com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService \l0x002d: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition) = \l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)\l com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService.pageComposition com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0036 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: INVOKE  (r22 I:java.util.List) =  java.util.Collections.emptyList():java.util.List type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: RETURN  \l  (r22 I:java.util.List\<com.google.android.exoplayer2.text.Cue\>)\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0038: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.subtitleService com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService \l0x003a: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition) = \l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)\l com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService.displayDefinition com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition \l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0194 \l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|0x003e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0040: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.subtitleService com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService \l0x0042: IGET  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition) = \l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)\l com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService.displayDefinition com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition \l0x0044: MOVE  (r24 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0048: IGET  (r5 I:android.graphics.Bitmap) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.bitmap android.graphics.Bitmap \l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006c \l}"];
Node_15 [shape=record,label="{15\:\ 0x004c|0x004c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x004e: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.width int \l0x0050: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x0052: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0054: IGET  (r6 I:android.graphics.Bitmap) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.bitmap android.graphics.Bitmap \l0x0056: INVOKE  (r6 I:int) = (r6 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x005a|0x005a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006c \l}"];
Node_17 [shape=record,label="{17\:\ 0x005c|0x005c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x005e: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.height int \l0x0060: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x0062: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0064: IGET  (r6 I:android.graphics.Bitmap) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.bitmap android.graphics.Bitmap \l0x0066: INVOKE  (r6 I:int) = (r6 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x006a|0x006a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x008d \l}"];
Node_19 [shape=record,label="{19\:\ 0x006c|0x006c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x006e: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.width int \l0x0070: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x0072: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x0074: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.height int \l0x0076: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l0x0078: SGET  (r7 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x007a: INVOKE  (r5 I:android.graphics.Bitmap) = \l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x007e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0080: IPUT  \l  (r5 I:android.graphics.Bitmap)\l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser)\l com.google.android.exoplayer2.text.dvb.DvbParser.bitmap android.graphics.Bitmap \l0x0082: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0084: IGET  (r5 I:android.graphics.Canvas) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.canvas android.graphics.Canvas \l0x0086: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0088: IGET  (r6 I:android.graphics.Bitmap) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.bitmap android.graphics.Bitmap \l0x008a: INVOKE  \l  (r5 I:android.graphics.Canvas)\l  (r6 I:android.graphics.Bitmap)\l android.graphics.Canvas.setBitmap(android.graphics.Bitmap):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x008d|0x008d: NEW_INSTANCE  (r22 I:java.util.ArrayList) =  java.util.ArrayList \l0x008f: INVOKE  (r22 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0092: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0094: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.subtitleService com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService \l0x0096: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition) = \l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)\l com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService.pageComposition com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition \l0x0098: IGET  (r0 I:android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion\>) = \l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$PageComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.PageComposition.regions android.util.SparseArray \l0x009a: MOVE  (r29 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x009c: CONST  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x009e|0x009e: INVOKE  (r5 I:int) = \l  (r29 I:android.util.SparseArray A[D('pageRegions' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion\>)])\l android.util.SparseArray.size():int type: VIRTUAL \l0x00a2: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a4|0x00a4: IF  (r0 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:9:0x0035 \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a6|0x00a6: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r29 I:?[OBJECT, ARRAY] A[D('pageRegions' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion\>)])\l \l0x00a8: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l0x00aa: INVOKE  (r28 I:java.lang.Object) = (r0 I:android.util.SparseArray), (r1 I:int) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x00ae: CHECK_CAST  (r28 I:com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion) = (com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion) (r28 I:?[OBJECT, ARRAY]) \l0x00b0: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r29 I:?[OBJECT, ARRAY] A[D('pageRegions' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion\>)])\l \l0x00b2: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l0x00b4: INVOKE  (r31 I:int) = (r0 I:android.util.SparseArray), (r1 I:int) android.util.SparseArray.keyAt(int):int type: VIRTUAL \l0x00b8: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x00ba: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.subtitleService com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService \l0x00bc: IGET  (r5 I:android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition\>) = \l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)\l com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService.regions android.util.SparseArray \l0x00be: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r31 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('regionId' int)])\l \l0x00c0: INVOKE  (r30 I:java.lang.Object) = (r5 I:android.util.SparseArray), (r0 I:int) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x00c4: CHECK_CAST  (r30 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition) = (com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition) (r30 I:?[OBJECT, ARRAY]) \l0x00c6: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('pageRegion' com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion)])\l \l0x00c8: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion)\l com.google.android.exoplayer2.text.dvb.DvbParser.PageRegion.horizontalAddress int \l0x00ca: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x00cc: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.horizontalPositionMinimum int \l0x00ce: ARITH  (r17 I:int) = (r5 I:int) + (r6 I:int) \l0x00d0: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('pageRegion' com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion)])\l \l0x00d2: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion)\l com.google.android.exoplayer2.text.dvb.DvbParser.PageRegion.verticalAddress int \l0x00d4: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x00d6: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.verticalPositionMinimum int \l0x00d8: ARITH  (r18 I:int) = (r5 I:int) + (r6 I:int) \l0x00da: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x00dc: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.width int \l0x00de: ARITH  (r5 I:int) = (r5 I:int) + (r17 I:int A[D('baseHorizontalAddress' int)]) \l0x00e0: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x00e2: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.horizontalPositionMaximum int \l0x00e4: INVOKE  (r20 I:int) = (r5 I:int), (r6 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x00e8: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x00ea: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.height int \l0x00ec: ARITH  (r5 I:int) = (r5 I:int) + (r18 I:int A[D('baseVerticalAddress' int)]) \l0x00ee: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x00f0: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.verticalPositionMaximum int \l0x00f2: INVOKE  (r19 I:int) = (r5 I:int), (r6 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x00f6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x00f8: IGET  (r3 I:android.graphics.Canvas) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.canvas android.graphics.Canvas \l0x00fa: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseHorizontalAddress' int)])\l \l0x00fc: CAST  (r4 I:float) = (float) (r0 I:int) \l0x00fd: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseVerticalAddress' int)])\l \l0x00ff: CAST  (r5 I:float) = (float) (r0 I:int) \l0x0100: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('clipRight' int)])\l \l0x0102: CAST  (r6 I:float) = (float) (r0 I:int) \l0x0103: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('clipBottom' int)])\l \l0x0105: CAST  (r7 I:float) = (float) (r0 I:int) \l0x0106: SGET  (r8 I:android.graphics.Region$Op) =  android.graphics.Region.Op.REPLACE android.graphics.Region$Op \l0x0108: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:float)\l  (r8 I:android.graphics.Region$Op)\l android.graphics.Canvas.clipRect(float, float, float, float, android.graphics.Region$Op):boolean type: VIRTUAL \l0x010b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x010d: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.subtitleService com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService \l0x010f: IGET  (r5 I:android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition\>) = \l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)\l com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService.cluts android.util.SparseArray \l0x0111: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x0113: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.clutId int \l0x0115: INVOKE  (r4 I:java.lang.Object) = (r5 I:android.util.SparseArray), (r6 I:int) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x0119: CHECK_CAST  (r4 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition) = (com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x011b|0x011b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0133 \l}"];
Node_25 [shape=record,label="{25\:\ 0x011d|0x011d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x011f: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.subtitleService com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService \l0x0121: IGET  (r5 I:android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition\>) = \l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)\l com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService.ancillaryCluts android.util.SparseArray \l0x0123: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x0125: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.clutId int \l0x0127: INVOKE  (r4 I:java.lang.Object A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)]) = (r5 I:android.util.SparseArray), (r6 I:int) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x012b: CHECK_CAST  (r4 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)]) = (com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition) (r4 I:?[OBJECT, ARRAY] A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x012d|0x012d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0133 \l}"];
Node_27 [shape=record,label="{27\:\ 0x012f|0x012f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0131: IGET  (r4 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)]) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.defaultClutDefinition com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition \l}"];
Node_28 [shape=record,label="{28\:\ 0x0133|0x0133: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x0135: IGET  (r0 I:android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\>) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.regionObjects android.util.SparseArray \l0x0137: MOVE  (r33 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0139: CONST  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_29 [shape=record,label="{29\:\ 0x013b|0x013b: INVOKE  (r5 I:int) = \l  (r33 I:android.util.SparseArray A[D('regionObjects' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\>)])\l android.util.SparseArray.size():int type: VIRTUAL \l0x013f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('j' int)])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x0141|0x0141: IF  (r0 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:42:0x01a1 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0143|0x0143: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r33 I:?[OBJECT, ARRAY] A[D('regionObjects' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\>)])\l \l0x0145: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('j' int)])\l \l0x0147: INVOKE  (r27 I:int) = (r0 I:android.util.SparseArray), (r1 I:int) android.util.SparseArray.keyAt(int):int type: VIRTUAL \l0x014b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r33 I:?[OBJECT, ARRAY] A[D('regionObjects' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\>)])\l \l0x014d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('j' int)])\l \l0x014f: INVOKE  (r32 I:java.lang.Object) = (r0 I:android.util.SparseArray), (r1 I:int) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x0153: CHECK_CAST  (r32 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject) = (com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject) (r32 I:?[OBJECT, ARRAY]) \l0x0155: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0157: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.subtitleService com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService \l0x0159: IGET  (r5 I:android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData\>) = \l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)\l com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService.objects android.util.SparseArray \l0x015b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('objectId' int)])\l \l0x015d: INVOKE  (r3 I:java.lang.Object) = (r5 I:android.util.SparseArray), (r0 I:int) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x0161: CHECK_CAST  (r3 I:com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData) = (com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0163|0x0163: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0173 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0165|0x0165: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0167: IGET  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.subtitleService com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService \l0x0169: IGET  (r5 I:android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData\>) = \l  (r5 I:com.google.android.exoplayer2.text.dvb.DvbParser$SubtitleService)\l com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService.ancillaryObjects android.util.SparseArray \l0x016b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('objectId' int)])\l \l0x016d: INVOKE  (r3 I:java.lang.Object A[D('objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)]) = (r5 I:android.util.SparseArray), (r0 I:int) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x0171: CHECK_CAST  (r3 I:com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData A[D('objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)]) = (com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData) (r3 I:?[OBJECT, ARRAY] A[D('objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0173|0x0173: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x0191 \l}"];
Node_35 [shape=record,label="{35\:\ 0x0175|0x0175: IGET  (r5 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData A[D('objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)])\l com.google.android.exoplayer2.text.dvb.DvbParser.ObjectData.nonModifyingColorFlag boolean \l}"];
Node_36 [shape=record,label="{36\:\ 0x0177|0x0177: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x019c \l}"];
Node_37 [shape=record,label="{37\:\ 0x0179|0x0179: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_38 [shape=record,label="{38\:\ 0x017a|0x017a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x017c: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.depth int \l0x017e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r32 I:?[OBJECT, ARRAY] A[D('regionObject' com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject)])\l \l0x0180: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionObject.horizontalPosition int \l0x0182: ARITH  (r6 I:int) = (r6 I:int) + (r17 I:int A[D('baseHorizontalAddress' int)]) \l0x0184: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r32 I:?[OBJECT, ARRAY] A[D('regionObject' com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject)])\l \l0x0186: IGET  (r7 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionObject.verticalPosition int \l0x0188: ARITH  (r7 I:int) = (r7 I:int) + (r18 I:int A[D('baseVerticalAddress' int)]) \l0x018a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x018c: IGET  (r9 I:android.graphics.Canvas) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.canvas android.graphics.Canvas \l0x018e: INVOKE  \l  (r3 I:com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData A[D('objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)])\l  (r4 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)])\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:android.graphics.Paint A[D('paint' android.graphics.Paint)])\l  (r9 I:android.graphics.Canvas)\l com.google.android.exoplayer2.text.dvb.DvbParser.paintPixelDataSubBlocks(com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData, com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition, int, int, int, android.graphics.Paint, android.graphics.Canvas):void type: STATIC \l}"];
Node_39 [shape=record,label="{39\:\ 0x0191|0x0191: ARITH  (r26 I:int A[D('j' int)]) = (r26 I:int A[D('j' int)]) + (1 int) \l}"];
Node_40 [shape=record,label="{40\:\ 0x0194|0x0194: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0196: IGET  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.defaultDisplayDefinition com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition \l0x0198: MOVE  (r24 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x019c|0x019c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x019e: IGET  (r8 I:android.graphics.Paint) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.defaultPaint android.graphics.Paint \l}"];
Node_42 [shape=record,label="{42\:\ 0x01a1|0x01a1: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x01a3: IGET  (r5 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.fillFlag boolean \l}"];
Node_43 [shape=record,label="{43\:\ 0x01a5|0x01a5: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x01de \l}"];
Node_44 [shape=record,label="{44\:\ 0x01a7|0x01a7: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x01a9: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.depth int \l0x01ab: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x01ac|0x01ac: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x0238 \l}"];
Node_46 [shape=record,label="{46\:\ 0x01ae|0x01ae: IGET  (r5 I:int[]) = \l  (r4 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)])\l com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition.clutEntries8Bit int[] \l0x01b0: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x01b2: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.pixelCode8Bit int \l0x01b4: AGET  (r21 I:?[int, float]) = (r5 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x01b6|0x01b6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x01b8: IGET  (r5 I:android.graphics.Paint) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.fillRegionPaint android.graphics.Paint \l0x01ba: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('color' int)])\l \l0x01bc: INVOKE  (r5 I:android.graphics.Paint), (r0 I:int) android.graphics.Paint.setColor(int):void type: VIRTUAL \l0x01bf: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x01c1: IGET  (r9 I:android.graphics.Canvas) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.canvas android.graphics.Canvas \l0x01c3: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseHorizontalAddress' int)])\l \l0x01c5: CAST  (r10 I:float) = (float) (r0 I:int) \l0x01c6: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseVerticalAddress' int)])\l \l0x01c8: CAST  (r11 I:float) = (float) (r0 I:int) \l0x01c9: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x01cb: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.width int \l0x01cd: ARITH  (r5 I:int) = (r5 I:int) + (r17 I:int A[D('baseHorizontalAddress' int)]) \l0x01cf: CAST  (r12 I:float) = (float) (r5 I:int) \l0x01d0: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x01d2: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.height int \l0x01d4: ARITH  (r5 I:int) = (r5 I:int) + (r18 I:int A[D('baseVerticalAddress' int)]) \l0x01d6: CAST  (r13 I:float) = (float) (r5 I:int) \l0x01d7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x01d9: IGET  (r14 I:android.graphics.Paint) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.fillRegionPaint android.graphics.Paint \l0x01db: INVOKE  \l  (r9 I:android.graphics.Canvas)\l  (r10 I:float)\l  (r11 I:float)\l  (r12 I:float)\l  (r13 I:float)\l  (r14 I:android.graphics.Paint)\l android.graphics.Canvas.drawRect(float, float, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_48 [shape=record,label="{48\:\ 0x01de|0x01de: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x01e0: IGET  (r5 I:android.graphics.Bitmap) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.bitmap android.graphics.Bitmap \l0x01e2: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x01e4: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.width int \l0x01e6: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x01e8: IGET  (r7 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.height int \l0x01ea: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseHorizontalAddress' int)])\l \l0x01ec: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseVerticalAddress' int)])\l \l0x01ee: INVOKE  (r10 I:android.graphics.Bitmap) = \l  (r5 I:android.graphics.Bitmap)\l  (r0 I:int)\l  (r1 I:int)\l  (r6 I:int)\l  (r7 I:int)\l android.graphics.Bitmap.createBitmap(android.graphics.Bitmap, int, int, int, int):android.graphics.Bitmap type: STATIC \l0x01f2: NEW_INSTANCE  (r9 I:com.google.android.exoplayer2.text.Cue) =  com.google.android.exoplayer2.text.Cue \l0x01f4: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseHorizontalAddress' int)])\l \l0x01f6: CAST  (r5 I:float) = (float) (r0 I:int) \l0x01f7: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x01f9: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.width int \l0x01fb: CAST  (r6 I:float) = (float) (r6 I:int) \l0x01fc: ARITH  (r11 I:float) = (r5 I:float) \/ (r6 I:float) \l0x01fe: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01ff: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('baseVerticalAddress' int)])\l \l0x0201: CAST  (r5 I:float) = (float) (r0 I:int) \l0x0202: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x0204: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.height int \l0x0206: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0207: ARITH  (r13 I:float) = (r5 I:float) \/ (r6 I:float) \l0x0209: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x020a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x020c: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.width int \l0x020e: CAST  (r5 I:float) = (float) (r5 I:int) \l0x020f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x0211: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.width int \l0x0213: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0214: ARITH  (r15 I:float) = (r5 I:float) \/ (r6 I:float) \l0x0216: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x0218: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.height int \l0x021a: CAST  (r5 I:float) = (float) (r5 I:int) \l0x021b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)])\l \l0x021d: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition)\l com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition.height int \l0x021f: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0220: ARITH  (r16 I:float) = (r5 I:float) \/ (r6 I:float) \l0x0222: INVOKE  \l  (r9 I:com.google.android.exoplayer2.text.Cue)\l  (r10 I:android.graphics.Bitmap A[D('cueBitmap' android.graphics.Bitmap)])\l  (r11 I:float)\l  (r12 I:int)\l  (r13 I:float)\l  (r14 I:int)\l  (r15 I:float)\l  (r16 I:float)\l com.google.android.exoplayer2.text.Cue.\<init\>(android.graphics.Bitmap, float, int, float, int, float, float):void type: DIRECT \l0x0225: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('cues' java.util.List\<com.google.android.exoplayer2.text.Cue\>)])\l \l0x0227: INVOKE  (r0 I:java.util.List), (r9 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x022a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x022c: IGET  (r5 I:android.graphics.Canvas) = (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser) com.google.android.exoplayer2.text.dvb.DvbParser.canvas android.graphics.Canvas \l0x022e: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x022f: SGET  (r7 I:android.graphics.PorterDuff$Mode) =  android.graphics.PorterDuff.Mode.CLEAR android.graphics.PorterDuff$Mode \l0x0231: INVOKE  \l  (r5 I:android.graphics.Canvas)\l  (r6 I:int)\l  (r7 I:android.graphics.PorterDuff$Mode)\l android.graphics.Canvas.drawColor(int, android.graphics.PorterDuff$Mode):void type: VIRTUAL \l0x0234: ARITH  (r25 I:int A[D('i' int)]) = (r25 I:int A[D('i' int)]) + (1 int) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0238|0x0238: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x023a: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.depth int \l0x023c: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x023d|0x023d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0249 \l}"];
Node_51 [shape=record,label="{51\:\ 0x023f|0x023f: IGET  (r5 I:int[]) = \l  (r4 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)])\l com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition.clutEntries4Bit int[] \l0x0241: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x0243: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.pixelCode4Bit int \l0x0245: AGET  (r21 I:?[int, float]) = (r5 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0249|0x0249: IGET  (r5 I:int[]) = \l  (r4 I:com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition A[D('clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition)])\l com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition.clutEntries2Bit int[] \l0x024b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)])\l \l0x024d: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.pixelCode2Bit int \l0x024f: AGET  (r21 I:?[int, float]) = (r5 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public java.util.List\<com.google.android.exoplayer2.text.Cue\> com.google.android.exoplayer2.text.dvb.DvbParser.decode((r34 'this' I:com.google.android.exoplayer2.text.dvb.DvbParser A[IMMUTABLE_TYPE, THIS]), (r35 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36 I:int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x011b\-0x012b: r4 'clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition\l  0x0163\-0x0171: r3 'objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData\l  0x017a\-0x0191: r8 'paint' android.graphics.Paint\l  0x0173\-0x0194: r3 'objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData\l  0x012d\-0x0194: r4 'clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition\l  0x00d0\-0x0194: r17 'baseHorizontalAddress' int\l  0x00da\-0x0194: r18 'baseVerticalAddress' int\l  0x00f6\-0x0194: r19 'clipBottom' int\l  0x00e8\-0x0194: r20 'clipRight' int\l  0x0092\-0x0194: r22 'cues' java.util.List\<com.google.android.exoplayer2.text.Cue\>\l  0x0046\-0x0194: r24 'displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition\l  0x009e\-0x0194: r25 'i' int\l  0x013b\-0x0194: r26 'j' int\l  0x014b\-0x0194: r27 'objectId' int\l  0x00b0\-0x0194: r28 'pageRegion' com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion\l  0x009c\-0x0194: r29 'pageRegions' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion\>\l  0x00c6\-0x0194: r30 'regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition\l  0x00b8\-0x0194: r31 'regionId' int\l  0x0155\-0x0194: r32 'regionObject' com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\l  0x0139\-0x0194: r33 'regionObjects' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\>\l  0x019c\-0x01a1: r3 'objectData' com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData\l  0x019c\-0x01a1: r27 'objectId' int\l  0x019c\-0x01a1: r32 'regionObject' com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\l  0x01b6\-0x01de: r21 'color' int\l  0x01f2\-0x0238: r10 'cueBitmap' android.graphics.Bitmap\l  0x0247\-0x0249: r21 'color' int\l  0x019c\-0x0252: r4 'clutDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$ClutDefinition\l  0x019c\-0x0252: r17 'baseHorizontalAddress' int\l  0x019c\-0x0252: r18 'baseVerticalAddress' int\l  0x019c\-0x0252: r19 'clipBottom' int\l  0x019c\-0x0252: r20 'clipRight' int\l  0x0251\-0x0252: r21 'color' int\l  0x019c\-0x0252: r22 'cues' java.util.List\<com.google.android.exoplayer2.text.Cue\>\l  0x000b\-0x0252: r23 'dataBitArray' com.google.android.exoplayer2.util.ParsableBitArray\l  0x019c\-0x0252: r24 'displayDefinition' com.google.android.exoplayer2.text.dvb.DvbParser$DisplayDefinition\l  0x019c\-0x0252: r25 'i' int\l  0x019c\-0x0252: r26 'j' int\l  0x019c\-0x0252: r28 'pageRegion' com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion\l  0x019c\-0x0252: r29 'pageRegions' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$PageRegion\>\l  0x019c\-0x0252: r30 'regionComposition' com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition\l  0x019c\-0x0252: r31 'regionId' int\l  0x019c\-0x0252: r33 'regionObjects' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\>\l  ?\-0x0252: r35 'data' byte[]\l  ?\-0x0252: r36 'limit' int\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[([BI), Ljava\/util\/List, \<, Lcom\/google\/android\/exoplayer2\/text\/Cue;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_40;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_9;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_42;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_39;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_41;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_29;
Node_40 -> Node_13;
Node_41 -> Node_38;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_48;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_49;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_21;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_47;
Node_52 -> Node_47;
}

