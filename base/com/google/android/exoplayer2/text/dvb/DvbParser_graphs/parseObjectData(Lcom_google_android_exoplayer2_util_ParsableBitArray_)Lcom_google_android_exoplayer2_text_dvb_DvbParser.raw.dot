digraph "CFG forcom.google.android.exoplayer2.text.dvb.DvbParser.parseObjectData(Lcom\/google\/android\/exoplayer2\/util\/ParsableBitArray;)Lcom\/google\/android\/exoplayer2\/text\/dvb\/DvbParser$ObjectData;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST  (r9 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0004: INVOKE  (r5 I:int) = \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0008: CONST  (r8 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0009: INVOKE  \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r8 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x000c: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000d: INVOKE  (r4 I:int) = \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r8 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0011: INVOKE  (r2 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l com.google.android.exoplayer2.util.ParsableBitArray.readBit():boolean type: VIRTUAL \l0x0015: INVOKE  \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r11 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x0018: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('objectCodingMethod' int)]) != (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002d \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: CONST  (r8 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x001e: INVOKE  (r3 I:int) = \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r8 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0022: ARITH  (r8 I:int) = (r3 I:int A[D('numberOfCodes' int)]) * (16 int) \l0x0024: INVOKE  \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r8 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|0x0027: NEW_INSTANCE  (r8 I:com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData) =  com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData \l0x0029: INVOKE  \l  (r8 I:com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)\l  (r5 I:int A[D('objectId' int)])\l  (r2 I:boolean A[D('nonModifyingColorFlag' boolean)])\l  (r6 I:byte[] A[D('topFieldData' byte[])])\l  (r0 I:byte[] A[D('bottomFieldData' byte[])])\l com.google.android.exoplayer2.text.dvb.DvbParser.ObjectData.\<init\>(int, boolean, byte[], byte[]):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: RETURN  \l  (r8 I:com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData)\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('objectCodingMethod' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0027 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|0x002f: INVOKE  (r7 I:int) = \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0033: INVOKE  (r1 I:int) = \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: IF  (r7 I:?[int, byte, short, char] A[D('topFieldDataLength' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x003e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: NEW_ARRAY  (r6 I:byte[] A[D('topFieldData' byte[])]) = (r7 I:int A[D('topFieldDataLength' int), IMMUTABLE_TYPE]) type: byte[] \l0x003b: INVOKE  \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r6 I:byte[] A[D('topFieldData' byte[])])\l  (r10 I:int)\l  (r7 I:int A[D('topFieldDataLength' int)])\l com.google.android.exoplayer2.util.ParsableBitArray.readBytes(byte[], int, int):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: IF  (r1 I:?[int, byte, short, char] A[D('bottomFieldDataLength' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x0046 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: NEW_ARRAY  (r0 I:byte[] A[D('bottomFieldData' byte[])]) = \l  (r1 I:int A[D('bottomFieldDataLength' int), IMMUTABLE_TYPE])\l type: byte[] \l0x0042: INVOKE  \l  (r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r0 I:byte[] A[D('bottomFieldData' byte[])])\l  (r10 I:int)\l  (r1 I:int A[D('bottomFieldDataLength' int)])\l com.google.android.exoplayer2.util.ParsableBitArray.readBytes(byte[], int, int):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|0x0046: MOVE  (r0 I:?[OBJECT, ARRAY] A[D('bottomFieldData' byte[])]) = (r6 I:?[OBJECT, ARRAY] A[D('topFieldData' byte[])]) \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.text.dvb.DvbParser$ObjectData com.google.android.exoplayer2.text.dvb.DvbParser.parseObjectData((r12 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0022\-0x0027: r3 'numberOfCodes' int\l  0x001a\-0x0047: r0 'bottomFieldData' byte[]\l  0x0037\-0x0047: r1 'bottomFieldDataLength' int\l  0x0015\-0x0047: r2 'nonModifyingColorFlag' boolean\l  0x0011\-0x0047: r4 'objectCodingMethod' int\l  0x0008\-0x0047: r5 'objectId' int\l  0x0019\-0x0047: r6 'topFieldData' byte[]\l  0x0033\-0x0047: r7 'topFieldDataLength' int\l  ?\-0x0047: r12 'data' com.google.android.exoplayer2.util.ParsableBitArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
Node_5 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_3;
Node_11 -> Node_3;
}

