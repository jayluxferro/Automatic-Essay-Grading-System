digraph "CFG forcom.google.android.exoplayer2.text.dvb.DvbParser.parseRegionComposition(Lcom\/google\/android\/exoplayer2\/util\/ParsableBitArray;I)Lcom\/google\/android\/exoplayer2\/text\/dvb\/DvbParser$RegionComposition;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0004: INVOKE  (r10 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0008: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0009: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x000b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x000e: INVOKE  (r11 I:boolean) = \l  (r23 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l com.google.android.exoplayer2.util.ParsableBitArray.readBit():boolean type: VIRTUAL \l0x0012: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0013: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0015: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x0018: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x001a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x001c: INVOKE  (r12 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0020: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0022: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0024: INVOKE  (r13 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0028: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0029: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x002b: INVOKE  (r14 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x002f: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0030: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0032: INVOKE  (r15 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0036: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0037: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0039: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x003c: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x003e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0040: INVOKE  (r16 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0044: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0046: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0048: INVOKE  (r17 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x004c: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x004d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x004f: INVOKE  (r18 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0053: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0054: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0056: INVOKE  (r19 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x005a: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x005b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x005d: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x0060: ARITH  (r22 I:int) = (r24 I:int A[D('length' int)]) + (\-10 int) \l0x0062: NEW_INSTANCE  (r20 I:android.util.SparseArray) =  android.util.SparseArray \l0x0064: INVOKE  (r20 I:android.util.SparseArray) android.util.SparseArray.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0067|0x0067: IF  (r22 I:?[int, byte, short, char] A[D('remainingLength' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x00be \l}"];
Node_2 [shape=record,label="{2\:\ 0x0069|0x0069: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x006b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x006d: INVOKE  (r21 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0071: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0072: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0074: INVOKE  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0078: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0079: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x007b: INVOKE  (r4 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x007f: CONST  (r2 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x0081: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0083: INVOKE  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0087: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0088: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x008a: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x008d: CONST  (r2 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x008f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x0091: INVOKE  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0095: ARITH  (r22 I:int A[D('remainingLength' int)]) = (r22 I:int A[D('remainingLength' int)]) + (\-6 int) \l0x0097: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0098: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0099: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x009a|0x009a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('objectType' int)]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x009f \l}"];
Node_4 [shape=record,label="{4\:\ 0x009c|0x009c: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x009d|0x009d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('objectType' int)]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x00b1 \l}"];
Node_6 [shape=record,label="{6\:\ 0x009f|0x009f: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x00a1: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x00a3: INVOKE  (r7 I:int A[D('foregroundPixelCode' int)]) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x00a7: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x00a9: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableBitArray)])\l \l0x00ab: INVOKE  (r8 I:int A[D('backgroundPixelCode' int)]) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x00af: ARITH  (r22 I:int A[D('remainingLength' int)]) = (r22 I:int A[D('remainingLength' int)]) + (\-2 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x00b1|0x00b1: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject) =  com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject \l0x00b3: INVOKE  \l  (r2 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject)\l  (r3 I:int A[D('objectType' int)])\l  (r4 I:int A[D('objectProvider' int)])\l  (r5 I:int A[D('objectHorizontalPosition' int)])\l  (r6 I:int A[D('objectVerticalPosition' int)])\l  (r7 I:int A[D('foregroundPixelCode' int)])\l  (r8 I:int A[D('backgroundPixelCode' int)])\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionObject.\<init\>(int, int, int, int, int, int):void type: DIRECT \l0x00b6: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('regionObjects' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\>)])\l \l0x00b8: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('objectId' int)])\l \l0x00ba: INVOKE  \l  (r0 I:android.util.SparseArray)\l  (r1 I:int)\l  (r2 I:java.lang.Object)\l android.util.SparseArray.put(int, java.lang.Object):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x00be|0x00be: NEW_INSTANCE  (r9 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition) =  com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition \l0x00c0: INVOKE  \l  (r9 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l  (r10 I:int A[D('id' int)])\l  (r11 I:boolean A[D('fillFlag' boolean)])\l  (r12 I:int A[D('width' int)])\l  (r13 I:int A[D('height' int)])\l  (r14 I:int A[D('levelOfCompatibility' int)])\l  (r15 I:int A[D('depth' int)])\l  (r16 I:int A[D('clutId' int)])\l  (r17 I:int A[D('pixelCode8Bit' int)])\l  (r18 I:int A[D('pixelCode4Bit' int)])\l  (r19 I:int A[D('pixelCode2Bit' int)])\l  (r20 I:android.util.SparseArray A[D('regionObjects' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\>)])\l com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition.\<init\>(int, boolean, int, int, int, int, int, int, int, int, android.util.SparseArray):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x00c3|0x00c3: RETURN  \l  (r9 I:com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition)\l \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.text.dvb.DvbParser$RegionComposition com.google.android.exoplayer2.text.dvb.DvbParser.parseRegionComposition((r23 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('data' com.google.android.exoplayer2.util.ParsableBitArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0078\-0x00be: r3 'objectType' int\l  0x007f\-0x00be: r4 'objectProvider' int\l  0x0087\-0x00be: r5 'objectHorizontalPosition' int\l  0x0095\-0x00be: r6 'objectVerticalPosition' int\l  0x0098\-0x00be: r7 'foregroundPixelCode' int\l  0x0099\-0x00be: r8 'backgroundPixelCode' int\l  0x0071\-0x00be: r21 'objectId' int\l  0x0008\-0x00c3: r10 'id' int\l  0x0012\-0x00c3: r11 'fillFlag' boolean\l  0x0020\-0x00c3: r12 'width' int\l  0x0028\-0x00c3: r13 'height' int\l  0x002f\-0x00c3: r14 'levelOfCompatibility' int\l  0x0036\-0x00c3: r15 'depth' int\l  0x0044\-0x00c3: r16 'clutId' int\l  0x004c\-0x00c3: r17 'pixelCode8Bit' int\l  0x0053\-0x00c3: r18 'pixelCode4Bit' int\l  0x005a\-0x00c3: r19 'pixelCode2Bit' int\l  0x0067\-0x00c3: r20 'regionObjects' android.util.SparseArray\<com.google.android.exoplayer2.text.dvb.DvbParser$RegionObject\>\l  0x0062\-0x00c3: r22 'remainingLength' int\l  ?\-0x00c3: r23 'data' com.google.android.exoplayer2.util.ParsableBitArray\l  ?\-0x00c3: r24 'length' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
}

