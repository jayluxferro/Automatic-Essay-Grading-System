digraph "CFG forcom.google.android.exoplayer2.text.SubtitleDecoderFactory.1.createDecoder(Lcom\/google\/android\/exoplayer2\/Format;)Lcom\/google\/android\/exoplayer2\/text\/SubtitleDecoder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x0002: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0003: INVOKE  (r2 I:int) = (r1 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[\-1351681404, \-1026075066, \-1004728940, 691401887, 930165504, 1566015601, 1566016562, 1668750253, 1693976202] t:[0x0065, 0x001f, 0x0015, 0x003d, 0x0051, 0x0047, 0x005b, 0x0033, 0x0029] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3, 4, 5, 6, 7, 8] t:[0x0070, 0x0076, 0x007c, 0x0082, 0x0088, 0x0090, 0x0090, 0x009a, 0x00a2] \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000f: CONST_STR  (r1 I:java.lang.String) =  \"Attempted to create decoder for unsupported format\" \l0x0011: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: CONST_STR  (r2 I:java.lang.String) =  \"text\/vtt\" \l0x0017: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: CONST_STR  (r2 I:java.lang.String) =  \"application\/x\-mp4\-vtt\" \l0x0021: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: CONST_STR  (r2 I:java.lang.String) =  \"application\/ttml+xml\" \l0x002b: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: CONST_STR  (r2 I:java.lang.String) =  \"application\/x\-subrip\" \l0x0035: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|0x003b: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|0x003d: CONST_STR  (r2 I:java.lang.String) =  \"application\/x\-quicktime\-tx3g\" \l0x003f: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|0x0043: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0045|0x0045: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: CONST_STR  (r2 I:java.lang.String) =  \"application\/cea\-608\" \l0x0049: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x004d|0x004d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_22 [shape=record,label="{22\:\ 0x004f|0x004f: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0051|0x0051: CONST_STR  (r2 I:java.lang.String) =  \"application\/x\-mp4\-cea\-608\" \l0x0053: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0057|0x0057: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_25 [shape=record,label="{25\:\ 0x0059|0x0059: CONST  (r0 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x005b|0x005b: CONST_STR  (r2 I:java.lang.String) =  \"application\/cea\-708\" \l0x005d: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x0061|0x0061: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_28 [shape=record,label="{28\:\ 0x0063|0x0063: CONST  (r0 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0065|0x0065: CONST_STR  (r2 I:java.lang.String) =  \"application\/dvbsubs\" \l0x0067: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x006b|0x006b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_31 [shape=record,label="{31\:\ 0x006d|0x006d: CONST  (r0 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0070|0x0070: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.text.webvtt.WebvttDecoder) =  com.google.android.exoplayer2.text.webvtt.WebvttDecoder \l0x0072: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.webvtt.WebvttDecoder)\l com.google.android.exoplayer2.text.webvtt.WebvttDecoder.\<init\>():void type: DIRECT \l}"];
Node_33 [shape=record,label="{33\:\ 0x0075|0x0075: RETURN  (r0 I:com.google.android.exoplayer2.text.SubtitleDecoder) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0076|0x0076: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder) =  com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder \l0x0078: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder)\l com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder.\<init\>():void type: DIRECT \l}"];
Node_35 [shape=record,label="{35\:\ 0x007c|0x007c: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder) =  com.google.android.exoplayer2.text.ttml.TtmlDecoder \l0x007e: INVOKE  (r0 I:com.google.android.exoplayer2.text.ttml.TtmlDecoder) com.google.android.exoplayer2.text.ttml.TtmlDecoder.\<init\>():void type: DIRECT \l}"];
Node_36 [shape=record,label="{36\:\ 0x0082|0x0082: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.text.subrip.SubripDecoder) =  com.google.android.exoplayer2.text.subrip.SubripDecoder \l0x0084: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.subrip.SubripDecoder)\l com.google.android.exoplayer2.text.subrip.SubripDecoder.\<init\>():void type: DIRECT \l}"];
Node_37 [shape=record,label="{37\:\ 0x0088|0x0088: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder) =  com.google.android.exoplayer2.text.tx3g.Tx3gDecoder \l0x008a: IGET  (r1 I:java.util.List\<byte[]\>) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.initializationData java.util.List \l0x008c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.tx3g.Tx3gDecoder)\l  (r1 I:java.util.List)\l com.google.android.exoplayer2.text.tx3g.Tx3gDecoder.\<init\>(java.util.List):void type: DIRECT \l}"];
Node_38 [shape=record,label="{38\:\ 0x0090|0x0090: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.text.cea.Cea608Decoder) =  com.google.android.exoplayer2.text.cea.Cea608Decoder \l0x0092: IGET  (r1 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x0094: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.accessibilityChannel int \l0x0096: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.cea.Cea608Decoder)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l com.google.android.exoplayer2.text.cea.Cea608Decoder.\<init\>(java.lang.String, int):void type: DIRECT \l}"];
Node_39 [shape=record,label="{39\:\ 0x009a|0x009a: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.text.cea.Cea708Decoder) =  com.google.android.exoplayer2.text.cea.Cea708Decoder \l0x009c: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.accessibilityChannel int \l0x009e: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.cea.Cea708Decoder)\l  (r1 I:int)\l com.google.android.exoplayer2.text.cea.Cea708Decoder.\<init\>(int):void type: DIRECT \l}"];
Node_40 [shape=record,label="{40\:\ 0x00a2|0x00a2: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.text.dvb.DvbDecoder) =  com.google.android.exoplayer2.text.dvb.DvbDecoder \l0x00a4: IGET  (r1 I:java.util.List\<byte[]\>) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.initializationData java.util.List \l0x00a6: INVOKE  \l  (r0 I:com.google.android.exoplayer2.text.dvb.DvbDecoder)\l  (r1 I:java.util.List)\l com.google.android.exoplayer2.text.dvb.DvbDecoder.\<init\>(java.util.List):void type: DIRECT \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.text.SubtitleDecoder com.google.android.exoplayer2.text.SubtitleDecoderFactory.1.createDecoder((r3 'this' I:com.google.android.exoplayer2.text.SubtitleDecoderFactory$1 A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x00e5: r4 'format' com.google.android.exoplayer2.Format\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_1 -> Node_8;
Node_1 -> Node_11;
Node_1 -> Node_14;
Node_1 -> Node_17;
Node_1 -> Node_20;
Node_1 -> Node_23;
Node_1 -> Node_26;
Node_1 -> Node_29;
Node_2 -> Node_3;
Node_2 -> Node_32;
Node_2 -> Node_34;
Node_2 -> Node_35;
Node_2 -> Node_36;
Node_2 -> Node_37;
Node_2 -> Node_38;
Node_2 -> Node_39;
Node_2 -> Node_40;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_2;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_2;
Node_8 -> Node_9;
Node_9 -> Node_2;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_2;
Node_11 -> Node_12;
Node_12 -> Node_2;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_2;
Node_14 -> Node_15;
Node_15 -> Node_2;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_2;
Node_17 -> Node_18;
Node_18 -> Node_2;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_2;
Node_20 -> Node_21;
Node_21 -> Node_2;
Node_21 -> Node_22[style=dashed];
Node_22 -> Node_2;
Node_23 -> Node_24;
Node_24 -> Node_2;
Node_24 -> Node_25[style=dashed];
Node_25 -> Node_2;
Node_26 -> Node_27;
Node_27 -> Node_2;
Node_27 -> Node_28[style=dashed];
Node_28 -> Node_2;
Node_29 -> Node_30;
Node_30 -> Node_2;
Node_30 -> Node_31[style=dashed];
Node_31 -> Node_2;
Node_32 -> Node_33;
Node_34 -> Node_33;
Node_35 -> Node_33;
Node_36 -> Node_33;
Node_37 -> Node_33;
Node_38 -> Node_33;
Node_39 -> Node_33;
Node_40 -> Node_33;
}

