digraph "CFG forcom.google.android.exoplayer2.text.TextRenderer.render(JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r5 I:boolean) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.outputStreamEnded boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextSubtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleDecoder) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.decoder com.google.android.exoplayer2.text.SubtitleDecoder \l0x000b: INVOKE  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleDecoder)\l  (r12 I:long A[D('positionUs' long)])\l com.google.android.exoplayer2.text.SubtitleDecoder.setPositionUs(long):void type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|SYNTHETIC\lSplitter:B:6:0x000e\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x000e\l|0x000e: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleDecoder) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.decoder com.google.android.exoplayer2.text.SubtitleDecoder A[Catch:\{ SubtitleDecoderException \-\> 0x0038 \}, TRY_ENTER]\l0x0010: INVOKE  (r5 I:java.lang.Object) = (r5 I:com.google.android.exoplayer2.text.SubtitleDecoder) com.google.android.exoplayer2.text.SubtitleDecoder.dequeueOutputBuffer():java.lang.Object type: INTERFACE A[Catch:\{ SubtitleDecoderException \-\> 0x0038 \}]\l0x0014: CHECK_CAST  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (com.google.android.exoplayer2.text.SubtitleOutputBuffer) (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ SubtitleDecoderException \-\> 0x0038 \}]\l0x0016: IPUT  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.nextSubtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x0038 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: INVOKE  (r5 I:int) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.getState():int type: VIRTUAL \l0x001c: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0004 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.subtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0042 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: INVOKE  (r2 I:long) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.getNextEventTime():long type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: CMP_L  (r5 I:int) = \l  (r2 I:long A[D('subtitleNextEventTimeUs' long)])\l  (r12 I:long A[D('positionUs' long)])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|0x002a: IF  (r5 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:19:0x0042 \l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|0x002c: IGET  (r5 I:int) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextSubtitleEventIndex int \l0x002e: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x0030: IPUT  \l  (r5 I:int)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.nextSubtitleEventIndex int \l0x0032: INVOKE  (r2 I:long A[D('subtitleNextEventTimeUs' long)]) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.getNextEventTime():long type: DIRECT \l0x0036: CONST  (r4 I:?[boolean, int, float, short, byte, char] A[D('textRendererNeedsUpdate' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|ExcHandler: SubtitleDecoderException null\lSplitter:B:6:0x000e\l|0x0038: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: INVOKE  (r5 I:int) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.getIndex():int type: VIRTUAL \l0x003d: INVOKE  (r5 I:com.google.android.exoplayer2.ExoPlaybackException) = \l  (r0 I:java.lang.Exception A[D('e' com.google.android.exoplayer2.text.SubtitleDecoderException)])\l  (r5 I:int)\l com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|0x0041: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|0x0042: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextSubtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l}"];
Node_20 [shape=record,label="{20\:\ 0x0044|0x0044: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0065 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|0x0046: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextSubtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l0x0048: INVOKE  (r5 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer)\l com.google.android.exoplayer2.text.SubtitleOutputBuffer.isEndOfStream():boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x004c|0x004c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00b6 \l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|0x004e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('textRendererNeedsUpdate' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0065 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0050|0x0050: INVOKE  (r6 I:long) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.getNextEventTime():long type: DIRECT \l0x0054: CONST  (r8 I:?[long, double]) = \l  (9223372036854775807(0x7fffffffffffffff, double:NaN) ?[long, double])\l \l0x0059: CMP_L  (r5 I:int) = (r6 I:long), (r8 I:long) \l}"];
Node_25 [shape=record,label="{25\:\ 0x005b|0x005b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0065 \l}"];
Node_26 [shape=record,label="{26\:\ 0x005d|0x005d: IGET  (r5 I:int) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.decoderReplacementState int \l0x005f: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0060|0x0060: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x00af \l}"];
Node_28 [shape=record,label="{28\:\ 0x0062|0x0062: INVOKE  (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.replaceDecoder():void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x0065|0x0065: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('textRendererNeedsUpdate' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0070 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0067|0x0067: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.subtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l0x0069: INVOKE  (r5 I:java.util.List) = \l  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer)\l  (r12 I:long A[D('positionUs' long)])\l com.google.android.exoplayer2.text.SubtitleOutputBuffer.getCues(long):java.util.List type: VIRTUAL \l0x006d: INVOKE  \l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l  (r5 I:java.util.List)\l com.google.android.exoplayer2.text.TextRenderer.updateOutput(java.util.List):void type: DIRECT \l}"];
Node_31 [shape=record,label="{31\:\ 0x0070|0x0070: IGET  (r5 I:int) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.decoderReplacementState int \l0x0072: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x0073|0x0073: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0004 \l}"];
Node_33 [shape=record,label="{33\:\ 0x0075|SYNTHETIC\lSplitter:B:33:0x0075\l}"];
Node_34 [shape=record,label="{34\:\ ?|Splitter:B:33:0x0075\l|0x0075: IGET  (r5 I:boolean) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.inputStreamEnded boolean A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}, TRY_ENTER]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0077|0x0077: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0004 A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0079|0x0079: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x007b|0x007b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x008b A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_38 [shape=record,label="{38\:\ 0x007d|0x007d: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleDecoder) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.decoder com.google.android.exoplayer2.text.SubtitleDecoder A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x007f: INVOKE  (r5 I:java.lang.Object) = (r5 I:com.google.android.exoplayer2.text.SubtitleDecoder) com.google.android.exoplayer2.text.SubtitleDecoder.dequeueInputBuffer():java.lang.Object type: INTERFACE A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0083: CHECK_CAST  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer) = (com.google.android.exoplayer2.text.SubtitleInputBuffer) (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0085: IPUT  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0087: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0089|0x0089: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0004 A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_40 [shape=record,label="{40\:\ 0x008b|0x008b: IGET  (r5 I:int) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.decoderReplacementState int A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x008d: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_41 [shape=record,label="{41\:\ 0x008e|0x008e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00d8 A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0090|0x0090: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0092: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0093: INVOKE  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer)\l  (r6 I:int)\l com.google.android.exoplayer2.text.SubtitleInputBuffer.setFlags(int):void type: VIRTUAL A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0096: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleDecoder) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.decoder com.google.android.exoplayer2.text.SubtitleDecoder A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0098: IGET  (r6 I:com.google.android.exoplayer2.text.SubtitleInputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x009a: INVOKE  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleDecoder)\l  (r6 I:java.lang.Object)\l com.google.android.exoplayer2.text.SubtitleDecoder.queueInputBuffer(java.lang.Object):void type: INTERFACE A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x009d: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x009e: IPUT  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00a0: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00a1: IPUT  \l  (r5 I:int)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.decoderReplacementState int A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}, TRY_LEAVE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x00a5|ExcHandler: SubtitleDecoderException null\lSplitter:B:33:0x0075\l|0x00a5: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_45 [shape=record,label="{45\:\ 0x00a6|0x00a6: INVOKE  (r5 I:int) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.getIndex():int type: VIRTUAL \l0x00aa: INVOKE  (r5 I:com.google.android.exoplayer2.ExoPlaybackException) = \l  (r0 I:java.lang.Exception A[D('e' com.google.android.exoplayer2.text.SubtitleDecoderException)])\l  (r5 I:int)\l com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_46 [shape=record,label="{46\:\ 0x00ae|0x00ae: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_47 [shape=record,label="{47\:\ 0x00af|0x00af: INVOKE  (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.releaseBuffers():void type: DIRECT \l0x00b2: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00b3: IPUT  \l  (r5 I:boolean)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.outputStreamEnded boolean \l}"];
Node_48 [shape=record,label="{48\:\ 0x00b6|0x00b6: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextSubtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l0x00b8: IGET  (r6 I:long) = \l  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer)\l com.google.android.exoplayer2.text.SubtitleOutputBuffer.timeUs long \l0x00ba: CMP_L  (r5 I:int) = (r6 I:long), (r12 I:long A[D('positionUs' long)]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x00bc|0x00bc: IF  (r5 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:29:0x0065 \l}"];
Node_50 [shape=record,label="{50\:\ 0x00be|0x00be: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.subtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l}"];
Node_51 [shape=record,label="{51\:\ 0x00c0|0x00c0: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x00c7 \l}"];
Node_52 [shape=record,label="{52\:\ 0x00c2|0x00c2: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.subtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l0x00c4: INVOKE  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer)\l com.google.android.exoplayer2.text.SubtitleOutputBuffer.release():void type: VIRTUAL \l}"];
Node_53 [shape=record,label="{53\:\ 0x00c7|0x00c7: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextSubtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l0x00c9: IPUT  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.subtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l0x00cb: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00cc: IPUT  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.nextSubtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l0x00ce: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.subtitle com.google.android.exoplayer2.text.SubtitleOutputBuffer \l0x00d0: INVOKE  (r5 I:int) = \l  (r5 I:com.google.android.exoplayer2.text.SubtitleOutputBuffer)\l  (r12 I:long A[D('positionUs' long)])\l com.google.android.exoplayer2.text.SubtitleOutputBuffer.getNextEventTimeIndex(long):int type: VIRTUAL \l0x00d4: IPUT  \l  (r5 I:int)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.nextSubtitleEventIndex int \l0x00d6: CONST  (r4 I:?[boolean, int, float, short, byte, char] A[D('textRendererNeedsUpdate' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x00d8|SYNTHETIC\lSplitter:B:54:0x00d8\l}"];
Node_55 [shape=record,label="{55\:\ ?|Splitter:B:54:0x00d8\l|0x00d8: IGET  (r5 I:com.google.android.exoplayer2.FormatHolder) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.formatHolder com.google.android.exoplayer2.FormatHolder A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}, TRY_ENTER]\l0x00da: IGET  (r6 I:com.google.android.exoplayer2.text.SubtitleInputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00dc: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00dd: INVOKE  (r1 I:int) = \l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l  (r5 I:com.google.android.exoplayer2.FormatHolder)\l  (r6 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l  (r7 I:boolean)\l com.google.android.exoplayer2.text.TextRenderer.readSource(com.google.android.exoplayer2.FormatHolder, com.google.android.exoplayer2.decoder.DecoderInputBuffer, boolean):int type: VIRTUAL A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00e1: CONST  (r5 I:?[int, float, short, byte, char]) = (\-4 ?[int, float, short, byte, char]) A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_56 [shape=record,label="{56\:\ 0x00e2|0x00e2: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x010b A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_57 [shape=record,label="{57\:\ 0x00e4|0x00e4: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00e6: INVOKE  (r5 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer)\l com.google.android.exoplayer2.text.SubtitleInputBuffer.isEndOfStream():boolean type: VIRTUAL A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_58 [shape=record,label="{58\:\ 0x00ea|0x00ea: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:61:0x00fb A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_59 [shape=record,label="{59\:\ 0x00ec|0x00ec: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00ed: IPUT  \l  (r5 I:boolean)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.inputStreamEnded boolean A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_60 [shape=record,label="{60\:\ 0x00ef|0x00ef: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleDecoder) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.decoder com.google.android.exoplayer2.text.SubtitleDecoder A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00f1: IGET  (r6 I:com.google.android.exoplayer2.text.SubtitleInputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00f3: INVOKE  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleDecoder)\l  (r6 I:java.lang.Object)\l com.google.android.exoplayer2.text.SubtitleDecoder.queueInputBuffer(java.lang.Object):void type: INTERFACE A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00f6: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00f7: IPUT  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer)\l  (r11 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00f9: GOTO  \-\> 0x0075 A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l}"];
Node_61 [shape=record,label="{61\:\ 0x00fb|0x00fb: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00fd: IGET  (r6 I:com.google.android.exoplayer2.FormatHolder) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.formatHolder com.google.android.exoplayer2.FormatHolder A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x00ff: IGET  (r6 I:com.google.android.exoplayer2.Format) = (r6 I:com.google.android.exoplayer2.FormatHolder) com.google.android.exoplayer2.FormatHolder.format com.google.android.exoplayer2.Format A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0101: IGET  (r6 I:long) = (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.subsampleOffsetUs long A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0103: IPUT  \l  (r6 I:long)\l  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer)\l com.google.android.exoplayer2.text.SubtitleInputBuffer.subsampleOffsetUs long A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0105: IGET  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer) = (r11 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.nextInputBuffer com.google.android.exoplayer2.text.SubtitleInputBuffer A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}]\l0x0107: INVOKE  \l  (r5 I:com.google.android.exoplayer2.text.SubtitleInputBuffer)\l com.google.android.exoplayer2.text.SubtitleInputBuffer.flip():void type: VIRTUAL A[Catch:\{ SubtitleDecoderException \-\> 0x00a5 \}, TRY_LEAVE]\l}"];
Node_63 [shape=record,label="{63\:\ 0x010b|0x010b: CONST  (r5 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x010c|0x010c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0075 \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.text.TextRenderer.render((r11 'this' I:com.google.android.exoplayer2.text.TextRenderer A[IMMUTABLE_TYPE, THIS]), (r12 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:long A[D('elapsedRealtimeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0028\-0x0038: r2 'subtitleNextEventTimeUs' long\l  0x0020\-0x0038: r4 'textRendererNeedsUpdate' boolean\l  0x0039\-0x0042: r0 'e' com.google.android.exoplayer2.text.SubtitleDecoderException\l  0x00a6\-0x00af: r0 'e' com.google.android.exoplayer2.text.SubtitleDecoderException\l  0x00e1\-0x010f: r1 'result' int\l  0x0042\-0x010f: r4 'textRendererNeedsUpdate' boolean\l  ?\-0x010f: r12 'positionUs' long\l  ?\-0x010f: r14 'elapsedRealtimeUs' long\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_2;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_29;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_48;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_47;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_2;
Node_32 -> Node_33[style=dashed];
Node_33 -> Node_34;
Node_33 -> Node_44;
Node_34 -> Node_35;
Node_35 -> Node_2;
Node_35 -> Node_36[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_40;
Node_38 -> Node_39;
Node_39 -> Node_2;
Node_39 -> Node_40[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_54;
Node_42 -> Node_2;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_47 -> Node_29;
Node_48 -> Node_49;
Node_49 -> Node_29;
Node_49 -> Node_50[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_53 -> Node_29;
Node_54 -> Node_55;
Node_54 -> Node_44;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_63;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_61;
Node_59 -> Node_60;
Node_60 -> Node_33;
Node_61 -> Node_60;
Node_63 -> Node_64;
Node_64 -> Node_33;
Node_64 -> Node_2[style=dashed];
}

