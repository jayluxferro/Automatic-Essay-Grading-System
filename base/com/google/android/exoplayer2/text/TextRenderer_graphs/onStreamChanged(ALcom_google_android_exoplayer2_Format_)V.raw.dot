digraph "CFG forcom.google.android.exoplayer2.text.TextRenderer.onStreamChanged([Lcom\/google\/android\/exoplayer2\/Format;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: AGET  (r0 I:?[OBJECT, ARRAY]) = \l  (r3 I:?[OBJECT, ARRAY][] A[D('formats' com.google.android.exoplayer2.Format[])])\l  (r0 I:?[int, short, byte, char])\l \l0x0003: IPUT  \l  (r0 I:com.google.android.exoplayer2.Format)\l  (r2 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.streamFormat com.google.android.exoplayer2.Format \l0x0005: IGET  (r0 I:com.google.android.exoplayer2.text.SubtitleDecoder) = (r2 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.decoder com.google.android.exoplayer2.text.SubtitleDecoder \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: IPUT  \l  (r0 I:int)\l  (r2 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.decoderReplacementState int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r0 I:com.google.android.exoplayer2.text.SubtitleDecoderFactory) = (r2 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.decoderFactory com.google.android.exoplayer2.text.SubtitleDecoderFactory \l0x000f: IGET  (r1 I:com.google.android.exoplayer2.Format) = (r2 I:com.google.android.exoplayer2.text.TextRenderer) com.google.android.exoplayer2.text.TextRenderer.streamFormat com.google.android.exoplayer2.Format \l0x0011: INVOKE  (r0 I:com.google.android.exoplayer2.text.SubtitleDecoder) = \l  (r0 I:com.google.android.exoplayer2.text.SubtitleDecoderFactory)\l  (r1 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.text.SubtitleDecoderFactory.createDecoder(com.google.android.exoplayer2.Format):com.google.android.exoplayer2.text.SubtitleDecoder type: INTERFACE \l0x0015: IPUT  \l  (r0 I:com.google.android.exoplayer2.text.SubtitleDecoder)\l  (r2 I:com.google.android.exoplayer2.text.TextRenderer)\l com.google.android.exoplayer2.text.TextRenderer.decoder com.google.android.exoplayer2.text.SubtitleDecoder \l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.text.TextRenderer.onStreamChanged((r2 'this' I:com.google.android.exoplayer2.text.TextRenderer A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.android.exoplayer2.Format[] A[D('formats' com.google.android.exoplayer2.Format[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0017: r3 'formats' com.google.android.exoplayer2.Format[]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
}

