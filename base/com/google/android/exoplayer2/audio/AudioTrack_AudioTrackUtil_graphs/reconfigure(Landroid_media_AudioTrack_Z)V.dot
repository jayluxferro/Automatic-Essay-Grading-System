digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.AudioTrackUtil.reconfigure(Landroid\/media\/AudioTrack;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.audioTrack = r5\lr4.needsPassthroughWorkaround = r6\lr4.stopTimestampUs = com.google.android.exoplayer2.C1260C.TIME_UNSET\lr4.lastRawPlaybackHeadPosition = 0\lr4.rawPlaybackHeadWrapCount = 0\lr4.passthroughWorkaroundPauseOffset = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|if (r5 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|r4.sampleRate = r5.getSampleRate()\l}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.AudioTrack.AudioTrackUtil.reconfigure((r4v0 'this' com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil A[IMMUTABLE_TYPE, THIS]), (r5v0 'audioTrack' android.media.AudioTrack A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'needsPassthroughWorkaround' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

