digraph "CFG forcom.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.onEnabled(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.decoder.DecoderCounters) =  com.google.android.exoplayer2.decoder.DecoderCounters \l0x0002: INVOKE  \l  (r1 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.\<init\>():void type: DIRECT \l0x0005: IPUT  \l  (r1 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters \l0x0007: IGET  (r1 I:com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher) = \l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.eventDispatcher com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher \l0x0009: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters \l0x000b: INVOKE  \l  (r1 I:com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher)\l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.audio.AudioRendererEventListener.EventDispatcher.enabled(com.google.android.exoplayer2.decoder.DecoderCounters):void type: VIRTUAL \l0x000e: INVOKE  (r1 I:com.google.android.exoplayer2.RendererConfiguration) = \l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.getConfiguration():com.google.android.exoplayer2.RendererConfiguration type: VIRTUAL \l0x0012: IGET  (r0 I:int) = (r1 I:com.google.android.exoplayer2.RendererConfiguration) com.google.android.exoplayer2.RendererConfiguration.tunnelingAudioSessionId int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tunnelingAudioSessionId' int)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: IGET  (r1 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack \l0x0018: INVOKE  \l  (r1 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r0 I:int A[D('tunnelingAudioSessionId' int)])\l com.google.android.exoplayer2.audio.AudioTrack.enableTunnelingV21(int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IGET  (r1 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack \l0x001e: INVOKE  (r1 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.disableTunneling():void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.onEnabled((r3 'this' I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[D('joining' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0014\-0x0021: r0 'tunnelingAudioSessionId' int\l  ?\-0x0021: r4 'joining' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
}

