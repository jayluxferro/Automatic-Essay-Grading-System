digraph "CFG forcom.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.processEndOfStream()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: IPUT  \l  (r1 I:boolean)\l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputStreamEnded boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: IGET  (r1 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack A[Catch:\{ WriteException \-\> 0x0009 \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playToEndOfStream():void type: VIRTUAL A[Catch:\{ WriteException \-\> 0x0009 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|ExcHandler: WriteException null\lSplitter:B:1:0x0003\l|0x0009: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IGET  (r1 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.ExoMediaCrypto\>) = \l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l0x000c: INVOKE  (r1 I:com.google.android.exoplayer2.drm.DrmSession$DrmSessionException) = (r1 I:com.google.android.exoplayer2.drm.DrmSession) com.google.android.exoplayer2.drm.DrmSession.getError():com.google.android.exoplayer2.drm.DrmSession$DrmSessionException type: INTERFACE \l0x0010: INVOKE  (r2 I:int) = \l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.getIndex():int type: VIRTUAL \l0x0014: INVOKE  (r1 I:com.google.android.exoplayer2.ExoPlaybackException) = (r1 I:java.lang.Exception), (r2 I:int) com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.processEndOfStream((r3 'this' I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x000a\-0x0018: r0 'e' com.google.android.exoplayer2.audio.AudioTrack$WriteException\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

