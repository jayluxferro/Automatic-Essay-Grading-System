digraph "CFG forcom.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.render(JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: IGET  (r2 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputStreamEnded boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\lSplitter:B:2:0x0005\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0005\l|0x0005: IGET  (r2 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack A[Catch:\{ WriteException \-\> 0x000b \}, TRY_ENTER]\l0x0007: INVOKE  (r2 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playToEndOfStream():void type: VIRTUAL A[Catch:\{ WriteException \-\> 0x000b \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|ExcHandler: WriteException null\lSplitter:B:2:0x0005\l|0x000b: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: INVOKE  (r2 I:int) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.getIndex():int type: VIRTUAL \l0x0010: INVOKE  (r2 I:com.google.android.exoplayer2.ExoPlaybackException) = \l  (r0 I:java.lang.Exception A[D('e' com.google.android.exoplayer2.audio.AudioTrack$WriteException)])\l  (r2 I:int)\l com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|0x0015: IGET  (r2 I:com.google.android.exoplayer2.Format) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.inputFormat com.google.android.exoplayer2.Format \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0030 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.flagsOnlyBuffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x001b: INVOKE  \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.clear():void type: VIRTUAL \l0x001e: IGET  (r2 I:com.google.android.exoplayer2.FormatHolder) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.formatHolder com.google.android.exoplayer2.FormatHolder \l0x0020: IGET  (r3 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.flagsOnlyBuffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x0022: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l  (r2 I:com.google.android.exoplayer2.FormatHolder)\l  (r3 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l  (r4 I:boolean)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.readSource(com.google.android.exoplayer2.FormatHolder, com.google.android.exoplayer2.decoder.DecoderInputBuffer, boolean):int type: VIRTUAL \l0x0026: CONST  (r2 I:?[int, float, short, byte, char]) = (\-5 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: IGET  (r2 I:com.google.android.exoplayer2.FormatHolder) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.formatHolder com.google.android.exoplayer2.FormatHolder \l0x002b: IGET  (r2 I:com.google.android.exoplayer2.Format) = (r2 I:com.google.android.exoplayer2.FormatHolder) com.google.android.exoplayer2.FormatHolder.format com.google.android.exoplayer2.Format \l0x002d: INVOKE  \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l  (r2 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.onInputFormatChanged(com.google.android.exoplayer2.Format):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: INVOKE  \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.maybeInitDecoder():void type: DIRECT \l0x0033: IGET  (r2 I:com.google.android.exoplayer2.decoder.SimpleDecoder\<com.google.android.exoplayer2.decoder.DecoderInputBuffer, ? extends com.google.android.exoplayer2.decoder.SimpleOutputBuffer, ? extends com.google.android.exoplayer2.audio.AudioDecoderException\>) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoder com.google.android.exoplayer2.decoder.SimpleDecoder \l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|0x0035: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: CONST_STR  (r2 I:java.lang.String) =  \"drainAndFeed\" \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|SYNTHETIC\lSplitter:B:16:0x0039\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0039\l|0x0039: INVOKE  (r2 I:java.lang.String) com.google.android.exoplayer2.util.TraceUtil.beginSection(java.lang.String):void type: STATIC A[Catch:\{ AudioDecoderException \-\> 0x0071, ConfigurationException \-\> 0x006f, InitializationException \-\> 0x006d, WriteException \-\> 0x0063 \}, TRY_ENTER]\l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|0x003c: INVOKE  (r2 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.drainOutputBuffer():boolean type: DIRECT A[Catch:\{ AudioDecoderException \-\> 0x0071, ConfigurationException \-\> 0x006f, InitializationException \-\> 0x006d, WriteException \-\> 0x0063 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|0x0040: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x003c A[Catch:\{ AudioDecoderException \-\> 0x0071, ConfigurationException \-\> 0x006f, InitializationException \-\> 0x006d, WriteException \-\> 0x0063 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0042|0x0042: INVOKE  (r2 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.feedInputBuffer():boolean type: DIRECT A[Catch:\{ AudioDecoderException \-\> 0x0071, ConfigurationException \-\> 0x006f, InitializationException \-\> 0x006d, WriteException \-\> 0x0063 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|0x0046: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0042 A[Catch:\{ AudioDecoderException \-\> 0x0071, ConfigurationException \-\> 0x006f, InitializationException \-\> 0x006d, WriteException \-\> 0x0063 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|0x0048: INVOKE   com.google.android.exoplayer2.util.TraceUtil.endSection():void type: STATIC A[Catch:\{ AudioDecoderException \-\> 0x0071, ConfigurationException \-\> 0x006f, InitializationException \-\> 0x006d, WriteException \-\> 0x0063 \}, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x004b|0x004b: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters \l0x004d: INVOKE  \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.ensureUpdated():void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|0x0051: CONST  (r2 I:?[int, float, short, byte, char]) = (\-4 ?[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0052|0x0052: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_26 [shape=record,label="{26\:\ 0x0054|0x0054: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.flagsOnlyBuffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x0056: INVOKE  (r2 I:boolean) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.isEndOfStream():boolean type: VIRTUAL \l0x005a: INVOKE  (r2 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x005d: IPUT  \l  (r4 I:boolean)\l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.inputStreamEnded boolean \l0x005f: INVOKE  \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.processEndOfStream():void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x0063|ExcHandler: WriteException null\lSplitter:B:16:0x0039\l|0x0063: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_28 [shape=record,label="{28\:\ 0x0064|0x0064: INVOKE  (r2 I:int) = \l  (r5 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.getIndex():int type: VIRTUAL \l0x0068: INVOKE  (r2 I:com.google.android.exoplayer2.ExoPlaybackException) = \l  (r0 I:java.lang.Exception A[D('e' java.lang.Exception)])\l  (r2 I:int)\l com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_29 [shape=record,label="{29\:\ 0x006c|0x006c: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x006d|ExcHandler: InitializationException null\lSplitter:B:16:0x0039\l|0x006d: MOVE_EXCEPTION  (r0 I:?[OBJECT] A[D('e' java.lang.Exception)]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x006f|ExcHandler: ConfigurationException null\lSplitter:B:16:0x0039\l|0x006f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_34 [shape=record,label="{34\:\ 0x0071|ExcHandler: AudioDecoderException null\lSplitter:B:16:0x0039\l|0x0071: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.render((r5 'this' I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer A[IMMUTABLE_TYPE, THIS]), (r6 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[D('elapsedRealtimeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000c\-0x0015: r0 'e' com.google.android.exoplayer2.audio.AudioTrack$WriteException\l  0x0026\-0x0030: r1 'result' int\l  0x0051\-0x0063: r1 'result' int\l  0x0064\-0x006d: r0 'e' java.lang.Exception\l  ?\-0x0072: r6 'positionUs' long\l  ?\-0x0072: r8 'elapsedRealtimeUs' long\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_24;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_4;
Node_14 -> Node_15[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_34;
Node_16 -> Node_32;
Node_16 -> Node_30;
Node_16 -> Node_27;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_18;
Node_19 -> Node_20[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_20;
Node_21 -> Node_22[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_4;
Node_24 -> Node_25;
Node_25 -> Node_4;
Node_25 -> Node_26[style=dashed];
Node_26 -> Node_4;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_30 -> Node_28;
Node_32 -> Node_28;
Node_34 -> Node_28;
}

