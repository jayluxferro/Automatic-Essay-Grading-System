digraph "CFG forcom.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.handleMessage(ILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('messageType' int)])\l k:[2, 3] t:[0x0007, 0x0013] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: INVOKE  \l  (r3 I:com.google.android.exoplayer2.BaseRenderer)\l  (r4 I:int A[D('messageType' int)])\l  (r5 I:java.lang.Object A[D('message' java.lang.Object)])\l com.google.android.exoplayer2.BaseRenderer.handleMessage(int, java.lang.Object):void type: SUPER \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r1 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack \l0x0009: CHECK_CAST  (r5 I:java.lang.Float A[D('message' java.lang.Object)]) = (java.lang.Float) (r5 I:?[OBJECT, ARRAY] A[D('message' java.lang.Object)]) \l0x000b: INVOKE  (r2 I:float) = (r5 I:java.lang.Float A[D('message' java.lang.Object)]) java.lang.Float.floatValue():float type: VIRTUAL \l0x000f: INVOKE  \l  (r1 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r2 I:float)\l com.google.android.exoplayer2.audio.AudioTrack.setVolume(float):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: CHECK_CAST  (r5 I:java.lang.Integer A[D('message' java.lang.Object)]) = (java.lang.Integer) (r5 I:?[OBJECT, ARRAY] A[D('message' java.lang.Object)]) \l0x0015: INVOKE  (r0 I:int) = (r5 I:java.lang.Integer A[D('message' java.lang.Object)]) java.lang.Integer.intValue():int type: VIRTUAL \l0x0019: IGET  (r1 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r3 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack \l0x001b: INVOKE  \l  (r1 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r0 I:int A[D('streamType' int)])\l com.google.android.exoplayer2.audio.AudioTrack.setStreamType(int):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.handleMessage((r3 'this' I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('messageType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[D('message' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0006: r5 'message' java.lang.Object\l  0x0007\-0x000b: r5 'message' java.lang.Object\l  0x0013\-0x0015: r5 'message' java.lang.Object\l  0x0019\-0x0027: r0 'streamType' int\l  ?\-0x0027: r4 'messageType' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_3 -> Node_2;
Node_4 -> Node_2;
}

