digraph "CFG forcom.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.\<init\>(Landroid\/os\/Handler;Lcom\/google\/android\/exoplayer2\/audio\/AudioRendererEventListener;Lcom\/google\/android\/exoplayer2\/audio\/AudioCapabilities;Lcom\/google\/android\/exoplayer2\/drm\/DrmSessionManager;Z[Lcom\/google\/android\/exoplayer2\/audio\/AudioProcessor;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: INVOKE  \l  (r4 I:com.google.android.exoplayer2.BaseRenderer)\l  (r3 I:int)\l com.google.android.exoplayer2.BaseRenderer.\<init\>(int):void type: DIRECT \l0x0004: IPUT  \l  (r8 I:com.google.android.exoplayer2.drm.DrmSessionManager\<com.google.android.exoplayer2.drm.ExoMediaCrypto\> A[D('drmSessionManager' com.google.android.exoplayer2.drm.DrmSessionManager\<com.google.android.exoplayer2.drm.ExoMediaCrypto\>)])\l  (r4 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.drmSessionManager com.google.android.exoplayer2.drm.DrmSessionManager \l0x0006: IPUT  \l  (r9 I:boolean A[D('playClearSamplesWithoutKeys' boolean)])\l  (r4 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.playClearSamplesWithoutKeys boolean \l0x0008: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher) =  com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher \l0x000a: INVOKE  \l  (r0 I:com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher)\l  (r5 I:android.os.Handler A[D('eventHandler' android.os.Handler)])\l  (r6 I:com.google.android.exoplayer2.audio.AudioRendererEventListener A[D('eventListener' com.google.android.exoplayer2.audio.AudioRendererEventListener)])\l com.google.android.exoplayer2.audio.AudioRendererEventListener.EventDispatcher.\<init\>(android.os.Handler, com.google.android.exoplayer2.audio.AudioRendererEventListener):void type: DIRECT \l0x000d: IPUT  \l  (r0 I:com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher)\l  (r4 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.eventDispatcher com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher \l0x000f: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.audio.AudioTrack) =  com.google.android.exoplayer2.audio.AudioTrack \l0x0011: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer$AudioTrackListener) =  com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer$AudioTrackListener \l0x0013: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: INVOKE  \l  (r1 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer$AudioTrackListener)\l  (r4 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l  (r2 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer$1)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.AudioTrackListener.\<init\>(com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer, com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer$1):void type: DIRECT \l0x0017: INVOKE  \l  (r0 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r7 I:com.google.android.exoplayer2.audio.AudioCapabilities A[D('audioCapabilities' com.google.android.exoplayer2.audio.AudioCapabilities)])\l  (r10 I:com.google.android.exoplayer2.audio.AudioProcessor[] A[D('audioProcessors' com.google.android.exoplayer2.audio.AudioProcessor[])])\l  (r1 I:com.google.android.exoplayer2.audio.AudioTrack$Listener)\l com.google.android.exoplayer2.audio.AudioTrack.\<init\>(com.google.android.exoplayer2.audio.AudioCapabilities, com.google.android.exoplayer2.audio.AudioProcessor[], com.google.android.exoplayer2.audio.AudioTrack$Listener):void type: DIRECT \l0x001a: IPUT  \l  (r0 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r4 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack \l0x001c: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.FormatHolder) =  com.google.android.exoplayer2.FormatHolder \l0x001e: INVOKE  (r0 I:com.google.android.exoplayer2.FormatHolder) com.google.android.exoplayer2.FormatHolder.\<init\>():void type: DIRECT \l0x0021: IPUT  \l  (r0 I:com.google.android.exoplayer2.FormatHolder)\l  (r4 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.formatHolder com.google.android.exoplayer2.FormatHolder \l0x0023: INVOKE  (r0 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer) =  com.google.android.exoplayer2.decoder.DecoderInputBuffer.newFlagsOnlyInstance():com.google.android.exoplayer2.decoder.DecoderInputBuffer type: STATIC \l0x0027: IPUT  \l  (r0 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l  (r4 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.flagsOnlyBuffer com.google.android.exoplayer2.decoder.DecoderInputBuffer \l0x0029: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002a: IPUT  \l  (r0 I:int)\l  (r4 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoderReinitializationState int \l0x002c: IPUT  \l  (r3 I:boolean)\l  (r4 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrackNeedsConfigure boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x002e|0x002e: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.\<init\>((r4 'this' I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer A[IMMUTABLE_TYPE, THIS]), (r5 I:android.os.Handler A[D('eventHandler' android.os.Handler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.google.android.exoplayer2.audio.AudioRendererEventListener A[D('eventListener' com.google.android.exoplayer2.audio.AudioRendererEventListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.google.android.exoplayer2.audio.AudioCapabilities A[D('audioCapabilities' com.google.android.exoplayer2.audio.AudioCapabilities), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.exoplayer2.drm.DrmSessionManager\<com.google.android.exoplayer2.drm.ExoMediaCrypto\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('playClearSamplesWithoutKeys' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.google.android.exoplayer2.audio.AudioProcessor[] A[D('audioProcessors' com.google.android.exoplayer2.audio.AudioProcessor[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x002e: r5 'eventHandler' android.os.Handler\l  ?\-0x002e: r6 'eventListener' com.google.android.exoplayer2.audio.AudioRendererEventListener\l  ?\-0x002e: r7 'audioCapabilities' com.google.android.exoplayer2.audio.AudioCapabilities\l  0x0000\-0x002e: r8 'drmSessionManager' com.google.android.exoplayer2.drm.DrmSessionManager\<com.google.android.exoplayer2.drm.ExoMediaCrypto\>\l  ?\-0x002e: r9 'playClearSamplesWithoutKeys' boolean\l  ?\-0x002e: r10 'audioProcessors' com.google.android.exoplayer2.audio.AudioProcessor[]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/os\/Handler;, Lcom\/google\/android\/exoplayer2\/audio\/AudioRendererEventListener;, Lcom\/google\/android\/exoplayer2\/audio\/AudioCapabilities;, Lcom\/google\/android\/exoplayer2\/drm\/DrmSessionManager, \<, Lcom\/google\/android\/exoplayer2\/drm\/ExoMediaCrypto;, \>;Z[, Lcom\/google\/android\/exoplayer2\/audio\/AudioProcessor;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

