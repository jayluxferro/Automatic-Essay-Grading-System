digraph "CFG forcom.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.maybeInitDecoder()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r11.decoder == null) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|r11.drmSession = r11.pendingDrmSession\lr10 = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r11.drmSession == null) goto L_0x0031\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|int r8 = r11.drmSession.getState()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r8 != 0) goto L_0x0025\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016}"];
Node_7 [shape=record,label="{7\:\ 0x0024|throw com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(r11.drmSession.getError(), getIndex())\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025}"];
Node_9 [shape=record,label="{9\:\ 0x0026|if (r8 == 3) goto L_0x002b\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028}"];
Node_11 [shape=record,label="{11\:\ 0x0029|if (r8 != 4) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|com.google.android.exoplayer2.drm.ExoMediaCrypto r10 = r11.drmSession.getMediaCrypto()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|SYNTHETIC\lPHI: r10 \l  PHI: (r10v1 'mediaCrypto' com.google.android.exoplayer2.drm.ExoMediaCrypto) = (r10v0 'mediaCrypto' com.google.android.exoplayer2.drm.ExoMediaCrypto), (r10v2 'mediaCrypto' com.google.android.exoplayer2.drm.ExoMediaCrypto) binds: [B:3:0x000c, B:12:0x002b] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:13:0x0031\l}"];
Node_14 [shape=record,label="{14\:\ ?|Catch:\{ AudioDecoderException \-\> 0x005f \}\lSplitter:B:13:0x0031\l|long r6 = android.os.SystemClock.elapsedRealtime()     \/\/ Catch:\{ AudioDecoderException \-\> 0x005f \}\lcom.google.android.exoplayer2.util.TraceUtil.beginSection(\"createAudioDecoder\")     \/\/ Catch:\{ AudioDecoderException \-\> 0x005f \}\lr11.decoder = createDecoder(r11.inputFormat, r10)     \/\/ Catch:\{ AudioDecoderException \-\> 0x005f \}\lcom.google.android.exoplayer2.util.TraceUtil.endSection()     \/\/ Catch:\{ AudioDecoderException \-\> 0x005f \}\llong r2 = android.os.SystemClock.elapsedRealtime()     \/\/ Catch:\{ AudioDecoderException \-\> 0x005f \}\lr11.eventDispatcher.decoderInitialized(r11.decoder.getName(), r2, r2 \- r6)     \/\/ Catch:\{ AudioDecoderException \-\> 0x005f \}\lcom.google.android.exoplayer2.decoder.DecoderCounters r0 = r11.decoderCounters     \/\/ Catch:\{ AudioDecoderException \-\> 0x005f \}\lr0.decoderInitCount = r0.decoderInitCount + 1     \/\/ Catch:\{ AudioDecoderException \-\> 0x005f \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x005f|ExcHandler: AudioDecoderException (r9v0 'e' com.google.android.exoplayer2.audio.AudioDecoderException A[CUSTOM_DECLARE])\lSplitter:B:13:0x0031\l|com.google.android.exoplayer2.audio.AudioDecoderException r9 = move\-exception\l}"];
Node_16 [shape=record,label="{16\:\ 0x0060}"];
Node_17 [shape=record,label="{17\:\ 0x0068|throw com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(r9, getIndex())\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.maybeInitDecoder((r11v0 'this' com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

