digraph "CFG forcom.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.supportsFormat(Lcom\/google\/android\/exoplayer2\/Format;)I" {
subgraph cluster_Region_1957705445 {
label = "R(2:0|(2:(1:10)|(1:11)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = supportsFormatInternal(r5)\l}"];
subgraph cluster_Region_1255774895 {
label = "R(2:(1:10)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_708575022 {
label = "IF [B:1:0x0004, B:3:0x0007] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 == 0) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|ADDED_TO_REGION\l|if (r0 == 1) goto L_?\l}"];
subgraph cluster_Region_2025424997 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_2114735737 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return r0 \| (com.google.android.exoplayer2.util.Util.SDK_INT \>= 21 ? 16 : 0) \| 4\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000a}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0010}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0012|PHI: r1 \l  PHI: (r1v1 'tunnelingSupport' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return r0\l}"];
MethodNode[shape=record,label="{public final int com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.supportsFormat((r4v0 'this' com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer A[IMMUTABLE_TYPE, THIS]), (r5v0 'format' com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_11;
Node_8 -> Node_7;
}

