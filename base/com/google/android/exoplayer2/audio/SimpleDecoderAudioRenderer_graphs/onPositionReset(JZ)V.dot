digraph "CFG forcom.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.onPositionReset(JZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.audioTrack.reset()\lr3.currentPositionUs = r4\lr3.allowPositionDiscontinuity = true\lr3.inputStreamEnded = false\lr3.outputStreamEnded = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|if (r3.decoder == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|flushDecoder()\l}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.onPositionReset((r3v0 'this' com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer A[IMMUTABLE_TYPE, THIS]), (r4v0 'positionUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'joining' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

