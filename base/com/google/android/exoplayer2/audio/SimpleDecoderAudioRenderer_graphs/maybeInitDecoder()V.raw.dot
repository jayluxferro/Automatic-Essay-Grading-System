digraph "CFG forcom.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.maybeInitDecoder()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.exoplayer2.decoder.SimpleDecoder\<com.google.android.exoplayer2.decoder.DecoderInputBuffer, ? extends com.google.android.exoplayer2.decoder.SimpleOutputBuffer, ? extends com.google.android.exoplayer2.audio.AudioDecoderException\>) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoder com.google.android.exoplayer2.decoder.SimpleDecoder \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IGET  (r0 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.ExoMediaCrypto\>) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.pendingDrmSession com.google.android.exoplayer2.drm.DrmSession \l0x0007: IPUT  \l  (r0 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.ExoMediaCrypto\>)\l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l0x0009: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: IGET  (r0 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.ExoMediaCrypto\>) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0031 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IGET  (r0 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.ExoMediaCrypto\>) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l0x0010: INVOKE  (r8 I:int) = (r0 I:com.google.android.exoplayer2.drm.DrmSession) com.google.android.exoplayer2.drm.DrmSession.getState():int type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drmSessionState' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0025 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IGET  (r0 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.ExoMediaCrypto\>) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l0x0018: INVOKE  (r0 I:com.google.android.exoplayer2.drm.DrmSession$DrmSessionException) = (r0 I:com.google.android.exoplayer2.drm.DrmSession) com.google.android.exoplayer2.drm.DrmSession.getError():com.google.android.exoplayer2.drm.DrmSession$DrmSessionException type: INTERFACE \l0x001c: INVOKE  (r1 I:int) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.getIndex():int type: VIRTUAL \l0x0020: INVOKE  (r0 I:com.google.android.exoplayer2.ExoPlaybackException) = (r0 I:java.lang.Exception), (r1 I:int) com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drmSessionState' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002b \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('drmSessionState' int)]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0004 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: IGET  (r0 I:com.google.android.exoplayer2.drm.DrmSession\<com.google.android.exoplayer2.drm.ExoMediaCrypto\>) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.drmSession com.google.android.exoplayer2.drm.DrmSession \l0x002d: INVOKE  (r10 I:com.google.android.exoplayer2.drm.ExoMediaCrypto A[D('mediaCrypto' com.google.android.exoplayer2.drm.ExoMediaCrypto)]) = (r0 I:com.google.android.exoplayer2.drm.DrmSession) com.google.android.exoplayer2.drm.DrmSession.getMediaCrypto():com.google.android.exoplayer2.drm.ExoMediaCrypto type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|SYNTHETIC\lSplitter:B:14:0x0031\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x0031\l|0x0031: INVOKE  (r6 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC A[Catch:\{ AudioDecoderException \-\> 0x005f \}, TRY_ENTER]\l0x0035: CONST_STR  (r0 I:java.lang.String) =  \"createAudioDecoder\" A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x0037: INVOKE  (r0 I:java.lang.String) com.google.android.exoplayer2.util.TraceUtil.beginSection(java.lang.String):void type: STATIC A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x003a: IGET  (r0 I:com.google.android.exoplayer2.Format) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.inputFormat com.google.android.exoplayer2.Format A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x003c: INVOKE  (r0 I:com.google.android.exoplayer2.decoder.SimpleDecoder) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l  (r0 I:com.google.android.exoplayer2.Format)\l  (r10 I:com.google.android.exoplayer2.drm.ExoMediaCrypto A[D('mediaCrypto' com.google.android.exoplayer2.drm.ExoMediaCrypto)])\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.createDecoder(com.google.android.exoplayer2.Format, com.google.android.exoplayer2.drm.ExoMediaCrypto):com.google.android.exoplayer2.decoder.SimpleDecoder type: VIRTUAL A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x0040: IPUT  \l  (r0 I:com.google.android.exoplayer2.decoder.SimpleDecoder\<com.google.android.exoplayer2.decoder.DecoderInputBuffer, ? extends com.google.android.exoplayer2.decoder.SimpleOutputBuffer, ? extends com.google.android.exoplayer2.audio.AudioDecoderException\>)\l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoder com.google.android.exoplayer2.decoder.SimpleDecoder A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x0042: INVOKE   com.google.android.exoplayer2.util.TraceUtil.endSection():void type: STATIC A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x0045: INVOKE  (r2 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x0049: IGET  (r0 I:com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.eventDispatcher com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x004b: IGET  (r1 I:com.google.android.exoplayer2.decoder.SimpleDecoder\<com.google.android.exoplayer2.decoder.DecoderInputBuffer, ? extends com.google.android.exoplayer2.decoder.SimpleOutputBuffer, ? extends com.google.android.exoplayer2.audio.AudioDecoderException\>) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoder com.google.android.exoplayer2.decoder.SimpleDecoder A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x004d: INVOKE  (r1 I:java.lang.String) = (r1 I:com.google.android.exoplayer2.decoder.SimpleDecoder) com.google.android.exoplayer2.decoder.SimpleDecoder.getName():java.lang.String type: VIRTUAL A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x0051: ARITH  (r4 I:long) = (r2 I:long A[D('codecInitializedTimestamp' long)]) \- (r6 I:long A[D('codecInitializingTimestamp' long)]) A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x0053: INVOKE  \l  (r0 I:com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher)\l  (r1 I:java.lang.String)\l  (r2 I:long A[D('codecInitializedTimestamp' long)])\l  (r4 I:long)\l com.google.android.exoplayer2.audio.AudioRendererEventListener.EventDispatcher.decoderInitialized(java.lang.String, long, long):void type: VIRTUAL A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x0056: IGET  (r0 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x0058: IGET  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.decoderInitCount int A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x005a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) A[Catch:\{ AudioDecoderException \-\> 0x005f \}]\l0x005c: IPUT  \l  (r1 I:int)\l  (r0 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.decoderInitCount int A[Catch:\{ AudioDecoderException \-\> 0x005f \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x005f|ExcHandler: AudioDecoderException null\lSplitter:B:14:0x0031\l|0x005f: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|0x0060: INVOKE  (r0 I:int) = \l  (r11 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.getIndex():int type: VIRTUAL \l0x0064: INVOKE  (r0 I:com.google.android.exoplayer2.ExoPlaybackException) = \l  (r9 I:java.lang.Exception A[D('e' com.google.android.exoplayer2.audio.AudioDecoderException)])\l  (r0 I:int)\l com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0068|0x0068: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.maybeInitDecoder((r11 'this' I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0014\-0x0031: r8 'drmSessionState' int\l  0x0049\-0x005f: r2 'codecInitializedTimestamp' long\l  0x0035\-0x005f: r6 'codecInitializingTimestamp' long\l  0x0060\-0x0068: r9 'e' com.google.android.exoplayer2.audio.AudioDecoderException\l  0x000a\-0x0068: r10 'mediaCrypto' com.google.android.exoplayer2.drm.ExoMediaCrypto\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_2;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_17;
Node_15 -> Node_2;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

