digraph "CFG forcom.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.drainOutputBuffer()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: IGET  (r0 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r0 I:com.google.android.exoplayer2.decoder.SimpleDecoder\<com.google.android.exoplayer2.decoder.DecoderInputBuffer, ? extends com.google.android.exoplayer2.decoder.SimpleOutputBuffer, ? extends com.google.android.exoplayer2.audio.AudioDecoderException\>) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoder com.google.android.exoplayer2.decoder.SimpleDecoder \l0x0009: INVOKE  (r0 I:com.google.android.exoplayer2.decoder.OutputBuffer) = (r0 I:com.google.android.exoplayer2.decoder.SimpleDecoder) com.google.android.exoplayer2.decoder.SimpleDecoder.dequeueOutputBuffer():com.google.android.exoplayer2.decoder.OutputBuffer type: VIRTUAL \l0x000d: CHECK_CAST  (r0 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer) = (com.google.android.exoplayer2.decoder.SimpleOutputBuffer) (r0 I:?[OBJECT, ARRAY]) \l0x000f: IPUT  \l  (r0 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer)\l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l0x0011: IGET  (r0 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN  (r5 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IGET  (r0 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters \l0x0018: IGET  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.skippedOutputBufferCount int \l0x001a: IGET  (r2 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l0x001c: IGET  (r2 I:int) = \l  (r2 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer)\l com.google.android.exoplayer2.decoder.SimpleOutputBuffer.skippedOutputBufferCount int \l0x001e: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x001f: IPUT  \l  (r1 I:int)\l  (r0 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.skippedOutputBufferCount int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: IGET  (r0 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l0x0023: INVOKE  (r0 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer)\l com.google.android.exoplayer2.decoder.SimpleOutputBuffer.isEndOfStream():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0042 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: IGET  (r0 I:int) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoderReinitializationState int \l0x002b: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0037 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: INVOKE  \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.releaseDecoder():void type: DIRECT \l0x0031: INVOKE  \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.maybeInitDecoder():void type: DIRECT \l0x0034: IPUT  \l  (r7 I:boolean)\l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrackNeedsConfigure boolean \l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: IGET  (r0 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l0x0039: INVOKE  \l  (r0 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer)\l com.google.android.exoplayer2.decoder.SimpleOutputBuffer.release():void type: VIRTUAL \l0x003c: IPUT  \l  (r8 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer)\l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l0x003e: INVOKE  \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.processEndOfStream():void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: IGET  (r0 I:boolean) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrackNeedsConfigure boolean \l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0059 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: INVOKE  (r6 I:com.google.android.exoplayer2.Format) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.getOutputFormat():com.google.android.exoplayer2.Format type: VIRTUAL \l0x004a: IGET  (r0 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack \l0x004c: IGET  (r1 I:java.lang.String) = \l  (r6 I:com.google.android.exoplayer2.Format A[D('outputFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x004e: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.Format A[D('outputFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.channelCount int \l0x0050: IGET  (r3 I:int) = \l  (r6 I:com.google.android.exoplayer2.Format A[D('outputFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleRate int \l0x0052: IGET  (r4 I:int) = \l  (r6 I:com.google.android.exoplayer2.Format A[D('outputFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.pcmEncoding int \l0x0054: INVOKE  \l  (r0 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l com.google.android.exoplayer2.audio.AudioTrack.configure(java.lang.String, int, int, int, int):void type: VIRTUAL \l0x0057: IPUT  \l  (r5 I:boolean)\l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrackNeedsConfigure boolean \l}"];
Node_15 [shape=record,label="{15\:\ 0x0059|0x0059: IGET  (r0 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack \l0x005b: IGET  (r1 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l0x005d: IGET  (r1 I:java.nio.ByteBuffer) = \l  (r1 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer)\l com.google.android.exoplayer2.decoder.SimpleOutputBuffer.data java.nio.ByteBuffer \l0x005f: IGET  (r2 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l0x0061: IGET  (r2 I:long) = \l  (r2 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer)\l com.google.android.exoplayer2.decoder.SimpleOutputBuffer.timeUs long \l0x0063: INVOKE  (r0 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r1 I:java.nio.ByteBuffer)\l  (r2 I:long)\l com.google.android.exoplayer2.audio.AudioTrack.handleBuffer(java.nio.ByteBuffer, long):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0067|0x0067: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0069|0x0069: IGET  (r0 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters \l0x006b: IGET  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.renderedOutputBufferCount int \l0x006d: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x006f: IPUT  \l  (r1 I:int)\l  (r0 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.renderedOutputBufferCount int \l0x0071: IGET  (r0 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer) = \l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l0x0073: INVOKE  \l  (r0 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer)\l com.google.android.exoplayer2.decoder.SimpleOutputBuffer.release():void type: VIRTUAL \l0x0076: IPUT  \l  (r8 I:com.google.android.exoplayer2.decoder.SimpleOutputBuffer)\l  (r9 I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer)\l com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.outputBuffer com.google.android.exoplayer2.decoder.SimpleOutputBuffer \l0x0078: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer.drainOutputBuffer((r9 'this' I:com.google.android.exoplayer2.audio.SimpleDecoderAudioRenderer A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x004a\-0x0059: r6 'outputFormat' com.google.android.exoplayer2.Format\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException, com.google.android.exoplayer2.audio.AudioDecoderException, com.google.android.exoplayer2.audio.AudioTrack$ConfigurationException, com.google.android.exoplayer2.audio.AudioTrack$InitializationException, com.google.android.exoplayer2.audio.AudioTrack$WriteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_4;
Node_11 -> Node_4;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_4;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_4;
}

