digraph "CFG forcom.google.android.exoplayer2.audio.DtsUtil.parseDtsAudioSampleCount(Ljava\/nio\/ByteBuffer;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:int) = \l  (r4 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)])\l java.nio.ByteBuffer.position():int type: VIRTUAL \l0x0004: ARITH  (r2 I:int) = (r1 I:int A[D('position' int)]) + (4 int) \l0x0006: INVOKE  (r2 I:byte) = \l  (r4 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)])\l  (r2 I:int)\l java.nio.ByteBuffer.get(int):byte type: VIRTUAL \l0x000a: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (1 ?[boolean, int, float, short, byte, char]) \l0x000c: ARITH  (r2 I:int) = (r2 I:int) \<\< (6 int) \l0x000e: ARITH  (r3 I:int) = (r1 I:int A[D('position' int)]) + (5 int) \l0x0010: INVOKE  (r3 I:byte) = \l  (r4 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)])\l  (r3 I:int)\l java.nio.ByteBuffer.get(int):byte type: VIRTUAL \l0x0014: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (252(0xfc, float:3.53E\-43) ?[int, float, short, byte, char]) \l0x0016: ARITH  (r3 I:int) = (r3 I:int) \>\> (2 int) \l0x0018: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) \| (r3 I:?[int, boolean, short, byte, char]) \l0x001a: ARITH  (r2 I:int) = (r0 I:int A[D('nblks' int)]) + (1 int) \l0x001c: ARITH  (r2 I:int) = (r2 I:int) * (32 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{public static int com.google.android.exoplayer2.audio.DtsUtil.parseDtsAudioSampleCount((r4 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001a\-0x001e: r0 'nblks' int\l  0x0004\-0x001e: r1 'position' int\l  ?\-0x001e: r4 'buffer' java.nio.ByteBuffer\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

