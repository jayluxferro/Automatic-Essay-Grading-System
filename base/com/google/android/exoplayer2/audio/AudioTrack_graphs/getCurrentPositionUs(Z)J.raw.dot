digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.getCurrentPositionUs(Z)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r12 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x0002: INVOKE  (r10 I:boolean) = (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.hasCurrentPositionUs():boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r10 I:?[long, double]) = (\-9223372036854775808 ?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r10 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r10 I:android.media.AudioTrack) = (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.audioTrack android.media.AudioTrack \l0x000d: INVOKE  (r10 I:int) = (r10 I:android.media.AudioTrack) android.media.AudioTrack.getPlayState():int type: VIRTUAL \l0x0011: CONST  (r11 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.maybeSampleSyncParams():void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: INVOKE  (r10 I:long) =  java.lang.System.nanoTime():long type: STATIC \l0x001b: ARITH  (r8 I:long) = (r10 I:long) \/ (r12 I:long) \l0x001d: IGET  (r10 I:boolean) = (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.audioTimestampSet boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0042 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IGET  (r10 I:com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil) = (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.audioTrackUtil com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil \l0x0023: INVOKE  (r10 I:long) = \l  (r10 I:com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil)\l com.google.android.exoplayer2.audio.AudioTrack.AudioTrackUtil.getTimestampNanoTime():long type: VIRTUAL \l0x0027: ARITH  (r10 I:long) = (r10 I:long) \/ (r12 I:long) \l0x0028: ARITH  (r4 I:long) = (r8 I:long A[D('systemClockUs' long)]) \- (r10 I:long) \l0x002a: INVOKE  (r2 I:long) = \l  (r14 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r4 I:long A[D('elapsedSinceTimestampUs' long)])\l com.google.android.exoplayer2.audio.AudioTrack.durationUsToFrames(long):long type: DIRECT \l0x002e: IGET  (r10 I:com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil) = (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.audioTrackUtil com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil \l0x0030: INVOKE  (r10 I:long) = \l  (r10 I:com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil)\l com.google.android.exoplayer2.audio.AudioTrack.AudioTrackUtil.getTimestampFramePosition():long type: VIRTUAL \l0x0034: ARITH  (r0 I:long) = (r10 I:long) + (r2 I:long A[D('elapsedSinceTimestampFrames' long)]) \l0x0036: INVOKE  (r6 I:long) = \l  (r14 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r0 I:long A[D('elapsedFrames' long)])\l com.google.android.exoplayer2.audio.AudioTrack.framesToDurationUs(long):long type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: IGET  (r10 I:long) = (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.startMediaTimeUs long \l0x003c: INVOKE  (r12 I:long) = \l  (r14 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r6 I:long A[D('positionUs' long)])\l com.google.android.exoplayer2.audio.AudioTrack.applySpeedup(long):long type: DIRECT \l0x0040: ARITH  (r10 I:long) = (r10 I:long) + (r12 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: IGET  (r10 I:int) = (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playheadOffsetCount int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|0x0044: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0052 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: IGET  (r10 I:com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil) = (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.audioTrackUtil com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil \l0x0048: INVOKE  (r6 I:long) = \l  (r10 I:com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil)\l com.google.android.exoplayer2.audio.AudioTrack.AudioTrackUtil.getPositionUs():long type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sourceEnded' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003a \l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|0x004e: IGET  (r10 I:long) = (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.latencyUs long \l0x0050: ARITH  (r6 I:long A[D('positionUs' long)]) = (r6 I:long A[D('positionUs' long)]) \- (r10 I:long) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|0x0052: IGET  (r10 I:long) = (r14 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.smoothedPlayheadOffsetUs long \l0x0054: ARITH  (r6 I:long) = (r8 I:long A[D('systemClockUs' long)]) + (r10 I:long) \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.audio.AudioTrack.getCurrentPositionUs((r14 'this' I:com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS]), (r15 I:boolean A[D('sourceEnded' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0036\-0x003a: r0 'elapsedFrames' long\l  0x002e\-0x003a: r2 'elapsedSinceTimestampFrames' long\l  0x002a\-0x003a: r4 'elapsedSinceTimestampUs' long\l  0x003a\-0x0042: r6 'positionUs' long\l  0x004c\-0x0052: r6 'positionUs' long\l  0x0056\-0x0056: r6 'positionUs' long\l  0x001d\-0x0056: r8 'systemClockUs' long\l  ?\-0x0056: r15 'sourceEnded' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_3;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_10;
Node_14 -> Node_15[style=dashed];
Node_15 -> Node_10;
Node_16 -> Node_14;
}

