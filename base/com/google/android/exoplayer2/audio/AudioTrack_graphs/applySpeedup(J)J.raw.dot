digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.applySpeedup(J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.LinkedList\<com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint\>) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParametersCheckpoints java.util.LinkedList \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.LinkedList) java.util.LinkedList.isEmpty():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0036 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:java.util.LinkedList\<com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint\>) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParametersCheckpoints java.util.LinkedList \l0x000a: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.LinkedList) java.util.LinkedList.getFirst():java.lang.Object type: VIRTUAL \l0x000e: CHECK_CAST  (r0 I:com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint) = (com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint) (r0 I:?[OBJECT, ARRAY]) \l0x0010: INVOKE  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint)\l com.google.android.exoplayer2.audio.AudioTrack.PlaybackParametersCheckpoint.access$400(com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint):long type: STATIC \l0x0014: CMP_L  (r0 I:int) = (r12 I:long A[D('positionUs' long)]), (r0 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:5:0x0036 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IGET  (r0 I:java.util.LinkedList\<com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint\>) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParametersCheckpoints java.util.LinkedList \l0x001a: INVOKE  (r6 I:java.lang.Object) = (r0 I:java.util.LinkedList) java.util.LinkedList.remove():java.lang.Object type: VIRTUAL \l0x001e: CHECK_CAST  (r6 I:com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint) = (com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint) (r6 I:?[OBJECT, ARRAY]) \l0x0020: INVOKE  (r0 I:com.google.android.exoplayer2.PlaybackParameters) = \l  (r6 I:com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint A[D('checkpoint' com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint)])\l com.google.android.exoplayer2.audio.AudioTrack.PlaybackParametersCheckpoint.access$200(com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint):com.google.android.exoplayer2.PlaybackParameters type: STATIC \l0x0024: IPUT  \l  (r0 I:com.google.android.exoplayer2.PlaybackParameters)\l  (r11 I:com.google.android.exoplayer2.audio.AudioTrack)\l com.google.android.exoplayer2.audio.AudioTrack.playbackParameters com.google.android.exoplayer2.PlaybackParameters \l0x0026: INVOKE  (r0 I:long) = \l  (r6 I:com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint A[D('checkpoint' com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint)])\l com.google.android.exoplayer2.audio.AudioTrack.PlaybackParametersCheckpoint.access$400(com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint):long type: STATIC \l0x002a: IPUT  \l  (r0 I:long)\l  (r11 I:com.google.android.exoplayer2.audio.AudioTrack)\l com.google.android.exoplayer2.audio.AudioTrack.playbackParametersPositionUs long \l0x002c: INVOKE  (r0 I:long) = \l  (r6 I:com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint A[D('checkpoint' com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint)])\l com.google.android.exoplayer2.audio.AudioTrack.PlaybackParametersCheckpoint.access$500(com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint):long type: STATIC \l0x0030: IGET  (r2 I:long) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.startMediaTimeUs long \l0x0032: ARITH  (r0 I:long) = (r0 I:long) \- (r2 I:long) \l0x0033: IPUT  \l  (r0 I:long)\l  (r11 I:com.google.android.exoplayer2.audio.AudioTrack)\l com.google.android.exoplayer2.audio.AudioTrack.playbackParametersOffsetUs long \l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|0x0036: IGET  (r0 I:com.google.android.exoplayer2.PlaybackParameters) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParameters com.google.android.exoplayer2.PlaybackParameters \l0x0038: IGET  (r0 I:float) = (r0 I:com.google.android.exoplayer2.PlaybackParameters) com.google.android.exoplayer2.PlaybackParameters.speed float \l0x003a: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x003c: CMP_L  (r0 I:int) = (r0 I:float), (r1 I:float) \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0047 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|0x0040: IGET  (r0 I:long) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParametersOffsetUs long \l0x0042: ARITH  (r0 I:long) = (r0 I:long) + (r12 I:long A[D('positionUs' long)]) \l0x0043: IGET  (r2 I:long) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParametersPositionUs long \l0x0045: ARITH  (r0 I:long) = (r0 I:long) \- (r2 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0046|0x0046: RETURN  (r0 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|0x0047: IGET  (r0 I:java.util.LinkedList\<com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint\>) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParametersCheckpoints java.util.LinkedList \l0x0049: INVOKE  (r0 I:boolean) = (r0 I:java.util.LinkedList) java.util.LinkedList.isEmpty():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|0x004d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0073 \l}"];
Node_11 [shape=record,label="{11\:\ 0x004f|0x004f: IGET  (r0 I:com.google.android.exoplayer2.audio.SonicAudioProcessor) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.sonicAudioProcessor com.google.android.exoplayer2.audio.SonicAudioProcessor \l0x0051: INVOKE  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.getOutputByteCount():long type: VIRTUAL \l0x0055: CONST  (r2 I:?[long, double]) = (1024(0x400, double:5.06E\-321) ?[long, double]) \l0x0057: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0059|0x0059: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:14:0x0073 \l}"];
Node_13 [shape=record,label="{13\:\ 0x005b|0x005b: IGET  (r8 I:long) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParametersOffsetUs long \l0x005d: IGET  (r0 I:long) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParametersPositionUs long \l0x005f: ARITH  (r0 I:long) = (r12 I:long A[D('positionUs' long)]) \- (r0 I:long) \l0x0061: IGET  (r2 I:com.google.android.exoplayer2.audio.SonicAudioProcessor) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.sonicAudioProcessor com.google.android.exoplayer2.audio.SonicAudioProcessor \l0x0063: INVOKE  (r2 I:long) = \l  (r2 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.getInputByteCount():long type: VIRTUAL \l0x0067: IGET  (r4 I:com.google.android.exoplayer2.audio.SonicAudioProcessor) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.sonicAudioProcessor com.google.android.exoplayer2.audio.SonicAudioProcessor \l0x0069: INVOKE  (r4 I:long) = \l  (r4 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.getOutputByteCount():long type: VIRTUAL \l0x006d: INVOKE  (r0 I:long) = (r0 I:long), (r2 I:long), (r4 I:long) com.google.android.exoplayer2.util.Util.scaleLargeTimestamp(long, long, long):long type: STATIC \l0x0071: ARITH  (r0 I:long) = (r0 I:long) + (r8 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0073|0x0073: IGET  (r0 I:long) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParametersOffsetUs long \l0x0075: IGET  (r2 I:com.google.android.exoplayer2.PlaybackParameters) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParameters com.google.android.exoplayer2.PlaybackParameters \l0x0077: IGET  (r2 I:float) = (r2 I:com.google.android.exoplayer2.PlaybackParameters) com.google.android.exoplayer2.PlaybackParameters.speed float \l0x0079: CAST  (r2 I:double) = (double) (r2 I:float) \l0x007a: IGET  (r4 I:long) = (r11 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.playbackParametersPositionUs long \l0x007c: ARITH  (r4 I:long) = (r12 I:long A[D('positionUs' long)]) \- (r4 I:long) \l0x007e: CAST  (r4 I:double) = (double) (r4 I:long) \l0x007f: ARITH  (r2 I:double) = (r2 I:double) * (r4 I:double) \l0x0080: CAST  (r2 I:long) = (long) (r2 I:double) \l0x0081: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l}"];
MethodNode[shape=record,label="{private long com.google.android.exoplayer2.audio.AudioTrack.applySpeedup((r11 'this' I:com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS]), (r12 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0020\-0x0036: r6 'checkpoint' com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint\l  ?\-0x0082: r12 'positionUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_0;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_8;
Node_14 -> Node_8;
}

