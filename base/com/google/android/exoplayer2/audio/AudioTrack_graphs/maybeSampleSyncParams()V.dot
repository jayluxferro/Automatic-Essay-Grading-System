digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.maybeSampleSyncParams()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long r10 = r20.audioTrackUtil.getPositionUs()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if ((r10 \> 0 ? 1 : (r10 == 0 ? 0 : \-1)) != 0) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|long r12 = java.lang.System.nanoTime() \/ 1000\l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|if (((r12 \- r20.lastPlayheadSampleTimeUs) \> com.google.android.exoplayer2.source.dash.DashMediaSource.DEFAULT_LIVE_PRESENTATION_DELAY_FIXED_MS ? 1 : ((r12 \- r20.lastPlayheadSampleTimeUs) == com.google.android.exoplayer2.source.dash.DashMediaSource.DEFAULT_LIVE_PRESENTATION_DELAY_FIXED_MS ? 0 : \-1)) \< 0) goto L_0x007a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|r20.playheadOffsets[r20.nextPlayheadOffsetIndex] = r10 \- r12\lr20.nextPlayheadOffsetIndex = (r20.nextPlayheadOffsetIndex + 1) % 10\l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|if (r20.playheadOffsetCount \>= 10) goto L_0x004d\l}"];
Node_6 [shape=record,label="{6\:\ 0x0043|r20.playheadOffsetCount = r20.playheadOffsetCount + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x004d|r20.lastPlayheadSampleTimeUs = r12\lr20.smoothedPlayheadOffsetUs = 0\lr7 = 0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0058|LOOP_START\lPHI: r7 \l  PHI: (r7v1 'i' int) = (r7v0 'i' int), (r7v2 'i' int) binds: [B:7:0x004d, B:10:0x005e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0058\-\>B:10:0x005e\l}"];
Node_9 [shape=record,label="{9\:\ 0x005c|if (r7 \>= r20.playheadOffsetCount) goto L_0x007a\l}"];
Node_10 [shape=record,label="{10\:\ 0x005e|LOOP_END\lLOOP:0: B:8:0x0058\-\>B:10:0x005e\l|r20.smoothedPlayheadOffsetUs = r20.smoothedPlayheadOffsetUs + (r20.playheadOffsets[r7] \/ ((long) r20.playheadOffsetCount))\lint r7 = r7 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x007a}"];
Node_12 [shape=record,label="{12\:\ 0x007e|if (needsPassthroughWorkarounds() != false) goto L_?\l}"];
Node_13 [shape=record,label="{13\:\ 0x0080}"];
Node_14 [shape=record,label="{14\:\ 0x008b|if (((r12 \- r20.lastTimestampSampleTimeUs) \> 500000 ? 1 : ((r12 \- r20.lastTimestampSampleTimeUs) == 500000 ? 0 : \-1)) \< 0) goto L_?\l}"];
Node_15 [shape=record,label="{15\:\ 0x008d|r20.audioTimestampSet = r20.audioTrackUtil.updateTimestamp()\l}"];
Node_16 [shape=record,label="{16\:\ 0x009d|if (r20.audioTimestampSet == false) goto L_0x00c0\l}"];
Node_17 [shape=record,label="{17\:\ 0x009f|long r4 = r20.audioTrackUtil.getTimestampNanoTime() \/ 1000\llong r2 = r20.audioTrackUtil.getTimestampFramePosition()\l}"];
Node_18 [shape=record,label="{18\:\ 0x00b9|if ((r4 \> r20.resumeSystemTimeUs ? 1 : (r4 == r20.resumeSystemTimeUs ? 0 : \-1)) \>= 0) goto L_0x0137\l}"];
Node_19 [shape=record,label="{19\:\ 0x00bb|r20.audioTimestampSet = false\l}"];
Node_20 [shape=record,label="{20\:\ 0x00c0}"];
Node_21 [shape=record,label="{21\:\ 0x00c4|if (r20.getLatencyMethod == null) goto L_0x0131\l}"];
Node_22 [shape=record,label="{22\:\ 0x00c6}"];
Node_23 [shape=record,label="{23\:\ 0x00ca|if (r20.passthrough != false) goto L_0x0131\l}"];
Node_24 [shape=record,label="{24\:\ 0x00cc}"];
Node_25 [shape=record,label="{25\:\ 0x00ce|SYNTHETIC\lSplitter:B:25:0x00ce\l}"];
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ Exception \-\> 0x01e4 \}\lSplitter:B:25:0x00ce\l|r20.latencyUs = (((long) ((java.lang.Integer) r20.getLatencyMethod.invoke(r20.audioTrack, (java.lang.Object[]) null)).intValue()) * 1000) \- r20.bufferSizeUs     \/\/ Catch:\{ Exception \-\> 0x01e4 \}\lr20.latencyUs = java.lang.Math.max(r20.latencyUs, 0)     \/\/ Catch:\{ Exception \-\> 0x01e4 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x0109|Catch:\{ Exception \-\> 0x01e4 \}\l|if ((r20.latencyUs \> 5000000 ? 1 : (r20.latencyUs == 5000000 ? 0 : \-1)) \<= 0) goto L_0x0131     \/\/ Catch:\{ Exception \-\> 0x01e4 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x010b|Catch:\{ Exception \-\> 0x01e4 \}\l|android.util.Log.w(TAG, new java.lang.StringBuilder().append(\"Ignoring impossibly large audio latency: \").append(r20.latencyUs).toString())     \/\/ Catch:\{ Exception \-\> 0x01e4 \}\lr20.latencyUs = 0     \/\/ Catch:\{ Exception \-\> 0x01e4 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x0131|r20.lastTimestampSampleTimeUs = r12\l}"];
Node_30 [shape=record,label="{30\:\ 0x0137}"];
Node_31 [shape=record,label="{31\:\ 0x0142|if ((java.lang.Math.abs(r4 \- r12) \> 5000000 ? 1 : (java.lang.Math.abs(r4 \- r12) == 5000000 ? 0 : \-1)) \<= 0) goto L_0x018b\l}"];
Node_32 [shape=record,label="{32\:\ 0x0144|java.lang.String r8 = new java.lang.StringBuilder().append(\"Spurious audio timestamp (system clock mismatch): \").append(r2).append(\", \").append(r4).append(\", \").append(r12).append(\", \").append(r10).toString()\l}"];
Node_33 [shape=record,label="{33\:\ 0x0177|if (failOnSpuriousAudioTimestamp == false) goto L_0x017f\l}"];
Node_34 [shape=record,label="{34\:\ 0x0179}"];
Node_35 [shape=record,label="{35\:\ 0x017e|throw new com.google.android.exoplayer2.audio.AudioTrack.InvalidAudioTrackTimestampException(r8)\l}"];
Node_36 [shape=record,label="{36\:\ 0x017f|android.util.Log.w(TAG, r8)\lr20.audioTimestampSet = false\l}"];
Node_37 [shape=record,label="{37\:\ 0x018b}"];
Node_38 [shape=record,label="{38\:\ 0x019b|if ((java.lang.Math.abs(framesToDurationUs(r2) \- r10) \> 5000000 ? 1 : (java.lang.Math.abs(framesToDurationUs(r2) \- r10) == 5000000 ? 0 : \-1)) \<= 0) goto L_0x00c0\l}"];
Node_39 [shape=record,label="{39\:\ 0x019d|java.lang.String r8 = new java.lang.StringBuilder().append(\"Spurious audio timestamp (frame position mismatch): \").append(r2).append(\", \").append(r4).append(\", \").append(r12).append(\", \").append(r10).toString()\l}"];
Node_40 [shape=record,label="{40\:\ 0x01d0|if (failOnSpuriousAudioTimestamp == false) goto L_0x01d8\l}"];
Node_41 [shape=record,label="{41\:\ 0x01d2}"];
Node_42 [shape=record,label="{42\:\ 0x01d7|throw new com.google.android.exoplayer2.audio.AudioTrack.InvalidAudioTrackTimestampException(r8)\l}"];
Node_43 [shape=record,label="{43\:\ 0x01d8|android.util.Log.w(TAG, r8)\lr20.audioTimestampSet = false\l}"];
Node_44 [shape=record,label="{44\:\ 0x01e4|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:25:0x00ce\l}"];
Node_45 [shape=record,label="{45\:\ 0x01e5|r20.getLatencyMethod = null\l}"];
Node_46 [shape=record,label="{46\:\ 0x007a|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.AudioTrack.maybeSampleSyncParams((r20v0 'this' com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_47[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_46;
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_48;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_49;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_30;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_29;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_44;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_50;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_36 -> Node_20;
Node_37 -> Node_38;
Node_38 -> Node_20;
Node_38 -> Node_39[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_43 -> Node_20;
Node_44 -> Node_45;
Node_45 -> Node_29;
Node_46 -> Node_11;
}

