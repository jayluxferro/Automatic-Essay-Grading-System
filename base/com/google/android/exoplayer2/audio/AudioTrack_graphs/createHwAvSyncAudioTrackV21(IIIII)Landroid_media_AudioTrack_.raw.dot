digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.createHwAvSyncAudioTrackV21(IIIII)Landroid\/media\/AudioTrack;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: NEW_INSTANCE  (r0 I:android.media.AudioAttributes$Builder) =  android.media.AudioAttributes$Builder \l0x0003: INVOKE  (r0 I:android.media.AudioAttributes$Builder) android.media.AudioAttributes.Builder.\<init\>():void type: DIRECT \l0x0006: INVOKE  (r0 I:android.media.AudioAttributes$Builder) = (r0 I:android.media.AudioAttributes$Builder), (r4 I:int) android.media.AudioAttributes.Builder.setUsage(int):android.media.AudioAttributes$Builder type: VIRTUAL \l0x000a: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x000b: INVOKE  (r0 I:android.media.AudioAttributes$Builder) = (r0 I:android.media.AudioAttributes$Builder), (r3 I:int) android.media.AudioAttributes.Builder.setContentType(int):android.media.AudioAttributes$Builder type: VIRTUAL \l0x000f: CONST  (r3 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0011: INVOKE  (r0 I:android.media.AudioAttributes$Builder) = (r0 I:android.media.AudioAttributes$Builder), (r3 I:int) android.media.AudioAttributes.Builder.setFlags(int):android.media.AudioAttributes$Builder type: VIRTUAL \l0x0015: INVOKE  (r1 I:android.media.AudioAttributes) = (r0 I:android.media.AudioAttributes$Builder) android.media.AudioAttributes.Builder.build():android.media.AudioAttributes type: VIRTUAL \l0x0019: NEW_INSTANCE  (r0 I:android.media.AudioFormat$Builder) =  android.media.AudioFormat$Builder \l0x001b: INVOKE  (r0 I:android.media.AudioFormat$Builder) android.media.AudioFormat.Builder.\<init\>():void type: DIRECT \l0x001e: INVOKE  (r0 I:android.media.AudioFormat$Builder) = \l  (r0 I:android.media.AudioFormat$Builder)\l  (r7 I:int A[D('channelConfig' int)])\l android.media.AudioFormat.Builder.setChannelMask(int):android.media.AudioFormat$Builder type: VIRTUAL \l0x0022: INVOKE  (r0 I:android.media.AudioFormat$Builder) = \l  (r0 I:android.media.AudioFormat$Builder)\l  (r8 I:int A[D('encoding' int)])\l android.media.AudioFormat.Builder.setEncoding(int):android.media.AudioFormat$Builder type: VIRTUAL \l0x0026: INVOKE  (r0 I:android.media.AudioFormat$Builder) = \l  (r0 I:android.media.AudioFormat$Builder)\l  (r6 I:int A[D('sampleRate' int)])\l android.media.AudioFormat.Builder.setSampleRate(int):android.media.AudioFormat$Builder type: VIRTUAL \l0x002a: INVOKE  (r2 I:android.media.AudioFormat) = (r0 I:android.media.AudioFormat$Builder) android.media.AudioFormat.Builder.build():android.media.AudioFormat type: VIRTUAL \l0x002e: NEW_INSTANCE  (r0 I:android.media.AudioTrack) =  android.media.AudioTrack \l0x0030: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bufferSize' int)])\l \l0x0031: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('sessionId' int)])\l \l0x0032: INVOKE  \l  (r0 I:android.media.AudioTrack)\l  (r1 I:android.media.AudioAttributes A[D('attributesBuilder' android.media.AudioAttributes)])\l  (r2 I:android.media.AudioFormat A[D('format' android.media.AudioFormat)])\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l android.media.AudioTrack.\<init\>(android.media.AudioAttributes, android.media.AudioFormat, int, int, int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0035|0x0035: RETURN  (r0 I:android.media.AudioTrack) \l}"];
MethodNode[shape=record,label="{private static android.media.AudioTrack com.google.android.exoplayer2.audio.AudioTrack.createHwAvSyncAudioTrackV21((r6 I:int A[D('sampleRate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('channelConfig' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('encoding' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('bufferSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('sessionId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0019\-0x0035: r1 'attributesBuilder' android.media.AudioAttributes\l  0x002e\-0x0035: r2 'format' android.media.AudioFormat\l  ?\-0x0035: r6 'sampleRate' int\l  ?\-0x0035: r7 'channelConfig' int\l  ?\-0x0035: r8 'encoding' int\l  ?\-0x0035: r9 'bufferSize' int\l  ?\-0x0035: r10 'sessionId' int\lAnnotation[BUILD, android.annotation.TargetApi, \{value=21\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

