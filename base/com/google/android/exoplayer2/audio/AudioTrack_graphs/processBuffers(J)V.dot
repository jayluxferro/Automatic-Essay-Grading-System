digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.processBuffers(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = r7.audioProcessors.length\lr2 = r1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lPHI: r2 \l  PHI: (r2v1 'index' int) = (r2v0 'index' int), (r2v2 'index' int) binds: [B:0:0x0000, B:16:0x0004] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:16:0x0004\l|if (r2 \< 0) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r2 \<= 0) goto L_0x001a\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|r3 = r7.outputBuffers[r2 + \-1]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|PHI: r3 \l  PHI: (r3v2 'input' java.nio.ByteBuffer) = (r3v0 'input' java.nio.ByteBuffer), (r3v1 'input' java.nio.ByteBuffer), (r3v3 'input' java.nio.ByteBuffer) binds: [B:11:0x0021, B:10:0x001e, B:3:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != r1) goto L_0x0024\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|writeBuffer(r3, r8)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013}"];
Node_7 [shape=record,label="{7\:\ 0x0017|if (r3.hasRemaining() == false) goto L_0x003c\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a}"];
Node_9 [shape=record,label="{9\:\ 0x001c|if (r7.inputBuffer == null) goto L_0x0021\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|java.nio.ByteBuffer r3 = r7.inputBuffer\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|java.nio.ByteBuffer r3 = com.google.android.exoplayer2.audio.AudioProcessor.EMPTY_BUFFER\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|r0 = r7.audioProcessors[r2]\lr0.queueInput(r3)\ljava.nio.ByteBuffer r4 = r0.getOutput()\lr7.outputBuffers[r2] = r4\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|if (r4.hasRemaining() == false) goto L_0x0013\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|int r2 = r2 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|int r2 = r2 + \-1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0004|LOOP_END\lSYNTHETIC\lPHI: r2 \l  PHI: (r2v2 'index' int) = (r2v3 'index' int), (r2v4 'index' int) binds: [B:19:0x0004, B:20:0x0004] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:16:0x0004\l}"];
Node_17 [shape=record,label="{17\:\ 0x0019|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0019|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0004|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.AudioTrack.processBuffers((r7v0 'this' com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS]), (r8v0 'avSyncPresentationTimeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.audio.AudioTrack$WriteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_15;
Node_7 -> Node_18[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_4;
Node_11 -> Node_4;
Node_12 -> Node_13;
Node_13 -> Node_6;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_20;
Node_16 -> Node_1;
Node_17 -> Node_21;
Node_18 -> Node_22;
Node_19 -> Node_16;
Node_20 -> Node_16;
}

