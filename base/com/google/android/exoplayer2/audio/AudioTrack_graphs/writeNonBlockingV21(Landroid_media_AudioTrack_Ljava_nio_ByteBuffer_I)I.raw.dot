digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.writeNonBlockingV21(Landroid\/media\/AudioTrack;Ljava\/nio\/ByteBuffer;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: INVOKE  (r0 I:int) = \l  (r1 I:android.media.AudioTrack A[D('audioTrack' android.media.AudioTrack)])\l  (r2 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)])\l  (r3 I:int A[D('size' int)])\l  (r0 I:int)\l android.media.AudioTrack.write(java.nio.ByteBuffer, int, int):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.audio.AudioTrack.writeNonBlockingV21((r1 I:android.media.AudioTrack A[D('audioTrack' android.media.AudioTrack), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0005: r1 'audioTrack' android.media.AudioTrack\l  ?\-0x0005: r2 'buffer' java.nio.ByteBuffer\l  ?\-0x0005: r3 'size' int\lAnnotation[BUILD, android.annotation.TargetApi, \{value=21\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

