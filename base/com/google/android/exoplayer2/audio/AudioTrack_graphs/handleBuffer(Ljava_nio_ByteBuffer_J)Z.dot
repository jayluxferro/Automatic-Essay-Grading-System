digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.handleBuffer(Ljava\/nio\/ByteBuffer;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r20.inputBuffer == null) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r21 != r20.inputBuffer) goto L_0x003c\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|r4 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v61 boolean), (r4v63 boolean) binds: [B:4:0x000e, B:15:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|if (isInitialized() != false) goto L_0x0024\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|initialize()\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|if (r20.playing == false) goto L_0x0024\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|play()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024}"];
Node_11 [shape=record,label="{11\:\ 0x0028|if (needsPassthroughWorkarounds() == false) goto L_0x0059\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a}"];
Node_13 [shape=record,label="{13\:\ 0x0033|if (r20.audioTrack.getPlayState() != 2) goto L_0x003e\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|r20.hasData = false\l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|r4 = false\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e}"];
Node_17 [shape=record,label="{17\:\ 0x0047|if (r20.audioTrack.getPlayState() != 1) goto L_0x0059\l}"];
Node_18 [shape=record,label="{18\:\ 0x0049}"];
Node_19 [shape=record,label="{19\:\ 0x0055|if ((r20.audioTrackUtil.getPlaybackHeadPosition() \> 0 ? 1 : (r20.audioTrackUtil.getPlaybackHeadPosition() == 0 ? 0 : \-1)) == 0) goto L_0x0059\l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|SYNTHETIC\lRETURN\l|return false\l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|r17 = r20.hasData\lr20.hasData = hasPendingData()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0067|if (r17 == false) goto L_0x0097\l}"];
Node_23 [shape=record,label="{23\:\ 0x0069}"];
Node_24 [shape=record,label="{24\:\ 0x006d|if (r20.hasData != false) goto L_0x0097\l}"];
Node_25 [shape=record,label="{25\:\ 0x006f}"];
Node_26 [shape=record,label="{26\:\ 0x0078|if (r20.audioTrack.getPlayState() == 1) goto L_0x0097\l}"];
Node_27 [shape=record,label="{27\:\ 0x007a|long r8 = android.os.SystemClock.elapsedRealtime() \- r20.lastFeedElapsedRealtimeMs\lr20.listener.onUnderrun(r20.bufferSize, com.google.android.exoplayer2.C1260C.usToMs(r20.bufferSizeUs), r8)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0097}"];
Node_29 [shape=record,label="{29\:\ 0x009b|if (r20.inputBuffer != null) goto L_0x012b\l}"];
Node_30 [shape=record,label="{30\:\ 0x009d}"];
Node_31 [shape=record,label="{31\:\ 0x00a1|if (r21.hasRemaining() != false) goto L_0x00a5\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a3|SYNTHETIC\lRETURN\l|return true\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a5}"];
Node_34 [shape=record,label="{34\:\ 0x00a9|if (r20.passthrough == false) goto L_0x00bf\l}"];
Node_35 [shape=record,label="{35\:\ 0x00ab}"];
Node_36 [shape=record,label="{36\:\ 0x00af|if (r20.framesPerEncodedSample != 0) goto L_0x00bf\l}"];
Node_37 [shape=record,label="{37\:\ 0x00b1|r20.framesPerEncodedSample = getFramesPerEncodedSample(r20.outputEncoding, r21)\l}"];
Node_38 [shape=record,label="{38\:\ 0x00bf}"];
Node_39 [shape=record,label="{39\:\ 0x00c3|if (r20.drainingPlaybackParameters == null) goto L_0x00fa\l}"];
Node_40 [shape=record,label="{40\:\ 0x00c5}"];
Node_41 [shape=record,label="{41\:\ 0x00c9|if (drainAudioProcessorsToEndOfStream() != false) goto L_0x00ce\l}"];
Node_42 [shape=record,label="{42\:\ 0x00cb|SYNTHETIC\lRETURN\l|return false\l}"];
Node_43 [shape=record,label="{43\:\ 0x00ce|java.util.LinkedList\<com.google.android.exoplayer2.audio.AudioTrack$PlaybackParametersCheckpoint\> r4 = r20.playbackParametersCheckpoints\lcom.google.android.exoplayer2.PlaybackParameters r11 = r20.drainingPlaybackParameters\llong r12 = java.lang.Math.max(0, r22)\lr0 = r20\lr4.add(new com.google.android.exoplayer2.audio.AudioTrack.PlaybackParametersCheckpoint(r11, r12, framesToDurationUs(getWrittenFrames()), (com.google.android.exoplayer2.audio.AudioTrack.C12731) null))\lr20.drainingPlaybackParameters = null\lresetAudioProcessors()\l}"];
Node_44 [shape=record,label="{44\:\ 0x00fa}"];
Node_45 [shape=record,label="{45\:\ 0x00fe|if (r20.startMediaTimeState != 0) goto L_0x014e\l}"];
Node_46 [shape=record,label="{46\:\ 0x0100|r20.startMediaTimeUs = java.lang.Math.max(0, r22)\lr20.startMediaTimeState = 1\l}"];
Node_47 [shape=record,label="{47\:\ 0x0111}"];
Node_48 [shape=record,label="{48\:\ 0x0115|if (r20.passthrough == false) goto L_0x01c3\l}"];
Node_49 [shape=record,label="{49\:\ 0x0117|r20.submittedEncodedFrames = r20.submittedEncodedFrames + ((long) r20.framesPerEncodedSample)\l}"];
Node_50 [shape=record,label="{50\:\ 0x0125|r20.inputBuffer = r21\l}"];
Node_51 [shape=record,label="{51\:\ 0x012b}"];
Node_52 [shape=record,label="{52\:\ 0x012f|if (r20.passthrough == false) goto L_0x01d3\l}"];
Node_53 [shape=record,label="{53\:\ 0x0131|java.nio.ByteBuffer r4 = r20.inputBuffer\lwriteBuffer(r4, r22)\l}"];
Node_54 [shape=record,label="{54\:\ 0x013c}"];
Node_55 [shape=record,label="{55\:\ 0x0144|if (r20.inputBuffer.hasRemaining() != false) goto L_0x01dc\l}"];
Node_56 [shape=record,label="{56\:\ 0x0146|r20.inputBuffer = null\l}"];
Node_57 [shape=record,label="{57\:\ 0x014e|long r4 = r20.startMediaTimeUs\lr0 = r20\llong r18 = r4 + framesToDurationUs(getSubmittedFrames())\l}"];
Node_58 [shape=record,label="{58\:\ 0x0163|if (r20.startMediaTimeState != 1) goto L_0x01a3\l}"];
Node_59 [shape=record,label="{59\:\ 0x0165}"];
Node_60 [shape=record,label="{60\:\ 0x0170|if ((java.lang.Math.abs(r18 \- r22) \> 200000 ? 1 : (java.lang.Math.abs(r18 \- r22) == 200000 ? 0 : \-1)) \<= 0) goto L_0x01a3\l}"];
Node_61 [shape=record,label="{61\:\ 0x0172|android.util.Log.e(TAG, new java.lang.StringBuilder().append(\"Discontinuity detected [expected \").append(r18).append(\", got \").append(r22).append(\"]\").toString())\lr20.startMediaTimeState = 2\l}"];
Node_62 [shape=record,label="{62\:\ 0x01a3}"];
Node_63 [shape=record,label="{63\:\ 0x01a8|if (r20.startMediaTimeState != 2) goto L_0x0111\l}"];
Node_64 [shape=record,label="{64\:\ 0x01aa|r20.startMediaTimeUs = r20.startMediaTimeUs + (r22 \- r18)\lr20.startMediaTimeState = 1\lr20.listener.onPositionDiscontinuity()\l}"];
Node_65 [shape=record,label="{65\:\ 0x01c3|r20.submittedPcmBytes = r20.submittedPcmBytes + ((long) r21.remaining())\l}"];
Node_66 [shape=record,label="{66\:\ 0x01d3|processBuffers(r22)\l}"];
Node_67 [shape=record,label="{67\:\ 0x01dc|SYNTHETIC\lRETURN\l|return false\l}"];
Node_68 [shape=record,label="{68\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.audio.AudioTrack.handleBuffer((r20v0 'this' com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS]), (r21v0 'buffer' java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'presentationTimeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.audio.AudioTrack$InitializationException, com.google.android.exoplayer2.audio.AudioTrack$WriteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_68;
Node_15 -> Node_5;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_51;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_44;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_57;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_65;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_66;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_67;
Node_56 -> Node_69;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_62;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_47;
Node_63 -> Node_64[style=dashed];
Node_64 -> Node_47;
Node_65 -> Node_50;
Node_66 -> Node_54;
}

