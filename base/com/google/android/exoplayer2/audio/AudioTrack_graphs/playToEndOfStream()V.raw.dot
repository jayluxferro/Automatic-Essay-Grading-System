digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.playToEndOfStream()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r4 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.handledEndOfStream boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = (r4 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.isInitialized():boolean type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: INVOKE  (r0 I:boolean) = (r4 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.drainAudioProcessorsToEndOfStream():boolean type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IGET  (r0 I:com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil) = (r4 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.audioTrackUtil com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil \l0x0013: INVOKE  (r2 I:long) = (r4 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.getWrittenFrames():long type: DIRECT \l0x0017: INVOKE  \l  (r0 I:com.google.android.exoplayer2.audio.AudioTrack$AudioTrackUtil)\l  (r2 I:long)\l com.google.android.exoplayer2.audio.AudioTrack.AudioTrackUtil.handleEndOfStream(long):void type: VIRTUAL \l0x001a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001b: IPUT  \l  (r0 I:int)\l  (r4 I:com.google.android.exoplayer2.audio.AudioTrack)\l com.google.android.exoplayer2.audio.AudioTrack.bytesUntilNextAvSync int \l0x001d: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001e: IPUT  \l  (r0 I:boolean)\l  (r4 I:com.google.android.exoplayer2.audio.AudioTrack)\l com.google.android.exoplayer2.audio.AudioTrack.handledEndOfStream boolean \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.AudioTrack.playToEndOfStream((r4 'this' I:com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.audio.AudioTrack$WriteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_4;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_4;
}

