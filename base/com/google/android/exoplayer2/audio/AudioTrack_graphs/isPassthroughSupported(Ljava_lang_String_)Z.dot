digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.isPassthroughSupported(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.audioCapabilities == null) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r2.audioCapabilities.supportsEncoding(getEncodingForMimeType(r3)) == false) goto L_0x0012\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.audio.AudioTrack.isPassthroughSupported((r2v0 'this' com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS]), (r3v0 'mimeType' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
}

