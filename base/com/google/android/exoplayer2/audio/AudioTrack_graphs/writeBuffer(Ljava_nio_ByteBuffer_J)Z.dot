digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.writeBuffer(Ljava\/nio\/ByteBuffer;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r13.hasRemaining() != false) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r12.outputBuffer == null) goto L_0x0060\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c}"];
Node_6 [shape=record,label="{6\:\ 0x000e|if (r12.outputBuffer != r13) goto L_0x005e\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|r0 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|PHI: r0 \l  PHI: (r0v39 boolean) = (r0v38 boolean), (r0v40 boolean) binds: [B:20:0x005e, B:7:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|int r3 = r13.remaining()\lr8 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|if (com.google.android.exoplayer2.util.Util.SDK_INT \>= 21) goto L_0x008a\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|int r6 = (int) (r12.writtenPcmBytes \- (r12.audioTrackUtil.getPlaybackHeadPosition() * ((long) r12.outputPcmFrameSize)))\lint r7 = r12.bufferSize \- r6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|if (r7 \<= 0) goto L_0x0050\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|int r7 = java.lang.Math.min(r3, r7)\lint r8 = r12.audioTrack.write(r12.preV21OutputBuffer, r12.preV21OutputBufferOffset, r7)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|if (r8 \<= 0) goto L_0x0050\l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|r12.preV21OutputBufferOffset = r12.preV21OutputBufferOffset + r8\lr13.position(r13.position() + r8)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|PHI: r8 \l  PHI: (r8v3 'bytesWritten' int) = (r8v1 'bytesWritten' int), (r8v2 'bytesWritten' int), (r8v0 'bytesWritten' int), (r8v4 'bytesWritten' int), (r8v4 'bytesWritten' int) binds: [B:36:0x00a7, B:34:0x0098, B:12:0x0031, B:14:0x0041, B:15:0x0043] A[DONT_GENERATE, DONT_INLINE]\l|r12.lastFeedElapsedRealtimeMs = android.os.SystemClock.elapsedRealtime()\l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|if (r8 \>= 0) goto L_0x00ae\l}"];
Node_18 [shape=record,label="{18\:\ 0x0058}"];
Node_19 [shape=record,label="{19\:\ 0x005d|throw new com.google.android.exoplayer2.audio.AudioTrack.WriteException(r8)\l}"];
Node_20 [shape=record,label="{20\:\ 0x005e|r0 = false\l}"];
Node_21 [shape=record,label="{21\:\ 0x0060|r12.outputBuffer = r13\l}"];
Node_22 [shape=record,label="{22\:\ 0x0066|if (com.google.android.exoplayer2.util.Util.SDK_INT \>= 21) goto L_0x0014\l}"];
Node_23 [shape=record,label="{23\:\ 0x0068|int r3 = r13.remaining()\l}"];
Node_24 [shape=record,label="{24\:\ 0x006e|if (r12.preV21OutputBuffer == null) goto L_0x0075\l}"];
Node_25 [shape=record,label="{25\:\ 0x0070}"];
Node_26 [shape=record,label="{26\:\ 0x0073|if (r12.preV21OutputBuffer.length \>= r3) goto L_0x0079\l}"];
Node_27 [shape=record,label="{27\:\ 0x0075|r12.preV21OutputBuffer = new byte[r3]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0079|int r9 = r13.position()\lr13.get(r12.preV21OutputBuffer, 0, r3)\lr13.position(r9)\lr12.preV21OutputBufferOffset = 0\l}"];
Node_29 [shape=record,label="{29\:\ 0x008a}"];
Node_30 [shape=record,label="{30\:\ 0x008c|if (r12.tunneling == false) goto L_0x00a7\l}"];
Node_31 [shape=record,label="{31\:\ 0x008e}"];
Node_32 [shape=record,label="{32\:\ 0x0095|if ((r14 \> com.google.android.exoplayer2.C1260C.TIME_UNSET ? 1 : (r14 == com.google.android.exoplayer2.C1260C.TIME_UNSET ? 0 : \-1)) == 0) goto L_0x00a5\l}"];
Node_33 [shape=record,label="{33\:\ 0x0097|r0 = true\l}"];
Node_34 [shape=record,label="{34\:\ 0x0098|PHI: r0 \l  PHI: (r0v15 boolean) = (r0v14 boolean), (r0v17 boolean) binds: [B:35:0x00a5, B:33:0x0097] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r0)\lr0 = r12\lint r8 = writeNonBlockingWithAvSyncV21(r12.audioTrack, r13, r3, r14)\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a5|r0 = false\l}"];
Node_36 [shape=record,label="{36\:\ 0x00a7|int r8 = writeNonBlockingV21(r12.audioTrack, r13, r3)\l}"];
Node_37 [shape=record,label="{37\:\ 0x00ae}"];
Node_38 [shape=record,label="{38\:\ 0x00b0|if (r12.passthrough != false) goto L_0x00b8\l}"];
Node_39 [shape=record,label="{39\:\ 0x00b2|r12.writtenPcmBytes = r12.writtenPcmBytes + ((long) r8)\l}"];
Node_40 [shape=record,label="{40\:\ 0x00b8|if (r8 != r3) goto L_0x00cc\l}"];
Node_41 [shape=record,label="{41\:\ 0x00ba}"];
Node_42 [shape=record,label="{42\:\ 0x00bc|if (r12.passthrough == false) goto L_0x00c6\l}"];
Node_43 [shape=record,label="{43\:\ 0x00be|r12.writtenEncodedFrames = r12.writtenEncodedFrames + ((long) r12.framesPerEncodedSample)\l}"];
Node_44 [shape=record,label="{44\:\ 0x00c6|r12.outputBuffer = null\l}"];
Node_45 [shape=record,label="{45\:\ 0x00cc|SYNTHETIC\lRETURN\l|return false\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.audio.AudioTrack.writeBuffer((r12v0 'this' com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS]), (r13v0 'buffer' java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'avSyncPresentationTimeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.audio.AudioTrack$WriteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_21;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_29;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_37;
Node_18 -> Node_19;
Node_20 -> Node_8;
Node_21 -> Node_22;
Node_22 -> Node_9;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_9;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_36;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_16;
Node_35 -> Node_34;
Node_36 -> Node_16;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_45;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_46;
}

