digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.checkAudioTrackInitialized()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r5.audioTrack.getState()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 != 1) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|SYNTHETIC\lSplitter:B:3:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ Exception \-\> 0x001e, all \-\> 0x0022 \}\lSplitter:B:3:0x000b\l|r5.audioTrack.release()     \/\/ Catch:\{ Exception \-\> 0x001e, all \-\> 0x0022 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|DONT_GENERATE\l|r5.audioTrack = null\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012}"];
Node_7 [shape=record,label="{7\:\ 0x001d|throw new com.google.android.exoplayer2.audio.AudioTrack.InitializationException(r0, r5.sampleRate, r5.channelConfig, r5.bufferSize)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:3:0x000b\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|DONT_GENERATE\l|r5.audioTrack = null\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|ExcHandler:  FINALLY\lSplitter:B:3:0x000b\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|FINALLY_INSNS\l|r5.audioTrack = null\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|throw r1\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.AudioTrack.checkAudioTrackInitialized((r5v0 'this' com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.audio.AudioTrack$InitializationException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_6;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

