digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.playToEndOfStream()V" {
subgraph cluster_Region_790436909 {
label = "R(1:(1:(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1076368584 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1617598936 {
label = "IF [B:1:0x0002, B:3:0x0008, B:5:0x000f] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.handledEndOfStream != true) goto L_0x0004\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|ADDED_TO_REGION\l|if (isInitialized() != false) goto L_0x000b\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|ADDED_TO_REGION\l|if (drainAudioProcessorsToEndOfStream() != false) goto L_0x0011\l}"];
subgraph cluster_Region_498145367 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0011|r4.audioTrackUtil.handleEndOfStream(getWrittenFrames())\lr4.bytesUntilNextAvSync = 0\lr4.handledEndOfStream = true\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.AudioTrack.playToEndOfStream((r4v0 'this' com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.audio.AudioTrack$WriteException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_6 -> Node_10;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

