digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.\<init\>(Lcom\/google\/android\/exoplayer2\/audio\/AudioCapabilities;[Lcom\/google\/android\/exoplayer2\/audio\/AudioProcessor;Lcom\/google\/android\/exoplayer2\/audio\/AudioTrack$Listener;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6.audioCapabilities = r7\lr6.listener = r9\lr6.releasingConditionVariable = new android.os.ConditionVariable(true)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|if (com.google.android.exoplayer2.util.Util.SDK_INT \< 18) goto L_0x0024\l}"];
Node_2 [shape=record,label="{2\:\ 0x0017}"];
Node_3 [shape=record,label="{3\:\ 0x001c|SYNTHETIC\lSplitter:B:3:0x001c\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ NoSuchMethodException \-\> 0x0095 \}\lSplitter:B:3:0x001c\l|r6.getLatencyMethod = android.media.AudioTrack.class.getMethod(\"getLatency\", (java.lang.Class[]) null)     \/\/ Catch:\{ NoSuchMethodException \-\> 0x0095 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024}"];
Node_6 [shape=record,label="{6\:\ 0x0028|if (com.google.android.exoplayer2.util.Util.SDK_INT \< 19) goto L_0x008d\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|r6.audioTrackUtil = new com.google.android.exoplayer2.audio.AudioTrack.AudioTrackUtilV19()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|r6.channelMappingAudioProcessor = new com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor()\lr6.sonicAudioProcessor = new com.google.android.exoplayer2.audio.SonicAudioProcessor()\lr6.availableAudioProcessors = new com.google.android.exoplayer2.audio.AudioProcessor[(r8.length + 3)]\lr6.availableAudioProcessors[0] = new com.google.android.exoplayer2.audio.ResamplingAudioProcessor()\lr6.availableAudioProcessors[1] = r6.channelMappingAudioProcessor\ljava.lang.System.arraycopy(r8, 0, r6.availableAudioProcessors, 2, r8.length)\lr6.availableAudioProcessors[r8.length + 2] = r6.sonicAudioProcessor\lr6.playheadOffsets = new long[10]\lr6.volume = 1.0f\lr6.startMediaTimeState = 0\lr6.streamType = 3\lr6.audioSessionId = 0\lr6.playbackParameters = com.google.android.exoplayer2.PlaybackParameters.DEFAULT\lr6.drainingAudioProcessorIndex = \-1\lr6.audioProcessors = new com.google.android.exoplayer2.audio.AudioProcessor[0]\lr6.outputBuffers = new java.nio.ByteBuffer[0]\lr6.playbackParametersCheckpoints = new java.util.LinkedList\<\>()\l}"];
Node_9 [shape=record,label="{9\:\ 0x008c|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x008d|r6.audioTrackUtil = new com.google.android.exoplayer2.audio.AudioTrack.AudioTrackUtil((com.google.android.exoplayer2.audio.AudioTrack.C12731) null)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0095|ExcHandler: NoSuchMethodException (e java.lang.NoSuchMethodException)\lSplitter:B:3:0x001c\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.AudioTrack.\<init\>((r6v0 'this' com.google.android.exoplayer2.audio.AudioTrack A[IMMUTABLE_TYPE, THIS]), (r7v0 'audioCapabilities' com.google.android.exoplayer2.audio.AudioCapabilities A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'audioProcessors' com.google.android.exoplayer2.audio.AudioProcessor[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'listener' com.google.android.exoplayer2.audio.AudioTrack$Listener A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_8;
Node_11 -> Node_5;
}

