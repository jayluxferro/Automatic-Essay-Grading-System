digraph "CFG forcom.google.android.exoplayer2.audio.AudioTrack.getFramesPerEncodedSample(ILjava\/nio\/ByteBuffer;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r3 == 7) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r3 != 8) goto L_0x000c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x000c}"];
Node_6 [shape=record,label="{6\:\ 0x000d|if (r3 != 5) goto L_0x0014\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f}"];
Node_8 [shape=record,label="{8\:\ 0x0014}"];
Node_9 [shape=record,label="{9\:\ 0x0015|if (r3 != 6) goto L_0x001c\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017}"];
Node_11 [shape=record,label="{11\:\ 0x001c}"];
Node_12 [shape=record,label="{12\:\ 0x0034|throw new java.lang.IllegalStateException(new java.lang.StringBuilder().append(\"Unexpected audio encoding: \").append(r3).toString())\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return com.google.android.exoplayer2.audio.DtsUtil.parseDtsAudioSampleCount(r4)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return com.google.android.exoplayer2.audio.Ac3Util.getAc3SyncframeAudioSampleCount()\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return com.google.android.exoplayer2.audio.Ac3Util.parseEAc3SyncframeAudioSampleCount(r4)\l}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.audio.AudioTrack.getFramesPerEncodedSample((r3v0 'encoding' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'buffer' java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_15;
Node_11 -> Node_12;
}

