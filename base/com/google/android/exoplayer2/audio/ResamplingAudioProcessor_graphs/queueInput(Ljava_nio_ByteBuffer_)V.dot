digraph "CFG forcom.google.android.exoplayer2.audio.ResamplingAudioProcessor.queueInput(Ljava\/nio\/ByteBuffer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r2 = r8.position()\lint r1 = r8.limit()\lint r4 = r1 \- r2\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|switch(r7.encoding) \{\l    case \-2147483648: goto L_0x0038;\l    case 3: goto L_0x0015;\l    case 1073741824: goto L_0x003d;\l    default: goto L_0x000f;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f}"];
Node_3 [shape=record,label="{3\:\ 0x0014|throw new java.lang.IllegalStateException()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|int r3 = r4 * 2\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|PHI: r3 \l  PHI: (r3v2 'resampledSize' int) = (r3v0 'resampledSize' int), (r3v1 'resampledSize' int), (r3v3 'resampledSize' int) binds: [B:13:0x003d, B:12:0x0038, B:4:0x0015] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if (r7.buffer.capacity() \>= r3) goto L_0x0040\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|r7.buffer = java.nio.ByteBuffer.allocateDirect(r3).order(java.nio.ByteOrder.nativeOrder())\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d}"];
Node_9 [shape=record,label="{9\:\ 0x002f|switch(r7.encoding) \{\l    case \-2147483648: goto L_0x0060;\l    case 3: goto L_0x0046;\l    case 1073741824: goto L_0x007c;\l    default: goto L_0x0032;\l\}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032}"];
Node_11 [shape=record,label="{11\:\ 0x0037|throw new java.lang.IllegalStateException()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|int r3 = (r4 \/ 3) * 2\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|int r3 = r4 \/ 2\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|r7.buffer.clear()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|r0 = r2\l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|LOOP_START\lPHI: r0 \l  PHI: (r0v7 'i' int) = (r0v6 'i' int), (r0v8 'i' int) binds: [B:15:0x0046, B:17:0x0049] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:16:0x0047\-\>B:17:0x0049\l|if (r0 \>= r1) goto L_0x0098\l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|LOOP_END\lLOOP:0: B:16:0x0047\-\>B:17:0x0049\l|r7.buffer.put((byte) 0)\lr7.buffer.put((byte) ((r8.get(r0) & 255) + Byte.MIN_VALUE))\lint r0 = r0 + 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|r0 = r2\l}"];
Node_19 [shape=record,label="{19\:\ 0x0061|LOOP_START\lPHI: r0 \l  PHI: (r0v4 'i' int) = (r0v3 'i' int), (r0v5 'i' int) binds: [B:18:0x0060, B:20:0x0063] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x0061\-\>B:20:0x0063\l|if (r0 \>= r1) goto L_0x0098\l}"];
Node_20 [shape=record,label="{20\:\ 0x0063|LOOP_END\lLOOP:1: B:19:0x0061\-\>B:20:0x0063\l|r7.buffer.put(r8.get(r0 + 1))\lr7.buffer.put(r8.get(r0 + 2))\lint r0 = r0 + 3\l}"];
Node_21 [shape=record,label="{21\:\ 0x007c|r0 = r2\l}"];
Node_22 [shape=record,label="{22\:\ 0x007d|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:21:0x007c, B:23:0x007f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:22:0x007d\-\>B:23:0x007f\l|if (r0 \>= r1) goto L_0x0098\l}"];
Node_23 [shape=record,label="{23\:\ 0x007f|LOOP_END\lLOOP:2: B:22:0x007d\-\>B:23:0x007f\l|r7.buffer.put(r8.get(r0 + 2))\lr7.buffer.put(r8.get(r0 + 3))\lint r0 = r0 + 4\l}"];
Node_24 [shape=record,label="{24\:\ 0x0098|r8.position(r8.limit())\lr7.buffer.flip()\lr7.outputBuffer = r7.buffer\l}"];
Node_25 [shape=record,label="{25\:\ 0x00a8|RETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ 0x0098|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0098|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0098|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.ResamplingAudioProcessor.queueInput((r7v0 'this' com.google.android.exoplayer2.audio.ResamplingAudioProcessor A[IMMUTABLE_TYPE, THIS]), (r8v0 'inputBuffer' java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_12;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_15;
Node_9 -> Node_18;
Node_9 -> Node_21;
Node_10 -> Node_11;
Node_12 -> Node_5;
Node_13 -> Node_5;
Node_14 -> Node_8;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_26;
Node_17 -> Node_16;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_19;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_22;
Node_24 -> Node_25;
Node_26 -> Node_24;
Node_27 -> Node_24;
Node_28 -> Node_24;
}

