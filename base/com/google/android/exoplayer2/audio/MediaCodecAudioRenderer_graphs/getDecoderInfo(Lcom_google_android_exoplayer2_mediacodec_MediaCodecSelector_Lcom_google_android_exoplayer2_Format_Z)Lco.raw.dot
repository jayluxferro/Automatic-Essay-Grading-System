digraph "CFG forcom.google.android.exoplayer2.audio.MediaCodecAudioRenderer.getDecoderInfo(Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecSelector;Lcom\/google\/android\/exoplayer2\/Format;Z)Lcom\/google\/android\/exoplayer2\/mediacodec\/MediaCodecInfo;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x0002: INVOKE  (r1 I:boolean) = \l  (r2 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l  (r1 I:java.lang.String)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.allowPassthrough(java.lang.String):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo) = \l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecSelector A[D('mediaCodecSelector' com.google.android.exoplayer2.mediacodec.MediaCodecSelector)])\l com.google.android.exoplayer2.mediacodec.MediaCodecSelector.getPassthroughDecoderInfo():com.google.android.exoplayer2.mediacodec.MediaCodecInfo type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('passthroughDecoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000f: IPUT  \l  (r1 I:boolean)\l  (r2 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.passthroughEnabled boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN  \l  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo A[D('passthroughDecoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo)])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: IPUT  \l  (r1 I:boolean)\l  (r2 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.passthroughEnabled boolean \l0x0015: INVOKE  (r0 I:com.google.android.exoplayer2.mediacodec.MediaCodecInfo) = \l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecSelector A[D('mediaCodecSelector' com.google.android.exoplayer2.mediacodec.MediaCodecSelector)])\l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l  (r5 I:boolean A[D('requiresSecureDecoder' boolean)])\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.getDecoderInfo(com.google.android.exoplayer2.mediacodec.MediaCodecSelector, com.google.android.exoplayer2.Format, boolean):com.google.android.exoplayer2.mediacodec.MediaCodecInfo type: SUPER \l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.mediacodec.MediaCodecInfo com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.getDecoderInfo((r2 'this' I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecSelector A[D('mediaCodecSelector' com.google.android.exoplayer2.mediacodec.MediaCodecSelector), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[D('requiresSecureDecoder' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000c\-0x0011: r0 'passthroughDecoderInfo' com.google.android.exoplayer2.mediacodec.MediaCodecInfo\l  ?\-0x0019: r3 'mediaCodecSelector' com.google.android.exoplayer2.mediacodec.MediaCodecSelector\l  ?\-0x0019: r4 'format' com.google.android.exoplayer2.Format\l  ?\-0x0019: r5 'requiresSecureDecoder' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.mediacodec.MediaCodecUtil$DecoderQueryException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_5;
}

