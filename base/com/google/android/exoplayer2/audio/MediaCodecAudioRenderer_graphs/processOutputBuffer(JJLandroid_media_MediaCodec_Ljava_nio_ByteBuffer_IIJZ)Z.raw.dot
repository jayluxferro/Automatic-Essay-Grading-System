digraph "CFG forcom.google.android.exoplayer2.audio.MediaCodecAudioRenderer.processOutputBuffer(JJLandroid\/media\/MediaCodec;Ljava\/nio\/ByteBuffer;IIJZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: IGET  (r3 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.passthroughEnabled boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r13 I:?[int, boolean, short, byte, char] A[D('bufferFlags' int)]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  \l  (r10 I:android.media.MediaCodec A[D('codec' android.media.MediaCodec)])\l  (r12 I:int A[D('bufferIndex' int)])\l  (r2 I:boolean)\l android.media.MediaCodec.releaseOutputBuffer(int, boolean):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: RETURN  (r1 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('shouldSkip' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: INVOKE  \l  (r10 I:android.media.MediaCodec A[D('codec' android.media.MediaCodec)])\l  (r12 I:int A[D('bufferIndex' int)])\l  (r2 I:boolean)\l android.media.MediaCodec.releaseOutputBuffer(int, boolean):void type: VIRTUAL \l0x0013: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r5 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters \l0x0015: IGET  (r3 I:int) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.skippedOutputBufferCount int \l0x0017: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x0019: IPUT  \l  (r3 I:int)\l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.skippedOutputBufferCount int \l0x001b: IGET  (r2 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r5 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack \l0x001d: INVOKE  (r2 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.handleDiscontinuity():void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|SYNTHETIC\lSplitter:B:8:0x0021\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0021\l|0x0021: IGET  (r3 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r5 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack A[Catch:\{ InitializationException \-\> 0x0036, WriteException \-\> 0x0042 \}, TRY_ENTER]\l0x0023: INVOKE  (r3 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r11 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer)])\l  (r14 I:long A[D('bufferPresentationTimeUs' long)])\l com.google.android.exoplayer2.audio.AudioTrack.handleBuffer(java.nio.ByteBuffer, long):boolean type: VIRTUAL A[Catch:\{ InitializationException \-\> 0x0036, WriteException \-\> 0x0042 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0040 A[Catch:\{ InitializationException \-\> 0x0036, WriteException \-\> 0x0042 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ InitializationException \-\> 0x0036, WriteException \-\> 0x0042 \}]\l0x002a: INVOKE  \l  (r10 I:android.media.MediaCodec A[D('codec' android.media.MediaCodec)])\l  (r12 I:int A[D('bufferIndex' int)])\l  (r2 I:boolean)\l android.media.MediaCodec.releaseOutputBuffer(int, boolean):void type: VIRTUAL A[Catch:\{ InitializationException \-\> 0x0036, WriteException \-\> 0x0042 \}]\l0x002d: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r5 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters A[Catch:\{ InitializationException \-\> 0x0036, WriteException \-\> 0x0042 \}]\l0x002f: IGET  (r3 I:int) = \l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.renderedOutputBufferCount int A[Catch:\{ InitializationException \-\> 0x0036, WriteException \-\> 0x0042 \}]\l0x0031: ARITH  (r3 I:int) = (r3 I:int) + (1 int) A[Catch:\{ InitializationException \-\> 0x0036, WriteException \-\> 0x0042 \}]\l0x0033: IPUT  \l  (r3 I:int)\l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.decoder.DecoderCounters.renderedOutputBufferCount int A[Catch:\{ InitializationException \-\> 0x0036, WriteException \-\> 0x0042 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|ExcHandler: InitializationException null\lSplitter:B:8:0x0021\l|0x0036: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.getIndex():int type: VIRTUAL \l0x003b: INVOKE  (r1 I:com.google.android.exoplayer2.ExoPlaybackException) = \l  (r0 I:java.lang.Exception A[D('e' java.lang.Exception)])\l  (r1 I:int)\l com.google.android.exoplayer2.ExoPlaybackException.createForRenderer(java.lang.Exception, int):com.google.android.exoplayer2.ExoPlaybackException type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|0x0040: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|ExcHandler: WriteException null\lSplitter:B:8:0x0021\l|0x0042: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
MethodNode[shape=record,label="{protected boolean com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.processOutputBuffer((r5 'this' I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer A[IMMUTABLE_TYPE, THIS]), (r6 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[D('elapsedRealtimeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:android.media.MediaCodec A[D('codec' android.media.MediaCodec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.nio.ByteBuffer A[D('buffer' java.nio.ByteBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('bufferIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('bufferFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:long A[D('bufferPresentationTimeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:boolean A[D('shouldSkip' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0037\-0x0040: r0 'e' java.lang.Exception\l  ?\-0x0043: r6 'positionUs' long\l  ?\-0x0043: r8 'elapsedRealtimeUs' long\l  ?\-0x0043: r10 'codec' android.media.MediaCodec\l  ?\-0x0043: r11 'buffer' java.nio.ByteBuffer\l  ?\-0x0043: r12 'bufferIndex' int\l  ?\-0x0043: r13 'bufferFlags' int\l  ?\-0x0043: r14 'bufferPresentationTimeUs' long\l  ?\-0x0043: r16 'shouldSkip' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_8 -> Node_13;
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_5;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_5;
Node_17 -> Node_14;
}

