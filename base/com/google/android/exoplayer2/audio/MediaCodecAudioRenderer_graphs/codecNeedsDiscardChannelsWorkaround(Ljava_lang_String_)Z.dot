digraph "CFG forcom.google.android.exoplayer2.audio.MediaCodecAudioRenderer.codecNeedsDiscardChannelsWorkaround(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (com.google.android.exoplayer2.util.Util.SDK_INT \>= 24) goto L_0x0038\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000c|if (\"OMX.SEC.aac.dec\".equals(r2) == false) goto L_0x0038\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if (\"samsung\".equals(com.google.android.exoplayer2.util.Util.MANUFACTURER) == false) goto L_0x0038\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018}"];
Node_7 [shape=record,label="{7\:\ 0x0020|if (com.google.android.exoplayer2.util.Util.DEVICE.startsWith(\"zeroflte\") != false) goto L_0x0036\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022}"];
Node_9 [shape=record,label="{9\:\ 0x002a|if (com.google.android.exoplayer2.util.Util.DEVICE.startsWith(\"herolte\") != false) goto L_0x0036\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c}"];
Node_11 [shape=record,label="{11\:\ 0x0034|if (com.google.android.exoplayer2.util.Util.DEVICE.startsWith(\"heroqlte\") == false) goto L_0x0038\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.codecNeedsDiscardChannelsWorkaround((r2v0 'codecName' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
}

