digraph "CFG forcom.google.android.exoplayer2.audio.MediaCodecAudioRenderer.onEnabled(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r3 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r4 I:boolean A[D('joining' boolean)])\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onEnabled(boolean):void type: SUPER \l0x0003: IGET  (r1 I:com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher) = \l  (r3 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.eventDispatcher com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher \l0x0005: IGET  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r3 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters \l0x0007: INVOKE  \l  (r1 I:com.google.android.exoplayer2.audio.AudioRendererEventListener$EventDispatcher)\l  (r2 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.audio.AudioRendererEventListener.EventDispatcher.enabled(com.google.android.exoplayer2.decoder.DecoderCounters):void type: VIRTUAL \l0x000a: INVOKE  (r1 I:com.google.android.exoplayer2.RendererConfiguration) = \l  (r3 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.getConfiguration():com.google.android.exoplayer2.RendererConfiguration type: VIRTUAL \l0x000e: IGET  (r0 I:int) = (r1 I:com.google.android.exoplayer2.RendererConfiguration) com.google.android.exoplayer2.RendererConfiguration.tunnelingAudioSessionId int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tunnelingAudioSessionId' int)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: IGET  (r1 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r3 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack \l0x0014: INVOKE  \l  (r1 I:com.google.android.exoplayer2.audio.AudioTrack)\l  (r0 I:int A[D('tunnelingAudioSessionId' int)])\l com.google.android.exoplayer2.audio.AudioTrack.enableTunnelingV21(int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IGET  (r1 I:com.google.android.exoplayer2.audio.AudioTrack) = \l  (r3 I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer)\l com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.audioTrack com.google.android.exoplayer2.audio.AudioTrack \l0x001a: INVOKE  (r1 I:com.google.android.exoplayer2.audio.AudioTrack) com.google.android.exoplayer2.audio.AudioTrack.disableTunneling():void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.onEnabled((r3 'this' I:com.google.android.exoplayer2.audio.MediaCodecAudioRenderer A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[D('joining' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0010\-0x001d: r0 'tunnelingAudioSessionId' int\l  ?\-0x001d: r4 'joining' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
}

