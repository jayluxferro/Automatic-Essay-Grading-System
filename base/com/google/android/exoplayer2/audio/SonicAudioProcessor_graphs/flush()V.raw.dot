digraph "CFG forcom.google.android.exoplayer2.audio.SonicAudioProcessor.flush()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0002: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.audio.Sonic) =  com.google.android.exoplayer2.audio.Sonic \l0x0004: IGET  (r1 I:int) = \l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.sampleRateHz int \l0x0006: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.channelCount int \l0x0008: INVOKE  \l  (r0 I:com.google.android.exoplayer2.audio.Sonic)\l  (r1 I:int)\l  (r2 I:int)\l com.google.android.exoplayer2.audio.Sonic.\<init\>(int, int):void type: DIRECT \l0x000b: IPUT  \l  (r0 I:com.google.android.exoplayer2.audio.Sonic)\l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.sonic com.google.android.exoplayer2.audio.Sonic \l0x000d: IGET  (r0 I:com.google.android.exoplayer2.audio.Sonic) = \l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.sonic com.google.android.exoplayer2.audio.Sonic \l0x000f: IGET  (r1 I:float) = \l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.speed float \l0x0011: INVOKE  \l  (r0 I:com.google.android.exoplayer2.audio.Sonic)\l  (r1 I:float)\l com.google.android.exoplayer2.audio.Sonic.setSpeed(float):void type: VIRTUAL \l0x0014: IGET  (r0 I:com.google.android.exoplayer2.audio.Sonic) = \l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.sonic com.google.android.exoplayer2.audio.Sonic \l0x0016: IGET  (r1 I:float) = \l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.pitch float \l0x0018: INVOKE  \l  (r0 I:com.google.android.exoplayer2.audio.Sonic)\l  (r1 I:float)\l com.google.android.exoplayer2.audio.Sonic.setPitch(float):void type: VIRTUAL \l0x001b: SGET  (r0 I:java.nio.ByteBuffer) =  com.google.android.exoplayer2.audio.SonicAudioProcessor.EMPTY_BUFFER java.nio.ByteBuffer \l0x001d: IPUT  \l  (r0 I:java.nio.ByteBuffer)\l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.outputBuffer java.nio.ByteBuffer \l0x001f: IPUT  \l  (r4 I:long)\l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.inputBytes long \l0x0021: IPUT  \l  (r4 I:long)\l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.outputBytes long \l0x0023: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0024: IPUT  \l  (r0 I:boolean)\l  (r6 I:com.google.android.exoplayer2.audio.SonicAudioProcessor)\l com.google.android.exoplayer2.audio.SonicAudioProcessor.inputEnded boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|0x0026: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.SonicAudioProcessor.flush((r6 'this' I:com.google.android.exoplayer2.audio.SonicAudioProcessor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

