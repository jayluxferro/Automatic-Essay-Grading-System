digraph "CFG forcom.google.android.exoplayer2.audio.SonicAudioProcessor.configure(III)Z" {
subgraph cluster_Region_1501904339 {
label = "R(1:(1:3)(1:(1:8)(2:9|10)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2092101804 {
label = "IF [B:1:0x0001] THEN: R(1:3) ELSE: R(1:(1:8)(2:9|10))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 != 2) goto L_0x0003\l}"];
subgraph cluster_Region_1396653463 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|throw new com.google.android.exoplayer2.audio.AudioProcessor.UnhandledFormatException(r2, r3, r4)\l}"];
}
subgraph cluster_Region_1344247199 {
label = "R(1:(1:8)(2:9|10)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_537154026 {
label = "IF [B:5:0x000b, B:7:0x000f] THEN: R(1:8) ELSE: R(2:9|10) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r1.sampleRateHz == r2) goto L_0x000d\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|ADDED_TO_REGION\l|if (r1.channelCount == r3) goto L_0x0011\l}"];
subgraph cluster_Region_1264120534 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0011|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
subgraph cluster_Region_1629597103 {
label = "R(2:9|10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0013|r1.sampleRateHz = r2\lr1.channelCount = r3\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0003}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0009}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000d}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.audio.SonicAudioProcessor.configure((r1v0 'this' com.google.android.exoplayer2.audio.SonicAudioProcessor A[IMMUTABLE_TYPE, THIS]), (r2v0 'sampleRateHz' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'channelCount' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'encoding' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.audio.AudioProcessor$UnhandledFormatException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_9 -> Node_10;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

