digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.queueEndOfStream()V" {
subgraph cluster_Region_1511928512 {
label = "R(5:0|(1:3)|4|(1:6)|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r1 = r8.numInputSamples\lint int r0 = r8.numOutputSamples + ((int) ((((((float) r1) \/ (r8.speed \/ r8.pitch)) + ((float) r8.numPitchSamples)) \/ r8.pitch) + 0.5f))\lenlargeInputBufferIfNeeded((r8.maxRequired * 2) + r1)\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_1989466865 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x002a|if (r3 \< (r8.maxRequired * 2 * r8.numChannels)) goto L_0x002c\l}"];
subgraph cluster_Region_105317476 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x002c|LOOP_END\lLOOP:0: B:1:0x0023\-\>B:3:0x002c\l|r8.inputBuffer[(r8.numChannels * r1) + r3] = 0\lr3++\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x0037|r8.numInputSamples += r8.maxRequired * 2\lprocessStreamInput()\l}"];
subgraph cluster_IfRegion_645075426 {
label = "IF [B:5:0x0045] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0045|if (r8.numOutputSamples \> r0) goto L_0x0047\l}"];
subgraph cluster_Region_1563913125 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0047|r8.numOutputSamples = r0\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0049|r8.numInputSamples = 0\lr8.remainingInputToCopy = 0\lr8.numPitchSamples = 0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0023|LOOP_START\lPHI: r3 \l  PHI: (r3v1 'xSample' int) = (r3v0 'xSample' int), (r3v2 'xSample' int) binds: [B:0:0x0000, B:3:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0023\-\>B:3:0x002c\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x004f}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0037|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.Sonic.queueEndOfStream((r8v0 'this' com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_1 -> Node_2;
Node_9 -> Node_4;
}

