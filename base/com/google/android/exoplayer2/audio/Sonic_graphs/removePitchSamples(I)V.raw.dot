digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.removePitchSamples(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('numSamples' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN   \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IGET  (r0 I:short[]) = (r6 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.pitchBuffer short[] \l0x0005: IGET  (r1 I:int) = (r6 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numChannels int \l0x0007: ARITH  (r1 I:int) = (r1 I:int) * (r7 I:int A[D('numSamples' int)]) \l0x0008: IGET  (r2 I:short[]) = (r6 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.pitchBuffer short[] \l0x000a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: IGET  (r4 I:int) = (r6 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numPitchSamples int \l0x000d: ARITH  (r4 I:int) = (r4 I:int) \- (r7 I:int A[D('numSamples' int)]) \l0x000e: IGET  (r5 I:int) = (r6 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numChannels int \l0x0010: ARITH  (r4 I:int) = (r4 I:int) * (r5 I:int) \l0x0011: INVOKE  \l  (r0 I:java.lang.Object)\l  (r1 I:int)\l  (r2 I:java.lang.Object)\l  (r3 I:int)\l  (r4 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0014: IGET  (r0 I:int) = (r6 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numPitchSamples int \l0x0016: ARITH  (r0 I:int) = (r0 I:int) \- (r7 I:int A[D('numSamples' int)]) \l0x0017: IPUT  \l  (r0 I:int)\l  (r6 I:com.google.android.exoplayer2.audio.Sonic)\l com.google.android.exoplayer2.audio.Sonic.numPitchSamples int \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.Sonic.removePitchSamples((r6 'this' I:com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('numSamples' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0019: r7 'numSamples' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_1;
}

