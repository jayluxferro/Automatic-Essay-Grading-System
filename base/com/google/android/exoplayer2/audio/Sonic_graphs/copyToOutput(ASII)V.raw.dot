digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.copyToOutput([SII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r4 I:com.google.android.exoplayer2.audio.Sonic)\l  (r7 I:int A[D('numSamples' int)])\l com.google.android.exoplayer2.audio.Sonic.enlargeOutputBufferIfNeeded(int):void type: DIRECT \l0x0003: IGET  (r0 I:int) = (r4 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numChannels int \l0x0005: ARITH  (r0 I:int) = (r0 I:int) * (r6 I:int A[D('position' int)]) \l0x0006: IGET  (r1 I:short[]) = (r4 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.outputBuffer short[] \l0x0008: IGET  (r2 I:int) = (r4 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numOutputSamples int \l0x000a: IGET  (r3 I:int) = (r4 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numChannels int \l0x000c: ARITH  (r2 I:int) = (r2 I:int) * (r3 I:int) \l0x000d: IGET  (r3 I:int) = (r4 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numChannels int \l0x000f: ARITH  (r3 I:int) = (r3 I:int) * (r7 I:int A[D('numSamples' int)]) \l0x0010: INVOKE  \l  (r5 I:java.lang.Object A[D('samples' short[])])\l  (r0 I:int)\l  (r1 I:java.lang.Object)\l  (r2 I:int)\l  (r3 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0013: IGET  (r0 I:int) = (r4 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numOutputSamples int \l0x0015: ARITH  (r0 I:int) = (r0 I:int) + (r7 I:int A[D('numSamples' int)]) \l0x0016: IPUT  \l  (r0 I:int)\l  (r4 I:com.google.android.exoplayer2.audio.Sonic)\l com.google.android.exoplayer2.audio.Sonic.numOutputSamples int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.Sonic.copyToOutput((r4 'this' I:com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r5 I:short[] A[D('samples' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('numSamples' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0018: r5 'samples' short[]\l  ?\-0x0018: r6 'position' int\l  ?\-0x0018: r7 'numSamples' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

