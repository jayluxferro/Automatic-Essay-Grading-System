digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.previousPeriodBetter(IIZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 == 0) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r3.prevPeriod != 0) goto L_0x0008\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|if (r6 == false) goto L_0x0018\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a}"];
Node_6 [shape=record,label="{6\:\ 0x000c|if (r5 \> (r4 * 3)) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e}"];
Node_8 [shape=record,label="{8\:\ 0x0014|if ((r4 * 2) \<= (r3.prevMinDiff * 3)) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|SYNTHETIC\lRETURN\l|return true\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018}"];
Node_11 [shape=record,label="{11\:\ 0x001a|if (r4 \> r3.prevMinDiff) goto L_0x0016\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.audio.Sonic.previousPeriodBetter((r3v0 'this' com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r4v0 'minDiff' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'maxDiff' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'preferNewPeriod' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_13[style=dashed];
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_9;
Node_11 -> Node_16[style=dashed];
}

