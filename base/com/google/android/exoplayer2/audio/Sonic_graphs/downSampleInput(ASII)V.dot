digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.downSampleInput([SII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r2 = r7.maxRequired \/ r10\lint r3 = r7.numChannels * r10\lint r9 = r9 * r7.numChannels\lr0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:0:0x0000, B:5:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:5:0x001c\l|if (r0 \>= r2) goto L_0x0025\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|r4 = 0\lr1 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|LOOP_START\lPHI: r1 r4 \l  PHI: (r1v1 'j' int) = (r1v0 'j' int), (r1v2 'j' int) binds: [B:2:0x000e, B:4:0x0012] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'value' int) = (r4v0 'value' int), (r4v3 'value' int) binds: [B:2:0x000e, B:4:0x0012] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:3:0x0010\-\>B:4:0x0012\l|if (r1 \>= r3) goto L_0x001c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|LOOP_END\lLOOP:1: B:3:0x0010\-\>B:4:0x0012\l|int r4 = r4 + r8[((r0 * r3) + r9) + r1]\lint r1 = r1 + 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|LOOP_END\lLOOP:0: B:1:0x000c\-\>B:5:0x001c\l|r7.downSampleBuffer[r0] = (short) (r4 \/ r3)\lint r0 = r0 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.Sonic.downSampleInput((r7v0 'this' com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r8v0 'samples' short[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'position' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'skip' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_3;
Node_5 -> Node_1;
Node_7 -> Node_6;
Node_8 -> Node_5;
}

