digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.adjustPitch(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r17.numOutputSamples != r18) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|moveNewSamplesToPitchBuffer(r18)\lr6 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|LOOP_START\lPHI: r6 \l  PHI: (r6v1 'position' int) = (r6v0 'position' int), (r6v2 'position' int) binds: [B:2:0x0009, B:8:0x0055] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000d\-\>B:8:0x0055\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|if ((r17.numPitchSamples \- r6) \< r17.maxRequired) goto L_0x007f\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|short[] r2 = r17.pitchBuffer\lint r16 = findPitchPeriod(r2, r6, false)\lint r1 = (int) (((float) r16) \/ r17.pitch)\lenlargeOutputBufferIfNeeded(r1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0039|if ((r17.pitch \> 1.0f ? 1 : (r17.pitch == 1.0f ? 0 : \-1)) \< 0) goto L_0x0061\l}"];
Node_7 [shape=record,label="{7\:\ 0x003b|overlapAdd(r1, r17.numChannels, r17.outputBuffer, r17.numOutputSamples, r17.pitchBuffer, r6, r17.pitchBuffer, (r6 + r16) \- r1)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0055|LOOP_END\lLOOP:0: B:3:0x000d\-\>B:8:0x0055\l|r17.numOutputSamples = r17.numOutputSamples + r1\lint r6 = r6 + r16\l}"];
Node_9 [shape=record,label="{9\:\ 0x0061|int r8 = r17.numChannels\lr7 = r16\lr13 = r6\loverlapAddWithSeparation(r7, r8, r1 \- r16, r17.outputBuffer, r17.numOutputSamples, r17.pitchBuffer, r13, r17.pitchBuffer, r6)\l}"];
Node_10 [shape=record,label="{10\:\ 0x007f|removePitchSamples(r6)\l}"];
Node_11 [shape=record,label="{11\:\ 0x007f|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0055|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.Sonic.adjustPitch((r17v0 'this' com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r18v0 'originalNumOutputSamples' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_12;
Node_8 -> Node_3;
Node_9 -> Node_13;
Node_10 -> Node_15;
Node_11 -> Node_10;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

