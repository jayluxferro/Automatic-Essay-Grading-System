digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.enlargeInputBufferIfNeeded(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numInputSamples int \l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (r4 I:int A[D('numSamples' int)]) \l0x0003: IGET  (r1 I:int) = (r3 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.inputBufferSize int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r0 I:int) = (r3 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.inputBufferSize int \l0x0009: IGET  (r1 I:int) = (r3 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.inputBufferSize int \l0x000b: ARITH  (r1 I:int) = (r1 I:int) \/ (2 int) \l0x000d: ARITH  (r1 I:int) = (r1 I:int) + (r4 I:int A[D('numSamples' int)]) \l0x000e: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x000f: IPUT  \l  (r0 I:int)\l  (r3 I:com.google.android.exoplayer2.audio.Sonic)\l com.google.android.exoplayer2.audio.Sonic.inputBufferSize int \l0x0011: IGET  (r0 I:short[]) = (r3 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.inputBuffer short[] \l0x0013: IGET  (r1 I:int) = (r3 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.inputBufferSize int \l0x0015: IGET  (r2 I:int) = (r3 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numChannels int \l0x0017: ARITH  (r1 I:int) = (r1 I:int) * (r2 I:int) \l0x0018: INVOKE  (r0 I:short[]) = (r0 I:short[]), (r1 I:int) java.util.Arrays.copyOf(short[], int):short[] type: STATIC \l0x001c: IPUT  \l  (r0 I:short[])\l  (r3 I:com.google.android.exoplayer2.audio.Sonic)\l com.google.android.exoplayer2.audio.Sonic.inputBuffer short[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.Sonic.enlargeInputBufferIfNeeded((r3 'this' I:com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('numSamples' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001e: r4 'numSamples' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

