digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.previousPeriodBetter(IIZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('minDiff' int)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IGET  (r1 I:int) = (r3 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.prevPeriod int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0008 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: RETURN  (r0 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('preferNewPeriod' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0018 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: ARITH  (r1 I:int) = (r4 I:int A[D('minDiff' int)]) * (3 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: IF  (r5 I:?[int, byte, short, char] A[D('maxDiff' int)]) \> (r1 I:?[int, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|0x000e: ARITH  (r1 I:int) = (r4 I:int A[D('minDiff' int)]) * (2 int) \l0x0010: IGET  (r2 I:int) = (r3 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.prevMinDiff int \l0x0012: ARITH  (r2 I:int) = (r2 I:int) * (3 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: IF  (r1 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|0x0018: IGET  (r1 I:int) = (r3 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.prevMinDiff int \l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|0x001a: IF  (r4 I:?[int, byte, short, char] A[D('minDiff' int)]) \> (r1 I:?[int, byte, short, char])  \-\> B:10:0x0016 \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.audio.Sonic.previousPeriodBetter((r3 'this' I:com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('minDiff' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('maxDiff' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('preferNewPeriod' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001c: r4 'minDiff' int\l  ?\-0x001c: r5 'maxDiff' int\l  ?\-0x001c: r6 'preferNewPeriod' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_4;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_4;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_4;
Node_11 -> Node_12;
Node_12 -> Node_10;
Node_12 -> Node_4[style=dashed];
}

