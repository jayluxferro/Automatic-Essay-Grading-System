digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.enlargeInputBufferIfNeeded(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if ((r3.numInputSamples + r4) \<= r3.inputBufferSize) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r3.inputBufferSize = r3.inputBufferSize + ((r3.inputBufferSize \/ 2) + r4)\lr3.inputBuffer = java.util.Arrays.copyOf(r3.inputBuffer, r3.inputBufferSize * r3.numChannels)\l}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.Sonic.enlargeInputBufferIfNeeded((r3v0 'this' com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r4v0 'numSamples' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

