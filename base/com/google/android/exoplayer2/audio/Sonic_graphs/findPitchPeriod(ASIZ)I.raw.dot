digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.findPitchPeriod([SIZ)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: IGET  (r6 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.sampleRate int \l0x0004: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (4000(0xfa0, float:5.605E\-42) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r6 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:12:0x002d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r6 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.sampleRate int \l0x000a: ARITH  (r4 I:int) = (r6 I:int) \/ (4000 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r6 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numChannels int \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('skip' int)]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IGET  (r5 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.minPeriod int \l0x0014: IGET  (r6 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.maxPeriod int \l0x0016: INVOKE  (r2 I:int) = \l  (r10 I:com.google.android.exoplayer2.audio.Sonic)\l  (r11 I:short[] A[D('samples' short[])])\l  (r12 I:int A[D('position' int)])\l  (r5 I:int)\l  (r6 I:int)\l com.google.android.exoplayer2.audio.Sonic.findPitchPeriodInRange(short[], int, int, int):int type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IGET  (r5 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.minDiff int \l0x001c: IGET  (r6 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.maxDiff int \l0x001e: INVOKE  (r5 I:boolean) = \l  (r10 I:com.google.android.exoplayer2.audio.Sonic)\l  (r5 I:int)\l  (r6 I:int)\l  (r13 I:boolean A[D('preferNewPeriod' boolean)])\l com.google.android.exoplayer2.audio.Sonic.previousPeriodBetter(int, int, boolean):boolean type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0068 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: IGET  (r3 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.prevPeriod int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: IGET  (r5 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.minDiff int \l0x0028: IPUT  \l  (r5 I:int)\l  (r10 I:com.google.android.exoplayer2.audio.Sonic)\l com.google.android.exoplayer2.audio.Sonic.prevMinDiff int \l0x002a: IPUT  \l  (r2 I:int A[D('period' int)])\l  (r10 I:com.google.android.exoplayer2.audio.Sonic)\l com.google.android.exoplayer2.audio.Sonic.prevPeriod int \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: RETURN  (r3 I:int A[D('retPeriod' int)]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('skip' int)]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: INVOKE  \l  (r10 I:com.google.android.exoplayer2.audio.Sonic)\l  (r11 I:short[] A[D('samples' short[])])\l  (r12 I:int A[D('position' int)])\l  (r4 I:int A[D('skip' int)])\l com.google.android.exoplayer2.audio.Sonic.downSampleInput(short[], int, int):void type: DIRECT \l0x0032: IGET  (r6 I:short[]) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.downSampleBuffer short[] \l0x0034: IGET  (r7 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.minPeriod int \l0x0036: ARITH  (r7 I:int) = (r7 I:int) \/ (r4 I:int A[D('skip' int)]) \l0x0037: IGET  (r8 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.maxPeriod int \l0x0039: ARITH  (r8 I:int) = (r8 I:int) \/ (r4 I:int A[D('skip' int)]) \l0x003a: INVOKE  (r2 I:int) = \l  (r10 I:com.google.android.exoplayer2.audio.Sonic)\l  (r6 I:short[])\l  (r9 I:int)\l  (r7 I:int)\l  (r8 I:int)\l com.google.android.exoplayer2.audio.Sonic.findPitchPeriodInRange(short[], int, int, int):int type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('skip' int)]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|0x0040: ARITH  (r2 I:int A[D('period' int)]) = (r2 I:int A[D('period' int)]) * (r4 I:int A[D('skip' int)]) \l0x0041: ARITH  (r6 I:int) = (r4 I:int A[D('skip' int)]) * (4 int) \l0x0043: ARITH  (r1 I:int) = (r2 I:int A[D('period' int)]) \- (r6 I:int) \l0x0045: ARITH  (r6 I:int) = (r4 I:int A[D('skip' int)]) * (4 int) \l0x0047: ARITH  (r0 I:int) = (r2 I:int A[D('period' int)]) + (r6 I:int) \l0x0049: IGET  (r6 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.minPeriod int \l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|0x004b: IF  (r1 I:?[int, byte, short, char] A[D('minP' int)]) \>= (r6 I:?[int, byte, short, char])  \-\> B:18:0x004f \l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|0x004d: IGET  (r1 I:int A[D('minP' int)]) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.minPeriod int \l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|0x004f: IGET  (r6 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.maxPeriod int \l}"];
Node_19 [shape=record,label="{19\:\ 0x0051|0x0051: IF  (r0 I:?[int, byte, short, char] A[D('maxP' int)]) \<= (r6 I:?[int, byte, short, char])  \-\> B:21:0x0055 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|0x0053: IGET  (r0 I:int A[D('maxP' int)]) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.maxPeriod int \l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|0x0055: IGET  (r6 I:int) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numChannels int \l}"];
Node_22 [shape=record,label="{22\:\ 0x0057|0x0057: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x005e \l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|0x0059: INVOKE  (r2 I:int A[D('period' int)]) = \l  (r10 I:com.google.android.exoplayer2.audio.Sonic)\l  (r11 I:short[] A[D('samples' short[])])\l  (r12 I:int A[D('position' int)])\l  (r1 I:int A[D('minP' int)])\l  (r0 I:int A[D('maxP' int)])\l com.google.android.exoplayer2.audio.Sonic.findPitchPeriodInRange(short[], int, int, int):int type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x005e|0x005e: INVOKE  \l  (r10 I:com.google.android.exoplayer2.audio.Sonic)\l  (r11 I:short[] A[D('samples' short[])])\l  (r12 I:int A[D('position' int)])\l  (r5 I:int)\l com.google.android.exoplayer2.audio.Sonic.downSampleInput(short[], int, int):void type: DIRECT \l0x0061: IGET  (r5 I:short[]) = (r10 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.downSampleBuffer short[] \l0x0063: INVOKE  (r2 I:int A[D('period' int)]) = \l  (r10 I:com.google.android.exoplayer2.audio.Sonic)\l  (r5 I:short[])\l  (r9 I:int)\l  (r1 I:int A[D('minP' int)])\l  (r0 I:int A[D('maxP' int)])\l com.google.android.exoplayer2.audio.Sonic.findPitchPeriodInRange(short[], int, int, int):int type: DIRECT \l}"];
Node_25 [shape=record,label="{25\:\ 0x0068|0x0068: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('period' int)])\l \l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.audio.Sonic.findPitchPeriod((r10 'this' I:com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r11 I:short[] A[D('samples' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:boolean A[D('preferNewPeriod' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001a\-0x002d: r2 'period' int\l  0x0026\-0x002d: r3 'retPeriod' int\l  0x000c\-0x002d: r4 'skip' int\l  0x0049\-0x0068: r0 'maxP' int\l  0x0045\-0x0068: r1 'minP' int\l  0x003e\-0x0069: r2 'period' int\l  0x0069\-0x0069: r3 'retPeriod' int\l  0x002f\-0x0069: r4 'skip' int\l  ?\-0x0069: r11 'samples' short[]\l  ?\-0x0069: r12 'position' int\l  ?\-0x0069: r13 'preferNewPeriod' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_25;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_3;
Node_13 -> Node_14;
Node_14 -> Node_7;
Node_14 -> Node_15[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_7;
Node_24 -> Node_7;
Node_25 -> Node_10;
}

