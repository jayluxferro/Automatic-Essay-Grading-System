digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.adjustPitch(I)V" {
subgraph cluster_Region_555291940 {
label = "R(1:(1:(3:2|(3:5|(1:7)(1:9)|8)|10)))";
node [shape=record,color=blue];
subgraph cluster_Region_1289322954 {
label = "R(1:(3:2|(3:5|(1:7)(1:9)|8)|10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1560349634 {
label = "IF [B:1:0x0006] THEN: R(3:2|(3:5|(1:7)(1:9)|8)|10) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r17.numOutputSamples != r18) goto L_0x0009\l}"];
subgraph cluster_Region_967399015 {
label = "R(3:2|(3:5|(1:7)(1:9)|8)|10)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|moveNewSamplesToPitchBuffer(r18)\lint r6 = 0\l}"];
subgraph cluster_LoopRegion_206466754 {
label = "LOOP:0: (3:5|(1:7)(1:9)|8)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|if ((r17.numPitchSamples \- r6) \>= r17.maxRequired) goto L_0x0018\l}"];
subgraph cluster_Region_1685920428 {
label = "R(3:5|(1:7)(1:9)|8)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|int int r16 = findPitchPeriod(r17.pitchBuffer, r6, false)\lint int r1 = (int) (((float) r16) \/ r17.pitch)\lenlargeOutputBufferIfNeeded(r1)\l}"];
subgraph cluster_IfRegion_572625492 {
label = "IF [B:6:0x0039] THEN: R(1:7) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0039|if (r17.pitch \>= 1.0f) goto L_0x003b\l}"];
subgraph cluster_Region_995362553 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x003b|overlapAdd(r1, r17.numChannels, r17.outputBuffer, r17.numOutputSamples, r17.pitchBuffer, r6, r17.pitchBuffer, (r6 + r16) \- r1)\l}"];
}
subgraph cluster_Region_1211983258 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0061|overlapAddWithSeparation(r16, r17.numChannels, r1 \- r16, r17.outputBuffer, r17.numOutputSamples, r17.pitchBuffer, r6, r17.pitchBuffer, r6)\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0055|LOOP_END\lLOOP:0: B:3:0x000d\-\>B:8:0x0055\l|r17.numOutputSamples += r1\lr6 += r16\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x007f|removePitchSamples(r6)\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000d|LOOP_START\lPHI: r6 \l  PHI: (r6v1 'position' int) = (r6v0 'position' int), (r6v2 'position' int) binds: [B:2:0x0009, B:8:0x0055] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000d\-\>B:8:0x0055\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x007f|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0055|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0055|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_15 [shape=record,color=red,label="{15\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.audio.Sonic.adjustPitch((r17v0 'this' com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r18v0 'originalNumOutputSamples' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_14[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_11[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_12;
Node_9 -> Node_13;
Node_8 -> Node_3;
Node_10 -> Node_15;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_11 -> Node_10;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

