digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.interpolate([SIII)S" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: AGET  (r0 I:short A[IMMUTABLE_TYPE]) = \l  (r10 I:short[] A[D('in' short[]), IMMUTABLE_TYPE])\l  (r11 I:?[int, short, byte, char] A[D('inPos' int)])\l \l0x0002: IGET  (r7 I:int) = (r9 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.numChannels int \l0x0004: ARITH  (r7 I:int) = (r7 I:int) + (r11 I:int A[D('inPos' int)]) \l0x0005: AGET  (r4 I:short A[IMMUTABLE_TYPE]) = \l  (r10 I:short[] A[D('in' short[]), IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x0007: IGET  (r7 I:int) = (r9 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.newRatePosition int \l0x0009: ARITH  (r2 I:int) = (r7 I:int) * (r12 I:int A[D('oldSampleRate' int)]) \l0x000b: IGET  (r7 I:int) = (r9 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.oldRatePosition int \l0x000d: ARITH  (r1 I:int) = (r7 I:int) * (r13 I:int A[D('newSampleRate' int)]) \l0x000f: IGET  (r7 I:int) = (r9 I:com.google.android.exoplayer2.audio.Sonic) com.google.android.exoplayer2.audio.Sonic.oldRatePosition int \l0x0011: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l0x0013: ARITH  (r5 I:int) = (r7 I:int) * (r13 I:int A[D('newSampleRate' int)]) \l0x0015: ARITH  (r3 I:int) = (r5 I:int A[D('rightPosition' int)]) \- (r2 I:int A[D('position' int)]) \l0x0017: ARITH  (r6 I:int) = (r5 I:int A[D('rightPosition' int)]) \- (r1 I:int A[D('leftPosition' int)]) \l0x0019: ARITH  (r7 I:int) = (r3 I:int A[D('ratio' int)]) * (r0 I:int A[D('left' short)]) \l0x001b: ARITH  (r8 I:int) = (r6 I:int A[D('width' int)]) \- (r3 I:int A[D('ratio' int)]) \l0x001d: ARITH  (r8 I:int) = (r8 I:int) * (r4 I:int A[D('right' short)]) \l0x001e: ARITH  (r7 I:int) = (r7 I:int) + (r8 I:int) \l0x001f: ARITH  (r7 I:int) = (r7 I:int) \/ (r6 I:int A[D('width' int)]) \l0x0020: CAST  (r7 I:short) = (short) (r7 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: RETURN  (r7 I:short) \l}"];
MethodNode[shape=record,label="{private short com.google.android.exoplayer2.audio.Sonic.interpolate((r9 'this' I:com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r10 I:short[] A[D('in' short[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('inPos' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('oldSampleRate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('newSampleRate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0002\-0x0021: r0 'left' short\l  0x000f\-0x0021: r1 'leftPosition' int\l  0x000b\-0x0021: r2 'position' int\l  0x0017\-0x0021: r3 'ratio' int\l  0x0007\-0x0021: r4 'right' short\l  0x0015\-0x0021: r5 'rightPosition' int\l  0x0019\-0x0021: r6 'width' int\l  ?\-0x0021: r10 'in' short[]\l  ?\-0x0021: r11 'inPos' int\l  ?\-0x0021: r12 'oldSampleRate' int\l  ?\-0x0021: r13 'newSampleRate' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

