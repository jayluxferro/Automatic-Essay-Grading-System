digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.overlapAddWithSeparation(III[SI[SI[SI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:0:0x0000, B:11:0x0043] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:11:0x0043\l|if (r1 \>= r9) goto L_0x0046\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|int r2 = (r12 * r9) + r1\lint r4 = (r16 * r9) + r1\lint r0 = (r14 * r9) + r1\lr3 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|LOOP_START\lPHI: r0 r2 r3 r4 \l  PHI: (r0v1 'd' int) = (r0v0 'd' int), (r0v3 'd' int) binds: [B:2:0x0003, B:7:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'o' int) = (r2v0 'o' int), (r2v2 'o' int) binds: [B:2:0x0003, B:7:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 't' int) = (r3v0 't' int), (r3v2 't' int) binds: [B:2:0x0003, B:7:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'u' int) = (r4v0 'u' int), (r4v4 'u' int) binds: [B:2:0x0003, B:7:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:3:0x0010\-\>B:7:0x0020\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|if (r3 \>= (r8 + r10)) goto L_0x0043\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r3 \>= r10) goto L_0x0024\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|r11[r2] = (short) ((r13[r0] * (r8 \- r3)) \/ r8)\lint r0 = r0 + r9\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|LOOP_END\lPHI: r0 r4 \l  PHI: (r0v3 'd' int) = (r0v1 'd' int), (r0v2 'd' int), (r0v4 'd' int) binds: [B:17:0x0020, B:16:0x0020, B:15:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 'u' int) = (r4v2 'u' int), (r4v3 'u' int), (r4v1 'u' int) binds: [B:17:0x0020, B:16:0x0020, B:15:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:3:0x0010\-\>B:7:0x0020\l|int r2 = r2 + r9\lint r3 = r3 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|if (r3 \>= r8) goto L_0x0038\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|r11[r2] = (short) (((r13[r0] * (r8 \- r3)) + (r15[r4] * (r3 \- r10))) \/ r8)\lint r0 = r0 + r9\lint r4 = r4 + r9\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|r11[r2] = (short) ((r15[r4] * (r3 \- r10)) \/ r8)\lint r4 = r4 + r9\l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:11:0x0043\l|int r1 = r1 + 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0043|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0020|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.audio.Sonic.overlapAddWithSeparation((r8v0 'numSamples' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'numChannels' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'separation' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'out' short[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'outPos' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'rampDown' short[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'rampDownPos' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'rampUp' short[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'rampUpPos' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_15;
Node_7 -> Node_3;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_16;
Node_10 -> Node_17;
Node_11 -> Node_1;
Node_13 -> Node_12;
Node_14 -> Node_11;
Node_15 -> Node_7;
Node_16 -> Node_7;
Node_17 -> Node_7;
}

