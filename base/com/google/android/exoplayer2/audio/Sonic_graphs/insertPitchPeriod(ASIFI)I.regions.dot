digraph "CFG forcom.google.android.exoplayer2.audio.Sonic.insertPitchPeriod([SIFI)I" {
subgraph cluster_Region_2123780253 {
label = "R(3:(1:2)(1:5)|3|4) | DECL_VAR: int newSamples\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_14738290 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r11 \< 0.5f) goto L_0x0008\l}"];
subgraph cluster_Region_16875349 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|int r0 = (int) ((((float) r12) * r11) \/ (1.0f \- r11))\l}"];
}
subgraph cluster_Region_847595793 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x003a|r0 = r12\lr8.remainingInputToCopy = (int) ((((float) r12) * ((2.0f * r11) \- 1.0f)) \/ (1.0f \- r11))\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x000e|PHI: r0 \l  PHI: (r0v1 'newSamples' int) = (r0v0 'newSamples' int), (r0v2 'newSamples' int) binds: [B:5:0x003a, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|enlargeOutputBufferIfNeeded(r12 + r0)\ljava.lang.System.arraycopy(r9, r8.numChannels * r10, r8.outputBuffer, r8.numOutputSamples * r8.numChannels, r8.numChannels * r12)\loverlapAdd(r0, r8.numChannels, r8.outputBuffer, r8.numOutputSamples + r12, r9, r10 + r12, r9, r10)\lr8.numOutputSamples += r12 + r0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0039|RETURN\l|return r0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.audio.Sonic.insertPitchPeriod((r8v0 'this' com.google.android.exoplayer2.audio.Sonic A[IMMUTABLE_TYPE, THIS]), (r9v0 'samples' short[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'position' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'speed' float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'period' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_5 -> Node_3;
Node_3 -> Node_4;
Node_0 -> Node_1;
}

