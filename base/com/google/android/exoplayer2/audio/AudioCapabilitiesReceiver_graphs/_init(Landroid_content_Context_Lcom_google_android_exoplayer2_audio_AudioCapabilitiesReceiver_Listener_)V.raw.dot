digraph "CFG forcom.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.\<init\>(Landroid\/content\/Context;Lcom\/google\/android\/exoplayer2\/audio\/AudioCapabilitiesReceiver$Listener;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0004: INVOKE  (r0 I:java.lang.Object) = \l  (r4 I:java.lang.Object A[D('context' android.content.Context)])\l com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0008: CHECK_CAST  (r0 I:android.content.Context) = (android.content.Context) (r0 I:?[OBJECT, ARRAY]) \l0x000a: IPUT  \l  (r0 I:android.content.Context)\l  (r3 I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver)\l com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.context android.content.Context \l0x000c: INVOKE  (r0 I:java.lang.Object) = \l  (r5 I:java.lang.Object A[D('listener' com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener)])\l com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0010: CHECK_CAST  (r0 I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener) = (com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener) (r0 I:?[OBJECT, ARRAY]) \l0x0012: IPUT  \l  (r0 I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener)\l  (r3 I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver)\l com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.listener com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener \l0x0014: SGET  (r0 I:int) =  com.google.android.exoplayer2.util.Util.SDK_INT int \l0x0016: CONST  (r2 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: IF  (r0 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:5:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$HdmiAudioPlugBroadcastReceiver) =  com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$HdmiAudioPlugBroadcastReceiver \l0x001c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$HdmiAudioPlugBroadcastReceiver)\l  (r3 I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver)\l  (r1 I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$1)\l com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.HdmiAudioPlugBroadcastReceiver.\<init\>(com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver, com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$1):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: IPUT  \l  (r0 I:android.content.BroadcastReceiver)\l  (r3 I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver)\l com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.receiver android.content.BroadcastReceiver \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.\<init\>((r3 'this' I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver A[IMMUTABLE_TYPE, THIS]), (r4 I:android.content.Context A[D('context' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener A[D('listener' com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0023: r4 'context' android.content.Context\l  ?\-0x0023: r5 'listener' com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

