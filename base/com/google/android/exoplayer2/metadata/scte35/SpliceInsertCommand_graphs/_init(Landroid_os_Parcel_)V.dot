digraph "CFG forcom.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand.\<init\>(Landroid\/os\/Parcel;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4 = true\lr8.spliceEventId = r9.readLong()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|if (r9.readByte() != 1) goto L_0x0051\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|r3 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|PHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v21 boolean) binds: [B:15:0x0051, B:2:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r8.spliceEventCancelIndicator = r3\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|if (r9.readByte() != 1) goto L_0x0053\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|r3 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|PHI: r3 \l  PHI: (r3v5 boolean) = (r3v4 boolean), (r3v20 boolean) binds: [B:16:0x0053, B:5:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|r8.outOfNetworkIndicator = r3\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|if (r9.readByte() != 1) goto L_0x0055\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|r3 = true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|PHI: r3 \l  PHI: (r3v8 boolean) = (r3v7 boolean), (r3v19 boolean) binds: [B:17:0x0055, B:8:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|r8.programSpliceFlag = r3\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|if (r9.readByte() != 1) goto L_0x0057\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|r3 = true\l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|PHI: r3 \l  PHI: (r3v11 boolean) = (r3v10 boolean), (r3v18 boolean) binds: [B:18:0x0057, B:11:0x002c] A[DONT_GENERATE, DONT_INLINE]\l|r8.spliceImmediateFlag = r3\lr8.programSplicePts = r9.readLong()\lr8.programSplicePlaybackPositionUs = r9.readLong()\lint r1 = r9.readInt()\ljava.util.ArrayList r0 = new java.util.ArrayList\<\>(r1)\lr2 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|LOOP_START\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:12:0x002d, B:14:0x0047] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:13:0x0045\-\>B:14:0x0047\l|if (r2 \>= r1) goto L_0x0059\l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|LOOP_END\lLOOP:0: B:13:0x0045\-\>B:14:0x0047\l|r0.add(com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand.ComponentSplice.createFromParcel(r9))\lint r2 = r2 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|r3 = false\l}"];
Node_16 [shape=record,label="{16\:\ 0x0053|r3 = false\l}"];
Node_17 [shape=record,label="{17\:\ 0x0055|r3 = false\l}"];
Node_18 [shape=record,label="{18\:\ 0x0057|r3 = false\l}"];
Node_19 [shape=record,label="{19\:\ 0x0059|r8.componentSpliceList = java.util.Collections.unmodifiableList(r0)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0063|if (r9.readByte() != 1) goto L_0x0080\l}"];
Node_21 [shape=record,label="{21\:\ 0x0065|PHI: r4 \l  PHI: (r4v2 boolean) = (r4v0 boolean), (r4v1 boolean) binds: [B:20:0x0063, B:23:0x0080] A[DONT_GENERATE, DONT_INLINE]\l|r8.autoReturn = r4\lr8.breakDuration = r9.readLong()\lr8.uniqueProgramId = r9.readInt()\lr8.availNum = r9.readInt()\lr8.availsExpected = r9.readInt()\l}"];
Node_22 [shape=record,label="{22\:\ 0x007f|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x0080|r4 = false\l}"];
Node_24 [shape=record,label="{24\:\ 0x0059|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand.\<init\>((r8v0 'this' com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand A[IMMUTABLE_TYPE, THIS]), (r9v0 'in' android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_18;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_24;
Node_14 -> Node_13;
Node_15 -> Node_3;
Node_16 -> Node_6;
Node_17 -> Node_9;
Node_18 -> Node_12;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_23 -> Node_21;
Node_24 -> Node_19;
}

