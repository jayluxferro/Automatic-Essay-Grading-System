digraph "CFG forcom.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.Event.parseFromSection(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Lcom\/google\/android\/exoplayer2\/metadata\/scte35\/SpliceScheduleCommand$Event;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:long) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x0004: INVOKE  (r5 I:int) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0008: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x006f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: CONST  (r12 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0014: NEW_INSTANCE  (r11 I:java.util.ArrayList) =  java.util.ArrayList \l0x0016: INVOKE  (r11 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0019: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001b: CONST  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001d: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: CONST  (r15 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('spliceEventCancelIndicator' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00a6 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: INVOKE  (r26 I:int) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x002b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('headerByte' int)])\l \l0x002d: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|0x002f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0071 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|0x0031: CONST  (r9 I:?[boolean, int, float, short, byte, char] A[D('outOfNetworkIndicator' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r26 I:?[int, boolean, short, byte, char] A[D('headerByte' int)]) & (64 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0073 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: CONST  (r10 I:?[boolean, int, float, short, byte, char] A[D('programSpliceFlag' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r26 I:?[int, boolean, short, byte, char] A[D('headerByte' int)]) & (32 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0075 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: CONST  (r21 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('programSpliceFlag' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0043 \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: INVOKE  (r12 I:long A[D('utcSpliceTime' long)]) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|0x0043: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('programSpliceFlag' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0078 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0045|0x0045: INVOKE  (r4 I:int) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0049: NEW_INSTANCE  (r11 I:java.util.ArrayList A[D('componentSplices' java.util.ArrayList\<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice\>)]) =  java.util.ArrayList \l0x004b: INVOKE  \l  (r11 I:java.util.ArrayList A[D('componentSplices' java.util.ArrayList\<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice\>)])\l  (r4 I:int A[D('componentCount' int)])\l java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x004e: CONST  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0050|0x0050: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0052|0x0052: IF  (r0 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char] A[D('componentCount' int)])  \-\> B:25:0x0078 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0054|0x0054: INVOKE  (r20 I:int) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0058: INVOKE  (r22 I:long) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x005c: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice) =  com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice \l0x005e: CONST  (r28 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0060: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('componentTag' int)])\l \l0x0062: MOVE  (r1 I:?[long, double]) = (r22 I:?[long, double] A[D('componentUtcSpliceTime' long)]) \l0x0064: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0066: INVOKE  \l  (r5 I:com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice)\l  (r0 I:int)\l  (r1 I:long)\l  (r3 I:com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$1)\l com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.ComponentSplice.\<init\>(int, long, com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$1):void type: DIRECT \l0x0069: INVOKE  \l  (r11 I:java.util.ArrayList A[D('componentSplices' java.util.ArrayList\<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice\>)])\l  (r5 I:java.lang.Object)\l java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x006c: ARITH  (r27 I:int A[D('i' int)]) = (r27 I:int A[D('i' int)]) + (1 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x006f|0x006f: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('spliceEventCancelIndicator' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0071|0x0071: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('outOfNetworkIndicator' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0073|0x0073: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('programSpliceFlag' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x0075|0x0075: CONST  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0078|0x0078: IF  (r21 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('durationFlag' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x009a \l}"];
Node_26 [shape=record,label="{26\:\ 0x007a|0x007a: INVOKE  (r5 I:int) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x007e: CAST  (r0 I:long) = (long) (r5 I:int) \l0x007f: MOVE  (r24 I:?[long, double]) = (r0 I:?[long, double]) \l0x0081: CONST  (r28 I:?[long, double]) = (128(0x80, double:6.32E\-322) ?[long, double]) \l0x0083: ARITH  (r28 I:long) = (r28 I:long) & (r24 I:long A[D('firstByte' long)]) \l0x0085: CONST  (r30 I:?[long, double]) = (0 ?[long, double]) \l0x0087: CMP_L  (r5 I:int) = (r28 I:long), (r30 I:long) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0089|0x0089: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00ac \l}"];
Node_28 [shape=record,label="{28\:\ 0x008b|0x008b: CONST  (r14 I:?[boolean, int, float, short, byte, char] A[D('autoReturn' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x008c|0x008c: CONST  (r28 I:?[long, double]) = (1 ?[long, double]) \l0x008e: ARITH  (r28 I:long) = (r28 I:long) & (r24 I:long A[D('firstByte' long)]) \l0x0090: CONST  (r5 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0092: ARITH  (r28 I:long) = (r28 I:long) \<\< (r5 I:long) \l0x0094: INVOKE  (r30 I:long) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x0098: ARITH  (r15 I:long A[D('duration' long)]) = (r28 I:long) \| (r30 I:long) \l}"];
Node_30 [shape=record,label="{30\:\ 0x009a|0x009a: INVOKE  (r17 I:int A[D('uniqueProgramId' int)]) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x009e: INVOKE  (r18 I:int A[D('availNum' int)]) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x00a2: INVOKE  (r19 I:int A[D('availsExpected' int)]) = \l  (r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x00a6|0x00a6: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event) =  com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event \l0x00a8: INVOKE  \l  (r5 I:com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event)\l  (r6 I:long A[D('spliceEventId' long)])\l  (r8 I:boolean A[D('spliceEventCancelIndicator' boolean)])\l  (r9 I:boolean A[D('outOfNetworkIndicator' boolean)])\l  (r10 I:boolean A[D('programSpliceFlag' boolean)])\l  (r11 I:java.util.List A[D('componentSplices' java.util.ArrayList\<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice\>)])\l  (r12 I:long A[D('utcSpliceTime' long)])\l  (r14 I:boolean A[D('autoReturn' boolean)])\l  (r15 I:long A[D('duration' long)])\l  (r17 I:int A[D('uniqueProgramId' int)])\l  (r18 I:int A[D('availNum' int)])\l  (r19 I:int A[D('availsExpected' int)])\l com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.Event.\<init\>(long, boolean, boolean, boolean, java.util.List, long, boolean, long, int, int, int):void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x00ab|0x00ab: RETURN  \l  (r5 I:com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event)\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x00ac|0x00ac: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('autoReturn' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$Event com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.Event.parseFromSection((r32 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0019\-0x004b: r11 'componentSplices' java.util.ArrayList\<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice\>\l  0x0049\-0x006f: r4 'componentCount' int\l  0x000d\-0x006f: r8 'spliceEventCancelIndicator' boolean\l  0x000e\-0x006f: r9 'outOfNetworkIndicator' boolean\l  0x000f\-0x006f: r10 'programSpliceFlag' boolean\l  0x004e\-0x006f: r11 'componentSplices' java.util.ArrayList\<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice\>\l  0x0014\-0x006f: r12 'utcSpliceTime' long\l  0x0020\-0x006f: r14 'autoReturn' boolean\l  0x0025\-0x006f: r15 'duration' long\l  0x001b\-0x006f: r17 'uniqueProgramId' int\l  0x001d\-0x006f: r18 'availNum' int\l  0x001f\-0x006f: r19 'availsExpected' int\l  0x0058\-0x006f: r20 'componentTag' int\l  0x003d\-0x006f: r21 'durationFlag' boolean\l  0x005c\-0x006f: r22 'componentUtcSpliceTime' long\l  0x002b\-0x006f: r26 'headerByte' int\l  0x0050\-0x006f: r27 'i' int\l  0x0081\-0x009a: r24 'firstByte' long\l  0x0078\-0x00a6: r21 'durationFlag' boolean\l  0x0071\-0x00a6: r26 'headerByte' int\l  0x0004\-0x00ad: r6 'spliceEventId' long\l  0x0071\-0x00ad: r8 'spliceEventCancelIndicator' boolean\l  0x0071\-0x00ad: r9 'outOfNetworkIndicator' boolean\l  0x0071\-0x00ad: r10 'programSpliceFlag' boolean\l  0x0071\-0x00ad: r11 'componentSplices' java.util.ArrayList\<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand$ComponentSplice\>\l  0x0071\-0x00ad: r12 'utcSpliceTime' long\l  0x0071\-0x00ad: r14 'autoReturn' boolean\l  0x0071\-0x00ad: r15 'duration' long\l  0x0071\-0x00ad: r17 'uniqueProgramId' int\l  0x0071\-0x00ad: r18 'availNum' int\l  0x0071\-0x00ad: r19 'availsExpected' int\l  0x00ac\-0x00ad: r21 'durationFlag' boolean\l  0x00ac\-0x00ad: r24 'firstByte' long\l  0x00ac\-0x00ad: r26 'headerByte' int\l  ?\-0x00ad: r32 'sectionData' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_31;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_22;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_23;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_25;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_18;
Node_21 -> Node_3;
Node_22 -> Node_8;
Node_23 -> Node_11;
Node_24 -> Node_14;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_33 -> Node_29;
}

