digraph "CFG forcom.google.android.exoplayer2.metadata.id3.ApicFrame.writeToParcel(Landroid\/os\/Parcel;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.String) = (r1 I:com.google.android.exoplayer2.metadata.id3.ApicFrame) com.google.android.exoplayer2.metadata.id3.ApicFrame.mimeType java.lang.String \l0x0002: INVOKE  \l  (r2 I:android.os.Parcel A[D('dest' android.os.Parcel)])\l  (r0 I:java.lang.String)\l android.os.Parcel.writeString(java.lang.String):void type: VIRTUAL \l0x0005: IGET  (r0 I:java.lang.String) = (r1 I:com.google.android.exoplayer2.metadata.id3.ApicFrame) com.google.android.exoplayer2.metadata.id3.ApicFrame.description java.lang.String \l0x0007: INVOKE  \l  (r2 I:android.os.Parcel A[D('dest' android.os.Parcel)])\l  (r0 I:java.lang.String)\l android.os.Parcel.writeString(java.lang.String):void type: VIRTUAL \l0x000a: IGET  (r0 I:int) = (r1 I:com.google.android.exoplayer2.metadata.id3.ApicFrame) com.google.android.exoplayer2.metadata.id3.ApicFrame.pictureType int \l0x000c: INVOKE  \l  (r2 I:android.os.Parcel A[D('dest' android.os.Parcel)])\l  (r0 I:int)\l android.os.Parcel.writeInt(int):void type: VIRTUAL \l0x000f: IGET  (r0 I:byte[]) = (r1 I:com.google.android.exoplayer2.metadata.id3.ApicFrame) com.google.android.exoplayer2.metadata.id3.ApicFrame.pictureData byte[] \l0x0011: INVOKE  \l  (r2 I:android.os.Parcel A[D('dest' android.os.Parcel)])\l  (r0 I:byte[])\l android.os.Parcel.writeByteArray(byte[]):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.metadata.id3.ApicFrame.writeToParcel((r1 'this' I:com.google.android.exoplayer2.metadata.id3.ApicFrame A[IMMUTABLE_TYPE, THIS]), (r2 I:android.os.Parcel A[D('dest' android.os.Parcel), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0014: r2 'dest' android.os.Parcel\l  ?\-0x0014: r3 'flags' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

