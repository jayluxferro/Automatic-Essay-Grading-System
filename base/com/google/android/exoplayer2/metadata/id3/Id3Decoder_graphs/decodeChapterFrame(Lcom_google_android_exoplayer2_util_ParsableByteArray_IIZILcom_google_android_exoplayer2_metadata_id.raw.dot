digraph "CFG forcom.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeChapterFrame(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;IIZILcom\/google\/android\/exoplayer2\/metadata\/id3\/Id3Decoder$FramePredicate;)Lcom\/google\/android\/exoplayer2\/metadata\/id3\/ChapterFrame;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r17 I:int) = \l  (r22 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0006: IGET  (r6 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0008: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('framePosition' int)])\l \l0x000a: INVOKE  (r15 I:int) = (r6 I:byte[]), (r0 I:int) com.google.android.exoplayer2.metadata.id3.Id3Decoder.indexOfZeroByte(byte[], int):int type: STATIC \l0x000e: NEW_INSTANCE  (r7 I:java.lang.String) =  java.lang.String \l0x0010: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0012: IGET  (r6 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0014: ARITH  (r20 I:int) = (r15 I:int A[D('chapterIdEndIndex' int)]) \- (r17 I:int A[D('framePosition' int)]) \l0x0016: CONST_STR  (r21 I:java.lang.String) =  \"ISO\-8859\-1\" \l0x0018: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('framePosition' int)])\l \l0x001a: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x001e: INVOKE  \l  (r7 I:java.lang.String)\l  (r6 I:byte[])\l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:java.lang.String)\l java.lang.String.\<init\>(byte[], int, int, java.lang.String):void type: DIRECT \l0x0021: ARITH  (r6 I:int) = (r15 I:int A[D('chapterIdEndIndex' int)]) + (1 int) \l0x0023: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0025: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0028: INVOKE  (r8 I:int) = \l  (r22 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x002c: INVOKE  (r9 I:int) = \l  (r22 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0030: INVOKE  (r10 I:long) = \l  (r22 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x0034: CONST  (r20 I:?[long, double]) = \l  (4294967295(0xffffffff, double:2.1219957905E\-314) ?[long, double])\l \l0x0039: CMP_L  (r6 I:int) = (r10 I:long A[D('startOffset' long)]), (r20 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x003b|0x003b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x003f \l}"];
Node_2 [shape=record,label="{2\:\ 0x003d|0x003d: CONST  (r10 I:?[long, double] A[D('startOffset' long)]) = (\-1 ?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x003f|0x003f: INVOKE  (r12 I:long) = \l  (r22 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x0043: CONST  (r20 I:?[long, double]) = \l  (4294967295(0xffffffff, double:2.1219957905E\-314) ?[long, double])\l \l0x0048: CMP_L  (r6 I:int) = (r12 I:long A[D('endOffset' long)]), (r20 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x004a|0x004a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x004e \l}"];
Node_5 [shape=record,label="{5\:\ 0x004c|0x004c: CONST  (r12 I:?[long, double] A[D('endOffset' long)]) = (\-1 ?[long, double]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x004e|0x004e: NEW_INSTANCE  (r19 I:java.util.ArrayList) =  java.util.ArrayList \l0x0050: INVOKE  (r19 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0053: ARITH  (r18 I:int) = (r17 I:int A[D('framePosition' int)]) + (r23 I:int A[D('frameSize' int)]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0055|0x0055: INVOKE  (r6 I:int) = \l  (r22 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0059: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('limit' int)])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x005b|0x005b: IF  (r6 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:12:0x0075 \l}"];
Node_9 [shape=record,label="{9\:\ 0x005d|0x005d: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('majorVersion' int)])\l \l0x005f: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0061: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('unsignedIntFrameSizeHack' boolean)])\l \l0x0063: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('frameHeaderSize' int)])\l \l0x0065: MOVE  (r4 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('framePredicate' com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)])\l \l0x0067: INVOKE  (r16 I:com.google.android.exoplayer2.metadata.id3.Id3Frame) = \l  (r0 I:int)\l  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:boolean)\l  (r3 I:int)\l  (r4 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeFrame(int, com.google.android.exoplayer2.util.ParsableByteArray, boolean, int, com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate):com.google.android.exoplayer2.metadata.id3.Id3Frame type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x006b|0x006b: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('frame' com.google.android.exoplayer2.metadata.id3.Id3Frame)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0055 \l}"];
Node_11 [shape=record,label="{11\:\ 0x006d|0x006d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('subFrames' java.util.ArrayList\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>)])\l \l0x006f: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r16 I:?[OBJECT, ARRAY] A[D('frame' com.google.android.exoplayer2.metadata.id3.Id3Frame)])\l \l0x0071: INVOKE  (r0 I:java.util.ArrayList), (r1 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0075|0x0075: INVOKE  (r6 I:int) = \l  (r19 I:java.util.ArrayList A[D('subFrames' java.util.ArrayList\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>)])\l java.util.ArrayList.size():int type: VIRTUAL \l0x0079: NEW_ARRAY  (r14 I:com.google.android.exoplayer2.metadata.id3.Id3Frame[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.metadata.id3.Id3Frame[] \l0x007b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('subFrames' java.util.ArrayList\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>)])\l \l0x007d: INVOKE  \l  (r0 I:java.util.ArrayList)\l  (r14 I:java.lang.Object[] A[D('subFrameArray' com.google.android.exoplayer2.metadata.id3.Id3Frame[])])\l java.util.ArrayList.toArray(java.lang.Object[]):java.lang.Object[] type: VIRTUAL \l0x0080: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.metadata.id3.ChapterFrame) =  com.google.android.exoplayer2.metadata.id3.ChapterFrame \l0x0082: INVOKE  \l  (r6 I:com.google.android.exoplayer2.metadata.id3.ChapterFrame)\l  (r7 I:java.lang.String A[D('chapterId' java.lang.String)])\l  (r8 I:int A[D('startTime' int)])\l  (r9 I:int A[D('endTime' int)])\l  (r10 I:long A[D('startOffset' long)])\l  (r12 I:long A[D('endOffset' long)])\l  (r14 I:com.google.android.exoplayer2.metadata.id3.Id3Frame[] A[D('subFrameArray' com.google.android.exoplayer2.metadata.id3.Id3Frame[])])\l com.google.android.exoplayer2.metadata.id3.ChapterFrame.\<init\>(java.lang.String, int, int, long, long, com.google.android.exoplayer2.metadata.id3.Id3Frame[]):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0085|0x0085: RETURN  \l  (r6 I:com.google.android.exoplayer2.metadata.id3.ChapterFrame)\l \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.id3.ChapterFrame com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeChapterFrame((r22 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[D('frameSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int A[D('majorVersion' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:boolean A[D('unsignedIntFrameSizeHack' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:int A[D('frameHeaderSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate A[D('framePredicate' com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x006b\-0x0075: r16 'frame' com.google.android.exoplayer2.metadata.id3.Id3Frame\l  0x0021\-0x0085: r7 'chapterId' java.lang.String\l  0x002c\-0x0085: r8 'startTime' int\l  0x0030\-0x0085: r9 'endTime' int\l  0x0034\-0x0085: r10 'startOffset' long\l  0x0043\-0x0085: r12 'endOffset' long\l  0x007b\-0x0085: r14 'subFrameArray' com.google.android.exoplayer2.metadata.id3.Id3Frame[]\l  0x000e\-0x0085: r15 'chapterIdEndIndex' int\l  0x0004\-0x0085: r17 'framePosition' int\l  0x0055\-0x0085: r18 'limit' int\l  0x0053\-0x0085: r19 'subFrames' java.util.ArrayList\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>\l  ?\-0x0085: r22 'id3Data' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0085: r23 'frameSize' int\l  ?\-0x0085: r24 'majorVersion' int\l  ?\-0x0085: r25 'unsignedIntFrameSizeHack' boolean\l  ?\-0x0085: r26 'frameHeaderSize' int\l  ?\-0x0085: r27 'framePredicate' com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.UnsupportedEncodingException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_7;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_7;
Node_12 -> Node_13;
}

