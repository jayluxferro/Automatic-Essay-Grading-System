digraph "CFG forcom.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeApicFrame(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;II)Lcom\/google\/android\/exoplayer2\/metadata\/id3\/ApicFrame;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r6 = r17.readUnsignedByte()\ljava.lang.String r1 = getCharsetName(r6)\lbyte[] r2 = new byte[(r18 + \-1)]\lr0 = r17\lr0.readBytes(r2, 0, r18 + \-1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|if (r19 != 2) goto L_0x006a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|r8 = 2\ljava.lang.String r7 = new java.lang.StringBuilder().append(\"image\/\").append(com.google.android.exoplayer2.util.Util.toLowerInvariant(new java.lang.String(r2, 0, 3, \"ISO\-8859\-1\"))).toString()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0042|if (r7.equals(\"image\/jpg\") == false) goto L_0x0046\l}"];
Node_4 [shape=record,label="{4\:\ 0x0044|java.lang.String r7 = \"image\/jpeg\"\l}"];
Node_5 [shape=record,label="{5\:\ 0x0046|PHI: r7 r8 \l  PHI: (r7v2 'mimeType' java.lang.String) = (r7v0 'mimeType' java.lang.String), (r7v1 'mimeType' java.lang.String), (r7v3 'mimeType' java.lang.String), (r7v4 'mimeType' java.lang.String) binds: [B:8:0x0082, B:9:0x0084, B:3:0x0042, B:4:0x0044] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 'mimeTypeEndIndex' int) = (r8v0 'mimeTypeEndIndex' int), (r8v0 'mimeTypeEndIndex' int), (r8v2 'mimeTypeEndIndex' int), (r8v2 'mimeTypeEndIndex' int) binds: [B:8:0x0082, B:9:0x0084, B:3:0x0042, B:4:0x0044] A[DONT_GENERATE, DONT_INLINE]\l|r11 = r2[r8 + 1] & 255\lint r5 = r8 + 2\lint r4 = indexOfEos(r2, r5, r6)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0069|RETURN\l|return new com.google.android.exoplayer2.metadata.id3.ApicFrame(r7, new java.lang.String(r2, r5, r4 \- r5, r1), r11, java.util.Arrays.copyOfRange(r2, r4 + delimiterLength(r6), r2.length))\l}"];
Node_7 [shape=record,label="{7\:\ 0x006a|int r8 = indexOfZeroByte(r2, 0)\ljava.lang.String r7 = com.google.android.exoplayer2.util.Util.toLowerInvariant(new java.lang.String(r2, 0, r8, \"ISO\-8859\-1\"))\l}"];
Node_8 [shape=record,label="{8\:\ 0x0082|if (r7.indexOf(47) != \-1) goto L_0x0046\l}"];
Node_9 [shape=record,label="{9\:\ 0x0084|java.lang.String r7 = new java.lang.StringBuilder().append(\"image\/\").append(r7).toString()\l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.id3.ApicFrame com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeApicFrame((r17v0 'id3Data' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'frameSize' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'majorVersion' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.UnsupportedEncodingException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_5;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_5;
}

