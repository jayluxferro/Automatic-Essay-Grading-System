digraph "CFG forcom.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeTextInformationFrame(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;ILjava\/lang\/String;)Lcom\/google\/android\/exoplayer2\/metadata\/id3\/TextInformationFrame;" {
subgraph cluster_Region_694267285 {
label = "R(1:(2:(1:3)|(2:2|4)))";
node [shape=record,color=blue];
subgraph cluster_Region_1415582259 {
label = "R(2:(1:3)|(2:2|4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1892812854 {
label = "IF [B:1:0x0003] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r9 \< 1) goto L_?\l}"];
subgraph cluster_Region_1316950179 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1868341876 {
label = "R(2:2|4)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|int int r2 = r8.readUnsignedByte()\ljava.lang.String java.lang.String r0 = getCharsetName(r2)\lbyte[] byte[] r1 = new byte[(r9 \- 1)]\lr8.readBytes(r1, 0, r9 \- 1)\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return new com.google.android.exoplayer2.metadata.id3.TextInformationFrame(r10, (java.lang.String) null, new java.lang.String(r1, 0, indexOfEos(r1, 0, r2), r0))\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.id3.TextInformationFrame com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeTextInformationFrame((r8v0 'id3Data' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'frameSize' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'id' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.UnsupportedEncodingException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_0 -> Node_1;
}

