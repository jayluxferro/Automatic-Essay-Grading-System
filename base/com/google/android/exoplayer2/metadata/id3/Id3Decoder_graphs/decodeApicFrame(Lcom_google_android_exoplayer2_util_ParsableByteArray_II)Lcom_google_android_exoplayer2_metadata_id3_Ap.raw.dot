digraph "CFG forcom.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeApicFrame(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;II)Lcom\/google\/android\/exoplayer2\/metadata\/id3\/ApicFrame;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:int) = \l  (r17 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0004: INVOKE  (r1 I:java.lang.String) = (r6 I:int A[D('encoding' int)]) com.google.android.exoplayer2.metadata.id3.Id3Decoder.getCharsetName(int):java.lang.String type: STATIC \l0x0008: ARITH  (r12 I:int) = (r18 I:int A[D('frameSize' int)]) + (\-1 int) \l0x000a: NEW_ARRAY  (r2 I:byte[]) = (r12 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x000c: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: ARITH  (r13 I:int) = (r18 I:int A[D('frameSize' int)]) + (\-1 int) \l0x000f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0011: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:byte[] A[D('data' byte[])])\l  (r12 I:int)\l  (r13 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l0x0014: CONST  (r12 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0015: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('majorVersion' int)])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x006a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|0x0019: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001a: NEW_INSTANCE  (r12 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001c: INVOKE  (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001f: CONST_STR  (r13 I:java.lang.String) =  \"image\/\" \l0x0021: INVOKE  (r12 I:java.lang.StringBuilder) = (r12 I:java.lang.StringBuilder), (r13 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: NEW_INSTANCE  (r13 I:java.lang.String) =  java.lang.String \l0x0027: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0028: CONST  (r15 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0029: CONST_STR  (r16 I:java.lang.String) =  \"ISO\-8859\-1\" \l0x002b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x002d: INVOKE  \l  (r13 I:java.lang.String)\l  (r2 I:byte[] A[D('data' byte[])])\l  (r14 I:int)\l  (r15 I:int)\l  (r0 I:java.lang.String)\l java.lang.String.\<init\>(byte[], int, int, java.lang.String):void type: DIRECT \l0x0030: INVOKE  (r13 I:java.lang.String) = (r13 I:java.lang.String) com.google.android.exoplayer2.util.Util.toLowerInvariant(java.lang.String):java.lang.String type: STATIC \l0x0034: INVOKE  (r12 I:java.lang.StringBuilder) = (r12 I:java.lang.StringBuilder), (r13 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r7 I:java.lang.String) = (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003c: CONST_STR  (r12 I:java.lang.String) =  \"image\/jpg\" \l0x003e: INVOKE  (r12 I:boolean) = \l  (r7 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r12 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0042|0x0042: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0046 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0044|0x0044: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"image\/jpeg\" \l}"];
Node_5 [shape=record,label="{5\:\ 0x0046|0x0046: ARITH  (r12 I:int) = (r8 I:int A[D('mimeTypeEndIndex' int)]) + (1 int) \l0x0048: AGET  (r12 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE])\l  (r12 I:?[int, short, byte, char])\l \l0x004a: ARITH  (r11 I:?[int, boolean, short, byte, char]) = (r12 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x004c: ARITH  (r5 I:int) = (r8 I:int A[D('mimeTypeEndIndex' int)]) + (2 int) \l0x004e: INVOKE  (r4 I:int) = \l  (r2 I:byte[] A[D('data' byte[])])\l  (r5 I:int A[D('descriptionStartIndex' int)])\l  (r6 I:int A[D('encoding' int)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.indexOfEos(byte[], int, int):int type: STATIC \l0x0052: NEW_INSTANCE  (r3 I:java.lang.String) =  java.lang.String \l0x0054: ARITH  (r12 I:int) = (r4 I:int A[D('descriptionEndIndex' int)]) \- (r5 I:int A[D('descriptionStartIndex' int)]) \l0x0056: INVOKE  \l  (r3 I:java.lang.String)\l  (r2 I:byte[] A[D('data' byte[])])\l  (r5 I:int A[D('descriptionStartIndex' int)])\l  (r12 I:int)\l  (r1 I:java.lang.String A[D('charset' java.lang.String)])\l java.lang.String.\<init\>(byte[], int, int, java.lang.String):void type: DIRECT \l0x0059: INVOKE  (r12 I:int) = (r6 I:int A[D('encoding' int)]) com.google.android.exoplayer2.metadata.id3.Id3Decoder.delimiterLength(int):int type: STATIC \l0x005d: ARITH  (r10 I:int) = (r4 I:int A[D('descriptionEndIndex' int)]) + (r12 I:int) \l0x005f: ARRAY_LENGTH  (r12 I:int) = (r2 I:?[] A[D('data' byte[])]) \l0x0060: INVOKE  (r9 I:byte[]) = \l  (r2 I:byte[] A[D('data' byte[])])\l  (r10 I:int A[D('pictureDataStartIndex' int)])\l  (r12 I:int)\l java.util.Arrays.copyOfRange(byte[], int, int):byte[] type: STATIC \l0x0064: NEW_INSTANCE  (r12 I:com.google.android.exoplayer2.metadata.id3.ApicFrame) =  com.google.android.exoplayer2.metadata.id3.ApicFrame \l0x0066: INVOKE  \l  (r12 I:com.google.android.exoplayer2.metadata.id3.ApicFrame)\l  (r7 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r3 I:java.lang.String A[D('description' java.lang.String)])\l  (r11 I:int A[D('pictureType' int)])\l  (r9 I:byte[] A[D('pictureData' byte[])])\l com.google.android.exoplayer2.metadata.id3.ApicFrame.\<init\>(java.lang.String, java.lang.String, int, byte[]):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0069|0x0069: RETURN  \l  (r12 I:com.google.android.exoplayer2.metadata.id3.ApicFrame)\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x006a|0x006a: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006b: INVOKE  (r8 I:int) = (r2 I:byte[] A[D('data' byte[])]), (r12 I:int) com.google.android.exoplayer2.metadata.id3.Id3Decoder.indexOfZeroByte(byte[], int):int type: STATIC \l0x006f: NEW_INSTANCE  (r12 I:java.lang.String) =  java.lang.String \l0x0071: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0072: CONST_STR  (r14 I:java.lang.String) =  \"ISO\-8859\-1\" \l0x0074: INVOKE  \l  (r12 I:java.lang.String)\l  (r2 I:byte[] A[D('data' byte[])])\l  (r13 I:int)\l  (r8 I:int A[D('mimeTypeEndIndex' int)])\l  (r14 I:java.lang.String)\l java.lang.String.\<init\>(byte[], int, int, java.lang.String):void type: DIRECT \l0x0077: INVOKE  (r7 I:java.lang.String) = (r12 I:java.lang.String) com.google.android.exoplayer2.util.Util.toLowerInvariant(java.lang.String):java.lang.String type: STATIC \l0x007b: CONST  (r12 I:?[int, float, short, byte, char]) = (47 ?[int, float, short, byte, char]) \l0x007d: INVOKE  (r12 I:int) = \l  (r7 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r12 I:int)\l java.lang.String.indexOf(int):int type: VIRTUAL \l0x0081: CONST  (r13 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0082|0x0082: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0046 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0084|0x0084: NEW_INSTANCE  (r12 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0086: INVOKE  (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0089: CONST_STR  (r13 I:java.lang.String) =  \"image\/\" \l0x008b: INVOKE  (r12 I:java.lang.StringBuilder) = (r12 I:java.lang.StringBuilder), (r13 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008f: INVOKE  (r12 I:java.lang.StringBuilder) = \l  (r12 I:java.lang.StringBuilder)\l  (r7 I:java.lang.String A[D('mimeType' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0093: INVOKE  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) = (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.id3.ApicFrame com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeApicFrame((r17 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('frameSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('majorVersion' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0059\-0x006a: r3 'description' java.lang.String\l  0x0052\-0x006a: r4 'descriptionEndIndex' int\l  0x004e\-0x006a: r5 'descriptionStartIndex' int\l  0x003c\-0x006a: r7 'mimeType' java.lang.String\l  0x001a\-0x006a: r8 'mimeTypeEndIndex' int\l  0x0064\-0x006a: r9 'pictureData' byte[]\l  0x005f\-0x006a: r10 'pictureDataStartIndex' int\l  0x004c\-0x006a: r11 'pictureType' int\l  0x0008\-0x0097: r1 'charset' java.lang.String\l  0x000c\-0x0097: r2 'data' byte[]\l  0x0004\-0x0097: r6 'encoding' int\l  0x007b\-0x0097: r7 'mimeType' java.lang.String\l  0x006f\-0x0097: r8 'mimeTypeEndIndex' int\l  ?\-0x0097: r17 'id3Data' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0097: r18 'frameSize' int\l  ?\-0x0097: r19 'majorVersion' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.UnsupportedEncodingException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_5;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_5;
}

