digraph "CFG forcom.google.android.exoplayer2.metadata.id3.Id3Decoder.decode([BI)Lcom\/google\/android\/exoplayer2\/metadata\/Metadata;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r11 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0002: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList \l0x0004: INVOKE  (r4 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0007: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0009: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r13 I:byte[] A[D('data' byte[])])\l  (r14 I:int A[D('size' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(byte[], int):void type: DIRECT \l0x000c: INVOKE  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeHeader(com.google.android.exoplayer2.util.ParsableByteArray):com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('id3Header' com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: RETURN  (r8 I:com.google.android.exoplayer2.metadata.Metadata) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: INVOKE  (r6 I:int) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0017: INVOKE  (r9 I:int) = \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header A[D('id3Header' com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.Id3Header.access$000(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header):int type: STATIC \l0x001b: CONST  (r10 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0066 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: CONST  (r1 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: INVOKE  (r2 I:int) = \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header A[D('id3Header' com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.Id3Header.access$100(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header):int type: STATIC \l0x0023: INVOKE  (r9 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header A[D('id3Header' com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.Id3Header.access$200(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0031 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: INVOKE  (r9 I:int) = \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header A[D('id3Header' com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.Id3Header.access$100(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header):int type: STATIC \l0x002d: INVOKE  (r2 I:int A[D('framesSize' int)]) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.removeUnsynchronization(com.google.android.exoplayer2.util.ParsableByteArray, int):int type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: ARITH  (r9 I:int) = (r6 I:int A[D('startPosition' int)]) + (r2 I:int A[D('framesSize' int)]) \l0x0033: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setLimit(int):void type: VIRTUAL \l0x0036: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0037: INVOKE  (r9 I:int) = \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header A[D('id3Header' com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.Id3Header.access$000(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header):int type: STATIC \l0x003b: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003c: INVOKE  (r9 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r9 I:int)\l  (r1 I:int A[D('frameHeaderSize' int)])\l  (r10 I:boolean)\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.validateFrames(com.google.android.exoplayer2.util.ParsableByteArray, int, int, boolean):boolean type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0050 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: INVOKE  (r9 I:int) = \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header A[D('id3Header' com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.Id3Header.access$000(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header):int type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|0x0046: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0069 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0049: INVOKE  (r9 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r11 I:int)\l  (r1 I:int A[D('frameHeaderSize' int)])\l  (r9 I:boolean)\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.validateFrames(com.google.android.exoplayer2.util.ParsableByteArray, int, int, boolean):boolean type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|0x004d: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0069 \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: CONST  (r7 I:?[boolean, int, float, short, byte, char] A[D('unsignedIntFrameSizeHack' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|0x0050: INVOKE  (r8 I:int) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0054|0x0054: IF  (r8 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char] A[D('frameHeaderSize' int)])  \-\> B:23:0x0086 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|0x0056: INVOKE  (r8 I:int) = \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header A[D('id3Header' com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.Id3Header.access$000(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header):int type: STATIC \l0x005a: IGET  (r9 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate) = \l  (r12 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder)\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.framePredicate com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate \l0x005c: INVOKE  (r0 I:com.google.android.exoplayer2.metadata.id3.Id3Frame) = \l  (r8 I:int)\l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r7 I:boolean A[D('unsignedIntFrameSizeHack' boolean)])\l  (r1 I:int A[D('frameHeaderSize' int)])\l  (r9 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeFrame(int, com.google.android.exoplayer2.util.ParsableByteArray, boolean, int, com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate):com.google.android.exoplayer2.metadata.id3.Id3Frame type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0060|0x0060: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('frame' com.google.android.exoplayer2.metadata.id3.Id3Frame)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0050 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0062|0x0062: INVOKE  \l  (r4 I:java.util.List A[D('id3Frames' java.util.List\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>)])\l  (r0 I:java.lang.Object A[D('frame' com.google.android.exoplayer2.metadata.id3.Id3Frame)])\l java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x0066|0x0066: CONST  (r1 I:?[int, float, short, byte, char] A[D('frameHeaderSize' int)]) = (10 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0069|0x0069: CONST_STR  (r9 I:java.lang.String) =  \"Id3Decoder\" \l0x006b: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x006d: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0070: CONST_STR  (r11 I:java.lang.String) =  \"Failed to validate ID3 tag with majorVersion=\" \l0x0072: INVOKE  (r10 I:java.lang.StringBuilder) = (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0076: INVOKE  (r11 I:int) = \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header A[D('id3Header' com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.Id3Header.access$000(com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header):int type: STATIC \l0x007a: INVOKE  (r10 I:java.lang.StringBuilder) = (r10 I:java.lang.StringBuilder), (r11 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x007e: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0082: INVOKE  (r9 I:java.lang.String), (r10 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_23 [shape=record,label="{23\:\ 0x0086|0x0086: NEW_INSTANCE  (r8 I:com.google.android.exoplayer2.metadata.Metadata) =  com.google.android.exoplayer2.metadata.Metadata \l0x0088: INVOKE  \l  (r8 I:com.google.android.exoplayer2.metadata.Metadata)\l  (r4 I:java.util.List A[D('id3Frames' java.util.List\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>)])\l com.google.android.exoplayer2.metadata.Metadata.\<init\>(java.util.List):void type: DIRECT \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.metadata.Metadata com.google.android.exoplayer2.metadata.id3.Id3Decoder.decode((r12 'this' I:com.google.android.exoplayer2.metadata.id3.Id3Decoder A[IMMUTABLE_TYPE, THIS]), (r13 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0060\-0x0066: r0 'frame' com.google.android.exoplayer2.metadata.id3.Id3Frame\l  0x001f\-0x0066: r1 'frameHeaderSize' int\l  0x0023\-0x0066: r2 'framesSize' int\l  0x0037\-0x0066: r7 'unsignedIntFrameSizeHack' boolean\l  0x0069\-0x008b: r1 'frameHeaderSize' int\l  0x0069\-0x008b: r2 'framesSize' int\l  0x000c\-0x008b: r3 'id3Data' com.google.android.exoplayer2.util.ParsableByteArray\l  0x0007\-0x008b: r4 'id3Frames' java.util.List\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>\l  0x0010\-0x008b: r5 'id3Header' com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header\l  0x0017\-0x008b: r6 'startPosition' int\l  0x0069\-0x008b: r7 'unsignedIntFrameSizeHack' boolean\l  ?\-0x008b: r13 'data' byte[]\l  ?\-0x008b: r14 'size' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_21;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_16;
Node_19 -> Node_20[style=dashed];
Node_20 -> Node_16;
Node_21 -> Node_6;
Node_22 -> Node_2;
Node_23 -> Node_2;
}

