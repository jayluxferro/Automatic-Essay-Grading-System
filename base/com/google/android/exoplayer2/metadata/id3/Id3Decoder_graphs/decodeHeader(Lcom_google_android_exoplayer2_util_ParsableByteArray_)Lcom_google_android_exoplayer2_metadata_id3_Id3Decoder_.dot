digraph "CFG forcom.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeHeader(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Lcom\/google\/android\/exoplayer2\/metadata\/id3\/Id3Decoder$Id3Header;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7 = true\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r14.bytesLeft() \>= 10) goto L_0x0015\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|android.util.Log.w(TAG, \"Data too short to be an ID3 tag\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|int r5 = r14.readUnsignedInt24()\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|if (r5 == ID3_TAG) goto L_0x0037\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|android.util.Log.w(TAG, new java.lang.StringBuilder().append(\"Unexpected first three bytes of ID3 tag header: \").append(r5).toString())\l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|int r8 = r14.readUnsignedByte()\lr14.skipBytes(1)\lint r1 = r14.readUnsignedByte()\lint r2 = r14.readSynchSafeInt()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0047|if (r8 != 2) goto L_0x005b\l}"];
Node_8 [shape=record,label="{8\:\ 0x0049}"];
Node_9 [shape=record,label="{9\:\ 0x004b|if ((r1 & 64) == 0) goto L_0x0059\l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|r6 = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|PHI: r6 \l  PHI: (r6v1 'isCompressed' boolean) = (r6v0 'isCompressed' boolean), (r6v2 'isCompressed' boolean) binds: [B:13:0x0059, B:10:0x004d] A[DONT_GENERATE, DONT_INLINE]\l|if (r6 == false) goto L_0x006f\l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|android.util.Log.w(TAG, \"Skipped ID3 tag with majorVersion=2 and undefined compression scheme\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x0059|r6 = false\l}"];
Node_14 [shape=record,label="{14\:\ 0x005b}"];
Node_15 [shape=record,label="{15\:\ 0x005c|if (r8 != 3) goto L_0x007d\l}"];
Node_16 [shape=record,label="{16\:\ 0x005e}"];
Node_17 [shape=record,label="{17\:\ 0x0060|if ((r1 & 64) == 0) goto L_0x007b\l}"];
Node_18 [shape=record,label="{18\:\ 0x0062|r3 = true\l}"];
Node_19 [shape=record,label="{19\:\ 0x0063|PHI: r3 \l  PHI: (r3v4 'hasExtendedHeader' boolean) = (r3v3 'hasExtendedHeader' boolean), (r3v5 'hasExtendedHeader' boolean) binds: [B:25:0x007b, B:18:0x0062] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L_0x006f\l}"];
Node_20 [shape=record,label="{20\:\ 0x0065|int r0 = r14.readInt()\lr14.skipBytes(r0)\lint r2 = r2 \- (r0 + 4)\l}"];
Node_21 [shape=record,label="{21\:\ 0x006f|PHI: r2 \l  PHI: (r2v1 'framesSize' int) = (r2v2 'framesSize' int), (r2v3 'framesSize' int), (r2v0 'framesSize' int), (r2v5 'framesSize' int), (r2v0 'framesSize' int) binds: [B:35:0x0095, B:36:0x0097, B:19:0x0063, B:20:0x0065, B:11:0x004e] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 \>= 4) goto L_0x00b9\l}"];
Node_22 [shape=record,label="{22\:\ 0x0071}"];
Node_23 [shape=record,label="{23\:\ 0x0073|if ((r1 & 128) == 0) goto L_0x00b9\l}"];
Node_24 [shape=record,label="{24\:\ 0x0075|PHI: r7 \l  PHI: (r7v2 'isUnsynchronized' boolean) = (r7v1 'isUnsynchronized' boolean), (r7v0 'isUnsynchronized' boolean) binds: [B:40:0x00b9, B:23:0x0073] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x007b|r3 = false\l}"];
Node_26 [shape=record,label="{26\:\ 0x007d|if (r8 != 4) goto L_0x009e\l}"];
Node_27 [shape=record,label="{27\:\ 0x007f}"];
Node_28 [shape=record,label="{28\:\ 0x0081|if ((r1 & 64) == 0) goto L_0x009a\l}"];
Node_29 [shape=record,label="{29\:\ 0x0083|r3 = true\l}"];
Node_30 [shape=record,label="{30\:\ 0x0084|PHI: r3 \l  PHI: (r3v1 'hasExtendedHeader' boolean) = (r3v0 'hasExtendedHeader' boolean), (r3v2 'hasExtendedHeader' boolean) binds: [B:37:0x009a, B:29:0x0083] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L_0x0090\l}"];
Node_31 [shape=record,label="{31\:\ 0x0086|int r0 = r14.readSynchSafeInt()\lr14.skipBytes(r0 + \-4)\lint r2 = r2 \- r0\l}"];
Node_32 [shape=record,label="{32\:\ 0x0090|PHI: r2 \l  PHI: (r2v2 'framesSize' int) = (r2v0 'framesSize' int), (r2v4 'framesSize' int) binds: [B:30:0x0084, B:31:0x0086] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0092|if ((r1 & 16) == 0) goto L_0x009c\l}"];
Node_34 [shape=record,label="{34\:\ 0x0094|r4 = true\l}"];
Node_35 [shape=record,label="{35\:\ 0x0095|PHI: r4 \l  PHI: (r4v1 'hasFooter' boolean) = (r4v0 'hasFooter' boolean), (r4v2 'hasFooter' boolean) binds: [B:38:0x009c, B:34:0x0094] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L_0x006f\l}"];
Node_36 [shape=record,label="{36\:\ 0x0097|int r2 = r2 + \-10\l}"];
Node_37 [shape=record,label="{37\:\ 0x009a|r3 = false\l}"];
Node_38 [shape=record,label="{38\:\ 0x009c|r4 = false\l}"];
Node_39 [shape=record,label="{39\:\ 0x009e|android.util.Log.w(TAG, new java.lang.StringBuilder().append(\"Skipped ID3 tag with unsupported majorVersion=\").append(r8).toString())\l}"];
Node_40 [shape=record,label="{40\:\ 0x00b9|r7 = false\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|return new com.google.android.exoplayer2.metadata.id3.Id3Decoder.Id3Header(r8, r7, r2)\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.id3.Id3Decoder$Id3Header com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeHeader((r14v0 'data' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_41;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_42;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_43;
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_26;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_40;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_40;
Node_24 -> Node_44;
Node_25 -> Node_19;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_39;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_37;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_38;
Node_34 -> Node_35;
Node_35 -> Node_21;
Node_35 -> Node_36[style=dashed];
Node_36 -> Node_21;
Node_37 -> Node_30;
Node_38 -> Node_35;
Node_39 -> Node_45;
Node_40 -> Node_24;
}

