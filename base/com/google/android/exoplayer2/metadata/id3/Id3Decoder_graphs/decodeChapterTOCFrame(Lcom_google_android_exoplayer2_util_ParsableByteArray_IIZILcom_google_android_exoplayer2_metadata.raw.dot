digraph "CFG forcom.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeChapterTOCFrame(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;IIZILcom\/google\/android\/exoplayer2\/metadata\/id3\/Id3Decoder$FramePredicate;)Lcom\/google\/android\/exoplayer2\/metadata\/id3\/ChapterTocFrame;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r16 I:int) = \l  (r24 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0006: IGET  (r5 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0008: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('framePosition' int)])\l \l0x000a: INVOKE  (r13 I:int) = (r5 I:byte[]), (r0 I:int) com.google.android.exoplayer2.metadata.id3.Id3Decoder.indexOfZeroByte(byte[], int):int type: STATIC \l0x000e: NEW_INSTANCE  (r6 I:java.lang.String) =  java.lang.String \l0x0010: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0012: IGET  (r5 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0014: ARITH  (r21 I:int) = (r13 I:int A[D('elementIdEndIndex' int)]) \- (r16 I:int A[D('framePosition' int)]) \l0x0016: CONST_STR  (r22 I:java.lang.String) =  \"ISO\-8859\-1\" \l0x0018: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('framePosition' int)])\l \l0x001a: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x001e: INVOKE  \l  (r6 I:java.lang.String)\l  (r5 I:byte[])\l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:java.lang.String)\l java.lang.String.\<init\>(byte[], int, int, java.lang.String):void type: DIRECT \l0x0021: ARITH  (r5 I:int) = (r13 I:int A[D('elementIdEndIndex' int)]) + (1 int) \l0x0023: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0025: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0028: INVOKE  (r12 I:int) = \l  (r24 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x002c: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r12 I:?[int, boolean, short, byte, char] A[D('ctocFlags' int)]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x002e|0x002e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0073 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0030|0x0030: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0031|0x0031: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r12 I:?[int, boolean, short, byte, char] A[D('ctocFlags' int)]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0033|0x0033: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0075 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|0x0035: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: INVOKE  (r11 I:int) = \l  (r24 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x003a: NEW_ARRAY  (r9 I:java.lang.String[]) = (r11 I:int A[D('childCount' int), IMMUTABLE_TYPE]) type: java.lang.String[] \l0x003c: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|0x0040: IF  (r0 I:?[int, byte, short, char]) \>= (r11 I:?[int, byte, short, char] A[D('childCount' int)])  \-\> B:12:0x0077 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|0x0042: INVOKE  (r19 I:int) = \l  (r24 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0046: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0048: IGET  (r5 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x004a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)])\l \l0x004c: INVOKE  (r14 I:int) = (r5 I:byte[]), (r0 I:int) com.google.android.exoplayer2.metadata.id3.Id3Decoder.indexOfZeroByte(byte[], int):int type: STATIC \l0x0050: NEW_INSTANCE  (r5 I:java.lang.String) =  java.lang.String \l0x0052: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0054: IGET  (r0 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0056: MOVE  (r21 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0058: ARITH  (r22 I:int) = (r14 I:int A[D('endIndex' int)]) \- (r19 I:int A[D('startIndex' int)]) \l0x005a: CONST_STR  (r23 I:java.lang.String) =  \"ISO\-8859\-1\" \l0x005c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x005e: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startIndex' int)])\l \l0x0060: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0062: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0064: INVOKE  \l  (r5 I:java.lang.String)\l  (r0 I:byte[])\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:java.lang.String)\l java.lang.String.\<init\>(byte[], int, int, java.lang.String):void type: DIRECT \l0x0067: APUT  \l  (r9 I:?[OBJECT, ARRAY][] A[D('children' java.lang.String[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x0069: ARITH  (r5 I:int) = (r14 I:int A[D('endIndex' int)]) + (1 int) \l0x006b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x006d: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0070: ARITH  (r17 I:int A[D('i' int)]) = (r17 I:int A[D('i' int)]) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0073|0x0073: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isRoot' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0075|0x0075: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0077|0x0077: NEW_INSTANCE  (r20 I:java.util.ArrayList) =  java.util.ArrayList \l0x0079: INVOKE  (r20 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x007c: ARITH  (r18 I:int) = (r16 I:int A[D('framePosition' int)]) + (r25 I:int A[D('frameSize' int)]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x007e|0x007e: INVOKE  (r5 I:int) = \l  (r24 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0082: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('limit' int)])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0084|0x0084: IF  (r5 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:18:0x009c \l}"];
Node_15 [shape=record,label="{15\:\ 0x0086|0x0086: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('majorVersion' int)])\l \l0x0088: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x008a: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('unsignedIntFrameSizeHack' boolean)])\l \l0x008c: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r28 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('frameHeaderSize' int)])\l \l0x008e: MOVE  (r4 I:?[OBJECT, ARRAY]) = \l  (r29 I:?[OBJECT, ARRAY] A[D('framePredicate' com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)])\l \l0x0090: INVOKE  (r15 I:com.google.android.exoplayer2.metadata.id3.Id3Frame) = \l  (r0 I:int)\l  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:boolean)\l  (r3 I:int)\l  (r4 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeFrame(int, com.google.android.exoplayer2.util.ParsableByteArray, boolean, int, com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate):com.google.android.exoplayer2.metadata.id3.Id3Frame type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0094|0x0094: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('frame' com.google.android.exoplayer2.metadata.id3.Id3Frame)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x007e \l}"];
Node_17 [shape=record,label="{17\:\ 0x0096|0x0096: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('subFrames' java.util.ArrayList\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>)])\l \l0x0098: INVOKE  \l  (r0 I:java.util.ArrayList)\l  (r15 I:java.lang.Object A[D('frame' com.google.android.exoplayer2.metadata.id3.Id3Frame)])\l java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x009c|0x009c: INVOKE  (r5 I:int) = \l  (r20 I:java.util.ArrayList A[D('subFrames' java.util.ArrayList\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>)])\l java.util.ArrayList.size():int type: VIRTUAL \l0x00a0: NEW_ARRAY  (r10 I:com.google.android.exoplayer2.metadata.id3.Id3Frame[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.metadata.id3.Id3Frame[] \l0x00a2: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('subFrames' java.util.ArrayList\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>)])\l \l0x00a4: INVOKE  \l  (r0 I:java.util.ArrayList)\l  (r10 I:java.lang.Object[] A[D('subFrameArray' com.google.android.exoplayer2.metadata.id3.Id3Frame[])])\l java.util.ArrayList.toArray(java.lang.Object[]):java.lang.Object[] type: VIRTUAL \l0x00a7: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.metadata.id3.ChapterTocFrame) =  com.google.android.exoplayer2.metadata.id3.ChapterTocFrame \l0x00a9: INVOKE  \l  (r5 I:com.google.android.exoplayer2.metadata.id3.ChapterTocFrame)\l  (r6 I:java.lang.String A[D('elementId' java.lang.String)])\l  (r7 I:boolean A[D('isRoot' boolean)])\l  (r8 I:boolean A[D('isOrdered' boolean)])\l  (r9 I:java.lang.String[] A[D('children' java.lang.String[])])\l  (r10 I:com.google.android.exoplayer2.metadata.id3.Id3Frame[] A[D('subFrameArray' com.google.android.exoplayer2.metadata.id3.Id3Frame[])])\l com.google.android.exoplayer2.metadata.id3.ChapterTocFrame.\<init\>(java.lang.String, boolean, boolean, java.lang.String[], com.google.android.exoplayer2.metadata.id3.Id3Frame[]):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x00ac|0x00ac: RETURN  \l  (r5 I:com.google.android.exoplayer2.metadata.id3.ChapterTocFrame)\l \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.id3.ChapterTocFrame com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeChapterTOCFrame((r24 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('id3Data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:int A[D('frameSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:int A[D('majorVersion' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:boolean A[D('unsignedIntFrameSizeHack' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:int A[D('frameHeaderSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate A[D('framePredicate' com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0031\-0x0073: r7 'isRoot' boolean\l  0x0036\-0x0073: r8 'isOrdered' boolean\l  0x003c\-0x0073: r9 'children' java.lang.String[]\l  0x003a\-0x0073: r11 'childCount' int\l  0x0050\-0x0073: r14 'endIndex' int\l  0x003e\-0x0073: r17 'i' int\l  0x0046\-0x0073: r19 'startIndex' int\l  0x0094\-0x009c: r15 'frame' com.google.android.exoplayer2.metadata.id3.Id3Frame\l  0x0021\-0x00ac: r6 'elementId' java.lang.String\l  0x0075\-0x00ac: r7 'isRoot' boolean\l  0x0077\-0x00ac: r8 'isOrdered' boolean\l  0x0077\-0x00ac: r9 'children' java.lang.String[]\l  0x00a2\-0x00ac: r10 'subFrameArray' com.google.android.exoplayer2.metadata.id3.Id3Frame[]\l  0x0077\-0x00ac: r11 'childCount' int\l  0x002c\-0x00ac: r12 'ctocFlags' int\l  0x000e\-0x00ac: r13 'elementIdEndIndex' int\l  0x0004\-0x00ac: r16 'framePosition' int\l  0x0077\-0x00ac: r17 'i' int\l  0x007e\-0x00ac: r18 'limit' int\l  0x007c\-0x00ac: r20 'subFrames' java.util.ArrayList\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>\l  ?\-0x00ac: r24 'id3Data' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x00ac: r25 'frameSize' int\l  ?\-0x00ac: r26 'majorVersion' int\l  ?\-0x00ac: r27 'unsignedIntFrameSizeHack' boolean\l  ?\-0x00ac: r28 'frameHeaderSize' int\l  ?\-0x00ac: r29 'framePredicate' com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.UnsupportedEncodingException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_7;
Node_10 -> Node_3;
Node_11 -> Node_6;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_13;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_13;
Node_18 -> Node_19;
}

