digraph "CFG forcom.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeCommentFrame(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;I)Lcom\/google\/android\/exoplayer2\/metadata\/id3\/CommentFrame;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r13 \>= 4) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|int r4 = r12.readUnsignedByte()\ljava.lang.String r0 = getCharsetName(r4)\lbyte[] r1 = new byte[3]\lr12.readBytes(r1, 0, 3)\ljava.lang.String r5 = new java.lang.String(r1, 0, 3)\lbyte[] r1 = new byte[(r13 + \-4)]\lr12.readBytes(r1, 0, r13 + \-4)\lint r3 = indexOfEos(r1, 0, r4)\ljava.lang.String r2 = new java.lang.String(r1, 0, r3, r0)\lint r8 = r3 + delimiterLength(r4)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|if (r8 \>= r1.length) goto L_0x0045\l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|java.lang.String r6 = new java.lang.String(r1, r8, indexOfEos(r1, r8, r4) \- r8, r0)\l}"];
Node_6 [shape=record,label="{6\:\ 0x003f|PHI: r6 \l  PHI: (r6v1 'text' java.lang.String) = (r6v0 'text' java.lang.String), (r6v2 'text' java.lang.String) binds: [B:7:0x0045, B:5:0x0034] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|java.lang.String r6 = \"\"\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return new com.google.android.exoplayer2.metadata.id3.CommentFrame(r5, r2, r6)\l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.id3.CommentFrame com.google.android.exoplayer2.metadata.id3.Id3Decoder.decodeCommentFrame((r12v0 'id3Data' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'frameSize' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.UnsupportedEncodingException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_7 -> Node_6;
}

