digraph "CFG forcom.google.android.exoplayer2.metadata.id3.Id3Decoder.validateFrames(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;IIZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r9 = r16.getPosition()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lSYNTHETIC\lSplitter:B:1:0x0004\lLOOP:0: B:1:0x0004\-\>B:57:?\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x00cc \}\lSplitter:B:1:0x0004\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|Catch:\{ all \-\> 0x00cc \}\l|if (r16.bytesLeft() \< r18) goto L_0x00d3     \/\/ Catch:\{ all \-\> 0x00cc \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|Catch:\{ all \-\> 0x00cc \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|Catch:\{ all \-\> 0x00cc \}\l|if (r17 \< 3) goto L_0x002e     \/\/ Catch:\{ all \-\> 0x00cc \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|Catch:\{ all \-\> 0x00cc \}\l|int r7 = r16.readInt()     \/\/ Catch:\{ all \-\> 0x00cc \}\llong r4 = r16.readUnsignedInt()     \/\/ Catch:\{ all \-\> 0x00cc \}\lint r2 = r16.readUnsignedShort()     \/\/ Catch:\{ all \-\> 0x00cc \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|PHI: r2 r4 r7 \l  PHI: (r2v1 'flags' int) = (r2v0 'flags' int), (r2v2 'flags' int) binds: [B:14:0x0035, B:6:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'frameSize' long) = (r4v0 'frameSize' long), (r4v4 'frameSize' long) binds: [B:14:0x0035, B:6:0x0011] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 'id' int) = (r7v0 'id' int), (r7v2 'id' int) binds: [B:14:0x0035, B:6:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 != 0) goto L_0x0039\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f}"];
Node_9 [shape=record,label="{9\:\ 0x0023|if ((r4 \> 0 ? 1 : (r4 == 0 ? 0 : \-1)) != 0) goto L_0x0039\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|if (r2 != 0) goto L_0x0039\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|r16.setPosition(r9)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|SYNTHETIC\lSplitter:B:12:0x002e\l}"];
Node_13 [shape=record,label="{13\:\ ?|Catch:\{ all \-\> 0x00cc \}\lSplitter:B:12:0x002e\l|int r7 = r16.readUnsignedInt24()     \/\/ Catch:\{ all \-\> 0x00cc \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|long r4 = (long) r16.readUnsignedInt24()\lr2 = 0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039}"];
Node_16 [shape=record,label="{16\:\ 0x003c|if (r17 != 4) goto L_0x0075\l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|if (r19 != false) goto L_0x0075\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040}"];
Node_19 [shape=record,label="{19\:\ 0x0048|if (((8421504 & r4) \> 0 ? 1 : ((8421504 & r4) == 0 ? 0 : \-1)) == 0) goto L_0x0051\l}"];
Node_20 [shape=record,label="{20\:\ 0x004a|r16.setPosition(r9)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|long r4 = (((255 & r4) \| (((r4 \>\> 8) & 255) \<\< 7)) \| (((r4 \>\> 16) & 255) \<\< 14)) \| (((r4 \>\> 24) & 255) \<\< 21)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0075|PHI: r4 \l  PHI: (r4v2 'frameSize' long) = (r4v1 'frameSize' long), (r4v1 'frameSize' long), (r4v3 'frameSize' long) binds: [B:16:0x003c, B:17:0x003e, B:21:0x0051] A[DONT_GENERATE, DONT_INLINE]\l|r6 = false\lr3 = false\l}"];
Node_23 [shape=record,label="{23\:\ 0x007a|if (r17 != 4) goto L_0x009f\l}"];
Node_24 [shape=record,label="{24\:\ 0x007c}"];
Node_25 [shape=record,label="{25\:\ 0x007e|if ((r2 & 64) == 0) goto L_0x009b\l}"];
Node_26 [shape=record,label="{26\:\ 0x0080|r6 = true\l}"];
Node_27 [shape=record,label="{27\:\ 0x0081|PHI: r6 \l  PHI: (r6v6 'hasGroupIdentifier' boolean) = (r6v5 'hasGroupIdentifier' boolean), (r6v7 'hasGroupIdentifier' boolean) binds: [B:38:0x009b, B:26:0x0080] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0083|if ((r2 & 1) == 0) goto L_0x009d\l}"];
Node_29 [shape=record,label="{29\:\ 0x0085|r3 = true\l}"];
Node_30 [shape=record,label="{30\:\ 0x0086|PHI: r3 r6 \l  PHI: (r3v3 'hasDataLength' boolean) = (r3v0 'hasDataLength' boolean), (r3v1 'hasDataLength' boolean), (r3v2 'hasDataLength' boolean), (r3v4 'hasDataLength' boolean), (r3v5 'hasDataLength' boolean) binds: [B:41:0x00a2, B:49:0x00b1, B:47:0x00ad, B:39:0x009d, B:29:0x0085] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v4 'hasGroupIdentifier' boolean) = (r6v0 'hasGroupIdentifier' boolean), (r6v2 'hasGroupIdentifier' boolean), (r6v2 'hasGroupIdentifier' boolean), (r6v6 'hasGroupIdentifier' boolean), (r6v6 'hasGroupIdentifier' boolean) binds: [B:41:0x00a2, B:49:0x00b1, B:47:0x00ad, B:39:0x009d, B:29:0x0085] A[DONT_GENERATE, DONT_INLINE]\l|r8 = 0\l}"];
Node_31 [shape=record,label="{31\:\ 0x0087|if (r6 == false) goto L_0x008b\l}"];
Node_32 [shape=record,label="{32\:\ 0x0089|int r8 = 0 + 1\l}"];
Node_33 [shape=record,label="{33\:\ 0x008b|PHI: r8 \l  PHI: (r8v1 'minimumFrameSize' int) = (r8v0 'minimumFrameSize' int), (r8v4 'minimumFrameSize' int) binds: [B:31:0x0087, B:32:0x0089] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L_0x008f\l}"];
Node_34 [shape=record,label="{34\:\ 0x008d|int r8 = r8 + 4\l}"];
Node_35 [shape=record,label="{35\:\ 0x008f|PHI: r8 \l  PHI: (r8v2 'minimumFrameSize' int) = (r8v1 'minimumFrameSize' int), (r8v3 'minimumFrameSize' int) binds: [B:33:0x008b, B:34:0x008d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x0092|if ((r4 \> ((long) r8) ? 1 : (r4 == ((long) r8) ? 0 : \-1)) \>= 0) goto L_0x00b3\l}"];
Node_37 [shape=record,label="{37\:\ 0x0094|r16.setPosition(r9)\l}"];
Node_38 [shape=record,label="{38\:\ 0x009b|r6 = false\l}"];
Node_39 [shape=record,label="{39\:\ 0x009d|r3 = false\l}"];
Node_40 [shape=record,label="{40\:\ 0x009f}"];
Node_41 [shape=record,label="{41\:\ 0x00a2|if (r17 != 3) goto L_0x0086\l}"];
Node_42 [shape=record,label="{42\:\ 0x00a4}"];
Node_43 [shape=record,label="{43\:\ 0x00a6|if ((r2 & 32) == 0) goto L_0x00af\l}"];
Node_44 [shape=record,label="{44\:\ 0x00a8|r6 = true\l}"];
Node_45 [shape=record,label="{45\:\ 0x00a9|PHI: r6 \l  PHI: (r6v2 'hasGroupIdentifier' boolean) = (r6v1 'hasGroupIdentifier' boolean), (r6v3 'hasGroupIdentifier' boolean) binds: [B:48:0x00af, B:44:0x00a8] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_46 [shape=record,label="{46\:\ 0x00ab|if ((r2 & 128) == 0) goto L_0x00b1\l}"];
Node_47 [shape=record,label="{47\:\ 0x00ad|r3 = true\l}"];
Node_48 [shape=record,label="{48\:\ 0x00af|r6 = false\l}"];
Node_49 [shape=record,label="{49\:\ 0x00b1|r3 = false\l}"];
Node_50 [shape=record,label="{50\:\ 0x00b3|SYNTHETIC\lSplitter:B:50:0x00b3\l}"];
Node_51 [shape=record,label="{51\:\ ?|Catch:\{ all \-\> 0x00cc \}\lSplitter:B:50:0x00b3\l}"];
Node_52 [shape=record,label="{52\:\ 0x00b6}"];
Node_53 [shape=record,label="{53\:\ 0x00ba|if ((((long) r16.bytesLeft()) \> r4 ? 1 : (((long) r16.bytesLeft()) == r4 ? 0 : \-1)) \>= 0) goto L_0x00c4\l}"];
Node_54 [shape=record,label="{54\:\ 0x00bc|r0 = r16\lr0.setPosition(r9)\l}"];
Node_55 [shape=record,label="{55\:\ 0x00c4}"];
Node_56 [shape=record,label="{56\:\ 0x00c7|SYNTHETIC\lSplitter:B:56:0x00c7\l}"];
Node_57 [shape=record,label="{57\:\ ?|LOOP_END\lCatch:\{ all \-\> 0x00cc \}\lSplitter:B:56:0x00c7\lLOOP:0: B:1:0x0004\-\>B:57:?\l|r16.skipBytes((int) r4)     \/\/ Catch:\{ all \-\> 0x00cc \}\l}"];
Node_58 [shape=record,label="{58\:\ 0x00cc|ExcHandler:  FINALLY\lSplitter:B:1:0x0004\l|java.lang.Throwable r10 = move\-exception\l}"];
Node_59 [shape=record,label="{59\:\ 0x00cd|FINALLY_INSNS\l|r16.setPosition(r9)\l}"];
Node_60 [shape=record,label="{60\:\ 0x00d2|throw r10\l}"];
Node_61 [shape=record,label="{61\:\ 0x00d3|r16.setPosition(r9)\l}"];
Node_62 [shape=record,label="{62\:\ 0x00d3|SYNTHETIC\l}"];
Node_63 [shape=record,label="{63\:\ 0x0094|SYNTHETIC\l}"];
Node_64 [shape=record,label="{64\:\ 0x0027|SYNTHETIC\l}"];
Node_65 [shape=record,label="{65\:\ 0x00bc|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x004a|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_68 [shape=record,label="{68\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_70 [shape=record,label="{70\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_71 [shape=record,label="{71\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.metadata.id3.Id3Decoder.validateFrames((r16v0 'id3Data' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 'majorVersion' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'frameHeaderSize' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'unsignedIntFrameSizeHack' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_58;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_62;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_15;
Node_10 -> Node_64[style=dashed];
Node_11 -> Node_67;
Node_12 -> Node_13;
Node_12 -> Node_58;
Node_13 -> Node_14;
Node_13 -> Node_58;
Node_14 -> Node_7;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_66[style=dashed];
Node_20 -> Node_68;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_40;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_38;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_39;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_50;
Node_36 -> Node_63[style=dashed];
Node_37 -> Node_69;
Node_38 -> Node_27;
Node_39 -> Node_30;
Node_40 -> Node_41;
Node_41 -> Node_30;
Node_41 -> Node_42[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_48;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_49;
Node_47 -> Node_30;
Node_48 -> Node_45;
Node_49 -> Node_30;
Node_50 -> Node_51;
Node_50 -> Node_58;
Node_51 -> Node_52;
Node_51 -> Node_58;
Node_52 -> Node_53;
Node_53 -> Node_55;
Node_53 -> Node_65[style=dashed];
Node_54 -> Node_70;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_57 -> Node_1;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_61 -> Node_71;
Node_62 -> Node_61;
Node_63 -> Node_37;
Node_64 -> Node_11;
Node_65 -> Node_54;
Node_66 -> Node_20;
}

