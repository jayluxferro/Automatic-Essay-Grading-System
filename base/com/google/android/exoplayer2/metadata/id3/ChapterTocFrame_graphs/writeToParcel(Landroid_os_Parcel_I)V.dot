digraph "CFG forcom.google.android.exoplayer2.metadata.id3.ChapterTocFrame.writeToParcel(Landroid\/os\/Parcel;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2 = 1\lr5.writeString(r4.elementId)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r4.isRoot == false) goto L_0x0033\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|r1 = 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|PHI: r1 \l  PHI: (r1v3 int) = (r1v2 int), (r1v14 int) binds: [B:9:0x0033, B:2:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|r5.writeByte((byte) r1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|if (r4.isOrdered == false) goto L_0x0035\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|PHI: r2 \l  PHI: (r2v2 int) = (r2v0 int), (r2v1 int) binds: [B:4:0x0012, B:10:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|r5.writeByte((byte) r2)\lr5.writeStringArray(r4.children)\lr5.writeInt(r4.subFrames.length)\lr0 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:5:0x0014, B:8:0x0029] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0024\-\>B:8:0x0029\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|if (r0 \>= r4.subFrames.length) goto L_0x0037\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|LOOP_END\lLOOP:0: B:6:0x0024\-\>B:8:0x0029\l|r5.writeParcelable(r4.subFrames[r0], 0)\lint r0 = r0 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|r1 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|r2 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.metadata.id3.ChapterTocFrame.writeToParcel((r4v0 'this' com.google.android.exoplayer2.metadata.id3.ChapterTocFrame A[IMMUTABLE_TYPE, THIS]), (r5v0 'dest' android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'flags' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_6;
Node_9 -> Node_3;
Node_10 -> Node_5;
Node_12 -> Node_11;
}

