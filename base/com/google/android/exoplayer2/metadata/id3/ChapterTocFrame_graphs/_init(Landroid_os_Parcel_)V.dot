digraph "CFG forcom.google.android.exoplayer2.metadata.id3.ChapterTocFrame.\<init\>(Landroid\/os\/Parcel;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3 = true\lsuper(f2453ID)\lr5.elementId = r6.readString()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|if (r6.readByte() == 0) goto L_0x0042\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|r2 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|PHI: r2 \l  PHI: (r2v4 boolean) = (r2v3 boolean), (r2v12 boolean) binds: [B:8:0x0042, B:2:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|r5.isRoot = r2\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|if (r6.readByte() == 0) goto L_0x0044\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|PHI: r3 \l  PHI: (r3v2 boolean) = (r3v0 boolean), (r3v1 boolean) binds: [B:4:0x001a, B:9:0x0044] A[DONT_GENERATE, DONT_INLINE]\l|r5.isOrdered = r3\lr5.children = r6.createStringArray()\lint r1 = r6.readInt()\lr5.subFrames = new com.google.android.exoplayer2.metadata.id3.Id3Frame[r1]\lr0 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:5:0x001c, B:7:0x002f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x002d\-\>B:7:0x002f\l|if (r0 \>= r1) goto L_0x0046\l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|LOOP_END\lLOOP:0: B:6:0x002d\-\>B:7:0x002f\l|r5.subFrames[r0] = (com.google.android.exoplayer2.metadata.id3.Id3Frame) r6.readParcelable(com.google.android.exoplayer2.metadata.id3.Id3Frame.class.getClassLoader())\lint r0 = r0 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|r2 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|r3 = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void com.google.android.exoplayer2.metadata.id3.ChapterTocFrame.\<init\>((r5v0 'this' com.google.android.exoplayer2.metadata.id3.ChapterTocFrame A[IMMUTABLE_TYPE, THIS]), (r6v0 'in' android.os.Parcel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_6;
Node_8 -> Node_3;
Node_9 -> Node_5;
Node_11 -> Node_10;
}

