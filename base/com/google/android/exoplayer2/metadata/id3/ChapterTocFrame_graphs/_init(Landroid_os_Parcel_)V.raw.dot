digraph "CFG forcom.google.android.exoplayer2.metadata.id3.ChapterTocFrame.\<init\>(Landroid\/os\/Parcel;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST_STR  (r2 I:java.lang.String) =  \"CTOC\" \l0x0004: INVOKE  \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Frame)\l  (r2 I:java.lang.String)\l com.google.android.exoplayer2.metadata.id3.Id3Frame.\<init\>(java.lang.String):void type: DIRECT \l0x0007: INVOKE  (r2 I:java.lang.String) = (r6 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x000b: IPUT  \l  (r2 I:java.lang.String)\l  (r5 I:com.google.android.exoplayer2.metadata.id3.ChapterTocFrame)\l com.google.android.exoplayer2.metadata.id3.ChapterTocFrame.elementId java.lang.String \l0x000d: INVOKE  (r2 I:byte) = (r6 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readByte():byte type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0042 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IPUT  \l  (r2 I:boolean)\l  (r5 I:com.google.android.exoplayer2.metadata.id3.ChapterTocFrame)\l com.google.android.exoplayer2.metadata.id3.ChapterTocFrame.isRoot boolean \l0x0016: INVOKE  (r2 I:byte) = (r6 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readByte():byte type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0044 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IPUT  \l  (r3 I:boolean)\l  (r5 I:com.google.android.exoplayer2.metadata.id3.ChapterTocFrame)\l com.google.android.exoplayer2.metadata.id3.ChapterTocFrame.isOrdered boolean \l0x001e: INVOKE  (r2 I:java.lang.String[]) = (r6 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.createStringArray():java.lang.String[] type: VIRTUAL \l0x0022: IPUT  \l  (r2 I:java.lang.String[])\l  (r5 I:com.google.android.exoplayer2.metadata.id3.ChapterTocFrame)\l com.google.android.exoplayer2.metadata.id3.ChapterTocFrame.children java.lang.String[] \l0x0024: INVOKE  (r1 I:int) = (r6 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x0028: NEW_ARRAY  (r2 I:com.google.android.exoplayer2.metadata.id3.Id3Frame[]) = (r1 I:int A[D('subFrameCount' int), IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.metadata.id3.Id3Frame[] \l0x002a: IPUT  \l  (r2 I:com.google.android.exoplayer2.metadata.id3.Id3Frame[])\l  (r5 I:com.google.android.exoplayer2.metadata.id3.ChapterTocFrame)\l com.google.android.exoplayer2.metadata.id3.ChapterTocFrame.subFrames com.google.android.exoplayer2.metadata.id3.Id3Frame[] \l0x002c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r1 I:?[int, byte, short, char] A[D('subFrameCount' int)])  \-\> B:10:0x0046 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: IGET  (r3 I:com.google.android.exoplayer2.metadata.id3.Id3Frame[]) = \l  (r5 I:com.google.android.exoplayer2.metadata.id3.ChapterTocFrame)\l com.google.android.exoplayer2.metadata.id3.ChapterTocFrame.subFrames com.google.android.exoplayer2.metadata.id3.Id3Frame[] \l0x0031: CONST_CLASS  (r2 I:java.lang.Class\<com.google.android.exoplayer2.metadata.id3.Id3Frame\>) =  com.google.android.exoplayer2.metadata.id3.Id3Frame.class \l0x0033: INVOKE  (r2 I:java.lang.ClassLoader) = (r2 I:java.lang.Class) java.lang.Class.getClassLoader():java.lang.ClassLoader type: VIRTUAL \l0x0037: INVOKE  (r2 I:android.os.Parcelable) = \l  (r6 I:android.os.Parcel A[D('in' android.os.Parcel)])\l  (r2 I:java.lang.ClassLoader)\l android.os.Parcel.readParcelable(java.lang.ClassLoader):android.os.Parcelable type: VIRTUAL \l0x003b: CHECK_CAST  (r2 I:com.google.android.exoplayer2.metadata.id3.Id3Frame) = (com.google.android.exoplayer2.metadata.id3.Id3Frame) (r2 I:?[OBJECT, ARRAY]) \l0x003d: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x003f: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|0x0042: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|0x0044: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|0x0046: RETURN   \l}"];
MethodNode[shape=record,label="{void com.google.android.exoplayer2.metadata.id3.ChapterTocFrame.\<init\>((r5 'this' I:com.google.android.exoplayer2.metadata.id3.ChapterTocFrame A[IMMUTABLE_TYPE, THIS]), (r6 I:android.os.Parcel A[D('in' android.os.Parcel), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x002d\-0x0042: r0 'i' int\l  0x0028\-0x0042: r1 'subFrameCount' int\l  0x0046\-0x0046: r0 'i' int\l  0x0046\-0x0046: r1 'subFrameCount' int\l  ?\-0x0046: r6 'in' android.os.Parcel\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_6;
Node_8 -> Node_3;
Node_9 -> Node_5;
}

