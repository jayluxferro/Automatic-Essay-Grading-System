digraph "CFG forcom.google.android.exoplayer2.extractor.MpegAudioHeader.setValues(ILjava\/lang\/String;IIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r1 I:int A[D('version' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.version int \l0x0002: IPUT  \l  (r2 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.mimeType java.lang.String \l0x0004: IPUT  \l  (r3 I:int A[D('frameSize' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.frameSize int \l0x0006: IPUT  \l  (r4 I:int A[D('sampleRate' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.sampleRate int \l0x0008: IPUT  \l  (r5 I:int A[D('channels' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.channels int \l0x000a: IPUT  \l  (r6 I:int A[D('bitrate' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.bitrate int \l0x000c: IPUT  \l  (r7 I:int A[D('samplesPerFrame' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.samplesPerFrame int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.MpegAudioHeader.setValues((r0 'this' I:com.google.android.exoplayer2.extractor.MpegAudioHeader A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[D('version' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[D('mimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('frameSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('sampleRate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('channels' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('bitrate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('samplesPerFrame' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000e: r1 'version' int\l  ?\-0x000e: r2 'mimeType' java.lang.String\l  ?\-0x000e: r3 'frameSize' int\l  ?\-0x000e: r4 'sampleRate' int\l  ?\-0x000e: r5 'channels' int\l  ?\-0x000e: r6 'bitrate' int\l  ?\-0x000e: r7 'samplesPerFrame' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

