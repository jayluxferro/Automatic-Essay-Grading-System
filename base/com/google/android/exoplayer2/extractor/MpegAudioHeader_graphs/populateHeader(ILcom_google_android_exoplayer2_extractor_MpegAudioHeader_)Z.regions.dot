digraph "CFG forcom.google.android.exoplayer2.extractor.MpegAudioHeader.populateHeader(ILcom\/google\/android\/exoplayer2\/extractor\/MpegAudioHeader;)Z" {
subgraph cluster_Region_500044265 {
label = "R(1:(2:(1:16)|(6:17|(1:19)(1:(1:31))|20|(2:23|25)(1:(2:36|38)(3:40|41|46))|29|50))) | DECL_VAR: int version, int layer, int bitrateIndex, int samplingRateIndex, int bitrate, int samplesPerFrame, int frameSize\l";
node [shape=record,color=blue];
subgraph cluster_Region_2105772199 {
label = "R(2:(1:16)|(6:17|(1:19)(1:(1:31))|20|(2:23|25)(1:(2:36|38)(3:40|41|46))|29|50))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1233315412 {
label = "IF [B:1:0x0005, B:4:0x000e, B:7:0x0016, B:10:0x001e, B:12:0x0022, B:15:0x002b] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if ((\-2097152 & r13) != \-2097152) goto L_0x0007\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|ADDED_TO_REGION\l|if ((r1 = (r13 \>\>\> 19) & 3) == 1) goto L_0x0010\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|ADDED_TO_REGION\l|if ((r10 = (r13 \>\>\> 17) & 3) == 0) goto L_0x0018\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|ADDED_TO_REGION\l|if ((r9 = (r13 \>\>\> 12) & 15) == 0) goto L_0x0024\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|ADDED_TO_REGION\l|if (r9 == 15) goto L_0x0024\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|ADDED_TO_REGION\l|if ((r12 = (r13 \>\>\> 10) & 3) == 3) goto L_0x002d\l}"];
subgraph cluster_Region_358815237 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002d|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_213876796 {
label = "R(6:17|(1:19)(1:(1:31))|20|(2:23|25)(1:(2:36|38)(3:40|41|46))|29|50)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x002f|int r4 = SAMPLING_RATE_V1[r12]\l}"];
subgraph cluster_IfRegion_2018450457 {
label = "IF [B:18:0x0034] THEN: R(1:19) ELSE: R(1:(1:31))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0034|if (r1 == 2) goto L_0x0036\l}"];
subgraph cluster_Region_2041474237 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0036|r4 \/= 2\l}"];
}
subgraph cluster_Region_426276103 {
label = "R(1:(1:31)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1191608376 {
label = "IF [B:30:0x0066] THEN: R(1:31) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0066|if (r1 == 0) goto L_0x0068\l}"];
subgraph cluster_Region_731630952 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0068|r4 \/= 4\l}"];
}
}
}
}
Node_20 [shape=record,label="{20\:\ 0x0038|PHI: r4 \l  PHI: (r4v2 'sampleRate' int) = (r4v0 'sampleRate' int), (r4v1 'sampleRate' int), (r4v3 'sampleRate' int) binds: [B:30:0x0066, B:31:0x0068, B:19:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|int r11 = (r13 \>\>\> 9) & 1\l}"];
subgraph cluster_IfRegion_1247311331 {
label = "IF [B:21:0x003d] THEN: R(2:23|25) ELSE: R(1:(2:36|38)(3:40|41|46))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x003d|if (r10 == 3) goto L_0x003f\l}"];
subgraph cluster_Region_876426029 {
label = "R(2:23|25)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0040|r8 = r1 == 3 ? BITRATE_V1_L1[r9 \- 1] : BITRATE_V2_L1[r9 \- 1]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0048|PHI: r8 \l  PHI: (r8v6 'bitrate' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = (((r8 * 12000) \/ r4) + r11) * 4\lr7 = 384\l}"];
}
subgraph cluster_Region_1249314661 {
label = "R(1:(2:36|38)(3:40|41|46)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_284005217 {
label = "IF [B:34:0x0073] THEN: R(2:36|38) ELSE: R(3:40|41|46) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0073|if (r1 == 3) goto L_0x0075\l}"];
subgraph cluster_Region_1156840438 {
label = "R(2:36|38)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0076|r8 = r10 == 2 ? BITRATE_V1_L2[r9 \- 1] : BITRATE_V1_L3[r9 \- 1]\l}"];
Node_38 [shape=record,label="{38\:\ 0x007e|PHI: r8 \l  PHI: (r8v2 'bitrate' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r7 = 1152\lint r3 = ((144000 * r8) \/ r4) + r11\l}"];
}
subgraph cluster_Region_829857421 {
label = "R(3:40|41|46)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x008f|r8 = BITRATE_V2[r9 \- 1]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0096|r7 = r10 == 1 ? 576 : 1152\l}"];
Node_46 [shape=record,label="{46\:\ 0x00a0|PHI: r0 \l  PHI: (r0v19 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r3 = (((r10 == 1 ? com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.MATCH_RANGE : 144000) * r8) \/ r4) + r11\l}"];
}
}
}
}
Node_29 [shape=record,label="{29\:\ 0x005e|PHI: r5 \l  PHI: (r5v1 'channels' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r14.setValues(r1, MIME_TYPE_BY_LAYER[3 \- r10], r3, r4, ((r13 \>\> 6) & 3) == 3 ? 1 : 2, r8 * 1000, r7)\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0007|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0009}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0010|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0012}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0018|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001a}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0020}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0024|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0026}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x003f}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0042}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0050|PHI: r3 r7 r8 \l  PHI: (r3v2 'frameSize' int) = (r3v0 'frameSize' int), (r3v1 'frameSize' int), (r3v3 'frameSize' int) binds: [B:46:0x00a0, B:38:0x007e, B:25:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v4 'samplesPerFrame' int) = (r7v1 'samplesPerFrame' int), (r7v3 'samplesPerFrame' int), (r7v5 'samplesPerFrame' int) binds: [B:46:0x00a0, B:38:0x007e, B:25:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v4 'bitrate' int) = (r8v0 'bitrate' int), (r8v2 'bitrate' int), (r8v6 'bitrate' int) binds: [B:46:0x00a0, B:38:0x007e, B:25:0x0048] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x005b}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x005d}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x006b}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0072}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0075}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0078}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0088}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0098}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x009a|PHI: r7 \l  PHI: (r7v1 'samplesPerFrame' int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x009b}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x009d}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x00a5}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x00a8}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x00ac}"];
MethodNode[shape=record,label="{public static boolean com.google.android.exoplayer2.extractor.MpegAudioHeader.populateHeader((r13v0 'headerData' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'header' com.google.android.exoplayer2.extractor.MpegAudioHeader A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_30[style=dashed];
Node_19 -> Node_20;
Node_30 -> Node_20[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_33[style=dashed];
Node_23 -> Node_24;
Node_23 -> Node_32;
Node_25 -> Node_26;
Node_34 -> Node_35;
Node_34 -> Node_40[style=dashed];
Node_36 -> Node_37;
Node_36 -> Node_39;
Node_38 -> Node_26;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_47;
Node_46 -> Node_26;
Node_29 -> Node_50;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_49;
Node_28 -> Node_29;
Node_32 -> Node_25;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_39 -> Node_38;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_44 -> Node_48;
Node_45 -> Node_46;
Node_47 -> Node_43;
Node_48 -> Node_46;
Node_49 -> Node_29;
}

