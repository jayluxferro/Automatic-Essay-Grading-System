digraph "CFG forcom.google.android.exoplayer2.extractor.ts.Id3Reader.packetStarted(JZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dataAlignmentIndicator' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: IPUT  \l  (r0 I:boolean)\l  (r3 I:com.google.android.exoplayer2.extractor.ts.Id3Reader)\l com.google.android.exoplayer2.extractor.ts.Id3Reader.writingSample boolean \l0x0007: IPUT  \l  (r4 I:long A[D('pesTimeUs' long)])\l  (r3 I:com.google.android.exoplayer2.extractor.ts.Id3Reader)\l com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleTimeUs long \l0x0009: IPUT  \l  (r1 I:int)\l  (r3 I:com.google.android.exoplayer2.extractor.ts.Id3Reader)\l com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleSize int \l0x000b: IPUT  \l  (r1 I:int)\l  (r3 I:com.google.android.exoplayer2.extractor.ts.Id3Reader)\l com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleBytesRead int \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.Id3Reader.packetStarted((r3 'this' I:com.google.android.exoplayer2.extractor.ts.Id3Reader A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[D('pesTimeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[D('dataAlignmentIndicator' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000d: r4 'pesTimeUs' long\l  ?\-0x000d: r6 'dataAlignmentIndicator' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_2;
}

