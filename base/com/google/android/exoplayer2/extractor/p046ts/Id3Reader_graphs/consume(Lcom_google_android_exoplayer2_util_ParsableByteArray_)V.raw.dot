digraph "CFG forcom.google.android.exoplayer2.extractor.ts.Id3Reader.consume(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0002: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: IGET  (r3 I:boolean) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.writingSample boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r0 I:int) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x000c: IGET  (r3 I:int) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleBytesRead int \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r3 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:15:0x0069 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IGET  (r3 I:int) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleBytesRead int \l0x0012: ARITH  (r3 I:int) = (10 int) \- (r3 I:int) \l0x0014: INVOKE  (r2 I:int) = (r0 I:int A[D('bytesAvailable' int)]), (r3 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0018: IGET  (r3 I:byte[]) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x001a: INVOKE  (r4 I:int) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x001e: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.id3Header com.google.android.exoplayer2.util.ParsableByteArray \l0x0020: IGET  (r5 I:byte[]) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0022: IGET  (r6 I:int) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleBytesRead int \l0x0024: INVOKE  \l  (r3 I:java.lang.Object)\l  (r4 I:int)\l  (r5 I:java.lang.Object)\l  (r6 I:int)\l  (r2 I:int A[D('headerBytesAvailable' int)])\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0027: IGET  (r3 I:int) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleBytesRead int \l0x0029: ARITH  (r3 I:int) = (r3 I:int) + (r2 I:int A[D('headerBytesAvailable' int)]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0069 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.id3Header com.google.android.exoplayer2.util.ParsableByteArray \l0x002e: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r7 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0031: CONST  (r3 I:?[int, float, short, byte, char]) = (73 ?[int, float, short, byte, char]) \l0x0033: IGET  (r4 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.id3Header com.google.android.exoplayer2.util.ParsableByteArray \l0x0035: INVOKE  (r4 I:int) = (r4 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004f \l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|0x003b: CONST  (r3 I:?[int, float, short, byte, char]) = (68 ?[int, float, short, byte, char]) \l0x003d: IGET  (r4 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.id3Header com.google.android.exoplayer2.util.ParsableByteArray \l0x003f: INVOKE  (r4 I:int) = (r4 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|0x0043: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004f \l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|0x0045: CONST  (r3 I:?[int, float, short, byte, char]) = (51 ?[int, float, short, byte, char]) \l0x0047: IGET  (r4 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.id3Header com.google.android.exoplayer2.util.ParsableByteArray \l0x0049: INVOKE  (r4 I:int) = (r4 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x004d|0x004d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0059 \l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|0x004f: CONST_STR  (r3 I:java.lang.String) =  \"Id3Reader\" \l0x0051: CONST_STR  (r4 I:java.lang.String) =  \"Discarding invalid ID3 tag\" \l0x0053: INVOKE  (r3 I:java.lang.String), (r4 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l0x0056: IPUT  \l  (r7 I:boolean)\l  (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader)\l com.google.android.exoplayer2.extractor.ts.Id3Reader.writingSample boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x0059|0x0059: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.id3Header com.google.android.exoplayer2.util.ParsableByteArray \l0x005b: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x005c: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x005f: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.id3Header com.google.android.exoplayer2.util.ParsableByteArray \l0x0061: INVOKE  (r3 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readSynchSafeInt():int type: VIRTUAL \l0x0065: ARITH  (r3 I:int) = (r3 I:int) + (10 int) \l0x0067: IPUT  \l  (r3 I:int)\l  (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader)\l com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleSize int \l}"];
Node_15 [shape=record,label="{15\:\ 0x0069|0x0069: IGET  (r3 I:int) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleSize int \l0x006b: IGET  (r4 I:int) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleBytesRead int \l0x006d: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x006e: INVOKE  (r1 I:int) = (r0 I:int A[D('bytesAvailable' int)]), (r3 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0072: IGET  (r3 I:com.google.android.exoplayer2.extractor.TrackOutput) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x0074: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r1 I:int A[D('bytesToWrite' int)])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x0077: IGET  (r3 I:int) = (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader) com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleBytesRead int \l0x0079: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int A[D('bytesToWrite' int)]) \l0x007a: IPUT  \l  (r3 I:int)\l  (r9 I:com.google.android.exoplayer2.extractor.ts.Id3Reader)\l com.google.android.exoplayer2.extractor.ts.Id3Reader.sampleBytesRead int \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.Id3Reader.consume((r9 'this' I:com.google.android.exoplayer2.extractor.ts.Id3Reader A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0018\-0x0069: r2 'headerBytesAvailable' int\l  0x000c\-0x007c: r0 'bytesAvailable' int\l  0x0072\-0x007c: r1 'bytesToWrite' int\l  ?\-0x007c: r10 'data' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_2;
Node_14 -> Node_15;
Node_15 -> Node_2;
}

