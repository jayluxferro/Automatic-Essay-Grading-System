digraph "CFG forcom.google.android.exoplayer2.extractor.ts.Ac3Reader.consume(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r11 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0002: CONST  (r10 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0003: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0004: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: INVOKE  (r1 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x0079 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r1 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.state int \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2] t:[0x0011, 0x002c, 0x0048] \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: INVOKE  (r1 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.skipToNextSync(com.google.android.exoplayer2.util.ParsableByteArray):boolean type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0005 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IPUT  \l  (r4 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.state int \l0x0019: IGET  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.headerScratchBytes com.google.android.exoplayer2.util.ParsableByteArray \l0x001b: IGET  (r1 I:byte[]) = (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x001d: CONST  (r2 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l0x001f: APUT  \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l  (r2 I:byte A[IMMUTABLE_TYPE])\l \l0x0021: IGET  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.headerScratchBytes com.google.android.exoplayer2.util.ParsableByteArray \l0x0023: IGET  (r1 I:byte[]) = (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0025: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (119(0x77, float:1.67E\-43) ?[int, float, short, byte, char])\l \l0x0027: APUT  \l  (r1 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l  (r2 I:byte A[IMMUTABLE_TYPE])\l \l0x0029: IPUT  \l  (r10 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.bytesRead int \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IGET  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.headerScratchBytes com.google.android.exoplayer2.util.ParsableByteArray \l0x002e: IGET  (r1 I:byte[]) = (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0030: INVOKE  (r1 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r1 I:byte[])\l  (r11 I:int)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.continueRead(com.google.android.exoplayer2.util.ParsableByteArray, byte[], int):boolean type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0005 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: INVOKE  \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.parseHeader():void type: DIRECT \l0x0039: IGET  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.headerScratchBytes com.google.android.exoplayer2.util.ParsableByteArray \l0x003b: INVOKE  \l  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x003e: IGET  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x0040: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.headerScratchBytes com.google.android.exoplayer2.util.ParsableByteArray \l0x0042: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r11 I:int)\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x0045: IPUT  \l  (r10 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.state int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0048|0x0048: INVOKE  (r1 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x004c: IGET  (r2 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.sampleSize int \l0x004e: IGET  (r3 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.bytesRead int \l0x0050: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0051: INVOKE  (r0 I:int) = (r1 I:int), (r2 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0055: IGET  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x0057: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r0 I:int A[D('bytesToRead' int)])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x005a: IGET  (r1 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.bytesRead int \l0x005c: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int A[D('bytesToRead' int)]) \l0x005d: IPUT  \l  (r1 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.bytesRead int \l0x005f: IGET  (r1 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.bytesRead int \l0x0061: IGET  (r2 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.sampleSize int \l}"];
Node_13 [shape=record,label="{13\:\ 0x0063|0x0063: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0005 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0065|0x0065: IGET  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x0067: IGET  (r2 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.timeUs long \l0x0069: IGET  (r5 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.sampleSize int \l0x006b: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006c: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r2 I:long)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:byte[])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleMetadata(long, int, int, int, byte[]):void type: INTERFACE \l0x006f: IGET  (r2 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.timeUs long \l0x0071: IGET  (r8 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.sampleDurationUs long \l0x0073: ARITH  (r2 I:long) = (r2 I:long) + (r8 I:long) \l0x0074: IPUT  \l  (r2 I:long)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.timeUs long \l0x0076: IPUT  \l  (r6 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.state int \l}"];
Node_15 [shape=record,label="{15\:\ 0x0079|0x0079: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.Ac3Reader.consume((r12 'this' I:com.google.android.exoplayer2.extractor.ts.Ac3Reader A[IMMUTABLE_TYPE, THIS]), (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0055\-0x0079: r0 'bytesToRead' int\l  ?\-0x0083: r13 'data' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_9;
Node_4 -> Node_12;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_1;
}

