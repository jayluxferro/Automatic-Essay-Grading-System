digraph "CFG forcom.google.android.exoplayer2.extractor.ts.Ac3Reader.parseHeader()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0002: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.headerScratchBits com.google.android.exoplayer2.util.ParsableBitArray \l0x0005: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.setPosition(int):void type: VIRTUAL \l0x0008: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.headerScratchBits com.google.android.exoplayer2.util.ParsableBitArray \l0x000a: INVOKE  (r11 I:com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo) = (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) com.google.android.exoplayer2.audio.Ac3Util.parseAc3SyncframeInfo(com.google.android.exoplayer2.util.ParsableBitArray):com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo type: STATIC \l0x000e: IGET  (r0 I:com.google.android.exoplayer2.Format) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.format com.google.android.exoplayer2.Format \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: IGET  (r0 I:int) = \l  (r11 I:com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo A[D('frameInfo' com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo)])\l com.google.android.exoplayer2.audio.Ac3Util.Ac3SyncFrameInfo.channelCount int \l0x0014: IGET  (r1 I:com.google.android.exoplayer2.Format) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.format com.google.android.exoplayer2.Format \l0x0016: IGET  (r1 I:int) = (r1 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.channelCount int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002a \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IGET  (r0 I:int) = \l  (r11 I:com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo A[D('frameInfo' com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo)])\l com.google.android.exoplayer2.audio.Ac3Util.Ac3SyncFrameInfo.sampleRate int \l0x001c: IGET  (r1 I:com.google.android.exoplayer2.Format) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.format com.google.android.exoplayer2.Format \l0x001e: IGET  (r1 I:int) = (r1 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.sampleRate int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IGET  (r0 I:java.lang.String) = \l  (r11 I:com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo A[D('frameInfo' com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo)])\l com.google.android.exoplayer2.audio.Ac3Util.Ac3SyncFrameInfo.mimeType java.lang.String \l0x0024: IGET  (r1 I:com.google.android.exoplayer2.Format) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.format com.google.android.exoplayer2.Format \l0x0026: IGET  (r1 I:java.lang.String) = (r1 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0044 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: IGET  (r0 I:java.lang.String) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.trackFormatId java.lang.String \l0x002c: IGET  (r1 I:java.lang.String) = \l  (r11 I:com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo A[D('frameInfo' com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo)])\l com.google.android.exoplayer2.audio.Ac3Util.Ac3SyncFrameInfo.mimeType java.lang.String \l0x002e: IGET  (r5 I:int) = \l  (r11 I:com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo A[D('frameInfo' com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo)])\l com.google.android.exoplayer2.audio.Ac3Util.Ac3SyncFrameInfo.channelCount int \l0x0030: IGET  (r6 I:int) = \l  (r11 I:com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo A[D('frameInfo' com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo)])\l com.google.android.exoplayer2.audio.Ac3Util.Ac3SyncFrameInfo.sampleRate int \l0x0032: IGET  (r10 I:java.lang.String) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.language java.lang.String \l0x0034: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0035: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0036: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0037: INVOKE  (r0 I:com.google.android.exoplayer2.Format) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:java.util.List)\l  (r8 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r9 I:int)\l  (r10 I:java.lang.String)\l com.google.android.exoplayer2.Format.createAudioSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, int, int, java.util.List, com.google.android.exoplayer2.drm.DrmInitData, int, java.lang.String):com.google.android.exoplayer2.Format type: STATIC \l0x003b: IPUT  \l  (r0 I:com.google.android.exoplayer2.Format)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.format com.google.android.exoplayer2.Format \l0x003d: IGET  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x003f: IGET  (r1 I:com.google.android.exoplayer2.Format) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.format com.google.android.exoplayer2.Format \l0x0041: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r1 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.extractor.TrackOutput.format(com.google.android.exoplayer2.Format):void type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|0x0044: IGET  (r0 I:int) = \l  (r11 I:com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo A[D('frameInfo' com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo)])\l com.google.android.exoplayer2.audio.Ac3Util.Ac3SyncFrameInfo.frameSize int \l0x0046: IPUT  \l  (r0 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.sampleSize int \l0x0048: CONST  (r0 I:?[long, double]) = (1000000(0xf4240, double:4.940656E\-318) ?[long, double]) \l0x004b: IGET  (r2 I:int) = \l  (r11 I:com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo A[D('frameInfo' com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo)])\l com.google.android.exoplayer2.audio.Ac3Util.Ac3SyncFrameInfo.sampleCount int \l0x004d: CAST  (r2 I:long) = (long) (r2 I:int) \l0x004e: ARITH  (r0 I:long) = (r0 I:long) * (r2 I:long) \l0x004f: IGET  (r2 I:com.google.android.exoplayer2.Format) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.format com.google.android.exoplayer2.Format \l0x0051: IGET  (r2 I:int) = (r2 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.sampleRate int \l0x0053: CAST  (r2 I:long) = (long) (r2 I:int) \l0x0054: ARITH  (r0 I:long) = (r0 I:long) \/ (r2 I:long) \l0x0055: IPUT  \l  (r0 I:long)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader)\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.sampleDurationUs long \l}"];
Node_10 [shape=record,label="{10\:\ 0x0057|0x0057: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.ts.Ac3Reader.parseHeader((r12 'this' I:com.google.android.exoplayer2.extractor.ts.Ac3Reader A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x000e\-0x0057: r11 'frameInfo' com.google.android.exoplayer2.audio.Ac3Util$Ac3SyncFrameInfo\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

