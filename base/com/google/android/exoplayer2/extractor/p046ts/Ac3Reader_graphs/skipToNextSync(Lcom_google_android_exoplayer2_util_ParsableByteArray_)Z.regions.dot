digraph "CFG forcom.google.android.exoplayer2.extractor.ts.Ac3Reader.skipToNextSync(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Z" {
subgraph cluster_Region_921078382 {
label = "R(2:(1:(1:8)(2:10|(2:(2:12|23)|(1:15))))|24)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1120143091 {
label = "LOOP:0: (1:(1:8)(2:10|(2:(2:12|23)|(1:15))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r6.bytesLeft() \> 0) goto L_0x000a\l}"];
subgraph cluster_Region_1470857315 {
label = "R(1:(1:8)(2:10|(2:(2:12|23)|(1:15))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1652018429 {
label = "IF [B:4:0x000c] THEN: R(1:8) ELSE: R(2:10|(2:(2:12|23)|(1:15)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r5.lastByteWas0B == false) goto L_0x000e\l}"];
subgraph cluster_Region_1614847783 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0015|PHI: r1 \l  PHI: (r1v8 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r5.lastByteWas0B = r6.readUnsignedByte() == 11\l}"];
}
subgraph cluster_Region_644578171 {
label = "R(2:10|(2:(2:12|23)|(1:15)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001a|int int r0 = r6.readUnsignedByte()\l}"];
subgraph cluster_Region_47316546 {
label = "R(2:(2:12|23)|(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_654289556 {
label = "IF [B:11:0x0020] THEN: R(2:12|23) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0020|if (r0 == 119) goto L_0x0022\l}"];
subgraph cluster_Region_158519011 {
label = "R(2:12|23)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0022|r5.lastByteWas0B = false\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1508975000 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0028|PHI: r1 \l  PHI: (r1v4 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r5.lastByteWas0B = r0 == 11\l}"];
}
}
}
}
}
}
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0004|LOOP_START\lLOOP:0: B:1:0x0004\-\>B:18:0x0004\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0012}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0014}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0018}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0025}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0027}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002b}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x002d}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0004|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0004\-\>B:18:0x0004\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0022|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x002d|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0004|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0004|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.extractor.ts.Ac3Reader.skipToNextSync((r5v0 'this' com.google.android.exoplayer2.extractor.ts.Ac3Reader A[IMMUTABLE_TYPE, THIS]), (r6v0 'pesBuffer' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_20[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_8 -> Node_21;
Node_10 -> Node_11;
Node_11 -> Node_13[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_23;
Node_15 -> Node_22;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_8;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_15;
Node_17 -> Node_24;
Node_18 -> Node_1;
Node_19 -> Node_12;
Node_20 -> Node_17;
Node_21 -> Node_18;
Node_22 -> Node_18;
}

