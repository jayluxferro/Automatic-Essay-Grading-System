digraph "CFG forcom.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory.\<init\>(ILjava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7.flags = r8\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (isSet(32) != false) goto L_0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if (r9.isEmpty() == false) goto L_0x0023\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|java.util.List r9 = java.util.Collections.singletonList(com.google.android.exoplayer2.Format.createTextSampleFormat((java.lang.String) null, com.google.android.exoplayer2.util.MimeTypes.APPLICATION_CEA608, (java.lang.String) null, \-1, 0, (java.lang.String) null, (com.google.android.exoplayer2.drm.DrmInitData) null))\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|PHI: r9 \l  PHI: (r9v1 'closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\>) = (r9v0 'closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\>), (r9v0 'closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\>), (r9v2 'closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\>) binds: [B:1:0x000c, B:3:0x0012, B:4:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|r7.closedCaptionFormats = r9\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory.\<init\>((r7v0 'this' com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory A[IMMUTABLE_TYPE, THIS]), (r8v0 'flags' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I, Ljava\/util\/List, \<, Lcom\/google\/android\/exoplayer2\/Format;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

