digraph "CFG forcom.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory.buildSeiReader(Lcom\/google\/android\/exoplayer2\/extractor\/ts\/TsPayloadReader$EsInfo;)Lcom\/google\/android\/exoplayer2\/extractor\/ts\/SeiReader;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0004: INVOKE  (r1 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory)\l  (r1 I:int)\l com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory.isSet(int):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.extractor.ts.SeiReader) =  com.google.android.exoplayer2.extractor.ts.SeiReader \l0x000c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x000e: IGET  (r3 I:java.util.List\<com.google.android.exoplayer2.Format\>) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory)\l com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory.closedCaptionFormats java.util.List \l0x0010: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.ts.SeiReader)\l  (r3 I:java.util.List)\l com.google.android.exoplayer2.extractor.ts.SeiReader.\<init\>(java.util.List):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: RETURN  (r1 I:com.google.android.exoplayer2.extractor.ts.SeiReader) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: NEW_INSTANCE  (r17 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0016: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('esInfo' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo)])\l \l0x0018: IGET  (r1 I:byte[]) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo)\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.EsInfo.descriptorBytes byte[] \l0x001a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x001c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:byte[])\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(byte[]):void type: DIRECT \l0x001f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0021: IGET  (r10 I:java.util.List\<com.google.android.exoplayer2.Format\>) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory)\l com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory.closedCaptionFormats java.util.List \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: INVOKE  (r1 I:int) = \l  (r17 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratchDescriptorData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:21:0x0082 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: INVOKE  (r12 I:int) = \l  (r17 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratchDescriptorData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x002d: INVOKE  (r11 I:int) = \l  (r17 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratchDescriptorData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0031: INVOKE  (r1 I:int) = \l  (r17 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratchDescriptorData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0035: ARITH  (r15 I:int) = (r1 I:int) + (r11 I:int A[D('descriptorLength' int)]) \l0x0037: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (134(0x86, float:1.88E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('descriptorTag' int)]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x007c \l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|0x003b: NEW_INSTANCE  (r10 I:java.util.ArrayList A[D('closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\>)]) =  java.util.ArrayList \l0x003d: INVOKE  \l  (r10 I:java.util.ArrayList A[D('closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\>)])\l java.util.ArrayList.\<init\>():void type: DIRECT \l0x0040: INVOKE  (r1 I:int) = \l  (r17 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratchDescriptorData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0044: ARITH  (r16 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (31 ?[int, float, short, byte, char]) \l0x0046: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0047|0x0047: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('numberOfServices' int)])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|0x0049: IF  (r13 I:?[int, byte, short, char] A[D('i' int)]) \>= (r0 I:?[int, byte, short, char])  \-\> B:20:0x007c \l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|0x004b: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x004c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('scratchDescriptorData' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x004e: INVOKE  (r6 I:java.lang.String) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readString(int):java.lang.String type: VIRTUAL \l0x0052: INVOKE  (r9 I:int) = \l  (r17 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratchDescriptorData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0056: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r9 I:?[int, boolean, short, byte, char] A[D('captionTypeByte' int)]) & (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0058|0x0058: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0076 \l}"];
Node_14 [shape=record,label="{14\:\ 0x005a|0x005a: CONST  (r14 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x005b|0x005b: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isDigital' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0078 \l}"];
Node_16 [shape=record,label="{16\:\ 0x005d|0x005d: CONST_STR  (r2 I:java.lang.String) =  \"application\/cea\-708\" \l0x005f: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r9 I:?[int, boolean, short, byte, char] A[D('captionTypeByte' int)]) & (63 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0061|0x0061: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0062: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0063: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0064: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0065: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0066: INVOKE  (r1 I:com.google.android.exoplayer2.Format) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:java.lang.String A[D('language' java.lang.String)])\l  (r7 I:int A[D('accessibilityChannel' int)])\l  (r8 I:com.google.android.exoplayer2.drm.DrmInitData)\l com.google.android.exoplayer2.Format.createTextSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.String, int, com.google.android.exoplayer2.drm.DrmInitData):com.google.android.exoplayer2.Format type: STATIC \l0x006a: INVOKE  \l  (r10 I:java.util.List A[D('closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\>)])\l  (r1 I:java.lang.Object)\l java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x006d: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x006e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('scratchDescriptorData' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0070: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0073: ARITH  (r13 I:int A[D('i' int)]) = (r13 I:int A[D('i' int)]) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0076|0x0076: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isDigital' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0078|0x0078: CONST_STR  (r2 I:java.lang.String) =  \"application\/cea\-608\" \l0x007a: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x007c|0x007c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('scratchDescriptorData' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x007e: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r15 I:int A[D('nextDescriptorPosition' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0082|0x0082: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.extractor.ts.SeiReader) =  com.google.android.exoplayer2.extractor.ts.SeiReader \l0x0084: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.ts.SeiReader)\l  (r10 I:java.util.List A[D('closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\>)])\l com.google.android.exoplayer2.extractor.ts.SeiReader.\<init\>(java.util.List):void type: DIRECT \l}"];
MethodNode[shape=record,label="{private com.google.android.exoplayer2.extractor.ts.SeiReader com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory.buildSeiReader((r18 'this' I:com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory A[IMMUTABLE_TYPE, THIS]), (r19 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo A[D('esInfo' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0023\-0x003d: r10 'closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\>\l  0x005f\-0x0076: r2 'mimeType' java.lang.String\l  0x0061\-0x0076: r7 'accessibilityChannel' int\l  0x005b\-0x0076: r14 'isDigital' boolean\l  0x007a\-0x007c: r2 'mimeType' java.lang.String\l  0x0052\-0x007c: r6 'language' java.lang.String\l  0x007b\-0x007c: r7 'accessibilityChannel' int\l  0x0056\-0x007c: r9 'captionTypeByte' int\l  0x0047\-0x007c: r13 'i' int\l  0x0078\-0x007c: r14 'isDigital' boolean\l  0x0046\-0x007c: r16 'numberOfServices' int\l  0x0031\-0x0082: r11 'descriptorLength' int\l  0x002d\-0x0082: r12 'descriptorTag' int\l  0x0037\-0x0082: r15 'nextDescriptorPosition' int\l  0x0040\-0x0087: r10 'closedCaptionFormats' java.util.List\<com.google.android.exoplayer2.Format\>\l  0x001f\-0x0087: r17 'scratchDescriptorData' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0087: r19 'esInfo' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_21;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_20;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_10;
Node_18 -> Node_15;
Node_19 -> Node_17;
Node_20 -> Node_5;
Node_21 -> Node_3;
}

