digraph "CFG forcom.google.android.exoplayer2.extractor.ts.H265Reader.SampleReader.endNalUnit(JI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5.writingParameterSets == false) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r5.isFirstSlice == false) goto L_0x0010\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|r5.sampleIsKeyframe = r5.nalUnitHasKeyframeData\lr5.writingParameterSets = false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010}"];
Node_6 [shape=record,label="{6\:\ 0x0012|if (r5.isFirstParameterSet != false) goto L_0x0018\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014}"];
Node_8 [shape=record,label="{8\:\ 0x0016|if (r5.isFirstSlice == false) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018}"];
Node_10 [shape=record,label="{10\:\ 0x001a|if (r5.readingSample == false) goto L_0x0026\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|outputSample(r8 + ((int) (r6 \- r5.nalUnitStartPosition)))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|r5.samplePosition = r5.nalUnitStartPosition\lr5.sampleTimeUs = r5.nalUnitTimeUs\lr5.readingSample = true\lr5.sampleIsKeyframe = r5.nalUnitHasKeyframeData\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.H265Reader.SampleReader.endNalUnit((r5v0 'this' com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader A[IMMUTABLE_TYPE, THIS]), (r6v0 'position' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'offset' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_15;
}

