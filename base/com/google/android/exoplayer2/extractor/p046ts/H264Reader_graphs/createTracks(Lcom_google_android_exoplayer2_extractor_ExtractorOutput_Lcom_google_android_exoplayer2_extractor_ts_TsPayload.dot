digraph "CFG forcom.google.android.exoplayer2.extractor.ts.H264Reader.createTracks(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorOutput;Lcom\/google\/android\/exoplayer2\/extractor\/ts\/TsPayloadReader$TrackIdGenerator;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6.generateNewId()\lr4.formatId = r6.getFormatId()\lr4.output = r5.track(r6.getTrackId(), 2)\lr4.sampleReader = new com.google.android.exoplayer2.extractor.p046ts.H264Reader.SampleReader(r4.output, r4.allowNonIdrKeyframes, r4.detectAccessUnits)\lr4.seiReader.createTracks(r5, r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.H264Reader.createTracks((r4v0 'this' com.google.android.exoplayer2.extractor.ts.H264Reader A[IMMUTABLE_TYPE, THIS]), (r5v0 'extractorOutput' com.google.android.exoplayer2.extractor.ExtractorOutput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'idGenerator' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

