digraph "CFG forcom.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.startNalUnit(JIJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.nalUnitType = r7\lr4.nalUnitTimeUs = r8\lr4.nalUnitStartPosition = r5\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r4.allowNonIdrKeyframes == false) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r4.nalUnitType == 1) goto L_0x0021\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r4.detectAccessUnits == false) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if (r4.nalUnitType == 5) goto L_0x0021\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018}"];
Node_9 [shape=record,label="{9\:\ 0x001a|if (r4.nalUnitType == 1) goto L_0x0021\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c}"];
Node_11 [shape=record,label="{11\:\ 0x001f|if (r4.nalUnitType != 2) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData r0 = r4.previousSliceHeader\lr4.previousSliceHeader = r4.sliceHeader\lr4.sliceHeader = r0\lr4.sliceHeader.clear()\lr4.bufferLength = 0\lr4.isFilling = true\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.startNalUnit((r4v0 'this' com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader A[IMMUTABLE_TYPE, THIS]), (r5v0 'position' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'type' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'pesTimeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
}

