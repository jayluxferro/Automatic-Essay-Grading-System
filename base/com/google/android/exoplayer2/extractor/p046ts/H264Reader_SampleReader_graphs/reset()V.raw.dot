digraph "CFG forcom.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.reset()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  \l  (r0 I:boolean)\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.isFilling boolean \l0x0003: IPUT  \l  (r0 I:boolean)\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.readingSample boolean \l0x0005: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData) = \l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.sliceHeader com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData \l0x0007: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.clear():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.reset((r1 'this' I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

