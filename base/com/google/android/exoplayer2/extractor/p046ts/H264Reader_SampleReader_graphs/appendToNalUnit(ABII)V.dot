digraph "CFG forcom.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.appendToNalUnit([BII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r24.isFilling != false) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|int r20 = r27 \- r26\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|if (r24.buffer.length \>= (r24.bufferLength + r20)) goto L_0x0032\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|r24.buffer = java.util.Arrays.copyOf(r24.buffer, (r24.bufferLength + r20) * 2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|byte[] r4 = r24.buffer\lr21 = r24.bufferLength\ljava.lang.System.arraycopy(r25, r26, r4, r21, r20)\lr24.bufferLength = r24.bufferLength + r20\lcom.google.android.exoplayer2.util.ParsableNalUnitBitArray r4 = r24.bitArray\lr21 = r24.buffer\lr23 = r24.bufferLength\lr4.reset(r21, 0, r23)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0078|if (r24.bitArray.canReadBits(8) == false) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x007a|r24.bitArray.skipBits(1)\lint r6 = r24.bitArray.readBits(2)\lr24.bitArray.skipBits(5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x00a4|if (r24.bitArray.canReadExpGolombCodedNum() == false) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x00a6|r24.bitArray.readUnsignedExpGolombCodedInt()\l}"];
Node_10 [shape=record,label="{10\:\ 0x00b5|if (r24.bitArray.canReadExpGolombCodedNum() == false) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x00b7|int r7 = r24.bitArray.readUnsignedExpGolombCodedInt()\l}"];
Node_12 [shape=record,label="{12\:\ 0x00c3|if (r24.detectAccessUnits != false) goto L_0x00d3\l}"];
Node_13 [shape=record,label="{13\:\ 0x00c5|r24.isFilling = false\lr24.sliceHeader.setSliceType(r7)\l}"];
Node_14 [shape=record,label="{14\:\ 0x00d3}"];
Node_15 [shape=record,label="{15\:\ 0x00db|if (r24.bitArray.canReadExpGolombCodedNum() == false) goto L_?\l}"];
Node_16 [shape=record,label="{16\:\ 0x00dd|int r9 = r24.bitArray.readUnsignedExpGolombCodedInt()\l}"];
Node_17 [shape=record,label="{17\:\ 0x00ed|if (r24.pps.indexOfKey(r9) \>= 0) goto L_0x00f6\l}"];
Node_18 [shape=record,label="{18\:\ 0x00ef|r24.isFilling = false\l}"];
Node_19 [shape=record,label="{19\:\ 0x00f6|com.google.android.exoplayer2.util.NalUnitUtil$PpsData r19 = r24.pps.get(r9)\lcom.google.android.exoplayer2.util.NalUnitUtil$SpsData r5 = r24.sps.get(r19.seqParameterSetId)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0114|if (r5.separateColorPlaneFlag == false) goto L_0x012f\l}"];
Node_21 [shape=record,label="{21\:\ 0x0116}"];
Node_22 [shape=record,label="{22\:\ 0x0122|if (r24.bitArray.canReadBits(2) == false) goto L_?\l}"];
Node_23 [shape=record,label="{23\:\ 0x0124|r24.bitArray.skipBits(2)\l}"];
Node_24 [shape=record,label="{24\:\ 0x012f}"];
Node_25 [shape=record,label="{25\:\ 0x013d|if (r24.bitArray.canReadBits(r5.frameNumLength) == false) goto L_?\l}"];
Node_26 [shape=record,label="{26\:\ 0x013f|r10 = false\lr11 = false\lr12 = false\lint r8 = r24.bitArray.readBits(r5.frameNumLength)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0152|if (r5.frameMbsOnlyFlag != false) goto L_0x0183\l}"];
Node_28 [shape=record,label="{28\:\ 0x0154}"];
Node_29 [shape=record,label="{29\:\ 0x0160|if (r24.bitArray.canReadBits(1) == false) goto L_?\l}"];
Node_30 [shape=record,label="{30\:\ 0x0162|boolean r10 = r24.bitArray.readBit()\l}"];
Node_31 [shape=record,label="{31\:\ 0x016a|if (r10 == false) goto L_0x0183\l}"];
Node_32 [shape=record,label="{32\:\ 0x016c}"];
Node_33 [shape=record,label="{33\:\ 0x0178|if (r24.bitArray.canReadBits(1) == false) goto L_?\l}"];
Node_34 [shape=record,label="{34\:\ 0x017a|boolean r12 = r24.bitArray.readBit()\lr11 = true\l}"];
Node_35 [shape=record,label="{35\:\ 0x0183|PHI: r10 r11 r12 \l  PHI: (r10v1 'fieldPicFlag' boolean) = (r10v0 'fieldPicFlag' boolean), (r10v2 'fieldPicFlag' boolean), (r10v2 'fieldPicFlag' boolean) binds: [B:27:0x0152, B:31:0x016a, B:34:0x017a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 'bottomFieldFlagPresent' boolean) = (r11v0 'bottomFieldFlagPresent' boolean), (r11v0 'bottomFieldFlagPresent' boolean), (r11v2 'bottomFieldFlagPresent' boolean) binds: [B:27:0x0152, B:31:0x016a, B:34:0x017a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 'bottomFieldFlag' boolean) = (r12v0 'bottomFieldFlag' boolean), (r12v0 'bottomFieldFlag' boolean), (r12v2 'bottomFieldFlag' boolean) binds: [B:27:0x0152, B:31:0x016a, B:34:0x017a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x018b|if (r24.nalUnitType != 5) goto L_0x01f4\l}"];
Node_37 [shape=record,label="{37\:\ 0x018d|r13 = true\l}"];
Node_38 [shape=record,label="{38\:\ 0x018e|PHI: r13 \l  PHI: (r13v1 'idrPicFlag' boolean) = (r13v0 'idrPicFlag' boolean), (r13v2 'idrPicFlag' boolean) binds: [B:54:0x01f4, B:37:0x018d] A[DONT_GENERATE, DONT_INLINE]\l|r14 = 0\l}"];
Node_39 [shape=record,label="{39\:\ 0x018f|if (r13 == false) goto L_0x01a3\l}"];
Node_40 [shape=record,label="{40\:\ 0x0191}"];
Node_41 [shape=record,label="{41\:\ 0x0199|if (r24.bitArray.canReadExpGolombCodedNum() == false) goto L_?\l}"];
Node_42 [shape=record,label="{42\:\ 0x019b|int r14 = r24.bitArray.readUnsignedExpGolombCodedInt()\l}"];
Node_43 [shape=record,label="{43\:\ 0x01a3|PHI: r14 \l  PHI: (r14v1 'idrPicId' int) = (r14v0 'idrPicId' int), (r14v2 'idrPicId' int) binds: [B:39:0x018f, B:42:0x019b] A[DONT_GENERATE, DONT_INLINE]\l|r15 = 0\lr16 = 0\lr17 = 0\lr18 = 0\l}"];
Node_44 [shape=record,label="{44\:\ 0x01ac|if (r5.picOrderCountType != 0) goto L_0x01f6\l}"];
Node_45 [shape=record,label="{45\:\ 0x01ae}"];
Node_46 [shape=record,label="{46\:\ 0x01bc|if (r24.bitArray.canReadBits(r5.picOrderCntLsbLength) == false) goto L_?\l}"];
Node_47 [shape=record,label="{47\:\ 0x01be|int r15 = r24.bitArray.readBits(r5.picOrderCntLsbLength)\l}"];
Node_48 [shape=record,label="{48\:\ 0x01d0|if (r19.bottomFieldPicOrderInFramePresentFlag == false) goto L_0x01e6\l}"];
Node_49 [shape=record,label="{49\:\ 0x01d2|if (r10 != false) goto L_0x01e6\l}"];
Node_50 [shape=record,label="{50\:\ 0x01d4}"];
Node_51 [shape=record,label="{51\:\ 0x01dc|if (r24.bitArray.canReadExpGolombCodedNum() == false) goto L_?\l}"];
Node_52 [shape=record,label="{52\:\ 0x01de|int r16 = r24.bitArray.readSignedExpGolombCodedInt()\l}"];
Node_53 [shape=record,label="{53\:\ 0x01e6|PHI: r15 r16 r17 r18 \l  PHI: (r15v1 'picOrderCntLsb' int) = (r15v0 'picOrderCntLsb' int), (r15v0 'picOrderCntLsb' int), (r15v0 'picOrderCntLsb' int), (r15v0 'picOrderCntLsb' int), (r15v0 'picOrderCntLsb' int), (r15v2 'picOrderCntLsb' int), (r15v2 'picOrderCntLsb' int), (r15v2 'picOrderCntLsb' int) binds: [B:56:0x01fc, B:58:0x0200, B:62:0x0218, B:63:0x021a, B:66:0x0226, B:48:0x01d0, B:49:0x01d2, B:52:0x01de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r16v1 'deltaPicOrderCntBottom' int) = (r16v0 'deltaPicOrderCntBottom' int), (r16v0 'deltaPicOrderCntBottom' int), (r16v0 'deltaPicOrderCntBottom' int), (r16v0 'deltaPicOrderCntBottom' int), (r16v0 'deltaPicOrderCntBottom' int), (r16v0 'deltaPicOrderCntBottom' int), (r16v0 'deltaPicOrderCntBottom' int), (r16v2 'deltaPicOrderCntBottom' int) binds: [B:56:0x01fc, B:58:0x0200, B:62:0x0218, B:63:0x021a, B:66:0x0226, B:48:0x01d0, B:49:0x01d2, B:52:0x01de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v2 'deltaPicOrderCnt0' int) = (r17v0 'deltaPicOrderCnt0' int), (r17v0 'deltaPicOrderCnt0' int), (r17v1 'deltaPicOrderCnt0' int), (r17v1 'deltaPicOrderCnt0' int), (r17v1 'deltaPicOrderCnt0' int), (r17v0 'deltaPicOrderCnt0' int), (r17v0 'deltaPicOrderCnt0' int), (r17v0 'deltaPicOrderCnt0' int) binds: [B:56:0x01fc, B:58:0x0200, B:62:0x0218, B:63:0x021a, B:66:0x0226, B:48:0x01d0, B:49:0x01d2, B:52:0x01de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v2 'deltaPicOrderCnt1' int) = (r18v0 'deltaPicOrderCnt1' int), (r18v0 'deltaPicOrderCnt1' int), (r18v0 'deltaPicOrderCnt1' int), (r18v0 'deltaPicOrderCnt1' int), (r18v1 'deltaPicOrderCnt1' int), (r18v0 'deltaPicOrderCnt1' int), (r18v0 'deltaPicOrderCnt1' int), (r18v0 'deltaPicOrderCnt1' int) binds: [B:56:0x01fc, B:58:0x0200, B:62:0x0218, B:63:0x021a, B:66:0x0226, B:48:0x01d0, B:49:0x01d2, B:52:0x01de] A[DONT_GENERATE, DONT_INLINE]\l|r24.sliceHeader.setAll(r5, r6, r7, r8, r9, r10, r11, r12, r13, r14, r15, r16, r17, r18)\lr24.isFilling = false\l}"];
Node_54 [shape=record,label="{54\:\ 0x01f4|r13 = false\l}"];
Node_55 [shape=record,label="{55\:\ 0x01f6}"];
Node_56 [shape=record,label="{56\:\ 0x01fc|if (r5.picOrderCountType != 1) goto L_0x01e6\l}"];
Node_57 [shape=record,label="{57\:\ 0x01fe}"];
Node_58 [shape=record,label="{58\:\ 0x0200|if (r5.deltaPicOrderAlwaysZeroFlag != false) goto L_0x01e6\l}"];
Node_59 [shape=record,label="{59\:\ 0x0202}"];
Node_60 [shape=record,label="{60\:\ 0x020a|if (r24.bitArray.canReadExpGolombCodedNum() == false) goto L_?\l}"];
Node_61 [shape=record,label="{61\:\ 0x020c|int r17 = r24.bitArray.readSignedExpGolombCodedInt()\l}"];
Node_62 [shape=record,label="{62\:\ 0x0218|if (r19.bottomFieldPicOrderInFramePresentFlag == false) goto L_0x01e6\l}"];
Node_63 [shape=record,label="{63\:\ 0x021a|if (r10 != false) goto L_0x01e6\l}"];
Node_64 [shape=record,label="{64\:\ 0x021c}"];
Node_65 [shape=record,label="{65\:\ 0x0224|if (r24.bitArray.canReadExpGolombCodedNum() == false) goto L_?\l}"];
Node_66 [shape=record,label="{66\:\ 0x0226|int r18 = r24.bitArray.readSignedExpGolombCodedInt()\l}"];
Node_67 [shape=record,label="{67\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_68 [shape=record,label="{68\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_69 [shape=record,label="{69\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_70 [shape=record,label="{70\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_71 [shape=record,label="{71\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_72 [shape=record,label="{72\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_73 [shape=record,label="{73\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_74 [shape=record,label="{74\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_75 [shape=record,label="{75\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_76 [shape=record,label="{76\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_77 [shape=record,label="{77\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_78 [shape=record,label="{78\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_79 [shape=record,label="{79\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_80 [shape=record,label="{80\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_81 [shape=record,label="{81\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_82 [shape=record,label="{82\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_83 [shape=record,label="{83\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.appendToNalUnit((r24v0 'this' com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader A[IMMUTABLE_TYPE, THIS]), (r25v0 'data' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 'offset' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 'limit' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_67[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_68;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_69;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_70;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_71;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_72;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_73;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_74;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_75;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_35;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_76;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_77;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_54;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_43;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_78;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_55;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_79;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_53;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_53;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_80;
Node_52 -> Node_53;
Node_53 -> Node_81;
Node_54 -> Node_38;
Node_55 -> Node_56;
Node_56 -> Node_53;
Node_56 -> Node_57[style=dashed];
Node_57 -> Node_58;
Node_58 -> Node_53;
Node_58 -> Node_59[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_82;
Node_61 -> Node_62;
Node_62 -> Node_53;
Node_62 -> Node_63[style=dashed];
Node_63 -> Node_53;
Node_63 -> Node_64[style=dashed];
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_83;
Node_66 -> Node_53;
}

