digraph "CFG forcom.google.android.exoplayer2.extractor.ts.AdtsReader.\<init\>(ZLjava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) =  com.google.android.exoplayer2.util.ParsableBitArray \l0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x0006: NEW_ARRAY  (r1 I:byte[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0008: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r1 I:byte[])\l com.google.android.exoplayer2.util.ParsableBitArray.\<init\>(byte[]):void type: DIRECT \l0x000b: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r3 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.adtsScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x000d: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x000f: SGET  (r1 I:byte[]) =  com.google.android.exoplayer2.extractor.ts.AdtsReader.ID3_IDENTIFIER byte[] \l0x0011: CONST  (r2 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0013: INVOKE  (r1 I:byte[]) = (r1 I:byte[]), (r2 I:int) java.util.Arrays.copyOf(byte[], int):byte[] type: STATIC \l0x0017: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:byte[])\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(byte[]):void type: DIRECT \l0x001a: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r3 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.id3HeaderBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x001c: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.setFindingSampleState():void type: DIRECT \l0x001f: IPUT  \l  (r4 I:boolean A[D('exposeId3' boolean)])\l  (r3 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.exposeId3 boolean \l0x0021: IPUT  \l  (r5 I:java.lang.String A[D('language' java.lang.String)])\l  (r3 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.language java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0023|0x0023: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.AdtsReader.\<init\>((r3 'this' I:com.google.android.exoplayer2.extractor.ts.AdtsReader A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[D('exposeId3' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[D('language' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0023: r4 'exposeId3' boolean\l  ?\-0x0023: r5 'language' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

