digraph "CFG forcom.google.android.exoplayer2.extractor.ts.AdtsReader.findNextSample(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (512(0x200, float:7.175E\-43) ?[int, float, short, byte, char])\l \l0x0002: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (256(0x100, float:3.59E\-43) ?[int, float, short, byte, char])\l \l0x0004: IGET  (r0 I:byte[]) = \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('pesBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0006: INVOKE  (r3 I:int) = \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('pesBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x000a: INVOKE  (r2 I:int) = \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('pesBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x000e: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r4 I:?[int, byte, short, char] A[D('position' int)]) \>= (r2 I:?[int, byte, short, char] A[D('endOffset' int)])  \-\> B:24:0x0057 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: ARITH  (r3 I:int) = (r4 I:int A[D('position' int)]) + (1 int) \l0x0013: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[D('adtsData' byte[]), IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char] A[D('position' int)])\l \l0x0015: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0017: IGET  (r5 I:int) = \l  (r8 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.matchState int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (240(0xf0, float:3.36E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IF  (r1 I:?[int, byte, short, char] A[D('data' int)]) \< (r5 I:?[int, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('data' int)]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char] A[D('data' int)]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0031 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: IPUT  \l  (r5 I:boolean)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.hasCrc boolean \l0x002a: INVOKE  \l  (r8 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.setReadingAdtsHeaderState():void type: DIRECT \l0x002d: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('pesBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r3 I:int A[D('position' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: IGET  (r5 I:int) = \l  (r8 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.matchState int \l0x0035: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char] A[D('data' int)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: SWITCH  \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[329, 511, 836, 1075] t:[0x0046, 0x0043, 0x004b, 0x0050] \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: IGET  (r5 I:int) = \l  (r8 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.matchState int \l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|0x003b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0041 \l}"];
Node_18 [shape=record,label="{18\:\ 0x003d|0x003d: IPUT  \l  (r6 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.matchState int \l0x003f: ARITH  (r3 I:int A[D('position' int)]) = (r3 I:int A[D('position' int)]) + (\-1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|0x0041: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0043|0x0043: IPUT  \l  (r7 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.matchState int \l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|0x0046: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (768(0x300, float:1.076E\-42) ?[int, float, short, byte, char])\l \l0x0048: IPUT  \l  (r5 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.matchState int \l}"];
Node_22 [shape=record,label="{22\:\ 0x004b|0x004b: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1024(0x400, float:1.435E\-42) ?[int, float, short, byte, char])\l \l0x004d: IPUT  \l  (r5 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.matchState int \l}"];
Node_23 [shape=record,label="{23\:\ 0x0050|0x0050: INVOKE  \l  (r8 I:com.google.android.exoplayer2.extractor.ts.AdtsReader)\l com.google.android.exoplayer2.extractor.ts.AdtsReader.setReadingId3HeaderState():void type: DIRECT \l0x0053: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('pesBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r3 I:int A[D('position' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0057|0x0057: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('pesBuffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r4 I:int A[D('position' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x005a: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)])\l \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.ts.AdtsReader.findNextSample((r8 'this' I:com.google.android.exoplayer2.extractor.ts.AdtsReader A[IMMUTABLE_TYPE, THIS]), (r9 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('pesBuffer' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000a\-0x000f: r3 'position' int\l  0x000f\-0x0013: r4 'position' int\l  0x0017\-0x0030: r1 'data' int\l  0x0013\-0x0042: r3 'position' int\l  0x0042\-0x0043: r4 'position' int\l  0x0031\-0x0057: r1 'data' int\l  0x0043\-0x0057: r3 'position' int\l  0x0057\-0x005b: r4 'position' int\l  0x0006\-0x006d: r0 'adtsData' byte[]\l  0x000e\-0x006d: r2 'endOffset' int\l  0x005b\-0x006d: r3 'position' int\l  ?\-0x006d: r9 'pesBuffer' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_24;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_20;
Node_15 -> Node_21;
Node_15 -> Node_22;
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_1;
Node_20 -> Node_19;
Node_21 -> Node_19;
Node_22 -> Node_19;
Node_23 -> Node_12;
Node_24 -> Node_12;
}

