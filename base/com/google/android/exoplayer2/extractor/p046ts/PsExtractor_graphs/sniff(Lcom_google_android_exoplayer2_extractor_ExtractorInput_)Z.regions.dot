digraph "CFG forcom.google.android.exoplayer2.extractor.ts.PsExtractor.sniff(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
subgraph cluster_Region_52522064 {
label = "R(2:0|(2:(1:21)|(3:12|(1:15)|22)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r2 = true\lbyte[] byte[] r1 = new byte[14]\lr11.peekFully(r1, 0, 14)\l}"];
subgraph cluster_Region_1379922076 {
label = "R(2:(1:21)|(3:12|(1:15)|22))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1445245781 {
label = "IF [B:1:0x0029, B:3:0x0032, B:5:0x0039, B:7:0x0041, B:9:0x0049, B:11:0x0051] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0029|if (PACK_START_CODE != (((r1[0] & 255) \<\< 24) \| ((r1[1] & 255) \<\< 16) \| ((r1[2] & 255) \<\< 8) \| (r1[3] & 255))) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x0032|ADDED_TO_REGION\l|if ((r1[4] & 196) != 68) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x0039|ADDED_TO_REGION\l|if ((r1[6] & 4) != 4) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x0041|ADDED_TO_REGION\l|if ((r1[8] & 4) != 4) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0049|ADDED_TO_REGION\l|if ((r1[9] & 1) != 1) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0051|ADDED_TO_REGION\l|if ((r1[12] & 3) != 3) goto L_?\l}"];
subgraph cluster_Region_2118450051 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_226779852 {
label = "R(3:12|(1:15)|22)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0053|r11.advancePeekPosition(r1[13] & 7)\lr11.peekFully(r1, 0, 3)\l}"];
subgraph cluster_IfRegion_1592722989 {
label = "IF [B:13:0x0071] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0071|if (1 != (((r1[0] & 255) \<\< 16) \| ((r1[1] & 255) \<\< 8) \| (r1[2] & 255))) goto L_0x0075\l}"];
subgraph cluster_Region_1126440824 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0075|r2 = false\l}"];
}
}
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x002c}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0034}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x003b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0043}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x004b}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0073|PHI: r2 \l  PHI: (r2v2 boolean) = (r2v0 boolean), (r2v1 boolean) binds: [B:13:0x0071, B:15:0x0075] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return false\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.ts.PsExtractor.sniff((r10v0 'this' com.google.android.exoplayer2.extractor.ts.PsExtractor A[IMMUTABLE_TYPE, THIS]), (r11v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_19;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_14;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_14 -> Node_22;
}

