digraph "CFG forcom.google.android.exoplayer2.extractor.ts.PsExtractor.read(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;Lcom\/google\/android\/exoplayer2\/extractor\/PositionHolder;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0002: IGET  (r9 I:byte[]) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0004: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r11 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0006: CONST  (r12 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: INVOKE  (r9 I:boolean) = \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r9 I:byte[])\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:boolean)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int, boolean):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: CONST  (r9 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  (r9 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0011: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0015: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0017: INVOKE  (r2 I:int) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x001b: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (441(0x1b9, float:6.18E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nextStartCode' int)]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0021 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: CONST  (r9 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (442(0x1ba, float:6.2E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nextStartCode' int)]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0045 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0027: IGET  (r9 I:byte[]) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0029: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002a: CONST  (r11 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x002c: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r9 I:byte[])\l  (r10 I:int)\l  (r11 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x002f: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0031: CONST  (r10 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0033: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0036: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0038: INVOKE  (r9 I:int) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x003c: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r9 I:?[int, boolean, short, byte, char]) & (7 ?[int, float, short, byte, char]) \l0x003e: ARITH  (r9 I:int) = (r3 I:int A[D('packStuffingLength' int)]) + (14 int) \l0x0040: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.skipFully(int):void type: INTERFACE \l0x0043: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|0x0045: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (443(0x1bb, float:6.21E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nextStartCode' int)]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0065 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|0x0049: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x004b: IGET  (r9 I:byte[]) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x004d: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004e: CONST  (r11 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x004f: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r9 I:byte[])\l  (r10 I:int)\l  (r11 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x0052: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0054: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0055: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0058: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x005a: INVOKE  (r8 I:int) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x005e: ARITH  (r9 I:int) = (r8 I:int A[D('systemHeaderLength' int)]) + (6 int) \l0x0060: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.skipFully(int):void type: INTERFACE \l0x0063: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0065|0x0065: ARITH  (r9 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char] A[D('nextStartCode' int)]) & (\-256(0xffffffffffffff00, float:NaN) ?[int, float, short, byte, char]) \l0x0067: ARITH  (r9 I:int) = (r9 I:int) \>\> (8 int) \l0x0069: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x006a|0x006a: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0072 \l}"];
Node_15 [shape=record,label="{15\:\ 0x006c|0x006c: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x006d: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.skipFully(int):void type: INTERFACE \l0x0070: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0072|0x0072: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char] A[D('nextStartCode' int)]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0074: IGET  (r9 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader\>) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPayloadReaders android.util.SparseArray \l0x0076: INVOKE  (r5 I:java.lang.Object) = \l  (r9 I:android.util.SparseArray)\l  (r7 I:int A[D('streamId' int)])\l android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x007a: CHECK_CAST  (r5 I:com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader) = (com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader) (r5 I:?[OBJECT, ARRAY]) \l0x007c: IGET  (r9 I:boolean) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.foundAllTracks boolean \l}"];
Node_17 [shape=record,label="{17\:\ 0x007e|0x007e: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00c8 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0080|0x0080: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('payloadReader' com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x00ad \l}"];
Node_19 [shape=record,label="{19\:\ 0x0082|0x0082: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0083: IGET  (r9 I:boolean) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.foundAudioTrack boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x0085|0x0085: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x00e7 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0087|0x0087: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (189(0xbd, float:2.65E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0089|0x0089: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('streamId' int)]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x00e7 \l}"];
Node_23 [shape=record,label="{23\:\ 0x008b|0x008b: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader A[D('elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader)]) =  com.google.android.exoplayer2.extractor.ts.Ac3Reader \l0x008d: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.Ac3Reader A[D('elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader)])\l com.google.android.exoplayer2.extractor.ts.Ac3Reader.\<init\>():void type: DIRECT \l0x0090: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0091: IPUT  \l  (r9 I:boolean)\l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.foundAudioTrack boolean \l}"];
Node_24 [shape=record,label="{24\:\ 0x0093|0x0093: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x00ad \l}"];
Node_25 [shape=record,label="{25\:\ 0x0095|0x0095: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator) =  com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator \l0x0097: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (256(0x100, float:3.59E\-43) ?[int, float, short, byte, char])\l \l0x0099: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)\l  (r7 I:int A[D('streamId' int)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator.\<init\>(int, int):void type: DIRECT \l0x009c: IGET  (r9 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.output com.google.android.exoplayer2.extractor.ExtractorOutput \l0x009e: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader A[D('elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader)])\l  (r9 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l  (r1 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator A[D('idGenerator' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)])\l com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader.createTracks(com.google.android.exoplayer2.extractor.ExtractorOutput, com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator):void type: INTERFACE \l0x00a1: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader A[D('payloadReader' com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader)]) =  com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader \l0x00a3: IGET  (r9 I:com.google.android.exoplayer2.util.TimestampAdjuster) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.timestampAdjuster com.google.android.exoplayer2.util.TimestampAdjuster \l0x00a5: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader A[D('elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader)])\l  (r9 I:com.google.android.exoplayer2.util.TimestampAdjuster)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.PesReader.\<init\>(com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader, com.google.android.exoplayer2.util.TimestampAdjuster):void type: DIRECT \l0x00a8: IGET  (r9 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader\>) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPayloadReaders android.util.SparseArray \l0x00aa: INVOKE  \l  (r9 I:android.util.SparseArray)\l  (r7 I:int A[D('streamId' int)])\l  (r5 I:java.lang.Object A[D('payloadReader' com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader)])\l android.util.SparseArray.put(int, java.lang.Object):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x00ad|0x00ad: IGET  (r9 I:boolean) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.foundAudioTrack boolean \l}"];
Node_27 [shape=record,label="{27\:\ 0x00af|0x00af: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00b5 \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b1|0x00b1: IGET  (r9 I:boolean) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.foundVideoTrack boolean \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b3|0x00b3: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00c0 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b5|0x00b5: INVOKE  (r10 I:long) = \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.getPosition():long type: INTERFACE \l0x00b9: CONST  (r12 I:?[long, double]) = (1048576(0x100000, double:5.180654E\-318) ?[long, double]) \l0x00bc: CMP_L  (r9 I:int) = (r10 I:long), (r12 I:long) \l}"];
Node_31 [shape=record,label="{31\:\ 0x00be|0x00be: IF  (r9 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:33:0x00c8 \l}"];
Node_32 [shape=record,label="{32\:\ 0x00c0|0x00c0: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00c1: IPUT  \l  (r9 I:boolean)\l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.foundAllTracks boolean \l0x00c3: IGET  (r9 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.output com.google.android.exoplayer2.extractor.ExtractorOutput \l0x00c5: INVOKE  \l  (r9 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l com.google.android.exoplayer2.extractor.ExtractorOutput.endTracks():void type: INTERFACE \l}"];
Node_33 [shape=record,label="{33\:\ 0x00c8|0x00c8: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x00ca: IGET  (r9 I:byte[]) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x00cc: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00cd: CONST  (r11 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x00ce: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r9 I:byte[])\l  (r10 I:int)\l  (r11 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x00d1: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x00d3: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d4: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x00d7: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x00d9: INVOKE  (r4 I:int) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x00dd: ARITH  (r6 I:int) = (r4 I:int A[D('payloadLength' int)]) + (6 int) \l}"];
Node_34 [shape=record,label="{34\:\ 0x00df|0x00df: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('payloadReader' com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x010d \l}"];
Node_35 [shape=record,label="{35\:\ 0x00e1|0x00e1: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r6 I:int A[D('pesLength' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.skipFully(int):void type: INTERFACE \l}"];
Node_36 [shape=record,label="{36\:\ 0x00e4|0x00e4: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x00e7|0x00e7: IGET  (r9 I:boolean) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.foundAudioTrack boolean \l}"];
Node_38 [shape=record,label="{38\:\ 0x00e9|0x00e9: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x00fa \l}"];
Node_39 [shape=record,label="{39\:\ 0x00eb|0x00eb: ARITH  (r9 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char] A[D('streamId' int)]) & (224(0xe0, float:3.14E\-43) ?[int, float, short, byte, char]) \l0x00ed: CONST  (r10 I:?[int, float, short, byte, char]) = \l  (192(0xc0, float:2.69E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_40 [shape=record,label="{40\:\ 0x00ef|0x00ef: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x00fa \l}"];
Node_41 [shape=record,label="{41\:\ 0x00f1|0x00f1: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.ts.MpegAudioReader A[D('elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader)]) =  com.google.android.exoplayer2.extractor.ts.MpegAudioReader \l0x00f3: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.MpegAudioReader A[D('elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader)])\l com.google.android.exoplayer2.extractor.ts.MpegAudioReader.\<init\>():void type: DIRECT \l0x00f6: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00f7: IPUT  \l  (r9 I:boolean)\l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.foundAudioTrack boolean \l}"];
Node_42 [shape=record,label="{42\:\ 0x00fa|0x00fa: IGET  (r9 I:boolean) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.foundVideoTrack boolean \l}"];
Node_43 [shape=record,label="{43\:\ 0x00fc|0x00fc: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0093 \l}"];
Node_44 [shape=record,label="{44\:\ 0x00fe|0x00fe: ARITH  (r9 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char] A[D('streamId' int)]) & (240(0xf0, float:3.36E\-43) ?[int, float, short, byte, char]) \l0x0100: CONST  (r10 I:?[int, float, short, byte, char]) = \l  (224(0xe0, float:3.14E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_45 [shape=record,label="{45\:\ 0x0102|0x0102: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0093 \l}"];
Node_46 [shape=record,label="{46\:\ 0x0104|0x0104: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader A[D('elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader)]) =  com.google.android.exoplayer2.extractor.ts.H262Reader \l0x0106: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader A[D('elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader)])\l com.google.android.exoplayer2.extractor.ts.H262Reader.\<init\>():void type: DIRECT \l0x0109: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x010a: IPUT  \l  (r9 I:boolean)\l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.foundVideoTrack boolean \l}"];
Node_47 [shape=record,label="{47\:\ 0x010d|0x010d: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x010f: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int A[D('pesLength' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.reset(int):void type: VIRTUAL \l0x0112: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0114: IGET  (r9 I:byte[]) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0116: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0117: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r9 I:byte[])\l  (r10 I:int)\l  (r6 I:int A[D('pesLength' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.readFully(byte[], int, int):void type: INTERFACE \l0x011a: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x011c: CONST  (r10 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x011d: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0120: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0122: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader A[D('payloadReader' com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader)])\l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.PesReader.consume(com.google.android.exoplayer2.util.ParsableByteArray):void type: VIRTUAL \l0x0125: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0127: IGET  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r14 I:com.google.android.exoplayer2.extractor.ts.PsExtractor)\l com.google.android.exoplayer2.extractor.ts.PsExtractor.psPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0129: INVOKE  (r10 I:int) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray)\l com.google.android.exoplayer2.util.ParsableByteArray.capacity():int type: VIRTUAL \l0x012d: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setLimit(int):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.extractor.ts.PsExtractor.read((r14 'this' I:com.google.android.exoplayer2.extractor.ts.PsExtractor A[IMMUTABLE_TYPE, THIS]), (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:com.google.android.exoplayer2.extractor.PositionHolder A[D('seekPosition' com.google.android.exoplayer2.extractor.PositionHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x003e\-0x0045: r3 'packStuffingLength' int\l  0x005e\-0x0065: r8 'systemHeaderLength' int\l  0x0083\-0x008d: r0 'elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader\l  0x007c\-0x00a3: r5 'payloadReader' com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader\l  0x0090\-0x00ad: r0 'elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader\l  0x009c\-0x00ad: r1 'idGenerator' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator\l  0x00dd\-0x00e7: r4 'payloadLength' int\l  0x00df\-0x00e7: r6 'pesLength' int\l  0x00e7\-0x00f3: r0 'elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader\l  0x00f6\-0x0106: r0 'elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader\l  0x0109\-0x010d: r0 'elementaryStreamReader' com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader\l  0x001b\-0x0130: r2 'nextStartCode' int\l  0x010d\-0x0130: r4 'payloadLength' int\l  0x00a8\-0x0130: r5 'payloadReader' com.google.android.exoplayer2.extractor.ts.PsExtractor$PesReader\l  0x010d\-0x0130: r6 'pesLength' int\l  0x0074\-0x0130: r7 'streamId' int\l  ?\-0x0130: r15 'input' com.google.android.exoplayer2.extractor.ExtractorInput\l  ?\-0x0130: r16 'seekPosition' com.google.android.exoplayer2.extractor.PositionHolder\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_3;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_3;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_3;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_33;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_37;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_37;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_47;
Node_35 -> Node_36;
Node_36 -> Node_3;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_42;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_24;
Node_42 -> Node_43;
Node_43 -> Node_24;
Node_43 -> Node_44[style=dashed];
Node_44 -> Node_45;
Node_45 -> Node_24;
Node_45 -> Node_46[style=dashed];
Node_46 -> Node_24;
Node_47 -> Node_36;
}

