digraph "CFG forcom.google.android.exoplayer2.extractor.ts.PesReader.parseHeader()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0002: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST  (r6 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0005: IGET  (r4 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0007: INVOKE  \l  (r4 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.setPosition(int):void type: VIRTUAL \l0x000a: IGET  (r4 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x000c: CONST  (r5 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x000e: INVOKE  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('startCodePrefix' int)]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x002f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: CONST_STR  (r3 I:java.lang.String) =  \"PesReader\" \l0x0016: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0018: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001b: CONST_STR  (r5 I:java.lang.String) =  \"Unexpected start code prefix: \" \l0x001d: INVOKE  (r4 I:java.lang.StringBuilder) = (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0021: INVOKE  (r4 I:java.lang.StringBuilder) = \l  (r4 I:java.lang.StringBuilder)\l  (r1 I:int A[D('startCodePrefix' int)])\l java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0029: INVOKE  (r3 I:java.lang.String), (r4 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l0x002c: IPUT  \l  (r6 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader)\l com.google.android.exoplayer2.extractor.ts.PesReader.payloadSize int \l}"];
Node_3 [shape=record,label="{3\:\ 0x002e|0x002e: RETURN  (r2 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0031: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r7 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x0034: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0036: CONST  (r4 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0038: INVOKE  (r0 I:int) = \l  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x003c: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x003e: CONST  (r4 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x003f: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x0042: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0044: INVOKE  (r2 I:boolean) = (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) com.google.android.exoplayer2.util.ParsableBitArray.readBit():boolean type: VIRTUAL \l0x0048: IPUT  \l  (r2 I:boolean)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader)\l com.google.android.exoplayer2.extractor.ts.PesReader.dataAlignmentIndicator boolean \l0x004a: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x004c: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x004d: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x0050: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0052: INVOKE  (r2 I:boolean) = (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) com.google.android.exoplayer2.util.ParsableBitArray.readBit():boolean type: VIRTUAL \l0x0056: IPUT  \l  (r2 I:boolean)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader)\l com.google.android.exoplayer2.extractor.ts.PesReader.ptsFlag boolean \l0x0058: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x005a: INVOKE  (r2 I:boolean) = (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) com.google.android.exoplayer2.util.ParsableBitArray.readBit():boolean type: VIRTUAL \l0x005e: IPUT  \l  (r2 I:boolean)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader)\l com.google.android.exoplayer2.extractor.ts.PesReader.dtsFlag boolean \l0x0060: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0062: CONST  (r4 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0063: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x0066: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.pesScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0068: INVOKE  (r2 I:int) = \l  (r2 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r7 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x006c: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader)\l com.google.android.exoplayer2.extractor.ts.PesReader.extendedHeaderLength int \l}"];
Node_5 [shape=record,label="{5\:\ 0x006e|0x006e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('packetLength' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0074 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0070|0x0070: IPUT  \l  (r6 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader)\l com.google.android.exoplayer2.extractor.ts.PesReader.payloadSize int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0072|0x0072: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0074|0x0074: ARITH  (r2 I:int) = (r0 I:int A[D('packetLength' int)]) + (6 int) \l0x0076: ARITH  (r2 I:int) = (r2 I:int) + (\-9 int) \l0x0078: IGET  (r4 I:int) = (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader) com.google.android.exoplayer2.extractor.ts.PesReader.extendedHeaderLength int \l0x007a: ARITH  (r2 I:int) = (r2 I:int) \- (r4 I:int) \l0x007b: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.PesReader)\l com.google.android.exoplayer2.extractor.ts.PesReader.payloadSize int \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.extractor.ts.PesReader.parseHeader((r8 'this' I:com.google.android.exoplayer2.extractor.ts.PesReader A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x003c\-0x007d: r0 'packetLength' int\l  0x0012\-0x007d: r1 'startCodePrefix' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_3;
Node_8 -> Node_7;
}

