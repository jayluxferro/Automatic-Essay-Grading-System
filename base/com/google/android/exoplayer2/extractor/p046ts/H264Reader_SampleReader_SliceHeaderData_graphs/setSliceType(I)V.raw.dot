digraph "CFG forcom.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.setSliceType(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r2 I:int A[D('sliceType' int)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.sliceType int \l0x0002: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: IPUT  \l  (r0 I:boolean)\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.hasSliceType boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.setSliceType((r1 'this' I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('sliceType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0005: r2 'sliceType' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

