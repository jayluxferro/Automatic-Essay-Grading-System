digraph "CFG forcom.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.setAll(Lcom\/google\/android\/exoplayer2\/util\/NalUnitUtil$SpsData;IIIIZZZZIIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: IPUT  \l  (r2 I:com.google.android.exoplayer2.util.NalUnitUtil$SpsData A[D('spsData' com.google.android.exoplayer2.util.NalUnitUtil$SpsData)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.spsData com.google.android.exoplayer2.util.NalUnitUtil$SpsData \l0x0003: IPUT  \l  (r3 I:int A[D('nalRefIdc' int)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.nalRefIdc int \l0x0005: IPUT  \l  (r4 I:int A[D('sliceType' int)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.sliceType int \l0x0007: IPUT  \l  (r5 I:int A[D('frameNum' int)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.frameNum int \l0x0009: IPUT  \l  (r6 I:int A[D('picParameterSetId' int)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.picParameterSetId int \l0x000b: IPUT  \l  (r7 I:boolean A[D('fieldPicFlag' boolean)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.fieldPicFlag boolean \l0x000d: IPUT  \l  (r8 I:boolean A[D('bottomFieldFlagPresent' boolean)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.bottomFieldFlagPresent boolean \l0x000f: IPUT  \l  (r9 I:boolean A[D('bottomFieldFlag' boolean)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.bottomFieldFlag boolean \l0x0011: IPUT  \l  (r10 I:boolean A[D('idrPicFlag' boolean)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.idrPicFlag boolean \l0x0013: IPUT  \l  (r11 I:int A[D('idrPicId' int)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.idrPicId int \l0x0015: IPUT  \l  (r12 I:int A[D('picOrderCntLsb' int)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.picOrderCntLsb int \l0x0017: IPUT  \l  (r13 I:int A[D('deltaPicOrderCntBottom' int)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.deltaPicOrderCntBottom int \l0x0019: IPUT  \l  (r14 I:int A[D('deltaPicOrderCnt0' int)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.deltaPicOrderCnt0 int \l0x001b: IPUT  \l  (r15 I:int A[D('deltaPicOrderCnt1' int)])\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.deltaPicOrderCnt1 int \l0x001d: IPUT  \l  (r0 I:boolean)\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.isComplete boolean \l0x001f: IPUT  \l  (r0 I:boolean)\l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.hasSliceType boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.setAll((r1 'this' I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.android.exoplayer2.util.NalUnitUtil$SpsData A[D('spsData' com.google.android.exoplayer2.util.NalUnitUtil$SpsData), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('nalRefIdc' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('sliceType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('frameNum' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('picParameterSetId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('fieldPicFlag' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[D('bottomFieldFlagPresent' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('bottomFieldFlag' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[D('idrPicFlag' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('idrPicId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('picOrderCntLsb' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('deltaPicOrderCntBottom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('deltaPicOrderCnt0' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('deltaPicOrderCnt1' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0021: r2 'spsData' com.google.android.exoplayer2.util.NalUnitUtil$SpsData\l  ?\-0x0021: r3 'nalRefIdc' int\l  ?\-0x0021: r4 'sliceType' int\l  ?\-0x0021: r5 'frameNum' int\l  ?\-0x0021: r6 'picParameterSetId' int\l  ?\-0x0021: r7 'fieldPicFlag' boolean\l  ?\-0x0021: r8 'bottomFieldFlagPresent' boolean\l  ?\-0x0021: r9 'bottomFieldFlag' boolean\l  ?\-0x0021: r10 'idrPicFlag' boolean\l  ?\-0x0021: r11 'idrPicId' int\l  ?\-0x0021: r12 'picOrderCntLsb' int\l  ?\-0x0021: r13 'deltaPicOrderCntBottom' int\l  ?\-0x0021: r14 'deltaPicOrderCnt0' int\l  ?\-0x0021: r15 'deltaPicOrderCnt1' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

