digraph "CFG forcom.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.access$100(Lcom\/google\/android\/exoplayer2\/extractor\/ts\/H264Reader$SampleReader$SliceHeaderData;Lcom\/google\/android\/exoplayer2\/extractor\/ts\/H264Reader$SampleReader$SliceHeaderData;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData A[D('x0' com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)])\l  (r2 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData A[D('x1' com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData)])\l com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.isFirstVclNalUnitOfPicture(com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ boolean com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData.access$100((r1 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData A[D('x0' com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData A[D('x1' com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0004: r1 'x0' com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData\l  ?\-0x0004: r2 'x1' com.google.android.exoplayer2.extractor.ts.H264Reader$SampleReader$SliceHeaderData\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

