digraph "CFG forcom.google.android.exoplayer2.extractor.ts.AdtsExtractor.sniff(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r13 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0002: CONST  (r12 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0003: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0006: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r13 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x0009: NEW_INSTANCE  (r4 I:com.google.android.exoplayer2.util.ParsableBitArray) =  com.google.android.exoplayer2.util.ParsableBitArray \l0x000b: IGET  (r10 I:byte[]) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x000d: INVOKE  \l  (r4 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r10 I:byte[])\l com.google.android.exoplayer2.util.ParsableBitArray.\<init\>(byte[]):void type: DIRECT \l0x0010: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IGET  (r10 I:byte[]) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0013: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r10 I:byte[])\l  (r9 I:int)\l  (r13 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x0016: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0019: INVOKE  (r10 I:int) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt24():int type: VIRTUAL \l0x001d: SGET  (r11 I:int) =  com.google.android.exoplayer2.extractor.ts.AdtsExtractor.ID3_TAG int \l}"];
Node_2 [shape=record,label="{2\:\ 0x001f|0x001f: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x004e \l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|0x0021: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.resetPeekPosition():void type: INTERFACE \l0x0024: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r5 I:int A[D('startPosition' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.advancePeekPosition(int):void type: INTERFACE \l0x0027: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startPosition' int)])\l \l0x0028: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0029: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: IGET  (r10 I:byte[]) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x002c: CONST  (r11 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x002d: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r10 I:byte[])\l  (r9 I:int)\l  (r11 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x0030: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0033: INVOKE  (r6 I:int) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x0037: CONST  (r10 I:?[int, float, short, byte, char]) = \l  (65526(0xfff6, float:9.1821E\-41) ?[int, float, short, byte, char])\l \l0x003a: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) & (r6 I:?[int, boolean, short, byte, char] A[D('syncBytes' int)]) \l0x003b: CONST  (r11 I:?[int, float, short, byte, char]) = \l  (65520(0xfff0, float:9.1813E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x003e|0x003e: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0061 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0040|0x0040: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('validFramesCount' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('validFramesSize' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.resetPeekPosition():void type: INTERFACE \l0x0045: ARITH  (r1 I:int A[D('headerPosition' int)]) = (r1 I:int A[D('headerPosition' int)]) + (1 int) \l0x0047: ARITH  (r10 I:int) = (r1 I:int A[D('headerPosition' int)]) \- (r5 I:int A[D('startPosition' int)]) \l0x0049: CONST  (r11 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x004b|0x004b: IF  (r10 I:?[int, byte, short, char]) \< (r11 I:?[int, byte, short, char])  \-\> B:10:0x005d \l}"];
Node_8 [shape=record,label="{8\:\ 0x004d|0x004d: RETURN  (r9 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x004e|0x004e: CONST  (r10 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x004f: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0052: INVOKE  (r2 I:int) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readSynchSafeInt():int type: VIRTUAL \l0x0056: ARITH  (r10 I:int) = (r2 I:int A[D('length' int)]) + (10 int) \l0x0058: ARITH  (r5 I:int A[D('startPosition' int)]) = (r5 I:int A[D('startPosition' int)]) + (r10 I:int) \l0x0059: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:int A[D('length' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.advancePeekPosition(int):void type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x005d|0x005d: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r1 I:int A[D('headerPosition' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.advancePeekPosition(int):void type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0061|0x0061: ARITH  (r7 I:int A[D('validFramesCount' int)]) = (r7 I:int A[D('validFramesCount' int)]) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0063|0x0063: IF  (r7 I:?[int, byte, short, char] A[D('validFramesCount' int)]) \< (r12 I:?[int, byte, short, char])  \-\> B:16:0x006b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0065|0x0065: CONST  (r10 I:?[int, float, short, byte, char]) = \l  (188(0xbc, float:2.63E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0067|0x0067: IF  (r8 I:?[int, byte, short, char] A[D('validFramesSize' int)]) \<= (r10 I:?[int, byte, short, char])  \-\> B:16:0x006b \l}"];
Node_15 [shape=record,label="{15\:\ 0x0069|0x0069: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x006b|0x006b: IGET  (r10 I:byte[]) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x006d: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r10 I:byte[])\l  (r9 I:int)\l  (r12 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x0070: CONST  (r10 I:?[int, float, short, byte, char]) = (14 ?[int, float, short, byte, char]) \l0x0072: INVOKE  \l  (r4 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratchBits' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.setPosition(int):void type: VIRTUAL \l0x0075: CONST  (r10 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x0077: INVOKE  (r0 I:int) = \l  (r4 I:com.google.android.exoplayer2.util.ParsableBitArray A[D('scratchBits' com.google.android.exoplayer2.util.ParsableBitArray)])\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x007b: CONST  (r10 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x007c|0x007c: IF  (r0 I:?[int, byte, short, char] A[D('frameSize' int)]) \<= (r10 I:?[int, byte, short, char])  \-\> B:8:0x004d \l}"];
Node_18 [shape=record,label="{18\:\ 0x007e|0x007e: ARITH  (r10 I:int) = (r0 I:int A[D('frameSize' int)]) + (\-6 int) \l0x0080: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r10 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.advancePeekPosition(int):void type: INTERFACE \l0x0083: ARITH  (r8 I:int A[D('validFramesSize' int)]) = (r8 I:int A[D('validFramesSize' int)]) + (r0 I:int A[D('frameSize' int)]) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.ts.AdtsExtractor.sniff((r14 'this' I:com.google.android.exoplayer2.extractor.ts.AdtsExtractor A[IMMUTABLE_TYPE, THIS]), (r15 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0028\-0x004e: r1 'headerPosition' int\l  0x0037\-0x004e: r6 'syncBytes' int\l  0x002a\-0x004e: r7 'validFramesCount' int\l  0x0029\-0x004e: r8 'validFramesSize' int\l  0x0056\-0x005d: r2 'length' int\l  0x007b\-0x0084: r0 'frameSize' int\l  0x005d\-0x0084: r1 'headerPosition' int\l  0x0009\-0x0084: r3 'scratch' com.google.android.exoplayer2.util.ParsableByteArray\l  0x0010\-0x0084: r4 'scratchBits' com.google.android.exoplayer2.util.ParsableBitArray\l  0x0011\-0x0084: r5 'startPosition' int\l  0x005d\-0x0084: r6 'syncBytes' int\l  0x005d\-0x0084: r7 'validFramesCount' int\l  0x005d\-0x0084: r8 'validFramesSize' int\l  ?\-0x0084: r15 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_9 -> Node_1;
Node_10 -> Node_4;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_8;
Node_16 -> Node_17;
Node_17 -> Node_8;
Node_17 -> Node_18[style=dashed];
Node_18 -> Node_4;
}

