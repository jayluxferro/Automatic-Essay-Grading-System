digraph "CFG forcom.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.consume(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r14 I:int) = \l  (r24 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0004: CONST  (r18 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0006: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tableId' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x000d: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x000f: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0011: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$200(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x0015: CONST  (r19 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0017: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0041 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x001f: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0021: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0023: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$200(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x0027: CONST  (r19 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0029: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0041 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0031: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0033: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0035: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$100(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x0039: CONST  (r19 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|0x003f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x021d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0043: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0045: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0047: INVOKE  (r18 I:java.util.List) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$300(com.google.android.exoplayer2.extractor.ts.TsExtractor):java.util.List type: STATIC \l0x004b: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004d: INVOKE  (r15 I:java.lang.Object) = (r18 I:java.util.List), (r19 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0051: CHECK_CAST  (r15 I:com.google.android.exoplayer2.util.TimestampAdjuster) = (com.google.android.exoplayer2.util.TimestampAdjuster) (r15 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0053|0x0053: CONST  (r18 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0055: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0057: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0059: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x005c: INVOKE  (r10 I:int) = \l  (r24 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x0060: CONST  (r18 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0062: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0064: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0066: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0069: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x006b: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.pmtScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x006d: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x006f: CONST  (r19 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0071: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0073: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0075: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0077: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(com.google.android.exoplayer2.util.ParsableBitArray, int):void type: VIRTUAL \l0x007a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x007c: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.pmtScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x007e: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0080: CONST  (r19 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0082: INVOKE  \l  (r18 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r19 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x0085: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0087: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.pmtScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0089: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x008b: CONST  (r19 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x008d: INVOKE  (r9 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r19 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0091: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0093: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r9 I:int A[D('programInfoLength' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0096: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0098: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x009a: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x009c: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$200(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x00a0: CONST  (r19 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x00a2: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a4: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x00a6|0x00a6: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0118 \l}"];
Node_12 [shape=record,label="{12\:\ 0x00a8|0x00a8: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00aa: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x00ac: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00ae: INVOKE  (r18 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$400(com.google.android.exoplayer2.extractor.ts.TsExtractor):com.google.android.exoplayer2.extractor.ts.TsPayloadReader type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x00b2|0x00b2: IF  (r18 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0118 \l}"];
Node_14 [shape=record,label="{14\:\ 0x00b4|0x00b4: NEW_INSTANCE  (r4 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo) =  com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo \l0x00b6: CONST  (r18 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l0x00b8: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ba: CONST  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00bc: CONST  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00be: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c0: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x00c2: MOVE  (r21 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00c4: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c6: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x00c8: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00ca: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00cc: INVOKE  \l  (r4 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo)\l  (r0 I:int)\l  (r1 I:java.lang.String)\l  (r2 I:java.util.List)\l  (r3 I:byte[])\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.EsInfo.\<init\>(int, java.lang.String, java.util.List, byte[]):void type: DIRECT \l0x00cf: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00d1: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x00d3: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00d5: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00d7: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x00d9: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00db: INVOKE  (r19 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory) = \l  (r19 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$500(com.google.android.exoplayer2.extractor.ts.TsExtractor):com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory type: STATIC \l0x00df: CONST  (r20 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l0x00e1: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x00e3: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e5: INVOKE  (r19 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory)\l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo A[D('dummyEsInfo' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo)])\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.Factory.createPayloadReader(int, com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo):com.google.android.exoplayer2.extractor.ts.TsPayloadReader type: INTERFACE \l0x00e9: INVOKE  \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l  (r19 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$402(com.google.android.exoplayer2.extractor.ts.TsExtractor, com.google.android.exoplayer2.extractor.ts.TsPayloadReader):com.google.android.exoplayer2.extractor.ts.TsPayloadReader type: STATIC \l0x00ec: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00ee: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x00f0: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00f2: INVOKE  (r18 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$400(com.google.android.exoplayer2.extractor.ts.TsExtractor):com.google.android.exoplayer2.extractor.ts.TsPayloadReader type: STATIC \l0x00f6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x00f8: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x00fa: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00fc: INVOKE  (r19 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r19 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$600(com.google.android.exoplayer2.extractor.ts.TsExtractor):com.google.android.exoplayer2.extractor.ExtractorOutput type: STATIC \l0x0100: NEW_INSTANCE  (r20 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator) =  com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator \l0x0102: CONST  (r21 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l0x0104: CONST  (r22 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l \l0x0106: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0108: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x010a: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x010c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)\l  (r10 I:int A[D('programNumber' int)])\l  (r1 I:int)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator.\<init\>(int, int, int):void type: DIRECT \l0x010f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0111: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0113: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0115: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader)\l  (r15 I:com.google.android.exoplayer2.util.TimestampAdjuster A[D('timestampAdjuster' com.google.android.exoplayer2.util.TimestampAdjuster)])\l  (r1 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l  (r2 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.init(com.google.android.exoplayer2.util.TimestampAdjuster, com.google.android.exoplayer2.extractor.ExtractorOutput, com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator):void type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0118|0x0118: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x011a: IGET  (r0 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.ts.TsPayloadReader\>) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.trackIdToReaderScratch android.util.SparseArray \l0x011c: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x011e: INVOKE  (r18 I:android.util.SparseArray) android.util.SparseArray.clear():void type: VIRTUAL \l0x0121: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0123: IGET  (r0 I:android.util.SparseIntArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.trackIdToPidScratch android.util.SparseIntArray \l0x0125: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0127: INVOKE  (r18 I:android.util.SparseIntArray) android.util.SparseIntArray.clear():void type: VIRTUAL \l0x012a: INVOKE  (r12 I:int) = \l  (r24 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x012e|0x012e: IF  (r12 I:?[int, byte, short, char] A[D('remainingEntriesLength' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:38:0x0261 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0130|0x0130: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0132: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.pmtScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0134: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0136: CONST  (r19 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0138: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x013a: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x013c: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x013e: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(com.google.android.exoplayer2.util.ParsableBitArray, int):void type: VIRTUAL \l0x0141: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0143: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.pmtScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0145: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0147: CONST  (r19 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0149: INVOKE  (r13 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r19 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x014d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x014f: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.pmtScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0151: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0153: CONST  (r19 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0155: INVOKE  \l  (r18 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r19 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x0158: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x015a: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.pmtScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x015c: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x015e: CONST  (r19 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x0160: INVOKE  (r5 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r19 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0164: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0166: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.pmtScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0168: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x016a: CONST  (r19 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x016c: INVOKE  \l  (r18 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r19 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l0x016f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0171: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.pmtScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0173: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0175: CONST  (r19 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x0177: INVOKE  (r7 I:int) = \l  (r18 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r19 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x017b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x017d: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x017f: INVOKE  (r6 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r7 I:int A[D('esInfoLength' int)])\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.readEsInfo(com.google.android.exoplayer2.util.ParsableByteArray, int):com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo type: DIRECT \l0x0183: CONST  (r18 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0185: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0187|0x0187: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('streamType' int)]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x018b \l}"];
Node_19 [shape=record,label="{19\:\ 0x0189|0x0189: IGET  (r13 I:int A[D('streamType' int)]) = \l  (r6 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo A[D('esInfo' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo)])\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.EsInfo.streamType int \l}"];
Node_20 [shape=record,label="{20\:\ 0x018b|0x018b: ARITH  (r18 I:int) = (r7 I:int A[D('esInfoLength' int)]) + (5 int) \l0x018d: ARITH  (r12 I:int A[D('remainingEntriesLength' int)]) = (r12 I:int A[D('remainingEntriesLength' int)]) \- (r18 I:int) \l0x018f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0191: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0193: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0195: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$200(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x0199: CONST  (r19 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x019b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x019d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x019f|0x019f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x024b \l}"];
Node_22 [shape=record,label="{22\:\ 0x01a1|0x01a1: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('streamType' int)])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x01a3|0x01a3: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x01a5: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x01a7: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x01a9: INVOKE  (r18 I:android.util.SparseBooleanArray) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$700(com.google.android.exoplayer2.extractor.ts.TsExtractor):android.util.SparseBooleanArray type: STATIC \l0x01ad: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x01af: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackId' int)])\l \l0x01b1: INVOKE  (r18 I:boolean) = (r0 I:android.util.SparseBooleanArray), (r1 I:int) android.util.SparseBooleanArray.get(int):boolean type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x01b5|0x01b5: IF  (r18 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x012e \l}"];
Node_25 [shape=record,label="{25\:\ 0x01b7|0x01b7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x01b9: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x01bb: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x01bd: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$200(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x01c1: CONST  (r19 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x01c3: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01c5: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x01c7|0x01c7: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x024f \l}"];
Node_27 [shape=record,label="{27\:\ 0x01c9|0x01c9: CONST  (r18 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l0x01cb: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x01cd|0x01cd: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('streamType' int)]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x024f \l}"];
Node_29 [shape=record,label="{29\:\ 0x01cf|0x01cf: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x01d1: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x01d3: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x01d5: INVOKE  (r11 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$400(com.google.android.exoplayer2.extractor.ts.TsExtractor):com.google.android.exoplayer2.extractor.ts.TsPayloadReader type: STATIC \l}"];
Node_30 [shape=record,label="{30\:\ 0x01d9|0x01d9: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x01db: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x01dd: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x01df: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$200(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x01e3: CONST  (r19 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x01e5: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01e7: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x01e9|0x01e9: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0201 \l}"];
Node_32 [shape=record,label="{32\:\ 0x01eb|0x01eb: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x01ed: IGET  (r0 I:android.util.SparseIntArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.trackIdToPidScratch android.util.SparseIntArray \l0x01ef: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x01f1: CONST  (r19 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l \l0x01f3: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x01f5: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackId' int)])\l \l0x01f7: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01f9: INVOKE  (r18 I:int) = (r0 I:android.util.SparseIntArray), (r1 I:int), (r2 I:int) android.util.SparseIntArray.get(int, int):int type: VIRTUAL \l0x01fd: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x01ff|0x01ff: IF  (r5 I:?[int, byte, short, char] A[D('elementaryPid' int)]) \>= (r0 I:?[int, byte, short, char])  \-\> B:16:0x012e \l}"];
Node_34 [shape=record,label="{34\:\ 0x0201|0x0201: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0203: IGET  (r0 I:android.util.SparseIntArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.trackIdToPidScratch android.util.SparseIntArray \l0x0205: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0207: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0209: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackId' int)])\l \l0x020b: INVOKE  \l  (r0 I:android.util.SparseIntArray)\l  (r1 I:int)\l  (r5 I:int A[D('elementaryPid' int)])\l android.util.SparseIntArray.put(int, int):void type: VIRTUAL \l0x020e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0210: IGET  (r0 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.ts.TsPayloadReader\>) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.trackIdToReaderScratch android.util.SparseArray \l0x0212: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0214: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0216: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackId' int)])\l \l0x0218: INVOKE  \l  (r0 I:android.util.SparseArray)\l  (r1 I:int)\l  (r11 I:java.lang.Object A[D('reader' com.google.android.exoplayer2.extractor.ts.TsPayloadReader)])\l android.util.SparseArray.put(int, java.lang.Object):void type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x021d|0x021d: NEW_INSTANCE  (r15 I:com.google.android.exoplayer2.util.TimestampAdjuster A[D('timestampAdjuster' com.google.android.exoplayer2.util.TimestampAdjuster)]) =  com.google.android.exoplayer2.util.TimestampAdjuster \l0x021f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0221: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0223: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0225: INVOKE  (r18 I:java.util.List) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$300(com.google.android.exoplayer2.extractor.ts.TsExtractor):java.util.List type: STATIC \l0x0229: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x022b: INVOKE  (r18 I:java.lang.Object) = (r18 I:java.util.List), (r19 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x022f: CHECK_CAST  (r18 I:com.google.android.exoplayer2.util.TimestampAdjuster) = (com.google.android.exoplayer2.util.TimestampAdjuster) (r18 I:?[OBJECT, ARRAY]) \l0x0231: INVOKE  (r18 I:long) = \l  (r18 I:com.google.android.exoplayer2.util.TimestampAdjuster)\l com.google.android.exoplayer2.util.TimestampAdjuster.getFirstSampleTimestampUs():long type: VIRTUAL \l0x0235: MOVE  (r0 I:?[long, double]) = (r18 I:?[long, double]) \l0x0237: INVOKE  \l  (r15 I:com.google.android.exoplayer2.util.TimestampAdjuster)\l  (r0 I:long)\l com.google.android.exoplayer2.util.TimestampAdjuster.\<init\>(long):void type: DIRECT \l0x023a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x023c: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x023e: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0240: INVOKE  (r18 I:java.util.List) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$300(com.google.android.exoplayer2.extractor.ts.TsExtractor):java.util.List type: STATIC \l0x0244: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0246: INVOKE  \l  (r0 I:java.util.List)\l  (r15 I:java.lang.Object A[D('timestampAdjuster' com.google.android.exoplayer2.util.TimestampAdjuster)])\l java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_36 [shape=record,label="{36\:\ 0x024b|0x024b: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('elementaryPid' int)])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x024f|0x024f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0251: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0253: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0255: INVOKE  (r18 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$500(com.google.android.exoplayer2.extractor.ts.TsExtractor):com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory type: STATIC \l0x0259: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x025b: INVOKE  (r11 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory)\l  (r13 I:int A[D('streamType' int)])\l  (r6 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo A[D('esInfo' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo)])\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.Factory.createPayloadReader(int, com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo):com.google.android.exoplayer2.extractor.ts.TsPayloadReader type: INTERFACE \l}"];
Node_38 [shape=record,label="{38\:\ 0x0261|0x0261: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0263: IGET  (r0 I:android.util.SparseIntArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.trackIdToPidScratch android.util.SparseIntArray \l0x0265: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0267: INVOKE  (r17 I:int) = (r18 I:android.util.SparseIntArray) android.util.SparseIntArray.size():int type: VIRTUAL \l0x026b: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x026c|0x026c: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackIdCount' int)])\l \l}"];
Node_40 [shape=record,label="{40\:\ 0x026e|0x026e: IF  (r8 I:?[int, byte, short, char] A[D('i' int)]) \>= (r0 I:?[int, byte, short, char])  \-\> B:48:0x02ed \l}"];
Node_41 [shape=record,label="{41\:\ 0x0270|0x0270: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0272: IGET  (r0 I:android.util.SparseIntArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.trackIdToPidScratch android.util.SparseIntArray \l0x0274: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0276: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0278: INVOKE  (r16 I:int) = \l  (r0 I:android.util.SparseIntArray)\l  (r8 I:int A[D('i' int)])\l android.util.SparseIntArray.keyAt(int):int type: VIRTUAL \l0x027c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x027e: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0280: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0282: INVOKE  (r18 I:android.util.SparseBooleanArray) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$700(com.google.android.exoplayer2.extractor.ts.TsExtractor):android.util.SparseBooleanArray type: STATIC \l0x0286: CONST  (r19 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0288: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x028a: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackId' int)])\l \l0x028c: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x028e: INVOKE  \l  (r0 I:android.util.SparseBooleanArray)\l  (r1 I:int)\l  (r2 I:boolean)\l android.util.SparseBooleanArray.put(int, boolean):void type: VIRTUAL \l0x0291: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0293: IGET  (r0 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.ts.TsPayloadReader\>) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.trackIdToReaderScratch android.util.SparseArray \l0x0295: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0297: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0299: INVOKE  (r11 I:java.lang.Object) = (r0 I:android.util.SparseArray), (r8 I:int A[D('i' int)]) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x029d: CHECK_CAST  (r11 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader) = (com.google.android.exoplayer2.extractor.ts.TsPayloadReader) (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x029f|0x029f: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reader' com.google.android.exoplayer2.extractor.ts.TsPayloadReader)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x02ea \l}"];
Node_43 [shape=record,label="{43\:\ 0x02a1|0x02a1: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x02a3: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x02a5: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x02a7: INVOKE  (r18 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$400(com.google.android.exoplayer2.extractor.ts.TsExtractor):com.google.android.exoplayer2.extractor.ts.TsPayloadReader type: STATIC \l0x02ab: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x02ad|0x02ad: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('reader' com.google.android.exoplayer2.extractor.ts.TsPayloadReader)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x02cd \l}"];
Node_45 [shape=record,label="{45\:\ 0x02af|0x02af: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x02b1: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x02b3: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x02b5: INVOKE  (r18 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$600(com.google.android.exoplayer2.extractor.ts.TsExtractor):com.google.android.exoplayer2.extractor.ExtractorOutput type: STATIC \l0x02b9: NEW_INSTANCE  (r19 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator) =  com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator \l0x02bb: CONST  (r20 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l \l0x02bd: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x02bf: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackId' int)])\l \l0x02c1: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x02c3: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)\l  (r10 I:int A[D('programNumber' int)])\l  (r1 I:int)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator.\<init\>(int, int, int):void type: DIRECT \l0x02c6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x02c8: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x02ca: INVOKE  \l  (r11 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader A[D('reader' com.google.android.exoplayer2.extractor.ts.TsPayloadReader)])\l  (r15 I:com.google.android.exoplayer2.util.TimestampAdjuster A[D('timestampAdjuster' com.google.android.exoplayer2.util.TimestampAdjuster)])\l  (r0 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l  (r1 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.init(com.google.android.exoplayer2.util.TimestampAdjuster, com.google.android.exoplayer2.extractor.ExtractorOutput, com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator):void type: INTERFACE \l}"];
Node_46 [shape=record,label="{46\:\ 0x02cd|0x02cd: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x02cf: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x02d1: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x02d3: INVOKE  (r18 I:android.util.SparseArray) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$000(com.google.android.exoplayer2.extractor.ts.TsExtractor):android.util.SparseArray type: STATIC \l0x02d7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x02d9: IGET  (r0 I:android.util.SparseIntArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.trackIdToPidScratch android.util.SparseIntArray \l0x02db: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x02dd: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x02df: INVOKE  (r19 I:int) = \l  (r0 I:android.util.SparseIntArray)\l  (r8 I:int A[D('i' int)])\l android.util.SparseIntArray.valueAt(int):int type: VIRTUAL \l0x02e3: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x02e5: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x02e7: INVOKE  \l  (r0 I:android.util.SparseArray)\l  (r1 I:int)\l  (r11 I:java.lang.Object A[D('reader' com.google.android.exoplayer2.extractor.ts.TsPayloadReader)])\l android.util.SparseArray.put(int, java.lang.Object):void type: VIRTUAL \l}"];
Node_47 [shape=record,label="{47\:\ 0x02ea|0x02ea: ARITH  (r8 I:int A[D('i' int)]) = (r8 I:int A[D('i' int)]) + (1 int) \l}"];
Node_48 [shape=record,label="{48\:\ 0x02ed|0x02ed: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x02ef: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x02f1: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x02f3: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$200(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x02f7: CONST  (r19 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x02f9: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x02fb: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_49 [shape=record,label="{49\:\ 0x02fd|0x02fd: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0330 \l}"];
Node_50 [shape=record,label="{50\:\ 0x02ff|0x02ff: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0301: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0303: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0305: INVOKE  (r18 I:boolean) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$800(com.google.android.exoplayer2.extractor.ts.TsExtractor):boolean type: STATIC \l}"];
Node_51 [shape=record,label="{51\:\ 0x0309|0x0309: IF  (r18 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_52 [shape=record,label="{52\:\ 0x030b|0x030b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x030d: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x030f: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0311: INVOKE  (r18 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$600(com.google.android.exoplayer2.extractor.ts.TsExtractor):com.google.android.exoplayer2.extractor.ExtractorOutput type: STATIC \l0x0315: INVOKE  \l  (r18 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l com.google.android.exoplayer2.extractor.ExtractorOutput.endTracks():void type: INTERFACE \l0x0318: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x031a: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x031c: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x031e: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0320: INVOKE  \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l  (r19 I:int)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$102(com.google.android.exoplayer2.extractor.ts.TsExtractor, int):int type: STATIC \l0x0323: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0325: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0327: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0329: CONST  (r19 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x032b: INVOKE  \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l  (r19 I:boolean)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$802(com.google.android.exoplayer2.extractor.ts.TsExtractor, boolean):boolean type: STATIC \l}"];
Node_53 [shape=record,label="{53\:\ 0x0330|0x0330: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0332: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0334: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0336: INVOKE  (r18 I:android.util.SparseArray) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$000(com.google.android.exoplayer2.extractor.ts.TsExtractor):android.util.SparseArray type: STATIC \l0x033a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x033c: IGET  (r0 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.pid int \l0x033e: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0340: INVOKE  (r18 I:android.util.SparseArray), (r19 I:int) android.util.SparseArray.remove(int):void type: VIRTUAL \l0x0343: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0345: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0347: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0349: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x034b: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x034d: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x034f: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$200(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x0353: CONST  (r20 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0355: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0357: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_54 [shape=record,label="{54\:\ 0x0359|0x0359: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x038a \l}"];
Node_55 [shape=record,label="{55\:\ 0x035b|0x035b: CONST  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_56 [shape=record,label="{56\:\ 0x035d|0x035d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x035f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0361: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l  (r1 I:int)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$102(com.google.android.exoplayer2.extractor.ts.TsExtractor, int):int type: STATIC \l0x0364: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0366: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0368: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x036a: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$100(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l}"];
Node_57 [shape=record,label="{57\:\ 0x036e|0x036e: IF  (r18 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_58 [shape=record,label="{58\:\ 0x0370|0x0370: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0372: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0374: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0376: INVOKE  (r18 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$600(com.google.android.exoplayer2.extractor.ts.TsExtractor):com.google.android.exoplayer2.extractor.ExtractorOutput type: STATIC \l0x037a: INVOKE  \l  (r18 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l com.google.android.exoplayer2.extractor.ExtractorOutput.endTracks():void type: INTERFACE \l0x037d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x037f: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0381: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0383: CONST  (r19 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0385: INVOKE  \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l  (r19 I:boolean)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$802(com.google.android.exoplayer2.extractor.ts.TsExtractor, boolean):boolean type: STATIC \l}"];
Node_59 [shape=record,label="{59\:\ 0x038a|0x038a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x038c: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x038e: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0390: INVOKE  (r18 I:int) = \l  (r18 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$100(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x0394: ARITH  (r18 I:int) = (r18 I:int) + (\-1 int) \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.consume((r23 'this' I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader A[IMMUTABLE_TYPE, THIS]), (r24 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x00cf\-0x0118: r4 'dummyEsInfo' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo\l  0x0164\-0x021d: r5 'elementaryPid' int\l  0x0183\-0x021d: r6 'esInfo' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo\l  0x017b\-0x021d: r7 'esInfoLength' int\l  0x0091\-0x021d: r9 'programInfoLength' int\l  0x0060\-0x021d: r10 'programNumber' int\l  0x01d9\-0x021d: r11 'reader' com.google.android.exoplayer2.extractor.ts.TsPayloadReader\l  0x012e\-0x021d: r12 'remainingEntriesLength' int\l  0x014d\-0x021d: r13 'streamType' int\l  0x0053\-0x021d: r15 'timestampAdjuster' com.google.android.exoplayer2.util.TimestampAdjuster\l  0x01a3\-0x021d: r16 'trackId' int\l  0x024b\-0x0261: r5 'elementaryPid' int\l  0x024b\-0x0261: r6 'esInfo' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$EsInfo\l  0x024b\-0x0261: r7 'esInfoLength' int\l  0x024b\-0x0261: r13 'streamType' int\l  0x024f\-0x0261: r16 'trackId' int\l  0x029f\-0x02ed: r11 'reader' com.google.android.exoplayer2.extractor.ts.TsPayloadReader\l  0x027c\-0x02ed: r16 'trackId' int\l  0x026c\-0x0396: r8 'i' int\l  0x024b\-0x0396: r9 'programInfoLength' int\l  0x024b\-0x0396: r10 'programNumber' int\l  0x024b\-0x0396: r12 'remainingEntriesLength' int\l  0x0004\-0x0396: r14 'tableId' int\l  0x023a\-0x0396: r15 'timestampAdjuster' com.google.android.exoplayer2.util.TimestampAdjuster\l  0x026b\-0x0396: r17 'trackIdCount' int\l  ?\-0x0396: r24 'sectionData' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_35;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_38;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_36;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_16;
Node_24 -> Node_25[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_37;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_37;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_33 -> Node_16;
Node_33 -> Node_34[style=dashed];
Node_34 -> Node_16;
Node_35 -> Node_10;
Node_36 -> Node_23;
Node_37 -> Node_30;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_48;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_47;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_39;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_53;
Node_50 -> Node_51;
Node_51 -> Node_2;
Node_51 -> Node_52[style=dashed];
Node_52 -> Node_2;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_59;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_2;
Node_57 -> Node_58[style=dashed];
Node_58 -> Node_2;
Node_59 -> Node_56;
}

