digraph "CFG forcom.google.android.exoplayer2.extractor.ts.Ac3Extractor.sniff(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.exoplayer2.util.ParsableByteArray r3 = new com.google.android.exoplayer2.util.ParsableByteArray(10)\lr4 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|LOOP_START\lPHI: r4 \l  PHI: (r4v1 'startPosition' int) = (r4v0 'startPosition' int), (r4v2 'startPosition' int) binds: [B:0:0x0000, B:8:0x003f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:8:0x003f\l|r12.peekFully(r3.data, 0, 10)\lr3.setPosition(0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|if (r3.readUnsignedInt24() == ID3_TAG) goto L_0x003f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|r12.resetPeekPosition()\lr12.advancePeekPosition(r4)\lr1 = r4\lr6 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|LOOP_START\lPHI: r1 r6 \l  PHI: (r1v1 'headerPosition' int) = (r1v0 'headerPosition' int), (r1v2 'headerPosition' int) binds: [B:3:0x0019, B:17:0x0021] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'validFramesCount' int) = (r6v0 'validFramesCount' int), (r6v2 'validFramesCount' int) binds: [B:3:0x0019, B:17:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:4:0x0021\-\>B:17:0x0021\l|r12.peekFully(r3.data, 0, 5)\lr3.setPosition(0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0030|if (r3.readUnsignedShort() == AC3_SYNC_WORD) goto L_0x0052\l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|r6 = 0\lr12.resetPeekPosition()\lint r1 = r1 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x003c|if ((r1 \- r4) \< 8192) goto L_0x004e\l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|LOOP_END\lLOOP:0: B:1:0x0009\-\>B:8:0x003f\l|r3.skipBytes(3)\lint r2 = r3.readSynchSafeInt()\lint r4 = r4 + (r2 + 10)\lr12.advancePeekPosition(r2)\l}"];
Node_9 [shape=record,label="{9\:\ 0x004e|r12.advancePeekPosition(r1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0052|int r6 = r6 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0055|if (r6 \< 4) goto L_0x0059\l}"];
Node_12 [shape=record,label="{12\:\ 0x0057|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_13 [shape=record,label="{13\:\ 0x0059|int r0 = com.google.android.exoplayer2.audio.Ac3Util.parseAc3SyncframeSize(r3.data)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0060|if (r0 == \-1) goto L_0x003e\l}"];
Node_15 [shape=record,label="{15\:\ 0x0062|r12.advancePeekPosition(r0 + \-5)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0019|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0021|LOOP_END\lSYNTHETIC\lPHI: r1 r6 \l  PHI: (r1v2 'headerPosition' int) = (r1v1 'headerPosition' int), (r1v3 'headerPosition' int) binds: [B:22:0x0021, B:21:0x0021] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 'validFramesCount' int) = (r6v3 'validFramesCount' int), (r6v4 'validFramesCount' int) binds: [B:22:0x0021, B:21:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:4:0x0021\-\>B:17:0x0021\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0021|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0021|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.ts.Ac3Extractor.sniff((r11v0 'this' com.google.android.exoplayer2.extractor.ts.Ac3Extractor A[IMMUTABLE_TYPE, THIS]), (r12v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_8;
Node_2 -> Node_16[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_20[style=dashed];
Node_8 -> Node_1;
Node_9 -> Node_21;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_19[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_22;
Node_16 -> Node_3;
Node_17 -> Node_4;
Node_18 -> Node_23;
Node_19 -> Node_12;
Node_20 -> Node_24;
Node_21 -> Node_17;
Node_22 -> Node_17;
}

