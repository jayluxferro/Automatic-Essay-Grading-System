digraph "CFG forcom.google.android.exoplayer2.extractor.ts.SectionReader.consume(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('payloadUnitStartIndicator' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r3 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0007: INVOKE  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x000b: ARITH  (r4 I:int A[D('payloadStartPosition' int)]) = (r8 I:int) + (r3 I:int A[D('payloadStartOffset' int)]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IGET  (r8 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.waitingForPayloadStart boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('payloadUnitStartIndicator' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: IPUT  \l  (r8 I:boolean)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.waitingForPayloadStart boolean \l0x0017: INVOKE  \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r4 I:int A[D('payloadStartPosition' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x001a: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001b: IPUT  \l  (r8 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: INVOKE  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IGET  (r8 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x0025: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IF  (r8 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:26:0x00b8 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: IGET  (r8 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0041 \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: INVOKE  (r6 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0030: INVOKE  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0034: ARITH  (r8 I:int) = (r8 I:int) + (\-1 int) \l0x0036: INVOKE  \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r8 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0039: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|0x003b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tableId' int)]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0041 \l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003e: IPUT  \l  (r8 I:boolean)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.waitingForPayloadStart boolean \l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|0x0041: INVOKE  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x0045: IGET  (r9 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x0047: ARITH  (r9 I:int) = (3 int) \- (r9 I:int) \l0x0049: INVOKE  (r2 I:int) = (r8 I:int), (r9 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x004d: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x004f: IGET  (r8 I:byte[]) = (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0051: IGET  (r9 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x0053: INVOKE  \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r8 I:byte[])\l  (r9 I:int)\l  (r2 I:int A[D('headerBytesToRead' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l0x0056: IGET  (r8 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x0058: ARITH  (r8 I:int) = (r8 I:int) + (r2 I:int A[D('headerBytesToRead' int)]) \l0x0059: IPUT  \l  (r8 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x005b: IGET  (r8 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x005d: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x005e|0x005e: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_19 [shape=record,label="{19\:\ 0x0060|0x0060: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x0062: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0063: INVOKE  \l  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.reset(int):void type: VIRTUAL \l0x0066: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x0068: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0069: INVOKE  \l  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x006c: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x006e: INVOKE  (r5 I:int) = (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0072: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x0074: INVOKE  (r7 I:int) = (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0078: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char] A[D('secondHeaderByte' int)]) & (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x007a|0x007a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00b6 \l}"];
Node_21 [shape=record,label="{21\:\ 0x007c|0x007c: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x007d|0x007d: IPUT  \l  (r8 I:boolean)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionSyntaxIndicator boolean \l0x007f: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char] A[D('secondHeaderByte' int)]) & (15 ?[int, float, short, byte, char]) \l0x0081: ARITH  (r8 I:int) = (r8 I:int) \<\< (8 int) \l0x0083: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) \| (r7 I:?[int, boolean, short, byte, char] A[D('thirdHeaderByte' int)]) \l0x0084: ARITH  (r8 I:int) = (r8 I:int) + (3 int) \l0x0086: IPUT  \l  (r8 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.totalSectionLength int \l0x0088: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x008a: INVOKE  (r8 I:int) = (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.capacity():int type: VIRTUAL \l0x008e: IGET  (r9 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.totalSectionLength int \l}"];
Node_23 [shape=record,label="{23\:\ 0x0090|0x0090: IF  (r8 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_24 [shape=record,label="{24\:\ 0x0092|0x0092: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x0094: IGET  (r1 I:byte[]) = (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0096: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x0098: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (4098(0x1002, float:5.743E\-42) ?[int, float, short, byte, char])\l \l0x009a: IGET  (r10 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.totalSectionLength int \l0x009c: ARRAY_LENGTH  (r11 I:int) = (r1 I:?[] A[D('bytes' byte[])]) \l0x009d: ARITH  (r11 I:int) = (r11 I:int) * (2 int) \l0x009f: INVOKE  (r10 I:int) = (r10 I:int), (r11 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x00a3: INVOKE  (r9 I:int) = (r9 I:int), (r10 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x00a7: INVOKE  \l  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.reset(int):void type: VIRTUAL \l0x00aa: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ab: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x00ad: IGET  (r9 I:byte[]) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x00af: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b0: CONST  (r11 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x00b1: INVOKE  \l  (r1 I:java.lang.Object A[D('bytes' byte[])])\l  (r8 I:int)\l  (r9 I:java.lang.Object)\l  (r10 I:int)\l  (r11 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l}"];
Node_25 [shape=record,label="{25\:\ 0x00b6|0x00b6: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b8|0x00b8: INVOKE  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x00bc: IGET  (r9 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.totalSectionLength int \l0x00be: IGET  (r10 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x00c0: ARITH  (r9 I:int) = (r9 I:int) \- (r10 I:int) \l0x00c1: INVOKE  (r0 I:int) = (r8 I:int), (r9 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x00c5: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x00c7: IGET  (r8 I:byte[]) = (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x00c9: IGET  (r9 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x00cb: INVOKE  \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r8 I:byte[])\l  (r9 I:int)\l  (r0 I:int A[D('bodyBytesToRead' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l0x00ce: IGET  (r8 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x00d0: ARITH  (r8 I:int) = (r8 I:int) + (r0 I:int A[D('bodyBytesToRead' int)]) \l0x00d1: IPUT  \l  (r8 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x00d3: IGET  (r8 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l0x00d5: IGET  (r9 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.totalSectionLength int \l}"];
Node_27 [shape=record,label="{27\:\ 0x00d7|0x00d7: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_28 [shape=record,label="{28\:\ 0x00d9|0x00d9: IGET  (r8 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionSyntaxIndicator boolean \l}"];
Node_29 [shape=record,label="{29\:\ 0x00db|0x00db: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0105 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00dd|0x00dd: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x00df: IGET  (r8 I:byte[]) = (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x00e1: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e2: IGET  (r10 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.totalSectionLength int \l0x00e4: CONST  (r11 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x00e5: INVOKE  (r8 I:int) = (r8 I:byte[]), (r9 I:int), (r10 I:int), (r11 I:int) com.google.android.exoplayer2.util.Util.crc(byte[], int, int, int):int type: STATIC \l}"];
Node_31 [shape=record,label="{31\:\ 0x00e9|0x00e9: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00f0 \l}"];
Node_32 [shape=record,label="{32\:\ 0x00eb|0x00eb: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00ec: IPUT  \l  (r8 I:boolean)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.waitingForPayloadStart boolean \l}"];
Node_33 [shape=record,label="{33\:\ 0x00f0|0x00f0: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x00f2: IGET  (r9 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.totalSectionLength int \l0x00f4: ARITH  (r9 I:int) = (r9 I:int) + (\-4 int) \l0x00f6: INVOKE  \l  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.reset(int):void type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x00f9|0x00f9: IGET  (r8 I:com.google.android.exoplayer2.extractor.ts.SectionPayloadReader) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.reader com.google.android.exoplayer2.extractor.ts.SectionPayloadReader \l0x00fb: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x00fd: INVOKE  \l  (r8 I:com.google.android.exoplayer2.extractor.ts.SectionPayloadReader)\l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l com.google.android.exoplayer2.extractor.ts.SectionPayloadReader.consume(com.google.android.exoplayer2.util.ParsableByteArray):void type: INTERFACE \l0x0100: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0101: IPUT  \l  (r8 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.bytesRead int \l}"];
Node_35 [shape=record,label="{35\:\ 0x0105|0x0105: IGET  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.sectionData com.google.android.exoplayer2.util.ParsableByteArray \l0x0107: IGET  (r9 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.totalSectionLength int \l0x0109: INVOKE  \l  (r8 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.reset(int):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.SectionReader.consume((r12 'this' I:com.google.android.exoplayer2.extractor.ts.SectionReader A[IMMUTABLE_TYPE, THIS]), (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:boolean A[D('payloadUnitStartIndicator' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0007\-0x000d: r3 'payloadStartOffset' int\l  0x0030\-0x0041: r6 'tableId' int\l  0x0096\-0x00b6: r1 'bytes' byte[]\l  0x004d\-0x00b8: r2 'headerBytesToRead' int\l  0x0072\-0x00b8: r5 'secondHeaderByte' int\l  0x0078\-0x00b8: r7 'thirdHeaderByte' int\l  0x00c5\-0x010c: r0 'bodyBytesToRead' int\l  0x0001\-0x010c: r4 'payloadStartPosition' int\l  ?\-0x010c: r13 'data' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x010c: r14 'payloadUnitStartIndicator' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_6;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_26;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_6;
Node_17 -> Node_18;
Node_18 -> Node_8;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_8;
Node_23 -> Node_24[style=dashed];
Node_24 -> Node_8;
Node_25 -> Node_22;
Node_26 -> Node_27;
Node_27 -> Node_8;
Node_27 -> Node_28[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_6;
Node_33 -> Node_34;
Node_34 -> Node_8;
Node_35 -> Node_34;
}

