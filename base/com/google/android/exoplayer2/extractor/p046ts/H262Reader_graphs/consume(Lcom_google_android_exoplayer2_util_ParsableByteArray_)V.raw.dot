digraph "CFG forcom.google.android.exoplayer2.extractor.ts.H262Reader.consume(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r13 I:int) = \l  (r21 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0004: INVOKE  (r12 I:int) = \l  (r21 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x0008: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x000a: IGET  (r10 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x000c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x000e: IGET  (r4 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.totalBytesWritten long \l0x0010: INVOKE  (r3 I:int) = \l  (r21 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x0014: CAST  (r0 I:long) = (long) (r3 I:int) \l0x0015: MOVE  (r18 I:?[long, double]) = (r0 I:?[long, double]) \l0x0017: ARITH  (r4 I:long) = (r4 I:long) + (r18 I:long) \l0x0019: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x001b: IPUT  \l  (r4 I:long)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.totalBytesWritten long \l0x001d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x001f: IGET  (r3 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x0021: INVOKE  (r4 I:int) = \l  (r21 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x0025: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0027: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r4 I:int)\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x002a: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('offset' int)])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x002b|0x002b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x002d: IGET  (r3 I:boolean[]) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.prefixFlags boolean[] \l0x002f: INVOKE  (r16 I:int) = \l  (r10 I:byte[] A[D('dataArray' byte[])])\l  (r15 I:int A[D('searchOffset' int)])\l  (r12 I:int A[D('limit' int)])\l  (r3 I:boolean[])\l com.google.android.exoplayer2.util.NalUnitUtil.findNalUnit(byte[], int, int, boolean[]):int type: STATIC \l0x0033: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startCodeOffset' int)])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0035|0x0035: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('limit' int)])  \-\> B:7:0x0045 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0037|0x0037: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0039: IGET  (r3 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.hasOutputFormat boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x003b|0x003b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0044 \l}"];
Node_5 [shape=record,label="{5\:\ 0x003d|0x003d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x003f: IGET  (r3 I:com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.csdBuffer com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer \l0x0041: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer)\l  (r10 I:byte[] A[D('dataArray' byte[])])\l  (r13 I:int A[D('offset' int)])\l  (r12 I:int A[D('limit' int)])\l com.google.android.exoplayer2.extractor.ts.H262Reader.CsdBuffer.onData(byte[], int, int):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0044|0x0044: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|0x0045: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0047: IGET  (r3 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0049: ARITH  (r4 I:int) = (r16 I:int A[D('startCodeOffset' int)]) + (3 int) \l0x004b: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r3 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x004d: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x004f: MOVE  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0051: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0053: IGET  (r3 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.hasOutputFormat boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x0055|0x0055: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x009b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0057|0x0057: ARITH  (r11 I:int) = (r16 I:int A[D('startCodeOffset' int)]) \- (r13 I:int A[D('offset' int)]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0059|0x0059: IF  (r11 I:?[int, byte, short, char] A[D('lengthToStartCode' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0064 \l}"];
Node_11 [shape=record,label="{11\:\ 0x005b|0x005b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x005d: IGET  (r3 I:com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.csdBuffer com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer \l0x005f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startCodeOffset' int)])\l \l0x0061: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer)\l  (r10 I:byte[] A[D('dataArray' byte[])])\l  (r13 I:int A[D('offset' int)])\l  (r0 I:int)\l com.google.android.exoplayer2.extractor.ts.H262Reader.CsdBuffer.onData(byte[], int, int):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0064|0x0064: IF  (r11 I:?[int, byte, short, char] A[D('lengthToStartCode' int)]) \>= (0 ?[int, byte, short, char])  \-\> B:32:0x00ee \l}"];
Node_13 [shape=record,label="{13\:\ 0x0066|0x0066: NEG  (r2 I:int) = (r11 I:int A[D('lengthToStartCode' int)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0067|0x0067: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0069: IGET  (r3 I:com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.csdBuffer com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer \l0x006b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startCodeValue' int)])\l \l0x006d: INVOKE  (r3 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer)\l  (r0 I:int)\l  (r2 I:int A[D('bytesAlreadyPassed' int)])\l com.google.android.exoplayer2.extractor.ts.H262Reader.CsdBuffer.onStartCode(int, int):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0071|0x0071: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x009b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0073|0x0073: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0075: IGET  (r3 I:com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.csdBuffer com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer \l0x0077: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0079: IGET  (r4 I:java.lang.String) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.formatId java.lang.String \l0x007b: INVOKE  (r14 I:android.util.Pair) = \l  (r3 I:com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer)\l  (r4 I:java.lang.String)\l com.google.android.exoplayer2.extractor.ts.H262Reader.parseCsdBuffer(com.google.android.exoplayer2.extractor.ts.H262Reader$CsdBuffer, java.lang.String):android.util.Pair type: STATIC \l0x007f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0081: IGET  (r4 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x0083: IGET  (r3 I:java.lang.Object) = \l  (r14 I:android.util.Pair A[D('result' android.util.Pair\<com.google.android.exoplayer2.Format, java.lang.Long\>)])\l android.util.Pair.first java.lang.Object \l0x0085: CHECK_CAST  (r3 I:com.google.android.exoplayer2.Format) = (com.google.android.exoplayer2.Format) (r3 I:?[OBJECT, ARRAY]) \l0x0087: INVOKE  \l  (r4 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.extractor.TrackOutput.format(com.google.android.exoplayer2.Format):void type: INTERFACE \l0x008a: IGET  (r3 I:java.lang.Object) = \l  (r14 I:android.util.Pair A[D('result' android.util.Pair\<com.google.android.exoplayer2.Format, java.lang.Long\>)])\l android.util.Pair.second java.lang.Object \l0x008c: CHECK_CAST  (r3 I:java.lang.Long) = (java.lang.Long) (r3 I:?[OBJECT, ARRAY]) \l0x008e: INVOKE  (r4 I:long) = (r3 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x0092: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0094: IPUT  \l  (r4 I:long)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.frameDurationUs long \l0x0096: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0097: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0099: IPUT  \l  (r3 I:boolean)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.hasOutputFormat boolean \l}"];
Node_17 [shape=record,label="{17\:\ 0x009b|0x009b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x009d: IGET  (r3 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.hasOutputFormat boolean \l}"];
Node_18 [shape=record,label="{18\:\ 0x009f|0x009f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00e8 \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a1|0x00a1: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (184(0xb8, float:2.58E\-43) ?[int, float, short, byte, char])\l \l0x00a3: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startCodeValue' int)])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x00a5|0x00a5: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00a9 \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a7|0x00a7: IF  (r17 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('startCodeValue' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00e8 \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a9|0x00a9: ARITH  (r8 I:int) = (r12 I:int A[D('limit' int)]) \- (r16 I:int A[D('startCodeOffset' int)]) \l0x00ab: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00ad: IGET  (r3 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.foundFirstFrameInGroup boolean \l}"];
Node_23 [shape=record,label="{23\:\ 0x00af|0x00af: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x00d8 \l}"];
Node_24 [shape=record,label="{24\:\ 0x00b1|0x00b1: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00b3: IGET  (r3 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.isKeyframe boolean \l}"];
Node_25 [shape=record,label="{25\:\ 0x00b5|0x00b5: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00f1 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b7|0x00b7: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b8|0x00b8: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00ba: IGET  (r4 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.totalBytesWritten long \l0x00bc: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00be: IGET  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.framePosition long \l0x00c0: MOVE  (r18 I:?[long, double]) = (r0 I:?[long, double]) \l0x00c2: ARITH  (r4 I:long) = (r4 I:long) \- (r18 I:long) \l0x00c4: CAST  (r3 I:int) = (int) (r4 I:long) \l0x00c5: ARITH  (r7 I:int) = (r3 I:int) \- (r8 I:int A[D('bytesWrittenPastStartCode' int)]) \l0x00c7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00c9: IGET  (r3 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x00cb: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00cd: IGET  (r4 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.frameTimeUs long \l0x00cf: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d0: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r4 I:long)\l  (r6 I:int A[D('flags' int)])\l  (r7 I:int A[D('size' int)])\l  (r8 I:int A[D('bytesWrittenPastStartCode' int)])\l  (r9 I:byte[])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleMetadata(long, int, int, int, byte[]):void type: INTERFACE \l0x00d3: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00d6: IPUT  \l  (r3 I:boolean)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.isKeyframe boolean \l}"];
Node_28 [shape=record,label="{28\:\ 0x00d8|0x00d8: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (184(0xb8, float:2.58E\-43) ?[int, float, short, byte, char])\l \l0x00da: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startCodeValue' int)])\l \l}"];
Node_29 [shape=record,label="{29\:\ 0x00dc|0x00dc: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x00f3 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00de|0x00de: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00df: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00e1: IPUT  \l  (r3 I:boolean)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.foundFirstFrameInGroup boolean \l0x00e3: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00e4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00e6: IPUT  \l  (r3 I:boolean)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.isKeyframe boolean \l}"];
Node_31 [shape=record,label="{31\:\ 0x00e8|0x00e8: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('offset' int)]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('startCodeOffset' int)])\l \l0x00ea: ARITH  (r15 I:int A[D('searchOffset' int)]) = (r13 I:int A[D('offset' int)]) + (3 int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x00ee|0x00ee: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x00f1|0x00f1: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_34 [shape=record,label="{34\:\ 0x00f3|0x00f3: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00f5: IGET  (r3 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.pesPtsUsAvailable boolean \l}"];
Node_35 [shape=record,label="{35\:\ 0x00f7|0x00f7: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0119 \l}"];
Node_36 [shape=record,label="{36\:\ 0x00f9|0x00f9: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00fb: IGET  (r4 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.pesTimeUs long \l}"];
Node_37 [shape=record,label="{37\:\ 0x00fd|0x00fd: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00ff: IPUT  \l  (r4 I:long)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.frameTimeUs long \l0x0101: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0103: IGET  (r4 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.totalBytesWritten long \l0x0105: CAST  (r0 I:long) = (long) (r8 I:int A[D('bytesWrittenPastStartCode' int)]) \l0x0106: MOVE  (r18 I:?[long, double]) = (r0 I:?[long, double]) \l0x0108: ARITH  (r4 I:long) = (r4 I:long) \- (r18 I:long) \l0x010a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x010c: IPUT  \l  (r4 I:long)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.framePosition long \l0x010e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x010f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0111: IPUT  \l  (r3 I:boolean)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.pesPtsUsAvailable boolean \l0x0113: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0114: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0116: IPUT  \l  (r3 I:boolean)\l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.foundFirstFrameInGroup boolean \l}"];
Node_38 [shape=record,label="{38\:\ 0x0119|0x0119: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x011b: IGET  (r4 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.frameTimeUs long \l0x011d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x011f: IGET  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H262Reader)\l com.google.android.exoplayer2.extractor.ts.H262Reader.frameDurationUs long \l0x0121: MOVE  (r18 I:?[long, double]) = (r0 I:?[long, double]) \l0x0123: ARITH  (r4 I:long) = (r4 I:long) + (r18 I:long) \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.H262Reader.consume((r20 'this' I:com.google.android.exoplayer2.extractor.ts.H262Reader A[IMMUTABLE_TYPE, THIS]), (r21 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0067\-0x009b: r2 'bytesAlreadyPassed' int\l  0x0059\-0x009b: r11 'lengthToStartCode' int\l  0x007f\-0x009b: r14 'result' android.util.Pair\<com.google.android.exoplayer2.Format, java.lang.Long\>\l  0x00b8\-0x00d8: r6 'flags' int\l  0x00c7\-0x00d8: r7 'size' int\l  0x00ab\-0x00e8: r8 'bytesWrittenPastStartCode' int\l  0x00ee\-0x00f1: r11 'lengthToStartCode' int\l  0x00f1\-0x0125: r8 'bytesWrittenPastStartCode' int\l  0x000c\-0x0125: r10 'dataArray' byte[]\l  0x0008\-0x0125: r12 'limit' int\l  0x0004\-0x0125: r13 'offset' int\l  0x002b\-0x0125: r15 'searchOffset' int\l  0x0033\-0x0125: r16 'startCodeOffset' int\l  0x0051\-0x0125: r17 'startCodeValue' int\l  ?\-0x0125: r21 'data' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_32;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_31;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_33;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_1;
Node_32 -> Node_14;
Node_33 -> Node_27;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_37;
Node_37 -> Node_31;
Node_38 -> Node_37;
}

