digraph "CFG forcom.google.android.exoplayer2.extractor.ts.H265Reader.nalUnitData([BII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = \l  (r1 I:com.google.android.exoplayer2.extractor.ts.H265Reader)\l com.google.android.exoplayer2.extractor.ts.H265Reader.hasOutputFormat boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader) = \l  (r1 I:com.google.android.exoplayer2.extractor.ts.H265Reader)\l com.google.android.exoplayer2.extractor.ts.H265Reader.sampleReader com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader \l0x0006: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.H265Reader$SampleReader)\l  (r2 I:byte[] A[D('dataArray' byte[])])\l  (r3 I:int A[D('offset' int)])\l  (r4 I:int A[D('limit' int)])\l com.google.android.exoplayer2.extractor.ts.H265Reader.SampleReader.readNalUnitData(byte[], int, int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer) = \l  (r1 I:com.google.android.exoplayer2.extractor.ts.H265Reader)\l com.google.android.exoplayer2.extractor.ts.H265Reader.prefixSei com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer \l0x000b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer)\l  (r2 I:byte[] A[D('dataArray' byte[])])\l  (r3 I:int A[D('offset' int)])\l  (r4 I:int A[D('limit' int)])\l com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer.appendToNalUnit(byte[], int, int):void type: VIRTUAL \l0x000e: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer) = \l  (r1 I:com.google.android.exoplayer2.extractor.ts.H265Reader)\l com.google.android.exoplayer2.extractor.ts.H265Reader.suffixSei com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer \l0x0010: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer)\l  (r2 I:byte[] A[D('dataArray' byte[])])\l  (r3 I:int A[D('offset' int)])\l  (r4 I:int A[D('limit' int)])\l com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer.appendToNalUnit(byte[], int, int):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer) = \l  (r1 I:com.google.android.exoplayer2.extractor.ts.H265Reader)\l com.google.android.exoplayer2.extractor.ts.H265Reader.vps com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer \l0x0016: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer)\l  (r2 I:byte[] A[D('dataArray' byte[])])\l  (r3 I:int A[D('offset' int)])\l  (r4 I:int A[D('limit' int)])\l com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer.appendToNalUnit(byte[], int, int):void type: VIRTUAL \l0x0019: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer) = \l  (r1 I:com.google.android.exoplayer2.extractor.ts.H265Reader)\l com.google.android.exoplayer2.extractor.ts.H265Reader.sps com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer \l0x001b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer)\l  (r2 I:byte[] A[D('dataArray' byte[])])\l  (r3 I:int A[D('offset' int)])\l  (r4 I:int A[D('limit' int)])\l com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer.appendToNalUnit(byte[], int, int):void type: VIRTUAL \l0x001e: IGET  (r0 I:com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer) = \l  (r1 I:com.google.android.exoplayer2.extractor.ts.H265Reader)\l com.google.android.exoplayer2.extractor.ts.H265Reader.pps com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer \l0x0020: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer)\l  (r2 I:byte[] A[D('dataArray' byte[])])\l  (r3 I:int A[D('offset' int)])\l  (r4 I:int A[D('limit' int)])\l com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer.appendToNalUnit(byte[], int, int):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.ts.H265Reader.nalUnitData((r1 'this' I:com.google.android.exoplayer2.extractor.ts.H265Reader A[IMMUTABLE_TYPE, THIS]), (r2 I:byte[] A[D('dataArray' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('limit' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0023: r2 'dataArray' byte[]\l  ?\-0x0023: r3 'offset' int\l  ?\-0x0023: r4 'limit' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

