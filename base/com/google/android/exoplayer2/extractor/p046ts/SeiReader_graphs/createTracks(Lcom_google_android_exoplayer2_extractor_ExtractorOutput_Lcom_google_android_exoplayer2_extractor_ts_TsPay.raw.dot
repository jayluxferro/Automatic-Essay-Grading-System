digraph "CFG forcom.google.android.exoplayer2.extractor.ts.SeiReader.createTracks(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorOutput;Lcom\/google\/android\/exoplayer2\/extractor\/ts\/TsPayloadReader$TrackIdGenerator;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput[]) = \l  (r11 I:com.google.android.exoplayer2.extractor.ts.SeiReader)\l com.google.android.exoplayer2.extractor.ts.SeiReader.outputs com.google.android.exoplayer2.extractor.TrackOutput[] \l0x0004: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r9 I:?[int, byte, short, char] A[D('i' int)]) \>= (r0 I:?[int, byte, short, char])  \-\> B:10:0x0060 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: INVOKE  \l  (r13 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator A[D('idGenerator' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)])\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator.generateNewId():void type: VIRTUAL \l0x000a: INVOKE  (r0 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator A[D('idGenerator' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)])\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator.getTrackId():int type: VIRTUAL \l0x000e: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x000f: INVOKE  (r10 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r12 I:com.google.android.exoplayer2.extractor.ExtractorOutput A[D('extractorOutput' com.google.android.exoplayer2.extractor.ExtractorOutput)])\l  (r0 I:int)\l  (r3 I:int)\l com.google.android.exoplayer2.extractor.ExtractorOutput.track(int, int):com.google.android.exoplayer2.extractor.TrackOutput type: INTERFACE \l0x0013: IGET  (r0 I:java.util.List\<com.google.android.exoplayer2.Format\>) = \l  (r11 I:com.google.android.exoplayer2.extractor.ts.SeiReader)\l com.google.android.exoplayer2.extractor.ts.SeiReader.closedCaptionFormats java.util.List \l0x0015: INVOKE  (r8 I:java.lang.Object) = (r0 I:java.util.List), (r9 I:int A[D('i' int)]) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r8 I:com.google.android.exoplayer2.Format) = (com.google.android.exoplayer2.Format) (r8 I:?[OBJECT, ARRAY]) \l0x001b: IGET  (r1 I:java.lang.String) = \l  (r8 I:com.google.android.exoplayer2.Format A[D('channelFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x001d: CONST_STR  (r0 I:java.lang.String) =  \"application\/cea\-608\" \l0x001f: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Object A[D('channelMimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: CONST_STR  (r0 I:java.lang.String) =  \"application\/cea\-708\" \l0x0027: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Object A[D('channelMimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x005e \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0030: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0033: CONST_STR  (r4 I:java.lang.String) =  \"Invalid closed caption mime type provided: \" \l0x0035: INVOKE  (r3 I:java.lang.StringBuilder) = (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0039: INVOKE  (r3 I:java.lang.StringBuilder) = \l  (r3 I:java.lang.StringBuilder)\l  (r1 I:java.lang.String A[D('channelMimeType' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003d: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0041: INVOKE  (r0 I:boolean), (r3 I:java.lang.Object) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean, java.lang.Object):void type: STATIC \l0x0044: INVOKE  (r0 I:java.lang.String) = \l  (r13 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator A[D('idGenerator' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator)])\l com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator.getFormatId():java.lang.String type: VIRTUAL \l0x0048: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0049: IGET  (r4 I:int) = \l  (r8 I:com.google.android.exoplayer2.Format A[D('channelFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.selectionFlags int \l0x004b: IGET  (r5 I:java.lang.String) = \l  (r8 I:com.google.android.exoplayer2.Format A[D('channelFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.language java.lang.String \l0x004d: IGET  (r6 I:int) = \l  (r8 I:com.google.android.exoplayer2.Format A[D('channelFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.accessibilityChannel int \l0x004f: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0050: INVOKE  (r0 I:com.google.android.exoplayer2.Format) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String A[D('channelMimeType' java.lang.String)])\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:java.lang.String)\l  (r6 I:int)\l  (r7 I:com.google.android.exoplayer2.drm.DrmInitData)\l com.google.android.exoplayer2.Format.createTextSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.String, int, com.google.android.exoplayer2.drm.DrmInitData):com.google.android.exoplayer2.Format type: STATIC \l0x0054: INVOKE  \l  (r10 I:com.google.android.exoplayer2.extractor.TrackOutput A[D('output' com.google.android.exoplayer2.extractor.TrackOutput)])\l  (r0 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.extractor.TrackOutput.format(com.google.android.exoplayer2.Format):void type: INTERFACE \l0x0057: IGET  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput[]) = \l  (r11 I:com.google.android.exoplayer2.extractor.ts.SeiReader)\l com.google.android.exoplayer2.extractor.ts.SeiReader.outputs com.google.android.exoplayer2.extractor.TrackOutput[] \l0x0059: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r9 I:?[int, short, byte, char] A[D('i' int)])\l  (r10 I:?[OBJECT, ARRAY] A[D('output' com.google.android.exoplayer2.extractor.TrackOutput)])\l \l0x005b: ARITH  (r9 I:int A[D('i' int)]) = (r9 I:int A[D('i' int)]) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x005e|0x005e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0060|0x0060: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.SeiReader.createTracks((r11 'this' I:com.google.android.exoplayer2.extractor.ts.SeiReader A[IMMUTABLE_TYPE, THIS]), (r12 I:com.google.android.exoplayer2.extractor.ExtractorOutput A[D('extractorOutput' com.google.android.exoplayer2.extractor.ExtractorOutput), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator A[D('idGenerator' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001d\-0x0060: r1 'channelMimeType' java.lang.String\l  0x001b\-0x0060: r8 'channelFormat' com.google.android.exoplayer2.Format\l  0x0013\-0x0060: r10 'output' com.google.android.exoplayer2.extractor.TrackOutput\l  0x0002\-0x0060: r9 'i' int\l  ?\-0x0060: r12 'extractorOutput' com.google.android.exoplayer2.extractor.ExtractorOutput\l  ?\-0x0060: r13 'idGenerator' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$TrackIdGenerator\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_8;
}

