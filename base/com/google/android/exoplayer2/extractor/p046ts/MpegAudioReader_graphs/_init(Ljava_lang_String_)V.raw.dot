digraph "CFG forcom.google.android.exoplayer2.extractor.ts.MpegAudioReader.\<init\>(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0004: IPUT  \l  (r2 I:int)\l  (r3 I:com.google.android.exoplayer2.extractor.ts.MpegAudioReader)\l com.google.android.exoplayer2.extractor.ts.MpegAudioReader.state int \l0x0006: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0008: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0009: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x000c: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r3 I:com.google.android.exoplayer2.extractor.ts.MpegAudioReader)\l com.google.android.exoplayer2.extractor.ts.MpegAudioReader.headerScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x000e: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r3 I:com.google.android.exoplayer2.extractor.ts.MpegAudioReader)\l com.google.android.exoplayer2.extractor.ts.MpegAudioReader.headerScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0010: IGET  (r0 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0012: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0013: APUT  \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:byte A[IMMUTABLE_TYPE])\l \l0x0015: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader) =  com.google.android.exoplayer2.extractor.MpegAudioHeader \l0x0017: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.\<init\>():void type: DIRECT \l0x001a: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l  (r3 I:com.google.android.exoplayer2.extractor.ts.MpegAudioReader)\l com.google.android.exoplayer2.extractor.ts.MpegAudioReader.header com.google.android.exoplayer2.extractor.MpegAudioHeader \l0x001c: IPUT  \l  (r4 I:java.lang.String A[D('language' java.lang.String)])\l  (r3 I:com.google.android.exoplayer2.extractor.ts.MpegAudioReader)\l com.google.android.exoplayer2.extractor.ts.MpegAudioReader.language java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.MpegAudioReader.\<init\>((r3 'this' I:com.google.android.exoplayer2.extractor.ts.MpegAudioReader A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[D('language' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001e: r4 'language' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

