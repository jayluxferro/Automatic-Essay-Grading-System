digraph "CFG forcom.google.android.exoplayer2.extractor.ts.TsExtractor.sniff(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r4 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.tsPacketBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0003: IGET  (r0 I:byte[]) = (r4 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0005: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (940(0x3ac, float:1.317E\-42) ?[int, float, short, byte, char])\l \l0x0007: INVOKE  \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r0 I:byte[] A[D('buffer' byte[])])\l  (r3 I:int)\l  (r4 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (188(0xbc, float:2.63E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r2 I:?[int, byte, short, char] A[D('j' int)]) \>= (r4 I:?[int, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST  (r4 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: INVOKE  \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:int A[D('j' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.skipFully(int):void type: INTERFACE \l0x0016: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: RETURN  (r3 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: ARITH  (r4 I:int) = (r1 I:int A[D('i' int)]) * (188 int) \l0x001a: ARITH  (r4 I:int) = (r4 I:int) + (r2 I:int A[D('j' int)]) \l0x001b: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[D('buffer' byte[]), IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x001d: CONST  (r5 I:?[int, float, short, byte, char]) = (71 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0024 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: ARITH  (r2 I:int A[D('j' int)]) = (r2 I:int A[D('j' int)]) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.ts.TsExtractor.sniff((r6 'this' I:com.google.android.exoplayer2.extractor.ts.TsExtractor A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0010\-0x0017: r1 'i' int\l  0x0005\-0x0026: r0 'buffer' byte[]\l  0x0018\-0x0026: r1 'i' int\l  0x000b\-0x0026: r2 'j' int\l  ?\-0x0026: r7 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_4;
}

