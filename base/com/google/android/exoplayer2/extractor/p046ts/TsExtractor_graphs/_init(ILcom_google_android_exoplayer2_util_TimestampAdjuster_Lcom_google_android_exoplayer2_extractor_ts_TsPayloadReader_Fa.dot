digraph "CFG forcom.google.android.exoplayer2.extractor.ts.TsExtractor.\<init\>(ILcom\/google\/android\/exoplayer2\/util\/TimestampAdjuster;Lcom\/google\/android\/exoplayer2\/extractor\/ts\/TsPayloadReader$Factory;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.payloadReaderFactory = (com.google.android.exoplayer2.extractor.p046ts.TsPayloadReader.Factory) com.google.android.exoplayer2.util.Assertions.checkNotNull(r5)\lr2.mode = r3\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r3 == 1) goto L_0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010}"];
Node_3 [shape=record,label="{3\:\ 0x0011|if (r3 != 2) goto L_0x0045\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|r2.timestampAdjusters = java.util.Collections.singletonList(r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|r2.tsPacketBuffer = new com.google.android.exoplayer2.util.ParsableByteArray((int) BUFFER_SIZE)\lr2.tsScratch = new com.google.android.exoplayer2.util.ParsableBitArray(new byte[3])\lr2.trackIds = new android.util.SparseBooleanArray()\lr2.tsPayloadReaders = new android.util.SparseArray\<\>()\lr2.continuityCounters = new android.util.SparseIntArray()\lresetPayloadReaders()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0044|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|r2.timestampAdjusters = new java.util.ArrayList()\lr2.timestampAdjusters.add(r4)\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.TsExtractor.\<init\>((r2v0 'this' com.google.android.exoplayer2.extractor.ts.TsExtractor A[IMMUTABLE_TYPE, THIS]), (r3v0 'mode' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'timestampAdjuster' com.google.android.exoplayer2.util.TimestampAdjuster A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'payloadReaderFactory' com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_5;
}

