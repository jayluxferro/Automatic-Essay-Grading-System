digraph "CFG forcom.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.consume(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r9 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x0002: INVOKE  (r4 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tableId' int)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CONST  (r5 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x000a: INVOKE  \l  (r11 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x000d: INVOKE  (r5 I:int) = \l  (r11 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x0011: ARITH  (r2 I:int) = (r5 I:int) \/ (4 int) \l0x0013: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char] A[D('programCount' int)])  \-\> B:10:0x0055 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r10 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.patScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0018: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0019: INVOKE  \l  (r11 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r5 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(com.google.android.exoplayer2.util.ParsableBitArray, int):void type: VIRTUAL \l0x001c: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r10 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.patScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x001e: CONST  (r6 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0020: INVOKE  (r3 I:int) = \l  (r5 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x0024: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r10 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.patScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0026: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0027: INVOKE  \l  (r5 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('programNumber' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0034 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r10 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.patScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x002e: INVOKE  \l  (r5 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.skipBits(int):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableBitArray) = \l  (r10 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.patScratch com.google.android.exoplayer2.util.ParsableBitArray \l0x0036: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.util.ParsableBitArray)\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableBitArray.readBits(int):int type: VIRTUAL \l0x003a: IGET  (r5 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r10 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x003c: INVOKE  (r5 I:android.util.SparseArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$000(com.google.android.exoplayer2.extractor.ts.TsExtractor):android.util.SparseArray type: STATIC \l0x0040: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.extractor.ts.SectionReader) =  com.google.android.exoplayer2.extractor.ts.SectionReader \l0x0042: NEW_INSTANCE  (r7 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader) =  com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader \l0x0044: IGET  (r8 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r10 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0046: INVOKE  \l  (r7 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PmtReader)\l  (r8 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l  (r1 I:int A[D('pid' int)])\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader.\<init\>(com.google.android.exoplayer2.extractor.ts.TsExtractor, int):void type: DIRECT \l0x0049: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ts.SectionReader)\l  (r7 I:com.google.android.exoplayer2.extractor.ts.SectionPayloadReader)\l com.google.android.exoplayer2.extractor.ts.SectionReader.\<init\>(com.google.android.exoplayer2.extractor.ts.SectionPayloadReader):void type: DIRECT \l0x004c: INVOKE  \l  (r5 I:android.util.SparseArray)\l  (r1 I:int A[D('pid' int)])\l  (r6 I:java.lang.Object)\l android.util.SparseArray.put(int, java.lang.Object):void type: VIRTUAL \l0x004f: IGET  (r5 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r10 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0051: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$108(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0055|0x0055: IGET  (r5 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r10 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0057: INVOKE  (r5 I:int) = \l  (r5 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$200(com.google.android.exoplayer2.extractor.ts.TsExtractor):int type: STATIC \l0x005b: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x005c|0x005c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0008 \l}"];
Node_12 [shape=record,label="{12\:\ 0x005e|0x005e: IGET  (r5 I:com.google.android.exoplayer2.extractor.ts.TsExtractor) = \l  (r10 I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.this$0 com.google.android.exoplayer2.extractor.ts.TsExtractor \l0x0060: INVOKE  (r5 I:android.util.SparseArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.ts.TsExtractor)\l com.google.android.exoplayer2.extractor.ts.TsExtractor.access$000(com.google.android.exoplayer2.extractor.ts.TsExtractor):android.util.SparseArray type: STATIC \l0x0064: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0065: INVOKE  (r5 I:android.util.SparseArray), (r6 I:int) android.util.SparseArray.remove(int):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader.consume((r10 'this' I:com.google.android.exoplayer2.extractor.ts.TsExtractor$PatReader A[IMMUTABLE_TYPE, THIS]), (r11 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sectionData' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x003a\-0x0055: r1 'pid' int\l  0x0024\-0x0055: r3 'programNumber' int\l  0x0014\-0x0068: r0 'i' int\l  0x0013\-0x0068: r2 'programCount' int\l  0x0006\-0x0068: r4 'tableId' int\l  ?\-0x0068: r11 'sectionData' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_4;
Node_9 -> Node_8;
Node_10 -> Node_11;
Node_11 -> Node_2;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_2;
}

