digraph "CFG forcom.google.android.exoplayer2.extractor.ts.DvbSubtitleReader.consume(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r4 I:boolean) = \l  (r6 I:com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader)\l com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader.writingSample boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r4 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader)\l com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader.bytesToCheck int \l0x0007: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: CONST  (r4 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x000c: INVOKE  (r4 I:boolean) = \l  (r6 I:com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader)\l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r4 I:int)\l com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader.checkNextByte(com.google.android.exoplayer2.util.ParsableByteArray, int):boolean type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0013 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: IGET  (r4 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader)\l com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader.bytesToCheck int \l0x0015: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001e \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: INVOKE  (r4 I:boolean) = \l  (r6 I:com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader)\l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r3 I:int)\l com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader.checkNextByte(com.google.android.exoplayer2.util.ParsableByteArray, int):boolean type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: INVOKE  (r1 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0022: INVOKE  (r0 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x0026: IGET  (r4 I:com.google.android.exoplayer2.extractor.TrackOutput[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader)\l com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader.outputs com.google.android.exoplayer2.extractor.TrackOutput[] \l0x0028: ARRAY_LENGTH  (r5 I:int) = (r4 I:?[]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: IF  (r3 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:14:0x0036 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: AGET  (r2 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x002d: INVOKE  \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r1 I:int A[D('dataPosition' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0030: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.TrackOutput A[D('output' com.google.android.exoplayer2.extractor.TrackOutput)])\l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r0 I:int A[D('bytesAvailable' int)])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x0033: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|0x0036: IGET  (r3 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader)\l com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader.sampleBytesWritten int \l0x0038: ARITH  (r3 I:int) = (r3 I:int) + (r0 I:int A[D('bytesAvailable' int)]) \l0x0039: IPUT  \l  (r3 I:int)\l  (r6 I:com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader)\l com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader.sampleBytesWritten int \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader.consume((r6 'this' I:com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x002d\-0x0036: r2 'output' com.google.android.exoplayer2.extractor.TrackOutput\l  0x0026\-0x003b: r0 'bytesAvailable' int\l  0x0022\-0x003b: r1 'dataPosition' int\l  ?\-0x003b: r7 'data' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_6;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_12;
Node_14 -> Node_6;
}

