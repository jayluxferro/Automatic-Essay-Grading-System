digraph "CFG forcom.google.android.exoplayer2.extractor.ts.DtsReader.continueRead(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;[BI)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = java.lang.Math.min(r4.bytesLeft(), r6 \- r3.bytesRead)\lr4.readBytes(r5, r3.bytesRead, r0)\lr3.bytesRead = r3.bytesRead + r0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|if (r3.bytesRead != r6) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.extractor.ts.DtsReader.continueRead((r3v0 'this' com.google.android.exoplayer2.extractor.ts.DtsReader A[IMMUTABLE_TYPE, THIS]), (r4v0 'source' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'target' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'targetLength' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
}

