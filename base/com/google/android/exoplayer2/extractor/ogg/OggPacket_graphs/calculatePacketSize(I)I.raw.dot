digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.OggPacket.calculatePacketSize(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  \l  (r2 I:int)\l  (r5 I:com.google.android.exoplayer2.extractor.ogg.OggPacket)\l com.google.android.exoplayer2.extractor.ogg.OggPacket.segmentCount int \l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IGET  (r2 I:int) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.OggPacket)\l com.google.android.exoplayer2.extractor.ogg.OggPacket.segmentCount int \l0x0006: ARITH  (r2 I:int) = (r2 I:int) + (r6 I:int A[D('startSegmentIndex' int)]) \l0x0007: IGET  (r3 I:com.google.android.exoplayer2.extractor.ogg.OggPageHeader) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.OggPacket)\l com.google.android.exoplayer2.extractor.ogg.OggPacket.pageHeader com.google.android.exoplayer2.extractor.ogg.OggPageHeader \l0x0009: IGET  (r3 I:int) = \l  (r3 I:com.google.android.exoplayer2.extractor.ogg.OggPageHeader)\l com.google.android.exoplayer2.extractor.ogg.OggPageHeader.pageSegmentCount int \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:5:0x001f \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IGET  (r2 I:com.google.android.exoplayer2.extractor.ogg.OggPageHeader) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.OggPacket)\l com.google.android.exoplayer2.extractor.ogg.OggPacket.pageHeader com.google.android.exoplayer2.extractor.ogg.OggPageHeader \l0x000f: IGET  (r2 I:int[]) = \l  (r2 I:com.google.android.exoplayer2.extractor.ogg.OggPageHeader)\l com.google.android.exoplayer2.extractor.ogg.OggPageHeader.laces int[] \l0x0011: IGET  (r3 I:int) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.OggPacket)\l com.google.android.exoplayer2.extractor.ogg.OggPacket.segmentCount int \l0x0013: ARITH  (r4 I:int) = (r3 I:int) + (1 int) \l0x0015: IPUT  \l  (r4 I:int)\l  (r5 I:com.google.android.exoplayer2.extractor.ogg.OggPacket)\l com.google.android.exoplayer2.extractor.ogg.OggPacket.segmentCount int \l0x0017: ARITH  (r3 I:int) = (r3 I:int) + (r6 I:int A[D('startSegmentIndex' int)]) \l0x0018: AGET  (r0 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x001a: ARITH  (r1 I:int A[D('size' int)]) = (r1 I:int A[D('size' int)]) + (r0 I:int A[D('segmentLength' int)]) \l0x001b: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('segmentLength' int)]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0004 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: RETURN  (r1 I:int A[D('size' int)]) \l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.extractor.ogg.OggPacket.calculatePacketSize((r5 'this' I:com.google.android.exoplayer2.extractor.ogg.OggPacket A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('startSegmentIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001a\-0x001f: r0 'segmentLength' int\l  0x0004\-0x001f: r1 'size' int\l  ?\-0x001f: r6 'startSegmentIndex' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
}

