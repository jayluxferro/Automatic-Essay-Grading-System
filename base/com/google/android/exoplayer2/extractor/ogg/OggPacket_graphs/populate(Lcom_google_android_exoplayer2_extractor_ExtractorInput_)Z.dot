digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.OggPacket.populate(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r9 == null) goto L_0x0024\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r3 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|PHI: r3 \l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v32 boolean) binds: [B:12:0x0024, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r3)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r8.populated == false) goto L_0x0013\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|r8.populated = false\lr8.packetArray.reset()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|LOOP_START\lLOOP:0: B:6:0x0013\-\>B:31:0x00a7\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|if (r8.populated != false) goto L_0x00ad\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017}"];
Node_9 [shape=record,label="{9\:\ 0x0019|if (r8.currentSegmentIndex \>= 0) goto L_0x0048\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b}"];
Node_11 [shape=record,label="{11\:\ 0x0021|if (r8.pageHeader.populate(r9, true) != false) goto L_0x0026\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|r3 = false\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|r1 = 0\lint r0 = r8.pageHeader.headerSize\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|if ((r8.pageHeader.type & 1) != 1) goto L_0x0043\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033}"];
Node_16 [shape=record,label="{16\:\ 0x0039|if (r8.packetArray.limit() != 0) goto L_0x0043\l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|int r0 = r0 + calculatePacketSize(0)\lint r1 = 0 + r8.segmentCount\l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|PHI: r0 r1 \l  PHI: (r0v1 'bytesToSkip' int) = (r0v0 'bytesToSkip' int), (r0v0 'bytesToSkip' int), (r0v2 'bytesToSkip' int) binds: [B:14:0x0031, B:16:0x0039, B:17:0x003b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v4 'segmentIndex' int) = (r1v3 'segmentIndex' int), (r1v3 'segmentIndex' int), (r1v5 'segmentIndex' int) binds: [B:14:0x0031, B:16:0x0039, B:17:0x003b] A[DONT_GENERATE, DONT_INLINE]\l|r9.skipFully(r0)\lr8.currentSegmentIndex = r1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|int r2 = calculatePacketSize(r8.currentSegmentIndex)\lint r1 = r8.currentSegmentIndex + r8.segmentCount\l}"];
Node_20 [shape=record,label="{20\:\ 0x0054|if (r2 \<= 0) goto L_0x00a0\l}"];
Node_21 [shape=record,label="{21\:\ 0x0056}"];
Node_22 [shape=record,label="{22\:\ 0x0063|if (r8.packetArray.capacity() \>= (r8.packetArray.limit() + r2)) goto L_0x0078\l}"];
Node_23 [shape=record,label="{23\:\ 0x0065|com.google.android.exoplayer2.util.ParsableByteArray r3 = r8.packetArray\lr3.data = java.util.Arrays.copyOf(r8.packetArray.data, r8.packetArray.limit() + r2)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0078|r9.readFully(r8.packetArray.data, r8.packetArray.limit(), r2)\lr8.packetArray.setLimit(r8.packetArray.limit() + r2)\l}"];
Node_25 [shape=record,label="{25\:\ 0x009b|if (r8.pageHeader.laces[r1 + \-1] == 255) goto L_0x00ab\l}"];
Node_26 [shape=record,label="{26\:\ 0x009d|r3 = true\l}"];
Node_27 [shape=record,label="{27\:\ 0x009e|PHI: r3 \l  PHI: (r3v18 boolean) = (r3v17 boolean), (r3v19 boolean) binds: [B:32:0x00ab, B:26:0x009d] A[DONT_GENERATE, DONT_INLINE]\l|r8.populated = r3\l}"];
Node_28 [shape=record,label="{28\:\ 0x00a0}"];
Node_29 [shape=record,label="{29\:\ 0x00a4|if (r1 != r8.pageHeader.pageSegmentCount) goto L_0x00a7\l}"];
Node_30 [shape=record,label="{30\:\ 0x00a6|r1 = \-1\l}"];
Node_31 [shape=record,label="{31\:\ 0x00a7|LOOP_END\lPHI: r1 \l  PHI: (r1v1 'segmentIndex' int) = (r1v0 'segmentIndex' int), (r1v2 'segmentIndex' int) binds: [B:37:0x00a7, B:36:0x00a7] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0013\-\>B:31:0x00a7\l|r8.currentSegmentIndex = r1\l}"];
Node_32 [shape=record,label="{32\:\ 0x00ab|r3 = false\l}"];
Node_33 [shape=record,label="{33\:\ 0x00ad}"];
Node_34 [shape=record,label="{34\:\ 0x00ad|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0023|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x00a7|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x00a7|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0013|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.ogg.OggPacket.populate((r8v0 'this' com.google.android.exoplayer2.extractor.ogg.OggPacket A[IMMUTABLE_TYPE, THIS]), (r9v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_38;
Node_5 -> Node_38;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_34;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_35[style=dashed];
Node_12 -> Node_3;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_37;
Node_30 -> Node_36;
Node_31 -> Node_6;
Node_32 -> Node_27;
Node_33 -> Node_39;
Node_34 -> Node_33;
Node_35 -> Node_40;
Node_36 -> Node_31;
Node_37 -> Node_31;
Node_38 -> Node_6;
}

