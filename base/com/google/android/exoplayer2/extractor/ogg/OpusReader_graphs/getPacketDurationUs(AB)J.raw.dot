digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.OpusReader.getPacketDurationUs([B)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (10000(0x2710, float:1.4013E\-41) ?[int, float, short, byte, char])\l \l0x0002: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[D('packet' byte[]), IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x0005: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0007: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char] A[D('toc' int)]) & (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2] t:[0x0021, 0x0023, 0x0023] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[D('packet' byte[]), IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x000f: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: ARITH  (r0 I:int) = (r3 I:int A[D('toc' int)]) \>\> (3 int) \l0x0013: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char] A[D('config' int)]) & (3 ?[int, float, short, byte, char]) \l0x0015: CONST  (r4 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IF  (r0 I:?[int, byte, short, char] A[D('config' int)]) \< (r4 I:?[int, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (2500(0x9c4, float:3.503E\-42) ?[int, float, short, byte, char])\l \l0x001b: ARITH  (r2 I:int A[D('length' int)]) = (r4 I:int) \<\< (r2 I:int A[D('length' int)]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: ARITH  (r4 I:int) = (r1 I:int A[D('frames' int)]) * (r2 I:int A[D('length' int)]) \l0x001f: CAST  (r4 I:long) = (long) (r4 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: RETURN  (r4 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: CONST  (r1 I:?[boolean, int, float, short, byte, char] A[D('frames' int)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: CONST  (r1 I:?[int, float, short, byte, char] A[D('frames' int)]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: CONST  (r4 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: IF  (r0 I:?[int, byte, short, char] A[D('config' int)]) \< (r4 I:?[int, byte, short, char])  \-\> B:13:0x002e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char] A[D('length' int)]) & (1 ?[boolean, int, float, short, byte, char]) \l0x002b: ARITH  (r2 I:int A[D('length' int)]) = (r5 I:int) \<\< (r4 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('length' int)]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0035 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: CONST  (r2 I:?[int, float, short, byte, char] A[D('length' int)]) = \l  (60000(0xea60, float:8.4078E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|0x0035: ARITH  (r2 I:int A[D('length' int)]) = (r5 I:int) \<\< (r2 I:int A[D('length' int)]) \l}"];
MethodNode[shape=record,label="{private long com.google.android.exoplayer2.extractor.ogg.OpusReader.getPacketDurationUs((r6 'this' I:com.google.android.exoplayer2.extractor.ogg.OpusReader A[IMMUTABLE_TYPE, THIS]), (r7 I:byte[] A[D('packet' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0013\-0x0021: r0 'config' int\l  0x0011\-0x0021: r1 'frames' int\l  0x0015\-0x0021: r2 'length' int\l  0x0022\-0x0023: r1 'frames' int\l  0x0025\-0x0041: r0 'config' int\l  0x0024\-0x0041: r1 'frames' int\l  0x0025\-0x0041: r2 'length' int\l  0x0007\-0x0041: r3 'toc' int\l  ?\-0x0041: r7 'packet' byte[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_3;
Node_9 -> Node_3;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_6;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_6;
Node_16 -> Node_6;
}

