digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.OpusReader.readHeaders(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;JLcom\/google\/android\/exoplayer2\/extractor\/ogg\/StreamReader$SetupData;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:boolean) = \l  (r15 I:com.google.android.exoplayer2.extractor.ogg.OpusReader)\l com.google.android.exoplayer2.extractor.ogg.OpusReader.headerRead boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0050 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r16 I:?[OBJECT, ARRAY] A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0006: IGET  (r1 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0008: INVOKE  (r2 I:int) = \l  (r16 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x000c: INVOKE  (r13 I:byte[]) = (r1 I:byte[]), (r2 I:int) java.util.Arrays.copyOf(byte[], int):byte[] type: STATIC \l0x0010: CONST  (r1 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0012: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r13 I:byte[] A[D('metadata' byte[]), IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0014: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0016: CONST  (r1 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l0x0018: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r13 I:byte[] A[D('metadata' byte[]), IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x001a: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x001c: ARITH  (r1 I:int) = (r1 I:int) \<\< (8 int) \l0x001e: CONST  (r2 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0020: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r13 I:byte[] A[D('metadata' byte[]), IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0022: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0024: ARITH  (r14 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) \| (r2 I:?[int, boolean, short, byte, char]) \l0x0026: NEW_INSTANCE  (r8 I:java.util.ArrayList) =  java.util.ArrayList \l0x0028: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0029: INVOKE  (r8 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x002c: INVOKE  \l  (r8 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r13 I:java.lang.Object A[D('metadata' byte[])])\l java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x002f: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ogg.OpusReader)\l  (r8 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r14 I:int A[D('preskip' int)])\l com.google.android.exoplayer2.extractor.ogg.OpusReader.putNativeOrderLong(java.util.List, int):void type: DIRECT \l0x0032: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (3840(0xf00, float:5.381E\-42) ?[int, float, short, byte, char])\l \l0x0034: INVOKE  \l  (r15 I:com.google.android.exoplayer2.extractor.ogg.OpusReader)\l  (r8 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r1 I:int)\l com.google.android.exoplayer2.extractor.ogg.OpusReader.putNativeOrderLong(java.util.List, int):void type: DIRECT \l0x0037: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0038: CONST_STR  (r2 I:java.lang.String) =  \"audio\/opus\" \l0x003a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x003c: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x003d: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (48000(0xbb80, float:6.7262E\-41) ?[int, float, short, byte, char])\l \l0x0040: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0043: INVOKE  (r1 I:com.google.android.exoplayer2.Format) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int A[D('channelCount' int)])\l  (r7 I:int)\l  (r8 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r9 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r10 I:int)\l  (r11 I:java.lang.String)\l com.google.android.exoplayer2.Format.createAudioSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, int, int, java.util.List, com.google.android.exoplayer2.drm.DrmInitData, int, java.lang.String):com.google.android.exoplayer2.Format type: STATIC \l0x0047: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('setupData' com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)])\l \l0x0049: IPUT  \l  (r1 I:com.google.android.exoplayer2.Format)\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)\l com.google.android.exoplayer2.extractor.ogg.StreamReader.SetupData.format com.google.android.exoplayer2.Format \l0x004b: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x004c: IPUT  \l  (r1 I:boolean)\l  (r15 I:com.google.android.exoplayer2.extractor.ogg.OpusReader)\l com.google.android.exoplayer2.extractor.ogg.OpusReader.headerRead boolean \l0x004e: CONST  (r12 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x004f|0x004f: RETURN  (r12 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0050|0x0050: INVOKE  (r1 I:int) = \l  (r16 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0054: SGET  (r2 I:int) =  com.google.android.exoplayer2.extractor.ogg.OpusReader.OPUS_CODE int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0056|0x0056: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0060 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0058|0x0058: CONST  (r12 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0059|0x0059: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r16 I:?[OBJECT, ARRAY] A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x005c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0060|0x0060: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('headerPacket' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{protected boolean com.google.android.exoplayer2.extractor.ogg.OpusReader.readHeaders((r15 'this' I:com.google.android.exoplayer2.extractor.ogg.OpusReader A[IMMUTABLE_TYPE, THIS]), (r16 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData A[D('setupData' com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0016\-0x004f: r6 'channelCount' int\l  0x002c\-0x004f: r8 'initializationData' java.util.List\<byte[]\>\l  0x0010\-0x004f: r13 'metadata' byte[]\l  0x0026\-0x004f: r14 'preskip' int\l  0x0059\-0x0060: r12 'headerPacket' boolean\l  ?\-0x0061: r16 'packet' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0061: r17 'position' long\l  ?\-0x0061: r19 'setupData' com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_3;
Node_8 -> Node_7;
}

