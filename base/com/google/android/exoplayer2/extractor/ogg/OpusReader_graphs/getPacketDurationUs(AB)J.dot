digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.OpusReader.getPacketDurationUs([B)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3 = r7[0] & 255\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|switch((r3 & 3)) \{\l    case 0: goto L_0x0021;\l    case 1: goto L_0x0023;\l    case 2: goto L_0x0023;\l    default: goto L_0x000c;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|r1 = r7[1] & 63\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|PHI: r1 \l  PHI: (r1v2 'frames' int) = (r1v0 'frames' int), (r1v1 'frames' int), (r1v3 'frames' int) binds: [B:9:0x0023, B:8:0x0021, B:2:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r3 \>\> 3\lr2 = r0 & 3\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|if (r0 \< 16) goto L_0x0025\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|int r2 = 2500 \<\< r2\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|PHI: r2 \l  PHI: (r2v4 'length' int) = (r2v1 'length' int), (r2v2 'length' int), (r2v3 'length' int), (r2v5 'length' int) binds: [B:16:0x0035, B:15:0x0031, B:12:0x0029, B:5:0x0019] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|RETURN\l|return (long) (r1 * r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|r1 = 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|r1 = 2\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025}"];
Node_11 [shape=record,label="{11\:\ 0x0027|if (r0 \< 12) goto L_0x002e\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|int r2 = 10000 \<\< (r2 & 1)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e}"];
Node_14 [shape=record,label="{14\:\ 0x002f|if (r2 != 3) goto L_0x0035\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|r2 = 60000\l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|int r2 = 10000 \<\< r2\l}"];
MethodNode[shape=record,label="{private long com.google.android.exoplayer2.extractor.ogg.OpusReader.getPacketDurationUs((r6v0 'this' com.google.android.exoplayer2.extractor.ogg.OpusReader A[IMMUTABLE_TYPE, THIS]), (r7v0 'packet' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_3;
Node_9 -> Node_3;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_6;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_6;
Node_16 -> Node_6;
}

