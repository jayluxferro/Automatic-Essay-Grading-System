digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisUtil.verifyVorbisHeaderCapturePattern(ILcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;Z)Z" {
subgraph cluster_Region_1101475423 {
label = "R(1:(1:(2:(1:26)|(1:4)))(1:(1:(2:(1:27)|(1:9)))(1:(1:25)(1:(2:(1:28)|(1:24))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_376773048 {
label = "IF [B:1:0x0006] THEN: R(1:(2:(1:26)|(1:4))) ELSE: R(1:(1:(2:(1:27)|(1:9)))(1:(1:25)(1:(2:(1:28)|(1:24)))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.bytesLeft() \< 7) goto L_0x0008\l}"];
subgraph cluster_Region_1299825308 {
label = "R(1:(2:(1:26)|(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_1925912649 {
label = "R(2:(1:26)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_182846873 {
label = "IF [B:2:0x0008] THEN: R(1:26) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r5 == true) goto L_?\l}"];
subgraph cluster_Region_878732708 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_932064406 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0027|throw new com.google.android.exoplayer2.ParserException(\"too short header: \" + r4.bytesLeft())\l}"];
}
}
}
subgraph cluster_Region_489513854 {
label = "R(1:(1:(2:(1:27)|(1:9)))(1:(1:25)(1:(2:(1:28)|(1:24))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_668821391 {
label = "IF [B:6:0x002c] THEN: R(1:(2:(1:27)|(1:9))) ELSE: R(1:(1:25)(1:(2:(1:28)|(1:24)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002c|if (r4.readUnsignedByte() != r3) goto L_0x002e\l}"];
subgraph cluster_Region_279407509 {
label = "R(1:(2:(1:27)|(1:9)))";
node [shape=record,color=blue];
subgraph cluster_Region_1451958155 {
label = "R(2:(1:27)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_550215863 {
label = "IF [B:7:0x002e] THEN: R(1:27) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002e|if (r5 != false) goto L_?\l}"];
subgraph cluster_Region_1827031614 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1194754036 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x004c|throw new com.google.android.exoplayer2.ParserException(\"expected header type \" + java.lang.Integer.toHexString(r3))\l}"];
}
}
}
subgraph cluster_Region_1238321118 {
label = "R(1:(1:25)(1:(2:(1:28)|(1:24)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_888965192 {
label = "IF [B:11:0x0053, B:13:0x005b, B:15:0x0063, B:17:0x006b, B:19:0x0073, B:21:0x007b] THEN: R(1:25) ELSE: R(1:(2:(1:28)|(1:24))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0053|if (r4.readUnsignedByte() == 118) goto L_0x0055\l}"];
Node_13 [shape=record,label="{13\:\ 0x005b|ADDED_TO_REGION\l|if (r4.readUnsignedByte() == 111) goto L_0x005d\l}"];
Node_15 [shape=record,label="{15\:\ 0x0063|ADDED_TO_REGION\l|if (r4.readUnsignedByte() == 114) goto L_0x0065\l}"];
Node_17 [shape=record,label="{17\:\ 0x006b|ADDED_TO_REGION\l|if (r4.readUnsignedByte() == 98) goto L_0x006d\l}"];
Node_19 [shape=record,label="{19\:\ 0x0073|ADDED_TO_REGION\l|if (r4.readUnsignedByte() == 105) goto L_0x0075\l}"];
Node_21 [shape=record,label="{21\:\ 0x007b|ADDED_TO_REGION\l|if (r4.readUnsignedByte() == 115) goto L_0x0087\l}"];
subgraph cluster_Region_1779794771 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0087|SYNTHETIC\lRETURN\l|return true\l}"];
}
subgraph cluster_Region_505976890 {
label = "R(1:(2:(1:28)|(1:24)))";
node [shape=record,color=blue];
subgraph cluster_Region_761974166 {
label = "R(2:(1:28)|(1:24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2097462971 {
label = "IF [B:22:0x007d] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x007d|if (r5 != false) goto L_?\l}"];
subgraph cluster_Region_1003337043 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1644041048 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0086|throw new com.google.android.exoplayer2.ParserException(\"expected characters 'vorbis'\")\l}"];
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0028}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0030}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x004d}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0055}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x005d}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0065}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x006d}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0075}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x007f}"];
MethodNode[shape=record,label="{public static boolean com.google.android.exoplayer2.extractor.ogg.VorbisUtil.verifyVorbisHeaderCapturePattern((r3v0 'headerType' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'header' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'quiet' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_26;
Node_6 -> Node_7;
Node_6 -> Node_10[style=dashed];
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_27;
Node_11 -> Node_12;
Node_11 -> Node_22[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_22[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_22[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_22[style=dashed];
Node_19 -> Node_20;
Node_19 -> Node_22[style=dashed];
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_23 -> Node_24;
}

