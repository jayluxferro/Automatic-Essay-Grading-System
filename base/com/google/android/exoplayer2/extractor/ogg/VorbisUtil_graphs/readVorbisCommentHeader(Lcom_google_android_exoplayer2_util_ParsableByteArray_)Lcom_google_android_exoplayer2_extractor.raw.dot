digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisUtil.readVorbisCommentHeader(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Lcom\/google\/android\/exoplayer2\/extractor\/ogg\/VorbisUtil$CommentHeader;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0001: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  \l  (r7 I:int)\l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r8 I:boolean)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.verifyVorbisHeaderCapturePattern(int, com.google.android.exoplayer2.util.ParsableByteArray, boolean):boolean type: STATIC \l0x0005: CONST  (r5 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x0006: INVOKE  (r8 I:long) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readLittleEndianUnsignedInt():long type: VIRTUAL \l0x000a: CAST  (r4 I:int) = (int) (r8 I:long) \l0x000b: ARITH  (r5 I:int A[D('length' int)]) = (r5 I:int A[D('length' int)]) + (4 int) \l0x000d: INVOKE  (r6 I:java.lang.String) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r4 I:int A[D('len' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.readString(int):java.lang.String type: VIRTUAL \l0x0011: INVOKE  (r7 I:int) = (r6 I:java.lang.String A[D('vendor' java.lang.String)]) java.lang.String.length():int type: VIRTUAL \l0x0015: ARITH  (r5 I:int A[D('length' int)]) = (r7 I:int) + (11 int) \l0x0017: INVOKE  (r0 I:long) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readLittleEndianUnsignedInt():long type: VIRTUAL \l0x001b: CAST  (r7 I:int) = (int) (r0 I:long A[D('commentListLen' long)]) \l0x001c: NEW_ARRAY  (r2 I:java.lang.String[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x001e: ARITH  (r5 I:int A[D('length' int)]) = (r5 I:int A[D('length' int)]) + (4 int) \l0x0020: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: CAST  (r8 I:long) = (long) (r3 I:int A[D('i' int)]) \l0x0022: CMP_L  (r7 I:int) = (r8 I:long), (r0 I:long A[D('commentListLen' long)]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0024|0x0024: IF  (r7 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:4:0x003d \l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: INVOKE  (r8 I:long) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readLittleEndianUnsignedInt():long type: VIRTUAL \l0x002a: CAST  (r4 I:int A[D('len' int)]) = (int) (r8 I:long) \l0x002b: ARITH  (r5 I:int A[D('length' int)]) = (r5 I:int A[D('length' int)]) + (4 int) \l0x002d: INVOKE  (r7 I:java.lang.String) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r4 I:int A[D('len' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.readString(int):java.lang.String type: VIRTUAL \l0x0031: APUT  \l  (r2 I:?[OBJECT, ARRAY][] A[D('comments' java.lang.String[])])\l  (r3 I:?[int, short, byte, char] A[D('i' int)])\l  (r7 I:?[OBJECT, ARRAY])\l \l0x0033: AGET  (r7 I:?[OBJECT, ARRAY]) = \l  (r2 I:?[OBJECT, ARRAY][] A[D('comments' java.lang.String[])])\l  (r3 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0035: INVOKE  (r7 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0039: ARITH  (r5 I:int A[D('length' int)]) = (r5 I:int A[D('length' int)]) + (r7 I:int) \l0x003a: ARITH  (r3 I:int A[D('i' int)]) = (r3 I:int A[D('i' int)]) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x003d|0x003d: INVOKE  (r7 I:int) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0041: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0043|0x0043: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x004d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0045|0x0045: NEW_INSTANCE  (r7 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0047: CONST_STR  (r8 I:java.lang.String) =  \"framing bit expected to be set\" \l0x0049: INVOKE  \l  (r7 I:com.google.android.exoplayer2.ParserException)\l  (r8 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x004c|0x004c: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x004d|0x004d: ARITH  (r5 I:int A[D('length' int)]) = (r5 I:int A[D('length' int)]) + (1 int) \l0x004f: NEW_INSTANCE  (r7 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader) =  com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader \l0x0051: INVOKE  \l  (r7 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader)\l  (r6 I:java.lang.String A[D('vendor' java.lang.String)])\l  (r2 I:java.lang.String[] A[D('comments' java.lang.String[])])\l  (r5 I:int A[D('length' int)])\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.CommentHeader.\<init\>(java.lang.String, java.lang.String[], int):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0054|0x0054: RETURN  \l  (r7 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader)\l \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readVorbisCommentHeader((r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001b\-0x0054: r0 'commentListLen' long\l  0x001e\-0x0054: r2 'comments' java.lang.String[]\l  0x0021\-0x0054: r3 'i' int\l  0x000b\-0x0054: r4 'len' int\l  0x0006\-0x0054: r5 'length' int\l  0x0011\-0x0054: r6 'vendor' java.lang.String\l  ?\-0x0054: r10 'headerData' com.google.android.exoplayer2.util.ParsableByteArray\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

