digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisUtil.readResidues(Lcom\/google\/android\/exoplayer2\/extractor\/ogg\/VorbisBitArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r13 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0001: CONST  (r12 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x0003: CONST  (r11 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0005: INVOKE  (r9 I:int) = \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r13 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x0009: ARITH  (r7 I:int) = (r9 I:int) + (1 int) \l0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r3 I:?[int, byte, short, char] A[D('i' int)]) \>= (r7 I:?[int, byte, short, char] A[D('residueCount' int)])  \-\> B:22:0x0068 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: CONST  (r9 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0010: INVOKE  (r8 I:int) = \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x0014: CONST  (r9 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r8 I:?[int, byte, short, char] A[D('residueType' int)]) \<= (r9 I:?[int, byte, short, char])  \-\> B:6:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: NEW_INSTANCE  (r9 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0019: CONST_STR  (r10 I:java.lang.String) =  \"residueType greater than 2 is not decodable\" \l0x001b: INVOKE  \l  (r9 I:com.google.android.exoplayer2.ParserException)\l  (r10 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: INVOKE  \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r12 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x0022: INVOKE  \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r12 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x0025: INVOKE  \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r12 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x0028: INVOKE  (r9 I:int) = \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r13 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x002c: ARITH  (r1 I:int) = (r9 I:int) + (1 int) \l0x002e: INVOKE  \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r11 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x0031: NEW_ARRAY  (r0 I:int[]) = (r1 I:int A[D('classifications' int), IMMUTABLE_TYPE]) type: int[] \l0x0033: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: IF  (r4 I:?[int, byte, short, char] A[D('j' int)]) \>= (r1 I:?[int, byte, short, char] A[D('classifications' int)])  \-\> B:12:0x004f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0037: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0038: INVOKE  (r6 I:int) = \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x003c: INVOKE  (r9 I:boolean) = \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBit():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0040|0x0040: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0047 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|0x0042: CONST  (r9 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0043: INVOKE  (r2 I:int A[D('highBits' int)]) = \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0047|0x0047: ARITH  (r9 I:int) = (r2 I:int A[D('highBits' int)]) * (8 int) \l0x0049: ARITH  (r9 I:int) = (r9 I:int) + (r6 I:int A[D('lowBits' int)]) \l0x004a: APUT  \l  (r0 I:?[int, float][] A[D('cascade' int[])])\l  (r4 I:?[int, short, byte, char] A[D('j' int)])\l  (r9 I:?[int, float])\l \l0x004c: ARITH  (r4 I:int A[D('j' int)]) = (r4 I:int A[D('j' int)]) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004f|0x004f: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('j' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0050|0x0050: IF  (r4 I:?[int, byte, short, char] A[D('j' int)]) \>= (r1 I:?[int, byte, short, char] A[D('classifications' int)])  \-\> B:21:0x0065 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|0x0052: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0053|0x0053: IF  (r5 I:?[int, byte, short, char] A[D('k' int)]) \>= (r11 I:?[int, byte, short, char])  \-\> B:20:0x0062 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0055|0x0055: AGET  (r9 I:?[int, float]) = \l  (r0 I:?[int, float][] A[D('cascade' int[])])\l  (r4 I:?[int, short, byte, char] A[D('j' int)])\l \l0x0057: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0058: ARITH  (r10 I:int) = (r10 I:int) \<\< (r5 I:int A[D('k' int)]) \l0x0059: ARITH  (r9 I:?[int, boolean, short, byte, char]) = (r9 I:?[int, boolean, short, byte, char]) & (r10 I:?[int, boolean, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x005a|0x005a: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x005f \l}"];
Node_18 [shape=record,label="{18\:\ 0x005c|0x005c: INVOKE  \l  (r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r11 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x005f|0x005f: ARITH  (r5 I:int A[D('k' int)]) = (r5 I:int A[D('k' int)]) + (1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0062|0x0062: ARITH  (r4 I:int A[D('j' int)]) = (r4 I:int A[D('j' int)]) + (1 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0065|0x0065: ARITH  (r3 I:int A[D('i' int)]) = (r3 I:int A[D('i' int)]) + (1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0068|0x0068: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readResidues((r14 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0037\-0x004f: r2 'highBits' int\l  0x003c\-0x004f: r6 'lowBits' int\l  0x0053\-0x0065: r5 'k' int\l  0x0033\-0x0068: r0 'cascade' int[]\l  0x002e\-0x0068: r1 'classifications' int\l  0x0034\-0x0068: r4 'j' int\l  0x0014\-0x0068: r8 'residueType' int\l  0x000c\-0x0068: r3 'i' int\l  0x000b\-0x0068: r7 'residueCount' int\l  ?\-0x0068: r14 'bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_22;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_7;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_20 -> Node_13;
Node_21 -> Node_1;
}

