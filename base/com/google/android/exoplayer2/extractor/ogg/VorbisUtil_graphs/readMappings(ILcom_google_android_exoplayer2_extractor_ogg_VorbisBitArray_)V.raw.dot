digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisUtil.readMappings(ILcom\/google\/android\/exoplayer2\/extractor\/ogg\/VorbisBitArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r10 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0001: CONST  (r9 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0003: CONST  (r6 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0004: INVOKE  (r6 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r6 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x0008: ARITH  (r4 I:int) = (r6 I:int) + (1 int) \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r4 I:?[int, byte, short, char] A[D('mappingsCount' int)])  \-\> B:27:0x008d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: CONST  (r6 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x000f: INVOKE  (r3 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r6 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('mappingType' int)])\l k:[0] t:[0x0031] \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: CONST_STR  (r6 I:java.lang.String) =  \"VorbisUtil\" \l0x0018: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001a: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001d: CONST_STR  (r8 I:java.lang.String) =  \"mapping type other than 0 not supported: \" \l0x001f: INVOKE  (r7 I:java.lang.StringBuilder) = (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0023: INVOKE  (r7 I:java.lang.StringBuilder) = \l  (r7 I:java.lang.StringBuilder)\l  (r3 I:int A[D('mappingType' int)])\l java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0027: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002b: INVOKE  (r6 I:java.lang.String), (r7 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|0x0031: INVOKE  (r6 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBit():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0061 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|0x0037: INVOKE  (r6 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r10 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x003b: ARITH  (r5 I:int) = (r6 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: INVOKE  (r6 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBit():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0063 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|0x0043: INVOKE  (r6 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x0047: ARITH  (r0 I:int) = (r6 I:int) + (1 int) \l0x0049: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|0x004a: IF  (r2 I:?[int, byte, short, char] A[D('j' int)]) \>= (r0 I:?[int, byte, short, char] A[D('couplingSteps' int)])  \-\> B:15:0x0063 \l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|0x004c: ARITH  (r6 I:int) = (r11 I:int A[D('channels' int)]) + (\-1 int) \l0x004e: INVOKE  (r6 I:int) = (r6 I:int) com.google.android.exoplayer2.extractor.ogg.VorbisUtil.iLog(int):int type: STATIC \l0x0052: INVOKE  \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r6 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x0055: ARITH  (r6 I:int) = (r11 I:int A[D('channels' int)]) + (\-1 int) \l0x0057: INVOKE  (r6 I:int) = (r6 I:int) com.google.android.exoplayer2.extractor.ogg.VorbisUtil.iLog(int):int type: STATIC \l0x005b: INVOKE  \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r6 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x005e: ARITH  (r2 I:int A[D('j' int)]) = (r2 I:int A[D('j' int)]) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0061|0x0061: CONST  (r5 I:?[boolean, int, float, short, byte, char] A[D('submaps' int)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0063|0x0063: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0064: INVOKE  (r6 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r6 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0068|0x0068: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0072 \l}"];
Node_17 [shape=record,label="{17\:\ 0x006a|0x006a: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x006c: CONST_STR  (r7 I:java.lang.String) =  \"to reserved bits must be zero after mapping coupling steps\" \l0x006e: INVOKE  \l  (r6 I:com.google.android.exoplayer2.ParserException)\l  (r7 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0071|0x0071: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0072|0x0072: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0073|0x0073: IF  (r5 I:?[int, byte, short, char] A[D('submaps' int)]) \<= (r6 I:?[int, byte, short, char])  \-\> B:24:0x007e \l}"];
Node_21 [shape=record,label="{21\:\ 0x0075|0x0075: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0076|0x0076: IF  (r2 I:?[int, byte, short, char] A[D('j' int)]) \>= (r11 I:?[int, byte, short, char] A[D('channels' int)])  \-\> B:24:0x007e \l}"];
Node_23 [shape=record,label="{23\:\ 0x0078|0x0078: INVOKE  \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r10 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x007b: ARITH  (r2 I:int A[D('j' int)]) = (r2 I:int A[D('j' int)]) + (1 int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x007e|0x007e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('j' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x007f|0x007f: IF  (r2 I:?[int, byte, short, char] A[D('j' int)]) \>= (r5 I:?[int, byte, short, char] A[D('submaps' int)])  \-\> B:5:0x002e \l}"];
Node_26 [shape=record,label="{26\:\ 0x0081|0x0081: INVOKE  \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x0084: INVOKE  \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x0087: INVOKE  \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x008a: ARITH  (r2 I:int A[D('j' int)]) = (r2 I:int A[D('j' int)]) + (1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x008d|0x008d: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readMappings((r11 I:int A[D('channels' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0049\-0x0061: r0 'couplingSteps' int\l  0x004a\-0x0061: r2 'j' int\l  0x003d\-0x0061: r5 'submaps' int\l  0x0076\-0x007e: r2 'j' int\l  0x007f\-0x008d: r2 'j' int\l  0x0013\-0x008d: r3 'mappingType' int\l  0x0062\-0x008d: r5 'submaps' int\l  0x000b\-0x0093: r1 'i' int\l  0x000a\-0x0093: r4 'mappingsCount' int\l  ?\-0x0093: r11 'channels' int\l  ?\-0x0093: r12 'bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_27;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_12;
Node_14 -> Node_9;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_22;
Node_24 -> Node_25;
Node_25 -> Node_5;
Node_25 -> Node_26[style=dashed];
Node_26 -> Node_25;
}

