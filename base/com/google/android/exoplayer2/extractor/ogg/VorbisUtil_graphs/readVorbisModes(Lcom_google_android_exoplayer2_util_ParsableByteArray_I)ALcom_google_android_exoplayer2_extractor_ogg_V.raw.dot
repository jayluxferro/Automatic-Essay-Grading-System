digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisUtil.readVorbisModes(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;I)[Lcom\/google\/android\/exoplayer2\/extractor\/ogg\/VorbisUtil$Mode;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r5 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0001: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  \l  (r5 I:int)\l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r6 I:boolean)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.verifyVorbisHeaderCapturePattern(int, com.google.android.exoplayer2.util.ParsableByteArray, boolean):boolean type: STATIC \l0x0005: INVOKE  (r5 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0009: ARITH  (r3 I:int) = (r5 I:int) + (1 int) \l0x000b: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray) =  com.google.android.exoplayer2.extractor.ogg.VorbisBitArray \l0x000d: IGET  (r5 I:byte[]) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x000f: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r5 I:byte[])\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.\<init\>(byte[]):void type: DIRECT \l0x0012: INVOKE  (r5 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0016: ARITH  (r5 I:int) = (r5 I:int) * (8 int) \l0x0018: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r5 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x001b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r3 I:?[int, byte, short, char] A[D('numberOfBooks' int)])  \-\> B:3:0x0024 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001e|0x001e: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readBook(com.google.android.exoplayer2.extractor.ogg.VorbisBitArray):com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CodeBook type: STATIC \l0x0021: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: CONST  (r5 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0025: INVOKE  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r5 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x0029: ARITH  (r4 I:int) = (r5 I:int) + (1 int) \l0x002b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r4 I:?[int, byte, short, char] A[D('timeCount' int)])  \-\> B:10:0x0041 \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: CONST  (r5 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0030: INVOKE  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l  (r5 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|0x0034: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|0x0036: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0038: CONST_STR  (r6 I:java.lang.String) =  \"placeholder of time domain transforms not zeroed out\" \l0x003a: INVOKE  \l  (r5 I:com.google.android.exoplayer2.ParserException)\l  (r6 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x003d|0x003d: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readFloors(com.google.android.exoplayer2.extractor.ogg.VorbisBitArray):void type: STATIC \l0x0044: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readResidues(com.google.android.exoplayer2.extractor.ogg.VorbisBitArray):void type: STATIC \l0x0047: INVOKE  \l  (r8 I:int A[D('channels' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readMappings(int, com.google.android.exoplayer2.extractor.ogg.VorbisBitArray):void type: STATIC \l0x004a: INVOKE  (r2 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[]) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readModes(com.google.android.exoplayer2.extractor.ogg.VorbisBitArray):com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[] type: STATIC \l0x004e: INVOKE  (r5 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBit():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0052|0x0052: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x005c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0054|0x0054: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0056: CONST_STR  (r6 I:java.lang.String) =  \"framing bit after modes not set as expected\" \l0x0058: INVOKE  \l  (r5 I:com.google.android.exoplayer2.ParserException)\l  (r6 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x005b|0x005b: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x005c|0x005c: RETURN  \l  (r2 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[] A[D('modes' com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[])])\l \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[] com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readVorbisModes((r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('headerData' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('channels' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0012\-0x005c: r0 'bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray\l  0x001c\-0x005c: r1 'i' int\l  0x004e\-0x005c: r2 'modes' com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[]\l  0x000b\-0x005c: r3 'numberOfBooks' int\l  0x002b\-0x005c: r4 'timeCount' int\l  ?\-0x005c: r7 'headerData' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x005c: r8 'channels' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_4;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
}

