digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisUtil.readBook(Lcom\/google\/android\/exoplayer2\/extractor\/ogg\/VorbisBitArray;)Lcom\/google\/android\/exoplayer2\/extractor\/ogg\/VorbisUtil$CodeBook;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x0004: INVOKE  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x0008: CONST  (r16 I:?[int, float, short, byte, char]) = \l  (5653314(0x564342, float:7.92198E\-39) ?[int, float, short, byte, char])\l \l0x000b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0011: NEW_INSTANCE  (r16 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0013: INVOKE  (r16 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0016: CONST_STR  (r17 I:java.lang.String) =  \"expected code book to start with [0x56, 0x43, 0x42] at \" \l0x0018: INVOKE  (r16 I:java.lang.StringBuilder) = (r16 I:java.lang.StringBuilder), (r17 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001c: INVOKE  (r17 I:int) = \l  (r20 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.getPosition():int type: VIRTUAL \l0x0020: INVOKE  (r16 I:java.lang.StringBuilder) = (r16 I:java.lang.StringBuilder), (r17 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0024: INVOKE  (r16 I:java.lang.String) = (r16 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0028: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x002a: INVOKE  \l  (r2 I:com.google.android.exoplayer2.ParserException)\l  (r0 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x002d|0x002d: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|0x002e: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0030: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x0032: INVOKE  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x0036: CONST  (r2 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x0038: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x003a: INVOKE  (r4 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x003e: NEW_ARRAY  (r5 I:long[]) = (r4 I:int A[D('entries' int), IMMUTABLE_TYPE]) type: long[] \l0x0040: INVOKE  (r7 I:boolean) = \l  (r20 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBit():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0044|0x0044: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isOrdered' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x007b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0046|0x0046: INVOKE  (r9 I:boolean) = \l  (r20 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBit():boolean type: VIRTUAL \l0x004a: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x004b|0x004b: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[] A[D('lengthMap' long[])]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x004c|0x004c: IF  (r8 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:25:0x00a7 \l}"];
Node_9 [shape=record,label="{9\:\ 0x004e|0x004e: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isSparse' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x006c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0050|0x0050: INVOKE  (r2 I:boolean) = \l  (r20 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBit():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0054|0x0054: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0067 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0056|0x0056: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0057: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x0059: INVOKE  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x005d: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x005f: CAST  (r0 I:long) = (long) (r2 I:int) \l0x0060: MOVE  (r16 I:?[long, double]) = (r0 I:?[long, double]) \l0x0062: APUT  \l  (r5 I:?[long, double][] A[D('lengthMap' long[])])\l  (r8 I:?[int, short, byte, char] A[D('i' int)])\l  (r16 I:?[long, double])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|0x0064: ARITH  (r8 I:int A[D('i' int)]) = (r8 I:int A[D('i' int)]) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0067|0x0067: CONST  (r16 I:?[long, double]) = (0 ?[long, double]) \l0x0069: APUT  \l  (r5 I:?[long, double][] A[D('lengthMap' long[])])\l  (r8 I:?[int, short, byte, char] A[D('i' int)])\l  (r16 I:?[long, double])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x006c|0x006c: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x006d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x006f: INVOKE  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x0073: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0075: CAST  (r0 I:long) = (long) (r2 I:int) \l0x0076: MOVE  (r16 I:?[long, double]) = (r0 I:?[long, double]) \l0x0078: APUT  \l  (r5 I:?[long, double][] A[D('lengthMap' long[])])\l  (r8 I:?[int, short, byte, char] A[D('i' int)])\l  (r16 I:?[long, double])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x007b|0x007b: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x007c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x007e: INVOKE  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x0082: ARITH  (r11 I:int) = (r2 I:int) + (1 int) \l0x0084: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0085|0x0085: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[] A[D('lengthMap' long[])]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0086|0x0086: IF  (r8 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:25:0x00a7 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0088|0x0088: ARITH  (r2 I:int) = (r4 I:int A[D('entries' int)]) \- (r8 I:int A[D('i' int)]) \l0x008a: INVOKE  (r2 I:int) = (r2 I:int) com.google.android.exoplayer2.extractor.ogg.VorbisUtil.iLog(int):int type: STATIC \l0x008e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x0090: INVOKE  (r14 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x0094: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0095|0x0095: IF  (r10 I:?[int, byte, short, char] A[D('j' int)]) \>= (r14 I:?[int, byte, short, char] A[D('num' int)])  \-\> B:24:0x00a4 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0097|0x0097: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[] A[D('lengthMap' long[])]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0098|0x0098: IF  (r8 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:24:0x00a4 \l}"];
Node_23 [shape=record,label="{23\:\ 0x009a|0x009a: CAST  (r0 I:long) = (long) (r11 I:int A[D('length' int)]) \l0x009b: MOVE  (r16 I:?[long, double]) = (r0 I:?[long, double]) \l0x009d: APUT  \l  (r5 I:?[long, double][] A[D('lengthMap' long[])])\l  (r8 I:?[int, short, byte, char] A[D('i' int)])\l  (r16 I:?[long, double])\l \l0x009f: ARITH  (r8 I:int A[D('i' int)]) = (r8 I:int A[D('i' int)]) + (1 int) \l0x00a1: ARITH  (r10 I:int A[D('j' int)]) = (r10 I:int A[D('j' int)]) + (1 int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a4|0x00a4: ARITH  (r11 I:int A[D('length' int)]) = (r11 I:int A[D('length' int)]) + (1 int) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a7|0x00a7: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x00a8: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x00aa: INVOKE  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x00ae: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00af|0x00af: IF  (r6 I:?[int, byte, short, char] A[D('lookupType' int)]) \<= (r2 I:?[int, byte, short, char])  \-\> B:29:0x00ce \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b1|0x00b1: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x00b3: NEW_INSTANCE  (r16 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00b5: INVOKE  (r16 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00b8: CONST_STR  (r17 I:java.lang.String) =  \"lookup type greater than 2 not decodable: \" \l0x00ba: INVOKE  (r16 I:java.lang.StringBuilder) = (r16 I:java.lang.StringBuilder), (r17 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00be: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x00c0: INVOKE  (r16 I:java.lang.StringBuilder) = \l  (r0 I:java.lang.StringBuilder)\l  (r6 I:int A[D('lookupType' int)])\l java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00c4: INVOKE  (r16 I:java.lang.String) = (r16 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00c8: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x00ca: INVOKE  \l  (r2 I:com.google.android.exoplayer2.ParserException)\l  (r0 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_28 [shape=record,label="{28\:\ 0x00cd|0x00cd: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00ce|0x00ce: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00cf|0x00cf: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lookupType' int)]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00d4 \l}"];
Node_31 [shape=record,label="{31\:\ 0x00d1|0x00d1: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_32 [shape=record,label="{32\:\ 0x00d2|0x00d2: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lookupType' int)]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x010d \l}"];
Node_33 [shape=record,label="{33\:\ 0x00d4|0x00d4: CONST  (r2 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x00d6: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x00d8: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x00db: CONST  (r2 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x00dd: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x00df: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x00e2: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x00e3: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x00e5: INVOKE  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(int):int type: VIRTUAL \l0x00e9: ARITH  (r15 I:int) = (r2 I:int) + (1 int) \l0x00eb: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00ec: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x00ee: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l0x00f1: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x00f2|0x00f2: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lookupType' int)]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0116 \l}"];
Node_35 [shape=record,label="{35\:\ 0x00f4|0x00f4: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dimensions' int)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0113 \l}"];
Node_36 [shape=record,label="{36\:\ 0x00f6|0x00f6: CAST  (r0 I:long) = (long) (r4 I:int A[D('entries' int)]) \l0x00f7: MOVE  (r16 I:?[long, double]) = (r0 I:?[long, double]) \l0x00f9: CAST  (r0 I:long) = (long) (r3 I:int A[D('dimensions' int)]) \l0x00fa: MOVE  (r18 I:?[long, double]) = (r0 I:?[long, double]) \l0x00fc: INVOKE  (r12 I:long) = (r16 I:long), (r18 I:long) com.google.android.exoplayer2.extractor.ogg.VorbisUtil.mapType1QuantValues(long, long):long type: STATIC \l}"];
Node_37 [shape=record,label="{37\:\ 0x0100|0x0100: CAST  (r0 I:long) = (long) (r15 I:int A[D('valueBits' int)]) \l0x0101: MOVE  (r16 I:?[long, double]) = (r0 I:?[long, double]) \l0x0103: ARITH  (r16 I:long) = (r16 I:long) * (r12 I:long A[D('lookupValuesCount' long)]) \l0x0105: MOVE  (r0 I:?[long, double]) = (r16 I:?[long, double]) \l0x0107: CAST  (r2 I:int) = (int) (r0 I:long) \l0x0108: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)])\l \l0x010a: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.skipBits(int):void type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x010d|0x010d: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CodeBook) =  com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CodeBook \l0x010f: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CodeBook)\l  (r3 I:int A[D('dimensions' int)])\l  (r4 I:int A[D('entries' int)])\l  (r5 I:long[] A[D('lengthMap' long[])])\l  (r6 I:int A[D('lookupType' int)])\l  (r7 I:boolean A[D('isOrdered' boolean)])\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.CodeBook.\<init\>(int, int, long[], int, boolean):void type: DIRECT \l}"];
Node_39 [shape=record,label="{39\:\ 0x0112|0x0112: RETURN  \l  (r2 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CodeBook)\l \l}"];
Node_40 [shape=record,label="{40\:\ 0x0113|0x0113: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0116|0x0116: ARITH  (r2 I:int) = (r4 I:int A[D('entries' int)]) * (r3 I:int A[D('dimensions' int)]) \l0x0118: CAST  (r12 I:long) = (long) (r2 I:int) \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CodeBook com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readBook((r20 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[D('bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x004b\-0x007b: r8 'i' int\l  0x004a\-0x007b: r9 'isSparse' boolean\l  0x0095\-0x00a7: r10 'j' int\l  0x0084\-0x00a7: r11 'length' int\l  0x0094\-0x00a7: r14 'num' int\l  0x0100\-0x010d: r12 'lookupValuesCount' long\l  0x00eb\-0x010d: r15 'valueBits' int\l  0x0115\-0x0116: r12 'lookupValuesCount' long\l  0x0036\-0x0119: r3 'dimensions' int\l  0x003e\-0x0119: r4 'entries' int\l  0x0040\-0x0119: r5 'lengthMap' long[]\l  0x00ae\-0x0119: r6 'lookupType' int\l  0x0044\-0x0119: r7 'isOrdered' boolean\l  0x0085\-0x0119: r8 'i' int\l  0x0119\-0x0119: r12 'lookupValuesCount' long\l  0x0113\-0x0119: r15 'valueBits' int\l  ?\-0x0119: r20 'bitArray' com.google.android.exoplayer2.extractor.ogg.VorbisBitArray\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_25;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_7;
Node_14 -> Node_13;
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_20;
Node_24 -> Node_17;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_41;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_40;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_40 -> Node_37;
Node_41 -> Node_37;
}

