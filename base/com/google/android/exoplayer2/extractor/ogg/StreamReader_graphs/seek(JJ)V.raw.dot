digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.StreamReader.seek(JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.exoplayer2.extractor.ogg.OggPacket) = \l  (r3 I:com.google.android.exoplayer2.extractor.ogg.StreamReader)\l com.google.android.exoplayer2.extractor.ogg.StreamReader.oggPacket com.google.android.exoplayer2.extractor.ogg.OggPacket \l0x0002: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.OggPacket)\l com.google.android.exoplayer2.extractor.ogg.OggPacket.reset():void type: VIRTUAL \l0x0005: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0007: CMP_L  (r0 I:int) = (r4 I:long A[D('position' long)]), (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r0 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.extractor.ogg.StreamReader)\l com.google.android.exoplayer2.extractor.ogg.StreamReader.seekMapSet boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.ogg.StreamReader)\l  (r0 I:boolean)\l com.google.android.exoplayer2.extractor.ogg.StreamReader.reset(boolean):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IGET  (r0 I:int) = \l  (r3 I:com.google.android.exoplayer2.extractor.ogg.StreamReader)\l com.google.android.exoplayer2.extractor.ogg.StreamReader.state int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: IGET  (r0 I:com.google.android.exoplayer2.extractor.ogg.OggSeeker) = \l  (r3 I:com.google.android.exoplayer2.extractor.ogg.StreamReader)\l com.google.android.exoplayer2.extractor.ogg.StreamReader.oggSeeker com.google.android.exoplayer2.extractor.ogg.OggSeeker \l0x001c: INVOKE  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.OggSeeker)\l  (r6 I:long A[D('timeUs' long)])\l com.google.android.exoplayer2.extractor.ogg.OggSeeker.startSeek(long):long type: INTERFACE \l0x0020: IPUT  \l  (r0 I:long)\l  (r3 I:com.google.android.exoplayer2.extractor.ogg.StreamReader)\l com.google.android.exoplayer2.extractor.ogg.StreamReader.targetGranule long \l0x0022: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0023: IPUT  \l  (r0 I:int)\l  (r3 I:com.google.android.exoplayer2.extractor.ogg.StreamReader)\l com.google.android.exoplayer2.extractor.ogg.StreamReader.state int \l}"];
MethodNode[shape=record,label="{final void com.google.android.exoplayer2.extractor.ogg.StreamReader.seek((r3 'this' I:com.google.android.exoplayer2.extractor.ogg.StreamReader A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[D('timeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0025: r4 'position' long\l  ?\-0x0025: r6 'timeUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_6;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_6;
}

