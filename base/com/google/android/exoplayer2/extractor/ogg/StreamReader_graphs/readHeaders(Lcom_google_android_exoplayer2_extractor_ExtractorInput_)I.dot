digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.StreamReader.readHeaders(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r10 = true\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lPHI: r10 \l  PHI: (r10v1 'readingHeaders' boolean) = (r10v0 'readingHeaders' boolean), (r10v2 'readingHeaders' boolean) binds: [B:0:0x0000, B:19:0x0002] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:19:0x0002\l|if (r10 == false) goto L_0x0031\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r12.oggPacket.populate(r13) != false) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|r12.state = 3\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|r12.lengthOfReadPacket = r13.getPosition() \- r12.payloadStartPosition\lboolean r10 = readHeaders(r12.oggPacket.getPayload(), r12.payloadStartPosition, r12.setupData)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|if (r10 == false) goto L_0x0002\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|r12.payloadStartPosition = r13.getPosition()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|r12.sampleRate = r12.setupData.format.sampleRate\l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|if (r12.formatSet != false) goto L_0x0049\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|r12.trackOutput.format(r12.setupData.format)\lr12.formatSet = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x0049}"];
Node_12 [shape=record,label="{12\:\ 0x004d|if (r12.setupData.oggSeeker == null) goto L_0x0061\l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|r12.oggSeeker = r12.setupData.oggSeeker\l}"];
Node_14 [shape=record,label="{14\:\ 0x0055|r12.setupData = null\lr12.state = 2\lr12.oggPacket.trimPayload()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0061}"];
Node_16 [shape=record,label="{16\:\ 0x0069|if ((r13.getLength() \> \-1 ? 1 : (r13.getLength() == \-1 ? 0 : \-1)) != 0) goto L_0x0073\l}"];
Node_17 [shape=record,label="{17\:\ 0x006b|r12.oggSeeker = new com.google.android.exoplayer2.extractor.ogg.StreamReader.UnseekableOggSeeker((com.google.android.exoplayer2.extractor.ogg.StreamReader.C13011) null)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0073|com.google.android.exoplayer2.extractor.ogg.OggPageHeader r0 = r12.oggPacket.getPageHeader()\llong r2 = r12.payloadStartPosition\llong r4 = r13.getLength()\lint r6 = r0.headerSize\lr6 = r12\lr12.oggSeeker = new com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker(r2, r4, r6, r0.bodySize + r6, r0.granulePosition)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0002\-\>B:19:0x0002\l}"];
Node_20 [shape=record,label="{20\:\ 0x0031|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x000c|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0002|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0002|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return \-1\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.extractor.ogg.StreamReader.readHeaders((r12v0 'this' com.google.android.exoplayer2.extractor.ogg.StreamReader A[IMMUTABLE_TYPE, THIS]), (r13v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_21[style=dashed];
Node_4 -> Node_24;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_22;
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_25;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_14;
Node_19 -> Node_1;
Node_20 -> Node_8;
Node_21 -> Node_4;
Node_22 -> Node_19;
Node_23 -> Node_19;
}

