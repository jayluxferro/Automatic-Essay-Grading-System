digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r12 I:?[int, float, short, byte, char]) = \l  (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char])\l \l0x0002: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r6 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.getPosition():int type: VIRTUAL \l0x0007: ARITH  (r6 I:int) = (r6 I:int) + (r14 I:int A[D('numBits' int)]) \l0x0008: IGET  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.limit int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r6 I:?[int, byte, short, char]) \> (r8 I:?[int, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: INVOKE  (r6 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('numBits' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN  (r7 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: IGET  (r6 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.bitOffset int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0045 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IGET  (r6 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.bitOffset int \l0x001d: ARITH  (r6 I:int) = (8 int) \- (r6 I:int) \l0x001f: INVOKE  (r0 I:int A[D('bitCount' int)]) = (r14 I:int A[D('numBits' int)]), (r6 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0023: ARITH  (r6 I:int) = (8 int) \- (r0 I:int A[D('bitCount' int)]) \l0x0025: ARITH  (r3 I:int) = (r12 I:int) \>\>\> (r6 I:int) \l0x0027: IGET  (r6 I:byte[]) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.data byte[] \l0x0029: IGET  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.byteOffset int \l0x002b: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r6 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l \l0x002d: IGET  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.bitOffset int \l0x002f: ARITH  (r6 I:int) = (r6 I:int) \>\>\> (r8 I:int) \l0x0030: ARITH  (r5 I:?[int, boolean, short, byte, char] A[D('result' int)]) = (r6 I:?[int, boolean, short, byte, char]) & (r3 I:?[int, boolean, short, byte, char] A[D('mask' int)]) \l0x0032: IGET  (r6 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.bitOffset int \l0x0034: ARITH  (r6 I:int) = (r6 I:int) + (r0 I:int A[D('bitCount' int)]) \l0x0035: IPUT  \l  (r6 I:int)\l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.bitOffset int \l0x0037: IGET  (r6 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.bitOffset int \l0x0039: CONST  (r8 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0045 \l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|0x003d: IGET  (r6 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.byteOffset int \l0x003f: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l0x0041: IPUT  \l  (r6 I:int)\l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.byteOffset int \l0x0043: IPUT  \l  (r7 I:int)\l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.bitOffset int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|0x0045: ARITH  (r6 I:int) = (r14 I:int A[D('numBits' int)]) \- (r0 I:int A[D('bitCount' int)]) \l0x0047: CONST  (r7 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: IF  (r6 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:17:0x0068 \l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: ARITH  (r6 I:int) = (r14 I:int A[D('numBits' int)]) \- (r0 I:int A[D('bitCount' int)]) \l0x004c: ARITH  (r4 I:int) = (r6 I:int) \/ (8 int) \l0x004e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: IF  (r2 I:?[int, byte, short, char] A[D('i' int)]) \>= (r4 I:?[int, byte, short, char] A[D('numBytes' int)])  \-\> B:17:0x0068 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|0x0051: CAST  (r6 I:long) = (long) (r5 I:int A[D('result' int)]) \l0x0052: IGET  (r8 I:byte[]) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.data byte[] \l0x0054: IGET  (r9 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.byteOffset int \l0x0056: ARITH  (r10 I:int) = (r9 I:int) + (1 int) \l0x0058: IPUT  \l  (r10 I:int)\l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.byteOffset int \l0x005a: AGET  (r8 I:byte A[IMMUTABLE_TYPE]) = \l  (r8 I:byte[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l \l0x005c: CAST  (r8 I:long) = (long) (r8 I:int) \l0x005d: CONST  (r10 I:?[long, double]) = (255(0xff, double:1.26E\-321) ?[long, double]) \l0x005f: ARITH  (r8 I:long) = (r8 I:long) & (r10 I:long) \l0x0060: ARITH  (r8 I:long) = (r8 I:long) \<\< (r0 I:long A[D('bitCount' int)]) \l0x0061: ARITH  (r6 I:long) = (r6 I:long) \| (r8 I:long) \l0x0062: CAST  (r5 I:int A[D('result' int)]) = (int) (r6 I:long) \l0x0063: ARITH  (r0 I:int A[D('bitCount' int)]) = (r0 I:int A[D('bitCount' int)]) + (8 int) \l0x0065: ARITH  (r2 I:int A[D('i' int)]) = (r2 I:int A[D('i' int)]) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0068|0x0068: IF  (r14 I:?[int, byte, short, char] A[D('numBits' int)]) \<= (r0 I:?[int, byte, short, char] A[D('bitCount' int)])  \-\> B:19:0x007e \l}"];
Node_18 [shape=record,label="{18\:\ 0x006a|0x006a: ARITH  (r1 I:int) = (r14 I:int A[D('numBits' int)]) \- (r0 I:int A[D('bitCount' int)]) \l0x006c: ARITH  (r6 I:int) = (8 int) \- (r1 I:int A[D('bitsOnNextByte' int)]) \l0x006e: ARITH  (r3 I:int) = (r12 I:int) \>\>\> (r6 I:int) \l0x0070: IGET  (r6 I:byte[]) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.data byte[] \l0x0072: IGET  (r7 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.byteOffset int \l0x0074: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r6 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x0076: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) & (r3 I:?[int, boolean, short, byte, char] A[D('mask' int)]) \l0x0077: ARITH  (r6 I:int) = (r6 I:int) \<\< (r0 I:int A[D('bitCount' int)]) \l0x0078: ARITH  (r5 I:?[int, boolean, short, byte, char] A[D('result' int)]) = (r5 I:?[int, boolean, short, byte, char] A[D('result' int)]) \| (r6 I:?[int, boolean, short, byte, char]) \l0x0079: IGET  (r6 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.bitOffset int \l0x007b: ARITH  (r6 I:int) = (r6 I:int) + (r1 I:int A[D('bitsOnNextByte' int)]) \l0x007c: IPUT  \l  (r6 I:int)\l  (r13 I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray)\l com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.bitOffset int \l}"];
Node_19 [shape=record,label="{19\:\ 0x007e|0x007e: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('result' int)])\l \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.extractor.ogg.VorbisBitArray.readBits((r13 'this' I:com.google.android.exoplayer2.extractor.ogg.VorbisBitArray A[IMMUTABLE_TYPE, THIS]), (r14 I:int A[D('numBits' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0027\-0x0045: r3 'mask' int\l  0x004f\-0x0068: r2 'i' int\l  0x004e\-0x0068: r4 'numBytes' int\l  0x006c\-0x007e: r1 'bitsOnNextByte' int\l  0x0070\-0x007e: r3 'mask' int\l  0x0017\-0x007f: r0 'bitCount' int\l  0x0016\-0x007f: r5 'result' int\l  ?\-0x007f: r14 'numBits' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_15;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_5;
}

