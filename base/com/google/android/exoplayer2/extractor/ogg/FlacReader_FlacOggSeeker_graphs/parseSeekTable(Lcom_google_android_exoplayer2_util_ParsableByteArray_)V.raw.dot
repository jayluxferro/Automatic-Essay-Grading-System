digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.FlacReader.FlacOggSeeker.parseSeekTable(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: INVOKE  \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0004: INVOKE  (r1 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt24():int type: VIRTUAL \l0x0008: ARITH  (r2 I:int) = (r1 I:int A[D('length' int)]) \/ (18 int) \l0x000a: NEW_ARRAY  (r3 I:long[]) = (r2 I:int A[D('numberOfSeekPoints' int), IMMUTABLE_TYPE]) type: long[] \l0x000c: IPUT  \l  (r3 I:long[])\l  (r6 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.FlacOggSeeker.seekPointGranules long[] \l0x000e: NEW_ARRAY  (r3 I:long[]) = (r2 I:int A[D('numberOfSeekPoints' int), IMMUTABLE_TYPE]) type: long[] \l0x0010: IPUT  \l  (r3 I:long[])\l  (r6 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.FlacOggSeeker.seekPointOffsets long[] \l0x0012: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char] A[D('numberOfSeekPoints' int)])  \-\> B:3:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: IGET  (r3 I:long[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.FlacOggSeeker.seekPointGranules long[] \l0x0017: INVOKE  (r4 I:long) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readLong():long type: VIRTUAL \l0x001b: APUT  \l  (r3 I:?[long, double][])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r4 I:?[long, double])\l \l0x001d: IGET  (r3 I:long[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.FlacOggSeeker.seekPointOffsets long[] \l0x001f: INVOKE  (r4 I:long) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readLong():long type: VIRTUAL \l0x0023: APUT  \l  (r3 I:?[long, double][])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r4 I:?[long, double])\l \l0x0025: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0026: INVOKE  \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0029: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|0x002c: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ogg.FlacReader.FlacOggSeeker.parseSeekTable((r6 'this' I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0013\-0x002c: r0 'i' int\l  0x0008\-0x002c: r1 'length' int\l  0x000a\-0x002c: r2 'numberOfSeekPoints' int\l  ?\-0x002c: r7 'data' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

