digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.FlacReader.readHeaders(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;JLcom\/google\/android\/exoplayer2\/extractor\/ogg\/StreamReader$SetupData;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0002: IGET  (r13 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0006: IGET  (r2 I:com.google.android.exoplayer2.util.FlacStreamInfo) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.streamInfo com.google.android.exoplayer2.util.FlacStreamInfo \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x004e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.util.FlacStreamInfo) =  com.google.android.exoplayer2.util.FlacStreamInfo \l0x000c: CONST  (r3 I:?[int, float, short, byte, char]) = (17 ?[int, float, short, byte, char]) \l0x000e: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l  (r13 I:byte[] A[D('data' byte[])])\l  (r3 I:int)\l com.google.android.exoplayer2.util.FlacStreamInfo.\<init\>(byte[], int):void type: DIRECT \l0x0011: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0013: IPUT  \l  (r2 I:com.google.android.exoplayer2.util.FlacStreamInfo)\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.streamInfo com.google.android.exoplayer2.util.FlacStreamInfo \l0x0015: CONST  (r2 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0017: INVOKE  (r3 I:int) = \l  (r17 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x001b: INVOKE  (r14 I:byte[]) = (r13 I:byte[] A[D('data' byte[])]), (r2 I:int), (r3 I:int) java.util.Arrays.copyOfRange(byte[], int, int):byte[] type: STATIC \l0x001f: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0020: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (\-128(0xffffffffffffff80, float:NaN) ?[int, float, short, byte, char])\l \l0x0022: APUT  \l  (r14 I:byte[] A[D('metadata' byte[]), IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:byte A[IMMUTABLE_TYPE])\l \l0x0024: INVOKE  (r9 I:java.util.List) = (r14 I:java.lang.Object A[D('metadata' byte[])]) java.util.Collections.singletonList(java.lang.Object):java.util.List type: STATIC \l0x0028: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0029: CONST_STR  (r3 I:java.lang.String) =  \"audio\/x\-flac\" \l0x002b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002c: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x002d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x002f: IGET  (r6 I:com.google.android.exoplayer2.util.FlacStreamInfo) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.streamInfo com.google.android.exoplayer2.util.FlacStreamInfo \l0x0031: INVOKE  (r6 I:int) = (r6 I:com.google.android.exoplayer2.util.FlacStreamInfo) com.google.android.exoplayer2.util.FlacStreamInfo.bitRate():int type: VIRTUAL \l0x0035: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0037: IGET  (r7 I:com.google.android.exoplayer2.util.FlacStreamInfo) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.streamInfo com.google.android.exoplayer2.util.FlacStreamInfo \l0x0039: IGET  (r7 I:int) = (r7 I:com.google.android.exoplayer2.util.FlacStreamInfo) com.google.android.exoplayer2.util.FlacStreamInfo.channels int \l0x003b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x003d: IGET  (r8 I:com.google.android.exoplayer2.util.FlacStreamInfo) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.streamInfo com.google.android.exoplayer2.util.FlacStreamInfo \l0x003f: IGET  (r8 I:int) = (r8 I:com.google.android.exoplayer2.util.FlacStreamInfo) com.google.android.exoplayer2.util.FlacStreamInfo.sampleRate int \l0x0041: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0043: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0044: INVOKE  (r2 I:com.google.android.exoplayer2.Format) = \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r10 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r11 I:int)\l  (r12 I:java.lang.String)\l com.google.android.exoplayer2.Format.createAudioSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, int, int, java.util.List, com.google.android.exoplayer2.drm.DrmInitData, int, java.lang.String):com.google.android.exoplayer2.Format type: STATIC \l0x0048: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('setupData' com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)])\l \l0x004a: IPUT  \l  (r2 I:com.google.android.exoplayer2.Format)\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)\l com.google.android.exoplayer2.extractor.ogg.StreamReader.SetupData.format com.google.android.exoplayer2.Format \l}"];
Node_3 [shape=record,label="{3\:\ 0x004c|0x004c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x004d|0x004d: RETURN  (r2 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ 0x004e|0x004e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004f: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r13 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0051: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (127(0x7f, float:1.78E\-43) ?[int, float, short, byte, char]) \l0x0053: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0054|0x0054: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x006b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0056|0x0056: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker) =  com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker \l0x0058: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x005a: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker)\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.FlacOggSeeker.\<init\>(com.google.android.exoplayer2.extractor.ogg.FlacReader):void type: DIRECT \l0x005d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x005f: IPUT  \l  (r2 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker)\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.flacOggSeeker com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker \l0x0061: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0063: IGET  (r2 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.flacOggSeeker com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker \l0x0065: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0067: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker)\l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.FlacOggSeeker.parseSeekTable(com.google.android.exoplayer2.util.ParsableByteArray):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x006b|0x006b: INVOKE  (r2 I:boolean) = (r13 I:byte[] A[D('data' byte[])]) com.google.android.exoplayer2.extractor.ogg.FlacReader.isAudioPacket(byte[]):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x006f|0x006f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x004c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0071|0x0071: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0073: IGET  (r2 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.flacOggSeeker com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker \l}"];
Node_11 [shape=record,label="{11\:\ 0x0075|0x0075: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0088 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0077|0x0077: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0079: IGET  (r2 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.flacOggSeeker com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker \l0x007b: MOVE  (r0 I:?[long, double]) = (r18 I:?[long, double] A[D('position' long)]) \l0x007d: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker)\l  (r0 I:long)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.FlacOggSeeker.setFirstFrameOffset(long):void type: VIRTUAL \l0x0080: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0082: IGET  (r2 I:com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.FlacReader)\l com.google.android.exoplayer2.extractor.ogg.FlacReader.flacOggSeeker com.google.android.exoplayer2.extractor.ogg.FlacReader$FlacOggSeeker \l0x0084: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('setupData' com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)])\l \l0x0086: IPUT  \l  (r2 I:com.google.android.exoplayer2.extractor.ogg.OggSeeker)\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)\l com.google.android.exoplayer2.extractor.ogg.StreamReader.SetupData.oggSeeker com.google.android.exoplayer2.extractor.ogg.OggSeeker \l}"];
Node_13 [shape=record,label="{13\:\ 0x0088|0x0088: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{protected boolean com.google.android.exoplayer2.extractor.ogg.FlacReader.readHeaders((r16 'this' I:com.google.android.exoplayer2.extractor.ogg.FlacReader A[IMMUTABLE_TYPE, THIS]), (r17 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData A[D('setupData' com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0028\-0x004c: r9 'initializationData' java.util.List\<byte[]\>\l  0x001f\-0x004c: r14 'metadata' byte[]\l  0x0004\-0x0089: r13 'data' byte[]\l  ?\-0x0089: r17 'packet' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0089: r18 'position' long\l  ?\-0x0089: r20 'setupData' com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_3;
Node_8 -> Node_9;
Node_9 -> Node_3;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_4;
}

