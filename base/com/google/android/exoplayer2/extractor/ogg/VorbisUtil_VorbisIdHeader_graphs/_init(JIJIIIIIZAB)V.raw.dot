digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.\<init\>(JIJIIIIIZ[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:long A[D('version' long)])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.version long \l0x0005: IPUT  \l  (r3 I:int A[D('channels' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.channels int \l0x0007: IPUT  \l  (r4 I:long A[D('sampleRate' long)])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.sampleRate long \l0x0009: IPUT  \l  (r6 I:int A[D('bitrateMax' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.bitrateMax int \l0x000b: IPUT  \l  (r7 I:int A[D('bitrateNominal' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.bitrateNominal int \l0x000d: IPUT  \l  (r8 I:int A[D('bitrateMin' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.bitrateMin int \l0x000f: IPUT  \l  (r9 I:int A[D('blockSize0' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.blockSize0 int \l0x0011: IPUT  \l  (r10 I:int A[D('blockSize1' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.blockSize1 int \l0x0013: IPUT  \l  (r11 I:boolean A[D('framingFlag' boolean)])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.framingFlag boolean \l0x0015: IPUT  \l  (r12 I:byte[] A[D('data' byte[])])\l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.data byte[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.\<init\>((r0 'this' I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader A[IMMUTABLE_TYPE, THIS]), (r1 I:long A[D('version' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('channels' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('sampleRate' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('bitrateMax' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('bitrateNominal' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('bitrateMin' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('blockSize0' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('blockSize1' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[D('framingFlag' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0017: r1 'version' long\l  ?\-0x0017: r3 'channels' int\l  ?\-0x0017: r4 'sampleRate' long\l  ?\-0x0017: r6 'bitrateMax' int\l  ?\-0x0017: r7 'bitrateNominal' int\l  ?\-0x0017: r8 'bitrateMin' int\l  ?\-0x0017: r9 'blockSize0' int\l  ?\-0x0017: r10 'blockSize1' int\l  ?\-0x0017: r11 'framingFlag' boolean\l  ?\-0x0017: r12 'data' byte[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

