digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.skipToNextPage(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long r12 = java.lang.Math.min(3 + r12, r10.endPosition)\lbyte[] r0 = new byte[2048]\lint r2 = r0.length\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|LOOP_START\lPHI: r2 \l  PHI: (r2v1 'peekLength' int) = (r2v0 'peekLength' int), (r2v2 'peekLength' int) binds: [B:0:0x0000, B:18:0x0050] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:18:0x0050\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|if (((r11.getPosition() + ((long) r2)) \> r12 ? 1 : ((r11.getPosition() + ((long) r2)) == r12 ? 0 : \-1)) \<= 0) goto L_0x0026\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|int r2 = (int) (r12 \- r11.getPosition())\l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|if (r2 \>= 4) goto L_0x0026\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|PHI: r2 \l  PHI: (r2v2 'peekLength' int) = (r2v1 'peekLength' int), (r2v3 'peekLength' int) binds: [B:2:0x0019, B:4:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|r11.peekFully(r0, 0, r2, false)\lr1 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|LOOP_START\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:5:0x0026, B:17:0x004d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:6:0x002a\-\>B:17:0x004d\l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|if (r1 \>= (r2 + \-3)) goto L_0x0050\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e}"];
Node_9 [shape=record,label="{9\:\ 0x0032|if (r0[r1] != 79) goto L_0x004d\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034}"];
Node_11 [shape=record,label="{11\:\ 0x0038|if (r0[r1 + 1] != 103) goto L_0x004d\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a}"];
Node_13 [shape=record,label="{13\:\ 0x003e|if (r0[r1 + 2] != 103) goto L_0x004d\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040}"];
Node_15 [shape=record,label="{15\:\ 0x0046|if (r0[r1 + 3] != 83) goto L_0x004d\l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|r11.skipFully(r1)\l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|LOOP_END\lLOOP:1: B:6:0x002a\-\>B:17:0x004d\l|int r1 = r1 + 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0050|LOOP_END\lLOOP:0: B:1:0x0011\-\>B:18:0x0050\l|r11.skipFully(r2 + \-3)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0050|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x004d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x004d|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x004d|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x004d|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{boolean com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.skipToNextPage((r10v0 'this' com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker A[IMMUTABLE_TYPE, THIS]), (r11v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'until' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_19[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_22;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_23;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_24;
Node_14 -> Node_15;
Node_15 -> Node_20[style=dashed];
Node_15 -> Node_25;
Node_16 -> Node_26;
Node_17 -> Node_6;
Node_18 -> Node_1;
Node_19 -> Node_27;
Node_20 -> Node_16;
Node_21 -> Node_18;
Node_22 -> Node_17;
Node_23 -> Node_17;
Node_24 -> Node_17;
Node_25 -> Node_17;
}

