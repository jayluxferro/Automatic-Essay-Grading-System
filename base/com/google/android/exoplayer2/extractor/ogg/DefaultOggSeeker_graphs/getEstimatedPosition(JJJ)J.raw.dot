digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.getEstimatedPosition(JJJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.endPosition long \l0x0002: IGET  (r2 I:long) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.startPosition long \l0x0004: ARITH  (r0 I:long) = (r0 I:long) \- (r2 I:long) \l0x0005: ARITH  (r0 I:long) = (r0 I:long) * (r8 I:long A[D('granuleDistance' long)]) \l0x0006: IGET  (r2 I:long) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.totalGranules long \l0x0008: ARITH  (r0 I:long) = (r0 I:long) \/ (r2 I:long) \l0x0009: ARITH  (r0 I:long) = (r0 I:long) \- (r10 I:long A[D('offset' long)]) \l0x000a: ARITH  (r6 I:long A[D('position' long)]) = (r6 I:long A[D('position' long)]) + (r0 I:long) \l0x000b: IGET  (r0 I:long) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.startPosition long \l0x000d: CMP_L  (r0 I:int) = (r6 I:long A[D('position' long)]), (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: IGET  (r6 I:long A[D('position' long)]) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.startPosition long \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IGET  (r0 I:long) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.endPosition long \l0x0015: CMP_L  (r0 I:int) = (r6 I:long A[D('position' long)]), (r0 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:6:0x001f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IGET  (r0 I:long) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.endPosition long \l0x001b: CONST  (r2 I:?[long, double]) = (1 ?[long, double]) \l0x001d: ARITH  (r6 I:long A[D('position' long)]) = (r0 I:long) \- (r2 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: RETURN  (r6 I:long A[D('position' long)]) \l}"];
MethodNode[shape=record,label="{private long com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.getEstimatedPosition((r5 'this' I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker A[IMMUTABLE_TYPE, THIS]), (r6 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[D('granuleDistance' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:long A[D('offset' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001f: r6 'position' long\l  ?\-0x001f: r8 'granuleDistance' long\l  ?\-0x001f: r10 'offset' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

