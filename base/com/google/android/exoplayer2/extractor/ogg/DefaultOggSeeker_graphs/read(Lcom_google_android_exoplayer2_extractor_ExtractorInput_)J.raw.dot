digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.read(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.state int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3] t:[0x000e, 0x0024, 0x0030, 0x000b] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0007: INVOKE  (r0 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST  (r8 I:?[long, double]) = (\-1 ?[long, double]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: RETURN  (r8 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: INVOKE  (r0 I:long) = \l  (r13 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.getPosition():long type: INTERFACE \l0x0012: IPUT  \l  (r0 I:long)\l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.positionBeforeSeekToEnd long \l0x0014: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0015: IPUT  \l  (r0 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.state int \l0x0017: IGET  (r0 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.endPosition long \l0x0019: CONST  (r2 I:?[long, double]) = (65307(0xff1b, double:3.2266E\-319) ?[long, double]) \l0x001c: ARITH  (r8 I:long) = (r0 I:long) \- (r2 I:long) \l0x001e: IGET  (r0 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.positionBeforeSeekToEnd long \l0x0020: CMP_L  (r0 I:int) = \l  (r8 I:long A[D('lastPageSearchPosition' long)])\l  (r0 I:long)\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: INVOKE  (r0 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l  (r13 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.readGranuleOfLastPage(com.google.android.exoplayer2.extractor.ExtractorInput):long type: VIRTUAL \l0x0028: IPUT  \l  (r0 I:long)\l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.totalGranules long \l0x002a: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x002b: IPUT  \l  (r0 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.state int \l0x002d: IGET  (r8 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.positionBeforeSeekToEnd long \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: IGET  (r0 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.targetGranule long \l0x0032: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0034: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0042 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x003b: IPUT  \l  (r0 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.state int \l0x003d: CONST  (r0 I:?[long, double]) = (2 ?[long, double]) \l0x003f: ARITH  (r0 I:long) = (r0 I:long) + (r6 I:long A[D('currentGranule' long)]) \l0x0040: NEG  (r8 I:long) = (r0 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: IGET  (r0 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.targetGranule long \l0x0044: INVOKE  (r10 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l  (r0 I:long)\l  (r13 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.getNextSeekPosition(long, com.google.android.exoplayer2.extractor.ExtractorInput):long type: VIRTUAL \l0x0048: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x004a: CMP_L  (r0 I:int) = (r10 I:long A[D('position' long)]), (r0 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:16:0x0050 \l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|0x004e: MOVE  (r8 I:?[long, double]) = (r10 I:?[long, double] A[D('position' long)]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|0x0050: IGET  (r2 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.targetGranule long \l0x0052: CONST  (r0 I:?[long, double]) = (2 ?[long, double]) \l0x0054: ARITH  (r0 I:long) = (r0 I:long) + (r10 I:long A[D('position' long)]) \l0x0055: NEG  (r4 I:long) = (r0 I:long) \l0x0056: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0057: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY] A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l \l0x0058: INVOKE  (r6 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker)\l  (r1 I:com.google.android.exoplayer2.extractor.ExtractorInput)\l  (r2 I:long)\l  (r4 I:long)\l com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.skipToPageOfGranule(com.google.android.exoplayer2.extractor.ExtractorInput, long, long):long type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.read((r12 'this' I:com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker A[IMMUTABLE_TYPE, THIS]), (r13 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001e\-0x0024: r8 'lastPageSearchPosition' long\l  0x003a\-0x0042: r6 'currentGranule' long\l  0x005c\-0x0069: r6 'currentGranule' long\l  0x0048\-0x0069: r10 'position' long\l  ?\-0x0069: r13 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_1 -> Node_8;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_5;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_5;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_5;
Node_16 -> Node_12;
}

