digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.\<init\>(JJLcom\/google\/android\/exoplayer2\/extractor\/ogg\/StreamReader;IJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7.pageHeader = new com.google.android.exoplayer2.extractor.ogg.OggPageHeader()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|if ((r8 \> 0 ? 1 : (r8 == 0 ? 0 : \-1)) \< 0) goto L_0x002c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if ((r10 \> r8 ? 1 : (r10 == r8 ? 0 : \-1)) \<= 0) goto L_0x002c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|r0 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|PHI: r0 \l  PHI: (r0v3 boolean) = (r0v2 boolean), (r0v7 boolean) binds: [B:8:0x002c, B:4:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r0)\lr7.streamReader = r12\lr7.startPosition = r8\lr7.endPosition = r10\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|if ((((long) r13) \> (r10 \- r8) ? 1 : (((long) r13) == (r10 \- r8) ? 0 : \-1)) != 0) goto L_0x002e\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|r7.totalGranules = r14\lr7.state = 3\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|r0 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|r7.state = 0\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.\<init\>((r7v0 'this' com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker A[IMMUTABLE_TYPE, THIS]), (r8v0 'startPosition' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'endPosition' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'streamReader' com.google.android.exoplayer2.extractor.ogg.StreamReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'firstPayloadPageSize' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'firstPayloadPageGranulePosition' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_10;
Node_8 -> Node_5;
Node_9 -> Node_11;
}

