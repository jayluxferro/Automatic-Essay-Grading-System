digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisReader.onSeekEnd(J)V" {
subgraph cluster_Region_609509366 {
label = "R(5:0|(1:2)(1:8)|3|(1:5)|6) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = 0\lsuper.onSeekEnd(r6)\l}"];
subgraph cluster_IfRegion_1785438997 {
label = "IF [B:1:0x0008] THEN: R(1:2) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r6 != 0) goto L_0x000a\l}"];
subgraph cluster_Region_2046767646 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|r0 = true\l}"];
}
subgraph cluster_Region_1381286350 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0018|r0 = false\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x000b|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v1 boolean), (r0v5 boolean) binds: [B:8:0x0018, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|r5.seenFirstAudioPacket = r0\l}"];
subgraph cluster_IfRegion_490034191 {
label = "IF [B:4:0x000f] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r5.vorbisIdHeader != null) goto L_0x0011\l}"];
subgraph cluster_Region_506807483 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|int r1 = r5.vorbisIdHeader.blockSize0\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0015|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:4:0x000f, B:5:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r5.previousPacketBlockSize = r1\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ 0x0017}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.extractor.ogg.VorbisReader.onSeekEnd((r5v0 'this' com.google.android.exoplayer2.extractor.ogg.VorbisReader A[IMMUTABLE_TYPE, THIS]), (r6v0 'currentGranule' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_8 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
}

