digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisReader.readHeaders(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;JLcom\/google\/android\/exoplayer2\/extractor\/ogg\/StreamReader$SetupData;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup) = \l  (r11 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisSetup com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r0 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: INVOKE  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup) = \l  (r11 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l  (r12 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.readSetupHeaders(com.google.android.exoplayer2.util.ParsableByteArray):com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup type: VIRTUAL \l0x000a: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)\l  (r11 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisSetup com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup \l0x000c: IGET  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup) = \l  (r11 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisSetup com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0012 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: NEW_INSTANCE  (r7 I:java.util.ArrayList) =  java.util.ArrayList \l0x0014: INVOKE  (r7 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0017: IGET  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup) = \l  (r11 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisSetup com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup \l0x0019: IGET  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.VorbisSetup.idHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader \l0x001b: IGET  (r0 I:byte[]) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.data byte[] \l0x001d: INVOKE  \l  (r7 I:java.util.ArrayList A[D('codecInitialisationData' java.util.ArrayList\<byte[]\>)])\l  (r0 I:java.lang.Object)\l java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0020: IGET  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup) = \l  (r11 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisSetup com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup \l0x0022: IGET  (r0 I:byte[]) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.VorbisSetup.setupHeaderData byte[] \l0x0024: INVOKE  \l  (r7 I:java.util.ArrayList A[D('codecInitialisationData' java.util.ArrayList\<byte[]\>)])\l  (r0 I:java.lang.Object)\l java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0027: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0028: CONST_STR  (r1 I:java.lang.String) =  \"audio\/vorbis\" \l0x002a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: IGET  (r3 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup) = \l  (r11 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisSetup com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup \l0x002d: IGET  (r3 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader) = \l  (r3 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.VorbisSetup.idHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader \l0x002f: IGET  (r3 I:int) = \l  (r3 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.bitrateNominal int \l0x0031: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0032: IGET  (r5 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup) = \l  (r11 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisSetup com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup \l0x0034: IGET  (r5 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.VorbisSetup.idHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader \l0x0036: IGET  (r5 I:int) = \l  (r5 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.channels int \l0x0038: IGET  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup) = \l  (r11 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisSetup com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup \l0x003a: IGET  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader) = \l  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.VorbisSetup.idHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader \l0x003c: IGET  (r8 I:long) = \l  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.sampleRate long \l0x003e: CAST  (r6 I:int) = (int) (r8 I:long) \l0x003f: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0040: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: INVOKE  (r0 I:com.google.android.exoplayer2.Format) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:java.util.List A[D('codecInitialisationData' java.util.ArrayList\<byte[]\>)])\l  (r8 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r9 I:int)\l  (r10 I:java.lang.String)\l com.google.android.exoplayer2.Format.createAudioSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, int, int, java.util.List, com.google.android.exoplayer2.drm.DrmInitData, int, java.lang.String):com.google.android.exoplayer2.Format type: STATIC \l0x0046: IPUT  \l  (r0 I:com.google.android.exoplayer2.Format)\l  (r15 I:com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData A[D('setupData' com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData)])\l com.google.android.exoplayer2.extractor.ogg.StreamReader.SetupData.format com.google.android.exoplayer2.Format \l0x0048: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{protected boolean com.google.android.exoplayer2.extractor.ogg.VorbisReader.readHeaders((r11 'this' I:com.google.android.exoplayer2.extractor.ogg.VorbisReader A[IMMUTABLE_TYPE, THIS]), (r12 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('packet' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData A[D('setupData' com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0017\-0x0049: r7 'codecInitialisationData' java.util.ArrayList\<byte[]\>\l  ?\-0x0049: r12 'packet' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0049: r13 'position' long\l  ?\-0x0049: r15 'setupData' com.google.android.exoplayer2.extractor.ogg.StreamReader$SetupData\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_3;
}

