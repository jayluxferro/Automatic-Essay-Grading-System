digraph "CFG forcom.google.android.exoplayer2.extractor.ogg.VorbisReader.readSetupHeaders(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Lcom\/google\/android\/exoplayer2\/extractor\/ogg\/VorbisReader$VorbisSetup;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: IGET  (r1 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader) = \l  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisIdHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r1 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readVorbisIdentificationHeader(com.google.android.exoplayer2.util.ParsableByteArray):com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader type: STATIC \l0x000a: IPUT  \l  (r1 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisIdHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r1 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader) = \l  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.commentHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: INVOKE  (r1 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readVorbisCommentHeader(com.google.android.exoplayer2.util.ParsableByteArray):com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader type: STATIC \l0x0015: IPUT  \l  (r1 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader)\l  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.commentHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: INVOKE  (r0 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x001c: NEW_ARRAY  (r3 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x001e: IGET  (r0 I:byte[]) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0020: INVOKE  (r1 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x0024: INVOKE  \l  (r0 I:java.lang.Object)\l  (r2 I:int)\l  (r3 I:java.lang.Object A[D('setupHeaderData' byte[])])\l  (r2 I:int)\l  (r1 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0027: IGET  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader) = \l  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisIdHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader \l0x0029: IGET  (r0 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.VorbisIdHeader.channels int \l0x002b: INVOKE  (r4 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[]) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r0 I:int)\l com.google.android.exoplayer2.extractor.ogg.VorbisUtil.readVorbisModes(com.google.android.exoplayer2.util.ParsableByteArray, int):com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[] type: STATIC \l0x002f: ARRAY_LENGTH  (r0 I:int) = \l  (r4 I:?[] A[D('modes' com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[])])\l \l0x0030: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l0x0032: INVOKE  (r5 I:int) = (r0 I:int) com.google.android.exoplayer2.extractor.ogg.VorbisUtil.iLog(int):int type: STATIC \l0x0036: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup) =  com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup \l0x0038: IGET  (r1 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader) = \l  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.vorbisIdHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader \l0x003a: IGET  (r2 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader) = \l  (r6 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader)\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.commentHeader com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader \l0x003c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup)\l  (r1 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader)\l  (r2 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader)\l  (r3 I:byte[] A[D('setupHeaderData' byte[])])\l  (r4 I:com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[] A[D('modes' com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[])])\l  (r5 I:int A[D('iLogModes' int)])\l com.google.android.exoplayer2.extractor.ogg.VorbisReader.VorbisSetup.\<init\>(com.google.android.exoplayer2.extractor.ogg.VorbisUtil$VorbisIdHeader, com.google.android.exoplayer2.extractor.ogg.VorbisUtil$CommentHeader, byte[], com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[], int):void type: DIRECT \l}"];
MethodNode[shape=record,label="{com.google.android.exoplayer2.extractor.ogg.VorbisReader$VorbisSetup com.google.android.exoplayer2.extractor.ogg.VorbisReader.readSetupHeaders((r6 'this' I:com.google.android.exoplayer2.extractor.ogg.VorbisReader A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('scratch' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001e\-0x003f: r3 'setupHeaderData' byte[]\l  0x002f\-0x003f: r4 'modes' com.google.android.exoplayer2.extractor.ogg.VorbisUtil$Mode[]\l  0x0036\-0x003f: r5 'iLogModes' int\l  ?\-0x003f: r7 'scratch' com.google.android.exoplayer2.util.ParsableByteArray\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_3;
}

