digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultExtractorInput.skipFully(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l  (r2 I:int A[D('length' int)])\l  (r0 I:boolean)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.skipFully(int, boolean):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.DefaultExtractorInput.skipFully((r1 'this' I:com.google.android.exoplayer2.extractor.DefaultExtractorInput A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0004: r2 'length' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

