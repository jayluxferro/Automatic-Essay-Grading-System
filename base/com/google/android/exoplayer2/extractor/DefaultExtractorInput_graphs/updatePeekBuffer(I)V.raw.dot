digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultExtractorInput.updatePeekBuffer(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBufferLength int \l0x0003: ARITH  (r1 I:int) = (r1 I:int) \- (r6 I:int A[D('bytesConsumed' int)]) \l0x0004: IPUT  \l  (r1 I:int)\l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBufferLength int \l0x0006: IPUT  \l  (r4 I:int)\l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBufferPosition int \l0x0008: IGET  (r0 I:byte[]) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBuffer byte[] \l0x000a: IGET  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBufferLength int \l0x000c: IGET  (r2 I:byte[]) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBuffer byte[] \l0x000e: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x000f: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (524288(0x80000, float:7.34684E\-40) ?[int, float, short, byte, char])\l \l0x0011: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:3:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: IGET  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBufferLength int \l0x0016: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (65536(0x10000, float:9.18355E\-41) ?[int, float, short, byte, char])\l \l0x0018: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0019: NEW_ARRAY  (r0 I:byte[] A[D('newPeekBuffer' byte[])]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: IGET  (r1 I:byte[]) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBuffer byte[] \l0x001d: IGET  (r2 I:int) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBufferLength int \l0x001f: INVOKE  \l  (r1 I:java.lang.Object)\l  (r6 I:int A[D('bytesConsumed' int)])\l  (r0 I:java.lang.Object A[D('newPeekBuffer' byte[])])\l  (r4 I:int)\l  (r2 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0022: IPUT  \l  (r0 I:byte[] A[D('newPeekBuffer' byte[])])\l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBuffer byte[] \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.DefaultExtractorInput.updatePeekBuffer((r5 'this' I:com.google.android.exoplayer2.extractor.DefaultExtractorInput A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('bytesConsumed' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000a\-0x0024: r0 'newPeekBuffer' byte[]\l  ?\-0x0024: r6 'bytesConsumed' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

