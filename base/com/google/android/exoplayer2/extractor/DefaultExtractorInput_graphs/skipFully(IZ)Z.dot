digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultExtractorInput.skipFully(IZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r4 = skipFromPeekBuffer(r8)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lPHI: r4 \l  PHI: (r4v1 'bytesSkipped' int) = (r4v0 'bytesSkipped' int), (r4v2 'bytesSkipped' int) binds: [B:0:0x0000, B:3:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0005\-\>B:3:0x0009\l|if (r4 \>= r8) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r4 == \-1) goto L_0x001b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:3:0x0009\l|int r3 = java.lang.Math.min(r8, SCRATCH_SPACE.length + r4)\lr0 = r7\lint r4 = readFromDataSource(SCRATCH_SPACE, \-r4, r3, r4, r9)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|commitBytesRead(r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|if (r4 == \-1) goto L_0x0022\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|SYNTHETIC\lRETURN\l|return false\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.DefaultExtractorInput.skipFully((r7v0 'this' com.google.android.exoplayer2.extractor.DefaultExtractorInput A[IMMUTABLE_TYPE, THIS]), (r8v0 'length' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'allowEndOfInput' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_8 -> Node_4;
Node_9 -> Node_4;
}

