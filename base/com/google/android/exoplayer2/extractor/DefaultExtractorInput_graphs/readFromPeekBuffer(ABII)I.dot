digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultExtractorInput.readFromPeekBuffer([BII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r3.peekBufferLength != 0) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0007|int r0 = java.lang.Math.min(r3.peekBufferLength, r6)\ljava.lang.System.arraycopy(r3.peekBuffer, 0, r4, r5, r0)\lupdatePeekBuffer(r0)\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 0\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.extractor.DefaultExtractorInput.readFromPeekBuffer((r3v0 'this' com.google.android.exoplayer2.extractor.DefaultExtractorInput A[IMMUTABLE_TYPE, THIS]), (r4v0 'target' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'offset' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'length' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_5;
}

