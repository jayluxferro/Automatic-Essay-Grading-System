digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultExtractorInput.ensureSpaceForPeek(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:int) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBufferPosition int \l0x0002: ARITH  (r1 I:int) = (r2 I:int) + (r6 I:int A[D('length' int)]) \l0x0004: IGET  (r2 I:byte[]) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBuffer byte[] \l0x0006: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char] A[D('requiredLength' int)]) \<= (r2 I:?[int, byte, short, char])  \-\> B:3:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r2 I:byte[]) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBuffer byte[] \l0x000b: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x000c: ARITH  (r2 I:int) = (r2 I:int) * (2 int) \l0x000e: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (65536(0x10000, float:9.18355E\-41) ?[int, float, short, byte, char])\l \l0x0010: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int A[D('requiredLength' int)]) \l0x0011: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (524288(0x80000, float:7.34684E\-40) ?[int, float, short, byte, char])\l \l0x0013: ARITH  (r4 I:int) = (r4 I:int) + (r1 I:int A[D('requiredLength' int)]) \l0x0014: INVOKE  (r0 I:int) = (r2 I:int), (r3 I:int), (r4 I:int) com.google.android.exoplayer2.util.Util.constrainValue(int, int, int):int type: STATIC \l0x0018: IGET  (r2 I:byte[]) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBuffer byte[] \l0x001a: INVOKE  (r2 I:byte[]) = (r2 I:byte[]), (r0 I:int A[D('newPeekCapacity' int)]) java.util.Arrays.copyOf(byte[], int):byte[] type: STATIC \l0x001e: IPUT  \l  (r2 I:byte[])\l  (r5 I:com.google.android.exoplayer2.extractor.DefaultExtractorInput)\l com.google.android.exoplayer2.extractor.DefaultExtractorInput.peekBuffer byte[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.DefaultExtractorInput.ensureSpaceForPeek((r5 'this' I:com.google.android.exoplayer2.extractor.DefaultExtractorInput A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0018\-0x0020: r0 'newPeekCapacity' int\l  0x0004\-0x0020: r1 'requiredLength' int\l  ?\-0x0020: r6 'length' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

