digraph "CFG forcom.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parseHeader(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.dataScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0004: INVOKE  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.reset():void type: VIRTUAL \l0x0007: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.dataScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0009: IGET  (r2 I:byte[]) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x000b: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x000d: INVOKE  (r2 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:byte[])\l  (r1 I:int)\l  (r3 I:int)\l  (r0 I:boolean)\l com.google.android.exoplayer2.extractor.ExtractorInput.readFully(byte[], int, int, boolean):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IGET  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.dataScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0015: INVOKE  (r1 I:int) = (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0019: SGET  (r2 I:int) =  com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.HEADER_ID int \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0025 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException \l0x001f: CONST_STR  (r1 I:java.lang.String) =  \"Input not RawCC\" \l0x0021: INVOKE  (r0 I:java.io.IOException), (r1 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: IGET  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.dataScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0027: INVOKE  (r1 I:int) = (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x002b: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.version int \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: RETURN  (r0 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parseHeader((r4 'this' I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x002f: r5 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_7;
}

