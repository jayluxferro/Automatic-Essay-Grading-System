digraph "CFG forcom.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parseTimestampAndSampleCount(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.dataScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0004: INVOKE  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.reset():void type: VIRTUAL \l0x0007: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.version int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.dataScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x000d: IGET  (r2 I:byte[]) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x000f: CONST  (r3 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0010: INVOKE  (r2 I:boolean) = \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:byte[])\l  (r0 I:int)\l  (r3 I:int)\l  (r1 I:boolean)\l com.google.android.exoplayer2.extractor.ExtractorInput.readFully(byte[], int, int, boolean):boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: RETURN  (r0 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.dataScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0019: INVOKE  (r2 I:long) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x001d: CONST  (r4 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x001f: ARITH  (r2 I:long) = (r2 I:long) * (r4 I:long) \l0x0020: CONST  (r4 I:?[long, double]) = (45 ?[long, double]) \l0x0022: ARITH  (r2 I:long) = (r2 I:long) \/ (r4 I:long) \l0x0023: IPUT  \l  (r2 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.timestampUs long \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.dataScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0027: INVOKE  (r2 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x002b: IPUT  \l  (r2 I:int)\l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.remainingSampleCount int \l0x002d: IPUT  \l  (r0 I:int)\l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.sampleBytesWritten int \l0x002f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|0x0031: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.version int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|0x0033: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x004a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.dataScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0037: IGET  (r2 I:byte[]) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0039: CONST  (r3 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x003b: INVOKE  (r2 I:boolean) = \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:byte[])\l  (r0 I:int)\l  (r3 I:int)\l  (r1 I:boolean)\l com.google.android.exoplayer2.extractor.ExtractorInput.readFully(byte[], int, int, boolean):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|0x003f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0016 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.dataScratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0043: INVOKE  (r2 I:long) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readLong():long type: VIRTUAL \l0x0047: IPUT  \l  (r2 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.timestampUs long \l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|0x004a: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x004c: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004e: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0051: CONST_STR  (r2 I:java.lang.String) =  \"Unsupported version number: \" \l0x0053: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0057: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.version int \l0x0059: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x005d: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0061: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ParserException)\l  (r1 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|0x0064: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parseTimestampAndSampleCount((r6 'this' I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0064: r7 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_4;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_6;
Node_12 -> Node_13;
}

