digraph "CFG forcom.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.read(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;Lcom\/google\/android\/exoplayer2\/extractor\/PositionHolder;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parserState int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2] t:[0x000e, 0x0017, 0x0024] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000a: INVOKE  (r0 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: INVOKE  (r2 I:boolean) = \l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l  (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parseHeader(com.google.android.exoplayer2.extractor.ExtractorInput):boolean type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0023 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IPUT  \l  (r3 I:int)\l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parserState int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: INVOKE  (r2 I:boolean) = \l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l  (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parseTimestampAndSampleCount(com.google.android.exoplayer2.extractor.ExtractorInput):boolean type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0021 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001e: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parserState int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parserState int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: RETURN  (r0 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: INVOKE  \l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l  (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parseSamples(com.google.android.exoplayer2.extractor.ExtractorInput):void type: DIRECT \l0x0027: IPUT  \l  (r3 I:int)\l  (r4 I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor)\l com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.parserState int \l0x0029: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor.read((r4 'this' I:com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.google.android.exoplayer2.extractor.PositionHolder A[D('seekPosition' com.google.android.exoplayer2.extractor.PositionHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0035: r5 'input' com.google.android.exoplayer2.extractor.ExtractorInput\l  ?\-0x0035: r6 'seekPosition' com.google.android.exoplayer2.extractor.PositionHolder\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_2 -> Node_8;
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_13 -> Node_12;
}

