digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.sampleData(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:boolean) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.startWriteOperation():boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('buffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r8 I:int A[D('length' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r8 I:?[int, byte, short, char] A[D('length' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x002c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: INVOKE  (r0 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l  (r8 I:int A[D('length' int)])\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.prepareForAppend(int):int type: DIRECT \l0x0010: IGET  (r1 I:com.google.android.exoplayer2.upstream.Allocation) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocation com.google.android.exoplayer2.upstream.Allocation \l0x0012: IGET  (r1 I:byte[]) = (r1 I:com.google.android.exoplayer2.upstream.Allocation) com.google.android.exoplayer2.upstream.Allocation.data byte[] \l0x0014: IGET  (r2 I:com.google.android.exoplayer2.upstream.Allocation) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocation com.google.android.exoplayer2.upstream.Allocation \l0x0016: IGET  (r3 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocationOffset int \l0x0018: INVOKE  (r2 I:int) = \l  (r2 I:com.google.android.exoplayer2.upstream.Allocation)\l  (r3 I:int)\l com.google.android.exoplayer2.upstream.Allocation.translateOffset(int):int type: VIRTUAL \l0x001c: INVOKE  \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('buffer' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r1 I:byte[])\l  (r2 I:int)\l  (r0 I:int A[D('thisAppendLength' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l0x001f: IGET  (r1 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocationOffset int \l0x0021: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int A[D('thisAppendLength' int)]) \l0x0022: IPUT  \l  (r1 I:int)\l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocationOffset int \l0x0024: IGET  (r2 I:long) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.totalBytesWritten long \l0x0026: CAST  (r4 I:long) = (long) (r0 I:int A[D('thisAppendLength' int)]) \l0x0027: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) \l0x0028: IPUT  \l  (r2 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.totalBytesWritten long \l0x002a: ARITH  (r8 I:int A[D('length' int)]) = (r8 I:int A[D('length' int)]) \- (r0 I:int A[D('thisAppendLength' int)]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.endWriteOperation():void type: DIRECT \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.DefaultTrackOutput.sampleData((r6 'this' I:com.google.android.exoplayer2.extractor.DefaultTrackOutput A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('buffer' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0010\-0x002c: r0 'thisAppendLength' int\l  ?\-0x002f: r7 'buffer' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x002f: r8 'length' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_4;
Node_6 -> Node_3;
}

