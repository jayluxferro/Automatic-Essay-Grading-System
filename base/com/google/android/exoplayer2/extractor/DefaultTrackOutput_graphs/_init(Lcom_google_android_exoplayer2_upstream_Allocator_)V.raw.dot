digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.\<init\>(Lcom\/google\/android\/exoplayer2\/upstream\/Allocator;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r3 I:com.google.android.exoplayer2.upstream.Allocator A[D('allocator' com.google.android.exoplayer2.upstream.Allocator)])\l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.allocator com.google.android.exoplayer2.upstream.Allocator \l0x0005: INVOKE  (r0 I:int) = \l  (r3 I:com.google.android.exoplayer2.upstream.Allocator A[D('allocator' com.google.android.exoplayer2.upstream.Allocator)])\l com.google.android.exoplayer2.upstream.Allocator.getIndividualAllocationLength():int type: INTERFACE \l0x0009: IPUT  \l  (r0 I:int)\l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.allocationLength int \l0x000b: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue) =  com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue \l0x000d: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.\<init\>():void type: DIRECT \l0x0010: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.infoQueue com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue \l0x0012: NEW_INSTANCE  (r0 I:java.util.concurrent.LinkedBlockingDeque) =  java.util.concurrent.LinkedBlockingDeque \l0x0014: INVOKE  (r0 I:java.util.concurrent.LinkedBlockingDeque) java.util.concurrent.LinkedBlockingDeque.\<init\>():void type: DIRECT \l0x0017: IPUT  \l  (r0 I:java.util.concurrent.LinkedBlockingDeque\<com.google.android.exoplayer2.upstream.Allocation\>)\l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.dataQueue java.util.concurrent.LinkedBlockingDeque \l0x0019: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder) =  com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder \l0x001b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)\l  (r1 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$1)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.\<init\>(com.google.android.exoplayer2.extractor.DefaultTrackOutput$1):void type: DIRECT \l0x001f: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)\l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.extrasHolder com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder \l0x0021: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0023: CONST  (r1 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0025: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x0028: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x002a: NEW_INSTANCE  (r0 I:java.util.concurrent.atomic.AtomicInteger) =  java.util.concurrent.atomic.AtomicInteger \l0x002c: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicInteger) java.util.concurrent.atomic.AtomicInteger.\<init\>():void type: DIRECT \l0x002f: IPUT  \l  (r0 I:java.util.concurrent.atomic.AtomicInteger)\l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.state java.util.concurrent.atomic.AtomicInteger \l0x0031: IGET  (r0 I:int) = \l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.allocationLength int \l0x0033: IPUT  \l  (r0 I:int)\l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocationOffset int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0035|0x0035: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.DefaultTrackOutput.\<init\>((r2 'this' I:com.google.android.exoplayer2.extractor.DefaultTrackOutput A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.android.exoplayer2.upstream.Allocator A[D('allocator' com.google.android.exoplayer2.upstream.Allocator), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0035: r3 'allocator' com.google.android.exoplayer2.upstream.Allocator\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

