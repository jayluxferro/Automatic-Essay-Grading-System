digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.readData(Lcom\/google\/android\/exoplayer2\/FormatHolder;Lcom\/google\/android\/exoplayer2\/decoder\/DecoderInputBuffer;ZZJ)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.infoQueue com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue \l0x0002: IGET  (r5 I:com.google.android.exoplayer2.Format) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.downstreamFormat com.google.android.exoplayer2.Format \l0x0004: IGET  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.extrasHolder com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder \l0x0006: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY] A[D('formatHolder' com.google.android.exoplayer2.FormatHolder)])\l \l0x0007: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r11 I:?[OBJECT, ARRAY] A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l \l0x0008: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('formatRequired' boolean)])\l \l0x0009: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('loadingFinished' boolean)])\l \l0x000a: INVOKE  (r7 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l  (r1 I:com.google.android.exoplayer2.FormatHolder)\l  (r2 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:com.google.android.exoplayer2.Format)\l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.readData(com.google.android.exoplayer2.FormatHolder, com.google.android.exoplayer2.decoder.DecoderInputBuffer, boolean, boolean, com.google.android.exoplayer2.Format, com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: SWITCH  \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('result' int)])\l k:[\-5, \-4, \-3] t:[0x0017, 0x001d, 0x0056] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0013: INVOKE  (r0 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IGET  (r0 I:com.google.android.exoplayer2.Format) = \l  (r10 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder)])\l com.google.android.exoplayer2.FormatHolder.format com.google.android.exoplayer2.Format \l0x0019: IPUT  \l  (r0 I:com.google.android.exoplayer2.Format)\l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.downstreamFormat com.google.android.exoplayer2.Format \l0x001b: CONST  (r0 I:?[int, float, short, byte, char]) = (\-5 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: RETURN  (r0 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: INVOKE  (r0 I:boolean) = \l  (r11 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.isEndOfStream():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0054 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IGET  (r0 I:long) = \l  (r11 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.timeUs long \l0x0025: CMP_L  (r0 I:int) = (r0 I:long), (r14 I:long A[D('decodeOnlyUntilUs' long)]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x002e \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l0x002b: INVOKE  \l  (r11 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l  (r0 I:int)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.addFlag(int):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: INVOKE  (r0 I:boolean) = \l  (r11 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.isEncrypted():boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|0x0032: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0039 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: IGET  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.extrasHolder com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder \l0x0036: INVOKE  \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l  (r11 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.readEncryptionData(com.google.android.exoplayer2.decoder.DecoderInputBuffer, com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: IGET  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.extrasHolder com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder \l0x003b: IGET  (r0 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.size int \l0x003d: INVOKE  \l  (r11 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l  (r0 I:int)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.ensureSpaceForWrite(int):void type: VIRTUAL \l0x0040: IGET  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.extrasHolder com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder \l0x0042: IGET  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.offset long \l0x0044: IGET  (r2 I:java.nio.ByteBuffer) = \l  (r11 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.data java.nio.ByteBuffer \l0x0046: IGET  (r3 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.extrasHolder com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder \l0x0048: IGET  (r3 I:int) = \l  (r3 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.size int \l0x004a: INVOKE  \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l  (r0 I:long)\l  (r2 I:java.nio.ByteBuffer)\l  (r3 I:int)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.readData(long, java.nio.ByteBuffer, int):void type: DIRECT \l0x004d: IGET  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.extrasHolder com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder \l0x004f: IGET  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.nextOffset long \l0x0051: INVOKE  \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l  (r0 I:long)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.dropDownstreamTo(long):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|0x0054: CONST  (r0 I:?[int, float, short, byte, char]) = (\-4 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0056|0x0056: CONST  (r0 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.extractor.DefaultTrackOutput.readData((r9 'this' I:com.google.android.exoplayer2.extractor.DefaultTrackOutput A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[D('formatRequired' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:boolean A[D('loadingFinished' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:long A[D('decodeOnlyUntilUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000e\-0x0061: r7 'result' int\l  ?\-0x0061: r10 'formatHolder' com.google.android.exoplayer2.FormatHolder\l  ?\-0x0061: r11 'buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer\l  ?\-0x0061: r12 'formatRequired' boolean\l  ?\-0x0061: r13 'loadingFinished' boolean\l  ?\-0x0061: r14 'decodeOnlyUntilUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_5;
Node_16 -> Node_5;
}

