digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.prepareForAppend(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocationOffset int \l0x0002: IGET  (r1 I:int) = \l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.allocationLength int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: IPUT  \l  (r0 I:int)\l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocationOffset int \l0x0009: IGET  (r0 I:com.google.android.exoplayer2.upstream.Allocator) = \l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.allocator com.google.android.exoplayer2.upstream.Allocator \l0x000b: INVOKE  (r0 I:com.google.android.exoplayer2.upstream.Allocation) = (r0 I:com.google.android.exoplayer2.upstream.Allocator) com.google.android.exoplayer2.upstream.Allocator.allocate():com.google.android.exoplayer2.upstream.Allocation type: INTERFACE \l0x000f: IPUT  \l  (r0 I:com.google.android.exoplayer2.upstream.Allocation)\l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocation com.google.android.exoplayer2.upstream.Allocation \l0x0011: IGET  (r0 I:java.util.concurrent.LinkedBlockingDeque\<com.google.android.exoplayer2.upstream.Allocation\>) = \l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.dataQueue java.util.concurrent.LinkedBlockingDeque \l0x0013: IGET  (r1 I:com.google.android.exoplayer2.upstream.Allocation) = \l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocation com.google.android.exoplayer2.upstream.Allocation \l0x0015: INVOKE  \l  (r0 I:java.util.concurrent.LinkedBlockingDeque)\l  (r1 I:java.lang.Object)\l java.util.concurrent.LinkedBlockingDeque.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IGET  (r0 I:int) = \l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.allocationLength int \l0x001a: IGET  (r1 I:int) = \l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.lastAllocationOffset int \l0x001c: ARITH  (r0 I:int) = (r0 I:int) \- (r1 I:int) \l0x001d: INVOKE  (r0 I:int) = (r3 I:int A[D('length' int)]), (r0 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.extractor.DefaultTrackOutput.prepareForAppend((r2 'this' I:com.google.android.exoplayer2.extractor.DefaultTrackOutput A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0021: r3 'length' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

