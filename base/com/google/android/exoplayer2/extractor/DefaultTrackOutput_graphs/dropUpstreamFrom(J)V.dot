digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.dropUpstreamFrom(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r4 = (int) (r10 \- r9.totalBytesDropped)\lint r1 = r4 \/ r9.allocationLength\lint r2 = r4 % r9.allocationLength\lint r0 = (r9.dataQueue.size() \- r1) + \-1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|if (r2 != 0) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|int r0 = r0 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|PHI: r0 \l  PHI: (r0v1 'allocationDiscardCount' int) = (r0v0 'allocationDiscardCount' int), (r0v2 'allocationDiscardCount' int) binds: [B:1:0x0016, B:2:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|r3 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|LOOP_START\lPHI: r3 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:3:0x001a, B:5:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x001b\-\>B:5:0x001d\l|if (r3 \>= r0) goto L_0x002d\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|LOOP_END\lLOOP:0: B:4:0x001b\-\>B:5:0x001d\l|r9.allocator.release(r9.dataQueue.removeLast())\lint r3 = r3 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|r9.lastAllocation = r9.dataQueue.peekLast()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|if (r2 != 0) goto L_0x003b\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|int r2 = r9.allocationLength\l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|PHI: r2 \l  PHI: (r2v1 'allocationOffset' int) = (r2v0 'allocationOffset' int), (r2v2 'allocationOffset' int) binds: [B:7:0x0037, B:8:0x0039] A[DONT_GENERATE, DONT_INLINE]\l|r9.lastAllocationOffset = r2\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.DefaultTrackOutput.dropUpstreamFrom((r9v0 'this' com.google.android.exoplayer2.extractor.DefaultTrackOutput A[IMMUTABLE_TYPE, THIS]), (r10v0 'absolutePosition' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_4;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_6;
}

