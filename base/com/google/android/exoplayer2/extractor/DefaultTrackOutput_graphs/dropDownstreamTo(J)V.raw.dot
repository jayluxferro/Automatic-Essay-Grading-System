digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.dropDownstreamTo(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r4 I:long) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.totalBytesDropped long \l0x0002: ARITH  (r4 I:long) = (r10 I:long A[D('absolutePosition' long)]) \- (r4 I:long) \l0x0004: CAST  (r2 I:int) = (int) (r4 I:long) \l0x0005: IGET  (r3 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.allocationLength int \l0x0007: ARITH  (r0 I:int) = (r2 I:int A[D('relativePosition' int)]) \/ (r3 I:int) \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r0 I:?[int, byte, short, char] A[D('allocationIndex' int)])  \-\> B:3:0x0024 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r4 I:com.google.android.exoplayer2.upstream.Allocator) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.allocator com.google.android.exoplayer2.upstream.Allocator \l0x000e: IGET  (r3 I:java.util.concurrent.LinkedBlockingDeque\<com.google.android.exoplayer2.upstream.Allocation\>) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.dataQueue java.util.concurrent.LinkedBlockingDeque \l0x0010: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.concurrent.LinkedBlockingDeque) java.util.concurrent.LinkedBlockingDeque.remove():java.lang.Object type: VIRTUAL \l0x0014: CHECK_CAST  (r3 I:com.google.android.exoplayer2.upstream.Allocation) = (com.google.android.exoplayer2.upstream.Allocation) (r3 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  \l  (r4 I:com.google.android.exoplayer2.upstream.Allocator)\l  (r3 I:com.google.android.exoplayer2.upstream.Allocation)\l com.google.android.exoplayer2.upstream.Allocator.release(com.google.android.exoplayer2.upstream.Allocation):void type: INTERFACE \l0x0019: IGET  (r4 I:long) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.totalBytesDropped long \l0x001b: IGET  (r3 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.allocationLength int \l0x001d: CAST  (r6 I:long) = (long) (r3 I:int) \l0x001e: ARITH  (r4 I:long) = (r4 I:long) + (r6 I:long) \l0x001f: IPUT  \l  (r4 I:long)\l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.totalBytesDropped long \l0x0021: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.DefaultTrackOutput.dropDownstreamTo((r9 'this' I:com.google.android.exoplayer2.extractor.DefaultTrackOutput A[IMMUTABLE_TYPE, THIS]), (r10 I:long A[D('absolutePosition' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0009\-0x0024: r0 'allocationIndex' int\l  0x000a\-0x0024: r1 'i' int\l  0x0005\-0x0024: r2 'relativePosition' int\l  ?\-0x0024: r10 'absolutePosition' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

