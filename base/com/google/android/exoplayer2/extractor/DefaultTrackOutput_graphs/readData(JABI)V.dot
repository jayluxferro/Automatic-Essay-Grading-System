digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.readData(J[BI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r1 r8 \l  PHI: (r1v1 'bytesRead' int) = (r1v0 'bytesRead' int), (r1v2 'bytesRead' int) binds: [B:0:0x0000, B:2:0x0003] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 'absolutePosition' long) = (r8v0 'absolutePosition' long), (r8v2 'absolutePosition' long) binds: [B:0:0x0000, B:2:0x0003] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:2:0x0003\l|if (r1 \>= r11) goto L_0x0029\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:2:0x0003\l|dropDownstreamTo(r8)\lint r2 = (int) (r8 \- r7.totalBytesDropped)\lint r3 = java.lang.Math.min(r11 \- r1, r7.allocationLength \- r2)\lcom.google.android.exoplayer2.upstream.Allocation r0 = r7.dataQueue.peek()\ljava.lang.System.arraycopy(r0.data, r0.translateOffset(r2), r10, r1, r3)\llong r8 = r8 + ((long) r3)\lint r1 = r1 + r3\l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.DefaultTrackOutput.readData((r7v0 'this' com.google.android.exoplayer2.extractor.DefaultTrackOutput A[IMMUTABLE_TYPE, THIS]), (r8v0 'absolutePosition' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'target' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'length' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_1;
Node_4 -> Node_3;
}

