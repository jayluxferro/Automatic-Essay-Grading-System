digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.skipToKeyframeBefore(JZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue) = \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.infoQueue com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue \l0x0002: INVOKE  (r0 I:long) = \l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l  (r6 I:long A[D('timeUs' long)])\l  (r8 I:boolean A[D('allowTimeBeyondBuffer' boolean)])\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.skipToKeyframeBefore(long, boolean):long type: VIRTUAL \l0x0006: CONST  (r2 I:?[long, double]) = (\-1 ?[long, double]) \l0x0008: CMP_L  (r2 I:int) = (r0 I:long A[D('nextOffset' long)]), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r2 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l  (r0 I:long A[D('nextOffset' long)])\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.dropDownstreamTo(long):void type: DIRECT \l0x0011: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.DefaultTrackOutput.skipToKeyframeBefore((r5 'this' I:com.google.android.exoplayer2.extractor.DefaultTrackOutput A[IMMUTABLE_TYPE, THIS]), (r6 I:long A[D('timeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[D('allowTimeBeyondBuffer' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0006\-0x0012: r0 'nextOffset' long\l  ?\-0x0012: r6 'timeUs' long\l  ?\-0x0012: r8 'allowTimeBeyondBuffer' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
}

