digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.onEmsgLeafAtomRead(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r18.eventMessageTrackOutput != null) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r19.setPosition(12)\lr19.readNullTerminatedString()\lr19.readNullTerminatedString()\llong r6 = r19.readUnsignedInt()\llong r16 = com.google.android.exoplayer2.util.Util.scaleLargeTimestamp(r19.readUnsignedInt(), com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND, r6)\lr19.setPosition(12)\lint r13 = r19.bytesLeft()\lr18.eventMessageTrackOutput.sampleData(r19, r13)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0042|if ((r18.segmentIndexEarliestPresentationTimeUs \> com.google.android.exoplayer2.C1260C.TIME_UNSET ? 1 : (r18.segmentIndexEarliestPresentationTimeUs == com.google.android.exoplayer2.C1260C.TIME_UNSET ? 0 : \-1)) == 0) goto L_0x0055\l}"];
Node_4 [shape=record,label="{4\:\ 0x0044|r18.eventMessageTrackOutput.sampleMetadata(r18.segmentIndexEarliestPresentationTimeUs + r16, 1, r13, 0, (byte[]) null)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0055|r18.pendingMetadataSampleInfos.addLast(new com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.MetadataSampleInfo(r16, r13))\lr18.pendingMetadataSampleBytes = r18.pendingMetadataSampleBytes + r13\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.onEmsgLeafAtomRead((r18v0 'this' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r19v0 'atom' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_8;
}

