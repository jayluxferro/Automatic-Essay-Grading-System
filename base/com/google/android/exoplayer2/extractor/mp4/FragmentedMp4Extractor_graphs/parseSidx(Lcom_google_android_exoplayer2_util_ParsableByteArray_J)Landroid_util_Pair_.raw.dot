digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseSidx(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;J)Landroid\/util\/Pair;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r35 I:?[OBJECT, ARRAY] A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0004: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0007: INVOKE  (r20 I:int) = \l  (r35 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x000b: INVOKE  (r33 I:int) = (r20 I:int A[D('fullAtom' int)]) com.google.android.exoplayer2.extractor.mp4.Atom.parseFullAtomVersion(int):int type: STATIC \l0x000f: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0010: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r35 I:?[OBJECT, ARRAY] A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0012: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0015: INVOKE  (r8 I:long) = \l  (r35 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x0019: MOVE  (r22 I:?[long, double]) = (r36 I:?[long, double] A[D('inputPosition' long)]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: IF  (r33 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('version' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x006d \l}"];
Node_2 [shape=record,label="{2\:\ 0x001d|0x001d: INVOKE  (r4 I:long) = \l  (r35 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x0021: INVOKE  (r6 I:long) = \l  (r35 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x0025: ARITH  (r22 I:long A[D('offset' long)]) = (r22 I:long A[D('offset' long)]) + (r6 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|0x0027: CONST  (r6 I:?[long, double]) = (1000000(0xf4240, double:4.940656E\-318) ?[long, double]) \l0x002a: INVOKE  (r18 I:long) = \l  (r4 I:long A[D('earliestPresentationTime' long)])\l  (r6 I:long)\l  (r8 I:long A[D('timescale' long)])\l com.google.android.exoplayer2.util.Util.scaleLargeTimestamp(long, long, long):long type: STATIC \l0x002e: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x002f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r35 I:?[OBJECT, ARRAY] A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0031: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0034: INVOKE  (r25 I:int) = \l  (r35 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x0038: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('referenceCount' int)])\l \l0x003a: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x003c: MOVE  (r28 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x003e: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('referenceCount' int)])\l \l0x0040: NEW_ARRAY  (r0 I:long[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: long[] \l0x0042: MOVE  (r24 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0044: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('referenceCount' int)])\l \l0x0046: NEW_ARRAY  (r0 I:long[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: long[] \l0x0048: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x004a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('referenceCount' int)])\l \l0x004c: NEW_ARRAY  (r0 I:long[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: long[] \l0x004e: MOVE  (r29 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0050: MOVE  (r10 I:?[long, double]) = \l  (r4 I:?[long, double] A[D('earliestPresentationTime' long)])\l \l0x0051: MOVE  (r30 I:?[long, double]) = \l  (r18 I:?[long, double] A[D('earliestPresentationTimeUs' long)])\l \l0x0053: CONST  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0055|0x0055: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l0x0057: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('referenceCount' int)])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0059|0x0059: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:12:0x00a5 \l}"];
Node_6 [shape=record,label="{6\:\ 0x005b|0x005b: INVOKE  (r17 I:int) = \l  (r35 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x005f: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l0x0061: ARITH  (r32 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) & (r17 I:?[int, boolean, short, byte, char] A[D('firstInt' int)]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0063|0x0063: IF  (r32 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0078 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0065|0x0065: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0067: CONST_STR  (r7 I:java.lang.String) =  \"Unhandled indirect reference\" \l0x0069: INVOKE  \l  (r6 I:com.google.android.exoplayer2.ParserException)\l  (r7 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x006c|0x006c: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x006d|0x006d: INVOKE  (r4 I:long A[D('earliestPresentationTime' long)]) = \l  (r35 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedLongToLong():long type: VIRTUAL \l0x0071: INVOKE  (r6 I:long) = \l  (r35 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedLongToLong():long type: VIRTUAL \l0x0075: ARITH  (r22 I:long A[D('offset' long)]) = (r22 I:long A[D('offset' long)]) + (r6 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0078|0x0078: INVOKE  (r26 I:long) = \l  (r35 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x007c: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l0x007f: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) & (r17 I:?[int, boolean, short, byte, char] A[D('firstInt' int)]) \l0x0081: APUT  \l  (r28 I:?[int, float][] A[D('sizes' int[])])\l  (r21 I:?[int, short, byte, char] A[D('i' int)])\l  (r6 I:?[int, float])\l \l0x0083: APUT  \l  (r24 I:?[long, double][] A[D('offsets' long[])])\l  (r21 I:?[int, short, byte, char] A[D('i' int)])\l  (r22 I:?[long, double] A[D('offset' long)])\l \l0x0085: APUT  \l  (r29 I:?[long, double][] A[D('timesUs' long[])])\l  (r21 I:?[int, short, byte, char] A[D('i' int)])\l  (r30 I:?[long, double] A[D('timeUs' long)])\l \l0x0087: ARITH  (r10 I:long A[D('time' long)]) = (r10 I:long A[D('time' long)]) + (r26 I:long A[D('referenceDuration' long)]) \l0x0089: CONST  (r12 I:?[long, double]) = (1000000(0xf4240, double:4.940656E\-318) ?[long, double]) \l0x008c: MOVE  (r14 I:?[long, double]) = (r8 I:?[long, double] A[D('timescale' long)]) \l0x008d: INVOKE  (r30 I:long A[D('timeUs' long)]) = (r10 I:long A[D('time' long)]), (r12 I:long), (r14 I:long) com.google.android.exoplayer2.util.Util.scaleLargeTimestamp(long, long, long):long type: STATIC \l0x0091: AGET  (r6 I:?[long, double]) = \l  (r29 I:?[long, double][] A[D('timesUs' long[])])\l  (r21 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0093: ARITH  (r6 I:long) = (r30 I:long A[D('timeUs' long)]) \- (r6 I:long) \l0x0095: APUT  \l  (r16 I:?[long, double][] A[D('durationsUs' long[])])\l  (r21 I:?[int, short, byte, char] A[D('i' int)])\l  (r6 I:?[long, double])\l \l0x0097: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0098: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r35 I:?[OBJECT, ARRAY] A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x009a: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x009d: AGET  (r6 I:?[int, float]) = \l  (r28 I:?[int, float][] A[D('sizes' int[])])\l  (r21 I:?[int, short, byte, char] A[D('i' int)])\l \l0x009f: CAST  (r6 I:long) = (long) (r6 I:int) \l0x00a0: ARITH  (r22 I:long A[D('offset' long)]) = (r22 I:long A[D('offset' long)]) + (r6 I:long) \l0x00a2: ARITH  (r21 I:int A[D('i' int)]) = (r21 I:int A[D('i' int)]) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x00a5|0x00a5: INVOKE  (r6 I:java.lang.Long) = (r18 I:long A[D('earliestPresentationTimeUs' long)]) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x00a9: NEW_INSTANCE  (r7 I:com.google.android.exoplayer2.extractor.ChunkIndex) =  com.google.android.exoplayer2.extractor.ChunkIndex \l0x00ab: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY] A[D('sizes' int[])]) \l0x00ad: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY] A[D('offsets' long[])]) \l0x00af: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY] A[D('durationsUs' long[])]) \l0x00b1: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY] A[D('timesUs' long[])]) \l0x00b3: INVOKE  \l  (r7 I:com.google.android.exoplayer2.extractor.ChunkIndex)\l  (r0 I:int[])\l  (r1 I:long[])\l  (r2 I:long[])\l  (r3 I:long[])\l com.google.android.exoplayer2.extractor.ChunkIndex.\<init\>(int[], long[], long[], long[]):void type: DIRECT \l0x00b6: INVOKE  (r6 I:android.util.Pair) = (r6 I:java.lang.Object), (r7 I:java.lang.Object) android.util.Pair.create(java.lang.Object, java.lang.Object):android.util.Pair type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x00ba|0x00ba: RETURN  \l  (r6 I:android.util.Pair\<java.lang.Long, com.google.android.exoplayer2.extractor.ChunkIndex\>)\l \l}"];
MethodNode[shape=record,label="{private static android.util.Pair\<java.lang.Long, com.google.android.exoplayer2.extractor.ChunkIndex\> com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseSidx((r35 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atom' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36 I:long A[D('inputPosition' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0021\-0x006d: r4 'earliestPresentationTime' long\l  0x0051\-0x006d: r10 'time' long\l  0x004a\-0x006d: r16 'durationsUs' long[]\l  0x005f\-0x006d: r17 'firstInt' int\l  0x002e\-0x006d: r18 'earliestPresentationTimeUs' long\l  0x0055\-0x006d: r21 'i' int\l  0x0044\-0x006d: r24 'offsets' long[]\l  0x0038\-0x006d: r25 'referenceCount' int\l  0x003e\-0x006d: r28 'sizes' int[]\l  0x0050\-0x006d: r29 'timesUs' long[]\l  0x0053\-0x006d: r30 'timeUs' long\l  0x0063\-0x006d: r32 'type' int\l  0x0078\-0x00a5: r17 'firstInt' int\l  0x007c\-0x00a5: r26 'referenceDuration' long\l  0x0078\-0x00a5: r32 'type' int\l  0x0071\-0x00ba: r4 'earliestPresentationTime' long\l  0x0019\-0x00ba: r8 'timescale' long\l  0x0078\-0x00ba: r10 'time' long\l  0x0078\-0x00ba: r16 'durationsUs' long[]\l  0x0078\-0x00ba: r18 'earliestPresentationTimeUs' long\l  0x000b\-0x00ba: r20 'fullAtom' int\l  0x0078\-0x00ba: r21 'i' int\l  0x001b\-0x00ba: r22 'offset' long\l  0x0078\-0x00ba: r24 'offsets' long[]\l  0x0078\-0x00ba: r25 'referenceCount' int\l  0x0078\-0x00ba: r28 'sizes' int[]\l  0x0078\-0x00ba: r29 'timesUs' long[]\l  0x0078\-0x00ba: r30 'timeUs' long\l  0x000f\-0x00ba: r33 'version' int\l  ?\-0x00ba: r35 'atom' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x00ba: r36 'inputPosition' long\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;, J), Landroid\/util\/Pair, \<, Ljava\/lang\/Long;, Lcom\/google\/android\/exoplayer2\/extractor\/ChunkIndex;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_10 -> Node_3;
Node_11 -> Node_4;
Node_12 -> Node_13;
}

