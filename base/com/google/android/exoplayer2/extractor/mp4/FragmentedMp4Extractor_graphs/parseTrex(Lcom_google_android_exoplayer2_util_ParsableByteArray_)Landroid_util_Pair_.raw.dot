digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseTrex(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Landroid\/util\/Pair;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r5 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x0002: INVOKE  \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('trex' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0005: INVOKE  (r4 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('trex' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0009: INVOKE  (r5 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('trex' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedIntToInt():int type: VIRTUAL \l0x000d: ARITH  (r0 I:int) = (r5 I:int) + (\-1 int) \l0x000f: INVOKE  (r1 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('trex' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedIntToInt():int type: VIRTUAL \l0x0013: INVOKE  (r3 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('trex' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedIntToInt():int type: VIRTUAL \l0x0017: INVOKE  (r2 I:int) = \l  (r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('trex' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x001b: INVOKE  (r5 I:java.lang.Integer) = (r4 I:int A[D('trackId' int)]) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x001f: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues) =  com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues \l0x0021: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues)\l  (r0 I:int A[D('defaultSampleDescriptionIndex' int)])\l  (r1 I:int A[D('defaultSampleDuration' int)])\l  (r3 I:int A[D('defaultSampleSize' int)])\l  (r2 I:int A[D('defaultSampleFlags' int)])\l com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues.\<init\>(int, int, int, int):void type: DIRECT \l0x0024: INVOKE  (r5 I:android.util.Pair) = (r5 I:java.lang.Object), (r6 I:java.lang.Object) android.util.Pair.create(java.lang.Object, java.lang.Object):android.util.Pair type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0028|0x0028: RETURN  \l  (r5 I:android.util.Pair\<java.lang.Integer, com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues\>)\l \l}"];
MethodNode[shape=record,label="{private static android.util.Pair\<java.lang.Integer, com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues\> com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseTrex((r7 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('trex' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000f\-0x0028: r0 'defaultSampleDescriptionIndex' int\l  0x0013\-0x0028: r1 'defaultSampleDuration' int\l  0x001b\-0x0028: r2 'defaultSampleFlags' int\l  0x0017\-0x0028: r3 'defaultSampleSize' int\l  0x0009\-0x0028: r4 'trackId' int\l  ?\-0x0028: r7 'trex' com.google.android.exoplayer2.util.ParsableByteArray\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;, ), Landroid\/util\/Pair, \<, Ljava\/lang\/Integer;, Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/DefaultSampleValues;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

