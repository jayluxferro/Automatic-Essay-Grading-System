digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.onMoovContainerAtomRead(Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/Atom$ContainerAtom;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r24.sideloadedTrack != null) goto L_0x0057\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r5 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|PHI: r5 \l  PHI: (r5v2 boolean) = (r5v1 boolean), (r5v37 boolean) binds: [B:9:0x0057, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r5, \"Unexpected moov box.\")\lcom.google.android.exoplayer2.drm.DrmInitData r8 = getDrmInitDataFromAtoms(r25.leafChildren)\lr0 = r25\lcom.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom r13 = r0.getContainerAtomOfType(com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_mvex)\landroid.util.SparseArray r10 = new android.util.SparseArray\<\>()\lr6 = com.google.android.exoplayer2.C1260C.TIME_UNSET\lint r14 = r13.leafChildren.size()\lr11 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|LOOP_START\lPHI: r6 r11 \l  PHI: (r6v1 'duration' long) = (r6v0 'duration' long), (r6v3 'duration' long) binds: [B:3:0x0007, B:8:0x0054] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 'i' int) = (r11v0 'i' int), (r11v11 'i' int) binds: [B:3:0x0007, B:8:0x0054] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x002d\-\>B:8:0x0054\l|if (r11 \>= r14) goto L_0x0066\l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom r4 = r13.leafChildren.get(r11)\l}"];
Node_6 [shape=record,label="{6\:\ 0x003b|if (r4.type != com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_trex) goto L_0x0059\l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|android.util.Pair r19 = parseTrex(r4.data)\lr10.put(((java.lang.Integer) r19.first).intValue(), r19.second)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0054|LOOP_END\lPHI: r6 \l  PHI: (r6v3 'duration' long) = (r6v1 'duration' long), (r6v2 'duration' long), (r6v1 'duration' long) binds: [B:38:0x0054, B:39:0x0054, B:37:0x0054] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x002d\-\>B:8:0x0054\l|int r11 = r11 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0057|r5 = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0059}"];
Node_11 [shape=record,label="{11\:\ 0x005d|if (r4.type != com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_mehd) goto L_0x0054\l}"];
Node_12 [shape=record,label="{12\:\ 0x005f|long r6 = parseMehd(r4.data)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0066|android.util.SparseArray r18 = new android.util.SparseArray\<\>()\lint r12 = r25.containerChildren.size()\lr11 = 0\l}"];
Node_14 [shape=record,label="{14\:\ 0x0074|LOOP_START\lPHI: r11 \l  PHI: (r11v3 'i' int) = (r11v2 'i' int), (r11v10 'i' int) binds: [B:13:0x0066, B:20:0x009c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:14:0x0074\-\>B:20:0x009c\l|if (r11 \>= r12) goto L_0x009f\l}"];
Node_15 [shape=record,label="{15\:\ 0x0076|com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom r4 = r25.containerChildren.get(r11)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0084|if (r4.type != com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_trak) goto L_0x009c\l}"];
Node_17 [shape=record,label="{17\:\ 0x0086|r0 = r25\lcom.google.android.exoplayer2.extractor.mp4.Track r15 = com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseTrak(r4, r0.getLeafAtomOfType(com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_mvhd), r6, r8, false)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0093|if (r15 == null) goto L_0x009c\l}"];
Node_19 [shape=record,label="{19\:\ 0x0095|r0 = r18\lr0.put(r15.f2448id, r15)\l}"];
Node_20 [shape=record,label="{20\:\ 0x009c|LOOP_END\lLOOP:1: B:14:0x0074\-\>B:20:0x009c\l|int r11 = r11 + 1\l}"];
Node_21 [shape=record,label="{21\:\ 0x009f|int r17 = r18.size()\l}"];
Node_22 [shape=record,label="{22\:\ 0x00ab|if (r24.trackBundles.size() != 0) goto L_0x0105\l}"];
Node_23 [shape=record,label="{23\:\ 0x00ad|r11 = 0\l}"];
Node_24 [shape=record,label="{24\:\ 0x00ae|LOOP_START\lPHI: r11 \l  PHI: (r11v8 'i' int) = (r11v7 'i' int), (r11v9 'i' int) binds: [B:23:0x00ad, B:26:0x00b2] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:24:0x00ae\-\>B:26:0x00b2\l}"];
Node_25 [shape=record,label="{25\:\ 0x00b0|if (r11 \>= r17) goto L_0x00fa\l}"];
Node_26 [shape=record,label="{26\:\ 0x00b2|LOOP_END\lLOOP:2: B:24:0x00ae\-\>B:26:0x00b2\l|com.google.android.exoplayer2.extractor.mp4.Track r15 = r18.valueAt(r11)\lcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle r0 = new com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.TrackBundle(r24.extractorOutput.track(r11, r15.type))\lr0 = r0\lr0.init(r15, r10.get(r15.f2448id))\lr24.trackBundles.put(r15.f2448id, r0)\lr24.durationUs = java.lang.Math.max(r24.durationUs, r15.durationUs)\lint r11 = r11 + 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x00fa|maybeInitExtraTracks()\lr24.extractorOutput.endTracks()\l}"];
Node_28 [shape=record,label="{28\:\ 0x0105}"];
Node_29 [shape=record,label="{29\:\ 0x010f|if (r24.trackBundles.size() != r17) goto L_0x013c\l}"];
Node_30 [shape=record,label="{30\:\ 0x0111|r5 = true\l}"];
Node_31 [shape=record,label="{31\:\ 0x0112|PHI: r5 \l  PHI: (r5v12 boolean) = (r5v11 boolean), (r5v16 boolean) binds: [B:35:0x013c, B:30:0x0111] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r5)\lr11 = 0\l}"];
Node_32 [shape=record,label="{32\:\ 0x0116|LOOP_START\lPHI: r11 \l  PHI: (r11v5 'i' int) = (r11v4 'i' int), (r11v6 'i' int) binds: [B:31:0x0112, B:34:0x011a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:32:0x0116\-\>B:34:0x011a\l}"];
Node_33 [shape=record,label="{33\:\ 0x0118|if (r11 \>= r17) goto L_0x0104\l}"];
Node_34 [shape=record,label="{34\:\ 0x011a|LOOP_END\lLOOP:3: B:32:0x0116\-\>B:34:0x011a\l|com.google.android.exoplayer2.extractor.mp4.Track r15 = r18.valueAt(r11)\lr24.trackBundles.get(r15.f2448id).init(r15, r10.get(r15.f2448id))\lint r11 = r11 + 1\l}"];
Node_35 [shape=record,label="{35\:\ 0x013c|r5 = false\l}"];
Node_36 [shape=record,label="{36\:\ 0x0066|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0054|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0054|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0054|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x009f|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x009c|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x009c|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x009c|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x00fa|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0104|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.onMoovContainerAtomRead((r24v0 'this' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r25v0 'moov' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_36;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_37;
Node_8 -> Node_4;
Node_9 -> Node_3;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_38;
Node_12 -> Node_39;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_40;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_42;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_43;
Node_19 -> Node_41;
Node_20 -> Node_14;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_44;
Node_26 -> Node_24;
Node_27 -> Node_46;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_35;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_45;
Node_34 -> Node_32;
Node_35 -> Node_31;
Node_36 -> Node_13;
Node_37 -> Node_8;
Node_38 -> Node_8;
Node_39 -> Node_8;
Node_40 -> Node_21;
Node_41 -> Node_20;
Node_42 -> Node_20;
Node_43 -> Node_20;
Node_44 -> Node_27;
Node_45 -> Node_47;
}

