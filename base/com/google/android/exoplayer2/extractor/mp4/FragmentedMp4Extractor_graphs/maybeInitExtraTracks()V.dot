digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.maybeInitExtraTracks()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r10.flags & 4) == 0) goto L_0x002b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r10.eventMessageTrackOutput != null) goto L_0x002b\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|r10.eventMessageTrackOutput = r10.extractorOutput.track(r10.trackBundles.size(), 4)\lr10.eventMessageTrackOutput.format(com.google.android.exoplayer2.Format.createSampleFormat((java.lang.String) null, com.google.android.exoplayer2.util.MimeTypes.APPLICATION_EMSG, Long.MAX_VALUE))\l}"];
Node_5 [shape=record,label="{5\:\ 0x002b}"];
Node_6 [shape=record,label="{6\:\ 0x002f|if ((r10.flags & 8) == 0) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x0031}"];
Node_8 [shape=record,label="{8\:\ 0x0033|if (r10.cea608TrackOutputs != null) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|com.google.android.exoplayer2.extractor.TrackOutput r7 = r10.extractorOutput.track(r10.trackBundles.size() + 1, 3)\lr7.format(com.google.android.exoplayer2.Format.createTextSampleFormat((java.lang.String) null, com.google.android.exoplayer2.util.MimeTypes.APPLICATION_CEA608, (java.lang.String) null, \-1, 0, (java.lang.String) null, (com.google.android.exoplayer2.drm.DrmInitData) null))\lcom.google.android.exoplayer2.extractor.TrackOutput[] r0 = new com.google.android.exoplayer2.extractor.TrackOutput[]\{r7\}\lr10.cea608TrackOutputs = r0\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.maybeInitExtraTracks((r10v0 'this' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
}

