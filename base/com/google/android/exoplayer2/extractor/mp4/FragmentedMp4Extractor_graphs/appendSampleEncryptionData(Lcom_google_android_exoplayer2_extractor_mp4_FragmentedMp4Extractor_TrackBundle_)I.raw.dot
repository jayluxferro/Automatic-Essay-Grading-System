digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.appendSampleEncryptionData(Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/FragmentedMp4Extractor$TrackBundle;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r7 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment) = \l  (r13 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle A[D('trackBundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle)])\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.TrackBundle.fragment com.google.android.exoplayer2.extractor.mp4.TrackFragment \l0x0003: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r7 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[D('trackFragment' com.google.android.exoplayer2.extractor.mp4.TrackFragment)])\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleEncryptionData com.google.android.exoplayer2.util.ParsableByteArray \l0x0005: IGET  (r9 I:com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues) = \l  (r7 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[D('trackFragment' com.google.android.exoplayer2.extractor.mp4.TrackFragment)])\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.header com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues \l0x0007: IGET  (r2 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues)\l com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues.sampleDescriptionIndex int \l0x0009: IGET  (r9 I:com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox) = \l  (r7 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[D('trackFragment' com.google.android.exoplayer2.extractor.mp4.TrackFragment)])\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.trackEncryptionBox com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0038 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IGET  (r0 I:com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox) = \l  (r7 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[D('trackFragment' com.google.android.exoplayer2.extractor.mp4.TrackFragment)])\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.trackEncryptionBox com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IGET  (r8 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox A[D('encryptionBox' com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox)])\l com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox.initializationVectorSize int \l0x0011: IGET  (r9 I:boolean[]) = \l  (r7 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[D('trackFragment' com.google.android.exoplayer2.extractor.mp4.TrackFragment)])\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleHasSubsampleEncryptionTable boolean[] \l0x0013: IGET  (r11 I:int) = \l  (r13 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle A[D('trackBundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle)])\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.TrackBundle.currentSampleIndex int \l0x0015: AGET  (r6 I:boolean A[IMMUTABLE_TYPE]) = \l  (r9 I:boolean[] A[IMMUTABLE_TYPE])\l  (r11 I:?[int, short, byte, char])\l \l0x0017: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.encryptionSignalByte com.google.android.exoplayer2.util.ParsableByteArray \l0x0019: IGET  (r11 I:byte[]) = (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('subsampleEncryption' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003f \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: ARITH  (r9 I:?[int, boolean, short, byte, char]) = (r9 I:?[int, boolean, short, byte, char]) \| (r8 I:?[int, boolean, short, byte, char] A[D('vectorSize' int)]) \l0x0020: CAST  (r9 I:byte) = (byte) (r9 I:int) \l0x0021: APUT  \l  (r11 I:byte[] A[IMMUTABLE_TYPE])\l  (r10 I:?[int, short, byte, char])\l  (r9 I:byte A[IMMUTABLE_TYPE])\l \l0x0023: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.encryptionSignalByte com.google.android.exoplayer2.util.ParsableByteArray \l0x0025: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0028: IGET  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r13 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle A[D('trackBundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle)])\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.TrackBundle.output com.google.android.exoplayer2.extractor.TrackOutput \l0x002a: IGET  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r12 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.encryptionSignalByte com.google.android.exoplayer2.util.ParsableByteArray \l0x002c: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002d: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput A[D('output' com.google.android.exoplayer2.extractor.TrackOutput)])\l  (r9 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r10 I:int)\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x0030: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput A[D('output' com.google.android.exoplayer2.extractor.TrackOutput)])\l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sampleEncryptionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r8 I:int A[D('vectorSize' int)])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|0x0033: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('subsampleEncryption' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|0x0035: ARITH  (r9 I:int) = (r8 I:int A[D('vectorSize' int)]) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|0x0037: RETURN  (r9 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: IGET  (r9 I:com.google.android.exoplayer2.extractor.mp4.Track) = \l  (r13 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle A[D('trackBundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle)])\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.TrackBundle.track com.google.android.exoplayer2.extractor.mp4.Track \l0x003a: IGET  (r9 I:com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox[]) = (r9 I:com.google.android.exoplayer2.extractor.mp4.Track) com.google.android.exoplayer2.extractor.mp4.Track.sampleDescriptionEncryptionBoxes com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox[] \l0x003c: AGET  (r0 I:?[OBJECT, ARRAY]) = \l  (r9 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char] A[D('sampleDescriptionIndex' int)])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|0x003f: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: INVOKE  (r4 I:int) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sampleEncryptionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x0045: CONST  (r9 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) \l0x0046: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sampleEncryptionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r9 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0049: ARITH  (r9 I:int) = (r4 I:int A[D('subsampleCount' int)]) * (6 int) \l0x004b: ARITH  (r5 I:int) = (r9 I:int) + (2 int) \l0x004d: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput A[D('output' com.google.android.exoplayer2.extractor.TrackOutput)])\l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sampleEncryptionData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r5 I:int A[D('subsampleDataLength' int)])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x0050: ARITH  (r9 I:int) = (r8 I:int A[D('vectorSize' int)]) + (1 int) \l0x0052: ARITH  (r9 I:int) = (r9 I:int) + (r5 I:int A[D('subsampleDataLength' int)]) \l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.appendSampleEncryptionData((r12 'this' I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r13 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle A[D('trackBundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000f\-0x0038: r0 'encryptionBox' com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox\l  0x002a\-0x0038: r1 'output' com.google.android.exoplayer2.extractor.TrackOutput\l  0x0017\-0x0038: r6 'subsampleEncryption' boolean\l  0x0011\-0x0038: r8 'vectorSize' int\l  0x003f\-0x0053: r0 'encryptionBox' com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox\l  0x0041\-0x0053: r1 'output' com.google.android.exoplayer2.extractor.TrackOutput\l  0x0009\-0x0053: r2 'sampleDescriptionIndex' int\l  0x0005\-0x0053: r3 'sampleEncryptionData' com.google.android.exoplayer2.util.ParsableByteArray\l  0x0045\-0x0053: r4 'subsampleCount' int\l  0x004d\-0x0053: r5 'subsampleDataLength' int\l  0x003f\-0x0053: r6 'subsampleEncryption' boolean\l  0x0003\-0x0053: r7 'trackFragment' com.google.android.exoplayer2.extractor.mp4.TrackFragment\l  0x003f\-0x0053: r8 'vectorSize' int\l  ?\-0x0053: r13 'trackBundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_10 -> Node_3;
Node_11 -> Node_6;
Node_12 -> Node_9;
}

