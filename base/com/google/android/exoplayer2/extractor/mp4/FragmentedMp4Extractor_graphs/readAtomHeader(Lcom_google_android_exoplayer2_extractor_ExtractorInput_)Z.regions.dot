digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.readAtomHeader(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
subgraph cluster_Region_840634467 {
label = "R(3:(1:(2:(1:4)|(1:5)))|(1:8)|(2:(1:12)|(3:13|(2:15|(1:17))|(2:(4:20|(1:22)|23|48)|(2:(2:26|(1:28)(1:30))(1:(1:(1:36)(1:(1:40)(1:41)))(1:(1:45)(1:46)))|29)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1020703729 {
label = "IF [B:1:0x0002] THEN: R(1:(2:(1:4)|(1:5))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r13.atomHeaderBytesRead == 0) goto L_0x0004\l}"];
subgraph cluster_Region_1582814134 {
label = "R(1:(2:(1:4)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_1553666098 {
label = "R(2:(1:4)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_921279434 {
label = "IF [B:3:0x0010] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r14.readFully(r13.atomHeader.data, 0, 8, true) == false) goto L_0x0012\l}"];
subgraph cluster_Region_1068101597 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1602437629 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|r13.atomHeaderBytesRead = 8\lr13.atomHeader.setPosition(0)\lr13.atomSize = r13.atomHeader.readUnsignedInt()\lr13.atomType = r13.atomHeader.readInt()\l}"];
}
}
}
}
subgraph cluster_IfRegion_1537065151 {
label = "IF [B:7:0x0034] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0034|if (r13.atomSize == 1) goto L_0x0036\l}"];
subgraph cluster_Region_567289805 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0036|r14.readFully(r13.atomHeader.data, 8, 8)\lr13.atomHeaderBytesRead += 8\lr13.atomSize = r13.atomHeader.readUnsignedLongToLong()\l}"];
}
}
subgraph cluster_Region_1366811437 {
label = "R(2:(1:12)|(3:13|(2:15|(1:17))|(2:(4:20|(1:22)|23|48)|(2:(2:26|(1:28)(1:30))(1:(1:(1:36)(1:(1:40)(1:41)))(1:(1:45)(1:46)))|29))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_339663959 {
label = "IF [B:10:0x0055] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0055|if (r13.atomSize \< ((long) r13.atomHeaderBytesRead)) goto L_0x0057\l}"];
subgraph cluster_Region_563314263 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x005e|throw new com.google.android.exoplayer2.ParserException(\"Atom size less than header length (unsupported).\")\l}"];
}
}
subgraph cluster_Region_1463203816 {
label = "R(3:13|(2:15|(1:17))|(2:(4:20|(1:22)|23|48)|(2:(2:26|(1:28)(1:30))(1:(1:(1:36)(1:(1:40)(1:41)))(1:(1:45)(1:46)))|29)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x005f|long long r0 = r14.getPosition() \- ((long) r13.atomHeaderBytesRead)\l}"];
subgraph cluster_IfRegion_22928359 {
label = "IF [B:14:0x006c] THEN: R(2:15|(1:17)) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x006c|if (r13.atomType == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_moof) goto L_0x006e\l}"];
subgraph cluster_Region_313625490 {
label = "R(2:15|(1:17))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x006e|int int r7 = r13.trackBundles.size()\lint r6 = 0\l}"];
subgraph cluster_LoopRegion_1811685162 {
label = "LOOP:0: (1:17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0075|LOOP_START\lPHI: r6 \l  PHI: (r6v1 'i' int) = (r6v0 'i' int), (r6v2 'i' int) binds: [B:15:0x006e, B:17:0x0077] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:16:0x0075\-\>B:17:0x0077\l|if (r6 \< r7) goto L_0x0077\l}"];
subgraph cluster_Region_1861478461 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0077|LOOP_END\lLOOP:0: B:16:0x0075\-\>B:17:0x0077\l|com.google.android.exoplayer2.extractor.mp4.TrackFragment com.google.android.exoplayer2.extractor.mp4.TrackFragment r4 = r13.trackBundles.valueAt(r6).fragment\lr4.atomPosition = r0\lr4.auxiliaryDataPosition = r0\lr4.dataPosition = r0\lr6++\l}"];
}
}
}
}
subgraph cluster_Region_1868381802 {
label = "R(2:(4:20|(1:22)|23|48)|(2:(2:26|(1:28)(1:30))(1:(1:(1:36)(1:(1:40)(1:41)))(1:(1:45)(1:46)))|29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_224627634 {
label = "IF [B:19:0x008e] THEN: R(4:20|(1:22)|23|48) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x008e|if (r13.atomType == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_mdat) goto L_0x0090\l}"];
subgraph cluster_Region_1805796044 {
label = "R(4:20|(1:22)|23|48)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0090|r13.currentTrackBundle = null\lr13.endOfMdatPosition = r13.atomSize + r0\l}"];
subgraph cluster_IfRegion_934821263 {
label = "IF [B:21:0x009a] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x009a|if (r13.haveOutputSeekMap == false) goto L_0x009c\l}"];
subgraph cluster_Region_1490377340 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x009c|r13.extractorOutput.seekMap(new com.google.android.exoplayer2.extractor.SeekMap.Unseekable(r13.durationUs))\lr13.haveOutputSeekMap = true\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x00ab|r13.parserState = 2\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1593672034 {
label = "R(2:(2:26|(1:28)(1:30))(1:(1:(1:36)(1:(1:40)(1:41)))(1:(1:45)(1:46)))|29)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1330818836 {
label = "IF [B:25:0x00b7] THEN: R(2:26|(1:28)(1:30)) ELSE: R(1:(1:(1:36)(1:(1:40)(1:41)))(1:(1:45)(1:46)))";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x00b7|if (shouldParseContainerAtom(r13.atomType) == true) goto L_0x00b9\l}"];
subgraph cluster_Region_26823661 {
label = "R(2:26|(1:28)(1:30))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00b9|long long r2 = (r14.getPosition() + r13.atomSize) \- 8\lr13.containerAtoms.add(new com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom(r13.atomType, r2))\l}"];
subgraph cluster_IfRegion_972072756 {
label = "IF [B:27:0x00d7] THEN: R(1:28) ELSE: R(1:30)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x00d7|if (r13.atomSize == ((long) r13.atomHeaderBytesRead)) goto L_0x00d9\l}"];
subgraph cluster_Region_1668429249 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00d9|processAtomEnded(r2)\l}"];
}
subgraph cluster_Region_1266949324 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00df|enterReadingAtomHeaderState()\l}"];
}
}
}
subgraph cluster_Region_2042655311 {
label = "R(1:(1:(1:36)(1:(1:40)(1:41)))(1:(1:45)(1:46))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_598755436 {
label = "IF [B:32:0x00e9] THEN: R(1:(1:36)(1:(1:40)(1:41))) ELSE: R(1:(1:45)(1:46)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x00e9|if (shouldParseLeafAtom(r13.atomType) == true) goto L_0x00eb\l}"];
subgraph cluster_Region_533041705 {
label = "R(1:(1:36)(1:(1:40)(1:41)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1959563105 {
label = "IF [B:34:0x00ef] THEN: R(1:36) ELSE: R(1:(1:40)(1:41))";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00ef|if (r13.atomHeaderBytesRead != 8) goto L_0x00f1\l}"];
subgraph cluster_Region_241490365 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00f8|throw new com.google.android.exoplayer2.ParserException(\"Leaf atom defines extended atom size (unsupported).\")\l}"];
}
subgraph cluster_Region_800461621 {
label = "R(1:(1:40)(1:41)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_483493936 {
label = "IF [B:38:0x0100] THEN: R(1:40) ELSE: R(1:41) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x0100|if (r13.atomSize \> 2147483647L) goto L_0x0102\l}"];
subgraph cluster_Region_209103692 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0109|throw new com.google.android.exoplayer2.ParserException(\"Leaf atom with length \> 2147483647 (unsupported).\")\l}"];
}
subgraph cluster_Region_611787342 {
label = "R(1:41)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x010a|r13.atomData = new com.google.android.exoplayer2.util.ParsableByteArray((int) r13.atomSize)\ljava.lang.System.arraycopy(r13.atomHeader.data, 0, r13.atomData.data, 0, 8)\lr13.parserState = 1\l}"];
}
}
}
}
}
subgraph cluster_Region_994554446 {
label = "R(1:(1:45)(1:46)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_734473502 {
label = "IF [B:43:0x012e] THEN: R(1:45) ELSE: R(1:46) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x012e|if (r13.atomSize \> 2147483647L) goto L_0x0130\l}"];
subgraph cluster_Region_315805665 {
label = "R(1:45)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0137|throw new com.google.android.exoplayer2.ParserException(\"Skipping atom with length \> 2147483647 (unsupported).\")\l}"];
}
subgraph cluster_Region_254474919 {
label = "R(1:46)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x0138|r13.atomData = null\lr13.parserState = 1\l}"];
}
}
}
}
}
}
Node_29 [shape=record,label="{29\:\ 0x00dc|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002e}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x004e}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0057}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x008a}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x00b1}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x00e3}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00eb}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x00f1}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00f9}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0102}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0127}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0130}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x008a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.readAtomHeader((r13v0 'this' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r14v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_47[style=dashed];
Node_17 -> Node_16;
Node_19 -> Node_20;
Node_19 -> Node_24[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_48;
Node_25 -> Node_26;
Node_25 -> Node_31[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_30[style=dashed];
Node_28 -> Node_29;
Node_30 -> Node_29;
Node_32 -> Node_33;
Node_32 -> Node_42[style=dashed];
Node_34 -> Node_35;
Node_34 -> Node_37[style=dashed];
Node_38 -> Node_39;
Node_38 -> Node_41[style=dashed];
Node_41 -> Node_29;
Node_43 -> Node_44;
Node_43 -> Node_46[style=dashed];
Node_46 -> Node_29;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_18 -> Node_19;
Node_24 -> Node_25;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_47 -> Node_18;
}

