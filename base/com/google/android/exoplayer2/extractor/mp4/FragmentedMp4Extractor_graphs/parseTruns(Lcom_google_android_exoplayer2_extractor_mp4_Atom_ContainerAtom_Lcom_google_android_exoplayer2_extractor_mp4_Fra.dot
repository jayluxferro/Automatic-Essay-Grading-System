digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseTruns(Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/Atom$ContainerAtom;Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/FragmentedMp4Extractor$TrackBundle;JI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r15 = 0\lr13 = 0\ljava.util.List\<com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom\> r11 = r20.leafChildren\lint r12 = r11.size()\lr10 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|LOOP_START\lPHI: r10 r13 r15 \l  PHI: (r10v1 'i' int) = (r10v0 'i' int), (r10v5 'i' int) binds: [B:0:0x0000, B:7:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 'totalSampleCount' int) = (r13v0 'totalSampleCount' int), (r13v2 'totalSampleCount' int) binds: [B:0:0x0000, B:7:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v1 'trunCount' int) = (r15v0 'trunCount' int), (r15v2 'trunCount' int) binds: [B:0:0x0000, B:7:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:7:0x002e\l|if (r10 \>= r12) goto L_0x0031\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom r9 = r11.get(r10)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|if (r9.type != com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_trun) goto L_0x002e\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|r16 = r9.data\lr16.setPosition(12)\lint r18 = r16.readUnsignedIntToInt()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|if (r18 \<= 0) goto L_0x002e\l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|int r13 = r13 + r18\lint r15 = r15 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|LOOP_END\lPHI: r13 r15 \l  PHI: (r13v2 'totalSampleCount' int) = (r13v1 'totalSampleCount' int), (r13v1 'totalSampleCount' int), (r13v3 'totalSampleCount' int) binds: [B:17:0x002e, B:18:0x002e, B:16:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v2 'trunCount' int) = (r15v1 'trunCount' int), (r15v1 'trunCount' int), (r15v3 'trunCount' int) binds: [B:17:0x002e, B:18:0x002e, B:16:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:7:0x002e\l|int r10 = r10 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|r21.currentTrackRunIndex = 0\lr21.currentSampleInTrackRun = 0\lr21.currentSampleIndex = 0\lr21.fragment.initTables(r15, r13)\lr3 = 0\lr8 = 0\lr10 = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x004a|LOOP_START\lPHI: r3 r8 r10 \l  PHI: (r3v1 'trunIndex' int) = (r3v0 'trunIndex' int), (r3v2 'trunIndex' int) binds: [B:8:0x0031, B:13:0x0068] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 'trunStartPosition' int) = (r8v0 'trunStartPosition' int), (r8v2 'trunStartPosition' int) binds: [B:8:0x0031, B:13:0x0068] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v3 'i' int) = (r10v2 'i' int), (r10v4 'i' int) binds: [B:8:0x0031, B:13:0x0068] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:9:0x004a\-\>B:13:0x0068\l|if (r10 \>= r12) goto L_0x006b\l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom r14 = r11.get(r10)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0056|if (r14.type != com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_trun) goto L_0x0068\l}"];
Node_12 [shape=record,label="{12\:\ 0x0058|r2 = r21\lr4 = r22\lr6 = r24\lint r8 = parseTrun(r2, r3, r4, r6, r14.data, r8)\lr3 = r3 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0068|LOOP_END\lPHI: r3 r8 \l  PHI: (r3v2 'trunIndex' int) = (r3v1 'trunIndex' int), (r3v3 'trunIndex' int) binds: [B:21:0x0068, B:20:0x0068] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 'trunStartPosition' int) = (r8v1 'trunStartPosition' int), (r8v3 'trunStartPosition' int) binds: [B:21:0x0068, B:20:0x0068] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:9:0x004a\-\>B:13:0x0068\l|int r10 = r10 + 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x006b|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x002e|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x006b|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0068|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0068|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseTruns((r20v0 'traf' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'trackBundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'decodeTime' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'flags' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_16;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_12 -> Node_20;
Node_13 -> Node_9;
Node_15 -> Node_8;
Node_16 -> Node_7;
Node_17 -> Node_7;
Node_18 -> Node_7;
Node_19 -> Node_14;
Node_20 -> Node_13;
Node_21 -> Node_13;
}

