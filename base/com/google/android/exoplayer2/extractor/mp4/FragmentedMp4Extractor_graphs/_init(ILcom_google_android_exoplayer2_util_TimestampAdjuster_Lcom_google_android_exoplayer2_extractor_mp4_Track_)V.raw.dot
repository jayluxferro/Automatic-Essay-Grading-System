digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.\<init\>(ILcom\/google\/android\/exoplayer2\/util\/TimestampAdjuster;Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/Track;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0007: INVOKE  (r6 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sideloadedTrack' com.google.android.exoplayer2.extractor.mp4.Track)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x005c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r7 I:?[int, boolean, short, byte, char] A[D('flags' int)]) \l0x000e: IPUT  \l  (r0 I:int)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.flags int \l0x0010: IPUT  \l  (r8 I:com.google.android.exoplayer2.util.TimestampAdjuster A[D('timestampAdjuster' com.google.android.exoplayer2.util.TimestampAdjuster)])\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.timestampAdjuster com.google.android.exoplayer2.util.TimestampAdjuster \l0x0012: IPUT  \l  (r9 I:com.google.android.exoplayer2.extractor.mp4.Track A[D('sideloadedTrack' com.google.android.exoplayer2.extractor.mp4.Track)])\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.sideloadedTrack com.google.android.exoplayer2.extractor.mp4.Track \l0x0014: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0016: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x0019: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.atomHeader com.google.android.exoplayer2.util.ParsableByteArray \l0x001b: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x001d: SGET  (r2 I:byte[]) =  com.google.android.exoplayer2.util.NalUnitUtil.NAL_START_CODE byte[] \l0x001f: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:byte[])\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(byte[]):void type: DIRECT \l0x0022: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.nalStartCode com.google.android.exoplayer2.util.ParsableByteArray \l0x0024: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0026: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0027: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x002a: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.nalPrefix com.google.android.exoplayer2.util.ParsableByteArray \l0x002c: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x002e: INVOKE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.\<init\>():void type: DIRECT \l0x0031: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.nalBuffer com.google.android.exoplayer2.util.ParsableByteArray \l0x0033: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0035: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0036: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x0039: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.encryptionSignalByte com.google.android.exoplayer2.util.ParsableByteArray \l0x003b: NEW_ARRAY  (r0 I:byte[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x003d: IPUT  \l  (r0 I:byte[])\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.extendedTypeScratch byte[] \l0x003f: NEW_INSTANCE  (r0 I:java.util.Stack) =  java.util.Stack \l0x0041: INVOKE  (r0 I:java.util.Stack) java.util.Stack.\<init\>():void type: DIRECT \l0x0044: IPUT  \l  (r0 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.containerAtoms java.util.Stack \l0x0046: NEW_INSTANCE  (r0 I:java.util.LinkedList) =  java.util.LinkedList \l0x0048: INVOKE  (r0 I:java.util.LinkedList) java.util.LinkedList.\<init\>():void type: DIRECT \l0x004b: IPUT  \l  (r0 I:java.util.LinkedList\<com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$MetadataSampleInfo\>)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.pendingMetadataSampleInfos java.util.LinkedList \l0x004d: NEW_INSTANCE  (r0 I:android.util.SparseArray) =  android.util.SparseArray \l0x004f: INVOKE  (r0 I:android.util.SparseArray) android.util.SparseArray.\<init\>():void type: DIRECT \l0x0052: IPUT  \l  (r0 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle\>)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.trackBundles android.util.SparseArray \l0x0054: IPUT  \l  (r4 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.durationUs long \l0x0056: IPUT  \l  (r4 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.segmentIndexEarliestPresentationTimeUs long \l0x0058: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.enterReadingAtomHeaderState():void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x005b|0x005b: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x005c|0x005c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.\<init\>((r6 'this' I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.exoplayer2.util.TimestampAdjuster A[D('timestampAdjuster' com.google.android.exoplayer2.util.TimestampAdjuster), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.google.android.exoplayer2.extractor.mp4.Track A[D('sideloadedTrack' com.google.android.exoplayer2.extractor.mp4.Track), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x005d: r7 'flags' int\l  ?\-0x005d: r8 'timestampAdjuster' com.google.android.exoplayer2.util.TimestampAdjuster\l  ?\-0x005d: r9 'sideloadedTrack' com.google.android.exoplayer2.extractor.mp4.Track\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

