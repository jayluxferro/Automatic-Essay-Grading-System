digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.getDrmInitDataFromAtoms(Ljava\/util\/List;)Lcom\/google\/android\/exoplayer2\/drm\/DrmInitData;" {
subgraph cluster_Region_285187374 {
label = "R(3:0|(3:2|(3:(1:5)|6|(1:8)(1:10))(0)|9)|(2:(1:12)|(1:18)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData.SchemeData\> r4 = null\lint int r2 = r8.size()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_983612558 {
label = "LOOP:0: (3:2|(3:(1:5)|6|(1:8)(1:10))(0)|9)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r1 r4 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:0:0x0000, B:9:0x002c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'schemeDatas' java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData$SchemeData\>) = (r4v0 'schemeDatas' java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData$SchemeData\>), (r4v2 'schemeDatas' java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData$SchemeData\>) binds: [B:0:0x0000, B:9:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:9:0x002c\l|if (r1 \< r2) goto L_0x0008\l}"];
subgraph cluster_Region_1610436715 {
label = "R(3:2|(3:(1:5)|6|(1:8)(1:10))(0)|9)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom r0 = r8.get(r1)\l}"];
subgraph cluster_IfRegion_29402974 {
label = "IF [B:3:0x0012] THEN: R(3:(1:5)|6|(1:8)(1:10)) ELSE: R(0)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0012|if (r0.type == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_pssh) goto L_0x0014\l}"];
subgraph cluster_Region_1208955828 {
label = "R(3:(1:5)|6|(1:8)(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1866662028 {
label = "IF [B:4:0x0014] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014|if (r4 == null) goto L_0x0016\l}"];
subgraph cluster_Region_1947553886 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0016|java.util.ArrayList r4 = new java.util.ArrayList\<\>()\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x001b|PHI: r4 \l  PHI: (r4v3 'schemeDatas' java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData$SchemeData\>) = (r4v1 'schemeDatas' java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData$SchemeData\>), (r4v4 'schemeDatas' java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData$SchemeData\>) binds: [B:4:0x0014, B:5:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|byte[] byte[] r3 = r0.data.data\ljava.util.UUID java.util.UUID r5 = com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil.parseUuid(r3)\l}"];
subgraph cluster_IfRegion_2012521207 {
label = "IF [B:7:0x0023] THEN: R(1:8) ELSE: R(1:10)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0023|if (r5 == null) goto L_0x0025\l}"];
subgraph cluster_Region_1268314486 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0025|android.util.Log.w(TAG, \"Skipped pssh atom (failed to extract uuid)\")\l}"];
}
subgraph cluster_Region_1301316304 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002f|r4.add(new com.google.android.exoplayer2.drm.DrmInitData.SchemeData(r5, com.google.android.exoplayer2.util.MimeTypes.VIDEO_MP4, r3))\l}"];
}
}
}
subgraph cluster_Region_1269751020 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_9 [shape=record,label="{9\:\ 0x002c|LOOP_END\lPHI: r4 \l  PHI: (r4v2 'schemeDatas' java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData$SchemeData\>) = (r4v1 'schemeDatas' java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData$SchemeData\>), (r4v3 'schemeDatas' java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData$SchemeData\>), (r4v3 'schemeDatas' java.util.ArrayList\<com.google.android.exoplayer2.drm.DrmInitData$SchemeData\>) binds: [B:16:0x002c, B:17:0x002c, B:15:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:9:0x002c\l|r1++\l}"];
}
}
subgraph cluster_Region_1884874358 {
label = "R(2:(1:12)|(1:18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2141410162 {
label = "IF [B:11:0x003a] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003a|if (r4 == null) goto L_0x003c\l}"];
subgraph cluster_Region_1593533490 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003c|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_324642629 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return new com.google.android.exoplayer2.drm.DrmInitData((java.util.List\<com.google.android.exoplayer2.drm.DrmInitData.SchemeData\>) r4)\l}"];
}
}
}
Node_13 [shape=record,color=red,label="{13\:\ 0x003e}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003a|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002c|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002c|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.drm.DrmInitData com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.getDrmInitDataFromAtoms((r8v0 'leafChildren' java.util.List\<com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List, \<, Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/Atom$LeafAtom;, \>;), Lcom\/google\/android\/exoplayer2\/drm\/DrmInitData;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_14[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_16[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_10[style=dashed];
Node_8 -> Node_15;
Node_10 -> Node_17;
Node_9 -> Node_1;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_11;
Node_15 -> Node_9;
Node_16 -> Node_9;
Node_17 -> Node_9;
}

