digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseMoof(Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/Atom$ContainerAtom;Landroid\/util\/SparseArray;I[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r3 I:java.util.List\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('moof' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.containerChildren java.util.List \l0x0002: INVOKE  (r2 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char] A[D('moofContainerChildrenSize' int)])  \-\> B:6:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r3 I:java.util.List\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('moof' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.containerChildren java.util.List \l0x000b: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.util.List), (r1 I:int A[D('i' int)]) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000f: CHECK_CAST  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) = (com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) (r0 I:?[OBJECT, ARRAY]) \l0x0011: IGET  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('child' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.type int \l0x0013: SGET  (r4 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_traf int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('child' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l  (r6 I:android.util.SparseArray A[D('trackBundleArray' android.util.SparseArray\<com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle\>)])\l  (r7 I:int A[D('flags' int)])\l  (r8 I:byte[] A[D('extendedTypeScratch' byte[])])\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseTraf(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom, android.util.SparseArray, int, byte[]):void type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseMoof((r5 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('moof' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:byte[] A[D('extendedTypeScratch' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0011\-0x001d: r0 'child' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\l  0x0007\-0x001d: r1 'i' int\l  0x0006\-0x001d: r2 'moofContainerChildrenSize' int\l  ?\-0x001d: r5 'moof' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\l  0x0000\-0x001d: r6 'trackBundleArray' android.util.SparseArray\<com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle\>\l  ?\-0x001d: r7 'flags' int\l  ?\-0x001d: r8 'extendedTypeScratch' byte[]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/Atom$ContainerAtom;, Landroid\/util\/SparseArray, \<, Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/FragmentedMp4Extractor$TrackBundle;, \>;I[B)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
}

