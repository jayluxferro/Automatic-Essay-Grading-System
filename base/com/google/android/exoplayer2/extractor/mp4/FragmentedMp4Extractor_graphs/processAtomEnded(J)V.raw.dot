digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.processAtomEnded(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r3 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.containerAtoms java.util.Stack \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.Stack) java.util.Stack.isEmpty():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r3 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.containerAtoms java.util.Stack \l0x000a: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Stack) java.util.Stack.peek():java.lang.Object type: VIRTUAL \l0x000e: CHECK_CAST  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) = (com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) (r0 I:?[OBJECT, ARRAY]) \l0x0010: IGET  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.endPosition long \l0x0012: CMP_L  (r0 I:int) = (r0 I:long), (r4 I:long A[D('atomEndPosition' long)]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IGET  (r0 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r3 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.containerAtoms java.util.Stack \l0x0018: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Stack) java.util.Stack.pop():java.lang.Object type: VIRTUAL \l0x001c: CHECK_CAST  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) = (com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) (r0 I:?[OBJECT, ARRAY]) \l0x001e: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.onContainerAtomRead(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.enterReadingAtomHeaderState():void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.processAtomEnded((r3 'this' I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[D('atomEndPosition' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0025: r4 'atomEndPosition' long\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_0;
Node_5 -> Node_6;
}

