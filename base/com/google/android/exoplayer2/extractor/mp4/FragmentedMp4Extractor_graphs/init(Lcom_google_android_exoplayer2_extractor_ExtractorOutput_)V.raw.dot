digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.init(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorOutput;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  \l  (r5 I:com.google.android.exoplayer2.extractor.ExtractorOutput A[D('output' com.google.android.exoplayer2.extractor.ExtractorOutput)])\l  (r4 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.extractorOutput com.google.android.exoplayer2.extractor.ExtractorOutput \l0x0003: IGET  (r1 I:com.google.android.exoplayer2.extractor.mp4.Track) = \l  (r4 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.sideloadedTrack com.google.android.exoplayer2.extractor.mp4.Track \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle) =  com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle \l0x0009: IGET  (r1 I:com.google.android.exoplayer2.extractor.mp4.Track) = \l  (r4 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.sideloadedTrack com.google.android.exoplayer2.extractor.mp4.Track \l0x000b: IGET  (r1 I:int) = (r1 I:com.google.android.exoplayer2.extractor.mp4.Track) com.google.android.exoplayer2.extractor.mp4.Track.type int \l0x000d: INVOKE  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r5 I:com.google.android.exoplayer2.extractor.ExtractorOutput A[D('output' com.google.android.exoplayer2.extractor.ExtractorOutput)])\l  (r3 I:int)\l  (r1 I:int)\l com.google.android.exoplayer2.extractor.ExtractorOutput.track(int, int):com.google.android.exoplayer2.extractor.TrackOutput type: INTERFACE \l0x0011: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle)\l  (r1 I:com.google.android.exoplayer2.extractor.TrackOutput)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.TrackBundle.\<init\>(com.google.android.exoplayer2.extractor.TrackOutput):void type: DIRECT \l0x0014: IGET  (r1 I:com.google.android.exoplayer2.extractor.mp4.Track) = \l  (r4 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.sideloadedTrack com.google.android.exoplayer2.extractor.mp4.Track \l0x0016: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues) =  com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues \l0x0018: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues)\l  (r3 I:int)\l  (r3 I:int)\l  (r3 I:int)\l  (r3 I:int)\l com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues.\<init\>(int, int, int, int):void type: DIRECT \l0x001b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle A[D('bundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle)])\l  (r1 I:com.google.android.exoplayer2.extractor.mp4.Track)\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.TrackBundle.init(com.google.android.exoplayer2.extractor.mp4.Track, com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues):void type: VIRTUAL \l0x001e: IGET  (r1 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle\>) = \l  (r4 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.trackBundles android.util.SparseArray \l0x0020: INVOKE  \l  (r1 I:android.util.SparseArray)\l  (r3 I:int)\l  (r0 I:java.lang.Object A[D('bundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle)])\l android.util.SparseArray.put(int, java.lang.Object):void type: VIRTUAL \l0x0023: INVOKE  \l  (r4 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.maybeInitExtraTracks():void type: DIRECT \l0x0026: IGET  (r1 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r4 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.extractorOutput com.google.android.exoplayer2.extractor.ExtractorOutput \l0x0028: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l com.google.android.exoplayer2.extractor.ExtractorOutput.endTracks():void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|0x002b: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.init((r4 'this' I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.exoplayer2.extractor.ExtractorOutput A[D('output' com.google.android.exoplayer2.extractor.ExtractorOutput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0014\-0x002b: r0 'bundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle\l  ?\-0x002b: r5 'output' com.google.android.exoplayer2.extractor.ExtractorOutput\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

