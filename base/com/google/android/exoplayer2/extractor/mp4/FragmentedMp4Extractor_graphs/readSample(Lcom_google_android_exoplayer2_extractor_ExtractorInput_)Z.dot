digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.readSample(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r32.parserState != 3) goto L_0x00b7\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r32.currentTrackBundle != null) goto L_0x0058\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle r12 = getNextFragmentRun(r32.trackBundles)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if (r12 != null) goto L_0x0036\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|int r4 = (int) (r32.endOfMdatPosition \- r33.getPosition())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|if (r4 \>= 0) goto L_0x002c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024}"];
Node_9 [shape=record,label="{9\:\ 0x002b|throw new com.google.android.exoplayer2.ParserException(\"Offset to end of mdat was negative.\")\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|r33.skipFully(r4)\lenterReadingAtomHeaderState()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|int r4 = (int) (r12.fragment.trunDataPosition[r12.currentTrackRunIndex] \- r33.getPosition())\l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|if (r4 \>= 0) goto L_0x004f\l}"];
Node_13 [shape=record,label="{13\:\ 0x0047|android.util.Log.w(TAG, \"Ignoring negative offset to sample data.\")\lr4 = 0\l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|PHI: r4 \l  PHI: (r4v1 'bytesToSkip' int) = (r4v0 'bytesToSkip' int), (r4v2 'bytesToSkip' int) binds: [B:12:0x0045, B:13:0x0047] A[DONT_GENERATE, DONT_INLINE]\l|r33.skipFully(r4)\lr32.currentTrackBundle = r12\l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|r32.sampleSize = r32.currentTrackBundle.fragment.sampleSizeTable[r32.currentTrackBundle.currentSampleIndex]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0074|if (r32.currentTrackBundle.fragment.definesEncryptionData == false) goto L_0x0173\l}"];
Node_17 [shape=record,label="{17\:\ 0x0076|com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle r9 = r32.currentTrackBundle\lr32.sampleBytesWritten = appendSampleEncryptionData(r9)\lr32.sampleSize = r32.sampleSize + r32.sampleBytesWritten\l}"];
Node_18 [shape=record,label="{18\:\ 0x0091}"];
Node_19 [shape=record,label="{19\:\ 0x009a|if (r32.currentTrackBundle.track.sampleTransformation != 1) goto L_0x00ad\l}"];
Node_20 [shape=record,label="{20\:\ 0x009c|r32.sampleSize = r32.sampleSize + \-8\lr33.skipFully(8)\l}"];
Node_21 [shape=record,label="{21\:\ 0x00ad|r32.parserState = 4\lr32.sampleCurrentNalBytesRemaining = 0\l}"];
Node_22 [shape=record,label="{22\:\ 0x00b7|r20 = r32.currentTrackBundle.fragment\lr29 = r32.currentTrackBundle.track\lcom.google.android.exoplayer2.extractor.TrackOutput r5 = r32.currentTrackBundle.output\lr27 = r32.currentTrackBundle.currentSampleIndex\l}"];
Node_23 [shape=record,label="{23\:\ 0x00d9|if (r29.nalUnitLengthFieldLength == 0) goto L_0x021a\l}"];
Node_24 [shape=record,label="{24\:\ 0x00db|r21 = r32.nalPrefix.data\lr21[0] = 0\lr21[1] = 0\lr21[2] = 0\lint r23 = r29.nalUnitLengthFieldLength + 1\lint r22 = 4 \- r29.nalUnitLengthFieldLength\l}"];
Node_25 [shape=record,label="{25\:\ 0x00fb|LOOP_START\lLOOP:0: B:25:0x00fb\-\>B:74:0x00fb\l}"];
Node_26 [shape=record,label="{26\:\ 0x0103|if (r32.sampleBytesWritten \>= r32.sampleSize) goto L_0x023f\l}"];
Node_27 [shape=record,label="{27\:\ 0x0105}"];
Node_28 [shape=record,label="{28\:\ 0x0109|if (r32.sampleCurrentNalBytesRemaining != 0) goto L_0x017c\l}"];
Node_29 [shape=record,label="{29\:\ 0x010b|r33.readFully(r21, r22, r23)\lr32.nalPrefix.setPosition(0)\lr32.sampleCurrentNalBytesRemaining = r32.nalPrefix.readUnsignedIntToInt() + \-1\lr32.nalStartCode.setPosition(0)\lr5.sampleData(r32.nalStartCode, 4)\lr5.sampleData(r32.nalPrefix, 1)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0148|if (r32.cea608TrackOutputs == null) goto L_0x017a\l}"];
Node_31 [shape=record,label="{31\:\ 0x014a}"];
Node_32 [shape=record,label="{32\:\ 0x0157|if (com.google.android.exoplayer2.util.NalUnitUtil.isNalUnitSei(r29.format.sampleMimeType, r21[4]) == false) goto L_0x017a\l}"];
Node_33 [shape=record,label="{33\:\ 0x0159|r9 = true\l}"];
Node_34 [shape=record,label="{34\:\ 0x015a|PHI: r9 \l  PHI: (r9v74 boolean) = (r9v73 boolean), (r9v82 boolean) binds: [B:36:0x017a, B:33:0x0159] A[DONT_GENERATE, DONT_INLINE]\l|r32.processSeiNalUnitPayload = r9\lr32.sampleBytesWritten = r32.sampleBytesWritten + 5\lr32.sampleSize = r32.sampleSize + r22\l}"];
Node_35 [shape=record,label="{35\:\ 0x0173|r32.sampleBytesWritten = 0\l}"];
Node_36 [shape=record,label="{36\:\ 0x017a|r9 = false\l}"];
Node_37 [shape=record,label="{37\:\ 0x017c}"];
Node_38 [shape=record,label="{38\:\ 0x0180|if (r32.processSeiNalUnitPayload == false) goto L_0x020e\l}"];
Node_39 [shape=record,label="{39\:\ 0x0182|r32.nalBuffer.reset(r32.sampleCurrentNalBytesRemaining)\lbyte[] r9 = r32.nalBuffer.data\lint r13 = r32.sampleCurrentNalBytesRemaining\lr33.readFully(r9, 0, r13)\lr5.sampleData(r32.nalBuffer, r32.sampleCurrentNalBytesRemaining)\lr31 = r32.sampleCurrentNalBytesRemaining\lint r30 = com.google.android.exoplayer2.util.NalUnitUtil.unescapeStream(r32.nalBuffer.data, r32.nalBuffer.limit())\lcom.google.android.exoplayer2.util.ParsableByteArray r10 = r32.nalBuffer\l}"];
Node_40 [shape=record,label="{40\:\ 0x01d0|if (com.google.android.exoplayer2.util.MimeTypes.VIDEO_H265.equals(r29.format.sampleMimeType) == false) goto L_0x020c\l}"];
Node_41 [shape=record,label="{41\:\ 0x01d2|r9 = 1\l}"];
Node_42 [shape=record,label="{42\:\ 0x01d3|PHI: r9 \l  PHI: (r9v61 int) = (r9v60 int), (r9v64 int) binds: [B:44:0x020c, B:41:0x01d2] A[DONT_GENERATE, DONT_INLINE]\l|r10.setPosition(r9)\lr32.nalBuffer.setLimit(r30)\lcom.google.android.exoplayer2.text.cea.CeaUtil.consume(r20.getSamplePresentationTime(r27) * 1000, r32.nalBuffer, r32.cea608TrackOutputs)\l}"];
Node_43 [shape=record,label="{43\:\ 0x01f6|PHI: r31 \l  PHI: (r31v2 'writtenBytes' int) = (r31v1 'writtenBytes' int), (r31v3 'writtenBytes' int) binds: [B:45:0x020e, B:42:0x01d3] A[DONT_GENERATE, DONT_INLINE]\l|r32.sampleBytesWritten = r32.sampleBytesWritten + r31\lr32.sampleCurrentNalBytesRemaining = r32.sampleCurrentNalBytesRemaining \- r31\l}"];
Node_44 [shape=record,label="{44\:\ 0x020c|r9 = 0\l}"];
Node_45 [shape=record,label="{45\:\ 0x020e|int r9 = r32.sampleCurrentNalBytesRemaining\lint r31 = r5.sampleData(r33, r9, false)\l}"];
Node_46 [shape=record,label="{46\:\ 0x021a|LOOP_START\lLOOP:1: B:46:0x021a\-\>B:48:0x0224\l}"];
Node_47 [shape=record,label="{47\:\ 0x0222|if (r32.sampleBytesWritten \>= r32.sampleSize) goto L_0x023f\l}"];
Node_48 [shape=record,label="{48\:\ 0x0224|LOOP_END\lLOOP:1: B:46:0x021a\-\>B:48:0x0224\l|r0 = r33\lint r31 = r5.sampleData(r0, r32.sampleSize \- r32.sampleBytesWritten, false)\lr32.sampleBytesWritten = r32.sampleBytesWritten + r31\l}"];
Node_49 [shape=record,label="{49\:\ 0x023f|long r6 = r20.getSamplePresentationTime(r27) * 1000\l}"];
Node_50 [shape=record,label="{50\:\ 0x024f|if (r20.definesEncryptionData == false) goto L_0x02cd\l}"];
Node_51 [shape=record,label="{51\:\ 0x0251|r9 = 1073741824\l}"];
Node_52 [shape=record,label="{52\:\ 0x0253|PHI: r9 \l  PHI: (r9v8 int) = (r9v7 int), (r9v32 int) binds: [B:67:0x02cd, B:51:0x0251] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_53 [shape=record,label="{53\:\ 0x0259|if (r20.sampleIsSyncFrameTable[r27] == false) goto L_0x02cf\l}"];
Node_54 [shape=record,label="{54\:\ 0x025b|r10 = 1\l}"];
Node_55 [shape=record,label="{55\:\ 0x025c|PHI: r10 \l  PHI: (r10v4 int) = (r10v3 int), (r10v16 int) binds: [B:68:0x02cf, B:54:0x025b] A[DONT_GENERATE, DONT_INLINE]\l|r8 = r9 \| r10\lr26 = r20.header.sampleDescriptionIndex\lr11 = null\l}"];
Node_56 [shape=record,label="{56\:\ 0x026b|if (r20.definesEncryptionData == false) goto L_0x0279\l}"];
Node_57 [shape=record,label="{57\:\ 0x026d}"];
Node_58 [shape=record,label="{58\:\ 0x0271|if (r20.trackEncryptionBox == null) goto L_0x02d1\l}"];
Node_59 [shape=record,label="{59\:\ 0x0273|byte[] r11 = r20.trackEncryptionBox.keyId\l}"];
Node_60 [shape=record,label="{60\:\ 0x0279|PHI: r11 \l  PHI: (r11v1 'encryptionKey' byte[]) = (r11v0 'encryptionKey' byte[]), (r11v2 'encryptionKey' byte[]), (r11v3 'encryptionKey' byte[]) binds: [B:56:0x026b, B:69:0x02d1, B:59:0x0273] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_61 [shape=record,label="{61\:\ 0x027d|if (r32.timestampAdjuster == null) goto L_0x0287\l}"];
Node_62 [shape=record,label="{62\:\ 0x027f|long r6 = r32.timestampAdjuster.adjustSampleTimestamp(r6)\l}"];
Node_63 [shape=record,label="{63\:\ 0x0287|PHI: r6 \l  PHI: (r6v1 'sampleTimeUs' long) = (r6v0 'sampleTimeUs' long), (r6v2 'sampleTimeUs' long) binds: [B:61:0x027d, B:62:0x027f] A[DONT_GENERATE, DONT_INLINE]\l|r5.sampleMetadata(r6, r8, r32.sampleSize, 0, r11)\l}"];
Node_64 [shape=record,label="{64\:\ 0x028f|LOOP_START\lLOOP:2: B:64:0x028f\-\>B:66:0x0299\l}"];
Node_65 [shape=record,label="{65\:\ 0x0297|if (r32.pendingMetadataSampleInfos.isEmpty() != false) goto L_0x02da\l}"];
Node_66 [shape=record,label="{66\:\ 0x0299|LOOP_END\lLOOP:2: B:64:0x028f\-\>B:66:0x0299\l|com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$MetadataSampleInfo r28 = r32.pendingMetadataSampleInfos.removeFirst()\lr32.pendingMetadataSampleBytes = r32.pendingMetadataSampleBytes \- r28.size\lr32.eventMessageTrackOutput.sampleMetadata(r28.presentationTimeDeltaUs + r6, 1, r28.size, r32.pendingMetadataSampleBytes, (byte[]) null)\l}"];
Node_67 [shape=record,label="{67\:\ 0x02cd|r9 = 0\l}"];
Node_68 [shape=record,label="{68\:\ 0x02cf|r10 = 0\l}"];
Node_69 [shape=record,label="{69\:\ 0x02d1|byte[] r11 = r29.sampleDescriptionEncryptionBoxes[r26].keyId\l}"];
Node_70 [shape=record,label="{70\:\ 0x02da|com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle r9 = r32.currentTrackBundle\lr9.currentSampleIndex = r9.currentSampleIndex + 1\lcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle r9 = r32.currentTrackBundle\lr9.currentSampleInTrackRun = r9.currentSampleInTrackRun + 1\l}"];
Node_71 [shape=record,label="{71\:\ 0x0300|if (r32.currentTrackBundle.currentSampleInTrackRun != r20.trunLength[r32.currentTrackBundle.currentTrackRunIndex]) goto L_0x0318\l}"];
Node_72 [shape=record,label="{72\:\ 0x0302|com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle r9 = r32.currentTrackBundle\lr9.currentTrackRunIndex = r9.currentTrackRunIndex + 1\lr32.currentTrackBundle.currentSampleInTrackRun = 0\lr32.currentTrackBundle = null\l}"];
Node_73 [shape=record,label="{73\:\ 0x0318|r32.parserState = 3\l}"];
Node_74 [shape=record,label="{74\:\ 0x00fb|LOOP_END\lSYNTHETIC\lLOOP:0: B:25:0x00fb\-\>B:74:0x00fb\l}"];
Node_75 [shape=record,label="{75\:\ 0x023f|SYNTHETIC\l}"];
Node_76 [shape=record,label="{76\:\ 0x00fb|SYNTHETIC\l}"];
Node_77 [shape=record,label="{77\:\ 0x00fb|SYNTHETIC\l}"];
Node_78 [shape=record,label="{78\:\ 0x023f|SYNTHETIC\l}"];
Node_79 [shape=record,label="{79\:\ 0x02da|SYNTHETIC\l}"];
Node_80 [shape=record,label="{80\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_81 [shape=record,label="{81\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.readSample((r32v0 'this' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r33v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_22;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_80;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_35;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_46;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_75;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_37;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_36;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_76;
Node_35 -> Node_18;
Node_36 -> Node_34;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_45;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_77;
Node_44 -> Node_42;
Node_45 -> Node_43;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_78;
Node_48 -> Node_46;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_67;
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_68;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_60;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_69;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_79;
Node_66 -> Node_64;
Node_67 -> Node_52;
Node_68 -> Node_55;
Node_69 -> Node_60;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_73;
Node_72 -> Node_73;
Node_73 -> Node_81;
Node_74 -> Node_25;
Node_75 -> Node_49;
Node_76 -> Node_74;
Node_77 -> Node_74;
Node_78 -> Node_49;
Node_79 -> Node_70;
}

