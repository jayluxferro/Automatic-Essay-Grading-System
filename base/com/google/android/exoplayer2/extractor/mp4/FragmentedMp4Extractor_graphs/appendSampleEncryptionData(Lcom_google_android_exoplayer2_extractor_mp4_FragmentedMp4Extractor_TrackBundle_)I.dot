digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.appendSampleEncryptionData(Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/FragmentedMp4Extractor$TrackBundle;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.exoplayer2.extractor.mp4.TrackFragment r7 = r13.fragment\lcom.google.android.exoplayer2.util.ParsableByteArray r3 = r7.sampleEncryptionData\lint r2 = r7.header.sampleDescriptionIndex\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r7.trackEncryptionBox == null) goto L_0x0038\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox r0 = r7.trackEncryptionBox\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|PHI: r0 \l  PHI: (r0v1 'encryptionBox' com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox) = (r0v0 'encryptionBox' com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox), (r0v2 'encryptionBox' com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox) binds: [B:9:0x0038, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|int r8 = r0.initializationVectorSize\lboolean r6 = r7.sampleHasSubsampleEncryptionTable[r13.currentSampleIndex]\lbyte[] r11 = r12.encryptionSignalByte.data\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|if (r6 == false) goto L_0x003f\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|r9 = 128\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|PHI: r9 \l  PHI: (r9v7 int) = (r9v6 int), (r9v17 int) binds: [B:10:0x003f, B:5:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|r11[0] = (byte) (r9 \| r8)\lr12.encryptionSignalByte.setPosition(0)\lcom.google.android.exoplayer2.extractor.TrackOutput r1 = r13.output\lr1.sampleData(r12.encryptionSignalByte, 1)\lr1.sampleData(r3, r8)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|if (r6 != false) goto L_0x0041\l}"];
Node_8 [shape=record,label="{8\:\ 0x0035}"];
Node_9 [shape=record,label="{9\:\ 0x0038|r0 = r13.track.sampleDescriptionEncryptionBoxes[r2]\l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|r9 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|int r4 = r3.readUnsignedShort()\lr3.skipBytes(\-2)\lint r5 = (r4 * 6) + 2\lr1.sampleData(r3, r5)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r8 + 1\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return (r8 + 1) + r5\l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.appendSampleEncryptionData((r12v0 'this' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r13v0 'trackBundle' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_12;
Node_9 -> Node_3;
Node_10 -> Node_6;
Node_11 -> Node_13;
}

