digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseSaiz(Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/TrackEncryptionBox;Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/TrackFragment;)V" {
subgraph cluster_Region_1405529083 {
label = "R(4:0|(1:2)|3|(2:(1:6)|(3:7|(2:9|(2:11|14))(1:18)|19)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r9 = r13.initializationVectorSize\lr14.setPosition(8)\l}"];
subgraph cluster_IfRegion_208854097 {
label = "IF [B:1:0x0012] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0012|if ((com.google.android.exoplayer2.extractor.mp4.Atom.parseFullAtomFlags(r14.readInt()) & 1) == 1) goto L_0x0014\l}"];
subgraph cluster_Region_1058354148 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0014|r14.skipBytes(8)\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0019|int int r0 = r14.readUnsignedByte()\lint int r4 = r14.readUnsignedIntToInt()\l}"];
subgraph cluster_Region_2089788885 {
label = "R(2:(1:6)|(3:7|(2:9|(2:11|14))(1:18)|19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1332158566 {
label = "IF [B:4:0x0023] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0023|if (r4 != r15.sampleCount) goto L_0x0025\l}"];
subgraph cluster_Region_1981793260 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0049|throw new com.google.android.exoplayer2.ParserException(\"Length mismatch: \" + r4 + \", \" + r15.sampleCount)\l}"];
}
}
subgraph cluster_Region_1987896883 {
label = "R(3:7|(2:9|(2:11|14))(1:18)|19)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x004a|int r8 = 0\l}"];
subgraph cluster_IfRegion_689496013 {
label = "IF [B:8:0x004b] THEN: R(2:9|(2:11|14)) ELSE: R(1:18)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x004b|if (r0 == 0) goto L_0x004d\l}"];
subgraph cluster_Region_7244938 {
label = "R(2:9|(2:11|14))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x004d|boolean[] boolean[] r5 = r15.sampleHasSubsampleEncryptionTable\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_435528823 {
label = "LOOP:0: (2:11|14)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0050|LOOP_START\lPHI: r3 r8 \l  PHI: (r3v1 'i' int) = (r3v0 'i' int), (r3v2 'i' int) binds: [B:9:0x004d, B:14:0x005a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v3 'totalSize' int) = (r8v0 'totalSize' int), (r8v4 'totalSize' int) binds: [B:9:0x004d, B:14:0x005a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x0050\-\>B:14:0x005a\l|if (r3 \< r4) goto L_0x0052\l}"];
subgraph cluster_Region_1197458381 {
label = "R(2:11|14)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0052|int int r6 = r14.readUnsignedByte()\lr8 += r6\l}"];
Node_14 [shape=record,label="{14\:\ 0x005a|LOOP_END\lPHI: r10 \l  PHI: (r10v6 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x0050\-\>B:14:0x005a\l|r5[r3] = r6 \> r9\lr3++\l}"];
}
}
}
subgraph cluster_Region_1231342644 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0064|PHI: r7 \l  PHI: (r7v1 'subsampleEncryption' boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r8 = 0 + (r0 * r4)\ljava.util.Arrays.fill(r15.sampleHasSubsampleEncryptionTable, 0, r4, r0 \> r9)\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x006d|PHI: r8 \l  PHI: (r8v1 'totalSize' int) = (r8v2 'totalSize' int), (r8v3 'totalSize' int) binds: [B:18:0x0064, B:22:0x006d] A[DONT_GENERATE, DONT_INLINE]\l|r15.initEncryptionData(r8)\l}"];
}
}
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0025}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0057}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0059}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x005f}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0061}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0063}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0070}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0071}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x006d|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x005a|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x005a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseSaiz((r13v0 'encryptionBox' com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'saiz' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'out' com.google.android.exoplayer2.extractor.mp4.TrackFragment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_16[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_22[style=dashed];
Node_11 -> Node_12;
Node_14 -> Node_10;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_5 -> Node_6;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_13 -> Node_23;
Node_15 -> Node_24;
Node_16 -> Node_17;
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_21 -> Node_18;
Node_22 -> Node_19;
Node_23 -> Node_14;
Node_24 -> Node_14;
}

