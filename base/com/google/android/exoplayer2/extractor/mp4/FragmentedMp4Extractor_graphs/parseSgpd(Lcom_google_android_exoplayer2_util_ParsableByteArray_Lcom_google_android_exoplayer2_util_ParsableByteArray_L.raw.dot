digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseSgpd(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/TrackFragment;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r11 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0002: CONST  (r10 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0003: CONST  (r12 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0004: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0006: INVOKE  \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sbgp' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r11 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0009: INVOKE  (r3 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sbgp' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x000d: INVOKE  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sbgp' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0011: SGET  (r9 I:int) =  com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.SAMPLE_GROUP_TYPE_seig int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: INVOKE  (r8 I:int) = (r3 I:int A[D('sbgpFullAtom' int)]) com.google.android.exoplayer2.extractor.mp4.Atom.parseFullAtomVersion(int):int type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001f \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: INVOKE  \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sbgp' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: INVOKE  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sbgp' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0027: CONST_STR  (r7 I:java.lang.String) =  \"Entry count in sbgp != 1 (unsupported).\" \l0x0029: INVOKE  \l  (r6 I:com.google.android.exoplayer2.ParserException)\l  (r7 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: INVOKE  \l  (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r11 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0030: INVOKE  (r4 I:int) = \l  (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0034: INVOKE  (r8 I:int) = \l  (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0038: SGET  (r9 I:int) =  com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.SAMPLE_GROUP_TYPE_seig int \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0015 \l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: INVOKE  (r5 I:int) = (r4 I:int A[D('sgpdFullAtom' int)]) com.google.android.exoplayer2.extractor.mp4.Atom.parseFullAtomVersion(int):int type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|0x0040: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sgpdVersion' int)]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0054 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|0x0042: INVOKE  (r8 I:long) = \l  (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x0046: CONST  (r10 I:?[long, double]) = (0 ?[long, double]) \l0x0048: CMP_L  (r8 I:int) = (r8 I:long), (r10 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0059 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|0x004c: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x004e: CONST_STR  (r7 I:java.lang.String) =  \"Variable length decription in sgpd found (unsupported)\" \l0x0050: INVOKE  \l  (r6 I:com.google.android.exoplayer2.ParserException)\l  (r7 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|0x0053: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|0x0054: IF  (r5 I:?[int, byte, short, char] A[D('sgpdVersion' int)]) \< (r12 I:?[int, byte, short, char])  \-\> B:20:0x0059 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0056|0x0056: INVOKE  \l  (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r10 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|0x0059: INVOKE  (r8 I:long) = \l  (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x005d: CONST  (r10 I:?[long, double]) = (1 ?[long, double]) \l0x005f: CMP_L  (r8 I:int) = (r8 I:long), (r10 I:long) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0061|0x0061: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x006b \l}"];
Node_22 [shape=record,label="{22\:\ 0x0063|0x0063: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0065: CONST_STR  (r7 I:java.lang.String) =  \"Entry count in sgpd != 1 (unsupported).\" \l0x0067: INVOKE  \l  (r6 I:com.google.android.exoplayer2.ParserException)\l  (r7 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x006a|0x006a: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x006b|0x006b: INVOKE  \l  (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r12 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x006e: INVOKE  (r8 I:int) = \l  (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0072|0x0072: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x008d \l}"];
Node_26 [shape=record,label="{26\:\ 0x0074|0x0074: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x0075|0x0075: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isProtected' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0015 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0077|0x0077: INVOKE  (r0 I:int) = \l  (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x007b: CONST  (r8 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x007d: NEW_ARRAY  (r2 I:byte[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x007f: ARRAY_LENGTH  (r8 I:int) = (r2 I:?[] A[D('keyId' byte[])]) \l0x0080: INVOKE  \l  (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r2 I:byte[] A[D('keyId' byte[])])\l  (r7 I:int)\l  (r8 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l0x0083: IPUT  \l  (r6 I:boolean)\l  (r15 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[D('out' com.google.android.exoplayer2.extractor.mp4.TrackFragment)])\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.definesEncryptionData boolean \l0x0085: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox) =  com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox \l0x0087: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox)\l  (r1 I:boolean A[D('isProtected' boolean)])\l  (r0 I:int A[D('initVectorSize' int)])\l  (r2 I:byte[] A[D('keyId' byte[])])\l com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox.\<init\>(boolean, int, byte[]):void type: DIRECT \l0x008a: IPUT  \l  (r6 I:com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox)\l  (r15 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[D('out' com.google.android.exoplayer2.extractor.mp4.TrackFragment)])\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.trackEncryptionBox com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox \l}"];
Node_29 [shape=record,label="{29\:\ 0x008d|0x008d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isProtected' boolean)]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseSgpd((r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sbgp' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('sgpd' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[D('out' com.google.android.exoplayer2.extractor.mp4.TrackFragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x007b\-0x008d: r0 'initVectorSize' int\l  0x0075\-0x008d: r1 'isProtected' boolean\l  0x007f\-0x008d: r2 'keyId' byte[]\l  0x000d\-0x008e: r3 'sbgpFullAtom' int\l  0x0034\-0x008e: r4 'sgpdFullAtom' int\l  0x0040\-0x008e: r5 'sgpdVersion' int\l  ?\-0x008e: r13 'sbgp' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x008e: r14 'sgpd' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x008e: r15 'out' com.google.android.exoplayer2.extractor.mp4.TrackFragment\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_2;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_27 -> Node_2;
Node_27 -> Node_28[style=dashed];
Node_28 -> Node_2;
Node_29 -> Node_27;
}

