digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.read(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;Lcom\/google\/android\/exoplayer2\/extractor\/PositionHolder;)I" {
subgraph cluster_Region_821849914 {
label = "R(1:(1:1))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1995116532 {
label = "LOOP:0: (1:1)";
node [shape=record,color=blue];
subgraph cluster_Region_916831081 {
label = "R(1:1)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_508601217 {
label = "Switch: 3, default: R(1:(1:1)(1:4))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|switch(r1.parserState) \{\l    case 0: goto L_0x000d;\l    case 1: goto L_0x0015;\l    case 2: goto L_0x0019;\l    default: goto L_0x0005;\l\}\l}"];
subgraph cluster_Region_1300667086 {
label = "R(1:(1:1)(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1664919589 {
label = "IF [B:6:0x0011] THEN: R(1:1) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0011|if (readAtomHeader(r2) != false) goto L_0x0000\l}"];
subgraph cluster_Region_2027497944 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1661915625 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_438790060 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
}
subgraph cluster_Region_484219213 {
label = "R(2:8|1)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0015|readAtomPayload(r2)\l}"];
Node_InsnContainer_763032807 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_955185464 {
label = "R(2:9|1)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0019|readEncryptionData(r2)\l}"];
Node_InsnContainer_433451918 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1639646984 {
label = "R(1:(1:1)(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_454822420 {
label = "IF [B:3:0x0009] THEN: R(1:1) ELSE: R(1:4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|if (readSample(r2) != true) goto L_0x0000\l}"];
subgraph cluster_Region_1425278838 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_1653327845 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1529942011 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 0\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:10:0x0000\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000d}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:0:0x0000\-\>B:10:0x0000\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0013|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000b|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0000|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0000|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0000|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0000|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.read((r1v0 'this' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r2v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 'seekPosition' com.google.android.exoplayer2.extractor.PositionHolder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_1 -> Node_8;
Node_1 -> Node_9;
Node_6 -> Node_11[style=dashed];
Node_6 -> Node_14;
Node_8 -> Node_15;
Node_9 -> Node_16;
Node_3 -> Node_12[style=dashed];
Node_3 -> Node_13;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_10 -> Node_0;
Node_11 -> Node_7;
Node_12 -> Node_4;
Node_13 -> Node_10;
Node_14 -> Node_10;
Node_15 -> Node_10;
Node_16 -> Node_10;
}

