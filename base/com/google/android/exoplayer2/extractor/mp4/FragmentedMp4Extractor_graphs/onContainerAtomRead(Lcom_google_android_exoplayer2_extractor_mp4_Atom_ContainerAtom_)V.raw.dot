digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.onContainerAtomRead(Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/Atom$ContainerAtom;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r3 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('container' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.type int \l0x0002: SGET  (r1 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_moov int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l  (r3 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('container' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.onMoovContainerAtomRead(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r0 I:int) = \l  (r3 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('container' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.type int \l0x000c: SGET  (r1 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_moof int \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l  (r3 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('container' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.onMoofContainerAtomRead(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IGET  (r0 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.containerAtoms java.util.Stack \l0x0016: INVOKE  (r0 I:boolean) = (r0 I:java.util.Stack) java.util.Stack.isEmpty():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IGET  (r0 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.containerAtoms java.util.Stack \l0x001e: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Stack) java.util.Stack.peek():java.lang.Object type: VIRTUAL \l0x0022: CHECK_CAST  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) = (com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) (r0 I:?[OBJECT, ARRAY]) \l0x0024: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)\l  (r3 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('container' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.add(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.onContainerAtomRead((r2 'this' I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('container' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0027: r3 'container' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_3;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_3;
}

