digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseSgpd(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/TrackFragment;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r13.setPosition(8)\lint r3 = r13.readInt()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|if (r13.readInt() == SAMPLE_GROUP_TYPE_seig) goto L_0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x0016}"];
Node_3 [shape=record,label="{3\:\ 0x001a|if (com.google.android.exoplayer2.extractor.mp4.Atom.parseFullAtomVersion(r3) != 1) goto L_0x001f\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|r13.skipBytes(4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f}"];
Node_6 [shape=record,label="{6\:\ 0x0023|if (r13.readInt() == 1) goto L_0x002d\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025}"];
Node_8 [shape=record,label="{8\:\ 0x002c|throw new com.google.android.exoplayer2.ParserException(\"Entry count in sbgp != 1 (unsupported).\")\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|r14.setPosition(8)\lint r4 = r14.readInt()\l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|if (r14.readInt() != SAMPLE_GROUP_TYPE_seig) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|int r5 = com.google.android.exoplayer2.extractor.mp4.Atom.parseFullAtomVersion(r4)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|if (r5 != 1) goto L_0x0054\l}"];
Node_13 [shape=record,label="{13\:\ 0x0042}"];
Node_14 [shape=record,label="{14\:\ 0x004a|if ((r14.readUnsignedInt() \> 0 ? 1 : (r14.readUnsignedInt() == 0 ? 0 : \-1)) != 0) goto L_0x0059\l}"];
Node_15 [shape=record,label="{15\:\ 0x004c}"];
Node_16 [shape=record,label="{16\:\ 0x0053|throw new com.google.android.exoplayer2.ParserException(\"Variable length decription in sgpd found (unsupported)\")\l}"];
Node_17 [shape=record,label="{17\:\ 0x0054|if (r5 \< 2) goto L_0x0059\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|r14.skipBytes(4)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0059}"];
Node_20 [shape=record,label="{20\:\ 0x0061|if ((r14.readUnsignedInt() \> 1 ? 1 : (r14.readUnsignedInt() == 1 ? 0 : \-1)) == 0) goto L_0x006b\l}"];
Node_21 [shape=record,label="{21\:\ 0x0063}"];
Node_22 [shape=record,label="{22\:\ 0x006a|throw new com.google.android.exoplayer2.ParserException(\"Entry count in sgpd != 1 (unsupported).\")\l}"];
Node_23 [shape=record,label="{23\:\ 0x006b|r14.skipBytes(2)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0072|if (r14.readUnsignedByte() != 1) goto L_0x008d\l}"];
Node_25 [shape=record,label="{25\:\ 0x0074|r1 = true\l}"];
Node_26 [shape=record,label="{26\:\ 0x0075|PHI: r1 \l  PHI: (r1v1 'isProtected' boolean) = (r1v0 'isProtected' boolean), (r1v2 'isProtected' boolean) binds: [B:28:0x008d, B:25:0x0074] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_?\l}"];
Node_27 [shape=record,label="{27\:\ 0x0077|int r0 = r14.readUnsignedByte()\lbyte[] r2 = new byte[16]\lr14.readBytes(r2, 0, r2.length)\lr15.definesEncryptionData = true\lr15.trackEncryptionBox = new com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox(r1, r0, r2)\l}"];
Node_28 [shape=record,label="{28\:\ 0x008d|r1 = false\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseSgpd((r13v0 'sbgp' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'sgpd' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'out' com.google.android.exoplayer2.extractor.mp4.TrackFragment A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_29[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_30;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_32;
Node_28 -> Node_26;
}

