digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseUuid(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/TrackFragment;[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0002: CONST  (r0 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0004: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('uuid' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r0 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0007: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('uuid' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r4 I:byte[] A[D('extendedTypeScratch' byte[])])\l  (r0 I:int)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l0x000b: SGET  (r0 I:byte[]) =  com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.PIFF_SAMPLE_ENCRYPTION_BOX_EXTENDED_TYPE byte[] \l0x000d: INVOKE  (r0 I:boolean) = \l  (r4 I:byte[] A[D('extendedTypeScratch' byte[])])\l  (r0 I:byte[])\l java.util.Arrays.equals(byte[], byte[]):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('uuid' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r1 I:int)\l  (r3 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[D('out' com.google.android.exoplayer2.extractor.mp4.TrackFragment)])\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseSenc(com.google.android.exoplayer2.util.ParsableByteArray, int, com.google.android.exoplayer2.extractor.mp4.TrackFragment):void type: STATIC \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.parseUuid((r2 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('uuid' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[D('out' com.google.android.exoplayer2.extractor.mp4.TrackFragment), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:byte[] A[D('extendedTypeScratch' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0017: r2 'uuid' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0017: r3 'out' com.google.android.exoplayer2.extractor.mp4.TrackFragment\l  ?\-0x0017: r4 'extendedTypeScratch' byte[]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_2;
}

