digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.\<init\>(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_ARRAY  (r0 I:com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox[]) = (r2 I:int A[D('numberOfEntries' int), IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox[] \l0x0005: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox[])\l  (r1 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.trackEncryptionBoxes com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox[] \l0x0007: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: IPUT  \l  (r0 I:int)\l  (r1 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.requiredSampleTransformation int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.\<init\>((r1 'this' I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[D('numberOfEntries' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000a: r2 'numberOfEntries' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

