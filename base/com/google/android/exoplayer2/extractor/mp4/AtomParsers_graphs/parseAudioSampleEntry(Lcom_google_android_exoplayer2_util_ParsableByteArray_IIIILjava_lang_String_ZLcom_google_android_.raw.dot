digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.AtomParsers.parseAudioSampleEntry(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;IIIILjava\/lang\/String;ZLcom\/google\/android\/exoplayer2\/drm\/DrmInitData;Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/AtomParsers$StsdData;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r6 I:int) = (r28 I:int A[D('position' int)]) + (8 int) \l0x0002: ARITH  (r6 I:int) = (r6 I:int) + (8 int) \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0006: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0009: CONST  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r32 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isQuickTime' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x00d3 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: INVOKE  (r25 I:int A[D('quickTimeSoundDescriptionVersion' int)]) = \l  (r26 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x0011: CONST  (r6 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0012: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0014: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IF  (r25 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('quickTimeSoundDescriptionVersion' int)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('quickTimeSoundDescriptionVersion' int)])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00dc \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: INVOKE  (r11 I:int) = \l  (r26 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x0022: CONST  (r6 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0023: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0025: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0028: INVOKE  (r12 I:int) = \l  (r26 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedFixedPoint1616():int type: VIRTUAL \l0x002c: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002d: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('quickTimeSoundDescriptionVersion' int)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0038 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: CONST  (r6 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0033: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0035: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: INVOKE  (r21 I:int) = \l  (r26 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x003c: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_enca int \l0x003e: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0057 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0044: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r28 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)])\l \l0x0046: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r29 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('size' int)])\l \l0x0048: MOVE  (r3 I:?[OBJECT, ARRAY]) = \l  (r34 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)])\l \l0x004a: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r35 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('entryIndex' int)])\l \l0x004c: INVOKE  (r27 I:int A[D('atomType' int)]) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l  (r4 I:int)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseSampleEntryEncryptionData(com.google.android.exoplayer2.util.ParsableByteArray, int, int, com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData, int):int type: STATIC \l0x0050: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0052: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childPosition' int)])\l \l0x0054: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0057|0x0057: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0058: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_ac_3 int \l0x005a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x005c|0x005c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x00fe \l}"];
Node_14 [shape=record,label="{14\:\ 0x005e|0x005e: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"audio\/ac3\" \l}"];
Node_15 [shape=record,label="{15\:\ 0x0060|0x0060: CONST  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0062|0x0062: ARITH  (r6 I:int) = (r21 I:int A[D('childPosition' int)]) \- (r28 I:int A[D('position' int)]) \l0x0064: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r29 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('size' int)])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0066|0x0066: IF  (r6 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:84:0x01f1 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|0x0068: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x006a: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childPosition' int)])\l \l0x006c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x006f: INVOKE  (r19 I:int) = \l  (r26 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0073|0x0073: IF  (r19 I:?[int, byte, short, char] A[D('childAtomSize' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:70:0x0164 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0075|0x0075: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0076|0x0076: CONST_STR  (r8 I:java.lang.String) =  \"childAtomSize should be positive\" \l0x0078: INVOKE  (r6 I:boolean), (r8 I:java.lang.Object) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean, java.lang.Object):void type: STATIC \l0x007b: INVOKE  (r20 I:int) = \l  (r26 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x007f: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_esds int \l0x0081: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0083|0x0083: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x008d \l}"];
Node_23 [shape=record,label="{23\:\ 0x0085|0x0085: IF  (r32 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isQuickTime' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0173 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0087|0x0087: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_wave int \l0x0089: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x008b|0x008b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:72:0x0173 \l}"];
Node_26 [shape=record,label="{26\:\ 0x008d|0x008d: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_esds int \l0x008f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x0091|0x0091: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:71:0x0167 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0093|0x0093: MOVE  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childPosition' int)])\l \l}"];
Node_29 [shape=record,label="{29\:\ 0x0095|0x0095: CONST  (r6 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0096: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('esdsAtomPosition' int)])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x0098|0x0098: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x00d0 \l}"];
Node_31 [shape=record,label="{31\:\ 0x009a|0x009a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x009c: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('esdsAtomPosition' int)])\l \l0x009e: INVOKE  (r24 I:android.util.Pair) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseEsdsFromParent(com.google.android.exoplayer2.util.ParsableByteArray, int):android.util.Pair type: STATIC \l0x00a2: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('mimeTypeAndInitializationData' android.util.Pair\<java.lang.String, byte[]\>)])\l \l0x00a4: IGET  (r7 I:java.lang.Object A[D('mimeType' java.lang.String)]) = (r0 I:android.util.Pair) android.util.Pair.first java.lang.Object \l0x00a6: CHECK_CAST  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) = (java.lang.String) (r7 I:?[OBJECT, ARRAY] A[D('mimeType' java.lang.String)]) \l0x00a8: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('mimeTypeAndInitializationData' android.util.Pair\<java.lang.String, byte[]\>)])\l \l0x00aa: IGET  (r0 I:java.lang.Object) = (r0 I:android.util.Pair) android.util.Pair.second java.lang.Object \l0x00ac: MOVE  (r23 I:?[OBJECT, ARRAY] A[D('initializationData' byte[])]) = (r0 I:?[OBJECT, ARRAY]) \l0x00ae: CHECK_CAST  (r23 I:byte[] A[D('initializationData' byte[])]) = (byte[]) (r23 I:?[OBJECT, ARRAY] A[D('initializationData' byte[])]) \l0x00b0: CONST_STR  (r6 I:java.lang.String) =  \"audio\/mp4a\-latm\" \l0x00b2: INVOKE  (r6 I:boolean) = \l  (r6 I:java.lang.String)\l  (r7 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x00b6|0x00b6: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x00d0 \l}"];
Node_33 [shape=record,label="{33\:\ 0x00b8|0x00b8: INVOKE  (r18 I:android.util.Pair) = (r23 I:byte[] A[D('initializationData' byte[])]) com.google.android.exoplayer2.util.CodecSpecificDataUtil.parseAacAudioSpecificConfig(byte[]):android.util.Pair type: STATIC \l0x00bc: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('audioSpecificConfig' android.util.Pair\<java.lang.Integer, java.lang.Integer\>)])\l \l0x00be: IGET  (r6 I:java.lang.Object) = (r0 I:android.util.Pair) android.util.Pair.first java.lang.Object \l0x00c0: CHECK_CAST  (r6 I:java.lang.Integer) = (java.lang.Integer) (r6 I:?[OBJECT, ARRAY]) \l0x00c2: INVOKE  (r12 I:int A[D('sampleRate' int)]) = (r6 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x00c6: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('audioSpecificConfig' android.util.Pair\<java.lang.Integer, java.lang.Integer\>)])\l \l0x00c8: IGET  (r6 I:java.lang.Object) = (r0 I:android.util.Pair) android.util.Pair.second java.lang.Object \l0x00ca: CHECK_CAST  (r6 I:java.lang.Integer) = (java.lang.Integer) (r6 I:?[OBJECT, ARRAY]) \l0x00cc: INVOKE  (r11 I:int A[D('channelCount' int)]) = (r6 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x00d0|0x00d0: ARITH  (r21 I:int A[D('childPosition' int)]) = (r21 I:int A[D('childPosition' int)]) + (r19 I:int A[D('childAtomSize' int)]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00d3|0x00d3: CONST  (r6 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x00d5: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x00d7: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x00dc|0x00dc: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x00dd: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('quickTimeSoundDescriptionVersion' int)])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x00df|0x00df: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:94:0x021a \l}"];
Node_38 [shape=record,label="{38\:\ 0x00e1|0x00e1: CONST  (r6 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x00e3: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x00e5: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x00e8: INVOKE  (r8 I:double) = \l  (r26 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readDouble():double type: VIRTUAL \l0x00ec: INVOKE  (r8 I:long) = (r8 I:double) java.lang.Math.round(double):long type: STATIC \l0x00f0: CAST  (r12 I:int) = (int) (r8 I:long) \l0x00f1: INVOKE  (r11 I:int) = \l  (r26 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedIntToInt():int type: VIRTUAL \l0x00f5: CONST  (r6 I:?[int, float, short, byte, char]) = (20 ?[int, float, short, byte, char]) \l0x00f7: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x00f9: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x00fe|0x00fe: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_ec_3 int \l0x0100: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_40 [shape=record,label="{40\:\ 0x0102|0x0102: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0108 \l}"];
Node_41 [shape=record,label="{41\:\ 0x0104|0x0104: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"audio\/eac3\" \l}"];
Node_42 [shape=record,label="{42\:\ 0x0108|0x0108: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_dtsc int \l0x010a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_43 [shape=record,label="{43\:\ 0x010c|0x010c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0112 \l}"];
Node_44 [shape=record,label="{44\:\ 0x010e|0x010e: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"audio\/vnd.dts\" \l}"];
Node_45 [shape=record,label="{45\:\ 0x0112|0x0112: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_dtsh int \l0x0114: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_46 [shape=record,label="{46\:\ 0x0116|0x0116: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x011e \l}"];
Node_47 [shape=record,label="{47\:\ 0x0118|0x0118: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_dtsl int \l0x011a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_48 [shape=record,label="{48\:\ 0x011c|0x011c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x0122 \l}"];
Node_49 [shape=record,label="{49\:\ 0x011e|0x011e: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"audio\/vnd.dts.hd\" \l}"];
Node_50 [shape=record,label="{50\:\ 0x0122|0x0122: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_dtse int \l0x0124: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_51 [shape=record,label="{51\:\ 0x0126|0x0126: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x012c \l}"];
Node_52 [shape=record,label="{52\:\ 0x0128|0x0128: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"audio\/vnd.dts.hd;profile=lbr\" \l}"];
Node_53 [shape=record,label="{53\:\ 0x012c|0x012c: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_samr int \l0x012e: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_54 [shape=record,label="{54\:\ 0x0130|0x0130: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x0136 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0132|0x0132: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"audio\/3gpp\" \l}"];
Node_56 [shape=record,label="{56\:\ 0x0136|0x0136: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_sawb int \l0x0138: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_57 [shape=record,label="{57\:\ 0x013a|0x013a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0140 \l}"];
Node_58 [shape=record,label="{58\:\ 0x013c|0x013c: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"audio\/amr\-wb\" \l}"];
Node_59 [shape=record,label="{59\:\ 0x0140|0x0140: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_lpcm int \l0x0142: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_60 [shape=record,label="{60\:\ 0x0144|0x0144: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x014c \l}"];
Node_61 [shape=record,label="{61\:\ 0x0146|0x0146: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_sowt int \l0x0148: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_62 [shape=record,label="{62\:\ 0x014a|0x014a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0150 \l}"];
Node_63 [shape=record,label="{63\:\ 0x014c|0x014c: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"audio\/raw\" \l}"];
Node_64 [shape=record,label="{64\:\ 0x0150|0x0150: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE__mp3 int \l0x0152: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_65 [shape=record,label="{65\:\ 0x0154|0x0154: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x015a \l}"];
Node_66 [shape=record,label="{66\:\ 0x0156|0x0156: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"audio\/mpeg\" \l}"];
Node_67 [shape=record,label="{67\:\ 0x015a|0x015a: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_alac int \l0x015c: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_68 [shape=record,label="{68\:\ 0x015e|0x015e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0060 \l}"];
Node_69 [shape=record,label="{69\:\ 0x0160|0x0160: CONST_STR  (r7 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"audio\/alac\" \l}"];
Node_70 [shape=record,label="{70\:\ 0x0164|0x0164: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_71 [shape=record,label="{71\:\ 0x0167|0x0167: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0169: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childPosition' int)])\l \l0x016b: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomSize' int)])\l \l0x016d: INVOKE  (r22 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.findEsdsPosition(com.google.android.exoplayer2.util.ParsableByteArray, int, int):int type: STATIC \l}"];
Node_72 [shape=record,label="{72\:\ 0x0173|0x0173: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_dac3 int \l0x0175: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_73 [shape=record,label="{73\:\ 0x0177|0x0177: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:75:0x0194 \l}"];
Node_74 [shape=record,label="{74\:\ 0x0179|0x0179: ARITH  (r6 I:int) = (r21 I:int A[D('childPosition' int)]) + (8 int) \l0x017b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x017d: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0180: INVOKE  (r6 I:java.lang.String) = (r30 I:int A[D('trackId' int)]) java.lang.Integer.toString(int):java.lang.String type: STATIC \l0x0184: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0186: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x0188: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r33 I:?[OBJECT, ARRAY] A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData)])\l \l0x018a: INVOKE  (r6 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:com.google.android.exoplayer2.drm.DrmInitData)\l com.google.android.exoplayer2.audio.Ac3Util.parseAc3AnnexFFormat(com.google.android.exoplayer2.util.ParsableByteArray, java.lang.String, java.lang.String, com.google.android.exoplayer2.drm.DrmInitData):com.google.android.exoplayer2.Format type: STATIC \l0x018e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r34 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)])\l \l0x0190: IPUT  \l  (r6 I:com.google.android.exoplayer2.Format)\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.format com.google.android.exoplayer2.Format \l}"];
Node_75 [shape=record,label="{75\:\ 0x0194|0x0194: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_dec3 int \l0x0196: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_76 [shape=record,label="{76\:\ 0x0198|0x0198: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:78:0x01b5 \l}"];
Node_77 [shape=record,label="{77\:\ 0x019a|0x019a: ARITH  (r6 I:int) = (r21 I:int A[D('childPosition' int)]) + (8 int) \l0x019c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x019e: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x01a1: INVOKE  (r6 I:java.lang.String) = (r30 I:int A[D('trackId' int)]) java.lang.Integer.toString(int):java.lang.String type: STATIC \l0x01a5: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x01a7: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x01a9: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r33 I:?[OBJECT, ARRAY] A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData)])\l \l0x01ab: INVOKE  (r6 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:com.google.android.exoplayer2.drm.DrmInitData)\l com.google.android.exoplayer2.audio.Ac3Util.parseEAc3AnnexFFormat(com.google.android.exoplayer2.util.ParsableByteArray, java.lang.String, java.lang.String, com.google.android.exoplayer2.drm.DrmInitData):com.google.android.exoplayer2.Format type: STATIC \l0x01af: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r34 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)])\l \l0x01b1: IPUT  \l  (r6 I:com.google.android.exoplayer2.Format)\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.format com.google.android.exoplayer2.Format \l}"];
Node_78 [shape=record,label="{78\:\ 0x01b5|0x01b5: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_ddts int \l0x01b7: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_79 [shape=record,label="{79\:\ 0x01b9|0x01b9: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x01d2 \l}"];
Node_80 [shape=record,label="{80\:\ 0x01bb|0x01bb: INVOKE  (r6 I:java.lang.String) = (r30 I:int A[D('trackId' int)]) java.lang.Integer.toString(int):java.lang.String type: STATIC \l0x01bf: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01c0: CONST  (r9 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x01c1: CONST  (r10 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x01c2: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01c3: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01c4: MOVE  (r14 I:?[OBJECT, ARRAY]) = \l  (r33 I:?[OBJECT, ARRAY] A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData)])\l \l0x01c6: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x01c8: INVOKE  (r6 I:com.google.android.exoplayer2.Format) = \l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r8 I:java.lang.String)\l  (r9 I:int)\l  (r10 I:int)\l  (r11 I:int A[D('channelCount' int)])\l  (r12 I:int A[D('sampleRate' int)])\l  (r13 I:java.util.List)\l  (r14 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r15 I:int)\l  (r16 I:java.lang.String)\l com.google.android.exoplayer2.Format.createAudioSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, int, int, java.util.List, com.google.android.exoplayer2.drm.DrmInitData, int, java.lang.String):com.google.android.exoplayer2.Format type: STATIC \l0x01cc: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r34 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)])\l \l0x01ce: IPUT  \l  (r6 I:com.google.android.exoplayer2.Format)\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.format com.google.android.exoplayer2.Format \l}"];
Node_81 [shape=record,label="{81\:\ 0x01d2|0x01d2: SGET  (r6 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_alac int \l0x01d4: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_82 [shape=record,label="{82\:\ 0x01d6|0x01d6: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x00d0 \l}"];
Node_83 [shape=record,label="{83\:\ 0x01d8|0x01d8: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomSize' int)])\l \l0x01da: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x01dc: MOVE  (r23 I:?[OBJECT, ARRAY] A[D('initializationData' byte[])]) = (r0 I:?[OBJECT, ARRAY]) \l0x01de: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x01e0: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childPosition' int)])\l \l0x01e2: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x01e5: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x01e6: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x01e8: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY] A[D('initializationData' byte[])]) \l0x01ea: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomSize' int)])\l \l0x01ec: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:byte[])\l  (r6 I:int)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l}"];
Node_84 [shape=record,label="{84\:\ 0x01f1|0x01f1: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r34 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)])\l \l0x01f3: IGET  (r6 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.format com.google.android.exoplayer2.Format \l}"];
Node_85 [shape=record,label="{85\:\ 0x01f5|0x01f5: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:94:0x021a \l}"];
Node_86 [shape=record,label="{86\:\ 0x01f7|0x01f7: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeType' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:94:0x021a \l}"];
Node_87 [shape=record,label="{87\:\ 0x01f9|0x01f9: CONST_STR  (r6 I:java.lang.String) =  \"audio\/raw\" \l0x01fb: INVOKE  (r6 I:boolean) = \l  (r6 I:java.lang.String)\l  (r7 I:java.lang.Object A[D('mimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_88 [shape=record,label="{88\:\ 0x01ff|0x01ff: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:95:0x021b \l}"];
Node_89 [shape=record,label="{89\:\ 0x0201|0x0201: CONST  (r13 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_90 [shape=record,label="{90\:\ 0x0202|0x0202: INVOKE  (r6 I:java.lang.String) = (r30 I:int A[D('trackId' int)]) java.lang.Integer.toString(int):java.lang.String type: STATIC \l0x0206: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0207: CONST  (r9 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0208: CONST  (r10 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_91 [shape=record,label="{91\:\ 0x0209|0x0209: IF  (r23 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('initializationData' byte[])]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:96:0x021d \l}"];
Node_92 [shape=record,label="{92\:\ 0x020b|0x020b: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_93 [shape=record,label="{93\:\ 0x020c|0x020c: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x020e: MOVE  (r15 I:?[OBJECT, ARRAY]) = \l  (r33 I:?[OBJECT, ARRAY] A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData)])\l \l0x0210: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x0212: INVOKE  (r6 I:com.google.android.exoplayer2.Format) = \l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r8 I:java.lang.String)\l  (r9 I:int)\l  (r10 I:int)\l  (r11 I:int A[D('channelCount' int)])\l  (r12 I:int A[D('sampleRate' int)])\l  (r13 I:int A[D('pcmEncoding' int)])\l  (r14 I:java.util.List)\l  (r15 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r16 I:int)\l  (r17 I:java.lang.String)\l com.google.android.exoplayer2.Format.createAudioSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, int, int, int, java.util.List, com.google.android.exoplayer2.drm.DrmInitData, int, java.lang.String):com.google.android.exoplayer2.Format type: STATIC \l0x0216: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r34 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)])\l \l0x0218: IPUT  \l  (r6 I:com.google.android.exoplayer2.Format)\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.format com.google.android.exoplayer2.Format \l}"];
Node_94 [shape=record,label="{94\:\ 0x021a|0x021a: RETURN   \l}"];
Node_95 [shape=record,label="{95\:\ 0x021b|0x021b: CONST  (r13 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_96 [shape=record,label="{96\:\ 0x021d|0x021d: INVOKE  (r14 I:java.util.List) = (r23 I:java.lang.Object A[D('initializationData' byte[])]) java.util.Collections.singletonList(java.lang.Object):java.util.List type: STATIC \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseAudioSampleEntry((r26 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:int A[D('atomType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30 I:int A[D('trackId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:java.lang.String A[D('language' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:boolean A[D('isQuickTime' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:com.google.android.exoplayer2.drm.DrmInitData A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35 I:int A[D('entryIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0058\-0x00a6: r7 'mimeType' java.lang.String\l  0x0062\-0x00ae: r23 'initializationData' byte[]\l  0x00bc\-0x00d0: r18 'audioSpecificConfig' android.util.Pair\<java.lang.Integer, java.lang.Integer\>\l  0x0095\-0x00d0: r22 'esdsAtomPosition' int\l  0x00a2\-0x00d0: r24 'mimeTypeAndInitializationData' android.util.Pair\<java.lang.String, byte[]\>\l  0x00a8\-0x00d3: r7 'mimeType' java.lang.String\l  0x0022\-0x00d3: r11 'channelCount' int\l  0x002c\-0x00d3: r12 'sampleRate' int\l  0x0073\-0x00d3: r19 'childAtomSize' int\l  0x007f\-0x00d3: r20 'childAtomType' int\l  0x003c\-0x00d3: r21 'childPosition' int\l  0x00b0\-0x00d3: r23 'initializationData' byte[]\l  0x0164\-0x01f1: r19 'childAtomSize' int\l  0x0167\-0x01f1: r20 'childAtomType' int\l  0x00fe\-0x021a: r7 'mimeType' java.lang.String\l  0x00f5\-0x021a: r11 'channelCount' int\l  0x00f1\-0x021a: r12 'sampleRate' int\l  0x0202\-0x021a: r13 'pcmEncoding' int\l  0x00fe\-0x021a: r21 'childPosition' int\l  0x0164\-0x021a: r23 'initializationData' byte[]\l  0x021b\-0x0221: r7 'mimeType' java.lang.String\l  0x021b\-0x0221: r11 'channelCount' int\l  0x021b\-0x0221: r12 'sampleRate' int\l  0x021d\-0x0221: r13 'pcmEncoding' int\l  0x021b\-0x0221: r21 'childPosition' int\l  0x021b\-0x0221: r23 'initializationData' byte[]\l  0x000b\-0x0221: r25 'quickTimeSoundDescriptionVersion' int\l  ?\-0x0221: r26 'parent' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0221: r27 'atomType' int\l  ?\-0x0221: r28 'position' int\l  ?\-0x0221: r29 'size' int\l  ?\-0x0221: r30 'trackId' int\l  ?\-0x0221: r31 'language' java.lang.String\l  ?\-0x0221: r32 'isQuickTime' boolean\l  ?\-0x0221: r33 'drmInitData' com.google.android.exoplayer2.drm.DrmInitData\l  ?\-0x0221: r34 'out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData\l  ?\-0x0221: r35 'entryIndex' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_35;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_36;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_39;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_84;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_70;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_72;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_72;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_71;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_16;
Node_35 -> Node_3;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_94;
Node_38 -> Node_9;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_15;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_15;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_49;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_15;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_15;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_15;
Node_56 -> Node_57;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_15;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_63;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_15;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_15;
Node_67 -> Node_68;
Node_68 -> Node_15;
Node_68 -> Node_69[style=dashed];
Node_69 -> Node_15;
Node_70 -> Node_21;
Node_71 -> Node_29;
Node_72 -> Node_73;
Node_73 -> Node_74[style=dashed];
Node_73 -> Node_75;
Node_74 -> Node_34;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_78;
Node_77 -> Node_34;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_81;
Node_80 -> Node_34;
Node_81 -> Node_82;
Node_82 -> Node_34;
Node_82 -> Node_83[style=dashed];
Node_83 -> Node_34;
Node_84 -> Node_85;
Node_85 -> Node_86[style=dashed];
Node_85 -> Node_94;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_94;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_95;
Node_89 -> Node_90;
Node_90 -> Node_91;
Node_91 -> Node_92[style=dashed];
Node_91 -> Node_96;
Node_92 -> Node_93;
Node_93 -> Node_94;
Node_95 -> Node_90;
Node_96 -> Node_93;
}

