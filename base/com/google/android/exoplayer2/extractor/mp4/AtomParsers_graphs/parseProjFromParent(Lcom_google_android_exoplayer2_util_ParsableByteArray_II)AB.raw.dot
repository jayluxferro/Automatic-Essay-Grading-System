digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.AtomParsers.parseProjFromParent(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;II)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r2 I:int) = (r6 I:int A[D('position' int)]) + (8 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARITH  (r3 I:int) = (r2 I:int A[D('childPosition' int)]) \- (r6 I:int A[D('position' int)]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r3 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char] A[D('size' int)])  \-\> B:8:0x0020 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  \l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r2 I:int A[D('childPosition' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0009: INVOKE  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x000d: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0011: SGET  (r3 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_proj int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childAtomType' int)]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IGET  (r3 I:byte[]) = \l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0017: ARITH  (r4 I:int) = (r2 I:int A[D('childPosition' int)]) + (r0 I:int A[D('childAtomSize' int)]) \l0x0019: INVOKE  (r3 I:byte[]) = \l  (r3 I:byte[])\l  (r2 I:int A[D('childPosition' int)])\l  (r4 I:int)\l java.util.Arrays.copyOfRange(byte[], int, int):byte[] type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: RETURN  (r3 I:byte[]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: ARITH  (r2 I:int A[D('childPosition' int)]) = (r2 I:int A[D('childPosition' int)]) + (r0 I:int A[D('childAtomSize' int)]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private static byte[] com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseProjFromParent((r5 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000d\-0x001d: r0 'childAtomSize' int\l  0x0011\-0x001d: r1 'childAtomType' int\l  0x001e\-0x0020: r0 'childAtomSize' int\l  0x001e\-0x0020: r1 'childAtomType' int\l  0x0002\-0x0021: r2 'childPosition' int\l  ?\-0x0021: r5 'parent' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0021: r6 'position' int\l  ?\-0x0021: r7 'size' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_1;
Node_8 -> Node_6;
}

