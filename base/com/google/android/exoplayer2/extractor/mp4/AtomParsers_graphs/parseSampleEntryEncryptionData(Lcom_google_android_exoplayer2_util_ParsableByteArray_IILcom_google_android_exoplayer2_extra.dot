digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.AtomParsers.parseSampleEntryEncryptionData(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;IILcom\/google\/android\/exoplayer2\/extractor\/mp4\/AtomParsers$StsdData;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r2 = r7.getPosition()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lPHI: r2 \l  PHI: (r2v1 'childPosition' int) = (r2v0 'childPosition' int), (r2v2 'childPosition' int) binds: [B:0:0x0000, B:12:0x0039] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0005\-\>B:12:0x0039\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|if ((r2 \- r8) \>= r9) goto L_0x0036\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|r7.setPosition(r2)\lint r0 = r7.readInt()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r0 \<= 0) goto L_0x0037\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|r4 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|PHI: r4 \l  PHI: (r4v2 boolean) = (r4v1 boolean), (r4v8 boolean) binds: [B:11:0x0037, B:5:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r4, \"childAtomSize should be positive\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|if (r7.readInt() != com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_sinf) goto L_0x0039\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|android.util.Pair r3 = parseSinfFromParent(r7, r2, r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|if (r3 == null) goto L_0x0039\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|r10.trackEncryptionBoxes[r11] = (com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox) r3.second\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|r4 = false\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:12:0x0039\l|int r2 = r2 + r0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return ((java.lang.Integer) r3.first).intValue()\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseSampleEntryEncryptionData((r7v0 'parent' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'position' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'size' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'entryIndex' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_13[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_17;
Node_11 -> Node_6;
Node_12 -> Node_1;
Node_13 -> Node_10;
Node_14 -> Node_18;
Node_15 -> Node_12;
Node_16 -> Node_12;
}

