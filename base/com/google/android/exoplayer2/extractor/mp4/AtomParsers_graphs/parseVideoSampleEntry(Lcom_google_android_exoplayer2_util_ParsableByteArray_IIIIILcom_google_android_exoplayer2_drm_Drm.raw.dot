digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.AtomParsers.parseVideoSampleEntry(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;IIIIILcom\/google\/android\/exoplayer2\/drm\/DrmInitData;Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/AtomParsers$StsdData;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r5 I:int) = (r32 I:int A[D('position' int)]) + (8 int) \l0x0002: ARITH  (r5 I:int) = (r5 I:int) + (8 int) \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0006: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0009: CONST  (r5 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x000b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x000d: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0010: INVOKE  (r10 I:int) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x0014: INVOKE  (r11 I:int) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x0018: CONST  (r28 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001a: CONST  (r15 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x001c: CONST  (r5 I:?[int, float, short, byte, char]) = (50 ?[int, float, short, byte, char]) \l0x001e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0020: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0023: INVOKE  (r23 I:int) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0027: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_encv int \l0x0029: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r31 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x002b|0x002b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0042 \l}"];
Node_2 [shape=record,label="{2\:\ 0x002d|0x002d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x002f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r32 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('position' int)])\l \l0x0031: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r33 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('size' int)])\l \l0x0033: MOVE  (r3 I:?[OBJECT, ARRAY]) = \l  (r37 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)])\l \l0x0035: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r38 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('entryIndex' int)])\l \l0x0037: INVOKE  (r31 I:int A[D('atomType' int)]) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l  (r4 I:int)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseSampleEntryEncryptionData(com.google.android.exoplayer2.util.ParsableByteArray, int, int, com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData, int):int type: STATIC \l0x003b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x003d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childPosition' int)])\l \l0x003f: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0042|0x0042: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0043: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0044: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0046: CONST  (r17 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0048|0x0048: ARITH  (r5 I:int) = (r23 I:int A[D('childPosition' int)]) \- (r32 I:int A[D('position' int)]) \l0x004a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r33 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('size' int)])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x004c|0x004c: IF  (r5 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:10:0x0069 \l}"];
Node_6 [shape=record,label="{6\:\ 0x004e|0x004e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0050: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childPosition' int)])\l \l0x0052: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0055: INVOKE  (r24 I:int) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0059: INVOKE  (r21 I:int) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x005d|0x005d: IF  (r21 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('childAtomSize' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x006c \l}"];
Node_8 [shape=record,label="{8\:\ 0x005f|0x005f: INVOKE  (r5 I:int) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0063: ARITH  (r5 I:int) = (r5 I:int) \- (r32 I:int A[D('position' int)]) \l0x0065: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r33 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('size' int)])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0067|0x0067: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x006c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0069|0x0069: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeType' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x0171 \l}"];
Node_11 [shape=record,label="{11\:\ 0x006b|0x006b: RETURN   \l}"];
Node_12 [shape=record,label="{12\:\ 0x006c|0x006c: IF  (r21 I:?[int, byte, short, char] A[D('childAtomSize' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:22:0x00a6 \l}"];
Node_13 [shape=record,label="{13\:\ 0x006e|0x006e: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x006f|0x006f: CONST_STR  (r7 I:java.lang.String) =  \"childAtomSize should be positive\" \l0x0071: INVOKE  (r5 I:boolean), (r7 I:java.lang.Object) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean, java.lang.Object):void type: STATIC \l0x0074: INVOKE  (r22 I:int) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0078: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_avcC int \l0x007a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x007c|0x007c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00aa \l}"];
Node_16 [shape=record,label="{16\:\ 0x007e|0x007e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeType' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00a8 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0080|0x0080: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0081|0x0081: INVOKE  (r5 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x0084: CONST_STR  (r6 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"video\/avc\" \l0x0086: ARITH  (r5 I:int) = (r24 I:int A[D('childStartPosition' int)]) + (8 int) \l0x0088: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x008a: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x008d: INVOKE  (r20 I:com.google.android.exoplayer2.video.AvcConfig) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.video.AvcConfig.parse(com.google.android.exoplayer2.util.ParsableByteArray):com.google.android.exoplayer2.video.AvcConfig type: STATIC \l0x0091: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('avcConfig' com.google.android.exoplayer2.video.AvcConfig)])\l \l0x0093: IGET  (r13 I:java.util.List\<byte[]\> A[D('initializationData' java.util.List\<byte[]\>)]) = (r0 I:com.google.android.exoplayer2.video.AvcConfig) com.google.android.exoplayer2.video.AvcConfig.initializationData java.util.List \l0x0095: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('avcConfig' com.google.android.exoplayer2.video.AvcConfig)])\l \l0x0097: IGET  (r5 I:int) = (r0 I:com.google.android.exoplayer2.video.AvcConfig) com.google.android.exoplayer2.video.AvcConfig.nalUnitLengthFieldLength int \l0x0099: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r37 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)])\l \l0x009b: IPUT  \l  (r5 I:int)\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.nalUnitLengthFieldLength int \l}"];
Node_19 [shape=record,label="{19\:\ 0x009d|0x009d: IF  (r28 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pixelWidthHeightRatioFromPasp' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x00a3 \l}"];
Node_20 [shape=record,label="{20\:\ 0x009f|0x009f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('avcConfig' com.google.android.exoplayer2.video.AvcConfig)])\l \l0x00a1: IGET  (r15 I:float A[D('pixelWidthHeightRatio' float)]) = (r0 I:com.google.android.exoplayer2.video.AvcConfig) com.google.android.exoplayer2.video.AvcConfig.pixelWidthAspectRatio float \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a3|0x00a3: ARITH  (r23 I:int A[D('childPosition' int)]) = (r23 I:int A[D('childPosition' int)]) + (r21 I:int A[D('childAtomSize' int)]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a6|0x00a6: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a8|0x00a8: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x00aa|0x00aa: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_hvcC int \l0x00ac: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x00ae|0x00ae: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00d2 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b0|0x00b0: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeType' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00d0 \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b2|0x00b2: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b3|0x00b3: INVOKE  (r5 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x00b6: CONST_STR  (r6 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"video\/hevc\" \l0x00b8: ARITH  (r5 I:int) = (r24 I:int A[D('childStartPosition' int)]) + (8 int) \l0x00ba: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x00bc: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x00bf: INVOKE  (r25 I:com.google.android.exoplayer2.video.HevcConfig) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.video.HevcConfig.parse(com.google.android.exoplayer2.util.ParsableByteArray):com.google.android.exoplayer2.video.HevcConfig type: STATIC \l0x00c3: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r25 I:?[OBJECT, ARRAY] A[D('hevcConfig' com.google.android.exoplayer2.video.HevcConfig)])\l \l0x00c5: IGET  (r13 I:java.util.List\<byte[]\> A[D('initializationData' java.util.List\<byte[]\>)]) = (r0 I:com.google.android.exoplayer2.video.HevcConfig) com.google.android.exoplayer2.video.HevcConfig.initializationData java.util.List \l0x00c7: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r25 I:?[OBJECT, ARRAY] A[D('hevcConfig' com.google.android.exoplayer2.video.HevcConfig)])\l \l0x00c9: IGET  (r5 I:int) = (r0 I:com.google.android.exoplayer2.video.HevcConfig) com.google.android.exoplayer2.video.HevcConfig.nalUnitLengthFieldLength int \l0x00cb: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r37 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)])\l \l0x00cd: IPUT  \l  (r5 I:int)\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.nalUnitLengthFieldLength int \l}"];
Node_29 [shape=record,label="{29\:\ 0x00d0|0x00d0: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x00d2|0x00d2: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_vpcC int \l0x00d4: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x00d6|0x00d6: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x00ec \l}"];
Node_32 [shape=record,label="{32\:\ 0x00d8|0x00d8: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeType' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x00e7 \l}"];
Node_33 [shape=record,label="{33\:\ 0x00da|0x00da: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x00db|0x00db: INVOKE  (r5 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x00de: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_vp08 int \l0x00e0: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r31 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('atomType' int)])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x00e2|0x00e2: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x00e9 \l}"];
Node_36 [shape=record,label="{36\:\ 0x00e4|0x00e4: CONST_STR  (r6 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"video\/x\-vnd.on2.vp8\" \l}"];
Node_38 [shape=record,label="{38\:\ 0x00e7|0x00e7: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x00e9|0x00e9: CONST_STR  (r6 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"video\/x\-vnd.on2.vp9\" \l}"];
Node_40 [shape=record,label="{40\:\ 0x00ec|0x00ec: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_d263 int \l0x00ee: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_41 [shape=record,label="{41\:\ 0x00f0|0x00f0: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x00fd \l}"];
Node_42 [shape=record,label="{42\:\ 0x00f2|0x00f2: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeType' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x00fb \l}"];
Node_43 [shape=record,label="{43\:\ 0x00f4|0x00f4: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x00f5|0x00f5: INVOKE  (r5 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x00f8: CONST_STR  (r6 I:java.lang.String A[D('mimeType' java.lang.String)]) =  \"video\/3gpp\" \l}"];
Node_45 [shape=record,label="{45\:\ 0x00fb|0x00fb: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_46 [shape=record,label="{46\:\ 0x00fd|0x00fd: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_esds int \l0x00ff: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_47 [shape=record,label="{47\:\ 0x0101|0x0101: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x0122 \l}"];
Node_48 [shape=record,label="{48\:\ 0x0103|0x0103: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeType' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0120 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0105|0x0105: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0106|0x0106: INVOKE  (r5 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x0109: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x010b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childStartPosition' int)])\l \l0x010d: INVOKE  (r27 I:android.util.Pair) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseEsdsFromParent(com.google.android.exoplayer2.util.ParsableByteArray, int):android.util.Pair type: STATIC \l0x0111: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('mimeTypeAndInitializationData' android.util.Pair\<java.lang.String, byte[]\>)])\l \l0x0113: IGET  (r6 I:java.lang.Object A[D('mimeType' java.lang.String)]) = (r0 I:android.util.Pair) android.util.Pair.first java.lang.Object \l0x0115: CHECK_CAST  (r6 I:java.lang.String A[D('mimeType' java.lang.String)]) = (java.lang.String) (r6 I:?[OBJECT, ARRAY] A[D('mimeType' java.lang.String)]) \l0x0117: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('mimeTypeAndInitializationData' android.util.Pair\<java.lang.String, byte[]\>)])\l \l0x0119: IGET  (r5 I:java.lang.Object) = (r0 I:android.util.Pair) android.util.Pair.second java.lang.Object \l0x011b: INVOKE  (r13 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)]) = (r5 I:java.lang.Object) java.util.Collections.singletonList(java.lang.Object):java.util.List type: STATIC \l}"];
Node_51 [shape=record,label="{51\:\ 0x0120|0x0120: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_52 [shape=record,label="{52\:\ 0x0122|0x0122: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_pasp int \l0x0124: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_53 [shape=record,label="{53\:\ 0x0126|0x0126: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0134 \l}"];
Node_54 [shape=record,label="{54\:\ 0x0128|0x0128: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x012a: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childStartPosition' int)])\l \l0x012c: INVOKE  (r15 I:float A[D('pixelWidthHeightRatio' float)]) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.parsePaspFromParent(com.google.android.exoplayer2.util.ParsableByteArray, int):float type: STATIC \l0x0130: CONST  (r28 I:?[boolean, int, float, short, byte, char] A[D('pixelWidthHeightRatioFromPasp' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x0134|0x0134: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_sv3d int \l0x0136: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_56 [shape=record,label="{56\:\ 0x0138|0x0138: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0146 \l}"];
Node_57 [shape=record,label="{57\:\ 0x013a|0x013a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x013c: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childStartPosition' int)])\l \l0x013e: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomSize' int)])\l \l0x0140: INVOKE  (r16 I:byte[] A[D('projectionData' byte[])]) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseProjFromParent(com.google.android.exoplayer2.util.ParsableByteArray, int, int):byte[] type: STATIC \l}"];
Node_58 [shape=record,label="{58\:\ 0x0146|0x0146: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_st3d int \l0x0148: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('childAtomType' int)])\l \l}"];
Node_59 [shape=record,label="{59\:\ 0x014a|0x014a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x00a3 \l}"];
Node_60 [shape=record,label="{60\:\ 0x014c|0x014c: INVOKE  (r29 I:int) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0150: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0151: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0153: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_61 [shape=record,label="{61\:\ 0x0156|0x0156: IF  (r29 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('version' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x00a3 \l}"];
Node_62 [shape=record,label="{62\:\ 0x0158|0x0158: INVOKE  (r26 I:int) = \l  (r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l}"];
Node_63 [shape=record,label="{63\:\ 0x015c|0x015c: SWITCH  \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('layout' int)])\l k:[0, 1, 2, 3] t:[0x0161, 0x0165, 0x0169, 0x016d] \l}"];
Node_65 [shape=record,label="{65\:\ 0x0161|0x0161: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('stereoMode' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_66 [shape=record,label="{66\:\ 0x0165|0x0165: CONST  (r17 I:?[boolean, int, float, short, byte, char] A[D('stereoMode' int)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_67 [shape=record,label="{67\:\ 0x0169|0x0169: CONST  (r17 I:?[int, float, short, byte, char] A[D('stereoMode' int)]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_68 [shape=record,label="{68\:\ 0x016d|0x016d: CONST  (r17 I:?[int, float, short, byte, char] A[D('stereoMode' int)]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_69 [shape=record,label="{69\:\ 0x0171|0x0171: INVOKE  (r5 I:java.lang.String) = (r34 I:int A[D('trackId' int)]) java.lang.Integer.toString(int):java.lang.String type: STATIC \l0x0175: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0176: CONST  (r8 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0177: CONST  (r9 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0178: CONST  (r12 I:?[int, float, short, byte, char]) = \l  (\-1082130432(0xffffffffbf800000, float:\-1.0) ?[int, float, short, byte, char])\l \l0x017a: CONST  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x017c: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r35 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rotationDegrees' int)])\l \l0x017e: MOVE  (r19 I:?[OBJECT, ARRAY]) = \l  (r36 I:?[OBJECT, ARRAY] A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData)])\l \l0x0180: INVOKE  (r5 I:com.google.android.exoplayer2.Format) = \l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:int A[D('width' int)])\l  (r11 I:int A[D('height' int)])\l  (r12 I:float)\l  (r13 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r14 I:int)\l  (r15 I:float A[D('pixelWidthHeightRatio' float)])\l  (r16 I:byte[] A[D('projectionData' byte[])])\l  (r17 I:int A[D('stereoMode' int)])\l  (r18 I:com.google.android.exoplayer2.video.ColorInfo)\l  (r19 I:com.google.android.exoplayer2.drm.DrmInitData)\l com.google.android.exoplayer2.Format.createVideoSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, int, int, float, java.util.List, int, float, byte[], int, com.google.android.exoplayer2.video.ColorInfo, com.google.android.exoplayer2.drm.DrmInitData):com.google.android.exoplayer2.Format type: STATIC \l0x0184: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r37 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)])\l \l0x0186: IPUT  \l  (r5 I:com.google.android.exoplayer2.Format)\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData.format com.google.android.exoplayer2.Format \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseVideoSampleEntry((r30 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('parent' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:int A[D('atomType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:int A[D('position' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:int A[D('size' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:int A[D('trackId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35 I:int A[D('rotationDegrees' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36 I:com.google.android.exoplayer2.drm.DrmInitData A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r37 I:com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData A[D('out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r38 I:int A[D('entryIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x005d\-0x0069: r21 'childAtomSize' int\l  0x0059\-0x0069: r24 'childStartPosition' int\l  0x0091\-0x00a3: r20 'avcConfig' com.google.android.exoplayer2.video.AvcConfig\l  0x0078\-0x00a6: r22 'childAtomType' int\l  0x00c3\-0x00d0: r25 'hevcConfig' com.google.android.exoplayer2.video.HevcConfig\l  0x0044\-0x0115: r6 'mimeType' java.lang.String\l  0x0111\-0x0120: r27 'mimeTypeAndInitializationData' android.util.Pair\<java.lang.String, byte[]\>\l  0x006c\-0x0171: r21 'childAtomSize' int\l  0x00a8\-0x0171: r22 'childAtomType' int\l  0x006c\-0x0171: r24 'childStartPosition' int\l  0x015c\-0x0171: r26 'layout' int\l  0x0150\-0x0171: r29 'version' int\l  0x0117\-0x0195: r6 'mimeType' java.lang.String\l  0x0014\-0x0195: r10 'width' int\l  0x0018\-0x0195: r11 'height' int\l  0x0043\-0x0195: r13 'initializationData' java.util.List\<byte[]\>\l  0x001c\-0x0195: r15 'pixelWidthHeightRatio' float\l  0x0046\-0x0195: r16 'projectionData' byte[]\l  0x0048\-0x0195: r17 'stereoMode' int\l  0x0027\-0x0195: r23 'childPosition' int\l  0x001a\-0x0195: r28 'pixelWidthHeightRatioFromPasp' boolean\l  ?\-0x0195: r30 'parent' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0195: r31 'atomType' int\l  ?\-0x0195: r32 'position' int\l  ?\-0x0195: r33 'size' int\l  ?\-0x0195: r34 'trackId' int\l  ?\-0x0195: r35 'rotationDegrees' int\l  ?\-0x0195: r36 'drmInitData' com.google.android.exoplayer2.drm.DrmInitData\l  ?\-0x0195: r37 'out' com.google.android.exoplayer2.extractor.mp4.AtomParsers$StsdData\l  ?\-0x0195: r38 'entryIndex' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_69;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_4;
Node_22 -> Node_14;
Node_23 -> Node_18;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_21;
Node_29 -> Node_28;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_40;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_38;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_36 -> Node_21;
Node_38 -> Node_34;
Node_39 -> Node_21;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_46;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_45;
Node_43 -> Node_44;
Node_44 -> Node_21;
Node_45 -> Node_44;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_52;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_51;
Node_49 -> Node_50;
Node_50 -> Node_21;
Node_51 -> Node_50;
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_21;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_21;
Node_58 -> Node_59;
Node_59 -> Node_21;
Node_59 -> Node_60[style=dashed];
Node_60 -> Node_61;
Node_61 -> Node_21;
Node_61 -> Node_62[style=dashed];
Node_62 -> Node_63;
Node_63 -> Node_65;
Node_63 -> Node_66;
Node_63 -> Node_67;
Node_63 -> Node_68;
Node_63 -> Node_21;
Node_65 -> Node_21;
Node_66 -> Node_21;
Node_67 -> Node_21;
Node_68 -> Node_21;
Node_69 -> Node_11;
}

