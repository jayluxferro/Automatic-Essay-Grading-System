digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.AtomParsers.parseHdlr(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.setPosition(16)\lint r0 = r2.readInt()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r0 != TYPE_soun) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r0 != TYPE_vide) goto L_0x0015\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|SYNTHETIC\lRETURN\l|return 2\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015}"];
Node_7 [shape=record,label="{7\:\ 0x0017|if (r0 == TYPE_text) goto L_0x0025\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019}"];
Node_9 [shape=record,label="{9\:\ 0x001b|if (r0 == TYPE_sbtl) goto L_0x0025\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d}"];
Node_11 [shape=record,label="{11\:\ 0x001f|if (r0 == TYPE_subt) goto L_0x0025\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021}"];
Node_13 [shape=record,label="{13\:\ 0x0023|if (r0 != TYPE_clcp) goto L_0x0027\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|SYNTHETIC\lRETURN\l|return 3\l}"];
Node_15 [shape=record,label="{15\:\ 0x0027}"];
Node_16 [shape=record,label="{16\:\ 0x0029|if (r0 != TYPE_meta) goto L_0x002d\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|SYNTHETIC\lRETURN\l|return 4\l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|SYNTHETIC\lRETURN\l|return \-1\l}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseHdlr((r2v0 'hdlr' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
}

