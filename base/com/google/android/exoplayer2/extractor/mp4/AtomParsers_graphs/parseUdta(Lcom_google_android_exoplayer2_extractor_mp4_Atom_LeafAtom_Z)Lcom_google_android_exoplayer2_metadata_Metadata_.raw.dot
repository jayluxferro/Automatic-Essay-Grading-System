digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.AtomParsers.parseUdta(Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/Atom$LeafAtom;Z)Lcom\/google\/android\/exoplayer2\/metadata\/Metadata;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r6 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isQuickTime' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r4 I:com.google.android.exoplayer2.metadata.Metadata) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r7 I:com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom A[D('udtaAtom' com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom)])\l com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom.data com.google.android.exoplayer2.util.ParsableByteArray \l0x0008: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('udtaData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r5 I:int) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('udtaData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r5 I:?[int, byte, short, char]) \< (r6 I:?[int, byte, short, char])  \-\> B:2:0x0005 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: INVOKE  (r0 I:int) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('udtaData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.getPosition():int type: VIRTUAL \l0x0015: INVOKE  (r1 I:int) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('udtaData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0019: INVOKE  (r2 I:int) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('udtaData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x001d: SGET  (r5 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_meta int \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atomType' int)]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002b \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('udtaData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r0 I:int A[D('atomPosition' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0024: ARITH  (r4 I:int) = (r0 I:int A[D('atomPosition' int)]) + (r1 I:int A[D('atomSize' int)]) \l0x0026: INVOKE  (r4 I:com.google.android.exoplayer2.metadata.Metadata) = \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('udtaData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r4 I:int)\l com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseMetaAtom(com.google.android.exoplayer2.util.ParsableByteArray, int):com.google.android.exoplayer2.metadata.Metadata type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: ARITH  (r5 I:int) = (r1 I:int A[D('atomSize' int)]) + (\-8 int) \l0x002d: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('udtaData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.metadata.Metadata com.google.android.exoplayer2.extractor.mp4.AtomParsers.parseUdta((r7 I:com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom A[D('udtaAtom' com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[D('isQuickTime' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0015\-0x0030: r0 'atomPosition' int\l  0x0019\-0x0030: r1 'atomSize' int\l  0x001d\-0x0030: r2 'atomType' int\l  0x0008\-0x0030: r3 'udtaData' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x0030: r7 'udtaAtom' com.google.android.exoplayer2.extractor.mp4.Atom$LeafAtom\l  ?\-0x0030: r8 'isQuickTime' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_2;
Node_5 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_2;
Node_9 -> Node_4;
}

