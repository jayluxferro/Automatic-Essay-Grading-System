digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.Mp4Extractor.shouldParseLeafAtom(I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_mdhd) goto L_0x0040\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_mvhd) goto L_0x0040\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_hdlr) goto L_0x0040\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c}"];
Node_7 [shape=record,label="{7\:\ 0x000e|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stsd) goto L_0x0040\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010}"];
Node_9 [shape=record,label="{9\:\ 0x0012|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stts) goto L_0x0040\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014}"];
Node_11 [shape=record,label="{11\:\ 0x0016|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stss) goto L_0x0040\l}"];
Node_12 [shape=record,label="{12\:\ 0x0018}"];
Node_13 [shape=record,label="{13\:\ 0x001a|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_ctts) goto L_0x0040\l}"];
Node_14 [shape=record,label="{14\:\ 0x001c}"];
Node_15 [shape=record,label="{15\:\ 0x001e|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_elst) goto L_0x0040\l}"];
Node_16 [shape=record,label="{16\:\ 0x0020}"];
Node_17 [shape=record,label="{17\:\ 0x0022|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stsc) goto L_0x0040\l}"];
Node_18 [shape=record,label="{18\:\ 0x0024}"];
Node_19 [shape=record,label="{19\:\ 0x0026|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stsz) goto L_0x0040\l}"];
Node_20 [shape=record,label="{20\:\ 0x0028}"];
Node_21 [shape=record,label="{21\:\ 0x002a|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stz2) goto L_0x0040\l}"];
Node_22 [shape=record,label="{22\:\ 0x002c}"];
Node_23 [shape=record,label="{23\:\ 0x002e|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stco) goto L_0x0040\l}"];
Node_24 [shape=record,label="{24\:\ 0x0030}"];
Node_25 [shape=record,label="{25\:\ 0x0032|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_co64) goto L_0x0040\l}"];
Node_26 [shape=record,label="{26\:\ 0x0034}"];
Node_27 [shape=record,label="{27\:\ 0x0036|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_tkhd) goto L_0x0040\l}"];
Node_28 [shape=record,label="{28\:\ 0x0038}"];
Node_29 [shape=record,label="{29\:\ 0x003a|if (r1 == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_ftyp) goto L_0x0040\l}"];
Node_30 [shape=record,label="{30\:\ 0x003c}"];
Node_31 [shape=record,label="{31\:\ 0x003e|if (r1 != com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_udta) goto L_0x0042\l}"];
Node_32 [shape=record,label="{32\:\ 0x0040|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_33 [shape=record,label="{33\:\ 0x0042|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.shouldParseLeafAtom((r1v0 'atom' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_32;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_32;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_32;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_32;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_32;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_32;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_32;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_32;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_32;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_32;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_32;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
}

