digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.Mp4Extractor.shouldParseLeafAtom(I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_mdhd int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_mvhd int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_hdlr int \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stsd int \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stts int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stss int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|0x0016: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0018|0x0018: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_ctts int \l}"];
Node_13 [shape=record,label="{13\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_14 [shape=record,label="{14\:\ 0x001c|0x001c: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_elst int \l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|0x001e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0020|0x0020: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stsc int \l}"];
Node_17 [shape=record,label="{17\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|0x0024: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stsz int \l}"];
Node_19 [shape=record,label="{19\:\ 0x0026|0x0026: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0028|0x0028: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stz2 int \l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|0x002a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_22 [shape=record,label="{22\:\ 0x002c|0x002c: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_stco int \l}"];
Node_23 [shape=record,label="{23\:\ 0x002e|0x002e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0030|0x0030: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_co64 int \l}"];
Node_25 [shape=record,label="{25\:\ 0x0032|0x0032: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0034|0x0034: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_tkhd int \l}"];
Node_27 [shape=record,label="{27\:\ 0x0036|0x0036: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0038|0x0038: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_ftyp int \l}"];
Node_29 [shape=record,label="{29\:\ 0x003a|0x003a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0040 \l}"];
Node_30 [shape=record,label="{30\:\ 0x003c|0x003c: SGET  (r0 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_udta int \l}"];
Node_31 [shape=record,label="{31\:\ 0x003e|0x003e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atom' int)]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0042 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0040|0x0040: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0041|0x0041: RETURN  (r0 I:boolean) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0042|0x0042: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.shouldParseLeafAtom((r1 I:int A[D('atom' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0043: r1 'atom' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_32;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_32;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_32;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_32;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_32;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_32;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_32;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_32;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_32;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_32;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_32;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_34 -> Node_33;
}

