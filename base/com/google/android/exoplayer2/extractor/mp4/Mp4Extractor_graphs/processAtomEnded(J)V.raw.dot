digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.Mp4Extractor.processAtomEnded(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IGET  (r1 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.containerAtoms java.util.Stack \l0x0003: INVOKE  (r1 I:boolean) = (r1 I:java.util.Stack) java.util.Stack.isEmpty():boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0044 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r1 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.containerAtoms java.util.Stack \l0x000b: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Stack) java.util.Stack.peek():java.lang.Object type: VIRTUAL \l0x000f: CHECK_CAST  (r1 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) = (com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) (r1 I:?[OBJECT, ARRAY]) \l0x0011: IGET  (r2 I:long) = \l  (r1 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.endPosition long \l0x0013: CMP_L  (r1 I:int) = (r2 I:long), (r6 I:long A[D('atomEndPosition' long)]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0044 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IGET  (r1 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.containerAtoms java.util.Stack \l0x0019: INVOKE  (r0 I:java.lang.Object) = (r1 I:java.util.Stack) java.util.Stack.pop():java.lang.Object type: VIRTUAL \l0x001d: CHECK_CAST  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) = (com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) (r0 I:?[OBJECT, ARRAY]) \l0x001f: IGET  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('containerAtom' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.type int \l0x0021: SGET  (r2 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_moov int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0030 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('containerAtom' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.processMoovAtom(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom):void type: DIRECT \l0x0028: IGET  (r1 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.containerAtoms java.util.Stack \l0x002a: INVOKE  (r1 I:java.util.Stack) java.util.Stack.clear():void type: VIRTUAL \l0x002d: IPUT  \l  (r4 I:int)\l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.parserState int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IGET  (r1 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.containerAtoms java.util.Stack \l0x0032: INVOKE  (r1 I:boolean) = (r1 I:java.util.Stack) java.util.Stack.isEmpty():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0001 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: IGET  (r1 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.containerAtoms java.util.Stack \l0x003a: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Stack) java.util.Stack.peek():java.lang.Object type: VIRTUAL \l0x003e: CHECK_CAST  (r1 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) = (com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) (r1 I:?[OBJECT, ARRAY]) \l0x0040: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom A[D('containerAtom' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)])\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.add(com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0044|0x0044: IGET  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.parserState int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|0x0046: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.enterReadingAtomHeaderState():void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|0x004b: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.processAtomEnded((r5 'this' I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor A[IMMUTABLE_TYPE, THIS]), (r6 I:long A[D('atomEndPosition' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001f\-0x0044: r0 'containerAtom' com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\l  ?\-0x004b: r6 'atomEndPosition' long\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
}

