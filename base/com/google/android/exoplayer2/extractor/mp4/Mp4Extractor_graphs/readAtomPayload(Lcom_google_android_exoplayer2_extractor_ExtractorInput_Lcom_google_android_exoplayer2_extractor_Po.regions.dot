digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.Mp4Extractor.readAtomPayload(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;Lcom\/google\/android\/exoplayer2\/extractor\/PositionHolder;)Z" {
subgraph cluster_Region_1770209715 {
label = "R(4:0|(2:2|(1:4)(1:(1:12)))(1:(1:15)(1:16))|5|(2:(1:17)|(1:9)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long long r2 = r10.atomSize \- ((long) r10.atomHeaderBytesRead)\llong long r0 = r11.getPosition() + r2\lboolean r4 = false\l}"];
subgraph cluster_IfRegion_1207304633 {
label = "IF [B:1:0x0010] THEN: R(2:2|(1:4)(1:(1:12))) ELSE: R(1:(1:15)(1:16))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r10.atomData != null) goto L_0x0012\l}"];
subgraph cluster_Region_613967911 {
label = "R(2:2|(1:4)(1:(1:12)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0012|r11.readFully(r10.atomData.data, r10.atomHeaderBytesRead, (int) r2)\l}"];
subgraph cluster_IfRegion_838365166 {
label = "IF [B:3:0x0020] THEN: R(1:4) ELSE: R(1:(1:12))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0020|if (r10.atomType == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_ftyp) goto L_0x0022\l}"];
subgraph cluster_Region_2106415515 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0022|r10.isQuickTime = processFtypAtom(r10.atomData)\l}"];
}
subgraph cluster_Region_2069792681 {
label = "R(1:(1:12)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_206744242 {
label = "IF [B:11:0x003c] THEN: R(1:12) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003c|if (r10.containerAtoms.isEmpty() == false) goto L_0x003e\l}"];
subgraph cluster_Region_2124886985 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003e|r10.containerAtoms.peek().add(new com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom(r10.atomType, r10.atomData))\l}"];
}
}
}
}
}
subgraph cluster_Region_1769077767 {
label = "R(1:(1:15)(1:16)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_698104437 {
label = "IF [B:14:0x0058] THEN: R(1:15) ELSE: R(1:16) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0058|if (r2 \< 262144) goto L_0x005a\l}"];
subgraph cluster_Region_2107616946 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x005a|r11.skipFully((int) r2)\l}"];
}
subgraph cluster_Region_249755243 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x005f|r12.position = r11.getPosition() + r2\lr4 = true\l}"];
}
}
}
}
Node_5 [shape=record,label="{5\:\ 0x002a|PHI: r4 \l  PHI: (r4v2 'seekRequired' boolean) = (r4v1 'seekRequired' boolean), (r4v0 'seekRequired' boolean), (r4v0 'seekRequired' boolean), (r4v0 'seekRequired' boolean), (r4v0 'seekRequired' boolean) binds: [B:16:0x005f, B:15:0x005a, B:11:0x003c, B:12:0x003e, B:4:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|processAtomEnded(r0)\l}"];
subgraph cluster_Region_1713196367 {
label = "R(2:(1:17)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1776053952 {
label = "IF [B:6:0x002d, B:8:0x0032] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002d|if (r4 == false) goto L_0x0068\l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|ADDED_TO_REGION\l|if (r10.parserState == 2) goto L_0x0068\l}"];
subgraph cluster_Region_2139319300 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0068|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_956113222 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0034|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ 0x002f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0036}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0053}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.readAtomPayload((r10v0 'this' com.google.android.exoplayer2.extractor.mp4.Mp4Extractor A[IMMUTABLE_TYPE, THIS]), (r11v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'positionHolder' com.google.android.exoplayer2.extractor.PositionHolder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_10[style=dashed];
Node_4 -> Node_5;
Node_11 -> Node_5[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_5;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_5;
Node_16 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_17;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_13 -> Node_14;
}

