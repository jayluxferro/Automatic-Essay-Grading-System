digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.Mp4Extractor.seek(JJ)V" {
subgraph cluster_Region_318917472 {
label = "R(2:0|(1:2)(1:(1:5)(0)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.containerAtoms.clear()\lr3.atomHeaderBytesRead = 0\lr3.sampleBytesWritten = 0\lr3.sampleCurrentNalBytesRemaining = 0\l}"];
subgraph cluster_IfRegion_1659589541 {
label = "IF [B:1:0x0010] THEN: R(1:2) ELSE: R(1:(1:5)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r4 == 0) goto L_0x0012\l}"];
subgraph cluster_Region_1708125167 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0012|enterReadingAtomHeaderState()\l}"];
}
subgraph cluster_Region_1064559586 {
label = "R(1:(1:5)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1051457063 {
label = "IF [B:4:0x0018] THEN: R(1:5) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|if (r3.tracks != null) goto L_0x001a\l}"];
subgraph cluster_Region_115731500 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|updateSampleIndices(r6)\l}"];
}
subgraph cluster_Region_477101964 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0016}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.seek((r3v0 'this' com.google.android.exoplayer2.extractor.mp4.Mp4Extractor A[IMMUTABLE_TYPE, THIS]), (r4v0 'position' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'timeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_8;
Node_3 -> Node_4;
}

