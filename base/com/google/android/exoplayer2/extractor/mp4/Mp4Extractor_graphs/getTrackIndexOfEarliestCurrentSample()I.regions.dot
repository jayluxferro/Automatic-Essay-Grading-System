digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.Mp4Extractor.getTrackIndexOfEarliestCurrentSample()I" {
subgraph cluster_Region_1591333282 {
label = "R(3:0|(3:3|(2:6|(1:8)(0))(0)|5)|9)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r2 = \-1\llong r0 = Long.MAX_VALUE\lint r5 = 0\l}"];
subgraph cluster_LoopRegion_2031268127 {
label = "LOOP:0: (3:3|(2:6|(1:8)(0))(0)|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r5 \< r9.tracks.length) goto L_0x000c\l}"];
subgraph cluster_Region_1767254878 {
label = "R(3:3|(2:6|(1:8)(0))(0)|5)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.Mp4Track r4 = r9.tracks[r5]\lint int r3 = r4.sampleIndex\l}"];
subgraph cluster_IfRegion_915376651 {
label = "IF [B:4:0x0016] THEN: R(2:6|(1:8)(0)) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r3 != r4.sampleTable.sampleCount) goto L_0x001b\l}"];
subgraph cluster_Region_2007944044 {
label = "R(2:6|(1:8)(0))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001b|long r6 = r4.sampleTable.offsets[r3]\l}"];
subgraph cluster_IfRegion_68730625 {
label = "IF [B:7:0x0023] THEN: R(1:8) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0023|if (r6 \< r0) goto L_0x0025\l}"];
subgraph cluster_Region_1594884821 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0025|r0 = r6\lr2 = r5\l}"];
}
subgraph cluster_Region_777638721 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_1079480357 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_5 [shape=record,label="{5\:\ 0x0018|LOOP_END\lPHI: r0 r2 \l  PHI: (r0v3 'earliestSampleOffset' long) = (r0v1 'earliestSampleOffset' long), (r0v1 'earliestSampleOffset' long), (r0v2 'earliestSampleOffset' long) binds: [B:11:0x0018, B:12:0x0018, B:13:0x0018] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 'earliestSampleTrackIndex' int) = (r2v1 'earliestSampleTrackIndex' int), (r2v1 'earliestSampleTrackIndex' int), (r2v2 'earliestSampleTrackIndex' int) binds: [B:11:0x0018, B:12:0x0018, B:13:0x0018] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:5:0x0018\l|r5++\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x0028|RETURN\l|return r2\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0007|LOOP_START\lPHI: r0 r2 r5 \l  PHI: (r0v1 'earliestSampleOffset' long) = (r0v0 'earliestSampleOffset' long), (r0v3 'earliestSampleOffset' long) binds: [B:0:0x0000, B:5:0x0018] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'earliestSampleTrackIndex' int) = (r2v0 'earliestSampleTrackIndex' int), (r2v3 'earliestSampleTrackIndex' int) binds: [B:0:0x0000, B:5:0x0018] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'trackIndex' int) = (r5v0 'trackIndex' int), (r5v2 'trackIndex' int) binds: [B:0:0x0000, B:5:0x0018] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:5:0x0018\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0028|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0018|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0018|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.getTrackIndexOfEarliestCurrentSample((r9v0 'this' com.google.android.exoplayer2.extractor.mp4.Mp4Extractor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_10[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_11[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_12[style=dashed];
Node_8 -> Node_13;
Node_5 -> Node_1;
Node_1 -> Node_2;
Node_10 -> Node_9;
Node_11 -> Node_5;
Node_12 -> Node_5;
Node_13 -> Node_5;
}

