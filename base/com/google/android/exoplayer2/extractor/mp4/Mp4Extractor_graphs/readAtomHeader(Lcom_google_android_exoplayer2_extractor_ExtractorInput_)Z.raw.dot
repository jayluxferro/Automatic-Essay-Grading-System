digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.Mp4Extractor.readAtomHeader(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r10 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0002: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IGET  (r3 I:int) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeaderBytesRead int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeader com.google.android.exoplayer2.util.ParsableByteArray \l0x000a: IGET  (r3 I:byte[]) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x000c: INVOKE  (r3 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r3 I:byte[])\l  (r5 I:int)\l  (r10 I:int)\l  (r4 I:boolean)\l com.google.android.exoplayer2.extractor.ExtractorInput.readFully(byte[], int, int, boolean):boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN  (r5 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IPUT  \l  (r10 I:int)\l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeaderBytesRead int \l0x0015: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeader com.google.android.exoplayer2.util.ParsableByteArray \l0x0017: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r5 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x001a: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeader com.google.android.exoplayer2.util.ParsableByteArray \l0x001c: INVOKE  (r6 I:long) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt():long type: VIRTUAL \l0x0020: IPUT  \l  (r6 I:long)\l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomSize long \l0x0022: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeader com.google.android.exoplayer2.util.ParsableByteArray \l0x0024: INVOKE  (r3 I:int) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0028: IPUT  \l  (r3 I:int)\l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomType int \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: IGET  (r6 I:long) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomSize long \l0x002c: CONST  (r8 I:?[long, double]) = (1 ?[long, double]) \l0x002e: CMP_L  (r3 I:int) = (r6 I:long), (r8 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0048 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: CONST  (r2 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0034: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeader com.google.android.exoplayer2.util.ParsableByteArray \l0x0036: IGET  (r3 I:byte[]) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0038: INVOKE  \l  (r12 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r3 I:byte[])\l  (r10 I:int)\l  (r2 I:int A[D('headerBytesRemaining' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.readFully(byte[], int, int):void type: INTERFACE \l0x003b: IGET  (r3 I:int) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeaderBytesRead int \l0x003d: ARITH  (r3 I:int) = (r3 I:int) + (r2 I:int A[D('headerBytesRemaining' int)]) \l0x003e: IPUT  \l  (r3 I:int)\l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeaderBytesRead int \l0x0040: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeader com.google.android.exoplayer2.util.ParsableByteArray \l0x0042: INVOKE  (r6 I:long) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedLongToLong():long type: VIRTUAL \l0x0046: IPUT  \l  (r6 I:long)\l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomSize long \l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|0x0048: IGET  (r3 I:int) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomType int \l0x004a: INVOKE  (r3 I:boolean) = (r3 I:int) com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.shouldParseContainerAtom(int):boolean type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|0x004e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x007a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|0x0050: INVOKE  (r6 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.getPosition():long type: INTERFACE \l0x0054: IGET  (r8 I:long) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomSize long \l0x0056: ARITH  (r6 I:long) = (r6 I:long) + (r8 I:long) \l0x0057: IGET  (r3 I:int) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeaderBytesRead int \l0x0059: CAST  (r8 I:long) = (long) (r3 I:int) \l0x005a: ARITH  (r0 I:long) = (r6 I:long) \- (r8 I:long) \l0x005c: IGET  (r3 I:java.util.Stack\<com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom\>) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.containerAtoms java.util.Stack \l0x005e: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom) =  com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom \l0x0060: IGET  (r6 I:int) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomType int \l0x0062: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.mp4.Atom$ContainerAtom)\l  (r6 I:int)\l  (r0 I:long A[D('endPosition' long)])\l com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom.\<init\>(int, long):void type: DIRECT \l0x0065: INVOKE  (r3 I:java.util.Stack), (r5 I:java.lang.Object) java.util.Stack.add(java.lang.Object):boolean type: VIRTUAL \l0x0068: IGET  (r6 I:long) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomSize long \l0x006a: IGET  (r3 I:int) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeaderBytesRead int \l0x006c: CAST  (r8 I:long) = (long) (r3 I:int) \l0x006d: CMP_L  (r3 I:int) = (r6 I:long), (r8 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x006f|0x006f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0076 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0071|0x0071: INVOKE  \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l  (r0 I:long A[D('endPosition' long)])\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.processAtomEnded(long):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0074|0x0074: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0076|0x0076: INVOKE  \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.enterReadingAtomHeaderState():void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x007a|0x007a: IGET  (r3 I:int) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomType int \l0x007c: INVOKE  (r3 I:boolean) = (r3 I:int) com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.shouldParseLeafAtom(int):boolean type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x0080|0x0080: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00b3 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0082|0x0082: IGET  (r3 I:int) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeaderBytesRead int \l}"];
Node_19 [shape=record,label="{19\:\ 0x0084|0x0084: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00af \l}"];
Node_20 [shape=record,label="{20\:\ 0x0086|0x0086: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0087|0x0087: INVOKE  (r3 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x008a: IGET  (r6 I:long) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomSize long \l0x008c: CONST  (r8 I:?[long, double]) = \l  (2147483647(0x7fffffff, double:1.060997895E\-314) ?[long, double])\l \l0x008f: CMP_L  (r3 I:int) = (r6 I:long), (r8 I:long) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0091|0x0091: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:26:0x00b1 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0093|0x0093: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x0094|0x0094: INVOKE  (r3 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x0097: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0099: IGET  (r6 I:long) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomSize long \l0x009b: CAST  (r6 I:int) = (int) (r6 I:long) \l0x009c: INVOKE  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x009f: IPUT  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomData com.google.android.exoplayer2.util.ParsableByteArray \l0x00a1: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomHeader com.google.android.exoplayer2.util.ParsableByteArray \l0x00a3: IGET  (r3 I:byte[]) = (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x00a5: IGET  (r6 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomData com.google.android.exoplayer2.util.ParsableByteArray \l0x00a7: IGET  (r6 I:byte[]) = (r6 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x00a9: INVOKE  \l  (r3 I:java.lang.Object)\l  (r5 I:int)\l  (r6 I:java.lang.Object)\l  (r5 I:int)\l  (r10 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x00ac: IPUT  \l  (r4 I:int)\l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.parserState int \l}"];
Node_25 [shape=record,label="{25\:\ 0x00af|0x00af: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b1|0x00b1: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b3|0x00b3: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b4: IPUT  \l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.atomData com.google.android.exoplayer2.util.ParsableByteArray \l0x00b6: IPUT  \l  (r4 I:int)\l  (r11 I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.parserState int \l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.readAtomHeader((r11 'this' I:com.google.android.exoplayer2.extractor.mp4.Mp4Extractor A[IMMUTABLE_TYPE, THIS]), (r12 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0034\-0x0048: r2 'headerBytesRemaining' int\l  0x005c\-0x0074: r0 'endPosition' long\l  0x0076\-0x007a: r0 'endPosition' long\l  ?\-0x00b8: r12 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_4;
Node_15 -> Node_14;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_14;
Node_25 -> Node_21;
Node_26 -> Node_24;
Node_27 -> Node_14;
}

