digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker.Results.\<init\>([J[II[J[I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:long[] A[D('offsets' long[])])\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results)\l com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker.Results.offsets long[] \l0x0005: IPUT  \l  (r2 I:int[] A[D('sizes' int[])])\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results)\l com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker.Results.sizes int[] \l0x0007: IPUT  \l  (r3 I:int A[D('maximumSize' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results)\l com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker.Results.maximumSize int \l0x0009: IPUT  \l  (r4 I:long[] A[D('timestamps' long[])])\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results)\l com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker.Results.timestamps long[] \l0x000b: IPUT  \l  (r5 I:int[] A[D('flags' int[])])\l  (r0 I:com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results)\l com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker.Results.flags int[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker.Results.\<init\>((r0 'this' I:com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker$Results A[IMMUTABLE_TYPE, THIS]), (r1 I:long[] A[D('offsets' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int[] A[D('sizes' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('maximumSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long[] A[D('timestamps' long[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int[] A[D('flags' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000d: r1 'offsets' long[]\l  ?\-0x000d: r2 'sizes' int[]\l  ?\-0x000d: r3 'maximumSize' int\l  ?\-0x000d: r4 'timestamps' long[]\l  ?\-0x000d: r5 'flags' int[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

