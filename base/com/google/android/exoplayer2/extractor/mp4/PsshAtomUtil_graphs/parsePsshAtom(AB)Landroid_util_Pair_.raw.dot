digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.PsshAtomUtil.parsePsshAtom([B)Landroid\/util\/Pair;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0002: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r12 I:byte[] A[D('atom' byte[])])\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(byte[]):void type: DIRECT \l0x0005: INVOKE  (r8 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x0009: CONST  (r9 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r8 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN  (r8 I:android.util.Pair\<java.util.UUID, byte[]\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r8 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0013: INVOKE  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0017: INVOKE  (r8 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x001b: ARITH  (r8 I:int) = (r8 I:int) + (4 int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atomSize' int)]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0021 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: INVOKE  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0025: SGET  (r8 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_pssh int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atomType' int)]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: INVOKE  (r8 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x002f: INVOKE  (r3 I:int) = (r8 I:int) com.google.android.exoplayer2.extractor.mp4.Atom.parseFullAtomVersion(int):int type: STATIC \l0x0033: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: IF  (r3 I:?[int, byte, short, char] A[D('atomVersion' int)]) \<= (r8 I:?[int, byte, short, char])  \-\> B:13:0x0050 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: CONST_STR  (r8 I:java.lang.String) =  \"PsshAtomUtil\" \l0x0038: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003a: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003d: CONST_STR  (r10 I:java.lang.String) =  \"Unsupported pssh version: \" \l0x003f: INVOKE  (r9 I:java.lang.StringBuilder) = (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0043: INVOKE  (r9 I:java.lang.StringBuilder) = \l  (r9 I:java.lang.StringBuilder)\l  (r3 I:int A[D('atomVersion' int)])\l java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0047: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004b: INVOKE  (r8 I:java.lang.String), (r9 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l0x004e: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0050|0x0050: NEW_INSTANCE  (r7 I:java.util.UUID) =  java.util.UUID \l0x0052: INVOKE  (r8 I:long) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readLong():long type: VIRTUAL \l0x0056: INVOKE  (r10 I:long) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readLong():long type: VIRTUAL \l0x005a: INVOKE  (r7 I:java.util.UUID), (r8 I:long), (r10 I:long) java.util.UUID.\<init\>(long, long):void type: DIRECT \l0x005d: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x005e|0x005e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atomVersion' int)]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0069 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0060|0x0060: INVOKE  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedIntToInt():int type: VIRTUAL \l0x0064: ARITH  (r8 I:int) = (r6 I:int A[D('keyIdCount' int)]) * (16 int) \l0x0066: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r8 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|0x0069: INVOKE  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedIntToInt():int type: VIRTUAL \l0x006d: INVOKE  (r8 I:int) = \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0071|0x0071: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dataSize' int)]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0075 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0073|0x0073: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0075|0x0075: NEW_ARRAY  (r4 I:byte[]) = (r5 I:int A[D('dataSize' int), IMMUTABLE_TYPE]) type: byte[] \l0x0077: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0078: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('atomData' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r4 I:byte[] A[D('data' byte[])])\l  (r8 I:int)\l  (r5 I:int A[D('dataSize' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l0x007b: INVOKE  (r8 I:android.util.Pair) = \l  (r7 I:java.lang.Object A[D('uuid' java.util.UUID)])\l  (r4 I:java.lang.Object A[D('data' byte[])])\l android.util.Pair.create(java.lang.Object, java.lang.Object):android.util.Pair type: STATIC \l}"];
MethodNode[shape=record,label="{private static android.util.Pair\<java.util.UUID, byte[]\> com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil.parsePsshAtom((r12 I:byte[] A[D('atom' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0064\-0x0069: r6 'keyIdCount' int\l  0x0005\-0x007f: r0 'atomData' com.google.android.exoplayer2.util.ParsableByteArray\l  0x0017\-0x007f: r1 'atomSize' int\l  0x0025\-0x007f: r2 'atomType' int\l  0x0033\-0x007f: r3 'atomVersion' int\l  0x0077\-0x007f: r4 'data' byte[]\l  0x006d\-0x007f: r5 'dataSize' int\l  0x005d\-0x007f: r7 'uuid' java.util.UUID\l  ?\-0x007f: r12 'atom' byte[]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[([B), Landroid\/util\/Pair, \<, Ljava\/util\/UUID;, [B\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_3;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_3;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_3;
Node_19 -> Node_3;
}

