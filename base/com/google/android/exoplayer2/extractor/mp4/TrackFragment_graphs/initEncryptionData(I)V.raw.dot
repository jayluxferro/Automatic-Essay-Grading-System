digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.TrackFragment.initEncryptionData(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleEncryptionData com.google.android.exoplayer2.util.ParsableByteArray \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleEncryptionData com.google.android.exoplayer2.util.ParsableByteArray \l0x0007: INVOKE  (r0 I:int) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char] A[D('length' int)])  \-\> B:5:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x000f: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r3 I:int A[D('length' int)])\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x0012: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleEncryptionData com.google.android.exoplayer2.util.ParsableByteArray \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IPUT  \l  (r3 I:int A[D('length' int)])\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleEncryptionDataLength int \l0x0016: IPUT  \l  (r1 I:boolean)\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.definesEncryptionData boolean \l0x0018: IPUT  \l  (r1 I:boolean)\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleEncryptionDataNeedsFill boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.mp4.TrackFragment.initEncryptionData((r2 'this' I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001a: r3 'length' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

