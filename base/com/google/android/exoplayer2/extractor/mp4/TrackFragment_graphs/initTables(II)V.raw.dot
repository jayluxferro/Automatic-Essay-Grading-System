digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.TrackFragment.initTables(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r3 I:int A[D('trunCount' int)])\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.trunCount int \l0x0002: IPUT  \l  (r4 I:int A[D('sampleCount' int)])\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleCount int \l0x0004: IGET  (r1 I:int[]) = \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.trunLength int[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r1 I:int[]) = \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.trunLength int[] \l0x000a: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char] A[D('trunCount' int)])  \-\> B:5:0x0015 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: NEW_ARRAY  (r1 I:long[]) = (r3 I:int A[D('trunCount' int), IMMUTABLE_TYPE]) type: long[] \l0x000f: IPUT  \l  (r1 I:long[])\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.trunDataPosition long[] \l0x0011: NEW_ARRAY  (r1 I:int[]) = (r3 I:int A[D('trunCount' int), IMMUTABLE_TYPE]) type: int[] \l0x0013: IPUT  \l  (r1 I:int[])\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.trunLength int[] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IGET  (r1 I:int[]) = \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleSizeTable int[] \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IGET  (r1 I:int[]) = \l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleSizeTable int[] \l0x001b: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r1 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char] A[D('sampleCount' int)])  \-\> B:10:0x0036 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: ARITH  (r1 I:int) = (r4 I:int A[D('sampleCount' int)]) * (125 int) \l0x0020: ARITH  (r0 I:int) = (r1 I:int) \/ (100 int) \l0x0022: NEW_ARRAY  (r1 I:int[]) = (r0 I:int A[D('tableSize' int), IMMUTABLE_TYPE]) type: int[] \l0x0024: IPUT  \l  (r1 I:int[])\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleSizeTable int[] \l0x0026: NEW_ARRAY  (r1 I:int[]) = (r0 I:int A[D('tableSize' int), IMMUTABLE_TYPE]) type: int[] \l0x0028: IPUT  \l  (r1 I:int[])\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleCompositionTimeOffsetTable int[] \l0x002a: NEW_ARRAY  (r1 I:long[]) = (r0 I:int A[D('tableSize' int), IMMUTABLE_TYPE]) type: long[] \l0x002c: IPUT  \l  (r1 I:long[])\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleDecodingTimeTable long[] \l0x002e: NEW_ARRAY  (r1 I:boolean[]) = (r0 I:int A[D('tableSize' int), IMMUTABLE_TYPE]) type: boolean[] \l0x0030: IPUT  \l  (r1 I:boolean[])\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleIsSyncFrameTable boolean[] \l0x0032: NEW_ARRAY  (r1 I:boolean[]) = (r0 I:int A[D('tableSize' int), IMMUTABLE_TYPE]) type: boolean[] \l0x0034: IPUT  \l  (r1 I:boolean[])\l  (r2 I:com.google.android.exoplayer2.extractor.mp4.TrackFragment)\l com.google.android.exoplayer2.extractor.mp4.TrackFragment.sampleHasSubsampleEncryptionTable boolean[] \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.mp4.TrackFragment.initTables((r2 'this' I:com.google.android.exoplayer2.extractor.mp4.TrackFragment A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('trunCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('sampleCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0022\-0x0036: r0 'tableSize' int\l  ?\-0x0036: r3 'trunCount' int\l  ?\-0x0036: r4 'sampleCount' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
}

