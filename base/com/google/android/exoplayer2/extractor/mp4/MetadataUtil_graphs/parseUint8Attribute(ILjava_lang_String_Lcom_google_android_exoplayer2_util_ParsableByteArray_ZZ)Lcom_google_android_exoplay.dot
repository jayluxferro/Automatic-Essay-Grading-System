digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.MetadataUtil.parseUint8Attribute(ILjava\/lang\/String;Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;ZZ)Lcom\/google\/android\/exoplayer2\/metadata\/id3\/Id3Frame;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = parseUint8AttributeValue(r7)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r9 == false) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|int r0 = java.lang.Math.min(1, r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|PHI: r0 \l  PHI: (r0v1 'value' int) = (r0v0 'value' int), (r0v2 'value' int) binds: [B:1:0x0005, B:2:0x0007] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 \< 0) goto L_0x0026\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r8 == false) goto L_0x001a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010}"];
Node_6 [shape=record,label="{6\:\ 0x001a}"];
Node_7 [shape=record,label="{7\:\ 0x0026|android.util.Log.w(TAG, new java.lang.StringBuilder().append(\"Failed to parse uint8 attribute: \").append(com.google.android.exoplayer2.extractor.mp4.Atom.getAtomTypeString(r5)).toString())\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return new com.google.android.exoplayer2.metadata.id3.TextInformationFrame(r6, (java.lang.String) null, java.lang.Integer.toString(r0))\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return new com.google.android.exoplayer2.metadata.id3.CommentFrame(LANGUAGE_UNDEFINED, r6, java.lang.Integer.toString(r0))\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.id3.Id3Frame com.google.android.exoplayer2.extractor.mp4.MetadataUtil.parseUint8Attribute((r5v0 'type' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'id' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'data' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'isTextInformationFrame' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'isBoolean' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_9;
Node_7 -> Node_10;
}

