digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.MetadataUtil.parseCoverArt(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Lcom\/google\/android\/exoplayer2\/metadata\/id3\/ApicFrame;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r0 I:int) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0005: INVOKE  (r1 I:int) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0009: SGET  (r7 I:int) =  com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_data int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('atomType' int)]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0054 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: INVOKE  (r3 I:int) = \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0011: INVOKE  (r2 I:int) = (r3 I:int A[D('fullVersionInt' int)]) com.google.android.exoplayer2.extractor.mp4.Atom.parseFullAtomFlags(int):int type: STATIC \l0x0015: CONST  (r7 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('flags' int)]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0036 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: CONST_STR  (r4 I:java.lang.String) =  \"image\/jpeg\" \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('mimeType' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003f \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: CONST_STR  (r7 I:java.lang.String) =  \"MetadataUtil\" \l0x001f: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0021: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0024: CONST_STR  (r9 I:java.lang.String) =  \"Unrecognized cover art flags: \" \l0x0026: INVOKE  (r8 I:java.lang.StringBuilder) = (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: INVOKE  (r8 I:java.lang.StringBuilder) = \l  (r8 I:java.lang.StringBuilder)\l  (r2 I:int A[D('flags' int)])\l java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x002e: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0032: INVOKE  (r7 I:java.lang.String), (r8 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: RETURN  (r6 I:com.google.android.exoplayer2.metadata.id3.ApicFrame) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: CONST  (r7 I:?[int, float, short, byte, char]) = (14 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('flags' int)]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003d \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: CONST_STR  (r4 I:java.lang.String) =  \"image\/png\" \l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|0x003d: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: CONST  (r7 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0040: INVOKE  \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r7 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0043: ARITH  (r7 I:int) = (r0 I:int A[D('atomSize' int)]) + (\-16 int) \l0x0045: NEW_ARRAY  (r5 I:byte[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0047: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0048: ARRAY_LENGTH  (r8 I:int) = (r5 I:?[] A[D('pictureData' byte[])]) \l0x0049: INVOKE  \l  (r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r5 I:byte[] A[D('pictureData' byte[])])\l  (r7 I:int)\l  (r8 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l0x004c: NEW_INSTANCE  (r7 I:com.google.android.exoplayer2.metadata.id3.ApicFrame) =  com.google.android.exoplayer2.metadata.id3.ApicFrame \l0x004e: CONST  (r8 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x004f: INVOKE  \l  (r7 I:com.google.android.exoplayer2.metadata.id3.ApicFrame)\l  (r4 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r6 I:java.lang.String)\l  (r8 I:int)\l  (r5 I:byte[] A[D('pictureData' byte[])])\l com.google.android.exoplayer2.metadata.id3.ApicFrame.\<init\>(java.lang.String, java.lang.String, int, byte[]):void type: DIRECT \l0x0052: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|0x0054: CONST_STR  (r7 I:java.lang.String) =  \"MetadataUtil\" \l0x0056: CONST_STR  (r8 I:java.lang.String) =  \"Failed to parse cover art attribute\" \l0x0058: INVOKE  (r7 I:java.lang.String), (r8 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.id3.ApicFrame com.google.android.exoplayer2.extractor.mp4.MetadataUtil.parseCoverArt((r10 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0015\-0x0035: r2 'flags' int\l  0x0011\-0x0035: r3 'fullVersionInt' int\l  0x001b\-0x0035: r4 'mimeType' java.lang.String\l  0x0036\-0x0054: r2 'flags' int\l  0x0036\-0x0054: r3 'fullVersionInt' int\l  0x003f\-0x0054: r4 'mimeType' java.lang.String\l  0x0047\-0x0054: r5 'pictureData' byte[]\l  0x0005\-0x005b: r0 'atomSize' int\l  0x0009\-0x005b: r1 'atomType' int\l  ?\-0x005b: r10 'data' com.google.android.exoplayer2.util.ParsableByteArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_5;
Node_11 -> Node_5;
Node_12 -> Node_7;
Node_13 -> Node_7;
}

