digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.MetadataUtil.parseTextAttribute(ILjava\/lang\/String;Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Lcom\/google\/android\/exoplayer2\/metadata\/id3\/TextInformationFrame;" {
subgraph cluster_Region_530531984 {
label = "R(2:0|(2:(2:2|4)|(2:3|5)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r9.readInt()\l}"];
subgraph cluster_Region_1436937698 {
label = "R(2:(2:2|4)|(2:3|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1302007787 {
label = "IF [B:1:0x000b] THEN: R(2:2|4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r9.readInt() == com.google.android.exoplayer2.extractor.mp4.Atom.TYPE_data) goto L_0x000d\l}"];
subgraph cluster_Region_536838251 {
label = "R(2:2|4)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|r9.skipBytes(8)\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return new com.google.android.exoplayer2.metadata.id3.TextInformationFrame(r8, (java.lang.String) null, r9.readNullTerminatedString(r0 \- 16))\l}"];
}
}
subgraph cluster_Region_1104514718 {
label = "R(2:3|5)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001e|android.util.Log.w(TAG, \"Failed to parse text attribute: \" + com.google.android.exoplayer2.extractor.mp4.Atom.getAtomTypeString(r7))\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
}
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.metadata.id3.TextInformationFrame com.google.android.exoplayer2.extractor.mp4.MetadataUtil.parseTextAttribute((r7v0 'type' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'id' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'data' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
}

