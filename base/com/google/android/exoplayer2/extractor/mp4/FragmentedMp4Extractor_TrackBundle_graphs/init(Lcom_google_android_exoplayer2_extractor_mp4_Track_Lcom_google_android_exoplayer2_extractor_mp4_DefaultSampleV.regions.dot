digraph "CFG forcom.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.TrackBundle.init(Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/Track;Lcom\/google\/android\/exoplayer2\/extractor\/mp4\/DefaultSampleValues;)V" {
subgraph cluster_Region_1200613756 {
label = "R(1:0)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.track = (com.google.android.exoplayer2.extractor.mp4.Track) com.google.android.exoplayer2.util.Assertions.checkNotNull(r3)\lr2.defaultSampleValues = (com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues) com.google.android.exoplayer2.util.Assertions.checkNotNull(r4)\lr2.output.format(r3.format)\lreset()\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x001a}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.TrackBundle.init((r2v0 'this' com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$TrackBundle A[IMMUTABLE_TYPE, THIS]), (r3v0 'track' com.google.android.exoplayer2.extractor.mp4.Track A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'defaultSampleValues' com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

