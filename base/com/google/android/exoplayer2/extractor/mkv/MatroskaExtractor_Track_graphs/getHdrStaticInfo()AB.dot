digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.getHdrStaticInfo()[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if ((r6.primaryRChromaticityX \> \-1.0f ? 1 : (r6.primaryRChromaticityX == \-1.0f ? 0 : \-1)) == 0) goto L_0x0043\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d}"];
Node_3 [shape=record,label="{3\:\ 0x0011|if ((r6.primaryRChromaticityY \> \-1.0f ? 1 : (r6.primaryRChromaticityY == \-1.0f ? 0 : \-1)) == 0) goto L_0x0043\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013}"];
Node_5 [shape=record,label="{5\:\ 0x0017|if ((r6.primaryGChromaticityX \> \-1.0f ? 1 : (r6.primaryGChromaticityX == \-1.0f ? 0 : \-1)) == 0) goto L_0x0043\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019}"];
Node_7 [shape=record,label="{7\:\ 0x001d|if ((r6.primaryGChromaticityY \> \-1.0f ? 1 : (r6.primaryGChromaticityY == \-1.0f ? 0 : \-1)) == 0) goto L_0x0043\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f}"];
Node_9 [shape=record,label="{9\:\ 0x0023|if ((r6.primaryBChromaticityX \> \-1.0f ? 1 : (r6.primaryBChromaticityX == \-1.0f ? 0 : \-1)) == 0) goto L_0x0043\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025}"];
Node_11 [shape=record,label="{11\:\ 0x0029|if ((r6.primaryBChromaticityY \> \-1.0f ? 1 : (r6.primaryBChromaticityY == \-1.0f ? 0 : \-1)) == 0) goto L_0x0043\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b}"];
Node_13 [shape=record,label="{13\:\ 0x002f|if ((r6.whitePointChromaticityX \> \-1.0f ? 1 : (r6.whitePointChromaticityX == \-1.0f ? 0 : \-1)) == 0) goto L_0x0043\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031}"];
Node_15 [shape=record,label="{15\:\ 0x0035|if ((r6.whitePointChromaticityY \> \-1.0f ? 1 : (r6.whitePointChromaticityY == \-1.0f ? 0 : \-1)) == 0) goto L_0x0043\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037}"];
Node_17 [shape=record,label="{17\:\ 0x003b|if ((r6.maxMasteringLuminance \> \-1.0f ? 1 : (r6.maxMasteringLuminance == \-1.0f ? 0 : \-1)) == 0) goto L_0x0043\l}"];
Node_18 [shape=record,label="{18\:\ 0x003d}"];
Node_19 [shape=record,label="{19\:\ 0x0041|if ((r6.minMasteringLuminance \> \-1.0f ? 1 : (r6.minMasteringLuminance == \-1.0f ? 0 : \-1)) != 0) goto L_0x0045\l}"];
Node_20 [shape=record,label="{20\:\ 0x0043|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_21 [shape=record,label="{21\:\ 0x0045|byte[] r1 = new byte[25]\ljava.nio.ByteBuffer r0 = java.nio.ByteBuffer.wrap(r1)\lr0.put((byte) 0)\lr0.putShort((short) ((int) ((r6.primaryRChromaticityX * 50000.0f) + 0.5f)))\lr0.putShort((short) ((int) ((r6.primaryRChromaticityY * 50000.0f) + 0.5f)))\lr0.putShort((short) ((int) ((r6.primaryGChromaticityX * 50000.0f) + 0.5f)))\lr0.putShort((short) ((int) ((r6.primaryGChromaticityY * 50000.0f) + 0.5f)))\lr0.putShort((short) ((int) ((r6.primaryBChromaticityX * 50000.0f) + 0.5f)))\lr0.putShort((short) ((int) ((r6.primaryBChromaticityY * 50000.0f) + 0.5f)))\lr0.putShort((short) ((int) ((r6.whitePointChromaticityX * 50000.0f) + 0.5f)))\lr0.putShort((short) ((int) ((r6.whitePointChromaticityY * 50000.0f) + 0.5f)))\lr0.putShort((short) ((int) (r6.maxMasteringLuminance + 0.5f)))\lr0.putShort((short) ((int) (r6.minMasteringLuminance + 0.5f)))\lr0.putShort((short) r6.maxContentLuminance)\lr0.putShort((short) r6.maxFrameAverageLuminance)\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
MethodNode[shape=record,label="{private byte[] com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.getHdrStaticInfo((r6v0 'this' com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_20;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_20;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_20;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_22;
}

