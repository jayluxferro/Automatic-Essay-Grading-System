digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r8.width = \-1\lr8.height = \-1\lr8.displayWidth = \-1\lr8.displayHeight = \-1\lr8.displayUnit = 0\lr8.projectionData = null\lr8.stereoMode = \-1\lr8.hasColorInfo = false\lr8.colorSpace = \-1\lr8.colorTransfer = \-1\lr8.colorRange = \-1\lr8.maxContentLuminance = 1000\lr8.maxFrameAverageLuminance = 200\lr8.primaryRChromaticityX = \-1.0f\lr8.primaryRChromaticityY = \-1.0f\lr8.primaryGChromaticityX = \-1.0f\lr8.primaryGChromaticityY = \-1.0f\lr8.primaryBChromaticityX = \-1.0f\lr8.primaryBChromaticityY = \-1.0f\lr8.whitePointChromaticityX = \-1.0f\lr8.whitePointChromaticityY = \-1.0f\lr8.maxMasteringLuminance = \-1.0f\lr8.minMasteringLuminance = \-1.0f\lr8.channelCount = 1\lr8.audioBitDepth = \-1\lr8.sampleRate = 8000\lr8.codecDelayNs = 0\lr8.seekPreRollNs = 0\lr8.flagDefault = true\lr8.language = \"eng\"\l}"];
Node_1 [shape=record,label="{1\:\ 0x004f|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.\<init\>((r8v0 'this' com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

