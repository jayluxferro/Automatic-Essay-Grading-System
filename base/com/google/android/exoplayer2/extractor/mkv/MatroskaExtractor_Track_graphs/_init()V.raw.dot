digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x0002: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (\-1082130432(0xffffffffbf800000, float:\-1.0) ?[int, float, short, byte, char])\l \l0x0007: INVOKE  (r8 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x000a: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.width int \l0x000c: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.height int \l0x000e: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.displayWidth int \l0x0010: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.displayHeight int \l0x0012: IPUT  \l  (r3 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.displayUnit int \l0x0014: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: IPUT  \l  (r0 I:byte[])\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.projectionData byte[] \l0x0017: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.stereoMode int \l0x0019: IPUT  \l  (r3 I:boolean)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.hasColorInfo boolean \l0x001b: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.colorSpace int \l0x001d: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.colorTransfer int \l0x001f: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.colorRange int \l0x0021: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1000(0x3e8, float:1.401E\-42) ?[int, float, short, byte, char])\l \l0x0023: IPUT  \l  (r0 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.maxContentLuminance int \l0x0025: CONST  (r0 I:?[int, float, short, byte, char]) = (200(0xc8, float:2.8E\-43) ?[int, float, short, byte, char]) \l0x0027: IPUT  \l  (r0 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.maxFrameAverageLuminance int \l0x0029: IPUT  \l  (r1 I:float)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.primaryRChromaticityX float \l0x002b: IPUT  \l  (r1 I:float)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.primaryRChromaticityY float \l0x002d: IPUT  \l  (r1 I:float)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.primaryGChromaticityX float \l0x002f: IPUT  \l  (r1 I:float)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.primaryGChromaticityY float \l0x0031: IPUT  \l  (r1 I:float)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.primaryBChromaticityX float \l0x0033: IPUT  \l  (r1 I:float)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.primaryBChromaticityY float \l0x0035: IPUT  \l  (r1 I:float)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.whitePointChromaticityX float \l0x0037: IPUT  \l  (r1 I:float)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.whitePointChromaticityY float \l0x0039: IPUT  \l  (r1 I:float)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.maxMasteringLuminance float \l0x003b: IPUT  \l  (r1 I:float)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.minMasteringLuminance float \l0x003d: IPUT  \l  (r4 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.channelCount int \l0x003f: IPUT  \l  (r2 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.audioBitDepth int \l0x0041: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (8000(0x1f40, float:1.121E\-41) ?[int, float, short, byte, char])\l \l0x0043: IPUT  \l  (r0 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.sampleRate int \l0x0045: IPUT  \l  (r6 I:long)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.codecDelayNs long \l0x0047: IPUT  \l  (r6 I:long)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.seekPreRollNs long \l0x0049: IPUT  \l  (r4 I:boolean)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.flagDefault boolean \l0x004b: CONST_STR  (r0 I:java.lang.String) =  \"eng\" \l0x004d: IPUT  \l  (r0 I:java.lang.String)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.language java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x004f|0x004f: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.\<init\>((r8 'this' I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

