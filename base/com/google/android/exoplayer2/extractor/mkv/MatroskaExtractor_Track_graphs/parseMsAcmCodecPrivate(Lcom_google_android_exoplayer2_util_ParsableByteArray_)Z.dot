digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.parseMsAcmCodecPrivate(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\lSplitter:B:1:0x0002\l|int r1 = r8.readLittleEndianUnsignedShort()     \/\/ Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l|if (r1 != 1) goto L_0x0009     \/\/ Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l|if (r1 != com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.WAVE_FORMAT_EXTENSIBLE) goto L_0x0035     \/\/ Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l|r8.setPosition(24)     \/\/ Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l|if ((r8.readLong() \> com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.access$300().getMostSignificantBits() ? 1 : (r8.readLong() == com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.access$300().getMostSignificantBits() ? 0 : \-1)) != 0) goto L_0x0033     \/\/ Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e}"];
Node_10 [shape=record,label="{10\:\ 0x0031|if ((r8.readLong() \> com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.access$300().getLeastSignificantBits() ? 1 : (r8.readLong() == com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.access$300().getLeastSignificantBits() ? 0 : \-1)) == 0) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033}"];
Node_12 [shape=record,label="{12\:\ 0x0035}"];
Node_13 [shape=record,label="{13\:\ 0x0037|ExcHandler: ArrayIndexOutOfBoundsException (e java.lang.ArrayIndexOutOfBoundsException)\lSplitter:B:1:0x0002\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038}"];
Node_15 [shape=record,label="{15\:\ 0x003f|throw new com.google.android.exoplayer2.ParserException(\"Error parsing MS\/ACM codec private\")\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lCatch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l|return true     \/\/ Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\lCatch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l|return true     \/\/ Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\lCatch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l|return false     \/\/ Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lCatch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l|return false     \/\/ Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0037 \}\l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.parseMsAcmCodecPrivate((r8v0 'buffer' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_16[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_18;
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

