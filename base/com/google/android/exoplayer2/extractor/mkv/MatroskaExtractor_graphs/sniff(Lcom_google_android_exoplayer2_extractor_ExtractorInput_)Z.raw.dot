digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.sniff(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.mkv.Sniffer) =  com.google.android.exoplayer2.extractor.mkv.Sniffer \l0x0002: INVOKE  (r0 I:com.google.android.exoplayer2.extractor.mkv.Sniffer) com.google.android.exoplayer2.extractor.mkv.Sniffer.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r0 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.Sniffer)\l  (r2 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.mkv.Sniffer.sniff(com.google.android.exoplayer2.extractor.ExtractorInput):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.sniff((r1 'this' I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0009: r2 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

