digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.buildSeekMap()Lcom\/google\/android\/exoplayer2\/extractor\/SeekMap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if ((r13.segmentContentPosition \> \-1 ? 1 : (r13.segmentContentPosition == \-1 ? 0 : \-1)) == 0) goto L_0x0032\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if ((r13.durationUs \> com.google.android.exoplayer2.C1260C.TIME_UNSET ? 1 : (r13.durationUs == com.google.android.exoplayer2.C1260C.TIME_UNSET ? 0 : \-1)) == 0) goto L_0x0032\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if (r13.cueTimesUs == null) goto L_0x0032\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018}"];
Node_7 [shape=record,label="{7\:\ 0x001e|if (r13.cueTimesUs.size() == 0) goto L_0x0032\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020}"];
Node_9 [shape=record,label="{9\:\ 0x0022|if (r13.cueClusterPositions == null) goto L_0x0032\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024}"];
Node_11 [shape=record,label="{11\:\ 0x0030|if (r13.cueClusterPositions.size() == r13.cueTimesUs.size()) goto L_0x003e\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|r13.cueTimesUs = null\lr13.cueClusterPositions = null\l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|int r0 = r13.cueTimesUs.size()\lint[] r4 = new int[r0]\llong[] r3 = new long[r0]\llong[] r1 = new long[r0]\llong[] r5 = new long[r0]\lr2 = 0\l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|LOOP_START\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v5 'i' int) binds: [B:13:0x003e, B:15:0x004f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:14:0x004d\-\>B:15:0x004f\l|if (r2 \>= r0) goto L_0x0065\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|LOOP_END\lLOOP:0: B:14:0x004d\-\>B:15:0x004f\l|r5[r2] = r13.cueTimesUs.get(r2)\lr3[r2] = r13.segmentContentPosition + r13.cueClusterPositions.get(r2)\lint r2 = r2 + 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0065|r2 = 0\l}"];
Node_17 [shape=record,label="{17\:\ 0x0066|LOOP_START\lPHI: r2 \l  PHI: (r2v3 'i' int) = (r2v2 'i' int), (r2v4 'i' int) binds: [B:16:0x0065, B:19:0x006a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:17:0x0066\-\>B:19:0x006a\l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|if (r2 \>= (r0 + \-1)) goto L_0x0080\l}"];
Node_19 [shape=record,label="{19\:\ 0x006a|LOOP_END\lLOOP:1: B:17:0x0066\-\>B:19:0x006a\l|r4[r2] = (int) (r3[r2 + 1] \- r3[r2])\lr1[r2] = r5[r2 + 1] \- r5[r2]\lint r2 = r2 + 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x0080|r4[r0 + \-1] = (int) ((r13.segmentContentPosition + r13.segmentContentSize) \- r3[r0 + \-1])\lr1[r0 + \-1] = r13.durationUs \- r5[r0 + \-1]\lr13.cueTimesUs = null\lr13.cueClusterPositions = null\l}"];
Node_21 [shape=record,label="{21\:\ 0x0065|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0080|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return new com.google.android.exoplayer2.extractor.SeekMap.Unseekable(r13.durationUs)\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return new com.google.android.exoplayer2.extractor.ChunkIndex(r4, r3, r1, r5)\l}"];
MethodNode[shape=record,label="{private com.google.android.exoplayer2.extractor.SeekMap com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.buildSeekMap((r13v0 'this' com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_23;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_14;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_17;
Node_20 -> Node_24;
Node_21 -> Node_16;
Node_22 -> Node_20;
}

