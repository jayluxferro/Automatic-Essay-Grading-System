digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.writeSubripSample(Lcom\/google\/android\/exoplayer2\/extractor\/mkv\/MatroskaExtractor$Track;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.subripSample com.google.android.exoplayer2.util.ParsableByteArray \l0x0002: IGET  (r0 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0004: IGET  (r2 I:long) = \l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.blockDurationUs long \l0x0006: INVOKE  (r0 I:byte[]), (r2 I:long) com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.setSubripSampleEndTimecode(byte[], long):void type: STATIC \l0x0009: IGET  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r5 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track A[D('track' com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)])\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.output com.google.android.exoplayer2.extractor.TrackOutput \l0x000b: IGET  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.subripSample com.google.android.exoplayer2.util.ParsableByteArray \l0x000d: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.subripSample com.google.android.exoplayer2.util.ParsableByteArray \l0x000f: INVOKE  (r2 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x0013: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x0016: IGET  (r0 I:int) = \l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.sampleBytesWritten int \l0x0018: IGET  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.subripSample com.google.android.exoplayer2.util.ParsableByteArray \l0x001a: INVOKE  (r1 I:int) = (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.limit():int type: VIRTUAL \l0x001e: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x001f: IPUT  \l  (r0 I:int)\l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.sampleBytesWritten int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.writeSubripSample((r4 'this' I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track A[D('track' com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0021: r5 'track' com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

