digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.read(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;Lcom\/google\/android\/exoplayer2\/extractor\/PositionHolder;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  \l  (r1 I:boolean)\l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.sampleRead boolean \l0x0003: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('continueReading' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r2 I:boolean) = \l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.sampleRead boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r2 I:com.google.android.exoplayer2.extractor.mkv.EbmlReader) = \l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.reader com.google.android.exoplayer2.extractor.mkv.EbmlReader \l0x000c: INVOKE  (r0 I:boolean A[D('continueReading' boolean)]) = \l  (r2 I:com.google.android.exoplayer2.extractor.mkv.EbmlReader)\l  (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.mkv.EbmlReader.read(com.google.android.exoplayer2.extractor.ExtractorInput):boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('continueReading' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0004 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: INVOKE  (r2 I:long) = \l  (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.getPosition():long type: INTERFACE \l0x0016: INVOKE  (r2 I:boolean) = \l  (r4 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l  (r6 I:com.google.android.exoplayer2.extractor.PositionHolder A[D('seekPosition' com.google.android.exoplayer2.extractor.PositionHolder)])\l  (r2 I:long)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.maybeSeekForCues(com.google.android.exoplayer2.extractor.PositionHolder, long):boolean type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0004 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: RETURN  (r1 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('continueReading' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.read((r4 'this' I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.google.android.exoplayer2.extractor.PositionHolder A[D('seekPosition' com.google.android.exoplayer2.extractor.PositionHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0004\-0x0021: r0 'continueReading' boolean\l  ?\-0x0021: r5 'input' com.google.android.exoplayer2.extractor.ExtractorInput\l  ?\-0x0021: r6 'seekPosition' com.google.android.exoplayer2.extractor.PositionHolder\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_5 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_9;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_9;
}

