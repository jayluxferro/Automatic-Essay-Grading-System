digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.\<init\>(Lcom\/google\/android\/exoplayer2\/extractor\/mkv\/EbmlReader;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[long, double]) = (\-1 ?[long, double]) \l0x0002: CONST  (r0 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0007: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0008: INVOKE  (r6 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x000b: IPUT  \l  (r4 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.segmentContentPosition long \l0x000d: IPUT  \l  (r0 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.timecodeScale long \l0x000f: IPUT  \l  (r0 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.durationTimecode long \l0x0011: IPUT  \l  (r0 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.durationUs long \l0x0013: IPUT  \l  (r4 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cuesContentPosition long \l0x0015: IPUT  \l  (r4 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.seekPositionAfterBuildingCues long \l0x0017: IPUT  \l  (r0 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.clusterTimecodeUs long \l0x0019: IPUT  \l  (r7 I:com.google.android.exoplayer2.extractor.mkv.EbmlReader A[D('reader' com.google.android.exoplayer2.extractor.mkv.EbmlReader)])\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.reader com.google.android.exoplayer2.extractor.mkv.EbmlReader \l0x001b: IGET  (r0 I:com.google.android.exoplayer2.extractor.mkv.EbmlReader) = \l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.reader com.google.android.exoplayer2.extractor.mkv.EbmlReader \l0x001d: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlReaderOutput) =  com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlReaderOutput \l0x001f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$InnerEbmlReaderOutput)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l  (r2 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$1)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.InnerEbmlReaderOutput.\<init\>(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor, com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$1):void type: DIRECT \l0x0023: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.EbmlReader)\l  (r1 I:com.google.android.exoplayer2.extractor.mkv.EbmlReaderOutput)\l com.google.android.exoplayer2.extractor.mkv.EbmlReader.init(com.google.android.exoplayer2.extractor.mkv.EbmlReaderOutput):void type: INTERFACE \l0x0026: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char] A[D('flags' int)]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x008c \l}"];
Node_2 [shape=record,label="{2\:\ 0x002a|0x002a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|0x002b: IPUT  \l  (r0 I:boolean)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.seekForCuesEnabled boolean \l0x002d: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.mkv.VarintReader) =  com.google.android.exoplayer2.extractor.mkv.VarintReader \l0x002f: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.VarintReader)\l com.google.android.exoplayer2.extractor.mkv.VarintReader.\<init\>():void type: DIRECT \l0x0032: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.VarintReader)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.varintReader com.google.android.exoplayer2.extractor.mkv.VarintReader \l0x0034: NEW_INSTANCE  (r0 I:android.util.SparseArray) =  android.util.SparseArray \l0x0036: INVOKE  (r0 I:android.util.SparseArray) android.util.SparseArray.\<init\>():void type: DIRECT \l0x0039: IPUT  \l  (r0 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track\>)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.tracks android.util.SparseArray \l0x003b: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x003d: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x0040: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0042: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0044: INVOKE  (r1 I:java.nio.ByteBuffer) = (r3 I:int) java.nio.ByteBuffer.allocate(int):java.nio.ByteBuffer type: STATIC \l0x0048: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0049: INVOKE  (r1 I:java.nio.ByteBuffer) = (r1 I:java.nio.ByteBuffer), (r2 I:int) java.nio.ByteBuffer.putInt(int):java.nio.ByteBuffer type: VIRTUAL \l0x004d: INVOKE  (r1 I:byte[]) = (r1 I:java.nio.ByteBuffer) java.nio.ByteBuffer.array():byte[] type: VIRTUAL \l0x0051: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:byte[])\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(byte[]):void type: DIRECT \l0x0054: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.vorbisNumPageSamples com.google.android.exoplayer2.util.ParsableByteArray \l0x0056: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0058: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x005b: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.seekEntryIdBytes com.google.android.exoplayer2.util.ParsableByteArray \l0x005d: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x005f: SGET  (r1 I:byte[]) =  com.google.android.exoplayer2.util.NalUnitUtil.NAL_START_CODE byte[] \l0x0061: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:byte[])\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(byte[]):void type: DIRECT \l0x0064: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.nalStartCode com.google.android.exoplayer2.util.ParsableByteArray \l0x0066: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0068: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x006b: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.nalLength com.google.android.exoplayer2.util.ParsableByteArray \l0x006d: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x006f: INVOKE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.\<init\>():void type: DIRECT \l0x0072: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.sampleStrippedBytes com.google.android.exoplayer2.util.ParsableByteArray \l0x0074: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0076: INVOKE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.\<init\>():void type: DIRECT \l0x0079: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.subripSample com.google.android.exoplayer2.util.ParsableByteArray \l0x007b: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x007d: CONST  (r1 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x007f: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x0082: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.encryptionInitializationVector com.google.android.exoplayer2.util.ParsableByteArray \l0x0084: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0086: INVOKE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.\<init\>():void type: DIRECT \l0x0089: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.encryptionSubsampleData com.google.android.exoplayer2.util.ParsableByteArray \l}"];
Node_4 [shape=record,label="{4\:\ 0x008b|0x008b: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x008c|0x008c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{void com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.\<init\>((r6 'this' I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.extractor.mkv.EbmlReader A[D('reader' com.google.android.exoplayer2.extractor.mkv.EbmlReader), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x008d: r7 'reader' com.google.android.exoplayer2.extractor.mkv.EbmlReader\l  ?\-0x008d: r8 'flags' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

