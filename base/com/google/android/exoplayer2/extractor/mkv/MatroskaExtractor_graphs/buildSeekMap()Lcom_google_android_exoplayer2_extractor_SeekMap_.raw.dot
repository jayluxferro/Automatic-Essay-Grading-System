digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.buildSeekMap()Lcom\/google\/android\/exoplayer2\/extractor\/SeekMap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r6 I:long) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.segmentContentPosition long \l0x0003: CONST  (r8 I:?[long, double]) = (\-1 ?[long, double]) \l0x0005: CMP_L  (r6 I:int) = (r6 I:long), (r8 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0032 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r6 I:long) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.durationUs long \l0x000b: CONST  (r8 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0010: CMP_L  (r6 I:int) = (r6 I:long), (r8 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0032 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IGET  (r6 I:com.google.android.exoplayer2.util.LongArray) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueTimesUs com.google.android.exoplayer2.util.LongArray \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0032 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IGET  (r6 I:com.google.android.exoplayer2.util.LongArray) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueTimesUs com.google.android.exoplayer2.util.LongArray \l0x001a: INVOKE  (r6 I:int) = (r6 I:com.google.android.exoplayer2.util.LongArray) com.google.android.exoplayer2.util.LongArray.size():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0032 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IGET  (r6 I:com.google.android.exoplayer2.util.LongArray) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueClusterPositions com.google.android.exoplayer2.util.LongArray \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0032 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: IGET  (r6 I:com.google.android.exoplayer2.util.LongArray) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueClusterPositions com.google.android.exoplayer2.util.LongArray \l0x0026: INVOKE  (r6 I:int) = (r6 I:com.google.android.exoplayer2.util.LongArray) com.google.android.exoplayer2.util.LongArray.size():int type: VIRTUAL \l0x002a: IGET  (r7 I:com.google.android.exoplayer2.util.LongArray) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueTimesUs com.google.android.exoplayer2.util.LongArray \l0x002c: INVOKE  (r7 I:int) = (r7 I:com.google.android.exoplayer2.util.LongArray) com.google.android.exoplayer2.util.LongArray.size():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|0x0032: IPUT  \l  (r12 I:com.google.android.exoplayer2.util.LongArray)\l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueTimesUs com.google.android.exoplayer2.util.LongArray \l0x0034: IPUT  \l  (r12 I:com.google.android.exoplayer2.util.LongArray)\l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueClusterPositions com.google.android.exoplayer2.util.LongArray \l0x0036: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.extractor.SeekMap$Unseekable) =  com.google.android.exoplayer2.extractor.SeekMap$Unseekable \l0x0038: IGET  (r8 I:long) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.durationUs long \l0x003a: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.SeekMap$Unseekable)\l  (r8 I:long)\l com.google.android.exoplayer2.extractor.SeekMap.Unseekable.\<init\>(long):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: RETURN  (r6 I:com.google.android.exoplayer2.extractor.SeekMap) \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: IGET  (r6 I:com.google.android.exoplayer2.util.LongArray) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueTimesUs com.google.android.exoplayer2.util.LongArray \l0x0040: INVOKE  (r0 I:int) = (r6 I:com.google.android.exoplayer2.util.LongArray) com.google.android.exoplayer2.util.LongArray.size():int type: VIRTUAL \l0x0044: NEW_ARRAY  (r4 I:int[]) = (r0 I:int A[D('cuePointsSize' int), IMMUTABLE_TYPE]) type: int[] \l0x0046: NEW_ARRAY  (r3 I:long[]) = (r0 I:int A[D('cuePointsSize' int), IMMUTABLE_TYPE]) type: long[] \l0x0048: NEW_ARRAY  (r1 I:long[]) = (r0 I:int A[D('cuePointsSize' int), IMMUTABLE_TYPE]) type: long[] \l0x004a: NEW_ARRAY  (r5 I:long[]) = (r0 I:int A[D('cuePointsSize' int), IMMUTABLE_TYPE]) type: long[] \l0x004c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|0x004d: IF  (r2 I:?[int, byte, short, char] A[D('i' int)]) \>= (r0 I:?[int, byte, short, char] A[D('cuePointsSize' int)])  \-\> B:17:0x0065 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|0x004f: IGET  (r6 I:com.google.android.exoplayer2.util.LongArray) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueTimesUs com.google.android.exoplayer2.util.LongArray \l0x0051: INVOKE  (r6 I:long) = \l  (r6 I:com.google.android.exoplayer2.util.LongArray)\l  (r2 I:int A[D('i' int)])\l com.google.android.exoplayer2.util.LongArray.get(int):long type: VIRTUAL \l0x0055: APUT  \l  (r5 I:?[long, double][] A[D('timesUs' long[])])\l  (r2 I:?[int, short, byte, char] A[D('i' int)])\l  (r6 I:?[long, double])\l \l0x0057: IGET  (r6 I:long) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.segmentContentPosition long \l0x0059: IGET  (r8 I:com.google.android.exoplayer2.util.LongArray) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueClusterPositions com.google.android.exoplayer2.util.LongArray \l0x005b: INVOKE  (r8 I:long) = \l  (r8 I:com.google.android.exoplayer2.util.LongArray)\l  (r2 I:int A[D('i' int)])\l com.google.android.exoplayer2.util.LongArray.get(int):long type: VIRTUAL \l0x005f: ARITH  (r6 I:long) = (r6 I:long) + (r8 I:long) \l0x0060: APUT  \l  (r3 I:?[long, double][] A[D('offsets' long[])])\l  (r2 I:?[int, short, byte, char] A[D('i' int)])\l  (r6 I:?[long, double])\l \l0x0062: ARITH  (r2 I:int A[D('i' int)]) = (r2 I:int A[D('i' int)]) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0065|0x0065: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0066|0x0066: ARITH  (r6 I:int) = (r0 I:int A[D('cuePointsSize' int)]) + (\-1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0068|0x0068: IF  (r2 I:?[int, byte, short, char] A[D('i' int)]) \>= (r6 I:?[int, byte, short, char])  \-\> B:21:0x0080 \l}"];
Node_20 [shape=record,label="{20\:\ 0x006a|0x006a: ARITH  (r6 I:int) = (r2 I:int A[D('i' int)]) + (1 int) \l0x006c: AGET  (r6 I:?[long, double]) = \l  (r3 I:?[long, double][] A[D('offsets' long[])])\l  (r6 I:?[int, short, byte, char])\l \l0x006e: AGET  (r8 I:?[long, double]) = \l  (r3 I:?[long, double][] A[D('offsets' long[])])\l  (r2 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0070: ARITH  (r6 I:long) = (r6 I:long) \- (r8 I:long) \l0x0071: CAST  (r6 I:int) = (int) (r6 I:long) \l0x0072: APUT  \l  (r4 I:?[int, float][] A[D('sizes' int[])])\l  (r2 I:?[int, short, byte, char] A[D('i' int)])\l  (r6 I:?[int, float])\l \l0x0074: ARITH  (r6 I:int) = (r2 I:int A[D('i' int)]) + (1 int) \l0x0076: AGET  (r6 I:?[long, double]) = \l  (r5 I:?[long, double][] A[D('timesUs' long[])])\l  (r6 I:?[int, short, byte, char])\l \l0x0078: AGET  (r8 I:?[long, double]) = \l  (r5 I:?[long, double][] A[D('timesUs' long[])])\l  (r2 I:?[int, short, byte, char] A[D('i' int)])\l \l0x007a: ARITH  (r6 I:long) = (r6 I:long) \- (r8 I:long) \l0x007b: APUT  \l  (r1 I:?[long, double][] A[D('durationsUs' long[])])\l  (r2 I:?[int, short, byte, char] A[D('i' int)])\l  (r6 I:?[long, double])\l \l0x007d: ARITH  (r2 I:int A[D('i' int)]) = (r2 I:int A[D('i' int)]) + (1 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0080|0x0080: ARITH  (r6 I:int) = (r0 I:int A[D('cuePointsSize' int)]) + (\-1 int) \l0x0082: IGET  (r8 I:long) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.segmentContentPosition long \l0x0084: IGET  (r10 I:long) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.segmentContentSize long \l0x0086: ARITH  (r8 I:long) = (r8 I:long) + (r10 I:long) \l0x0087: ARITH  (r7 I:int) = (r0 I:int A[D('cuePointsSize' int)]) + (\-1 int) \l0x0089: AGET  (r10 I:?[long, double]) = \l  (r3 I:?[long, double][] A[D('offsets' long[])])\l  (r7 I:?[int, short, byte, char])\l \l0x008b: ARITH  (r8 I:long) = (r8 I:long) \- (r10 I:long) \l0x008c: CAST  (r7 I:int) = (int) (r8 I:long) \l0x008d: APUT  \l  (r4 I:?[int, float][] A[D('sizes' int[])])\l  (r6 I:?[int, short, byte, char])\l  (r7 I:?[int, float])\l \l0x008f: ARITH  (r6 I:int) = (r0 I:int A[D('cuePointsSize' int)]) + (\-1 int) \l0x0091: IGET  (r8 I:long) = \l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.durationUs long \l0x0093: ARITH  (r7 I:int) = (r0 I:int A[D('cuePointsSize' int)]) + (\-1 int) \l0x0095: AGET  (r10 I:?[long, double]) = \l  (r5 I:?[long, double][] A[D('timesUs' long[])])\l  (r7 I:?[int, short, byte, char])\l \l0x0097: ARITH  (r8 I:long) = (r8 I:long) \- (r10 I:long) \l0x0098: APUT  \l  (r1 I:?[long, double][] A[D('durationsUs' long[])])\l  (r6 I:?[int, short, byte, char])\l  (r8 I:?[long, double])\l \l0x009a: IPUT  \l  (r12 I:com.google.android.exoplayer2.util.LongArray)\l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueTimesUs com.google.android.exoplayer2.util.LongArray \l0x009c: IPUT  \l  (r12 I:com.google.android.exoplayer2.util.LongArray)\l  (r13 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cueClusterPositions com.google.android.exoplayer2.util.LongArray \l0x009e: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) =  com.google.android.exoplayer2.extractor.ChunkIndex \l0x00a0: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex)\l  (r4 I:int[] A[D('sizes' int[])])\l  (r3 I:long[] A[D('offsets' long[])])\l  (r1 I:long[] A[D('durationsUs' long[])])\l  (r5 I:long[] A[D('timesUs' long[])])\l com.google.android.exoplayer2.extractor.ChunkIndex.\<init\>(int[], long[], long[], long[]):void type: DIRECT \l}"];
MethodNode[shape=record,label="{private com.google.android.exoplayer2.extractor.SeekMap com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.buildSeekMap((r13 'this' I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0044\-0x00a3: r0 'cuePointsSize' int\l  0x004a\-0x00a3: r1 'durationsUs' long[]\l  0x004d\-0x00a3: r2 'i' int\l  0x0048\-0x00a3: r3 'offsets' long[]\l  0x0046\-0x00a3: r4 'sizes' int[]\l  0x004c\-0x00a3: r5 'timesUs' long[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_15;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_18;
Node_21 -> Node_13;
}

