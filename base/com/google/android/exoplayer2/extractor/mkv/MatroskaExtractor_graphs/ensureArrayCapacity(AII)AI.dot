digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.ensureArrayCapacity([II)[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r1 != null) goto L_0x0005\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r1.length \>= r2) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return new int[r2]\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return new int[java.lang.Math.max(r1.length * 2, r2)]\l}"];
MethodNode[shape=record,label="{private static int[] com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.ensureArrayCapacity((r1v0 'array' int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'length' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_7;
}

