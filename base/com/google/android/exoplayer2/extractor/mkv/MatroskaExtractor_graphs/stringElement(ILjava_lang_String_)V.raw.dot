digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.stringElement(ILjava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('id' int)])\l k:[134, 17026, 2274716] t:[0x0033, 0x0004, 0x0038] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: RETURN   \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST_STR  (r0 I:java.lang.String) =  \"webm\" \l0x0006: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.String)\l  (r5 I:java.lang.Object A[D('value' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0003 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST_STR  (r0 I:java.lang.String) =  \"matroska\" \l0x000e: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.String)\l  (r5 I:java.lang.Object A[D('value' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0003 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0016: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0018: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001b: CONST_STR  (r2 I:java.lang.String) =  \"DocType \" \l0x001d: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0021: INVOKE  (r1 I:java.lang.StringBuilder) = \l  (r1 I:java.lang.StringBuilder)\l  (r5 I:java.lang.String A[D('value' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: CONST_STR  (r2 I:java.lang.String) =  \" not supported\" \l0x0027: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002b: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002f: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ParserException)\l  (r1 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|0x0032: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|0x0033: IGET  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r3 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x0035: IPUT  \l  (r5 I:java.lang.String A[D('value' java.lang.String)])\l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.codecId java.lang.String \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: IGET  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r3 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x003a: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l  (r5 I:java.lang.String A[D('value' java.lang.String)])\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.access$202(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track, java.lang.String):java.lang.String type: STATIC \l}"];
MethodNode[shape=record,label="{void com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.stringElement((r3 'this' I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[D('value' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x004b: r4 'id' int\l  ?\-0x004b: r5 'value' java.lang.String\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2;
Node_0 -> Node_8;
Node_0 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_1;
Node_3 -> Node_4[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_1;
Node_5 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_1;
Node_9 -> Node_1;
}

