digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.endMasterElement(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|switch(r9) \{\l    case com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.ID_BLOCK_GROUP :int: goto L_0x0056;\l    case com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.ID_TRACK_ENTRY :int: goto L_0x00bb;\l    case com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.ID_SEEK :int: goto L_0x0025;\l    case com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.ID_CONTENT_ENCODING :int: goto L_0x0077;\l    case com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.ID_CONTENT_ENCODINGS :int: goto L_0x00a7;\l    case 357149030: goto L_0x000b;\l    case com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.ID_TRACKS :int: goto L_0x00e0;\l    case com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.ID_CUES :int: goto L_0x0046;\l    default: goto L_0x000a;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if ((r8.timecodeScale \> com.google.android.exoplayer2.C1260C.TIME_UNSET ? 1 : (r8.timecodeScale == com.google.android.exoplayer2.C1260C.TIME_UNSET ? 0 : \-1)) != 0) goto L_0x0016\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|r8.timecodeScale = com.google.android.exoplayer2.C1260C.MICROS_PER_SECOND\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if ((r8.durationTimecode \> com.google.android.exoplayer2.C1260C.TIME_UNSET ? 1 : (r8.durationTimecode == com.google.android.exoplayer2.C1260C.TIME_UNSET ? 0 : \-1)) == 0) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|r8.durationUs = scaleTimecodeToUs(r8.durationTimecode)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025}"];
Node_9 [shape=record,label="{9\:\ 0x0028|if (r8.seekEntryId == \-1) goto L_0x0032\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a}"];
Node_11 [shape=record,label="{11\:\ 0x0030|if ((r8.seekEntryPosition \> \-1 ? 1 : (r8.seekEntryPosition == \-1 ? 0 : \-1)) != 0) goto L_0x003a\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032}"];
Node_13 [shape=record,label="{13\:\ 0x0039|throw new com.google.android.exoplayer2.ParserException(\"Mandatory element SeekID or SeekPosition not found\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x003a}"];
Node_15 [shape=record,label="{15\:\ 0x003f|if (r8.seekEntryId != ID_CUES) goto L_?\l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|r8.cuesContentPosition = r8.seekEntryPosition\l}"];
Node_17 [shape=record,label="{17\:\ 0x0046}"];
Node_18 [shape=record,label="{18\:\ 0x0048|if (r8.sentSeekMap != false) goto L_?\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|r8.extractorOutput.seekMap(buildSeekMap())\lr8.sentSeekMap = true\l}"];
Node_20 [shape=record,label="{20\:\ 0x0056}"];
Node_21 [shape=record,label="{21\:\ 0x0059|if (r8.blockState != 2) goto L_?\l}"];
Node_22 [shape=record,label="{22\:\ 0x005b}"];
Node_23 [shape=record,label="{23\:\ 0x005d|if (r8.sampleSeenReferenceBlock != false) goto L_0x0065\l}"];
Node_24 [shape=record,label="{24\:\ 0x005f|r8.blockFlags = r8.blockFlags \| 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0065|commitSampleToOutput(r8.tracks.get(r8.blockTrackNumber), r8.blockTimeUs)\lr8.blockState = 0\l}"];
Node_26 [shape=record,label="{26\:\ 0x0077}"];
Node_27 [shape=record,label="{27\:\ 0x007b|if (r8.currentTrack.hasContentEncryption == false) goto L_?\l}"];
Node_28 [shape=record,label="{28\:\ 0x007d}"];
Node_29 [shape=record,label="{29\:\ 0x0081|if (r8.currentTrack.encryptionKeyId != null) goto L_0x008b\l}"];
Node_30 [shape=record,label="{30\:\ 0x0083}"];
Node_31 [shape=record,label="{31\:\ 0x008a|throw new com.google.android.exoplayer2.ParserException(\"Encrypted Track found but ContentEncKeyID was not found\")\l}"];
Node_32 [shape=record,label="{32\:\ 0x008b|com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track r0 = r8.currentTrack\lcom.google.android.exoplayer2.drm.DrmInitData$SchemeData[] r2 = new com.google.android.exoplayer2.drm.DrmInitData.SchemeData[]\{new com.google.android.exoplayer2.drm.DrmInitData.SchemeData(com.google.android.exoplayer2.C1260C.UUID_NIL, com.google.android.exoplayer2.util.MimeTypes.VIDEO_WEBM, r8.currentTrack.encryptionKeyId)\}\lr0.drmInitData = new com.google.android.exoplayer2.drm.DrmInitData(r2)\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a7}"];
Node_34 [shape=record,label="{34\:\ 0x00ab|if (r8.currentTrack.hasContentEncryption == false) goto L_?\l}"];
Node_35 [shape=record,label="{35\:\ 0x00ad}"];
Node_36 [shape=record,label="{36\:\ 0x00b1|if (r8.currentTrack.sampleStrippedBytes == null) goto L_?\l}"];
Node_37 [shape=record,label="{37\:\ 0x00b3}"];
Node_38 [shape=record,label="{38\:\ 0x00ba|throw new com.google.android.exoplayer2.ParserException(\"Combining encryption and compression is not supported\")\l}"];
Node_39 [shape=record,label="{39\:\ 0x00bb}"];
Node_40 [shape=record,label="{40\:\ 0x00c3|if (isCodecSupported(r8.currentTrack.codecId) == false) goto L_0x00db\l}"];
Node_41 [shape=record,label="{41\:\ 0x00c5|r8.currentTrack.initializeOutput(r8.extractorOutput, r8.currentTrack.number)\lr8.tracks.put(r8.currentTrack.number, r8.currentTrack)\l}"];
Node_42 [shape=record,label="{42\:\ 0x00db|r8.currentTrack = null\l}"];
Node_43 [shape=record,label="{43\:\ 0x00e0}"];
Node_44 [shape=record,label="{44\:\ 0x00e6|if (r8.tracks.size() != 0) goto L_0x00f0\l}"];
Node_45 [shape=record,label="{45\:\ 0x00e8}"];
Node_46 [shape=record,label="{46\:\ 0x00ef|throw new com.google.android.exoplayer2.ParserException(\"No valid tracks were found\")\l}"];
Node_47 [shape=record,label="{47\:\ 0x00f0|r8.extractorOutput.endTracks()\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_54 [shape=record,label="{54\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_58 [shape=record,label="{58\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_60 [shape=record,label="{60\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_62 [shape=record,label="{62\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.endMasterElement((r8v0 'this' com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor A[IMMUTABLE_TYPE, THIS]), (r9v0 'id' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_1 -> Node_17;
Node_1 -> Node_20;
Node_1 -> Node_26;
Node_1 -> Node_33;
Node_1 -> Node_39;
Node_1 -> Node_43;
Node_1 -> Node_48;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_49;
Node_7 -> Node_50;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_51;
Node_16 -> Node_52;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_53;
Node_19 -> Node_54;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_55;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_56;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_57;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_30 -> Node_31;
Node_32 -> Node_58;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_59;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_60;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_61;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_47;
Node_45 -> Node_46;
Node_47 -> Node_62;
}

