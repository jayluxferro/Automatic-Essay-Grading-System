digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.endMasterElement(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0005: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0006: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: SWITCH  \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('id' int)])\l k:[160, 174, 19899, 25152, 28032, 357149030, 374648427, 475249515] t:[0x0056, 0x00bb, 0x0025, 0x0077, 0x00a7, 0x000b, 0x00e0, 0x0046] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r0 I:long) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.timecodeScale long \l0x000d: CMP_L  (r0 I:int) = (r0 I:long), (r4 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: CONST  (r0 I:?[long, double]) = (1000000(0xf4240, double:4.940656E\-318) ?[long, double]) \l0x0014: IPUT  \l  (r0 I:long)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.timecodeScale long \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IGET  (r0 I:long) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.durationTimecode long \l0x0018: CMP_L  (r0 I:int) = (r0 I:long), (r4 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IGET  (r0 I:long) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.durationTimecode long \l0x001e: INVOKE  (r0 I:long) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l  (r0 I:long)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.scaleTimecodeToUs(long):long type: DIRECT \l0x0022: IPUT  \l  (r0 I:long)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.durationUs long \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IGET  (r0 I:int) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.seekEntryId int \l0x0027: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0032 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: IGET  (r0 I:long) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.seekEntryPosition long \l0x002c: CONST  (r2 I:?[long, double]) = (\-1 ?[long, double]) \l0x002e: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003a \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0034: CONST_STR  (r1 I:java.lang.String) =  \"Mandatory element SeekID or SeekPosition not found\" \l0x0036: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ParserException)\l  (r1 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|0x0039: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|0x003a: IGET  (r0 I:int) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.seekEntryId int \l0x003c: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (475249515(0x1c53bb6b, float:7.0056276E\-22) ?[int, float, short, byte, char])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|0x0041: IGET  (r0 I:long) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.seekEntryPosition long \l0x0043: IPUT  \l  (r0 I:long)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.cuesContentPosition long \l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: IGET  (r0 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.sentSeekMap boolean \l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|0x0048: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_20 [shape=record,label="{20\:\ 0x004a|0x004a: IGET  (r0 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.extractorOutput com.google.android.exoplayer2.extractor.ExtractorOutput \l0x004c: INVOKE  (r1 I:com.google.android.exoplayer2.extractor.SeekMap) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.buildSeekMap():com.google.android.exoplayer2.extractor.SeekMap type: DIRECT \l0x0050: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l  (r1 I:com.google.android.exoplayer2.extractor.SeekMap)\l com.google.android.exoplayer2.extractor.ExtractorOutput.seekMap(com.google.android.exoplayer2.extractor.SeekMap):void type: INTERFACE \l0x0053: IPUT  \l  (r2 I:boolean)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.sentSeekMap boolean \l}"];
Node_21 [shape=record,label="{21\:\ 0x0056|0x0056: IGET  (r0 I:int) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.blockState int \l0x0058: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0059|0x0059: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_23 [shape=record,label="{23\:\ 0x005b|0x005b: IGET  (r0 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.sampleSeenReferenceBlock boolean \l}"];
Node_24 [shape=record,label="{24\:\ 0x005d|0x005d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0065 \l}"];
Node_25 [shape=record,label="{25\:\ 0x005f|0x005f: IGET  (r0 I:int) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.blockFlags int \l0x0061: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (1 ?[boolean, int, float, short, byte, char]) \l0x0063: IPUT  \l  (r0 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.blockFlags int \l}"];
Node_26 [shape=record,label="{26\:\ 0x0065|0x0065: IGET  (r0 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track\>) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.tracks android.util.SparseArray \l0x0067: IGET  (r1 I:int) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.blockTrackNumber int \l0x0069: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.util.SparseArray), (r1 I:int) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x006d: CHECK_CAST  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = (com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) (r0 I:?[OBJECT, ARRAY]) \l0x006f: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.blockTimeUs long \l0x0071: INVOKE  \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l  (r2 I:long)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.commitSampleToOutput(com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track, long):void type: DIRECT \l0x0074: IPUT  \l  (r7 I:int)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.blockState int \l}"];
Node_27 [shape=record,label="{27\:\ 0x0077|0x0077: IGET  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x0079: IGET  (r0 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.hasContentEncryption boolean \l}"];
Node_28 [shape=record,label="{28\:\ 0x007b|0x007b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_29 [shape=record,label="{29\:\ 0x007d|0x007d: IGET  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x007f: IGET  (r0 I:byte[]) = \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.encryptionKeyId byte[] \l}"];
Node_30 [shape=record,label="{30\:\ 0x0081|0x0081: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x008b \l}"];
Node_31 [shape=record,label="{31\:\ 0x0083|0x0083: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0085: CONST_STR  (r1 I:java.lang.String) =  \"Encrypted Track found but ContentEncKeyID was not found\" \l0x0087: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ParserException)\l  (r1 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x008a|0x008a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ 0x008b|0x008b: IGET  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x008d: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.drm.DrmInitData) =  com.google.android.exoplayer2.drm.DrmInitData \l0x008f: NEW_ARRAY  (r2 I:com.google.android.exoplayer2.drm.DrmInitData$SchemeData[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.drm.DrmInitData$SchemeData[] \l0x0091: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.drm.DrmInitData$SchemeData) =  com.google.android.exoplayer2.drm.DrmInitData$SchemeData \l0x0093: SGET  (r4 I:java.util.UUID) =  com.google.android.exoplayer2.C.UUID_NIL java.util.UUID \l0x0095: CONST_STR  (r5 I:java.lang.String) =  \"video\/webm\" \l0x0097: IGET  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x0099: IGET  (r6 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.encryptionKeyId byte[] \l0x009b: INVOKE  \l  (r3 I:com.google.android.exoplayer2.drm.DrmInitData$SchemeData)\l  (r4 I:java.util.UUID)\l  (r5 I:java.lang.String)\l  (r6 I:byte[])\l com.google.android.exoplayer2.drm.DrmInitData.SchemeData.\<init\>(java.util.UUID, java.lang.String, byte[]):void type: DIRECT \l0x009e: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x00a0: INVOKE  \l  (r1 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r2 I:com.google.android.exoplayer2.drm.DrmInitData$SchemeData[])\l com.google.android.exoplayer2.drm.DrmInitData.\<init\>(com.google.android.exoplayer2.drm.DrmInitData$SchemeData[]):void type: DIRECT \l0x00a3: IPUT  \l  (r1 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.drmInitData com.google.android.exoplayer2.drm.DrmInitData \l}"];
Node_34 [shape=record,label="{34\:\ 0x00a7|0x00a7: IGET  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x00a9: IGET  (r0 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.hasContentEncryption boolean \l}"];
Node_35 [shape=record,label="{35\:\ 0x00ab|0x00ab: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_36 [shape=record,label="{36\:\ 0x00ad|0x00ad: IGET  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x00af: IGET  (r0 I:byte[]) = \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.sampleStrippedBytes byte[] \l}"];
Node_37 [shape=record,label="{37\:\ 0x00b1|0x00b1: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000a \l}"];
Node_38 [shape=record,label="{38\:\ 0x00b3|0x00b3: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x00b5: CONST_STR  (r1 I:java.lang.String) =  \"Combining encryption and compression is not supported\" \l0x00b7: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ParserException)\l  (r1 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_39 [shape=record,label="{39\:\ 0x00ba|0x00ba: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_40 [shape=record,label="{40\:\ 0x00bb|0x00bb: IGET  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x00bd: IGET  (r0 I:java.lang.String) = \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.codecId java.lang.String \l0x00bf: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String) com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.isCodecSupported(java.lang.String):boolean type: STATIC \l}"];
Node_41 [shape=record,label="{41\:\ 0x00c3|0x00c3: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x00db \l}"];
Node_42 [shape=record,label="{42\:\ 0x00c5|0x00c5: IGET  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x00c7: IGET  (r1 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.extractorOutput com.google.android.exoplayer2.extractor.ExtractorOutput \l0x00c9: IGET  (r2 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x00cb: IGET  (r2 I:int) = \l  (r2 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.number int \l0x00cd: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l  (r1 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.initializeOutput(com.google.android.exoplayer2.extractor.ExtractorOutput, int):void type: VIRTUAL \l0x00d0: IGET  (r0 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track\>) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.tracks android.util.SparseArray \l0x00d2: IGET  (r1 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x00d4: IGET  (r1 I:int) = \l  (r1 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track.number int \l0x00d6: IGET  (r2 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l0x00d8: INVOKE  \l  (r0 I:android.util.SparseArray)\l  (r1 I:int)\l  (r2 I:java.lang.Object)\l android.util.SparseArray.put(int, java.lang.Object):void type: VIRTUAL \l}"];
Node_43 [shape=record,label="{43\:\ 0x00db|0x00db: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00dc: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track)\l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.currentTrack com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track \l}"];
Node_44 [shape=record,label="{44\:\ 0x00e0|0x00e0: IGET  (r0 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Track\>) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.tracks android.util.SparseArray \l0x00e2: INVOKE  (r0 I:int) = (r0 I:android.util.SparseArray) android.util.SparseArray.size():int type: VIRTUAL \l}"];
Node_45 [shape=record,label="{45\:\ 0x00e6|0x00e6: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00f0 \l}"];
Node_46 [shape=record,label="{46\:\ 0x00e8|0x00e8: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x00ea: CONST_STR  (r1 I:java.lang.String) =  \"No valid tracks were found\" \l0x00ec: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ParserException)\l  (r1 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_47 [shape=record,label="{47\:\ 0x00ef|0x00ef: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00f0|0x00f0: IGET  (r0 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r8 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.extractorOutput com.google.android.exoplayer2.extractor.ExtractorOutput \l0x00f2: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l com.google.android.exoplayer2.extractor.ExtractorOutput.endTracks():void type: INTERFACE \l}"];
MethodNode[shape=record,label="{void com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.endMasterElement((r8 'this' I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0119: r9 'id' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_9;
Node_1 -> Node_18;
Node_1 -> Node_21;
Node_1 -> Node_27;
Node_1 -> Node_34;
Node_1 -> Node_40;
Node_1 -> Node_44;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_2;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_2;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_2;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_2;
Node_18 -> Node_19;
Node_19 -> Node_2;
Node_19 -> Node_20[style=dashed];
Node_20 -> Node_2;
Node_21 -> Node_22;
Node_22 -> Node_2;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_2;
Node_27 -> Node_28;
Node_28 -> Node_2;
Node_28 -> Node_29[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_33 -> Node_2;
Node_34 -> Node_35;
Node_35 -> Node_2;
Node_35 -> Node_36[style=dashed];
Node_36 -> Node_37;
Node_37 -> Node_2;
Node_37 -> Node_38[style=dashed];
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_2;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_48;
Node_46 -> Node_47;
Node_48 -> Node_2;
}

