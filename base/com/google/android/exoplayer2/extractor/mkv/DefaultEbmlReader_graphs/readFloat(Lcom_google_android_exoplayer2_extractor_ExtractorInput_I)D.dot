digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.readFloat(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;I)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long r2 = readInteger(r6, r7)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r7 != 4) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x000e}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (double) java.lang.Float.intBitsToFloat((int) r2)\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Double.longBitsToDouble(r2)\l}"];
MethodNode[shape=record,label="{private double com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.readFloat((r5v0 'this' com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader A[IMMUTABLE_TYPE, THIS]), (r6v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'byteLength' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_5;
}

