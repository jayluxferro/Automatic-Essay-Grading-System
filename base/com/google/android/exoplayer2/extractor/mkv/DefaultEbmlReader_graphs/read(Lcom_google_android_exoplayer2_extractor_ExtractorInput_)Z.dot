digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.read(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r11.output == null) goto L_0x0037\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v1 boolean), (r0v61 boolean) binds: [B:9:0x0037, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|LOOP_START\lLOOP:0: B:4:0x0008\-\>B:45:0x0178\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r11.masterElementsStack.isEmpty() != false) goto L_0x0039\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010}"];
Node_7 [shape=record,label="{7\:\ 0x0022|if ((r12.getPosition() \> com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.MasterElement.access$000(r11.masterElementsStack.peek()) ? 1 : (r12.getPosition() == com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.MasterElement.access$000(r11.masterElementsStack.peek()) ? 0 : \-1)) \< 0) goto L_0x0039\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|r11.output.endMasterElement(com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.MasterElement.access$100(r11.masterElementsStack.pop()))\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|r0 = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039}"];
Node_11 [shape=record,label="{11\:\ 0x003b|if (r11.elementState != 0) goto L_0x005e\l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|long r8 = r11.varintReader.readUnsignedVarint(r12, true, false, 4)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|if ((r8 \> \-2 ? 1 : (r8 == \-2 ? 0 : \-1)) != 0) goto L_0x0050\l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|long r8 = maybeResyncToNextLevel1Element(r12)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|PHI: r8 \l  PHI: (r8v1 'result' long) = (r8v0 'result' long), (r8v2 'result' long) binds: [B:13:0x004a, B:14:0x004c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0054|if ((r8 \> \-1 ? 1 : (r8 == \-1 ? 0 : \-1)) != 0) goto L_0x0058\l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|SYNTHETIC\lRETURN\l|return false\l}"];
Node_18 [shape=record,label="{18\:\ 0x0058|r11.elementId = (int) r8\lr11.elementState = 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x005e}"];
Node_20 [shape=record,label="{20\:\ 0x0061|if (r11.elementState != 1) goto L_0x0072\l}"];
Node_21 [shape=record,label="{21\:\ 0x0063|r11.elementContentSize = r11.varintReader.readUnsignedVarint(r12, false, true, 8)\lr11.elementState = 2\l}"];
Node_22 [shape=record,label="{22\:\ 0x0072|int r10 = r11.output.getElementType(r11.elementId)\l}"];
Node_23 [shape=record,label="{23\:\ 0x007a|switch(r10) \{\l    case 0: goto L_0x0178;\l    case 1: goto L_0x0096;\l    case 2: goto L_0x00ba;\l    case 3: goto L_0x0130;\l    case 4: goto L_0x0168;\l    case 5: goto L_0x00f1;\l    default: goto L_0x007d;\l\}\l}"];
Node_24 [shape=record,label="{24\:\ 0x007d}"];
Node_25 [shape=record,label="{25\:\ 0x0095|throw new com.google.android.exoplayer2.ParserException(new java.lang.StringBuilder().append(\"Invalid element type \").append(r10).toString())\l}"];
Node_26 [shape=record,label="{26\:\ 0x0096|long r2 = r12.getPosition()\llong r6 = r2 + r11.elementContentSize\lr11.masterElementsStack.add(new com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.MasterElement(r11.elementId, r6, (com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.C12931) null))\lr11.output.startMasterElement(r11.elementId, r2, r11.elementContentSize)\lr11.elementState = 0\l}"];
Node_27 [shape=record,label="{27\:\ 0x00ba}"];
Node_28 [shape=record,label="{28\:\ 0x00c0|if ((r11.elementContentSize \> 8 ? 1 : (r11.elementContentSize == 8 ? 0 : \-1)) \<= 0) goto L_0x00dd\l}"];
Node_29 [shape=record,label="{29\:\ 0x00c2}"];
Node_30 [shape=record,label="{30\:\ 0x00dc|throw new com.google.android.exoplayer2.ParserException(new java.lang.StringBuilder().append(\"Invalid integer size: \").append(r11.elementContentSize).toString())\l}"];
Node_31 [shape=record,label="{31\:\ 0x00dd|r11.output.integerElement(r11.elementId, readInteger(r12, (int) r11.elementContentSize))\lr11.elementState = 0\l}"];
Node_32 [shape=record,label="{32\:\ 0x00f1}"];
Node_33 [shape=record,label="{33\:\ 0x00f7|if ((r11.elementContentSize \> 4 ? 1 : (r11.elementContentSize == 4 ? 0 : \-1)) == 0) goto L_0x011c\l}"];
Node_34 [shape=record,label="{34\:\ 0x00f9}"];
Node_35 [shape=record,label="{35\:\ 0x00ff|if ((r11.elementContentSize \> 8 ? 1 : (r11.elementContentSize == 8 ? 0 : \-1)) == 0) goto L_0x011c\l}"];
Node_36 [shape=record,label="{36\:\ 0x0101}"];
Node_37 [shape=record,label="{37\:\ 0x011b|throw new com.google.android.exoplayer2.ParserException(new java.lang.StringBuilder().append(\"Invalid float size: \").append(r11.elementContentSize).toString())\l}"];
Node_38 [shape=record,label="{38\:\ 0x011c|r11.output.floatElement(r11.elementId, readFloat(r12, (int) r11.elementContentSize))\lr11.elementState = 0\l}"];
Node_39 [shape=record,label="{39\:\ 0x0130}"];
Node_40 [shape=record,label="{40\:\ 0x0137|if ((r11.elementContentSize \> 2147483647L ? 1 : (r11.elementContentSize == 2147483647L ? 0 : \-1)) \<= 0) goto L_0x0154\l}"];
Node_41 [shape=record,label="{41\:\ 0x0139}"];
Node_42 [shape=record,label="{42\:\ 0x0153|throw new com.google.android.exoplayer2.ParserException(new java.lang.StringBuilder().append(\"String element size: \").append(r11.elementContentSize).toString())\l}"];
Node_43 [shape=record,label="{43\:\ 0x0154|r11.output.stringElement(r11.elementId, readString(r12, (int) r11.elementContentSize))\lr11.elementState = 0\l}"];
Node_44 [shape=record,label="{44\:\ 0x0168|r11.output.binaryElement(r11.elementId, (int) r11.elementContentSize, r12)\lr11.elementState = 0\l}"];
Node_45 [shape=record,label="{45\:\ 0x0178|LOOP_END\lLOOP:0: B:4:0x0008\-\>B:45:0x0178\l|r12.skipFully((int) r11.elementContentSize)\lr11.elementState = 0\l}"];
Node_46 [shape=record,label="{46\:\ 0x0024|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0056|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x007d|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0096|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x00ba|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x00f1|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0130|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0168|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_55 [shape=record,label="{55\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_56 [shape=record,label="{56\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_57 [shape=record,label="{57\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_58 [shape=record,label="{58\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.read((r11v0 'this' com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader A[IMMUTABLE_TYPE, THIS]), (r12v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_10;
Node_7 -> Node_46[style=dashed];
Node_8 -> Node_54;
Node_9 -> Node_3;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_47[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_45;
Node_23 -> Node_48;
Node_23 -> Node_49;
Node_23 -> Node_50;
Node_23 -> Node_51;
Node_23 -> Node_52;
Node_23 -> Node_53;
Node_24 -> Node_25;
Node_26 -> Node_55;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_31 -> Node_56;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_38;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_37;
Node_38 -> Node_57;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_43;
Node_41 -> Node_42;
Node_43 -> Node_58;
Node_44 -> Node_59;
Node_45 -> Node_4;
Node_46 -> Node_8;
Node_47 -> Node_17;
Node_48 -> Node_24;
Node_49 -> Node_26;
Node_50 -> Node_27;
Node_51 -> Node_32;
Node_52 -> Node_39;
Node_53 -> Node_44;
}

