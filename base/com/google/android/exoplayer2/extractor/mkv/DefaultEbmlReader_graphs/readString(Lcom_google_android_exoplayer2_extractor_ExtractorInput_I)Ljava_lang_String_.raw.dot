digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.readString(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;I)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('byteLength' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST_STR  (r1 I:java.lang.String) =  \"\" \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r1 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: NEW_ARRAY  (r0 I:byte[]) = (r4 I:int A[D('byteLength' int), IMMUTABLE_TYPE]) type: byte[] \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r0 I:byte[] A[D('stringBytes' byte[])])\l  (r1 I:int)\l  (r4 I:int A[D('byteLength' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.readFully(byte[], int, int):void type: INTERFACE \l0x000b: NEW_INSTANCE  (r1 I:java.lang.String) =  java.lang.String \l0x000d: INVOKE  \l  (r1 I:java.lang.String)\l  (r0 I:byte[] A[D('stringBytes' byte[])])\l java.lang.String.\<init\>(byte[]):void type: DIRECT \l}"];
MethodNode[shape=record,label="{private java.lang.String com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.readString((r2 'this' I:com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('byteLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0007\-0x0010: r0 'stringBytes' byte[]\l  ?\-0x0010: r3 'input' com.google.android.exoplayer2.extractor.ExtractorInput\l  ?\-0x0010: r4 'byteLength' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_2;
}

