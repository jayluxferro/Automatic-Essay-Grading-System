digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.readFloat(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;I)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:long) = \l  (r5 I:com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader)\l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r7 I:int A[D('byteLength' int)])\l com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.readInteger(com.google.android.exoplayer2.extractor.ExtractorInput, int):long type: DIRECT \l0x0004: CONST  (r4 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('byteLength' int)]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: CAST  (r4 I:int) = (int) (r2 I:long A[D('integerValue' long)]) \l0x0008: INVOKE  (r4 I:float) = (r4 I:int) java.lang.Float.intBitsToFloat(int):float type: STATIC \l0x000c: CAST  (r0 I:double) = (double) (r4 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r0 I:double A[D('floatValue' double)]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  (r0 I:double A[D('floatValue' double)]) = (r2 I:long A[D('integerValue' long)]) java.lang.Double.longBitsToDouble(long):double type: STATIC \l}"];
MethodNode[shape=record,label="{private double com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.readFloat((r5 'this' I:com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader A[IMMUTABLE_TYPE, THIS]), (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('byteLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000d\-0x000e: r0 'floatValue' double\l  0x0012\-0x0012: r0 'floatValue' double\l  0x0004\-0x0012: r2 'integerValue' long\l  ?\-0x0012: r6 'input' com.google.android.exoplayer2.extractor.ExtractorInput\l  ?\-0x0012: r7 'byteLength' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
}

