digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.maybeResyncToNextLevel1Element(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0001: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.resetPeekPosition():void type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IGET  (r2 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader)\l com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.scratch byte[] \l0x0007: INVOKE  \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:byte[])\l  (r4 I:int)\l  (r5 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x000a: IGET  (r2 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader)\l com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.scratch byte[] \l0x000c: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x000e: INVOKE  (r1 I:int) = (r2 I:int) com.google.android.exoplayer2.extractor.mkv.VarintReader.parseUnsignedVarintLength(int):int type: STATIC \l0x0012: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('varintLength' int)]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002b \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r1 I:?[int, byte, short, char] A[D('varintLength' int)]) \> (r5 I:?[int, byte, short, char])  \-\> B:8:0x002b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IGET  (r2 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader)\l com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.scratch byte[] \l0x0019: INVOKE  (r2 I:long) = \l  (r2 I:byte[])\l  (r1 I:int A[D('varintLength' int)])\l  (r4 I:boolean)\l com.google.android.exoplayer2.extractor.mkv.VarintReader.assembleVarint(byte[], int, boolean):long type: STATIC \l0x001d: CAST  (r0 I:int) = (int) (r2 I:long) \l0x001e: IGET  (r2 I:com.google.android.exoplayer2.extractor.mkv.EbmlReaderOutput) = \l  (r6 I:com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader)\l com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.output com.google.android.exoplayer2.extractor.mkv.EbmlReaderOutput \l0x0020: INVOKE  (r2 I:boolean) = \l  (r2 I:com.google.android.exoplayer2.extractor.mkv.EbmlReaderOutput)\l  (r0 I:int A[D('potentialId' int)])\l com.google.android.exoplayer2.extractor.mkv.EbmlReaderOutput.isLevel1Element(int):boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: INVOKE  \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r1 I:int A[D('varintLength' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.skipFully(int):void type: INTERFACE \l0x0029: CAST  (r2 I:long) = (long) (r0 I:int A[D('potentialId' int)]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: RETURN  (r2 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002c: INVOKE  \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.skipFully(int):void type: INTERFACE \l}"];
MethodNode[shape=record,label="{private long com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.maybeResyncToNextLevel1Element((r6 'this' I:com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001e\-0x002b: r0 'potentialId' int\l  0x0012\-0x002f: r1 'varintLength' int\l  ?\-0x002f: r7 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_1;
}

