digraph "CFG forcom.google.android.exoplayer2.extractor.mkv.VarintReader.assembleVarint([BIZ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[long, double]) = (255(0xff, double:1.26E\-321) ?[long, double]) \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[D('varintBytes' byte[]), IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0005: CAST  (r4 I:long) = (long) (r1 I:int) \l0x0006: ARITH  (r2 I:long) = (r4 I:long) & (r8 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('removeLengthMask' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: SGET  (r1 I:long[]) =  com.google.android.exoplayer2.extractor.mkv.VarintReader.VARINT_LENGTH_MASKS long[] \l0x000c: ARITH  (r4 I:int) = (r11 I:int A[D('varintLength' int)]) + (\-1 int) \l0x000e: AGET  (r4 I:?[long, double]) = (r1 I:?[long, double][]), (r4 I:?[int, short, byte, char]) \l0x0010: CONST  (r6 I:?[long, double]) = (\-1 ?[long, double]) \l0x0012: ARITH  (r4 I:long) = (r4 I:long) ^ (r6 I:long) \l0x0013: ARITH  (r2 I:long A[D('varint' long)]) = (r2 I:long A[D('varint' long)]) & (r4 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r11 I:?[int, byte, short, char] A[D('varintLength' int)])  \-\> B:6:0x0024 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: CONST  (r1 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0019: ARITH  (r4 I:long) = (r2 I:long A[D('varint' long)]) \<\< (r1 I:long) \l0x001b: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[D('varintBytes' byte[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l0x001d: CAST  (r6 I:long) = (long) (r1 I:int) \l0x001e: ARITH  (r6 I:long) = (r6 I:long) & (r8 I:long) \l0x001f: ARITH  (r2 I:long A[D('varint' long)]) = (r4 I:long) \| (r6 I:long) \l0x0021: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: RETURN  (r2 I:long A[D('varint' long)]) \l}"];
MethodNode[shape=record,label="{public static long com.google.android.exoplayer2.extractor.mkv.VarintReader.assembleVarint((r10 I:byte[] A[D('varintBytes' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('varintLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[D('removeLengthMask' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0015\-0x0024: r0 'i' int\l  0x0008\-0x0024: r2 'varint' long\l  ?\-0x0024: r10 'varintBytes' byte[]\l  ?\-0x0024: r11 'varintLength' int\l  ?\-0x0024: r12 'removeLengthMask' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_4;
}

