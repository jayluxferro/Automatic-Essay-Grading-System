digraph "CFG forcom.google.android.exoplayer2.extractor.wav.WavExtractor.read(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;Lcom\/google\/android\/exoplayer2\/extractor\/PositionHolder;)I" {
subgraph cluster_Region_220948729 {
label = "R(7:(2:2|(2:(1:5)|(1:6)))|(1:9)|10|(1:12)|13|(1:15)|17)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_467250210 {
label = "IF [B:1:0x0004] THEN: R(2:2|(2:(1:5)|(1:6))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r17.wavHeader == null) goto L_0x0006\l}"];
subgraph cluster_Region_571604255 {
label = "R(2:2|(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|r17.wavHeader = com.google.android.exoplayer2.extractor.wav.WavHeaderReader.peek(r18)\l}"];
subgraph cluster_Region_2135469691 {
label = "R(2:(1:5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_128045563 {
label = "IF [B:3:0x0012] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0012|if (r17.wavHeader == null) goto L_0x0014\l}"];
subgraph cluster_Region_1372571025 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001b|throw new com.google.android.exoplayer2.ParserException(\"Unsupported or unrecognized wav header.\")\l}"];
}
}
subgraph cluster_Region_2082157490 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001c|r17.trackOutput.format(com.google.android.exoplayer2.Format.createAudioSampleFormat((java.lang.String) null, com.google.android.exoplayer2.util.MimeTypes.AUDIO_RAW, (java.lang.String) null, r17.wavHeader.getBitrate(), 32768, r17.wavHeader.getNumChannels(), r17.wavHeader.getSampleRateHz(), r17.wavHeader.getEncoding(), (java.util.List\<byte[]\>) null, (com.google.android.exoplayer2.drm.DrmInitData) null, 0, (java.lang.String) null))\lr17.bytesPerFrame = r17.wavHeader.getBytesPerFrame()\l}"];
}
}
}
}
subgraph cluster_IfRegion_1184526652 {
label = "IF [B:8:0x0066] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0066|if (r17.wavHeader.hasDataBounds() == false) goto L_0x0068\l}"];
subgraph cluster_Region_1329417757 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0068|com.google.android.exoplayer2.extractor.wav.WavHeaderReader.skipToData(r18, r17.wavHeader)\lr17.extractorOutput.seekMap(r17)\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x007a|int int r14 = r17.trackOutput.sampleData(r18, 32768 \- r17.pendingBytes, true)\l}"];
subgraph cluster_IfRegion_643063464 {
label = "IF [B:11:0x008e] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x008e|if (r14 != \-1) goto L_0x0090\l}"];
subgraph cluster_Region_1059526377 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0090|r17.pendingBytes += r14\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0099|int int r16 = r17.pendingBytes \/ r17.bytesPerFrame\l}"];
subgraph cluster_IfRegion_693695207 {
label = "IF [B:14:0x00a3] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x00a3|if (r16 \> 0) goto L_0x00a5\l}"];
subgraph cluster_Region_2137144213 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x00a5|long long r4 = r17.wavHeader.getTimeUs(r18.getPosition() \- ((long) r17.pendingBytes))\lint int r7 = r16 * r17.bytesPerFrame\lr17.pendingBytes \-= r7\lr17.trackOutput.sampleMetadata(r4, 1, r7, r17.pendingBytes, (byte[]) null)\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x00d4|RETURN\l|return r14 == \-1 ? \-1 : 0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0014}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x005e}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x00d3}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x00d6|SYNTHETIC\lORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x00d8|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.extractor.wav.WavExtractor.read((r17v0 'this' com.google.android.exoplayer2.extractor.wav.WavExtractor A[IMMUTABLE_TYPE, THIS]), (r18v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'seekPosition' com.google.android.exoplayer2.extractor.PositionHolder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_19;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_16 -> Node_17;
}

