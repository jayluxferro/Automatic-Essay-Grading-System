digraph "CFG forcom.google.android.exoplayer2.extractor.wav.WavHeaderReader.ChunkHeader.\<init\>(IJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:int A[D('id' int)])\l  (r0 I:com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader)\l com.google.android.exoplayer2.extractor.wav.WavHeaderReader.ChunkHeader.id int \l0x0005: IPUT  \l  (r2 I:long A[D('size' long)])\l  (r0 I:com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader)\l com.google.android.exoplayer2.extractor.wav.WavHeaderReader.ChunkHeader.size long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.wav.WavHeaderReader.ChunkHeader.\<init\>((r0 'this' I:com.google.android.exoplayer2.extractor.wav.WavHeaderReader$ChunkHeader A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:long A[D('size' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0007: r1 'id' int\l  ?\-0x0007: r2 'size' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

