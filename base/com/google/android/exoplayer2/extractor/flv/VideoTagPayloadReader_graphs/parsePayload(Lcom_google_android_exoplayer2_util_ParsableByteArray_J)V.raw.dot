digraph "CFG forcom.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.parsePayload(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r20 I:int) = \l  (r23 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL \l0x0004: INVOKE  (r16 I:int) = \l  (r23 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt24():int type: VIRTUAL \l0x0008: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('compositionTimeMs' int)])\l \l0x000a: CAST  (r2 I:long) = (long) (r0 I:int) \l0x000b: CONST  (r4 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x000d: ARITH  (r2 I:long) = (r2 I:long) * (r4 I:long) \l0x000e: ARITH  (r24 I:long A[D('timeUs' long)]) = (r24 I:long A[D('timeUs' long)]) + (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('packetType' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0062 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0014: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.hasOutputFormat boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0062 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: NEW_INSTANCE  (r21 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x001a: INVOKE  (r2 I:int) = \l  (r23 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x001e: NEW_ARRAY  (r2 I:byte[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0020: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:byte[])\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(byte[]):void type: DIRECT \l0x0025: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('videoSequence' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0027: IGET  (r2 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0029: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002a: INVOKE  (r4 I:int) = \l  (r23 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l0x002e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x0030: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:byte[])\l  (r3 I:int)\l  (r4 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l0x0033: INVOKE  (r14 I:com.google.android.exoplayer2.video.AvcConfig) = \l  (r21 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('videoSequence' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.video.AvcConfig.parse(com.google.android.exoplayer2.util.ParsableByteArray):com.google.android.exoplayer2.video.AvcConfig type: STATIC \l0x0037: IGET  (r2 I:int) = \l  (r14 I:com.google.android.exoplayer2.video.AvcConfig A[D('avcConfig' com.google.android.exoplayer2.video.AvcConfig)])\l com.google.android.exoplayer2.video.AvcConfig.nalUnitLengthFieldLength int \l0x0039: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x003b: IPUT  \l  (r2 I:int)\l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.nalUnitLengthFieldLength int \l0x003d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003e: CONST_STR  (r3 I:java.lang.String) =  \"video\/avc\" \l0x0040: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0042: CONST  (r6 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0043: IGET  (r7 I:int) = \l  (r14 I:com.google.android.exoplayer2.video.AvcConfig A[D('avcConfig' com.google.android.exoplayer2.video.AvcConfig)])\l com.google.android.exoplayer2.video.AvcConfig.width int \l0x0045: IGET  (r8 I:int) = \l  (r14 I:com.google.android.exoplayer2.video.AvcConfig A[D('avcConfig' com.google.android.exoplayer2.video.AvcConfig)])\l com.google.android.exoplayer2.video.AvcConfig.height int \l0x0047: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (\-1082130432(0xffffffffbf800000, float:\-1.0) ?[int, float, short, byte, char])\l \l0x0049: IGET  (r10 I:java.util.List\<byte[]\>) = \l  (r14 I:com.google.android.exoplayer2.video.AvcConfig A[D('avcConfig' com.google.android.exoplayer2.video.AvcConfig)])\l com.google.android.exoplayer2.video.AvcConfig.initializationData java.util.List \l0x004b: CONST  (r11 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x004c: IGET  (r12 I:float) = \l  (r14 I:com.google.android.exoplayer2.video.AvcConfig A[D('avcConfig' com.google.android.exoplayer2.video.AvcConfig)])\l com.google.android.exoplayer2.video.AvcConfig.pixelWidthAspectRatio float \l0x004e: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004f: INVOKE  (r17 I:com.google.android.exoplayer2.Format) = \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:float)\l  (r10 I:java.util.List)\l  (r11 I:int)\l  (r12 I:float)\l  (r13 I:com.google.android.exoplayer2.drm.DrmInitData)\l com.google.android.exoplayer2.Format.createVideoSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, int, int, float, java.util.List, int, float, com.google.android.exoplayer2.drm.DrmInitData):com.google.android.exoplayer2.Format type: STATIC \l0x0053: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0055: IGET  (r2 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x0057: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('format' com.google.android.exoplayer2.Format)])\l \l0x0059: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r0 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.extractor.TrackOutput.format(com.google.android.exoplayer2.Format):void type: INTERFACE \l0x005c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x005d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x005f: IPUT  \l  (r2 I:boolean)\l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.hasOutputFormat boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0061|0x0061: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0062|0x0062: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0063: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('packetType' int)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0065|0x0065: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0061 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0067|0x0067: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0069: IGET  (r2 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.hasOutputFormat boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x006b|0x006b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0061 \l}"];
Node_10 [shape=record,label="{10\:\ 0x006d|0x006d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x006f: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.nalLength com.google.android.exoplayer2.util.ParsableByteArray \l0x0071: IGET  (r0 I:byte[]) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0073: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0075: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0076: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0077: APUT  \l  (r18 I:byte[] A[D('nalLengthData' byte[]), IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:byte A[IMMUTABLE_TYPE])\l \l0x0079: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x007a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007b: APUT  \l  (r18 I:byte[] A[D('nalLengthData' byte[]), IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:byte A[IMMUTABLE_TYPE])\l \l0x007d: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x007e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007f: APUT  \l  (r18 I:byte[] A[D('nalLengthData' byte[]), IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:byte A[IMMUTABLE_TYPE])\l \l0x0081: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0083: IGET  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.nalUnitLengthFieldLength int \l0x0085: ARITH  (r19 I:int) = (4 int) \- (r2 I:int) \l0x0087: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0088|0x0088: INVOKE  (r2 I:int) = \l  (r23 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.bytesLeft():int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x008c|0x008c: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x00d0 \l}"];
Node_13 [shape=record,label="{13\:\ 0x008e|0x008e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0090: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.nalLength com.google.android.exoplayer2.util.ParsableByteArray \l0x0092: IGET  (r2 I:byte[]) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0094: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0096: IGET  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.nalUnitLengthFieldLength int \l0x0098: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x009a: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('nalUnitLengthFieldLengthDiff' int)])\l \l0x009c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:byte[])\l  (r1 I:int)\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.readBytes(byte[], int, int):void type: VIRTUAL \l0x009f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00a1: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.nalLength com.google.android.exoplayer2.util.ParsableByteArray \l0x00a3: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a4: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x00a7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00a9: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.nalLength com.google.android.exoplayer2.util.ParsableByteArray \l0x00ab: INVOKE  (r15 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedIntToInt():int type: VIRTUAL \l0x00af: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00b1: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.nalStartCode com.google.android.exoplayer2.util.ParsableByteArray \l0x00b3: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b4: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x00b7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00b9: IGET  (r2 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x00bb: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00bd: IGET  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.nalStartCode com.google.android.exoplayer2.util.ParsableByteArray \l0x00bf: CONST  (r4 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x00c0: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r3 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r4 I:int)\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x00c3: ARITH  (r7 I:int A[D('bytesWritten' int)]) = (r7 I:int A[D('bytesWritten' int)]) + (4 int) \l0x00c5: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00c7: IGET  (r2 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x00c9: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l \l0x00cb: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r15 I:int A[D('bytesToWrite' int)])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.util.ParsableByteArray, int):void type: INTERFACE \l0x00ce: ARITH  (r7 I:int A[D('bytesWritten' int)]) = (r7 I:int A[D('bytesWritten' int)]) + (r15 I:int A[D('bytesToWrite' int)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00d0|0x00d0: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00d2: IGET  (r3 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.output com.google.android.exoplayer2.extractor.TrackOutput \l0x00d4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00d6: IGET  (r2 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader)\l com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.frameType int \l0x00d8: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x00d9|0x00d9: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x00e5 \l}"];
Node_16 [shape=record,label="{16\:\ 0x00db|0x00db: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x00dc|0x00dc: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00dd: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00de: MOVE  (r4 I:?[long, double]) = (r24 I:?[long, double] A[D('timeUs' long)]) \l0x00e0: INVOKE  \l  (r3 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r4 I:long)\l  (r6 I:int)\l  (r7 I:int A[D('bytesWritten' int)])\l  (r8 I:int)\l  (r9 I:byte[])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleMetadata(long, int, int, int, byte[]):void type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x00e5|0x00e5: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.parsePayload((r22 'this' I:com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader A[IMMUTABLE_TYPE, THIS]), (r23 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:long A[D('timeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0037\-0x0061: r14 'avcConfig' com.google.android.exoplayer2.video.AvcConfig\l  0x0053\-0x0061: r17 'format' com.google.android.exoplayer2.Format\l  0x0025\-0x0061: r21 'videoSequence' com.google.android.exoplayer2.util.ParsableByteArray\l  0x00af\-0x00d0: r15 'bytesToWrite' int\l  0x0088\-0x00e6: r7 'bytesWritten' int\l  0x0008\-0x00e6: r16 'compositionTimeMs' int\l  0x0075\-0x00e6: r18 'nalLengthData' byte[]\l  0x0087\-0x00e6: r19 'nalUnitLengthFieldLengthDiff' int\l  0x0004\-0x00e6: r20 'packetType' int\l  ?\-0x00e6: r23 'data' com.google.android.exoplayer2.util.ParsableByteArray\l  ?\-0x00e6: r24 'timeUs' long\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_5;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_5;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_5;
Node_18 -> Node_17;
}

