digraph "CFG forcom.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.parsePayload(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r20 = r23.readUnsignedByte()\llong r24 = r24 + (((long) r23.readUnsignedInt24()) * 1000)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r20 != 0) goto L_0x0062\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012}"];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r22.hasOutputFormat != false) goto L_0x0062\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|com.google.android.exoplayer2.util.ParsableByteArray r0 = new com.google.android.exoplayer2.util.ParsableByteArray(new byte[r23.bytesLeft()])\lr0 = r23\lr0.readBytes(r0.data, 0, r23.bytesLeft())\lcom.google.android.exoplayer2.video.AvcConfig r14 = com.google.android.exoplayer2.video.AvcConfig.parse(r0)\lr22.nalUnitLengthFieldLength = r14.nalUnitLengthFieldLength\lcom.google.android.exoplayer2.Format r17 = com.google.android.exoplayer2.Format.createVideoSampleFormat((java.lang.String) null, com.google.android.exoplayer2.util.MimeTypes.VIDEO_H264, (java.lang.String) null, \-1, \-1, r14.width, r14.height, \-1.0f, r14.initializationData, \-1, r14.pixelWidthAspectRatio, (com.google.android.exoplayer2.drm.DrmInitData) null)\lr22.output.format(r17)\lr22.hasOutputFormat = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0062}"];
Node_6 [shape=record,label="{6\:\ 0x0065|if (r20 != 1) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x0067}"];
Node_8 [shape=record,label="{8\:\ 0x006b|if (r22.hasOutputFormat == false) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x006d|r18 = r22.nalLength.data\lr18[0] = 0\lr18[1] = 0\lr18[2] = 0\lint r19 = 4 \- r22.nalUnitLengthFieldLength\lr7 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0088|LOOP_START\lPHI: r7 \l  PHI: (r7v1 'bytesWritten' int) = (r7v0 'bytesWritten' int), (r7v3 'bytesWritten' int) binds: [B:9:0x006d, B:12:0x008e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x0088\-\>B:12:0x008e\l}"];
Node_11 [shape=record,label="{11\:\ 0x008c|if (r23.bytesLeft() \<= 0) goto L_0x00d0\l}"];
Node_12 [shape=record,label="{12\:\ 0x008e|LOOP_END\lLOOP:0: B:10:0x0088\-\>B:12:0x008e\l|byte[] r2 = r22.nalLength.data\lint r3 = r22.nalUnitLengthFieldLength\lr23.readBytes(r2, r19, r3)\lr22.nalLength.setPosition(0)\lint r15 = r22.nalLength.readUnsignedIntToInt()\lr22.nalStartCode.setPosition(0)\lr22.output.sampleData(r22.nalStartCode, 4)\lr22.output.sampleData(r23, r15)\lint r7 = (r7 + 4) + r15\l}"];
Node_13 [shape=record,label="{13\:\ 0x00d0|com.google.android.exoplayer2.extractor.TrackOutput r3 = r22.output\l}"];
Node_14 [shape=record,label="{14\:\ 0x00d9|if (r22.frameType != 1) goto L_0x00e5\l}"];
Node_15 [shape=record,label="{15\:\ 0x00db|r6 = 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x00dc|PHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:17:0x00e5, B:15:0x00db] A[DONT_GENERATE, DONT_INLINE]\l|r3.sampleMetadata(r24, r6, r7, 0, (byte[]) null)\l}"];
Node_17 [shape=record,label="{17\:\ 0x00e5|r6 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x00d0|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.parsePayload((r22v0 'this' com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader A[IMMUTABLE_TYPE, THIS]), (r23v0 'data' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'timeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_19;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_21;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_10;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_22;
Node_17 -> Node_16;
Node_18 -> Node_13;
}

