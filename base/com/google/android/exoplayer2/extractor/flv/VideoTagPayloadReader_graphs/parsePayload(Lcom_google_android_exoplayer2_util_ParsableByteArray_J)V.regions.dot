digraph "CFG forcom.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.parsePayload(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;J)V" {
subgraph cluster_Region_677929113 {
label = "R(2:0|(1:4)(1:(3:9|(1:12)|16)(0)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r20 = r23.readUnsignedByte()\llong long r24 = r24 + (((long) r23.readUnsignedInt24()) * 1000)\l}"];
subgraph cluster_IfRegion_937176168 {
label = "IF [B:1:0x0010, B:3:0x0016] THEN: R(1:4) ELSE: R(1:(3:9|(1:12)|16)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r20 == 0) goto L_0x0012\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|ADDED_TO_REGION\l|if (r22.hasOutputFormat != true) goto L_0x0018\l}"];
subgraph cluster_Region_661913222 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|com.google.android.exoplayer2.util.ParsableByteArray com.google.android.exoplayer2.util.ParsableByteArray r0 = new com.google.android.exoplayer2.util.ParsableByteArray(new byte[r23.bytesLeft()])\lr23.readBytes(r0.data, 0, r23.bytesLeft())\lcom.google.android.exoplayer2.video.AvcConfig com.google.android.exoplayer2.video.AvcConfig r14 = com.google.android.exoplayer2.video.AvcConfig.parse(r0)\lr22.nalUnitLengthFieldLength = r14.nalUnitLengthFieldLength\lr22.output.format(com.google.android.exoplayer2.Format.createVideoSampleFormat((java.lang.String) null, com.google.android.exoplayer2.util.MimeTypes.VIDEO_H264, (java.lang.String) null, \-1, \-1, r14.width, r14.height, \-1.0f, r14.initializationData, \-1, r14.pixelWidthAspectRatio, (com.google.android.exoplayer2.drm.DrmInitData) null))\lr22.hasOutputFormat = true\l}"];
}
subgraph cluster_Region_1043264658 {
label = "R(1:(3:9|(1:12)|16)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1369684853 {
label = "IF [B:6:0x0065, B:8:0x006b] THEN: R(3:9|(1:12)|16) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0065|if (r20 == 1) goto L_0x0067\l}"];
Node_8 [shape=record,label="{8\:\ 0x006b|ADDED_TO_REGION\l|if (r22.hasOutputFormat != false) goto L_0x006d\l}"];
subgraph cluster_Region_438166739 {
label = "R(3:9|(1:12)|16)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x006d|byte[] r18 = r22.nalLength.data\lr18[0] = 0\lr18[1] = 0\lr18[2] = 0\lint int r19 = 4 \- r22.nalUnitLengthFieldLength\lint r7 = 0\l}"];
subgraph cluster_LoopRegion_110209567 {
label = "LOOP:0: (1:12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x008c|if (r23.bytesLeft() \> 0) goto L_0x008e\l}"];
subgraph cluster_Region_1897538465 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x008e|LOOP_END\lLOOP:0: B:10:0x0088\-\>B:12:0x008e\l|r23.readBytes(r22.nalLength.data, r19, r22.nalUnitLengthFieldLength)\lr22.nalLength.setPosition(0)\lint int r15 = r22.nalLength.readUnsignedIntToInt()\lr22.nalStartCode.setPosition(0)\lr22.output.sampleData(r22.nalStartCode, 4)\lr22.output.sampleData(r23, r15)\lint r7 = r7 + 4 + r15\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x00dc|PHI: r6 \l  PHI: (r6v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r22.output.sampleMetadata(r24, r22.frameType == 1 ? 1 : 0, r7, 0, (byte[]) null)\l}"];
}
subgraph cluster_Region_1359545394 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0012}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0062}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0067}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0088|LOOP_START\lPHI: r7 \l  PHI: (r7v1 'bytesWritten' int) = (r7v0 'bytesWritten' int), (r7v3 'bytesWritten' int) binds: [B:9:0x006d, B:12:0x008e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x0088\-\>B:12:0x008e\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x00d0}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x00d9}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x00db}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x00e5}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x00d0|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader.parsePayload((r22v0 'this' com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader A[IMMUTABLE_TYPE, THIS]), (r23v0 'data' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'timeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_19;
Node_6 -> Node_7;
Node_6 -> Node_20[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_21[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_18[style=dashed];
Node_12 -> Node_10;
Node_16 -> Node_22;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_16;
Node_18 -> Node_13;
}

