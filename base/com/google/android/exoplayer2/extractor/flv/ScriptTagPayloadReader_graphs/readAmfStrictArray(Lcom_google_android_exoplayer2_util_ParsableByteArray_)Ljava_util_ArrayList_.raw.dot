digraph "CFG forcom.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfStrictArray(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Ljava\/util\/ArrayList;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedIntToInt():int type: VIRTUAL \l0x0004: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0006: INVOKE  (r2 I:java.util.ArrayList), (r0 I:int A[D('count' int)]) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r0 I:?[int, byte, short, char] A[D('count' int)])  \-\> B:3:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r3 I:int) = \l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfType(com.google.android.exoplayer2.util.ParsableByteArray):int type: STATIC \l0x0010: INVOKE  (r4 I:java.lang.Object) = \l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r3 I:int A[D('type' int)])\l com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfData(com.google.android.exoplayer2.util.ParsableByteArray, int):java.lang.Object type: STATIC \l0x0014: INVOKE  \l  (r2 I:java.util.ArrayList A[D('list' java.util.ArrayList\<java.lang.Object\>)])\l  (r4 I:java.lang.Object)\l java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0017: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: RETURN  \l  (r2 I:java.util.ArrayList\<java.lang.Object\> A[D('list' java.util.ArrayList\<java.lang.Object\>)])\l \l}"];
MethodNode[shape=record,label="{private static java.util.ArrayList\<java.lang.Object\> com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfStrictArray((r5 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0010\-0x001a: r3 'type' int\l  0x0004\-0x001a: r0 'count' int\l  0x000a\-0x001a: r1 'i' int\l  0x0009\-0x001a: r2 'list' java.util.ArrayList\<java.lang.Object\>\l  ?\-0x001a: r5 'data' com.google.android.exoplayer2.util.ParsableByteArray\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;, ), Ljava\/util\/ArrayList, \<, Ljava\/lang\/Object;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

