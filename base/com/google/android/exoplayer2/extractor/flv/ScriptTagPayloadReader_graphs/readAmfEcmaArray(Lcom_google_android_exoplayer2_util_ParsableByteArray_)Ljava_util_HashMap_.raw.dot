digraph "CFG forcom.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfEcmaArray(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Ljava\/util\/HashMap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:int) = \l  (r6 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedIntToInt():int type: VIRTUAL \l0x0004: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0006: INVOKE  (r0 I:java.util.HashMap), (r1 I:int A[D('count' int)]) java.util.HashMap.\<init\>(int):void type: DIRECT \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r2 I:?[int, byte, short, char] A[D('i' int)]) \>= (r1 I:?[int, byte, short, char] A[D('count' int)])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r3 I:java.lang.String) = \l  (r6 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfString(com.google.android.exoplayer2.util.ParsableByteArray):java.lang.String type: STATIC \l0x0010: INVOKE  (r4 I:int) = \l  (r6 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfType(com.google.android.exoplayer2.util.ParsableByteArray):int type: STATIC \l0x0014: INVOKE  (r5 I:java.lang.Object) = \l  (r6 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r4 I:int A[D('type' int)])\l com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfData(com.google.android.exoplayer2.util.ParsableByteArray, int):java.lang.Object type: STATIC \l0x0018: INVOKE  \l  (r0 I:java.util.HashMap A[D('array' java.util.HashMap\<java.lang.String, java.lang.Object\>)])\l  (r3 I:java.lang.Object A[D('key' java.lang.String)])\l  (r5 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x001b: ARITH  (r2 I:int A[D('i' int)]) = (r2 I:int A[D('i' int)]) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: RETURN  \l  (r0 I:java.util.HashMap\<java.lang.String, java.lang.Object\> A[D('array' java.util.HashMap\<java.lang.String, java.lang.Object\>)])\l \l}"];
MethodNode[shape=record,label="{private static java.util.HashMap\<java.lang.String, java.lang.Object\> com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfEcmaArray((r6 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0010\-0x001e: r3 'key' java.lang.String\l  0x0014\-0x001e: r4 'type' int\l  0x0009\-0x001e: r0 'array' java.util.HashMap\<java.lang.String, java.lang.Object\>\l  0x0004\-0x001e: r1 'count' int\l  0x000a\-0x001e: r2 'i' int\l  ?\-0x001e: r6 'data' com.google.android.exoplayer2.util.ParsableByteArray\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;, ), Ljava\/util\/HashMap, \<, Ljava\/lang\/String;, Ljava\/lang\/Object;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

