digraph "CFG forcom.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfData(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;I)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|switch(r2) \{\l    case 0: goto L_0x0005;\l    case 1: goto L_0x000a;\l    case 2: goto L_0x000f;\l    case 3: goto L_0x0014;\l    case 4: goto L_0x0003;\l    case 5: goto L_0x0003;\l    case 6: goto L_0x0003;\l    case 7: goto L_0x0003;\l    case 8: goto L_0x0019;\l    case 9: goto L_0x0003;\l    case 10: goto L_0x001e;\l    case 11: goto L_0x0023;\l    default: goto L_0x0003;\l\}\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x000a}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0014}"];
Node_6 [shape=record,label="{6\:\ 0x0019}"];
Node_7 [shape=record,label="{7\:\ 0x001e}"];
Node_8 [shape=record,label="{8\:\ 0x0023}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return readAmfDouble(r1)\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return readAmfBoolean(r1)\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return readAmfString(r1)\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return readAmfObject(r1)\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return readAmfEcmaArray(r1)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return readAmfStrictArray(r1)\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return readAmfDate(r1)\l}"];
MethodNode[shape=record,label="{private static java.lang.Object com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader.readAmfData((r1v0 'data' com.google.android.exoplayer2.util.ParsableByteArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'type' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2;
Node_0 -> Node_3;
Node_0 -> Node_4;
Node_0 -> Node_5;
Node_0 -> Node_6;
Node_0 -> Node_7;
Node_0 -> Node_8;
Node_2 -> Node_9;
Node_3 -> Node_10;
Node_4 -> Node_11;
Node_5 -> Node_12;
Node_6 -> Node_13;
Node_7 -> Node_14;
Node_8 -> Node_15;
}

