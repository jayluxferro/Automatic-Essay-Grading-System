digraph "CFG forcom.google.android.exoplayer2.extractor.flv.FlvExtractor.prepareTagData(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r0 I:int) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagDataSize int \l0x0003: IGET  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagData com.google.android.exoplayer2.util.ParsableByteArray \l0x0005: INVOKE  (r1 I:int) = (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.capacity():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:5:0x0033 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagData com.google.android.exoplayer2.util.ParsableByteArray \l0x000d: IGET  (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagData com.google.android.exoplayer2.util.ParsableByteArray \l0x000f: INVOKE  (r1 I:int) = (r1 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.capacity():int type: VIRTUAL \l0x0013: ARITH  (r1 I:int) = (r1 I:int) * (2 int) \l0x0015: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagDataSize int \l0x0017: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x001b: NEW_ARRAY  (r1 I:byte[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x001d: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:byte[])\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.reset(byte[], int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagData com.google.android.exoplayer2.util.ParsableByteArray \l0x0022: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagDataSize int \l0x0024: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setLimit(int):void type: VIRTUAL \l0x0027: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagData com.google.android.exoplayer2.util.ParsableByteArray \l0x0029: IGET  (r0 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x002b: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagDataSize int \l0x002d: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r0 I:byte[])\l  (r3 I:int)\l  (r1 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.readFully(byte[], int, int):void type: INTERFACE \l0x0030: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagData com.google.android.exoplayer2.util.ParsableByteArray \l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|0x0032: RETURN  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r4 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.tagData com.google.android.exoplayer2.util.ParsableByteArray \l0x0035: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r3 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private com.google.android.exoplayer2.util.ParsableByteArray com.google.android.exoplayer2.extractor.flv.FlvExtractor.prepareTagData((r4 'this' I:com.google.android.exoplayer2.extractor.flv.FlvExtractor A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0038: r5 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

