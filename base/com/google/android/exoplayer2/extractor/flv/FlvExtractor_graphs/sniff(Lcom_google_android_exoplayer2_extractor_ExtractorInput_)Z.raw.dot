digraph "CFG forcom.google.android.exoplayer2.extractor.flv.FlvExtractor.sniff(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0004: IGET  (r2 I:byte[]) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0006: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0007: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:byte[])\l  (r1 I:int)\l  (r3 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x000a: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x000c: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x000f: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0011: INVOKE  (r2 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt24():int type: VIRTUAL \l0x0015: SGET  (r3 I:int) =  com.google.android.exoplayer2.extractor.flv.FlvExtractor.FLV_TAG int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|0x0019: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x001c: IGET  (r2 I:byte[]) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x001e: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001f: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:byte[])\l  (r1 I:int)\l  (r3 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x0022: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0024: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0027: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0029: INVOKE  (r2 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedShort():int type: VIRTUAL \l0x002d: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (250(0xfa, float:3.5E\-43) ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0019 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0033: IGET  (r2 I:byte[]) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0035: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:byte[])\l  (r1 I:int)\l  (r4 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x0038: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x003a: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x003d: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x003f: INVOKE  (r0 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0043: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.resetPeekPosition():void type: INTERFACE \l0x0046: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r0 I:int A[D('dataOffset' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.advancePeekPosition(int):void type: INTERFACE \l0x0049: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x004b: IGET  (r2 I:byte[]) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x004d: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r2 I:byte[])\l  (r1 I:int)\l  (r4 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x0050: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0052: INVOKE  \l  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0055: IGET  (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r5 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0057: INVOKE  (r2 I:int) = (r2 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x005b|0x005b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0019 \l}"];
Node_7 [shape=record,label="{7\:\ 0x005d|0x005d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.flv.FlvExtractor.sniff((r5 'this' I:com.google.android.exoplayer2.extractor.flv.FlvExtractor A[IMMUTABLE_TYPE, THIS]), (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0043\-0x005e: r0 'dataOffset' int\l  ?\-0x005e: r6 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_2;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_2;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_2;
}

