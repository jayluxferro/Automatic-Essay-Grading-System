digraph "CFG forcom.google.android.exoplayer2.extractor.flv.FlvExtractor.skipToTagHeader(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r1 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.bytesToNextTagHeader int \l0x0002: INVOKE  \l  (r2 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r0 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.skipFully(int):void type: INTERFACE \l0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: IPUT  \l  (r0 I:int)\l  (r1 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.bytesToNextTagHeader int \l0x0008: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0009: IPUT  \l  (r0 I:int)\l  (r1 I:com.google.android.exoplayer2.extractor.flv.FlvExtractor)\l com.google.android.exoplayer2.extractor.flv.FlvExtractor.parserState int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.flv.FlvExtractor.skipToTagHeader((r1 'this' I:com.google.android.exoplayer2.extractor.flv.FlvExtractor A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000b: r2 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

