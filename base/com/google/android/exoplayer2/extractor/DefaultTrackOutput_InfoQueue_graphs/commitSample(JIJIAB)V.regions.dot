digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.commitSample(JIJI[B)V" {
subgraph cluster_Region_1520203805 {
label = "R(1:(1:(3:(1:(1:10))|14|(1:16)(2:22|(1:24)))))";
node [shape=record,color=blue];
subgraph cluster_Region_35444796 {
label = "R(1:(3:(1:(1:10))|14|(1:16)(2:22|(1:24))))";
node [shape=record,color=blue];
subgraph cluster_Region_1753788186 {
label = "R(3:(1:(1:10))|14|(1:16)(2:22|(1:24)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_780576164 {
label = "IF [B:3:0x0003] THEN: R(1:(1:10)) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r13.upstreamKeyframeRequired == true) goto L_0x0005\l}"];
subgraph cluster_Region_400784633 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1943702273 {
label = "IF [B:5:0x0007] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0007|if ((r16 & 1) != 0) goto L_0x000b\l}"];
subgraph cluster_Region_1577519647 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x000c\l|r13.upstreamKeyframeRequired = false\l}"];
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x0013|PHI: r10 \l  PHI: (r10v4 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(!r13.upstreamFormatRequired)\lcommitSampleTimestamp(r14)\lr13.timesUs[r13.relativeWriteIndex] = r14\lr13.offsets[r13.relativeWriteIndex] = r17\lr13.sizes[r13.relativeWriteIndex] = r19\lr13.flags[r13.relativeWriteIndex] = r16\lr13.encryptionKeys[r13.relativeWriteIndex] = r20\lr13.formats[r13.relativeWriteIndex] = r13.upstreamFormat\lr13.sourceIds[r13.relativeWriteIndex] = r13.upstreamSourceId\lr13.queueSize++\l}"];
subgraph cluster_IfRegion_1161244670 {
label = "IF [B:15:0x0051] THEN: R(1:16) ELSE: R(2:22|(1:24))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0051|if (r13.queueSize == r13.capacity) goto L_0x0053\l}"];
subgraph cluster_Region_576448960 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0053|int int r2 = r13.capacity + 1000\lint[] int[] r8 = new int[r2]\llong[] long[] r6 = new long[r2]\llong[] long[] r9 = new long[r2]\lint[] int[] r4 = new int[r2]\lint[] int[] r7 = new int[r2]\lbyte[][] byte[][] r3 = new byte[r2][]\lcom.google.android.exoplayer2.Format[] com.google.android.exoplayer2.Format[] r5 = new com.google.android.exoplayer2.Format[r2]\lint int r1 = r13.capacity \- r13.relativeReadIndex\ljava.lang.System.arraycopy(r13.offsets, r13.relativeReadIndex, r6, 0, r1)\ljava.lang.System.arraycopy(r13.timesUs, r13.relativeReadIndex, r9, 0, r1)\ljava.lang.System.arraycopy(r13.flags, r13.relativeReadIndex, r4, 0, r1)\ljava.lang.System.arraycopy(r13.sizes, r13.relativeReadIndex, r7, 0, r1)\ljava.lang.System.arraycopy(r13.encryptionKeys, r13.relativeReadIndex, r3, 0, r1)\ljava.lang.System.arraycopy(r13.formats, r13.relativeReadIndex, r5, 0, r1)\ljava.lang.System.arraycopy(r13.sourceIds, r13.relativeReadIndex, r8, 0, r1)\lint int r0 = r13.relativeReadIndex\ljava.lang.System.arraycopy(r13.offsets, 0, r6, r1, r0)\ljava.lang.System.arraycopy(r13.timesUs, 0, r9, r1, r0)\ljava.lang.System.arraycopy(r13.flags, 0, r4, r1, r0)\ljava.lang.System.arraycopy(r13.sizes, 0, r7, r1, r0)\ljava.lang.System.arraycopy(r13.encryptionKeys, 0, r3, r1, r0)\ljava.lang.System.arraycopy(r13.formats, 0, r5, r1, r0)\ljava.lang.System.arraycopy(r13.sourceIds, 0, r8, r1, r0)\lr13.offsets = r6\lr13.timesUs = r9\lr13.flags = r4\lr13.sizes = r7\lr13.encryptionKeys = r3\lr13.formats = r5\lr13.sourceIds = r8\lr13.relativeReadIndex = 0\lr13.relativeWriteIndex = r13.capacity\lr13.queueSize = r13.capacity\lr13.capacity = r2\l}"];
}
subgraph cluster_Region_1237288725 {
label = "R(2:22|(1:24))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x00f2\l|r13.relativeWriteIndex++\l}"];
subgraph cluster_IfRegion_1855623072 {
label = "IF [B:23:0x00fc] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x00fc|if (r13.relativeWriteIndex == r13.capacity) goto L_0x00fe\l}"];
subgraph cluster_Region_145438622 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x00fe|r13.relativeWriteIndex = 0\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0005}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0009|DONT_GENERATE\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x000a}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000b}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x000c|SYNTHETIC\lSplitter:B:9:0x000c\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x000e}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0010}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0012}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x00ec|REMOVE\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x00ed|REMOVE\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x00ee|REMOVE\l|throw r10\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x00ef}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x00f2|SYNTHETIC\lSplitter:B:21:0x00f2\l}"];
MethodNode[shape=record,label="{public synchronized void com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.commitSample((r13v0 'this' com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue A[IMMUTABLE_TYPE, THIS]), (r14v0 'timeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'sampleFlags' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 'offset' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'size' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'encryptionKey' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_3 -> Node_11[style=dashed];
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_10 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_21[style=dashed];
Node_16 -> Node_6;
Node_22 -> Node_23;
Node_23 -> Node_6[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_6;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_2 -> Node_17;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_20;
Node_13 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_14;
Node_21 -> Node_22;
Node_21 -> Node_17;
}

