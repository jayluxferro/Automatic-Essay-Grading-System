digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.skipToKeyframeBefore(JZ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[long, double]) = (\-1 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r3 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.queueSize int A[Catch:\{ all \-\> 0x0059 \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0011 A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IGET  (r3 I:long[]) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.timesUs long[] A[Catch:\{ all \-\> 0x0059 \}]\l0x0009: IGET  (r6 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x0059 \}]\l0x000b: AGET  (r6 I:?[long, double]) = (r3 I:?[long, double][]), (r6 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x0059 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: CMP_L  (r3 I:int) = (r10 I:long A[D('timeUs' long)]), (r6 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:10:0x0013 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: MONITOR_EXIT  (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: RETURN  (r4 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|SYNTHETIC\lSplitter:B:10:0x0013\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0013\l|0x0013: IGET  (r6 I:long) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.largestQueuedTimestampUs long A[Catch:\{ all \-\> 0x0059 \}, TRY_ENTER]\l0x0015: CMP_L  (r3 I:int) = (r10 I:long A[D('timeUs' long)]), (r6 I:long) A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|0x0017: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x001b A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|0x0019: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allowTimeBeyondBuffer' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0011 A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x001b|0x001b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0059 \}]\l0x001c: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0059 \}]\l0x001d: IGET  (r2 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|0x001f: IGET  (r3 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeWriteIndex int A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('searchIndex' int)]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x002b A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0023|0x0023: IGET  (r3 I:long[]) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.timesUs long[] A[Catch:\{ all \-\> 0x0059 \}]\l0x0025: AGET  (r6 I:?[long, double]) = \l  (r3 I:?[long, double][])\l  (r2 I:?[int, short, byte, char] A[D('searchIndex' int)])\l A[Catch:\{ all \-\> 0x0059 \}]\l0x0027: CMP_L  (r3 I:int) = (r6 I:long), (r10 I:long A[D('timeUs' long)]) A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0029|0x0029: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:22:0x0047 A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002b|0x002b: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sampleCountToKeyframe' int)]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0011 A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002e|0x002e: IGET  (r3 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x0059 \}]\l0x0030: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int A[D('sampleCountToKeyframe' int)]) A[Catch:\{ all \-\> 0x0059 \}]\l0x0031: IGET  (r4 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.capacity int A[Catch:\{ all \-\> 0x0059 \}]\l0x0033: ARITH  (r3 I:int) = (r3 I:int) % (r4 I:int) A[Catch:\{ all \-\> 0x0059 \}]\l0x0034: IPUT  \l  (r3 I:int)\l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x0059 \}]\l0x0036: IGET  (r3 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.absoluteReadIndex int A[Catch:\{ all \-\> 0x0059 \}]\l0x0038: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int A[D('sampleCountToKeyframe' int)]) A[Catch:\{ all \-\> 0x0059 \}]\l0x0039: IPUT  \l  (r3 I:int)\l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.absoluteReadIndex int A[Catch:\{ all \-\> 0x0059 \}]\l0x003b: IGET  (r3 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.queueSize int A[Catch:\{ all \-\> 0x0059 \}]\l0x003d: ARITH  (r3 I:int) = (r3 I:int) \- (r1 I:int A[D('sampleCountToKeyframe' int)]) A[Catch:\{ all \-\> 0x0059 \}]\l0x003e: IPUT  \l  (r3 I:int)\l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.queueSize int A[Catch:\{ all \-\> 0x0059 \}]\l0x0040: IGET  (r3 I:long[]) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.offsets long[] A[Catch:\{ all \-\> 0x0059 \}]\l0x0042: IGET  (r4 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x0059 \}]\l0x0044: AGET  (r4 I:?[long, double]) = (r3 I:?[long, double][]), (r4 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x0059 \}]\l0x0046: GOTO  \-\> 0x0011 A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0047|0x0047: IGET  (r3 I:int[]) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.flags int[] A[Catch:\{ all \-\> 0x0059 \}]\l0x0049: AGET  (r3 I:?[int, float]) = \l  (r3 I:?[int, float][])\l  (r2 I:?[int, short, byte, char] A[D('searchIndex' int)])\l A[Catch:\{ all \-\> 0x0059 \}]\l0x004b: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x004d|0x004d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0050 A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x004f|0x004f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('sampleCountToKeyframe' int)]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('sampleCount' int)])\l A[Catch:\{ all \-\> 0x0059 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0050|0x0050: ARITH  (r3 I:int) = (r2 I:int A[D('searchIndex' int)]) + (1 int) A[Catch:\{ all \-\> 0x0059 \}]\l0x0052: IGET  (r6 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.capacity int A[Catch:\{ all \-\> 0x0059 \}]\l0x0054: ARITH  (r2 I:int A[D('searchIndex' int)]) = (r3 I:int) % (r6 I:int) A[Catch:\{ all \-\> 0x0059 \}, TRY_LEAVE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0056|0x0056: ARITH  (r0 I:int A[D('sampleCount' int)]) = (r0 I:int A[D('sampleCount' int)]) + (1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0059|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0059: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_28 [shape=record,label="{28\:\ 0x005a|0x005a: MONITOR_EXIT  (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x005b|0x005b: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized long com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.skipToKeyframeBefore((r9 'this' I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue A[IMMUTABLE_TYPE, THIS]), (r10 I:long A[D('timeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[D('allowTimeBeyondBuffer' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001c\-0x0059: r0 'sampleCount' int\l  0x001d\-0x0059: r1 'sampleCountToKeyframe' int\l  0x001f\-0x0059: r2 'searchIndex' int\l  ?\-0x005b: r10 'timeUs' long\l  ?\-0x005b: r12 'allowTimeBeyondBuffer' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_27;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_27;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_8;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_8;
Node_20 -> Node_21[style=dashed];
Node_21 -> Node_8;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_28;
Node_28 -> Node_29;
}

