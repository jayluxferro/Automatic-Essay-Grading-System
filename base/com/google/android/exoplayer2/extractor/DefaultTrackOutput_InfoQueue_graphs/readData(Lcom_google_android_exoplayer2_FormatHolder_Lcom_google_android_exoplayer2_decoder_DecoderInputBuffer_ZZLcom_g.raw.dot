digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.readData(Lcom\/google\/android\/exoplayer2\/FormatHolder;Lcom\/google\/android\/exoplayer2\/decoder\/DecoderInputBuffer;ZZLcom\/google\/android\/exoplayer2\/Format;Lcom\/google\/android\/exoplayer2\/extractor\/DefaultTrackOutput$BufferExtrasHolder;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l0x0001: CONST  (r0 I:?[int, float, short, byte, char]) = (\-4 ?[int, float, short, byte, char]) \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (\-5 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: MONITOR_ENTER  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|SYNTHETIC\lSplitter:B:2:0x0004\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0004\l|0x0004: IGET  (r3 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.queueSize int A[Catch:\{ all \-\> 0x009a \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0022 A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('loadingFinished' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0010 A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x009a \}]\l0x000b: INVOKE  \l  (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l  (r1 I:int)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.setFlags(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x009a \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|SYNTHETIC\lSplitter:B:9:0x0010\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0010\l|0x0010: IGET  (r0 I:com.google.android.exoplayer2.Format) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.upstreamFormat com.google.android.exoplayer2.Format A[Catch:\{ all \-\> 0x009a \}, TRY_ENTER]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0020 A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|0x0014: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('formatRequired' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x001a A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0016|0x0016: IGET  (r0 I:com.google.android.exoplayer2.Format) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.upstreamFormat com.google.android.exoplayer2.Format A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('downstreamFormat' com.google.android.exoplayer2.Format)])  \-\> B:16:0x0020 A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001a|0x001a: IGET  (r0 I:com.google.android.exoplayer2.Format) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.upstreamFormat com.google.android.exoplayer2.Format A[Catch:\{ all \-\> 0x009a \}]\l0x001c: IPUT  \l  (r0 I:com.google.android.exoplayer2.Format)\l  (r7 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder)])\l com.google.android.exoplayer2.FormatHolder.format com.google.android.exoplayer2.Format A[Catch:\{ all \-\> 0x009a \}]\l0x001e: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x009a \}]\l0x001f: GOTO  \-\> 0x000e A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0020|0x0020: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x009a \}]\l0x0021: GOTO  \-\> 0x000e A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0022|0x0022: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('formatRequired' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x002c A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0024|0x0024: IGET  (r3 I:com.google.android.exoplayer2.Format[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.formats com.google.android.exoplayer2.Format[] A[Catch:\{ all \-\> 0x009a \}]\l0x0026: IGET  (r4 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x0028: AGET  (r3 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002a|0x002a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('downstreamFormat' com.google.android.exoplayer2.Format)])  \-\> B:21:0x0036 A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x002c|0x002c: IGET  (r0 I:com.google.android.exoplayer2.Format[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.formats com.google.android.exoplayer2.Format[] A[Catch:\{ all \-\> 0x009a \}]\l0x002e: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x0030: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x009a \}]\l0x0032: IPUT  \l  (r0 I:com.google.android.exoplayer2.Format)\l  (r7 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder)])\l com.google.android.exoplayer2.FormatHolder.format com.google.android.exoplayer2.Format A[Catch:\{ all \-\> 0x009a \}]\l0x0034: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x009a \}]\l0x0035: GOTO  \-\> 0x000e A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0036|0x0036: INVOKE  (r1 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.isFlagsOnly():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x003a|0x003a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x003e A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x003c|0x003c: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x009a \}]\l0x003d: GOTO  \-\> 0x000e A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|0x003e: IGET  (r1 I:long[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.timesUs long[] A[Catch:\{ all \-\> 0x009a \}]\l0x0040: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x0042: AGET  (r2 I:?[long, double]) = (r1 I:?[long, double][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x009a \}]\l0x0044: IPUT  \l  (r2 I:long)\l  (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.timeUs long A[Catch:\{ all \-\> 0x009a \}]\l0x0046: IGET  (r1 I:int[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.flags int[] A[Catch:\{ all \-\> 0x009a \}]\l0x0048: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x004a: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x009a \}]\l0x004c: INVOKE  \l  (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l  (r1 I:int)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.setFlags(int):void type: VIRTUAL A[Catch:\{ all \-\> 0x009a \}]\l0x004f: IGET  (r1 I:int[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.sizes int[] A[Catch:\{ all \-\> 0x009a \}]\l0x0051: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x0053: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x009a \}]\l0x0055: IPUT  \l  (r1 I:int)\l  (r12 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder A[D('extrasHolder' com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)])\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.size int A[Catch:\{ all \-\> 0x009a \}]\l0x0057: IGET  (r1 I:long[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.offsets long[] A[Catch:\{ all \-\> 0x009a \}]\l0x0059: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x005b: AGET  (r2 I:?[long, double]) = (r1 I:?[long, double][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x009a \}]\l0x005d: IPUT  \l  (r2 I:long)\l  (r12 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder A[D('extrasHolder' com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)])\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.offset long A[Catch:\{ all \-\> 0x009a \}]\l0x005f: IGET  (r1 I:byte[][]) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.encryptionKeys byte[][] A[Catch:\{ all \-\> 0x009a \}]\l0x0061: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x0063: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x009a \}]\l0x0065: IPUT  \l  (r1 I:byte[])\l  (r12 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder A[D('extrasHolder' com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)])\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.encryptionKeyId byte[] A[Catch:\{ all \-\> 0x009a \}]\l0x0067: IGET  (r2 I:long) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.largestDequeuedTimestampUs long A[Catch:\{ all \-\> 0x009a \}]\l0x0069: IGET  (r4 I:long) = \l  (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.timeUs long A[Catch:\{ all \-\> 0x009a \}]\l0x006b: INVOKE  (r2 I:long) = (r2 I:long), (r4 I:long) java.lang.Math.max(long, long):long type: STATIC A[Catch:\{ all \-\> 0x009a \}]\l0x006f: IPUT  \l  (r2 I:long)\l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.largestDequeuedTimestampUs long A[Catch:\{ all \-\> 0x009a \}]\l0x0071: IGET  (r1 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.queueSize int A[Catch:\{ all \-\> 0x009a \}]\l0x0073: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) A[Catch:\{ all \-\> 0x009a \}]\l0x0075: IPUT  \l  (r1 I:int)\l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.queueSize int A[Catch:\{ all \-\> 0x009a \}]\l0x0077: IGET  (r1 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x0079: ARITH  (r1 I:int) = (r1 I:int) + (1 int) A[Catch:\{ all \-\> 0x009a \}]\l0x007b: IPUT  \l  (r1 I:int)\l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x007d: IGET  (r1 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.absoluteReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x007f: ARITH  (r1 I:int) = (r1 I:int) + (1 int) A[Catch:\{ all \-\> 0x009a \}]\l0x0081: IPUT  \l  (r1 I:int)\l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.absoluteReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x0083: IGET  (r1 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x0085: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.capacity int A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0087|0x0087: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x008c A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0089|0x0089: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x009a \}]\l0x008a: IPUT  \l  (r1 I:int)\l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x008c|0x008c: IGET  (r1 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.queueSize int A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x008e|0x008e: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:35:0x009d A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0090|0x0090: IGET  (r1 I:long[]) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.offsets long[] A[Catch:\{ all \-\> 0x009a \}]\l0x0092: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.relativeReadIndex int A[Catch:\{ all \-\> 0x009a \}]\l0x0094: AGET  (r2 I:?[long, double]) = (r1 I:?[long, double][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x009a \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0096|0x0096: IPUT  \l  (r2 I:long)\l  (r12 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder A[D('extrasHolder' com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)])\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.nextOffset long A[Catch:\{ all \-\> 0x009a \}, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x009a|ExcHandler: all null\lSplitter:B:2:0x0004\l|0x009a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_33 [shape=record,label="{33\:\ 0x009b|0x009b: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x009c|0x009c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_35 [shape=record,label="{35\:\ 0x009d|SYNTHETIC\lSplitter:B:35:0x009d\l}"];
Node_36 [shape=record,label="{36\:\ ?|Splitter:B:35:0x009d\l|0x009d: IGET  (r2 I:long) = \l  (r12 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder A[D('extrasHolder' com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)])\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.offset long A[Catch:\{ all \-\> 0x009a \}, TRY_ENTER]\l0x009f: IGET  (r1 I:int) = \l  (r12 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder A[D('extrasHolder' com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder)])\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.BufferExtrasHolder.size int A[Catch:\{ all \-\> 0x009a \}, TRY_LEAVE]\l}"];
Node_37 [shape=record,label="{37\:\ 0x00a1|0x00a1: CAST  (r4 I:long) = (long) (r1 I:int) \l0x00a2: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) \l}"];
MethodNode[shape=record,label="{public synchronized int com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.readData((r6 'this' I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('formatRequired' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[D('loadingFinished' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.google.android.exoplayer2.Format A[D('downstreamFormat' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder A[D('extrasHolder' com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x00a3: r7 'formatHolder' com.google.android.exoplayer2.FormatHolder\l  ?\-0x00a3: r8 'buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer\l  ?\-0x00a3: r9 'formatRequired' boolean\l  ?\-0x00a3: r10 'loadingFinished' boolean\l  ?\-0x00a3: r11 'downstreamFormat' com.google.android.exoplayer2.Format\l  ?\-0x00a3: r12 'extrasHolder' com.google.android.exoplayer2.extractor.DefaultTrackOutput$BufferExtrasHolder\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_32;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_32;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_7;
Node_16 -> Node_7;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_7;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_7;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_35;
Node_29 -> Node_30;
Node_30 -> Node_7;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_35 -> Node_32;
Node_36 -> Node_37;
Node_36 -> Node_32;
Node_37 -> Node_30;
}

