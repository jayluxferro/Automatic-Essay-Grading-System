digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.skipToKeyframeBefore(JZ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4 = \-1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r9)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?}"];
Node_4 [shape=record,label="{4\:\ 0x0005|if (r9.queueSize == 0) goto L_0x0011\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007}"];
Node_6 [shape=record,label="{6\:\ 0x000d}"];
Node_7 [shape=record,label="{7\:\ 0x000f|if ((r10 \> r9.timesUs[r9.relativeReadIndex] ? 1 : (r10 == r9.timesUs[r9.relativeReadIndex] ? 0 : \-1)) \>= 0) goto L_0x0013\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|PHI: r4 \l  PHI: (r4v1 long) = (r4v0 long), (r4v0 long), (r4v0 long), (r4v4 long), (r4v0 long) binds: [B:4:0x0005, B:7:0x000f, B:20:0x002c, B:21:0x002e, B:13:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r9)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|RETURN\l|return r4\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|SYNTHETIC\lSplitter:B:10:0x0013\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0013\l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|if ((r10 \> r9.largestQueuedTimestampUs ? 1 : (r10 == r9.largestQueuedTimestampUs ? 0 : \-1)) \<= 0) goto L_0x001b\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|if (r12 == false) goto L_0x0011\l}"];
Node_14 [shape=record,label="{14\:\ 0x001b|r0 = 0\lr1 = \-1\lint r2 = r9.relativeReadIndex\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|LOOP_START\lPHI: r0 r1 r2 \l  PHI: (r0v1 'sampleCount' int) = (r0v0 'sampleCount' int), (r0v2 'sampleCount' int) binds: [B:14:0x001b, B:26:0x0056] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'sampleCountToKeyframe' int) = (r1v0 'sampleCountToKeyframe' int), (r1v2 'sampleCountToKeyframe' int) binds: [B:14:0x001b, B:26:0x0056] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 'searchIndex' int) = (r2v0 'searchIndex' int), (r2v2 'searchIndex' int) binds: [B:14:0x001b, B:26:0x0056] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x001f\-\>B:26:0x0056\l}"];
Node_16 [shape=record,label="{16\:\ 0x0021|if (r2 == r9.relativeWriteIndex) goto L_0x002b\l}"];
Node_17 [shape=record,label="{17\:\ 0x0023}"];
Node_18 [shape=record,label="{18\:\ 0x0029|if ((r9.timesUs[r2] \> r10 ? 1 : (r9.timesUs[r2] == r10 ? 0 : \-1)) \<= 0) goto L_0x0047\l}"];
Node_19 [shape=record,label="{19\:\ 0x002b}"];
Node_20 [shape=record,label="{20\:\ 0x002c|if (r1 == \-1) goto L_0x0011\l}"];
Node_21 [shape=record,label="{21\:\ 0x002e|r9.relativeReadIndex = (r9.relativeReadIndex + r1) % r9.capacity\lr9.absoluteReadIndex = r9.absoluteReadIndex + r1\lr9.queueSize = r9.queueSize \- r1\lr4 = r9.offsets[r9.relativeReadIndex]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0047}"];
Node_23 [shape=record,label="{23\:\ 0x004d|if ((r9.flags[r2] & 1) == 0) goto L_0x0050\l}"];
Node_24 [shape=record,label="{24\:\ 0x004f|r1 = r0\l}"];
Node_25 [shape=record,label="{25\:\ 0x0050|PHI: r1 \l  PHI: (r1v2 'sampleCountToKeyframe' int) = (r1v1 'sampleCountToKeyframe' int), (r1v3 'sampleCountToKeyframe' int) binds: [B:23:0x004d, B:24:0x004f] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = (r2 + 1) % r9.capacity\l}"];
Node_26 [shape=record,label="{26\:\ 0x0056|LOOP_END\lLOOP:0: B:15:0x001f\-\>B:26:0x0056\l|int r0 = r0 + 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x0059|REMOVE\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_28 [shape=record,label="{28\:\ 0x005a|REMOVE\l}"];
Node_29 [shape=record,label="{29\:\ 0x005b|REMOVE\l|throw r3\l}"];
Node_30 [shape=record,label="{30\:\ 0x002b|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x002b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public synchronized long com.google.android.exoplayer2.extractor.DefaultTrackOutput.InfoQueue.skipToKeyframeBefore((r9v0 'this' com.google.android.exoplayer2.extractor.DefaultTrackOutput$InfoQueue A[IMMUTABLE_TYPE, THIS]), (r10v0 'timeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'allowTimeBeyondBuffer' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_27;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_27;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_8;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_30;
Node_17 -> Node_18;
Node_18 -> Node_22;
Node_18 -> Node_31[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_8;
Node_20 -> Node_21[style=dashed];
Node_21 -> Node_8;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_15;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_30 -> Node_19;
Node_31 -> Node_19;
}

