digraph "CFG forcom.google.android.exoplayer2.extractor.mp3.XingSeeker.getPosition(J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r9 I:boolean) = \l  (r17 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.isSeekable():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0008: IGET  (r12 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.firstFramePosition long \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r12 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: MOVE  (r0 I:?[long, double]) = (r18 I:?[long, double] A[D('timeUs' long)]) \l0x000d: CAST  (r9 I:float) = (float) (r0 I:long) \l0x000e: CONST  (r12 I:?[int, float, short, byte, char]) = \l  (1120403456(0x42c80000, float:100.0) ?[int, float, short, byte, char])\l \l0x0010: ARITH  (r9 I:float) = (r9 I:float) * (r12 I:float) \l0x0011: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0013: IGET  (r12 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.durationUs long \l0x0015: CAST  (r12 I:float) = (float) (r12 I:long) \l0x0016: ARITH  (r8 I:float) = (r9 I:float) \/ (r12 I:float) \l0x0018: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: CMP_G  (r9 I:int) = (r8 I:float A[D('percent' float)]), (r9 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r9 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:11:0x0049 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: CONST  (r12 I:?[long, double]) = \l  (4571153621781053440(0x3f70000000000000, double:0.00390625) ?[long, double])\l \l0x0020: CAST  (r14 I:double) = (double) (r5 I:float A[D('fx' float)]) \l0x0021: ARITH  (r12 I:double) = (r12 I:double) * (r14 I:double) \l0x0022: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0024: IGET  (r14 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.sizeBytes long \l0x0026: CAST  (r14 I:double) = (double) (r14 I:long) \l0x0027: ARITH  (r12 I:double) = (r12 I:double) * (r14 I:double) \l0x0028: INVOKE  (r12 I:long) = (r12 I:double) java.lang.Math.round(double):long type: STATIC \l0x002c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x002e: IGET  (r14 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.firstFramePosition long \l0x0030: ARITH  (r10 I:long) = (r12 I:long) + (r14 I:long) \l0x0032: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0034: IGET  (r12 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.inputLength long \l0x0036: CONST  (r14 I:?[long, double]) = (\-1 ?[long, double]) \l0x0038: CMP_L  (r9 I:int) = (r12 I:long), (r14 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|0x003a: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0077 \l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|0x003c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x003e: IGET  (r12 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.inputLength long \l0x0040: CONST  (r14 I:?[long, double]) = (1 ?[long, double]) \l0x0042: ARITH  (r6 I:long) = (r12 I:long) \- (r14 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: INVOKE  (r12 I:long) = \l  (r10 I:long A[D('position' long)])\l  (r6 I:long A[D('maximumPosition' long)])\l java.lang.Math.min(long, long):long type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|0x0049: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (1120403456(0x42c80000, float:100.0) ?[int, float, short, byte, char])\l \l0x004b: CMP_L  (r9 I:int) = (r8 I:float A[D('percent' float)]), (r9 I:float) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004d|0x004d: IF  (r9 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:14:0x0052 \l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|0x004f: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1132462080(0x43800000, float:256.0) ?[int, float, short, byte, char])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|0x0052: CAST  (r2 I:int) = (int) (r8 I:float A[D('percent' float)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0053|0x0053: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('a' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x006a \l}"];
Node_16 [shape=record,label="{16\:\ 0x0055|0x0055: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|0x0056: CONST  (r9 I:?[int, float, short, byte, char]) = (99 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0058|0x0058: IF  (r2 I:?[int, byte, short, char] A[D('a' int)]) \>= (r9 I:?[int, byte, short, char])  \-\> B:22:0x0074 \l}"];
Node_19 [shape=record,label="{19\:\ 0x005a|0x005a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x005c: IGET  (r9 I:long[]) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.tableOfContents long[] \l0x005e: AGET  (r12 I:?[long, double]) = \l  (r9 I:?[long, double][])\l  (r2 I:?[int, short, byte, char] A[D('a' int)])\l \l0x0060: CAST  (r4 I:float) = (float) (r12 I:long) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0061|0x0061: ARITH  (r9 I:float) = (r4 I:float A[D('fb' float)]) \- (r3 I:float A[D('fa' float)]) \l0x0063: CAST  (r12 I:float) = (float) (r2 I:int A[D('a' int)]) \l0x0064: ARITH  (r12 I:float) = (r8 I:float A[D('percent' float)]) \- (r12 I:float) \l0x0066: ARITH  (r9 I:float) = (r9 I:float) * (r12 I:float) \l0x0067: ARITH  (r5 I:float) = (r3 I:float A[D('fa' float)]) + (r9 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ 0x006a|0x006a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x006c: IGET  (r9 I:long[]) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.tableOfContents long[] \l0x006e: ARITH  (r12 I:int) = (r2 I:int A[D('a' int)]) + (\-1 int) \l0x0070: AGET  (r12 I:?[long, double]) = (r9 I:?[long, double][]), (r12 I:?[int, short, byte, char]) \l0x0072: CAST  (r3 I:float) = (float) (r12 I:long) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0074|0x0074: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1132462080(0x43800000, float:256.0) ?[int, float, short, byte, char])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0077|0x0077: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0079: IGET  (r12 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.firstFramePosition long \l0x007b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x007d: IGET  (r9 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.headerSize int \l0x007f: CAST  (r14 I:long) = (long) (r9 I:int) \l0x0080: ARITH  (r12 I:long) = (r12 I:long) \- (r14 I:long) \l0x0081: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0083: IGET  (r14 I:long) = \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.XingSeeker)\l com.google.android.exoplayer2.extractor.mp3.XingSeeker.sizeBytes long \l0x0085: ARITH  (r12 I:long) = (r12 I:long) + (r14 I:long) \l0x0086: CONST  (r14 I:?[long, double]) = (1 ?[long, double]) \l0x0088: ARITH  (r6 I:long) = (r12 I:long) \- (r14 I:long) \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.extractor.mp3.XingSeeker.getPosition((r17 'this' I:com.google.android.exoplayer2.extractor.mp3.XingSeeker A[IMMUTABLE_TYPE, THIS]), (r18 I:long A[D('timeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001e\-0x0049: r5 'fx' float\l  0x0044\-0x0049: r6 'maximumPosition' long\l  0x0032\-0x0049: r10 'position' long\l  0x0051\-0x0052: r5 'fx' float\l  0x0056\-0x006a: r3 'fa' float\l  0x0061\-0x006a: r4 'fb' float\l  0x0069\-0x006a: r5 'fx' float\l  0x0053\-0x0077: r2 'a' int\l  0x0073\-0x0077: r3 'fa' float\l  0x0076\-0x0077: r4 'fb' float\l  0x0077\-0x008a: r5 'fx' float\l  0x0018\-0x008a: r8 'percent' float\l  0x0077\-0x008a: r10 'position' long\l  ?\-0x008a: r18 'timeUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_23;
Node_9 -> Node_10;
Node_10 -> Node_3;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_7;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_7;
Node_21 -> Node_17;
Node_22 -> Node_20;
Node_23 -> Node_10;
}

