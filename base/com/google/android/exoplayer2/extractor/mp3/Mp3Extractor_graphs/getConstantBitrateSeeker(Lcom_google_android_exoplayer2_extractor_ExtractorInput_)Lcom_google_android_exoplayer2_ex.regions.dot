digraph "CFG forcom.google.android.exoplayer2.extractor.mp3.Mp3Extractor.getConstantBitrateSeeker(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Lcom\/google\/android\/exoplayer2\/extractor\/mp3\/Mp3Extractor$Seeker;" {
subgraph cluster_Region_1008956652 {
label = "R(2:0|1)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7.peekFully(r6.scratch.data, 0, 4)\lr6.scratch.setPosition(0)\lcom.google.android.exoplayer2.extractor.MpegAudioHeader.populateHeader(r6.scratch.readInt(), r6.synchronizedHeader)\l}"];
Node_1 [shape=record,label="{1\:\ 0x002a|RETURN\l|return new com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker(r7.getPosition(), r6.synchronizedHeader.bitrate, r7.getLength())\l}"];
}
MethodNode[shape=record,label="{private com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.getConstantBitrateSeeker((r6v0 'this' com.google.android.exoplayer2.extractor.mp3.Mp3Extractor A[IMMUTABLE_TYPE, THIS]), (r7v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

