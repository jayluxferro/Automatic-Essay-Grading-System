digraph "CFG forcom.google.android.exoplayer2.extractor.mp3.Mp3Extractor.peekId3Data(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0002: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0006: IGET  (r5 I:byte[]) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0008: INVOKE  \l  (r10 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r5 I:byte[])\l  (r7 I:int)\l  (r8 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x000b: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x000d: INVOKE  \l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r7 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x0010: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0012: INVOKE  (r5 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedInt24():int type: VIRTUAL \l0x0016: SGET  (r6 I:int) =  com.google.android.exoplayer2.metadata.id3.Id3Decoder.ID3_TAG int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0021 \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: INVOKE  \l  (r10 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.resetPeekPosition():void type: INTERFACE \l0x001d: INVOKE  \l  (r10 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r3 I:int A[D('peekedId3Bytes' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.advancePeekPosition(int):void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0023: CONST  (r6 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0024: INVOKE  \l  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r6 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL \l0x0027: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0029: INVOKE  (r0 I:int) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readSynchSafeInt():int type: VIRTUAL \l0x002d: ARITH  (r4 I:int) = (r0 I:int A[D('framesLength' int)]) + (10 int) \l0x002f: IGET  (r5 I:com.google.android.exoplayer2.metadata.Metadata) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.metadata com.google.android.exoplayer2.metadata.Metadata \l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|0x0031: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0061 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|0x0033: NEW_ARRAY  (r1 I:byte[]) = (r4 I:int A[D('tagLength' int), IMMUTABLE_TYPE]) type: byte[] \l0x0035: IGET  (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0037: IGET  (r5 I:byte[]) = (r5 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0039: INVOKE  \l  (r5 I:java.lang.Object)\l  (r7 I:int)\l  (r1 I:java.lang.Object A[D('id3Data' byte[])])\l  (r7 I:int)\l  (r8 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x003c: INVOKE  \l  (r10 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r1 I:byte[] A[D('id3Data' byte[])])\l  (r8 I:int)\l  (r0 I:int A[D('framesLength' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x003f: IGET  (r5 I:int) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.flags int \l0x0041: ARITH  (r5 I:?[int, boolean, short, byte, char]) = (r5 I:?[int, boolean, short, byte, char]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0043|0x0043: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x005f \l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|0x0045: SGET  (r2 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate) =  com.google.android.exoplayer2.extractor.GaplessInfoHolder.GAPLESS_INFO_ID3_FRAME_PREDICATE com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate \l}"];
Node_10 [shape=record,label="{10\:\ 0x0047|0x0047: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder) =  com.google.android.exoplayer2.metadata.id3.Id3Decoder \l0x0049: INVOKE  \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder)\l  (r2 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate A[D('id3FramePredicate' com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.\<init\>(com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate):void type: DIRECT \l0x004c: INVOKE  (r5 I:com.google.android.exoplayer2.metadata.Metadata) = \l  (r5 I:com.google.android.exoplayer2.metadata.id3.Id3Decoder)\l  (r1 I:byte[] A[D('id3Data' byte[])])\l  (r4 I:int A[D('tagLength' int)])\l com.google.android.exoplayer2.metadata.id3.Id3Decoder.decode(byte[], int):com.google.android.exoplayer2.metadata.Metadata type: VIRTUAL \l0x0050: IPUT  \l  (r5 I:com.google.android.exoplayer2.metadata.Metadata)\l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.metadata com.google.android.exoplayer2.metadata.Metadata \l0x0052: IGET  (r5 I:com.google.android.exoplayer2.metadata.Metadata) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.metadata com.google.android.exoplayer2.metadata.Metadata \l}"];
Node_11 [shape=record,label="{11\:\ 0x0054|0x0054: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x005d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0056|0x0056: IGET  (r5 I:com.google.android.exoplayer2.extractor.GaplessInfoHolder) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.gaplessInfoHolder com.google.android.exoplayer2.extractor.GaplessInfoHolder \l0x0058: IGET  (r6 I:com.google.android.exoplayer2.metadata.Metadata) = \l  (r9 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.metadata com.google.android.exoplayer2.metadata.Metadata \l0x005a: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.GaplessInfoHolder)\l  (r6 I:com.google.android.exoplayer2.metadata.Metadata)\l com.google.android.exoplayer2.extractor.GaplessInfoHolder.setFromMetadata(com.google.android.exoplayer2.metadata.Metadata):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x005d|0x005d: ARITH  (r3 I:int A[D('peekedId3Bytes' int)]) = (r3 I:int A[D('peekedId3Bytes' int)]) + (r4 I:int A[D('tagLength' int)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x005f|0x005f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0061|0x0061: INVOKE  \l  (r10 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r0 I:int A[D('framesLength' int)])\l com.google.android.exoplayer2.extractor.ExtractorInput.advancePeekPosition(int):void type: INTERFACE \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.peekId3Data((r9 'this' I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0035\-0x005d: r1 'id3Data' byte[]\l  0x0047\-0x005d: r2 'id3FramePredicate' com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate\l  0x005f\-0x0061: r1 'id3Data' byte[]\l  0x002d\-0x0064: r0 'framesLength' int\l  0x0004\-0x0064: r3 'peekedId3Bytes' int\l  0x002f\-0x0064: r4 'tagLength' int\l  ?\-0x0064: r10 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_10;
Node_15 -> Node_13;
}

