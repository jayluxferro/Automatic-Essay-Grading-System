digraph "CFG forcom.google.android.exoplayer2.extractor.mp3.Mp3Extractor.getConstantBitrateSeeker(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Lcom\/google\/android\/exoplayer2\/extractor\/mp3\/Mp3Extractor$Seeker;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0003: IGET  (r0 I:byte[]) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.data byte[] \l0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0006: INVOKE  \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r0 I:byte[])\l  (r2 I:int)\l  (r1 I:int)\l com.google.android.exoplayer2.extractor.ExtractorInput.peekFully(byte[], int, int):void type: INTERFACE \l0x0009: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x000b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.setPosition(int):void type: VIRTUAL \l0x000e: IGET  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) = \l  (r6 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0010: INVOKE  (r0 I:int) = (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) com.google.android.exoplayer2.util.ParsableByteArray.readInt():int type: VIRTUAL \l0x0014: IGET  (r1 I:com.google.android.exoplayer2.extractor.MpegAudioHeader) = \l  (r6 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronizedHeader com.google.android.exoplayer2.extractor.MpegAudioHeader \l0x0016: INVOKE  \l  (r0 I:int)\l  (r1 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.populateHeader(int, com.google.android.exoplayer2.extractor.MpegAudioHeader):boolean type: STATIC \l0x0019: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker) =  com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker \l0x001b: INVOKE  (r1 I:long) = \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.getPosition():long type: INTERFACE \l0x001f: IGET  (r3 I:com.google.android.exoplayer2.extractor.MpegAudioHeader) = \l  (r6 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronizedHeader com.google.android.exoplayer2.extractor.MpegAudioHeader \l0x0021: IGET  (r3 I:int) = \l  (r3 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.bitrate int \l0x0023: INVOKE  (r4 I:long) = \l  (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.getLength():long type: INTERFACE \l0x0027: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker)\l  (r1 I:long)\l  (r3 I:int)\l  (r4 I:long)\l com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker.\<init\>(long, int, long):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x002a|0x002a: RETURN  \l  (r0 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker)\l \l}"];
MethodNode[shape=record,label="{private com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.getConstantBitrateSeeker((r6 'this' I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x002a: r7 'input' com.google.android.exoplayer2.extractor.ExtractorInput\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

