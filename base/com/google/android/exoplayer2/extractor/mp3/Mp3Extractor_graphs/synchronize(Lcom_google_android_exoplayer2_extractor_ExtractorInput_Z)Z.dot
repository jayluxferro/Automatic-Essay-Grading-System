digraph "CFG forcom.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronize(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;Z)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7 = 0\lr0 = 0\lr3 = 0\lr5 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r14 == false) goto L_0x003c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r4 = 16384\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|PHI: r4 \l  PHI: (r4v1 'searchLimitBytes' int) = (r4v0 'searchLimitBytes' int), (r4v2 'searchLimitBytes' int) binds: [B:16:0x003c, B:2:0x0006] A[DONT_GENERATE, DONT_INLINE]\l|r13.resetPeekPosition()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|if ((r13.getPosition() \> 0 ? 1 : (r13.getPosition() == 0 ? 0 : \-1)) != 0) goto L_0x0022\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|peekId3Data(r13)\lint r3 = (int) r13.getPeekPosition()\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if (r14 != false) goto L_0x0022\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|r13.skipFully(r3)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|LOOP_START\lPHI: r0 r5 r7 \l  PHI: (r0v1 'candidateSynchronizedHeaderData' int) = (r0v0 'candidateSynchronizedHeaderData' int), (r0v2 'candidateSynchronizedHeaderData' int) binds: [B:48:0x0022, B:41:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'searchedBytes' int) = (r5v0 'searchedBytes' int), (r5v2 'searchedBytes' int) binds: [B:48:0x0022, B:41:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 'validFrameCount' int) = (r7v0 'validFrameCount' int), (r7v2 'validFrameCount' int) binds: [B:48:0x0022, B:41:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0022\-\>B:41:0x0022\l|byte[] r9 = r12.scratch.data\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|if (r7 \<= 0) goto L_0x003f\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|r8 = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|PHI: r8 \l  PHI: (r8v4 boolean) = (r8v3 boolean), (r8v21 boolean) binds: [B:17:0x003f, B:10:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|if (r13.peekFully(r9, 0, 4, r8) != false) goto L_0x0041\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|if (r14 == false) goto L_0x0097\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|r13.skipFully(r3 + r5)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|r12.synchronizedHeaderData = r0\l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|r4 = 131072\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|r8 = false\l}"];
Node_18 [shape=record,label="{18\:\ 0x0041|r12.scratch.setPosition(0)\lint r2 = r12.scratch.readInt()\l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|if (r0 == 0) goto L_0x0056\l}"];
Node_20 [shape=record,label="{20\:\ 0x004f}"];
Node_21 [shape=record,label="{21\:\ 0x0054|if (headersMatch(r2, (long) r0) == false) goto L_0x005d\l}"];
Node_22 [shape=record,label="{22\:\ 0x0056|int r1 = com.google.android.exoplayer2.extractor.MpegAudioHeader.getFrameSize(r2)\l}"];
Node_23 [shape=record,label="{23\:\ 0x005b|if (r1 != \-1) goto L_0x0082\l}"];
Node_24 [shape=record,label="{24\:\ 0x005d|int r6 = r5 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x005f|if (r5 != r4) goto L_0x006e\l}"];
Node_26 [shape=record,label="{26\:\ 0x0061|if (r14 != false) goto L_0x006b\l}"];
Node_27 [shape=record,label="{27\:\ 0x0063}"];
Node_28 [shape=record,label="{28\:\ 0x006a|throw new com.google.android.exoplayer2.ParserException(\"Searched too many bytes.\")\l}"];
Node_29 [shape=record,label="{29\:\ 0x006b|r5 = r6\l}"];
Node_30 [shape=record,label="{30\:\ 0x006e|r7 = 0\lr0 = 0\l}"];
Node_31 [shape=record,label="{31\:\ 0x0070|if (r14 == false) goto L_0x007c\l}"];
Node_32 [shape=record,label="{32\:\ 0x0072|r13.resetPeekPosition()\lr13.advancePeekPosition(r3 + r6)\lr5 = r6\l}"];
Node_33 [shape=record,label="{33\:\ 0x007c|r13.skipFully(1)\lr5 = r6\l}"];
Node_34 [shape=record,label="{34\:\ 0x0082|int r7 = r7 + 1\l}"];
Node_35 [shape=record,label="{35\:\ 0x0085|if (r7 != 1) goto L_0x0093\l}"];
Node_36 [shape=record,label="{36\:\ 0x0087|com.google.android.exoplayer2.extractor.MpegAudioHeader.populateHeader(r2, r12.synchronizedHeader)\lr0 = r2\l}"];
Node_37 [shape=record,label="{37\:\ 0x008d|PHI: r0 \l  PHI: (r0v4 'candidateSynchronizedHeaderData' int) = (r0v1 'candidateSynchronizedHeaderData' int), (r0v5 'candidateSynchronizedHeaderData' int) binds: [B:39:0x0094, B:36:0x0087] A[DONT_GENERATE, DONT_INLINE]\l|r13.advancePeekPosition(r1 + \-4)\l}"];
Node_38 [shape=record,label="{38\:\ 0x0093}"];
Node_39 [shape=record,label="{39\:\ 0x0094|if (r7 != 4) goto L_0x008d\l}"];
Node_40 [shape=record,label="{40\:\ 0x0097|r13.resetPeekPosition()\l}"];
Node_41 [shape=record,label="{41\:\ 0x0022|LOOP_END\lSYNTHETIC\lPHI: r0 r5 r7 \l  PHI: (r0v2 'candidateSynchronizedHeaderData' int) = (r0v3 'candidateSynchronizedHeaderData' int), (r0v3 'candidateSynchronizedHeaderData' int), (r0v4 'candidateSynchronizedHeaderData' int) binds: [B:46:0x0022, B:45:0x0022, B:47:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 'searchedBytes' int) = (r5v4 'searchedBytes' int), (r5v5 'searchedBytes' int), (r5v1 'searchedBytes' int) binds: [B:46:0x0022, B:45:0x0022, B:47:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 'validFrameCount' int) = (r7v3 'validFrameCount' int), (r7v3 'validFrameCount' int), (r7v4 'validFrameCount' int) binds: [B:46:0x0022, B:45:0x0022, B:47:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0022\-\>B:41:0x0022\l}"];
Node_42 [shape=record,label="{42\:\ 0x0031|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0061|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0031|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0022|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0022|SYNTHETIC\l}"];
Node_47 [shape=record,label="{47\:\ 0x0022|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x0022|SYNTHETIC\lPHI: r3 \l  PHI: (r3v1 'peekedId3Bytes' int) = (r3v0 'peekedId3Bytes' int), (r3v2 'peekedId3Bytes' int), (r3v2 'peekedId3Bytes' int) binds: [B:4:0x0013, B:6:0x001d, B:7:0x001f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{private boolean com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronize((r12v0 'this' com.google.android.exoplayer2.extractor.mp3.Mp3Extractor A[IMMUTABLE_TYPE, THIS]), (r13v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'sniffing' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_48;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_48;
Node_7 -> Node_48;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_18;
Node_12 -> Node_44[style=dashed];
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_40;
Node_14 -> Node_15;
Node_15 -> Node_49;
Node_16 -> Node_3;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_34;
Node_24 -> Node_25;
Node_25 -> Node_30;
Node_25 -> Node_43[style=dashed];
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_29 -> Node_50;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_45;
Node_33 -> Node_46;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_37;
Node_37 -> Node_47;
Node_38 -> Node_39;
Node_39 -> Node_37;
Node_39 -> Node_42[style=dashed];
Node_40 -> Node_15;
Node_41 -> Node_8;
Node_42 -> Node_13;
Node_43 -> Node_26;
Node_44 -> Node_13;
Node_45 -> Node_41;
Node_46 -> Node_41;
Node_47 -> Node_41;
Node_48 -> Node_8;
}

