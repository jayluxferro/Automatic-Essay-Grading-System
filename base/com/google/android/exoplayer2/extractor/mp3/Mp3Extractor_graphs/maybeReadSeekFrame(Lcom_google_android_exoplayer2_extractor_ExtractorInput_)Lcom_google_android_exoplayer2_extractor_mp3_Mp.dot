digraph "CFG forcom.google.android.exoplayer2.extractor.mp3.Mp3Extractor.maybeReadSeekFrame(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;)Lcom\/google\/android\/exoplayer2\/extractor\/mp3\/Mp3Extractor$Seeker;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r8 = 21\lcom.google.android.exoplayer2.util.ParsableByteArray r1 = new com.google.android.exoplayer2.util.ParsableByteArray(r10.synchronizedHeader.frameSize)\lr11.peekFully(r1.data, 0, r10.synchronizedHeader.frameSize)\l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|if ((r10.synchronizedHeader.version & 1) == 0) goto L_0x0082\l}"];
Node_2 [shape=record,label="{2\:\ 0x001e}"];
Node_3 [shape=record,label="{3\:\ 0x0022|if (r10.synchronizedHeader.channels == 1) goto L_0x0026\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|r8 = 36\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|PHI: r8 \l  PHI: (r8v2 'xingBase' int) = (r8v0 'xingBase' int), (r8v1 'xingBase' int), (r8v0 'xingBase' int), (r8v3 'xingBase' int) binds: [B:22:0x0086, B:23:0x0088, B:3:0x0022, B:4:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = getSeekFrameHeader(r1, r8)\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|if (r6 == SEEK_HEADER_XING) goto L_0x0032\l}"];
Node_7 [shape=record,label="{7\:\ 0x002e}"];
Node_8 [shape=record,label="{8\:\ 0x0030|if (r6 != SEEK_HEADER_INFO) goto L_0x008b\l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|com.google.android.exoplayer2.extractor.mp3.XingSeeker r7 = com.google.android.exoplayer2.extractor.mp3.XingSeeker.create(r10.synchronizedHeader, r1, r11.getPosition(), r11.getLength())\l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|if (r7 == null) goto L_0x006a\l}"];
Node_11 [shape=record,label="{11\:\ 0x0042}"];
Node_12 [shape=record,label="{12\:\ 0x0048|if (r10.gaplessInfoHolder.hasGaplessInfo() != false) goto L_0x006a\l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|r11.resetPeekPosition()\lr11.advancePeekPosition(r8 + 141)\lr11.peekFully(r10.scratch.data, 0, 3)\lr10.scratch.setPosition(0)\lr10.gaplessInfoHolder.setFromXingHeaderValue(r10.scratch.readUnsignedInt24())\l}"];
Node_14 [shape=record,label="{14\:\ 0x006a|r11.skipFully(r10.synchronizedHeader.frameSize)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0071|if (r7 == null) goto L_0x00a4\l}"];
Node_16 [shape=record,label="{16\:\ 0x0073}"];
Node_17 [shape=record,label="{17\:\ 0x0077|if (r7.isSeekable() != false) goto L_0x00a4\l}"];
Node_18 [shape=record,label="{18\:\ 0x0079}"];
Node_19 [shape=record,label="{19\:\ 0x007b|if (r6 != SEEK_HEADER_INFO) goto L_0x00a4\l}"];
Node_20 [shape=record,label="{20\:\ 0x007d}"];
Node_21 [shape=record,label="{21\:\ 0x0082}"];
Node_22 [shape=record,label="{22\:\ 0x0086|if (r10.synchronizedHeader.channels != 1) goto L_0x0026\l}"];
Node_23 [shape=record,label="{23\:\ 0x0088|r8 = 13\l}"];
Node_24 [shape=record,label="{24\:\ 0x008b}"];
Node_25 [shape=record,label="{25\:\ 0x008d|if (r6 != SEEK_HEADER_VBRI) goto L_0x00a6\l}"];
Node_26 [shape=record,label="{26\:\ 0x008f|com.google.android.exoplayer2.extractor.mp3.VbriSeeker r7 = com.google.android.exoplayer2.extractor.mp3.VbriSeeker.create(r10.synchronizedHeader, r1, r11.getPosition(), r11.getLength())\lr11.skipFully(r10.synchronizedHeader.frameSize)\l}"];
Node_27 [shape=record,label="{27\:\ 0x00a4|PHI: r7 \l  PHI: (r7v0 'seeker' com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker) = (r7v1 'seeker' com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker), (r7v1 'seeker' com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker), (r7v1 'seeker' com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker), (r7v2 'seeker' com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker), (r7v3 'seeker' com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker) binds: [B:15:0x0071, B:17:0x0077, B:19:0x007b, B:28:0x00a6, B:26:0x008f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x00a6|r7 = null\lr11.resetPeekPosition()\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return getConstantBitrateSeeker(r11)\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return r7\l}"];
MethodNode[shape=record,label="{private com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Seeker com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.maybeReadSeekFrame((r10v0 'this' com.google.android.exoplayer2.extractor.mp3.Mp3Extractor A[IMMUTABLE_TYPE, THIS]), (r11v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_24;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_27;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_27;
Node_20 -> Node_29;
Node_21 -> Node_22;
Node_22 -> Node_5;
Node_22 -> Node_23[style=dashed];
Node_23 -> Node_5;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_30;
Node_28 -> Node_27;
}

