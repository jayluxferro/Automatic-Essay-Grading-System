digraph "CFG forcom.google.android.exoplayer2.extractor.mp3.Mp3Extractor.\<init\>(IJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r3 I:int A[D('flags' int)])\l  (r2 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.flags int \l0x0005: IPUT  \l  (r4 I:long A[D('forcedFirstSampleTimestampUs' long)])\l  (r2 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.forcedFirstSampleTimestampUs long \l0x0007: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray) =  com.google.android.exoplayer2.util.ParsableByteArray \l0x0009: CONST  (r1 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x000b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r1 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.\<init\>(int):void type: DIRECT \l0x000e: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ParsableByteArray)\l  (r2 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.scratch com.google.android.exoplayer2.util.ParsableByteArray \l0x0010: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader) =  com.google.android.exoplayer2.extractor.MpegAudioHeader \l0x0012: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l com.google.android.exoplayer2.extractor.MpegAudioHeader.\<init\>():void type: DIRECT \l0x0015: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.MpegAudioHeader)\l  (r2 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.synchronizedHeader com.google.android.exoplayer2.extractor.MpegAudioHeader \l0x0017: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.GaplessInfoHolder) =  com.google.android.exoplayer2.extractor.GaplessInfoHolder \l0x0019: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.GaplessInfoHolder)\l com.google.android.exoplayer2.extractor.GaplessInfoHolder.\<init\>():void type: DIRECT \l0x001c: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.GaplessInfoHolder)\l  (r2 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.gaplessInfoHolder com.google.android.exoplayer2.extractor.GaplessInfoHolder \l0x001e: CONST  (r0 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0023: IPUT  \l  (r0 I:long)\l  (r2 I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor)\l com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.basisTimeUs long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0025|0x0025: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.\<init\>((r2 'this' I:com.google.android.exoplayer2.extractor.mp3.Mp3Extractor A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('forcedFirstSampleTimestampUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0025: r3 'flags' int\l  ?\-0x0025: r4 'forcedFirstSampleTimestampUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

