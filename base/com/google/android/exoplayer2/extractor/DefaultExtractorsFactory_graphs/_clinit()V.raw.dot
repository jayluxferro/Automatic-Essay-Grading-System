digraph "CFG forcom.google.android.exoplayer2.extractor.DefaultExtractorsFactory.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST_STR  (r1 I:java.lang.String) =  \"com.google.android.exoplayer2.ext.flac.FlacExtractor\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x0019, NoSuchMethodException \-\> 0x0017 \}, TRY_ENTER]\l0x0007: CONST_CLASS  (r2 I:java.lang.Class\<com.google.android.exoplayer2.extractor.Extractor\>) =  com.google.android.exoplayer2.extractor.Extractor.class A[Catch:\{ ClassNotFoundException \-\> 0x0019, NoSuchMethodException \-\> 0x0017 \}]\l0x0009: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.Class), (r2 I:java.lang.Class) java.lang.Class.asSubclass(java.lang.Class):java.lang.Class type: VIRTUAL A[Catch:\{ ClassNotFoundException \-\> 0x0019, NoSuchMethodException \-\> 0x0017 \}]\l0x000d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \-\> 0x0019, NoSuchMethodException \-\> 0x0017 \}]\l0x000e: NEW_ARRAY  (r2 I:java.lang.Class[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ ClassNotFoundException \-\> 0x0019, NoSuchMethodException \-\> 0x0017 \}]\l0x0010: INVOKE  (r0 I:java.lang.reflect.Constructor A[D('flacExtractorConstructor' java.lang.reflect.Constructor\<? extends com.google.android.exoplayer2.extractor.Extractor\>)]) = (r1 I:java.lang.Class), (r2 I:java.lang.Class[]) java.lang.Class.getConstructor(java.lang.Class[]):java.lang.reflect.Constructor type: VIRTUAL A[Catch:\{ ClassNotFoundException \-\> 0x0019, NoSuchMethodException \-\> 0x0017 \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: SPUT  \l  (r0 I:java.lang.reflect.Constructor\<? extends com.google.android.exoplayer2.extractor.Extractor\> A[D('flacExtractorConstructor' java.lang.reflect.Constructor\<? extends com.google.android.exoplayer2.extractor.Extractor\>)])\l com.google.android.exoplayer2.extractor.DefaultExtractorsFactory.FLAC_EXTRACTOR_CONSTRUCTOR java.lang.reflect.Constructor \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|ExcHandler: NoSuchMethodException null\lSplitter:B:1:0x0003\l|0x0017: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|ExcHandler: ClassNotFoundException null\lSplitter:B:1:0x0003\l|0x0019: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
MethodNode[shape=record,label="{static void com.google.android.exoplayer2.extractor.DefaultExtractorsFactory.\<clinit\>()  | Debug Info:\l  0x0001\-0x001a: r0 'flacExtractorConstructor' java.lang.reflect.Constructor\<? extends com.google.android.exoplayer2.extractor.Extractor\>\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_1 -> Node_6;
Node_2 -> Node_8;
Node_2 -> Node_6;
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_4;
Node_8 -> Node_4;
}

