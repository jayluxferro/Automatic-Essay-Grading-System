digraph "CFG forcom.google.android.exoplayer2.extractor.GaplessInfoHolder.setFromMetadata(Lcom\/google\/android\/exoplayer2\/metadata\/Metadata;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v2 'i' int) binds: [B:0:0x0000, B:8:0x001e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:8:0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r2 \>= r6.length()) goto L_0x0021\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|com.google.android.exoplayer2.metadata.Metadata$Entry r1 = r6.get(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|if ((r1 instanceof com.google.android.exoplayer2.metadata.id3.CommentFrame) == false) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|com.google.android.exoplayer2.metadata.id3.CommentFrame r0 = (com.google.android.exoplayer2.metadata.id3.CommentFrame) r1\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if (setFromComment(r0.description, r0.text) == false) goto L_0x001e\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:8:0x001e\l|int r2 = r2 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|SYNTHETIC\lRETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.extractor.GaplessInfoHolder.setFromMetadata((r5v0 'this' com.google.android.exoplayer2.extractor.GaplessInfoHolder A[IMMUTABLE_TYPE, THIS]), (r6v0 'metadata' com.google.android.exoplayer2.metadata.Metadata A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_11[style=dashed];
Node_6 -> Node_13;
Node_8 -> Node_1;
Node_10 -> Node_9;
Node_11 -> Node_7;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

