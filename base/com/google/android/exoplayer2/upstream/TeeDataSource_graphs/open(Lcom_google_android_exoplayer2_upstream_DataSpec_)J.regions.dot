digraph "CFG forcom.google.android.exoplayer2.upstream.TeeDataSource.open(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;)J" {
subgraph cluster_Region_825355937 {
label = "R(4:0|(1:4)|5|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long long r6 = r10.upstream.open(r11)\l}"];
subgraph cluster_IfRegion_1628474221 {
label = "IF [B:1:0x000c, B:3:0x0010] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000c|ADDED_TO_REGION\l|if (r11.length == \-1) goto L_0x000e\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|ADDED_TO_REGION\l|if (r6 != \-1) goto L_0x0012\l}"];
subgraph cluster_Region_914969118 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|r11 = new com.google.android.exoplayer2.upstream.DataSpec(r11.uri, r11.absoluteStreamPosition, r11.position, r6, r11.key, r11.flags)\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0022|PHI: r11 \l  PHI: (r11v1 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec) = (r11v0 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec), (r11v0 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec), (r11v2 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec) binds: [B:1:0x000c, B:3:0x0010, B:4:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|r10.dataSink.open(r11)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|RETURN\l|return r6\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000e}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.upstream.TeeDataSource.open((r10v0 'this' com.google.android.exoplayer2.upstream.TeeDataSource A[IMMUTABLE_TYPE, THIS]), (r11v0 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_2 -> Node_3;
}

