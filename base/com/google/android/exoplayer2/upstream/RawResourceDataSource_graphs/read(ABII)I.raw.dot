digraph "CFG forcom.google.android.exoplayer2.upstream.RawResourceDataSource.read([BII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r8 I:?[long, double]) = (\-1 ?[long, double]) \l0x0002: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('readLength' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IGET  (r4 I:long) = \l  (r10 I:com.google.android.exoplayer2.upstream.RawResourceDataSource)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.bytesRemaining long \l0x0009: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x000b: CMP_L  (r4 I:int) = (r4 I:long), (r6 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|SYNTHETIC\lSplitter:B:7:0x0011\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0011\l|0x0011: IGET  (r4 I:long) = \l  (r10 I:com.google.android.exoplayer2.upstream.RawResourceDataSource)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.bytesRemaining long A[Catch:\{ IOException \-\> 0x003a \}, TRY_ENTER]\l0x0013: CMP_L  (r4 I:int) = (r4 I:long), (r8 I:long) A[Catch:\{ IOException \-\> 0x003a \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0031 A[Catch:\{ IOException \-\> 0x003a \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('readLength' int)])\l A[Catch:\{ IOException \-\> 0x003a \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|0x0018: IGET  (r4 I:java.io.InputStream) = \l  (r10 I:com.google.android.exoplayer2.upstream.RawResourceDataSource)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.inputStream java.io.InputStream A[Catch:\{ IOException \-\> 0x003a \}]\l0x001a: INVOKE  (r0 I:int) = \l  (r4 I:java.io.InputStream)\l  (r11 I:byte[] A[D('buffer' byte[])])\l  (r12 I:int A[D('offset' int)])\l  (r1 I:int A[D('bytesToRead' int)])\l java.io.InputStream.read(byte[], int, int):int type: VIRTUAL A[Catch:\{ IOException \-\> 0x003a \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bytesRead' int)]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0043 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: IGET  (r4 I:long) = \l  (r10 I:com.google.android.exoplayer2.upstream.RawResourceDataSource)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.bytesRemaining long \l0x0022: CMP_L  (r4 I:int) = (r4 I:long), (r8 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|0x0024: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0041 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0026|0x0026: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException) =  com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException \l0x0028: NEW_INSTANCE  (r4 I:java.io.EOFException) =  java.io.EOFException \l0x002a: INVOKE  (r4 I:java.io.EOFException) java.io.EOFException.\<init\>():void type: DIRECT \l0x002d: INVOKE  \l  (r3 I:com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException)\l  (r4 I:java.io.IOException)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.RawResourceDataSourceException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0030|0x0030: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0031|SYNTHETIC\lSplitter:B:18:0x0031\l}"];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x0031\l|0x0031: IGET  (r4 I:long) = \l  (r10 I:com.google.android.exoplayer2.upstream.RawResourceDataSource)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.bytesRemaining long A[Catch:\{ IOException \-\> 0x003a \}, TRY_ENTER]\l0x0033: CAST  (r6 I:long) = (long) (r13 I:int A[D('readLength' int)]) A[Catch:\{ IOException \-\> 0x003a \}]\l0x0034: INVOKE  (r4 I:long) = (r4 I:long), (r6 I:long) java.lang.Math.min(long, long):long type: STATIC A[Catch:\{ IOException \-\> 0x003a \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0037|0x0038: CAST  (r1 I:int) = (int) (r4 I:long) \l}"];
Node_21 [shape=record,label="{21\:\ 0x003a|ExcHandler: IOException null\lSplitter:B:7:0x0011\l|0x003a: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_22 [shape=record,label="{22\:\ 0x003b|0x003b: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException) =  com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException \l0x003d: INVOKE  \l  (r3 I:com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException)\l  (r2 I:java.io.IOException A[D('e' java.io.IOException)])\l com.google.android.exoplayer2.upstream.RawResourceDataSource.RawResourceDataSourceException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x0040|0x0040: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0041|0x0041: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bytesRead' int)]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0043|0x0043: IGET  (r4 I:long) = \l  (r10 I:com.google.android.exoplayer2.upstream.RawResourceDataSource)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.bytesRemaining long \l0x0045: CMP_L  (r3 I:int) = (r4 I:long), (r8 I:long) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0047|0x0047: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x004f \l}"];
Node_27 [shape=record,label="{27\:\ 0x0049|0x0049: IGET  (r4 I:long) = \l  (r10 I:com.google.android.exoplayer2.upstream.RawResourceDataSource)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.bytesRemaining long \l0x004b: CAST  (r6 I:long) = (long) (r0 I:int A[D('bytesRead' int)]) \l0x004c: ARITH  (r4 I:long) = (r4 I:long) \- (r6 I:long) \l0x004d: IPUT  \l  (r4 I:long)\l  (r10 I:com.google.android.exoplayer2.upstream.RawResourceDataSource)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.bytesRemaining long \l}"];
Node_28 [shape=record,label="{28\:\ 0x004f|0x004f: IGET  (r3 I:com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.RawResourceDataSource\>) = \l  (r10 I:com.google.android.exoplayer2.upstream.RawResourceDataSource)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.listener com.google.android.exoplayer2.upstream.TransferListener \l}"];
Node_29 [shape=record,label="{29\:\ 0x0051|0x0051: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0053|0x0053: IGET  (r3 I:com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.RawResourceDataSource\>) = \l  (r10 I:com.google.android.exoplayer2.upstream.RawResourceDataSource)\l com.google.android.exoplayer2.upstream.RawResourceDataSource.listener com.google.android.exoplayer2.upstream.TransferListener \l0x0055: INVOKE  \l  (r3 I:com.google.android.exoplayer2.upstream.TransferListener)\l  (r10 I:java.lang.Object)\l  (r0 I:int A[D('bytesRead' int)])\l com.google.android.exoplayer2.upstream.TransferListener.onBytesTransferred(java.lang.Object, int):void type: INTERFACE \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.upstream.RawResourceDataSource.read((r10 'this' I:com.google.android.exoplayer2.upstream.RawResourceDataSource A[IMMUTABLE_TYPE, THIS]), (r11 I:byte[] A[D('buffer' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('readLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001e\-0x0031: r0 'bytesRead' int\l  0x0018\-0x0031: r1 'bytesToRead' int\l  0x003b\-0x0041: r2 'e' java.io.IOException\l  0x0041\-0x0058: r0 'bytesRead' int\l  0x0041\-0x0058: r1 'bytesToRead' int\l  ?\-0x0058: r11 'buffer' byte[]\l  ?\-0x0058: r12 'offset' int\l  ?\-0x0058: r13 'readLength' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.RawResourceDataSource$RawResourceDataSourceException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_25;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_11;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_3;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_3;
Node_29 -> Node_30[style=dashed];
Node_30 -> Node_3;
}

