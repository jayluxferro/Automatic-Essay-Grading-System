digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultBandwidthMeter.onTransferStart(Ljava\/lang\/Object;Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;)V" {
subgraph cluster_Region_1817467812 {
label = "R(1:(1:(2:(1:4)|5)))";
node [shape=record,color=blue];
subgraph cluster_Region_1794269307 {
label = "R(1:(2:(1:4)|5))";
node [shape=record,color=blue];
subgraph cluster_Region_1944846005 {
label = "R(2:(1:4)|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2002981559 {
label = "IF [B:3:0x0003] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r2.streamCount == 0) goto L_0x0005\l}"];
subgraph cluster_Region_967114372 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|r2.sampleStartTimeMs = android.os.SystemClock.elapsedRealtime()\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x000b|r2.streamCount++\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0011|DONT_GENERATE\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0012}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0013|REMOVE\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0014|REMOVE\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0015|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public synchronized void com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.onTransferStart((r2v0 'this' com.google.android.exoplayer2.upstream.DefaultBandwidthMeter A[IMMUTABLE_TYPE, THIS]), (r3v0 'source' java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

