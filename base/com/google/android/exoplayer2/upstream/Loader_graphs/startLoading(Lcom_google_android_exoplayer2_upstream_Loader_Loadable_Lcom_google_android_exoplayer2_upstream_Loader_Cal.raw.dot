digraph "CFG forcom.google.android.exoplayer2.upstream.Loader.startLoading(Lcom\/google\/android\/exoplayer2\/upstream\/Loader$Loadable;Lcom\/google\/android\/exoplayer2\/upstream\/Loader$Callback;I)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:android.os.Looper) =  android.os.Looper.myLooper():android.os.Looper type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('looper' android.os.Looper)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x000a: INVOKE  (r6 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC \l0x000e: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.upstream.Loader$LoadTask) =  com.google.android.exoplayer2.upstream.Loader$LoadTask \l0x0010: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0011: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY] A[D('loadable' T)]) \l0x0012: MOVE  (r4 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY] A[D('callback' com.google.android.exoplayer2.upstream.Loader$Callback\<T\>)])\l \l0x0013: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('defaultMinRetryCount' int)])\l \l0x0014: INVOKE  \l  (r0 I:com.google.android.exoplayer2.upstream.Loader$LoadTask)\l  (r1 I:com.google.android.exoplayer2.upstream.Loader)\l  (r2 I:android.os.Looper A[D('looper' android.os.Looper)])\l  (r3 I:com.google.android.exoplayer2.upstream.Loader$Loadable)\l  (r4 I:com.google.android.exoplayer2.upstream.Loader$Callback)\l  (r5 I:int)\l  (r6 I:long A[D('startTimeMs' long)])\l com.google.android.exoplayer2.upstream.Loader.LoadTask.\<init\>(com.google.android.exoplayer2.upstream.Loader, android.os.Looper, com.google.android.exoplayer2.upstream.Loader$Loadable, com.google.android.exoplayer2.upstream.Loader$Callback, int, long):void type: DIRECT \l0x0017: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0019: INVOKE  \l  (r0 I:com.google.android.exoplayer2.upstream.Loader$LoadTask)\l  (r4 I:long)\l com.google.android.exoplayer2.upstream.Loader.LoadTask.start(long):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: RETURN  (r6 I:long A[D('startTimeMs' long)]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.upstream.Loader.startLoading((r8 'this' I:com.google.android.exoplayer2.upstream.Loader A[IMMUTABLE_TYPE, THIS]), (r9 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.google.android.exoplayer2.upstream.Loader$Callback\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('defaultMinRetryCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000e\-0x001d: r6 'startTimeMs' long\l  0x0004\-0x001e: r2 'looper' android.os.Looper\l  0x0000\-0x001e: r9 'loadable' T\l  0x0000\-0x001e: r10 'callback' com.google.android.exoplayer2.upstream.Loader$Callback\<T\>\l  ?\-0x001e: r11 'defaultMinRetryCount' int\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Lcom\/google\/android\/exoplayer2\/upstream\/Loader$Loadable;, \>(TT;, Lcom\/google\/android\/exoplayer2\/upstream\/Loader$Callback, \<TT;\>;I)J]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

