digraph "CFG forcom.google.android.exoplayer2.upstream.crypto.AesCipherDataSource.open(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r10 I:com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource)\l com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource.upstream com.google.android.exoplayer2.upstream.DataSource \l0x0002: INVOKE  (r8 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r11 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSource.open(com.google.android.exoplayer2.upstream.DataSpec):long type: INTERFACE \l0x0006: IGET  (r0 I:java.lang.String) = \l  (r11 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.key java.lang.String \l0x0008: INVOKE  (r4 I:long) = (r0 I:java.lang.String) com.google.android.exoplayer2.upstream.crypto.CryptoUtil.getFNV64Hash(java.lang.String):long type: STATIC \l0x000c: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher) =  com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher \l0x000e: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000f: IGET  (r3 I:byte[]) = \l  (r10 I:com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource)\l com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource.secretKey byte[] \l0x0011: IGET  (r6 I:long) = \l  (r11 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.absoluteStreamPosition long \l0x0013: INVOKE  \l  (r1 I:com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher)\l  (r2 I:int)\l  (r3 I:byte[])\l  (r4 I:long A[D('nonce' long)])\l  (r6 I:long)\l com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.\<init\>(int, byte[], long, long):void type: DIRECT \l0x0016: IPUT  \l  (r1 I:com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher)\l  (r10 I:com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource)\l com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource.cipher com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN  (r8 I:long A[D('dataLength' long)]) \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource.open((r10 'this' I:com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource A[IMMUTABLE_TYPE, THIS]), (r11 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000c\-0x0018: r4 'nonce' long\l  0x0006\-0x0018: r8 'dataLength' long\l  ?\-0x0018: r11 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

