digraph "CFG forcom.google.android.exoplayer2.upstream.crypto.AesCipherDataSource.read([BII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r6 != 0) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|int r0 = r3.upstream.read(r4, r5, r6)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r0 != \-1) goto L_0x000f\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d}"];
Node_6 [shape=record,label="{6\:\ 0x000f|r3.cipher.updateInPlace(r4, r5, r0)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource.read((r3v0 'this' com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource A[IMMUTABLE_TYPE, THIS]), (r4v0 'data' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'offset' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'readLength' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
}

