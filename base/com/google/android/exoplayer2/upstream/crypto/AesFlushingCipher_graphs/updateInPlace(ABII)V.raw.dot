digraph "CFG forcom.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.updateInPlace([BII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY] A[D('data' byte[])]) \l0x0002: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('offset' int)])\l \l0x0003: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('length' int)])\l \l0x0004: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY] A[D('data' byte[])]) \l0x0005: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('offset' int)])\l \l0x0006: INVOKE  \l  (r0 I:com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher)\l  (r1 I:byte[])\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:byte[])\l  (r5 I:int)\l com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.update(byte[], int, int, byte[], int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.updateInPlace((r6 'this' I:com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher A[IMMUTABLE_TYPE, THIS]), (r7 I:byte[] A[D('data' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0009: r7 'data' byte[]\l  ?\-0x0009: r8 'offset' int\l  ?\-0x0009: r9 'length' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

