digraph "CFG forcom.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.update([BII[BI)V" {
subgraph cluster_Region_677245513 {
label = "R(3:(2:2|(1:23))|4|(1:(5:6|9|12|(1:14)|17)))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1459948047 {
label = "LOOP:0: (2:2|(1:23))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r10.pendingXorBytes \> 0) goto L_0x0004\l}"];
subgraph cluster_Region_889232354 {
label = "R(2:2|(1:23))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r14[r15] = (byte) (r11[r12] ^ r10.flushedBlock[r10.blockSize \- r10.pendingXorBytes])\lr15++\lr12++\lr10.pendingXorBytes\-\-\lr13\-\-\l}"];
subgraph cluster_IfRegion_1876357043 {
label = "IF [B:3:0x001f] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001f|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:3:0x001f\l|if (r13 == 0) goto L_0x0021\l}"];
subgraph cluster_Region_1358043929 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
Node_4 [shape=record,label="{4\:\ 0x0022|int int r9 = nonFlushingUpdate(r11, r12, r13, r14, r15)\l}"];
subgraph cluster_Region_794310266 {
label = "R(1:(5:6|9|12|(1:14)|17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_920660624 {
label = "IF [B:5:0x0026] THEN: R(5:6|9|12|(1:14)|17) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0026|if (r13 != r9) goto L_0x0028\l}"];
subgraph cluster_Region_345521874 {
label = "R(5:6|9|12|(1:14)|17)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0028|int int r6 = r13 \- r9\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|PHI: r0 \l  PHI: (r0v3 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r6 \< r10.blockSize)\lint int r15 = r15 + r9\lr10.pendingXorBytes = r10.blockSize \- r6\l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|PHI: r0 \l  PHI: (r0v9 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(nonFlushingUpdate(r10.zerosBlock, 0, r10.pendingXorBytes, r10.flushedBlock, 0) == r10.blockSize)\lint r7 = 0\lint r8 = r15\l}"];
subgraph cluster_LoopRegion_665116804 {
label = "LOOP:1: (1:14)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x004f|LOOP_START\lPHI: r7 r8 \l  PHI: (r7v1 'i' int) = (r7v0 'i' int), (r7v2 'i' int) binds: [B:12:0x004a, B:14:0x0051] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 'outOffset' int) = (r8v0 'outOffset' int), (r8v2 'outOffset' int) binds: [B:12:0x004a, B:14:0x0051] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:13:0x004f\-\>B:14:0x0051\l|if (r7 \< r6) goto L_0x0051\l}"];
subgraph cluster_Region_1621918083 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0051|LOOP_END\lLOOP:1: B:13:0x004f\-\>B:14:0x0051\l|r14[r8] = r10.flushedBlock[r7]\lr7++\lr8++\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0061}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r12 r13 r15 \l  PHI: (r12v1 'inOffset' int) = (r12v0 'inOffset' int), (r12v2 'inOffset' int) binds: [B:0:0x0000, B:3:0x001f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 'length' int) = (r13v0 'length' int), (r13v2 'length' int) binds: [B:0:0x0000, B:3:0x001f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v1 'outOffset' int) = (r15v0 'outOffset' int), (r15v5 'outOffset' int) binds: [B:0:0x0000, B:3:0x001f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:3:0x001f\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002c}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002e}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0047}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0049}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x005d}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x005f}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0022|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0021|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0061|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.update((r10v0 'this' com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher A[IMMUTABLE_TYPE, THIS]), (r11v0 'in' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'inOffset' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 'length' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'out' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'outOffset' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_18[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_0[style=dashed];
Node_3 -> Node_19;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_21[style=dashed];
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_20[style=dashed];
Node_14 -> Node_13;
Node_17 -> Node_22;
Node_0 -> Node_1;
Node_7 -> Node_8;
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_15 -> Node_9;
Node_16 -> Node_12;
Node_18 -> Node_4;
Node_19 -> Node_23;
Node_20 -> Node_17;
}

