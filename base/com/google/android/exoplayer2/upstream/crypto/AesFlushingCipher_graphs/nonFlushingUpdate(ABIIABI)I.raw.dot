digraph "CFG forcom.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.nonFlushingUpdate([BII[BI)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:javax.crypto.Cipher) = \l  (r7 I:com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher)\l com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.cipher javax.crypto.Cipher A[Catch:\{ ShortBufferException \-\> 0x000c \}, TRY_ENTER]\l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY] A[D('in' byte[])]) A[Catch:\{ ShortBufferException \-\> 0x000c \}]\l0x0003: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('inOffset' int)])\l A[Catch:\{ ShortBufferException \-\> 0x000c \}]\l0x0004: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('length' int)])\l A[Catch:\{ ShortBufferException \-\> 0x000c \}]\l0x0005: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY] A[D('out' byte[])]) A[Catch:\{ ShortBufferException \-\> 0x000c \}]\l0x0006: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('outOffset' int)])\l A[Catch:\{ ShortBufferException \-\> 0x000c \}]\l0x0007: INVOKE  (r0 I:int) = \l  (r0 I:javax.crypto.Cipher)\l  (r1 I:byte[])\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:byte[])\l  (r5 I:int)\l javax.crypto.Cipher.update(byte[], int, int, byte[], int):int type: VIRTUAL A[Catch:\{ ShortBufferException \-\> 0x000c \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN  (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|ExcHandler: ShortBufferException null\lSplitter:B:0:0x0000\l|0x000c: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x000f: INVOKE  \l  (r0 I:java.lang.RuntimeException)\l  (r6 I:java.lang.Throwable A[D('e' javax.crypto.ShortBufferException)])\l java.lang.RuntimeException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.nonFlushingUpdate((r7 'this' I:com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher A[IMMUTABLE_TYPE, THIS]), (r8 I:byte[] A[D('in' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('inOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:byte[] A[D('out' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('outOffset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000d\-0x0012: r6 'e' javax.crypto.ShortBufferException\l  ?\-0x0012: r8 'in' byte[]\l  ?\-0x0012: r9 'inOffset' int\l  ?\-0x0012: r10 'length' int\l  ?\-0x0012: r11 'out' byte[]\l  ?\-0x0012: r12 'outOffset' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_4;
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

