digraph "CFG forcom.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.\<init\>(I[BJJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\lSplitter:B:1:0x0005\l|r9.cipher = javax.crypto.Cipher.getInstance(\"AES\/CTR\/NoPadding\")     \/\/ Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\lr9.blockSize = r9.cipher.getBlockSize()     \/\/ Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\lr9.zerosBlock = new byte[r9.blockSize]     \/\/ Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\lr9.flushedBlock = new byte[r9.blockSize]     \/\/ Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\llong r0 = r14 \/ ((long) r9.blockSize)     \/\/ Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\lint r3 = (int) (r14 % ((long) r9.blockSize))     \/\/ Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\lr9.cipher.init(r10, new javax.crypto.spec.SecretKeySpec(r11, r9.cipher.getAlgorithm().split(\"\/\")[0]), new javax.crypto.spec.IvParameterSpec(getInitializationVector(r12, r0)))     \/\/ Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x004c|Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\l|if (r3 == 0) goto L_?     \/\/ Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x004e|Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\l|updateInPlace(new byte[r3], 0, r3)     \/\/ Catch:\{ InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException \-\> 0x0055 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0055|ExcHandler: InvalidAlgorithmParameterException \| InvalidKeyException \| NoSuchAlgorithmException \| NoSuchPaddingException (r2v0 'e' java.security.GeneralSecurityException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0005\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x0056}"];
Node_7 [shape=record,label="{7\:\ 0x005b|throw new java.lang.RuntimeException(r2)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher.\<init\>((r9v0 'this' com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher A[IMMUTABLE_TYPE, THIS]), (r10v0 'mode' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'secretKey' byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'nonce' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'offset' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

