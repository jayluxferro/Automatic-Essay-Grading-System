digraph "CFG forcom.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties.clearAndSet(Ljava\/util\/Map;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|SYNTHETIC\lSplitter:B:2:0x0002\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0002\l|0x0002: IPUT  \l  (r0 I:java.util.Map\<java.lang.String, java.lang.String\>)\l  (r1 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)\l com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties.requestPropertiesSnapshot java.util.Map A[Catch:\{ all \-\> 0x0010 \}, TRY_ENTER]\l0x0004: IGET  (r0 I:java.util.Map\<java.lang.String, java.lang.String\>) = \l  (r1 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)\l com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties.requestProperties java.util.Map A[Catch:\{ all \-\> 0x0010 \}]\l0x0006: INVOKE  (r0 I:java.util.Map) java.util.Map.clear():void type: INTERFACE A[Catch:\{ all \-\> 0x0010 \}]\l0x0009: IGET  (r0 I:java.util.Map\<java.lang.String, java.lang.String\>) = \l  (r1 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)\l com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties.requestProperties java.util.Map A[Catch:\{ all \-\> 0x0010 \}]\l0x000b: INVOKE  \l  (r0 I:java.util.Map)\l  (r2 I:java.util.Map A[D('properties' java.util.Map\<java.lang.String, java.lang.String\>)])\l java.util.Map.putAll(java.util.Map):void type: INTERFACE A[Catch:\{ all \-\> 0x0010 \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|ExcHandler: all null\lSplitter:B:2:0x0002\l|0x0010: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties.clearAndSet((r1 'this' I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties A[IMMUTABLE_TYPE, THIS]), (r2 I:java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0000\-0x0012: r2 'properties' java.util.Map\<java.lang.String, java.lang.String\>\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map, \<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

