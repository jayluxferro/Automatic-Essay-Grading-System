digraph "CFG forcom.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.\<init\>(Ljava\/lang\/String;Ljava\/io\/IOException;Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r0 I:java.io.IOException)\l  (r1 I:java.lang.String A[D('message' java.lang.String)])\l  (r2 I:java.lang.Throwable A[D('cause' java.io.IOException)])\l java.io.IOException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l0x0003: IPUT  \l  (r3 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l  (r0 I:com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException)\l com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.dataSpec com.google.android.exoplayer2.upstream.DataSpec \l0x0005: IPUT  \l  (r4 I:int A[D('type' int)])\l  (r0 I:com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException)\l com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.type int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.\<init\>((r0 'this' I:com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.String A[D('message' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.io.IOException A[D('cause' java.io.IOException), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0007: r1 'message' java.lang.String\l  ?\-0x0007: r2 'cause' java.io.IOException\l  ?\-0x0007: r3 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\l  ?\-0x0007: r4 'type' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

