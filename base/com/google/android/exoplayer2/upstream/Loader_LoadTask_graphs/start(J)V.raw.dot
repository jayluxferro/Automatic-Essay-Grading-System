digraph "CFG forcom.google.android.exoplayer2.upstream.Loader.LoadTask.start(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r0 I:com.google.android.exoplayer2.upstream.Loader) = \l  (r5 I:com.google.android.exoplayer2.upstream.Loader$LoadTask A[D('this' com.google.android.exoplayer2.upstream.Loader$LoadTask\<T\>)])\l com.google.android.exoplayer2.upstream.Loader.LoadTask.this$0 com.google.android.exoplayer2.upstream.Loader \l0x0003: INVOKE  (r0 I:com.google.android.exoplayer2.upstream.Loader$LoadTask) = (r0 I:com.google.android.exoplayer2.upstream.Loader) com.google.android.exoplayer2.upstream.Loader.access$000(com.google.android.exoplayer2.upstream.Loader):com.google.android.exoplayer2.upstream.Loader$LoadTask type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x000d: IGET  (r0 I:com.google.android.exoplayer2.upstream.Loader) = \l  (r5 I:com.google.android.exoplayer2.upstream.Loader$LoadTask A[D('this' com.google.android.exoplayer2.upstream.Loader$LoadTask\<T\>)])\l com.google.android.exoplayer2.upstream.Loader.LoadTask.this$0 com.google.android.exoplayer2.upstream.Loader \l0x000f: INVOKE  \l  (r0 I:com.google.android.exoplayer2.upstream.Loader)\l  (r5 I:com.google.android.exoplayer2.upstream.Loader$LoadTask A[D('this' com.google.android.exoplayer2.upstream.Loader$LoadTask\<T\>)])\l com.google.android.exoplayer2.upstream.Loader.access$002(com.google.android.exoplayer2.upstream.Loader, com.google.android.exoplayer2.upstream.Loader$LoadTask):com.google.android.exoplayer2.upstream.Loader$LoadTask type: STATIC \l0x0012: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0014: CMP_L  (r0 I:int) = (r6 I:long A[D('delayMillis' long)]), (r2 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  \l  (r5 I:com.google.android.exoplayer2.upstream.Loader$LoadTask A[D('this' com.google.android.exoplayer2.upstream.Loader$LoadTask\<T\>)])\l  (r1 I:int)\l  (r6 I:long A[D('delayMillis' long)])\l com.google.android.exoplayer2.upstream.Loader.LoadTask.sendEmptyMessageDelayed(int, long):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: INVOKE  \l  (r5 I:com.google.android.exoplayer2.upstream.Loader$LoadTask A[D('this' com.google.android.exoplayer2.upstream.Loader$LoadTask\<T\>)])\l com.google.android.exoplayer2.upstream.Loader.LoadTask.execute():void type: DIRECT \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.Loader.LoadTask.start((r5 'this' I:com.google.android.exoplayer2.upstream.Loader$LoadTask A[IMMUTABLE_TYPE, THIS]), (r6 I:long A[D('delayMillis' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0000\-0x0021: r5 'this' com.google.android.exoplayer2.upstream.Loader$LoadTask\<T\>\l  ?\-0x0021: r6 'delayMillis' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_7 -> Node_3;
Node_8 -> Node_6;
}

