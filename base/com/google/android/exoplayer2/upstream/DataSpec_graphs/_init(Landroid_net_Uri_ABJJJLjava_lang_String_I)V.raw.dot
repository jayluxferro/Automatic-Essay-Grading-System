digraph "CFG forcom.google.android.exoplayer2.upstream.DataSpec.\<init\>(Landroid\/net\/Uri;[BJJJLjava\/lang\/String;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0005: CMP_L  (r0 I:int) = \l  (r6 I:long A[D('absoluteStreamPosition' long)])\l  (r0 I:long)\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:13:0x0036 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x000d: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x000f: CMP_L  (r0 I:int) = (r8 I:long A[D('position' long)]), (r0 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:14:0x0038 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x0017: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0019: CMP_L  (r0 I:int) = (r10 I:long A[D('length' long)]), (r0 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:10:0x0023 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: CONST  (r0 I:?[long, double]) = (\-1 ?[long, double]) \l0x001f: CMP_L  (r0 I:int) = (r10 I:long A[D('length' long)]), (r0 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x0027: IPUT  \l  (r4 I:android.net.Uri A[D('uri' android.net.Uri)])\l  (r3 I:com.google.android.exoplayer2.upstream.DataSpec)\l com.google.android.exoplayer2.upstream.DataSpec.uri android.net.Uri \l0x0029: IPUT  \l  (r5 I:byte[] A[D('postBody' byte[])])\l  (r3 I:com.google.android.exoplayer2.upstream.DataSpec)\l com.google.android.exoplayer2.upstream.DataSpec.postBody byte[] \l0x002b: IPUT  \l  (r6 I:long A[D('absoluteStreamPosition' long)])\l  (r3 I:com.google.android.exoplayer2.upstream.DataSpec)\l com.google.android.exoplayer2.upstream.DataSpec.absoluteStreamPosition long \l0x002d: IPUT  \l  (r8 I:long A[D('position' long)])\l  (r3 I:com.google.android.exoplayer2.upstream.DataSpec)\l com.google.android.exoplayer2.upstream.DataSpec.position long \l0x002f: IPUT  \l  (r10 I:long A[D('length' long)])\l  (r3 I:com.google.android.exoplayer2.upstream.DataSpec)\l com.google.android.exoplayer2.upstream.DataSpec.length long \l0x0031: IPUT  \l  (r12 I:java.lang.String A[D('key' java.lang.String)])\l  (r3 I:com.google.android.exoplayer2.upstream.DataSpec)\l com.google.android.exoplayer2.upstream.DataSpec.key java.lang.String \l0x0033: IPUT  \l  (r13 I:int A[D('flags' int)])\l  (r3 I:com.google.android.exoplayer2.upstream.DataSpec)\l com.google.android.exoplayer2.upstream.DataSpec.flags int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|0x0036: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|0x0038: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|0x003a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.DataSpec.\<init\>((r3 'this' I:com.google.android.exoplayer2.upstream.DataSpec A[IMMUTABLE_TYPE, THIS]), (r4 I:android.net.Uri A[D('uri' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:byte[] A[D('postBody' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[D('absoluteStreamPosition' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:long A[D('length' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x003b: r4 'uri' android.net.Uri\l  ?\-0x003b: r5 'postBody' byte[]\l  ?\-0x003b: r6 'absoluteStreamPosition' long\l  ?\-0x003b: r8 'position' long\l  ?\-0x003b: r10 'length' long\l  ?\-0x003b: r12 'key' java.lang.String\l  ?\-0x003b: r13 'flags' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_3;
Node_14 -> Node_6;
Node_15 -> Node_11;
}

