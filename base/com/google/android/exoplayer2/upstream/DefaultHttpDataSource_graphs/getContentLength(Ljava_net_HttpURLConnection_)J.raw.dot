digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultHttpDataSource.getContentLength(Ljava\/net\/HttpURLConnection;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (\-1 ?[long, double]) \l0x0002: CONST_STR  (r8 I:java.lang.String) =  \"Content\-Length\" \l0x0004: INVOKE  (r4 I:java.lang.String) = \l  (r12 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r8 I:java.lang.String)\l java.net.HttpURLConnection.getHeaderField(java.lang.String):java.lang.String type: VIRTUAL \l0x0008: INVOKE  (r8 I:boolean) = \l  (r4 I:java.lang.CharSequence A[D('contentLengthHeader' java.lang.String)])\l android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|SYNTHETIC\lSplitter:B:2:0x000e\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x000e\l|0x000e: INVOKE  (r0 I:long A[D('contentLength' long)]) = \l  (r4 I:java.lang.String A[D('contentLengthHeader' java.lang.String)])\l java.lang.Long.parseLong(java.lang.String):long type: STATIC A[Catch:\{ NumberFormatException \-\> 0x0049 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST_STR  (r8 I:java.lang.String) =  \"Content\-Range\" \l0x0014: INVOKE  (r5 I:java.lang.String) = \l  (r12 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r8 I:java.lang.String)\l java.net.HttpURLConnection.getHeaderField(java.lang.String):java.lang.String type: VIRTUAL \l0x0018: INVOKE  (r8 I:boolean) = \l  (r5 I:java.lang.CharSequence A[D('contentRangeHeader' java.lang.String)])\l android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0048 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: SGET  (r8 I:java.util.regex.Pattern) =  com.google.android.exoplayer2.upstream.DefaultHttpDataSource.CONTENT_RANGE_HEADER java.util.regex.Pattern \l0x0020: INVOKE  (r7 I:java.util.regex.Matcher) = \l  (r8 I:java.util.regex.Pattern)\l  (r5 I:java.lang.CharSequence A[D('contentRangeHeader' java.lang.String)])\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x0024: INVOKE  (r8 I:boolean) = \l  (r7 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l java.util.regex.Matcher.find():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0048 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|SYNTHETIC\lSplitter:B:10:0x002b\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x002b\l|0x002b: INVOKE  (r8 I:java.lang.String) = \l  (r7 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r8 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x009a \}, TRY_ENTER]\l0x002f: INVOKE  (r8 I:long) = (r8 I:java.lang.String) java.lang.Long.parseLong(java.lang.String):long type: STATIC A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x0033: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x0034: INVOKE  (r10 I:java.lang.String) = \l  (r7 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r10 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x0038: INVOKE  (r10 I:long) = (r10 I:java.lang.String) java.lang.Long.parseLong(java.lang.String):long type: STATIC A[Catch:\{ NumberFormatException \-\> 0x009a \}, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003c: ARITH  (r8 I:long) = (r8 I:long) \- (r10 I:long) \l0x003d: CONST  (r10 I:?[long, double]) = (1 ?[long, double]) \l0x003f: ARITH  (r2 I:long) = (r8 I:long) + (r10 I:long) \l0x0041: CONST  (r8 I:?[long, double]) = (0 ?[long, double]) \l0x0043: CMP_L  (r8 I:int) = (r0 I:long A[D('contentLength' long)]), (r8 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|0x0045: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:18:0x0069 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|0x0047: MOVE  (r0 I:?[long, double] A[D('contentLength' long)]) = (r2 I:?[long, double] A[D('contentLengthFromRange' long)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: RETURN  (r0 I:long A[D('contentLength' long)]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|ExcHandler: NumberFormatException null\lSplitter:B:2:0x000e\l|0x0049: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x004a|0x004a: CONST_STR  (r8 I:java.lang.String) =  \"DefaultHttpDataSource\" \l0x004c: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004e: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0051: CONST_STR  (r10 I:java.lang.String) =  \"Unexpected Content\-Length [\" \l0x0053: INVOKE  (r9 I:java.lang.StringBuilder) = (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0057: INVOKE  (r9 I:java.lang.StringBuilder) = \l  (r9 I:java.lang.StringBuilder)\l  (r4 I:java.lang.String A[D('contentLengthHeader' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005b: CONST_STR  (r10 I:java.lang.String) =  \"]\" \l0x005d: INVOKE  (r9 I:java.lang.StringBuilder) = (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0061: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0065: INVOKE  (r8 I:java.lang.String), (r9 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0069|0x0069: CMP_L  (r8 I:int) = \l  (r0 I:long A[D('contentLength' long)])\l  (r2 I:long A[D('contentLengthFromRange' long)])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x006b|0x006b: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0048 \l}"];
Node_20 [shape=record,label="{20\:\ 0x006d|0x006d: CONST_STR  (r8 I:java.lang.String) =  \"DefaultHttpDataSource\" \l}"];
Node_21 [shape=record,label="{21\:\ 0x006f|SYNTHETIC\lSplitter:B:21:0x006f\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x006f\l|0x006f: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ NumberFormatException \-\> 0x009a \}, TRY_ENTER]\l0x0071: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x0074: CONST_STR  (r10 I:java.lang.String) =  \"Inconsistent headers [\" A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x0076: INVOKE  (r9 I:java.lang.StringBuilder) = (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x007a: INVOKE  (r9 I:java.lang.StringBuilder) = \l  (r9 I:java.lang.StringBuilder)\l  (r4 I:java.lang.String A[D('contentLengthHeader' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x007e: CONST_STR  (r10 I:java.lang.String) =  \"] [\" A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x0080: INVOKE  (r9 I:java.lang.StringBuilder) = (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x0084: INVOKE  (r9 I:java.lang.StringBuilder) = \l  (r9 I:java.lang.StringBuilder)\l  (r5 I:java.lang.String A[D('contentRangeHeader' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x0088: CONST_STR  (r10 I:java.lang.String) =  \"]\" A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x008a: INVOKE  (r9 I:java.lang.StringBuilder) = (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x008e: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x0092: INVOKE  (r8 I:java.lang.String), (r9 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x009a \}]\l0x0095: INVOKE  (r0 I:long A[D('contentLength' long)]) = \l  (r0 I:long A[D('contentLength' long)])\l  (r2 I:long A[D('contentLengthFromRange' long)])\l java.lang.Math.max(long, long):long type: STATIC A[Catch:\{ NumberFormatException \-\> 0x009a \}, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x009a|ExcHandler: NumberFormatException null\lSplitter:B:10:0x002b\l|0x009a: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x009b|0x009b: CONST_STR  (r8 I:java.lang.String) =  \"DefaultHttpDataSource\" \l0x009d: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x009f: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00a2: CONST_STR  (r10 I:java.lang.String) =  \"Unexpected Content\-Range [\" \l0x00a4: INVOKE  (r9 I:java.lang.StringBuilder) = (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a8: INVOKE  (r9 I:java.lang.StringBuilder) = \l  (r9 I:java.lang.StringBuilder)\l  (r5 I:java.lang.String A[D('contentRangeHeader' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ac: CONST_STR  (r10 I:java.lang.String) =  \"]\" \l0x00ae: INVOKE  (r9 I:java.lang.StringBuilder) = (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b2: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b6: INVOKE  (r8 I:java.lang.String), (r9 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l}"];
MethodNode[shape=record,label="{private static long com.google.android.exoplayer2.upstream.DefaultHttpDataSource.getContentLength((r12 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0041\-0x0048: r2 'contentLengthFromRange' long\l  0x0024\-0x0048: r7 'matcher' java.util.regex.Matcher\l  0x0018\-0x0049: r5 'contentRangeHeader' java.lang.String\l  0x004a\-0x0069: r6 'e' java.lang.NumberFormatException\l  0x0069\-0x009a: r2 'contentLengthFromRange' long\l  0x0002\-0x00b9: r0 'contentLength' long\l  0x0008\-0x00b9: r4 'contentLengthHeader' java.lang.String\l  0x0069\-0x00b9: r5 'contentRangeHeader' java.lang.String\l  0x009b\-0x00b9: r6 'e' java.lang.NumberFormatException\l  0x0069\-0x00b9: r7 'matcher' java.util.regex.Matcher\l  ?\-0x00b9: r12 'connection' java.net.HttpURLConnection\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_16;
Node_3 -> Node_16;
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_24;
Node_11 -> Node_12;
Node_11 -> Node_24;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_5;
Node_18 -> Node_19;
Node_19 -> Node_15;
Node_19 -> Node_20[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_22 -> Node_24;
Node_22 -> Node_15;
Node_24 -> Node_25;
Node_25 -> Node_15;
}

