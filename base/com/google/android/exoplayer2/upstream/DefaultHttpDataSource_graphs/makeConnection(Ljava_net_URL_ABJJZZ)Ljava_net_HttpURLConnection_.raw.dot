digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultHttpDataSource.makeConnection(Ljava\/net\/URL;[BJJZZ)Ljava\/net\/HttpURLConnection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.net.URLConnection) = (r14 I:java.net.URL A[D('url' java.net.URL)]) java.net.URL.openConnection():java.net.URLConnection type: VIRTUAL \l0x0004: CHECK_CAST  (r2 I:java.net.HttpURLConnection) = (java.net.HttpURLConnection) (r2 I:?[OBJECT, ARRAY]) \l0x0006: IGET  (r6 I:int) = \l  (r13 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.connectTimeoutMillis int \l0x0008: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r6 I:int)\l java.net.HttpURLConnection.setConnectTimeout(int):void type: VIRTUAL \l0x000b: IGET  (r6 I:int) = \l  (r13 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.readTimeoutMillis int \l0x000d: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r6 I:int)\l java.net.HttpURLConnection.setReadTimeout(int):void type: VIRTUAL \l0x0010: IGET  (r6 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties) = \l  (r13 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.defaultRequestProperties com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x003e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: IGET  (r6 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties) = \l  (r13 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.defaultRequestProperties com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties \l0x0016: INVOKE  (r6 I:java.util.Map) = \l  (r6 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)\l com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties.getSnapshot():java.util.Map type: VIRTUAL \l0x001a: INVOKE  (r6 I:java.util.Set) = (r6 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x001e: INVOKE  (r8 I:java.util.Iterator) = (r6 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: INVOKE  (r6 I:boolean) = (r8 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x003e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: INVOKE  (r4 I:java.lang.Object) = (r8 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x002c: CHECK_CAST  (r4 I:java.util.Map$Entry) = (java.util.Map$Entry) (r4 I:?[OBJECT, ARRAY]) \l0x002e: INVOKE  (r6 I:java.lang.Object) = \l  (r4 I:java.util.Map$Entry A[D('property' java.util.Map$Entry\<java.lang.String, java.lang.String\>)])\l java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0032: CHECK_CAST  (r6 I:java.lang.String) = (java.lang.String) (r6 I:?[OBJECT, ARRAY]) \l0x0034: INVOKE  (r7 I:java.lang.Object) = \l  (r4 I:java.util.Map$Entry A[D('property' java.util.Map$Entry\<java.lang.String, java.lang.String\>)])\l java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0038: CHECK_CAST  (r7 I:java.lang.String) = (java.lang.String) (r7 I:?[OBJECT, ARRAY]) \l0x003a: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l java.net.HttpURLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: IGET  (r6 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties) = \l  (r13 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.requestProperties com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties \l0x0040: INVOKE  (r6 I:java.util.Map) = \l  (r6 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)\l com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties.getSnapshot():java.util.Map type: VIRTUAL \l0x0044: INVOKE  (r6 I:java.util.Set) = (r6 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0048: INVOKE  (r8 I:java.util.Iterator) = (r6 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x004c|0x004c: INVOKE  (r6 I:boolean) = (r8 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0050|0x0050: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0068 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0052|0x0052: INVOKE  (r4 I:java.lang.Object) = (r8 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0056: CHECK_CAST  (r4 I:java.util.Map$Entry) = (java.util.Map$Entry) (r4 I:?[OBJECT, ARRAY]) \l0x0058: INVOKE  (r6 I:java.lang.Object) = \l  (r4 I:java.util.Map$Entry A[D('property' java.util.Map$Entry\<java.lang.String, java.lang.String\>)])\l java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x005c: CHECK_CAST  (r6 I:java.lang.String) = (java.lang.String) (r6 I:?[OBJECT, ARRAY]) \l0x005e: INVOKE  (r7 I:java.lang.Object) = \l  (r4 I:java.util.Map$Entry A[D('property' java.util.Map$Entry\<java.lang.String, java.lang.String\>)])\l java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0062: CHECK_CAST  (r7 I:java.lang.String) = (java.lang.String) (r7 I:?[OBJECT, ARRAY]) \l0x0064: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l java.net.HttpURLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0068|0x0068: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x006a: CMP_L  (r6 I:int) = (r16 I:long A[D('position' long)]), (r6 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x006c|0x006c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0074 \l}"];
Node_12 [shape=record,label="{12\:\ 0x006e|0x006e: CONST  (r6 I:?[long, double]) = (\-1 ?[long, double]) \l0x0070: CMP_L  (r6 I:int) = (r18 I:long A[D('length' long)]), (r6 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0072|0x0072: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x00b0 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0074|0x0074: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0076: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0079: CONST_STR  (r7 I:java.lang.String) =  \"bytes=\" \l0x007b: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007f: MOVE  (r0 I:?[long, double]) = (r16 I:?[long, double] A[D('position' long)]) \l0x0081: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r0 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x0085: CONST_STR  (r7 I:java.lang.String) =  \"\-\" \l0x0087: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008b: INVOKE  (r5 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008f: CONST  (r6 I:?[long, double]) = (\-1 ?[long, double]) \l0x0091: CMP_L  (r6 I:int) = (r18 I:long A[D('length' long)]), (r6 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0093|0x0093: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x00ab \l}"];
Node_16 [shape=record,label="{16\:\ 0x0095|0x0095: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0097: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x009a: INVOKE  (r6 I:java.lang.StringBuilder) = \l  (r6 I:java.lang.StringBuilder)\l  (r5 I:java.lang.String A[D('rangeRequest' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009e: ARITH  (r8 I:long) = (r16 I:long A[D('position' long)]) + (r18 I:long A[D('length' long)]) \l0x00a0: CONST  (r10 I:?[long, double]) = (1 ?[long, double]) \l0x00a2: ARITH  (r8 I:long) = (r8 I:long) \- (r10 I:long) \l0x00a3: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r8 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x00a7: INVOKE  (r5 I:java.lang.String A[D('rangeRequest' java.lang.String)]) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x00ab|0x00ab: CONST_STR  (r6 I:java.lang.String) =  \"Range\" \l0x00ad: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r6 I:java.lang.String)\l  (r5 I:java.lang.String A[D('rangeRequest' java.lang.String)])\l java.net.HttpURLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x00b0|0x00b0: CONST_STR  (r6 I:java.lang.String) =  \"User\-Agent\" \l0x00b2: IGET  (r7 I:java.lang.String) = \l  (r13 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.userAgent java.lang.String \l0x00b4: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l java.net.HttpURLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x00b7|0x00b7: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allowGzip' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x00c0 \l}"];
Node_20 [shape=record,label="{20\:\ 0x00b9|0x00b9: CONST_STR  (r6 I:java.lang.String) =  \"Accept\-Encoding\" \l0x00bb: CONST_STR  (r7 I:java.lang.String) =  \"identity\" \l0x00bd: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l java.net.HttpURLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x00c0|0x00c0: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('followRedirects' boolean)])\l \l0x00c2: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r0 I:boolean)\l java.net.HttpURLConnection.setInstanceFollowRedirects(boolean):void type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x00c5|0x00c5: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('postBody' byte[])]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00d9 \l}"];
Node_23 [shape=record,label="{23\:\ 0x00c7|0x00c7: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00c8|0x00c8: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r6 I:boolean)\l java.net.HttpURLConnection.setDoOutput(boolean):void type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x00cb|0x00cb: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('postBody' byte[])]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00ed \l}"];
Node_26 [shape=record,label="{26\:\ 0x00cd|0x00cd: CONST_STR  (r6 I:java.lang.String) =  \"POST\" \l0x00cf: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r6 I:java.lang.String)\l java.net.HttpURLConnection.setRequestMethod(java.lang.String):void type: VIRTUAL \l0x00d2: ARRAY_LENGTH  (r6 I:int) = (r15 I:?[] A[D('postBody' byte[])]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00d3|0x00d3: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00db \l}"];
Node_28 [shape=record,label="{28\:\ 0x00d5|0x00d5: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.connect():void type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00d8|0x00d8: RETURN  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x00d9|0x00d9: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x00db|0x00db: ARRAY_LENGTH  (r6 I:int) = (r15 I:?[] A[D('postBody' byte[])]) \l0x00dc: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l  (r6 I:int)\l java.net.HttpURLConnection.setFixedLengthStreamingMode(int):void type: VIRTUAL \l0x00df: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.connect():void type: VIRTUAL \l0x00e2: INVOKE  (r3 I:java.io.OutputStream) = \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.getOutputStream():java.io.OutputStream type: VIRTUAL \l0x00e6: INVOKE  \l  (r3 I:java.io.OutputStream A[D('os' java.io.OutputStream)])\l  (r15 I:byte[] A[D('postBody' byte[])])\l java.io.OutputStream.write(byte[]):void type: VIRTUAL \l0x00e9: INVOKE  (r3 I:java.io.OutputStream A[D('os' java.io.OutputStream)]) java.io.OutputStream.close():void type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x00ed|0x00ed: INVOKE  \l  (r2 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.connect():void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private java.net.HttpURLConnection com.google.android.exoplayer2.upstream.DefaultHttpDataSource.makeConnection((r13 'this' I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource A[IMMUTABLE_TYPE, THIS]), (r14 I:java.net.URL A[D('url' java.net.URL), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:byte[] A[D('postBody' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:long A[D('length' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:boolean A[D('allowGzip' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:boolean A[D('followRedirects' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x002e\-0x003e: r4 'property' java.util.Map$Entry\<java.lang.String, java.lang.String\>\l  0x0058\-0x0068: r4 'property' java.util.Map$Entry\<java.lang.String, java.lang.String\>\l  0x008f\-0x00b0: r5 'rangeRequest' java.lang.String\l  0x00e6\-0x00ed: r3 'os' java.io.OutputStream\l  0x0006\-0x00f0: r2 'connection' java.net.HttpURLConnection\l  ?\-0x00f0: r14 'url' java.net.URL\l  ?\-0x00f0: r15 'postBody' byte[]\l  ?\-0x00f0: r16 'position' long\l  ?\-0x00f0: r18 'length' long\l  ?\-0x00f0: r20 'allowGzip' boolean\l  ?\-0x00f0: r21 'followRedirects' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_30;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_30 -> Node_24;
Node_31 -> Node_29;
Node_32 -> Node_29;
}

