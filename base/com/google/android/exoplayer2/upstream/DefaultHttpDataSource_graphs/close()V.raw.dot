digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultHttpDataSource.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: IGET  (r1 I:java.io.InputStream) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.inputStream java.io.InputStream A[Catch:\{ all \-\> 0x0033 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 A[Catch:\{ all \-\> 0x0033 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r1 I:java.net.HttpURLConnection) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.connection java.net.HttpURLConnection A[Catch:\{ all \-\> 0x0033 \}]\l0x0008: INVOKE  (r2 I:long) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.bytesRemaining():long type: VIRTUAL A[Catch:\{ all \-\> 0x0033 \}]\l0x000c: INVOKE  (r1 I:java.net.HttpURLConnection), (r2 I:long) com.google.android.exoplayer2.upstream.DefaultHttpDataSource.maybeTerminateInputStream(java.net.HttpURLConnection, long):void type: STATIC A[Catch:\{ all \-\> 0x0033 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|SYNTHETIC\lSplitter:B:5:0x000f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000f\l|0x000f: IGET  (r1 I:java.io.InputStream) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.inputStream java.io.InputStream A[Catch:\{ IOException \-\> 0x0029 \}, TRY_ENTER]\l0x0011: INVOKE  (r1 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0029 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IPUT  \l  (r5 I:java.io.InputStream)\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.inputStream java.io.InputStream \l0x0016: INVOKE  \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.closeConnectionQuietly():void type: DIRECT \l0x0019: IGET  (r1 I:boolean) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.opened boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0028 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IPUT  \l  (r4 I:boolean)\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.opened boolean \l0x001f: IGET  (r1 I:com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.DefaultHttpDataSource\>) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.listener com.google.android.exoplayer2.upstream.TransferListener \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0028 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: IGET  (r1 I:com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.DefaultHttpDataSource\>) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.listener com.google.android.exoplayer2.upstream.TransferListener \l0x0025: INVOKE  \l  (r1 I:com.google.android.exoplayer2.upstream.TransferListener)\l  (r6 I:java.lang.Object)\l com.google.android.exoplayer2.upstream.TransferListener.onTransferEnd(java.lang.Object):void type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|ExcHandler: IOException null\lSplitter:B:5:0x000f\l|0x0029: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|SYNTHETIC\lSplitter:B:14:0x002a\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x002a\l|0x002a: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException) =  com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException A[Catch:\{ all \-\> 0x0033 \}, TRY_ENTER]\l0x002c: IGET  (r2 I:com.google.android.exoplayer2.upstream.DataSpec) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.dataSpec com.google.android.exoplayer2.upstream.DataSpec A[Catch:\{ all \-\> 0x0033 \}]\l0x002e: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0033 \}]\l0x002f: INVOKE  \l  (r1 I:com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException)\l  (r0 I:java.io.IOException A[D('e' java.io.IOException)])\l  (r2 I:com.google.android.exoplayer2.upstream.DataSpec)\l  (r3 I:int)\l com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.\<init\>(java.io.IOException, com.google.android.exoplayer2.upstream.DataSpec, int):void type: DIRECT A[Catch:\{ all \-\> 0x0033 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0033 \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|ExcHandler: all null\lSplitter:B:1:0x0002\l|0x0033: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|0x0034: IPUT  \l  (r5 I:java.io.InputStream)\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.inputStream java.io.InputStream \l0x0036: INVOKE  \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.closeConnectionQuietly():void type: DIRECT \l0x0039: IGET  (r2 I:boolean) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.opened boolean \l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|0x003b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0048 \l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|0x003d: IPUT  \l  (r4 I:boolean)\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.opened boolean \l0x003f: IGET  (r2 I:com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.DefaultHttpDataSource\>) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.listener com.google.android.exoplayer2.upstream.TransferListener \l}"];
Node_21 [shape=record,label="{21\:\ 0x0041|0x0041: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0048 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0043|0x0043: IGET  (r2 I:com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.DefaultHttpDataSource\>) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.listener com.google.android.exoplayer2.upstream.TransferListener \l0x0045: INVOKE  \l  (r2 I:com.google.android.exoplayer2.upstream.TransferListener)\l  (r6 I:java.lang.Object)\l com.google.android.exoplayer2.upstream.TransferListener.onTransferEnd(java.lang.Object):void type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x0048|0x0048: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.DefaultHttpDataSource.close((r6 'this' I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x002a\-0x0033: r0 'e' java.io.IOException\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
}

