digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultHttpDataSource.handleRedirect(Ljava\/net\/URL;Ljava\/lang\/String;)Ljava\/net\/URL;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('location' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r2 I:java.net.ProtocolException) =  java.net.ProtocolException \l0x0004: CONST_STR  (r3 I:java.lang.String) =  \"Null location redirect\" \l0x0006: INVOKE  (r2 I:java.net.ProtocolException), (r3 I:java.lang.String) java.net.ProtocolException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: NEW_INSTANCE  (r1 I:java.net.URL) =  java.net.URL \l0x000c: INVOKE  \l  (r1 I:java.net.URL)\l  (r5 I:java.net.URL A[D('originalUrl' java.net.URL)])\l  (r6 I:java.lang.String A[D('location' java.lang.String)])\l java.net.URL.\<init\>(java.net.URL, java.lang.String):void type: DIRECT \l0x000f: INVOKE  (r0 I:java.lang.String) = (r1 I:java.net.URL A[D('url' java.net.URL)]) java.net.URL.getProtocol():java.lang.String type: VIRTUAL \l0x0013: CONST_STR  (r2 I:java.lang.String) =  \"https\" \l0x0015: INVOKE  (r2 I:boolean) = \l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Object A[D('protocol' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003c \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: CONST_STR  (r2 I:java.lang.String) =  \"http\" \l0x001d: INVOKE  (r2 I:boolean) = \l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Object A[D('protocol' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: NEW_INSTANCE  (r2 I:java.net.ProtocolException) =  java.net.ProtocolException \l0x0025: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0027: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002a: CONST_STR  (r4 I:java.lang.String) =  \"Unsupported protocol redirect: \" \l0x002c: INVOKE  (r3 I:java.lang.StringBuilder) = (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0030: INVOKE  (r3 I:java.lang.StringBuilder) = \l  (r3 I:java.lang.StringBuilder)\l  (r0 I:java.lang.String A[D('protocol' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0038: INVOKE  (r2 I:java.net.ProtocolException), (r3 I:java.lang.String) java.net.ProtocolException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|0x003b: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|0x003c: RETURN  (r1 I:java.net.URL A[D('url' java.net.URL)]) \l}"];
MethodNode[shape=record,label="{private static java.net.URL com.google.android.exoplayer2.upstream.DefaultHttpDataSource.handleRedirect((r5 I:java.net.URL A[D('originalUrl' java.net.URL), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[D('location' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0013\-0x003c: r0 'protocol' java.lang.String\l  0x000f\-0x003c: r1 'url' java.net.URL\l  ?\-0x003c: r5 'originalUrl' java.net.URL\l  ?\-0x003c: r6 'location' java.lang.String\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
}

