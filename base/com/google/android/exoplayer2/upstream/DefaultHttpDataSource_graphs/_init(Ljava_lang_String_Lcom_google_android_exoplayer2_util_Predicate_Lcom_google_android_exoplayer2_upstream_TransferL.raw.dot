digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultHttpDataSource.\<init\>(Ljava\/lang\/String;Lcom\/google\/android\/exoplayer2\/util\/Predicate;Lcom\/google\/android\/exoplayer2\/upstream\/TransferListener;IIZLcom\/google\/android\/exoplayer2\/upstream\/HttpDataSource$RequestProperties;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.String A[D('userAgent' java.lang.String)]) com.google.android.exoplayer2.util.Assertions.checkNotEmpty(java.lang.String):java.lang.String type: STATIC \l0x0007: IPUT  \l  (r0 I:java.lang.String)\l  (r1 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.userAgent java.lang.String \l0x0009: IPUT  \l  (r3 I:com.google.android.exoplayer2.util.Predicate\<java.lang.String\> A[D('contentTypePredicate' com.google.android.exoplayer2.util.Predicate\<java.lang.String\>)])\l  (r1 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.contentTypePredicate com.google.android.exoplayer2.util.Predicate \l0x000b: IPUT  \l  (r4 I:com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.DefaultHttpDataSource\> A[D('listener' com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.DefaultHttpDataSource\>)])\l  (r1 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.listener com.google.android.exoplayer2.upstream.TransferListener \l0x000d: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties) =  com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties \l0x000f: INVOKE  \l  (r0 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)\l com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties.\<init\>():void type: DIRECT \l0x0012: IPUT  \l  (r0 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)\l  (r1 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.requestProperties com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties \l0x0014: IPUT  \l  (r5 I:int A[D('connectTimeoutMillis' int)])\l  (r1 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.connectTimeoutMillis int \l0x0016: IPUT  \l  (r6 I:int A[D('readTimeoutMillis' int)])\l  (r1 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.readTimeoutMillis int \l0x0018: IPUT  \l  (r7 I:boolean A[D('allowCrossProtocolRedirects' boolean)])\l  (r1 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.allowCrossProtocolRedirects boolean \l0x001a: IPUT  \l  (r8 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties A[D('defaultRequestProperties' com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties)])\l  (r1 I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource)\l com.google.android.exoplayer2.upstream.DefaultHttpDataSource.defaultRequestProperties com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.DefaultHttpDataSource.\<init\>((r1 'this' I:com.google.android.exoplayer2.upstream.DefaultHttpDataSource A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[D('userAgent' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.android.exoplayer2.util.Predicate\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.DefaultHttpDataSource\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('connectTimeoutMillis' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('readTimeoutMillis' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean A[D('allowCrossProtocolRedirects' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties A[D('defaultRequestProperties' com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001c: r2 'userAgent' java.lang.String\l  0x0000\-0x001c: r3 'contentTypePredicate' com.google.android.exoplayer2.util.Predicate\<java.lang.String\>\l  0x0000\-0x001c: r4 'listener' com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.DefaultHttpDataSource\>\l  ?\-0x001c: r5 'connectTimeoutMillis' int\l  ?\-0x001c: r6 'readTimeoutMillis' int\l  ?\-0x001c: r7 'allowCrossProtocolRedirects' boolean\l  ?\-0x001c: r8 'defaultRequestProperties' com.google.android.exoplayer2.upstream.HttpDataSource$RequestProperties\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/util\/Predicate, \<, Ljava\/lang\/String;, \>;, Lcom\/google\/android\/exoplayer2\/upstream\/TransferListener, \<\-, Lcom\/google\/android\/exoplayer2\/upstream\/DefaultHttpDataSource;, \>;IIZ, Lcom\/google\/android\/exoplayer2\/upstream\/HttpDataSource$RequestProperties;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

