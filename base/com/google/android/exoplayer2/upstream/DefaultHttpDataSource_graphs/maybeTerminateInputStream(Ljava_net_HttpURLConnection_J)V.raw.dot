digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultHttpDataSource.maybeTerminateInputStream(Ljava\/net\/HttpURLConnection;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r4 I:int) =  com.google.android.exoplayer2.util.Util.SDK_INT int \l0x0002: CONST  (r5 I:?[int, float, short, byte, char]) = (19 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: SGET  (r4 I:int) =  com.google.android.exoplayer2.util.Util.SDK_INT int \l0x0008: CONST  (r5 I:?[int, float, short, byte, char]) = (20 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|SYNTHETIC\lSplitter:B:5:0x000d\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000d\l|0x000d: INVOKE  (r1 I:java.io.InputStream) = \l  (r7 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection)])\l java.net.HttpURLConnection.getInputStream():java.io.InputStream type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}, TRY_ENTER]\l0x0011: CONST  (r4 I:?[long, double]) = (\-1 ?[long, double]) A[Catch:\{ Exception \-\> 0x0052 \}]\l0x0013: CMP_L  (r4 I:int) = (r8 I:long A[D('bytesRemaining' long)]), (r4 I:long) A[Catch:\{ Exception \-\> 0x0052 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0054 A[Catch:\{ Exception \-\> 0x0052 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: INVOKE  (r4 I:int) = \l  (r1 I:java.io.InputStream A[D('inputStream' java.io.InputStream)])\l java.io.InputStream.read():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}]\l0x001b: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0052 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c A[Catch:\{ Exception \-\> 0x0052 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: INVOKE  (r4 I:java.lang.Class) = \l  (r1 I:java.lang.Object A[D('inputStream' java.io.InputStream)])\l java.lang.Object.getClass():java.lang.Class type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}]\l0x0022: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}]\l0x0026: CONST_STR  (r4 I:java.lang.String) =  \"com.android.okhttp.internal.http.HttpTransport$ChunkedInputStream\" A[Catch:\{ Exception \-\> 0x0052 \}]\l0x0028: INVOKE  (r4 I:boolean) = \l  (r0 I:java.lang.String A[D('className' java.lang.String)])\l  (r4 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0036 A[Catch:\{ Exception \-\> 0x0052 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: CONST_STR  (r4 I:java.lang.String) =  \"com.android.okhttp.internal.http.HttpTransport$FixedLengthInputStream\" A[Catch:\{ Exception \-\> 0x0052 \}]\l0x0030: INVOKE  (r4 I:boolean) = \l  (r0 I:java.lang.String A[D('className' java.lang.String)])\l  (r4 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000c A[Catch:\{ Exception \-\> 0x0052 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|0x0036: INVOKE  (r4 I:java.lang.Class) = \l  (r1 I:java.lang.Object A[D('inputStream' java.io.InputStream)])\l java.lang.Object.getClass():java.lang.Class type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}]\l0x003a: INVOKE  (r2 I:java.lang.Class) = (r4 I:java.lang.Class) java.lang.Class.getSuperclass():java.lang.Class type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}]\l0x003e: CONST_STR  (r4 I:java.lang.String) =  \"unexpectedEndOfInput\" A[Catch:\{ Exception \-\> 0x0052 \}]\l0x0040: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0052 \}]\l0x0041: NEW_ARRAY  (r5 I:java.lang.Class[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ Exception \-\> 0x0052 \}]\l0x0043: INVOKE  (r3 I:java.lang.reflect.Method) = \l  (r2 I:java.lang.Class A[D('superclass' java.lang.Class\<?\>)])\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.Class[])\l java.lang.Class.getDeclaredMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}]\l0x0047: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0052 \}]\l0x0048: INVOKE  \l  (r3 I:java.lang.reflect.Method A[D('unexpectedEndOfInput' java.lang.reflect.Method)])\l  (r4 I:boolean)\l java.lang.reflect.Method.setAccessible(boolean):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}]\l0x004b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0052 \}]\l0x004c: NEW_ARRAY  (r4 I:java.lang.Object[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ Exception \-\> 0x0052 \}]\l0x004e: INVOKE  \l  (r3 I:java.lang.reflect.Method A[D('unexpectedEndOfInput' java.lang.reflect.Method)])\l  (r1 I:java.lang.Object A[D('inputStream' java.io.InputStream)])\l  (r4 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x0052 \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|ExcHandler: Exception null\lSplitter:B:5:0x000d\l|0x0052: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|0x0054: CONST  (r4 I:?[long, double]) = (2048(0x800, double:1.0118E\-320) ?[long, double]) \l0x0056: CMP_L  (r4 I:int) = (r8 I:long A[D('bytesRemaining' long)]), (r4 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0058|0x0058: IF  (r4 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:10:0x001e \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.upstream.DefaultHttpDataSource.maybeTerminateInputStream((r7 I:java.net.HttpURLConnection A[D('connection' java.net.HttpURLConnection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[D('bytesRemaining' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0026\-0x0052: r0 'className' java.lang.String\l  0x0011\-0x0052: r1 'inputStream' java.io.InputStream\l  0x003e\-0x0052: r2 'superclass' java.lang.Class\<?\>\l  0x0047\-0x0052: r3 'unexpectedEndOfInput' java.lang.reflect.Method\l  0x0054\-0x005a: r1 'inputStream' java.io.InputStream\l  ?\-0x005a: r7 'connection' java.net.HttpURLConnection\l  ?\-0x005a: r8 'bytesRemaining' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_4;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_4;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_4;
Node_16 -> Node_4;
Node_18 -> Node_19;
Node_19 -> Node_10;
Node_19 -> Node_4[style=dashed];
}

