digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultAllocator.trim()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r11)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|int r7 = java.lang.Math.max(0, com.google.android.exoplayer2.util.Util.ceilDivide(r11.targetBufferSize, r11.individualAllocationSize) \- r11.allocatedCount)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|if (r7 \< r11.availableCount) goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|monitor\-exit(r11)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|SYNTHETIC\lSplitter:B:6:0x0018\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0018\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|if (r11.initialAllocationBlock == null) goto L_0x005b\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|r2 = r11.availableCount + \-1\lr5 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|LOOP_START\lPHI: r2 r5 \l  PHI: (r2v1 'highIndex' int) = (r2v0 'highIndex' int), (r2v2 'highIndex' int) binds: [B:9:0x001c, B:14:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'lowIndex' int) = (r5v0 'lowIndex' int), (r5v2 'lowIndex' int) binds: [B:9:0x001c, B:14:0x0032] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x0023\-\>B:14:0x0032\l|if (r5 \> r2) goto L_0x0053\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|r3 = r11.availableAllocations[r5]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|if (r3.data != r11.initialAllocationBlock) goto L_0x0035\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|int r4 = r5 + 1\lr1 = r2\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|LOOP_END\lPHI: r1 r4 \l  PHI: (r1v3 'highIndex' int) = (r1v1 'highIndex' int), (r1v2 'highIndex' int), (r1v4 'highIndex' int) binds: [B:28:0x0032, B:27:0x0032, B:26:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 'lowIndex' int) = (r4v1 'lowIndex' int), (r4v2 'lowIndex' int), (r4v4 'lowIndex' int) binds: [B:28:0x0032, B:27:0x0032, B:26:0x0032] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x0023\-\>B:14:0x0032\l|r2 = r1\lr5 = r4\l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|r0 = r11.availableAllocations[r2]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|if (r0.data == r11.initialAllocationBlock) goto L_0x0043\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|int r1 = r2 + \-1\lr4 = r5\l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|int r4 = r5 + 1\lr11.availableAllocations[r5] = r0\lint r1 = r2 + \-1\lr11.availableAllocations[r2] = r3\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|REMOVE\l|java.lang.Throwable r8 = move\-exception\l}"];
Node_20 [shape=record,label="{20\:\ 0x0051|REMOVE\l}"];
Node_21 [shape=record,label="{21\:\ 0x0052|REMOVE\l|throw r8\l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|SYNTHETIC\lSplitter:B:22:0x0053\l}"];
Node_23 [shape=record,label="{23\:\ ?|Splitter:B:22:0x0053\l|int r7 = java.lang.Math.max(r7, r5)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0059|if (r7 \>= r11.availableCount) goto L_0x0016\l}"];
Node_25 [shape=record,label="{25\:\ 0x005b|PHI: r7 \l  PHI: (r7v1 'targetAvailableCount' int) = (r7v0 'targetAvailableCount' int), (r7v2 'targetAvailableCount' int) binds: [B:8:0x001a, B:24:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|java.util.Arrays.fill(r11.availableAllocations, r7, r11.availableCount, (java.lang.Object) null)\lr11.availableCount = r7\l}"];
Node_26 [shape=record,label="{26\:\ 0x0032|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0032|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0032|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public synchronized void com.google.android.exoplayer2.upstream.DefaultAllocator.trim((r11v0 'this' com.google.android.exoplayer2.upstream.DefaultAllocator A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_2 -> Node_19;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_19;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_25;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_22;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_26;
Node_14 -> Node_10;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_27;
Node_18 -> Node_28;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_19;
Node_23 -> Node_24;
Node_24 -> Node_4;
Node_24 -> Node_25[style=dashed];
Node_25 -> Node_4;
Node_26 -> Node_14;
Node_27 -> Node_14;
Node_28 -> Node_14;
}

