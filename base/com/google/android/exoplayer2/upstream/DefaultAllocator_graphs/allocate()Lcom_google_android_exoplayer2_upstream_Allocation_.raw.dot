digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultAllocator.allocate()Lcom\/google\/android\/exoplayer2\/upstream\/Allocation;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.allocatedCount int A[Catch:\{ all \-\> 0x0029 \}, TRY_ENTER]\l0x0003: ARITH  (r1 I:int) = (r1 I:int) + (1 int) A[Catch:\{ all \-\> 0x0029 \}]\l0x0005: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.allocatedCount int A[Catch:\{ all \-\> 0x0029 \}]\l0x0007: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableCount int A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x001e A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r1 I:com.google.android.exoplayer2.upstream.Allocation[]) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableAllocations com.google.android.exoplayer2.upstream.Allocation[] A[Catch:\{ all \-\> 0x0029 \}]\l0x000d: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableCount int A[Catch:\{ all \-\> 0x0029 \}]\l0x000f: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) A[Catch:\{ all \-\> 0x0029 \}]\l0x0011: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableCount int A[Catch:\{ all \-\> 0x0029 \}]\l0x0013: AGET  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x0029 \}]\l0x0015: IGET  (r1 I:com.google.android.exoplayer2.upstream.Allocation[]) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableAllocations com.google.android.exoplayer2.upstream.Allocation[] A[Catch:\{ all \-\> 0x0029 \}]\l0x0017: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableCount int A[Catch:\{ all \-\> 0x0029 \}]\l0x0019: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0029 \}]\l0x001a: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0029 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: RETURN  \l  (r0 I:com.google.android.exoplayer2.upstream.Allocation A[D('allocation' com.google.android.exoplayer2.upstream.Allocation)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|SYNTHETIC\lSplitter:B:7:0x001e\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x001e\l|0x001e: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.upstream.Allocation A[D('allocation' com.google.android.exoplayer2.upstream.Allocation)]) =  com.google.android.exoplayer2.upstream.Allocation A[Catch:\{ all \-\> 0x0029 \}, TRY_ENTER]\l0x0020: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.individualAllocationSize int A[Catch:\{ all \-\> 0x0029 \}]\l0x0022: NEW_ARRAY  (r1 I:byte[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ all \-\> 0x0029 \}]\l0x0024: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0029 \}]\l0x0025: INVOKE  \l  (r0 I:com.google.android.exoplayer2.upstream.Allocation)\l  (r1 I:byte[])\l  (r2 I:int)\l com.google.android.exoplayer2.upstream.Allocation.\<init\>(byte[], int):void type: DIRECT A[Catch:\{ all \-\> 0x0029 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0029: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized com.google.android.exoplayer2.upstream.Allocation com.google.android.exoplayer2.upstream.DefaultAllocator.allocate((r4 'this' I:com.google.android.exoplayer2.upstream.DefaultAllocator A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0015\-0x001e: r0 'allocation' com.google.android.exoplayer2.upstream.Allocation\l  0x0028\-0x0029: r0 'allocation' com.google.android.exoplayer2.upstream.Allocation\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_10;
Node_8 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

