digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultAllocator.\<init\>(ZII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: INVOKE  (r6 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r8 I:?[int, byte, short, char] A[D('individualAllocationSize' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x0038 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r2 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r9 I:?[int, byte, short, char] A[D('initialAllocationCount' int)]) \< (0 ?[int, byte, short, char])  \-\> B:6:0x000e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: INVOKE  (r4 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x0011: IPUT  \l  (r7 I:boolean A[D('trimOnReset' boolean)])\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.trimOnReset boolean \l0x0013: IPUT  \l  (r8 I:int A[D('individualAllocationSize' int)])\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.individualAllocationSize int \l0x0015: IPUT  \l  (r9 I:int A[D('initialAllocationCount' int)])\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableCount int \l0x0017: ARITH  (r2 I:int) = (r9 I:int A[D('initialAllocationCount' int)]) + (100 int) \l0x0019: NEW_ARRAY  (r2 I:com.google.android.exoplayer2.upstream.Allocation[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.upstream.Allocation[] \l0x001b: IPUT  \l  (r2 I:com.google.android.exoplayer2.upstream.Allocation[])\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableAllocations com.google.android.exoplayer2.upstream.Allocation[] \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r9 I:?[int, byte, short, char] A[D('initialAllocationCount' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x003a \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: ARITH  (r2 I:int) = (r9 I:int A[D('initialAllocationCount' int)]) * (r8 I:int A[D('individualAllocationSize' int)]) \l0x0021: NEW_ARRAY  (r2 I:byte[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0023: IPUT  \l  (r2 I:byte[])\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.initialAllocationBlock byte[] \l0x0025: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r9 I:?[int, byte, short, char] A[D('initialAllocationCount' int)])  \-\> B:13:0x003d \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: ARITH  (r0 I:int) = (r1 I:int A[D('i' int)]) * (r8 I:int A[D('individualAllocationSize' int)]) \l0x002a: IGET  (r2 I:com.google.android.exoplayer2.upstream.Allocation[]) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableAllocations com.google.android.exoplayer2.upstream.Allocation[] \l0x002c: NEW_INSTANCE  (r4 I:com.google.android.exoplayer2.upstream.Allocation) =  com.google.android.exoplayer2.upstream.Allocation \l0x002e: IGET  (r5 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.initialAllocationBlock byte[] \l0x0030: INVOKE  \l  (r4 I:com.google.android.exoplayer2.upstream.Allocation)\l  (r5 I:byte[])\l  (r0 I:int A[D('allocationOffset' int)])\l com.google.android.exoplayer2.upstream.Allocation.\<init\>(byte[], int):void type: DIRECT \l0x0033: APUT  \l  (r2 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0035: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: IPUT  \l  (r2 I:byte[])\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.initialAllocationBlock byte[] \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: NEW_ARRAY  (r2 I:com.google.android.exoplayer2.upstream.Allocation[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.upstream.Allocation[] \l0x003f: IPUT  \l  (r2 I:com.google.android.exoplayer2.upstream.Allocation[])\l  (r6 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.singleAllocationReleaseHolder com.google.android.exoplayer2.upstream.Allocation[] \l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|0x0041: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.DefaultAllocator.\<init\>((r6 'this' I:com.google.android.exoplayer2.upstream.DefaultAllocator A[IMMUTABLE_TYPE, THIS]), (r7 I:boolean A[D('trimOnReset' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('individualAllocationSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('initialAllocationCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x002a\-0x0038: r0 'allocationOffset' int\l  0x0026\-0x0038: r1 'i' int\l  ?\-0x0041: r7 'trimOnReset' boolean\l  ?\-0x0041: r8 'individualAllocationSize' int\l  ?\-0x0041: r9 'initialAllocationCount' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_9;
Node_11 -> Node_3;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

