digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultAllocator.setTargetBufferSize(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r1 I:int) = \l  (r2 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.targetBufferSize int A[Catch:\{ all \-\> 0x0011 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r3 I:?[int, byte, short, char] A[D('targetBufferSize' int)]) \>= (r1 I:?[int, byte, short, char])  \-\> B:10:0x000f A[Catch:\{ all \-\> 0x0011 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0011 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: IPUT  \l  (r3 I:int A[D('targetBufferSize' int)])\l  (r2 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.targetBufferSize int A[Catch:\{ all \-\> 0x0011 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('targetBufferSizeReduced' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000d A[Catch:\{ all \-\> 0x0011 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: INVOKE  \l  (r2 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.trim():void type: VIRTUAL A[Catch:\{ all \-\> 0x0011 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000d|0x000d: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x000e|0x000e: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x000f|0x000f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('targetBufferSizeReduced' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0011|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0011: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x0012|0x0012: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0013|0x0013: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void com.google.android.exoplayer2.upstream.DefaultAllocator.setTargetBufferSize((r2 'this' I:com.google.android.exoplayer2.upstream.DefaultAllocator A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('targetBufferSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0006\-0x000f: r0 'targetBufferSizeReduced' boolean\l  ?\-0x0013: r3 'targetBufferSize' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_5;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

