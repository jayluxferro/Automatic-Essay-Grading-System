digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultAllocator.trim()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r8 I:int) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.targetBufferSize int A[Catch:\{ all \-\> 0x0050 \}, TRY_ENTER]\l0x0003: IGET  (r9 I:int) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.individualAllocationSize int A[Catch:\{ all \-\> 0x0050 \}]\l0x0005: INVOKE  (r6 I:int) = (r8 I:int), (r9 I:int) com.google.android.exoplayer2.util.Util.ceilDivide(int, int):int type: STATIC A[Catch:\{ all \-\> 0x0050 \}]\l0x0009: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0050 \}]\l0x000a: IGET  (r9 I:int) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.allocatedCount int A[Catch:\{ all \-\> 0x0050 \}]\l0x000c: ARITH  (r9 I:int) = (r6 I:int A[D('targetAllocationCount' int)]) \- (r9 I:int) A[Catch:\{ all \-\> 0x0050 \}]\l0x000e: INVOKE  (r7 I:int) = (r8 I:int), (r9 I:int) java.lang.Math.max(int, int):int type: STATIC A[Catch:\{ all \-\> 0x0050 \}]\l0x0012: IGET  (r8 I:int) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableCount int A[Catch:\{ all \-\> 0x0050 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r7 I:?[int, byte, short, char] A[D('targetAvailableCount' int)]) \< (r8 I:?[int, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: MONITOR_EXIT  (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|SYNTHETIC\lSplitter:B:6:0x0018\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0018\l|0x0018: IGET  (r8 I:byte[]) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.initialAllocationBlock byte[] A[Catch:\{ all \-\> 0x0050 \}, TRY_ENTER]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x005b A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0050 \}]\l0x001d: IGET  (r8 I:int) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableCount int A[Catch:\{ all \-\> 0x0050 \}]\l0x001f: ARITH  (r1 I:int) = (r8 I:int) + (\-1 int) A[Catch:\{ all \-\> 0x0050 \}]\l0x0021: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('highIndex' int)])\l A[Catch:\{ all \-\> 0x0050 \}]\l0x0022: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lowIndex' int)])\l A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IF  (r5 I:?[int, byte, short, char] A[D('lowIndex' int)]) \> (r2 I:?[int, byte, short, char] A[D('highIndex' int)])  \-\> B:23:0x0053 A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IGET  (r8 I:com.google.android.exoplayer2.upstream.Allocation[]) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableAllocations com.google.android.exoplayer2.upstream.Allocation[] A[Catch:\{ all \-\> 0x0050 \}]\l0x0027: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char] A[D('lowIndex' int)])\l A[Catch:\{ all \-\> 0x0050 \}]\l0x0029: IGET  (r8 I:byte[]) = \l  (r3 I:com.google.android.exoplayer2.upstream.Allocation A[D('lowAllocation' com.google.android.exoplayer2.upstream.Allocation)])\l com.google.android.exoplayer2.upstream.Allocation.data byte[] A[Catch:\{ all \-\> 0x0050 \}]\l0x002b: IGET  (r9 I:byte[]) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.initialAllocationBlock byte[] A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0035 A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: ARITH  (r4 I:int) = (r5 I:int A[D('lowIndex' int)]) + (1 int) A[Catch:\{ all \-\> 0x0050 \}]\l0x0031: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('highIndex' int)])\l A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('highIndex' int)]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('highIndex' int)])\l A[Catch:\{ all \-\> 0x0050 \}]\l0x0033: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lowIndex' int)])\l A[Catch:\{ all \-\> 0x0050 \}]\l0x0034: GOTO  \-\> 0x0023 A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|0x0035: IGET  (r8 I:com.google.android.exoplayer2.upstream.Allocation[]) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableAllocations com.google.android.exoplayer2.upstream.Allocation[] A[Catch:\{ all \-\> 0x0050 \}]\l0x0037: AGET  (r0 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char] A[D('highIndex' int)])\l A[Catch:\{ all \-\> 0x0050 \}]\l0x0039: IGET  (r8 I:byte[]) = \l  (r0 I:com.google.android.exoplayer2.upstream.Allocation A[D('highAllocation' com.google.android.exoplayer2.upstream.Allocation)])\l com.google.android.exoplayer2.upstream.Allocation.data byte[] A[Catch:\{ all \-\> 0x0050 \}]\l0x003b: IGET  (r9 I:byte[]) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.initialAllocationBlock byte[] A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0043 A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|0x003f: ARITH  (r1 I:int) = (r2 I:int A[D('highIndex' int)]) + (\-1 int) A[Catch:\{ all \-\> 0x0050 \}]\l0x0041: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lowIndex' int)])\l A[Catch:\{ all \-\> 0x0050 \}]\l0x0042: GOTO  \-\> 0x0032 A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|0x0043: IGET  (r8 I:com.google.android.exoplayer2.upstream.Allocation[]) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableAllocations com.google.android.exoplayer2.upstream.Allocation[] A[Catch:\{ all \-\> 0x0050 \}]\l0x0045: ARITH  (r4 I:int) = (r5 I:int A[D('lowIndex' int)]) + (1 int) A[Catch:\{ all \-\> 0x0050 \}]\l0x0047: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char] A[D('lowIndex' int)])\l  (r0 I:?[OBJECT, ARRAY] A[D('highAllocation' com.google.android.exoplayer2.upstream.Allocation)])\l A[Catch:\{ all \-\> 0x0050 \}]\l0x0049: IGET  (r8 I:com.google.android.exoplayer2.upstream.Allocation[]) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableAllocations com.google.android.exoplayer2.upstream.Allocation[] A[Catch:\{ all \-\> 0x0050 \}]\l0x004b: ARITH  (r1 I:int) = (r2 I:int A[D('highIndex' int)]) + (\-1 int) A[Catch:\{ all \-\> 0x0050 \}]\l0x004d: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char] A[D('highIndex' int)])\l  (r3 I:?[OBJECT, ARRAY] A[D('lowAllocation' com.google.android.exoplayer2.upstream.Allocation)])\l A[Catch:\{ all \-\> 0x0050 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0050|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0050: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: MONITOR_EXIT  (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0052|0x0052: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0053|SYNTHETIC\lSplitter:B:23:0x0053\l}"];
Node_24 [shape=record,label="{24\:\ ?|Splitter:B:23:0x0053\l|0x0053: INVOKE  (r7 I:int A[D('targetAvailableCount' int)]) = \l  (r7 I:int A[D('targetAvailableCount' int)])\l  (r5 I:int A[D('lowIndex' int)])\l java.lang.Math.max(int, int):int type: STATIC A[Catch:\{ all \-\> 0x0050 \}, TRY_ENTER]\l0x0057: IGET  (r8 I:int) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableCount int A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0059|0x0059: IF  (r7 I:?[int, byte, short, char] A[D('targetAvailableCount' int)]) \>= (r8 I:?[int, byte, short, char])  \-\> B:4:0x0016 A[Catch:\{ all \-\> 0x0050 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x005b|0x005b: IGET  (r8 I:com.google.android.exoplayer2.upstream.Allocation[]) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableAllocations com.google.android.exoplayer2.upstream.Allocation[] A[Catch:\{ all \-\> 0x0050 \}]\l0x005d: IGET  (r9 I:int) = \l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableCount int A[Catch:\{ all \-\> 0x0050 \}]\l0x005f: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0050 \}]\l0x0060: INVOKE  \l  (r8 I:java.lang.Object[])\l  (r7 I:int A[D('targetAvailableCount' int)])\l  (r9 I:int)\l  (r10 I:java.lang.Object)\l java.util.Arrays.fill(java.lang.Object[], int, int, java.lang.Object):void type: STATIC A[Catch:\{ all \-\> 0x0050 \}]\l0x0063: IPUT  \l  (r7 I:int A[D('targetAvailableCount' int)])\l  (r11 I:com.google.android.exoplayer2.upstream.DefaultAllocator)\l com.google.android.exoplayer2.upstream.DefaultAllocator.availableCount int A[Catch:\{ all \-\> 0x0050 \}, TRY_LEAVE]\l}"];
MethodNode[shape=record,label="{public synchronized void com.google.android.exoplayer2.upstream.DefaultAllocator.trim((r11 'this' I:com.google.android.exoplayer2.upstream.DefaultAllocator A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0021\-0x0022: r1 'highIndex' int\l  0x001d\-0x0023: r4 'lowIndex' int\l  0x0023\-0x0031: r5 'lowIndex' int\l  0x0022\-0x0032: r2 'highIndex' int\l  0x0032\-0x0033: r1 'highIndex' int\l  0x0031\-0x0034: r4 'lowIndex' int\l  0x0033\-0x0041: r2 'highIndex' int\l  0x0034\-0x0042: r5 'lowIndex' int\l  0x0041\-0x0043: r1 'highIndex' int\l  0x0042\-0x0043: r4 'lowIndex' int\l  0x0043\-0x0047: r5 'lowIndex' int\l  0x0043\-0x004d: r2 'highIndex' int\l  0x0039\-0x0050: r0 'highAllocation' com.google.android.exoplayer2.upstream.Allocation\l  0x004d\-0x0050: r1 'highIndex' int\l  0x0029\-0x0050: r3 'lowAllocation' com.google.android.exoplayer2.upstream.Allocation\l  0x0047\-0x0050: r4 'lowIndex' int\l  0x0009\-0x0050: r6 'targetAllocationCount' int\l  0x0012\-0x0050: r7 'targetAvailableCount' int\l  0x0053\-0x005b: r2 'highIndex' int\l  0x0053\-0x005b: r5 'lowIndex' int\l  0x0053\-0x0065: r6 'targetAllocationCount' int\l  0x0053\-0x0065: r7 'targetAvailableCount' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_2 -> Node_20;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_26;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_23;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_10;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_14;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_23 -> Node_20;
Node_24 -> Node_25;
Node_25 -> Node_4;
Node_25 -> Node_26[style=dashed];
Node_26 -> Node_4;
}

