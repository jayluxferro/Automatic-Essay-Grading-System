digraph "CFG forcom.google.android.exoplayer2.upstream.HttpDataSource.1.evaluate(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.String A[D('contentType' java.lang.String)]) = \l  (r2 I:java.lang.String A[D('contentType' java.lang.String)])\l com.google.android.exoplayer2.util.Util.toLowerInvariant(java.lang.String):java.lang.String type: STATIC \l0x0004: INVOKE  (r0 I:boolean) = \l  (r2 I:java.lang.CharSequence A[D('contentType' java.lang.String)])\l android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST_STR  (r0 I:java.lang.String) =  \"text\" \l0x000c: INVOKE  (r0 I:boolean) = \l  (r2 I:java.lang.String A[D('contentType' java.lang.String)])\l  (r0 I:java.lang.CharSequence)\l java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: CONST_STR  (r0 I:java.lang.String) =  \"text\/vtt\" \l0x0014: INVOKE  (r0 I:boolean) = \l  (r2 I:java.lang.String A[D('contentType' java.lang.String)])\l  (r0 I:java.lang.CharSequence)\l java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002c \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: CONST_STR  (r0 I:java.lang.String) =  \"html\" \l0x001c: INVOKE  (r0 I:boolean) = \l  (r2 I:java.lang.String A[D('contentType' java.lang.String)])\l  (r0 I:java.lang.CharSequence)\l java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: CONST_STR  (r0 I:java.lang.String) =  \"xml\" \l0x0024: INVOKE  (r0 I:boolean) = \l  (r2 I:java.lang.String A[D('contentType' java.lang.String)])\l  (r0 I:java.lang.CharSequence)\l java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002c \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: RETURN  (r0 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.upstream.HttpDataSource.1.evaluate((r1 'this' I:com.google.android.exoplayer2.upstream.HttpDataSource$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[D('contentType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x002d: r2 'contentType' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_11;
}

