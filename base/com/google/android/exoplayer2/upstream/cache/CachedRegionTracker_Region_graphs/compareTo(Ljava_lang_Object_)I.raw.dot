digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.compareTo(Ljava\/lang\/Object;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CHECK_CAST  (r2 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) = (com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) (r2 I:?[OBJECT, ARRAY]) \l0x0002: INVOKE  (r0 I:int) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)\l  (r2 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.compareTo(com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ int com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.compareTo((r1 'this' I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

