digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCache.isCached(Ljava\/lang\/String;JJ)Z" {
subgraph cluster_Region_1882555379 {
label = "R(2:(1:(1:2))|9) | DECL_VAR: com.google.android.exoplayer2.upstream.cache.CachedContent cachedContent\l";
node [shape=record,color=blue];
subgraph cluster_Region_2056318183 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_Region_1645292210 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|com.google.android.exoplayer2.upstream.cache.CachedContent r0 = r4.index.get(r5)\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x0013|RETURN\l|return r0 != null && r0.getCachedBytes(r6, r8) \>= r8\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0007}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0009}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000c}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000f|REMOVE\lADDED_TO_REGION\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0011}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0012|DONT_GENERATE\lPHI: r1 \l  PHI: (r1v3 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0014}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0016|REMOVE\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0017|REMOVE\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0018|REMOVE\l|throw r1\l}"];
MethodNode[shape=record,label="{public synchronized boolean com.google.android.exoplayer2.upstream.cache.SimpleCache.isCached((r4v0 'this' com.google.android.exoplayer2.upstream.cache.SimpleCache A[IMMUTABLE_TYPE, THIS]), (r5v0 'key' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'position' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'length' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_3 -> Node_4;
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

