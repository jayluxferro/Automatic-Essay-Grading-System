digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCache.getCachedSpans(Ljava\/lang\/String;)Ljava\/util\/NavigableSet;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex) = \l  (r3 I:com.google.android.exoplayer2.upstream.cache.SimpleCache)\l com.google.android.exoplayer2.upstream.cache.SimpleCache.index com.google.android.exoplayer2.upstream.cache.CachedContentIndex A[Catch:\{ all \-\> 0x0016 \}, TRY_ENTER]\l0x0003: INVOKE  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedContent) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex)\l  (r4 I:java.lang.String A[D('key' java.lang.String)])\l com.google.android.exoplayer2.upstream.cache.CachedContentIndex.get(java.lang.String):com.google.android.exoplayer2.upstream.cache.CachedContent type: VIRTUAL A[Catch:\{ all \-\> 0x0016 \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000c \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000b|0x000b: RETURN  \l  (r1 I:java.util.NavigableSet\<com.google.android.exoplayer2.upstream.cache.CacheSpan\>)\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x000c|SYNTHETIC\lSplitter:B:8:0x000c\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x000c\l|0x000c: NEW_INSTANCE  (r1 I:java.util.TreeSet) =  java.util.TreeSet A[Catch:\{ all \-\> 0x0016 \}, TRY_ENTER]\l0x000e: INVOKE  (r2 I:java.util.TreeSet) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedContent A[D('cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent)])\l com.google.android.exoplayer2.upstream.cache.CachedContent.getSpans():java.util.TreeSet type: VIRTUAL A[Catch:\{ all \-\> 0x0016 \}]\l0x0012: INVOKE  (r1 I:java.util.TreeSet), (r2 I:java.util.Collection) java.util.TreeSet.\<init\>(java.util.Collection):void type: DIRECT A[Catch:\{ all \-\> 0x0016 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0016: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|0x0017: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0018|0x0018: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized java.util.NavigableSet\<com.google.android.exoplayer2.upstream.cache.CacheSpan\> com.google.android.exoplayer2.upstream.cache.SimpleCache.getCachedSpans((r3 'this' I:com.google.android.exoplayer2.upstream.cache.SimpleCache A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0007\-0x0016: r0 'cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent\l  ?\-0x0018: r4 'key' java.lang.String\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, ), Ljava\/util\/NavigableSet, \<, Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheSpan;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_11;
Node_2 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_11;
Node_9 -> Node_6;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

