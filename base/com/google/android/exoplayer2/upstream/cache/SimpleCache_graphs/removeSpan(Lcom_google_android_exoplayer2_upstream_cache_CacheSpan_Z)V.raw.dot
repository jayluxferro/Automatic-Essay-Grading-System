digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCache.removeSpan(Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheSpan;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex) = \l  (r6 I:com.google.android.exoplayer2.upstream.cache.SimpleCache)\l com.google.android.exoplayer2.upstream.cache.SimpleCache.index com.google.android.exoplayer2.upstream.cache.CachedContentIndex \l0x0002: IGET  (r2 I:java.lang.String) = \l  (r7 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.CacheSpan.key java.lang.String \l0x0004: INVOKE  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedContent) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex)\l  (r2 I:java.lang.String)\l com.google.android.exoplayer2.upstream.cache.CachedContentIndex.get(java.lang.String):com.google.android.exoplayer2.upstream.cache.CachedContent type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r1 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedContent A[D('cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent)])\l  (r7 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.CachedContent.removeSpan(com.google.android.exoplayer2.upstream.cache.CacheSpan):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IGET  (r2 I:long) = \l  (r6 I:com.google.android.exoplayer2.upstream.cache.SimpleCache)\l com.google.android.exoplayer2.upstream.cache.SimpleCache.totalSpace long \l0x0013: IGET  (r4 I:long) = \l  (r7 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.CacheSpan.length long \l0x0015: ARITH  (r2 I:long) = (r2 I:long) \- (r4 I:long) \l0x0016: IPUT  \l  (r2 I:long)\l  (r6 I:com.google.android.exoplayer2.upstream.cache.SimpleCache)\l com.google.android.exoplayer2.upstream.cache.SimpleCache.totalSpace long \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('removeEmptyCachedContent' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002c \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: INVOKE  (r1 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedContent A[D('cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent)])\l com.google.android.exoplayer2.upstream.cache.CachedContent.isEmpty():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IGET  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex) = \l  (r6 I:com.google.android.exoplayer2.upstream.cache.SimpleCache)\l com.google.android.exoplayer2.upstream.cache.SimpleCache.index com.google.android.exoplayer2.upstream.cache.CachedContentIndex \l0x0022: IGET  (r2 I:java.lang.String) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedContent A[D('cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent)])\l com.google.android.exoplayer2.upstream.cache.CachedContent.key java.lang.String \l0x0024: INVOKE  \l  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex)\l  (r2 I:java.lang.String)\l com.google.android.exoplayer2.upstream.cache.CachedContentIndex.removeEmpty(java.lang.String):void type: VIRTUAL \l0x0027: IGET  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex) = \l  (r6 I:com.google.android.exoplayer2.upstream.cache.SimpleCache)\l com.google.android.exoplayer2.upstream.cache.SimpleCache.index com.google.android.exoplayer2.upstream.cache.CachedContentIndex \l0x0029: INVOKE  \l  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex)\l com.google.android.exoplayer2.upstream.cache.CachedContentIndex.store():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: INVOKE  \l  (r6 I:com.google.android.exoplayer2.upstream.cache.SimpleCache)\l  (r7 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCache.notifySpanRemoved(com.google.android.exoplayer2.upstream.cache.CacheSpan):void type: DIRECT \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.upstream.cache.SimpleCache.removeSpan((r6 'this' I:com.google.android.exoplayer2.upstream.cache.SimpleCache A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[D('removeEmptyCachedContent' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0008\-0x002f: r0 'cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent\l  ?\-0x002f: r7 'span' com.google.android.exoplayer2.upstream.cache.CacheSpan\l  ?\-0x002f: r8 'removeEmptyCachedContent' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.cache.Cache$CacheException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_4;
}

