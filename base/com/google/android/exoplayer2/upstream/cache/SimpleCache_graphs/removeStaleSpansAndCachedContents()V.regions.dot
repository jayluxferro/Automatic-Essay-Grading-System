digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCache.removeStaleSpansAndCachedContents()V" {
subgraph cluster_Region_203696492 {
label = "R(5:0|(2:3|(2:6|(1:8)(0)))|9|(1:12)|13)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.LinkedList java.util.LinkedList\<com.google.android.exoplayer2.upstream.cache.CacheSpan\> r2 = new java.util.LinkedList\<\>()\ljava.util.Iterator r3 = r6.index.getAll().iterator()\l}"];
subgraph cluster_LoopRegion_1346163194 {
label = "LOOP:0: (2:3|(2:6|(1:8)(0)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0013|if (r3.hasNext() != false) goto L_0x0015\l}"];
subgraph cluster_Region_1695900971 {
label = "R(2:3|(2:6|(1:8)(0)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0015|java.util.Iterator java.util.Iterator\<com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\> r4 = r0.getSpans().iterator()\l}"];
subgraph cluster_LoopRegion_1449956046 {
label = "LOOP:1: (2:6|(1:8)(0))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0027|if (r4.hasNext() != false) goto L_0x0029\l}"];
subgraph cluster_Region_1109058393 {
label = "R(2:6|(1:8)(0))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0029|com.google.android.exoplayer2.upstream.cache.CacheSpan com.google.android.exoplayer2.upstream.cache.CacheSpan r1 = r4.next()\l}"];
subgraph cluster_IfRegion_812615396 {
label = "IF [B:7:0x0035] THEN: R(1:8) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0035|if (r1.file.exists() == false) goto L_0x0037\l}"];
subgraph cluster_Region_994120038 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0037|r2.add(r1)\l}"];
}
subgraph cluster_Region_714814109 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
Node_9 [shape=record,label="{9\:\ 0x003b|java.util.Iterator java.util.Iterator r3 = r2.iterator()\l}"];
subgraph cluster_LoopRegion_1416102211 {
label = "LOOP:2: (1:12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0043|if (r3.hasNext() != false) goto L_0x0045\l}"];
subgraph cluster_Region_1222068756 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0045|LOOP_END\lLOOP:2: B:10:0x003f\-\>B:12:0x0045\l|removeSpan((com.google.android.exoplayer2.upstream.cache.CacheSpan) r3.next(), false)\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0050|r6.index.removeEmpty()\lr6.index.store()\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000f|LOOP_START\lLOOP:0: B:1:0x000f\-\>B:17:0x000f\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0023|LOOP_START\lLOOP:1: B:4:0x0023\-\>B:16:0x0023\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003f|LOOP_START\lLOOP:2: B:10:0x003f\-\>B:12:0x0045\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x005a}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x003b|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0023|LOOP_END\lSYNTHETIC\lLOOP:1: B:4:0x0023\-\>B:16:0x0023\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x000f|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x000f\-\>B:17:0x000f\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0023|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0023|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0050|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.upstream.cache.SimpleCache.removeStaleSpansAndCachedContents((r6v0 'this' com.google.android.exoplayer2.upstream.cache.SimpleCache A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.cache.Cache$CacheException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_15[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_17[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_18[style=dashed];
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_20[style=dashed];
Node_12 -> Node_10;
Node_13 -> Node_14;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_10 -> Node_11;
Node_15 -> Node_9;
Node_16 -> Node_4;
Node_17 -> Node_1;
Node_18 -> Node_16;
Node_19 -> Node_16;
Node_20 -> Node_13;
}

