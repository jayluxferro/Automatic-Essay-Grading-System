digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCache.getSpan(Ljava\/lang\/String;J)Lcom\/google\/android\/exoplayer2\/upstream\/cache\/SimpleCacheSpan;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.SimpleCache)\l com.google.android.exoplayer2.upstream.cache.SimpleCache.index com.google.android.exoplayer2.upstream.cache.CachedContentIndex \l0x0002: INVOKE  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedContent) = \l  (r2 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex)\l  (r5 I:java.lang.String A[D('key' java.lang.String)])\l com.google.android.exoplayer2.upstream.cache.CachedContentIndex.get(java.lang.String):com.google.android.exoplayer2.upstream.cache.CachedContent type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r1 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = \l  (r5 I:java.lang.String A[D('key' java.lang.String)])\l  (r6 I:long A[D('position' long)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.createOpenHole(java.lang.String, long):com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  \l  (r1 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r1 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedContent A[D('cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent)])\l  (r6 I:long A[D('position' long)])\l com.google.android.exoplayer2.upstream.cache.CachedContent.getSpan(long):com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan type: VIRTUAL \l0x0011: IGET  (r2 I:boolean) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.isCached boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IGET  (r2 I:java.io.File) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.file java.io.File \l0x0017: INVOKE  (r2 I:boolean) = (r2 I:java.io.File) java.io.File.exists():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: INVOKE  \l  (r4 I:com.google.android.exoplayer2.upstream.cache.SimpleCache)\l com.google.android.exoplayer2.upstream.cache.SimpleCache.removeStaleSpansAndCachedContents():void type: DIRECT \l}"];
MethodNode[shape=record,label="{private com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan com.google.android.exoplayer2.upstream.cache.SimpleCache.getSpan((r4 'this' I:com.google.android.exoplayer2.upstream.cache.SimpleCache A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0006\-0x0020: r0 'cachedContent' com.google.android.exoplayer2.upstream.cache.CachedContent\l  0x0011\-0x0020: r1 'span' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\l  ?\-0x0020: r5 'key' java.lang.String\l  ?\-0x0020: r6 'position' long\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.cache.Cache$CacheException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_3;
Node_5 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_3;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_4;
}

