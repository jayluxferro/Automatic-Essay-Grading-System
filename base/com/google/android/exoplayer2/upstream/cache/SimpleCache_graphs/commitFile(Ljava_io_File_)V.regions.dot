digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCache.commitFile(Ljava\/io\/File;)V" {
subgraph cluster_Region_381582425 {
label = "R(2:0|2)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r2 = true\l}"];
subgraph cluster_SynchronizedRegion_1311324013 {
label = "Synchronized:R(2:1|(3:3|6|(1:(1:14)(3:19|(2:(1:25)|23)|24))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
subgraph cluster_Region_1269776431 {
label = "R(3:3|6|(1:(1:14)(3:19|(2:(1:25)|23)|24)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan r1 = com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.createCacheEntry(r9, r8.index)\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|PHI: r4 \l  PHI: (r4v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r1 != null)\lcom.google.android.exoplayer2.util.Assertions.checkState(r8.lockedSpans.containsKey(r1.key))\l}"];
subgraph cluster_IfRegion_1029045231 {
label = "IF [B:7:0x001e] THEN: R(1:(1:14)(3:19|(2:(1:25)|23)|24)) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|if (r9.exists() == true) goto L_0x0024\l}"];
subgraph cluster_Region_1987215266 {
label = "R(1:(1:14)(3:19|(2:(1:25)|23)|24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1779833837 {
label = "IF [B:13:0x002c] THEN: R(1:14) ELSE: R(3:19|(2:(1:25)|23)|24)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002c|if (r9.length() == 0) goto L_0x002e\l}"];
subgraph cluster_Region_1828969373 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002e|r9.delete()\l}"];
}
subgraph cluster_Region_781627831 {
label = "R(3:19|(2:(1:25)|23)|24)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x0035\l|java.lang.Long java.lang.Long r0 = java.lang.Long.valueOf(getContentLength(r1.key))\l}"];
subgraph cluster_IfRegion_1228442666 {
label = "IF [B:20:0x0047] THEN: R(2:(1:25)|23) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0047|if (r0.longValue() != \-1) goto L_0x0049\l}"];
subgraph cluster_Region_1316587557 {
label = "R(2:(1:25)|23)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1266814431 {
label = "IF [B:22:0x0054] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0054|if ((r1.position + r1.length) \> r0.longValue()) goto L_0x0065\l}"];
subgraph cluster_Region_1932707938 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0065|r2 = false\l}"];
}
}
Node_23 [shape=record,label="{23\:\ 0x0056|PHI: r2 \l  PHI: (r2v4 boolean) = (r2v0 boolean), (r2v3 boolean) binds: [B:22:0x0054, B:25:0x0065] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r2)\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x0059|addSpan(r1)\lr8.index.store()\lnotifyAll()\l}"];
}
}
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0009}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0020|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0020: MONITOR_EXIT  \l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0021}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0022}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0024|SYNTHETIC\lSplitter:B:11:0x0024\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|Splitter:B:11:0x0024\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0032|REMOVE\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0033|REMOVE\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0034|REMOVE\l|throw r2\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0035|SYNTHETIC\lSplitter:B:18:0x0035\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0049}"];
MethodNode[shape=record,label="{public synchronized void com.google.android.exoplayer2.upstream.cache.SimpleCache.commitFile((r8v0 'this' com.google.android.exoplayer2.upstream.cache.SimpleCache A[IMMUTABLE_TYPE, THIS]), (r9v0 'file' java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.cache.Cache$CacheException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_14 -> Node_8;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_24[style=dashed];
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_25 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_15;
Node_4 -> Node_5;
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_10 -> Node_6;
Node_11 -> Node_12;
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_15;
Node_21 -> Node_22;
}

