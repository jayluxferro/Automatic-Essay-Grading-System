digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCache.startReadWriteNonBlocking(Ljava\/lang\/String;J)Lcom\/google\/android\/exoplayer2\/upstream\/cache\/SimpleCacheSpan;" {
subgraph cluster_Region_1811364093 {
label = "R(2:(1:(1:(2:(1:5)|(2:10|(1:12)(1:(2:18|19)(1:20))))))|14) | DECL_VAR: com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan newCacheSpan\l";
node [shape=record,color=blue];
subgraph cluster_Region_250404621 {
label = "R(1:(1:(2:(1:5)|(2:10|(1:12)(1:(2:18|19)(1:20))))))";
node [shape=record,color=blue];
subgraph cluster_Region_695051572 {
label = "R(1:(2:(1:5)|(2:10|(1:12)(1:(2:18|19)(1:20)))))";
node [shape=record,color=blue];
subgraph cluster_Region_2070148861 {
label = "R(2:(1:5)|(2:10|(1:12)(1:(2:18|19)(1:20))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_687937980 {
label = "IF [B:3:0x0003] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r4.initializationException != null) goto L_0x0005\l}"];
subgraph cluster_Region_1107148582 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0007|throw r4.initializationException\l}"];
}
}
subgraph cluster_Region_2026952208 {
label = "R(2:10|(1:12)(1:(2:18|19)(1:20)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x000b\l|com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan r0 = getSpan(r5, r6)\l}"];
subgraph cluster_IfRegion_1113883240 {
label = "IF [B:11:0x0011] THEN: R(1:12) ELSE: R(1:(2:18|19)(1:20))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0011|if (r0.isCached == true) goto L_0x0013\l}"];
subgraph cluster_Region_181611171 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0013|com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan r1 = r4.index.get(r5).touch(r0)\lnotifySpanTouched(r0, r1)\l}"];
}
subgraph cluster_Region_92137000 {
label = "R(1:(2:18|19)(1:20)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1640836196 {
label = "IF [B:17:0x0028] THEN: R(2:18|19) ELSE: R(1:20) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0028|if (r4.lockedSpans.containsKey(r5) == false) goto L_0x002a\l}"];
subgraph cluster_Region_418584132 {
label = "R(2:18|19)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x002a|r4.lockedSpans.put(r5, r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002f|r1 = r0\l}"];
}
subgraph cluster_Region_1718428444 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0031|r1 = null\l}"];
}
}
}
}
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x0021|RETURN\l|return r1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0005}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0008|REMOVE\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0009|REMOVE\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000a|REMOVE\l|throw r2\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x000b|SYNTHETIC\lSplitter:B:9:0x000b\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0020|DONT_GENERATE\lPHI: r1 \l  PHI: (r1v2 'newCacheSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = (r1v0 'newCacheSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan), (r1v1 'newCacheSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan), (r1v3 'newCacheSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) binds: [B:20:0x0031, B:19:0x002f, B:12:0x0013] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0022|SYNTHETIC\lSplitter:B:15:0x0022\l}"];
Node_16 [shape=record,color=red,label="{16\:\ ?|Splitter:B:15:0x0022\l}"];
MethodNode[shape=record,label="{public synchronized com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan com.google.android.exoplayer2.upstream.cache.SimpleCache.startReadWriteNonBlocking((r4v0 'this' com.google.android.exoplayer2.upstream.cache.SimpleCache A[IMMUTABLE_TYPE, THIS]), (r5v0 'key' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'position' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.cache.Cache$CacheException]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_15[style=dashed];
Node_12 -> Node_13;
Node_17 -> Node_18;
Node_17 -> Node_20[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_13;
Node_20 -> Node_13;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_6;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_6;
Node_16 -> Node_17;
}

