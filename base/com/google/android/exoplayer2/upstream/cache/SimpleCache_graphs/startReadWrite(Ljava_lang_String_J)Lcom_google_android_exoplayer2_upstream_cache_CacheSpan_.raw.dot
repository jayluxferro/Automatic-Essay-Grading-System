digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCache.startReadWrite(Ljava\/lang\/String;J)Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheSpan;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = \l  (r2 I:com.google.android.exoplayer2.upstream.cache.SimpleCache)\l  (r3 I:java.lang.String)\l  (r4 I:long)\l com.google.android.exoplayer2.upstream.cache.SimpleCache.startReadWrite(java.lang.String, long):com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: RETURN  \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheSpan)\l \l}"];
MethodNode[shape=record,label="{public \/* bridge *\/ \/* synthetic *\/ com.google.android.exoplayer2.upstream.cache.CacheSpan com.google.android.exoplayer2.upstream.cache.SimpleCache.startReadWrite((r2 'this' I:com.google.android.exoplayer2.upstream.cache.SimpleCache A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException, com.google.android.exoplayer2.upstream.cache.Cache$CacheException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

