digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCache.removeSpan(Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheSpan;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.exoplayer2.upstream.cache.CachedContent r0 = r6.index.get(r7.key)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r0.removeSpan(r7) != false) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|r6.totalSpace = r6.totalSpace \- r7.length\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r8 == false) goto L_0x002c\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a}"];
Node_7 [shape=record,label="{7\:\ 0x001e|if (r0.isEmpty() == false) goto L_0x002c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|r6.index.removeEmpty(r0.key)\lr6.index.store()\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|notifySpanRemoved(r7)\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.upstream.cache.SimpleCache.removeSpan((r6v0 'this' com.google.android.exoplayer2.upstream.cache.SimpleCache A[IMMUTABLE_TYPE, THIS]), (r7v0 'span' com.google.android.exoplayer2.upstream.cache.CacheSpan A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'removeEmptyCachedContent' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.cache.Cache$CacheException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_11[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_12;
}

