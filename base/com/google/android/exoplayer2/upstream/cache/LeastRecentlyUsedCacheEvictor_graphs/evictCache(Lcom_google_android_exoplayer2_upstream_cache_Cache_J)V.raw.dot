digraph "CFG forcom.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor.evictCache(Lcom\/google\/android\/exoplayer2\/upstream\/cache\/Cache;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor)\l com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor.currentSize long \l0x0002: ARITH  (r0 I:long) = (r0 I:long) + (r6 I:long A[D('requiredSpace' long)]) \l0x0003: IGET  (r2 I:long) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor)\l com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor.maxBytes long \l0x0005: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|SYNTHETIC\lSplitter:B:2:0x0009\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0009\l|0x0009: IGET  (r0 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CacheSpan\>) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor)\l com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor.leastRecentlyUsed java.util.TreeSet A[Catch:\{ CacheException \-\> 0x0015 \}, TRY_ENTER]\l0x000b: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.TreeSet) java.util.TreeSet.first():java.lang.Object type: VIRTUAL A[Catch:\{ CacheException \-\> 0x0015 \}]\l0x000f: CHECK_CAST  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheSpan) = (com.google.android.exoplayer2.upstream.cache.CacheSpan) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ CacheException \-\> 0x0015 \}]\l0x0011: INVOKE  \l  (r5 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache)])\l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheSpan)\l com.google.android.exoplayer2.upstream.cache.Cache.removeSpan(com.google.android.exoplayer2.upstream.cache.CacheSpan):void type: INTERFACE A[Catch:\{ CacheException \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|ExcHandler: CacheException null\lSplitter:B:2:0x0009\l|0x0015: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor.evictCache((r4 'this' I:com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[D('requiredSpace' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0017: r5 'cache' com.google.android.exoplayer2.upstream.cache.Cache\l  ?\-0x0017: r6 'requiredSpace' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_5;
Node_3 -> Node_0;
Node_5 -> Node_0;
}

