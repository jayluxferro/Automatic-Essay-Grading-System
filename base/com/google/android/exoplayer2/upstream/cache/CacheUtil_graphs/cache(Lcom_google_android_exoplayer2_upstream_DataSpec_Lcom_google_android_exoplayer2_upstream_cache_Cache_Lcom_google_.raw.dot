digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheUtil.cache(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;Lcom\/google\/android\/exoplayer2\/upstream\/cache\/Cache;Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheDataSource;[BLcom\/google\/android\/exoplayer2\/util\/PriorityTaskManager;ILcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheUtil$CachingCounters;)Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheUtil$CachingCounters;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r3 I:java.lang.Object A[D('dataSource' com.google.android.exoplayer2.upstream.cache.CacheDataSource)])\l com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0003: INVOKE  (r4 I:java.lang.Object A[D('buffer' byte[])]) com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0006: INVOKE  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters) = \l  (r1 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l  (r2 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache)])\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource A[D('dataSource' com.google.android.exoplayer2.upstream.cache.CacheDataSource)])\l  (r4 I:byte[] A[D('buffer' byte[])])\l  (r5 I:com.google.android.exoplayer2.util.PriorityTaskManager A[D('priorityTaskManager' com.google.android.exoplayer2.util.PriorityTaskManager)])\l  (r6 I:int A[D('priority' int)])\l  (r7 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l com.google.android.exoplayer2.upstream.cache.CacheUtil.internalCache(com.google.android.exoplayer2.upstream.DataSpec, com.google.android.exoplayer2.upstream.cache.Cache, com.google.android.exoplayer2.upstream.cache.CacheDataSource, byte[], com.google.android.exoplayer2.util.PriorityTaskManager, int, com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters):com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN  \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters com.google.android.exoplayer2.upstream.cache.CacheUtil.cache((r1 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource A[D('dataSource' com.google.android.exoplayer2.upstream.cache.CacheDataSource), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:byte[] A[D('buffer' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.google.android.exoplayer2.util.PriorityTaskManager A[D('priorityTaskManager' com.google.android.exoplayer2.util.PriorityTaskManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('priority' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000a: r1 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\l  ?\-0x000a: r2 'cache' com.google.android.exoplayer2.upstream.cache.Cache\l  ?\-0x000a: r3 'dataSource' com.google.android.exoplayer2.upstream.cache.CacheDataSource\l  ?\-0x000a: r4 'buffer' byte[]\l  ?\-0x000a: r5 'priorityTaskManager' com.google.android.exoplayer2.util.PriorityTaskManager\l  ?\-0x000a: r6 'priority' int\l  ?\-0x000a: r7 'counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

