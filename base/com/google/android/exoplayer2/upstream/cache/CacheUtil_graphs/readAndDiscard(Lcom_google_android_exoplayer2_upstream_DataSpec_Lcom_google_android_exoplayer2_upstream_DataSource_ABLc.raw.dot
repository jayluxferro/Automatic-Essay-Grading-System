digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheUtil.readAndDiscard(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;Lcom\/google\/android\/exoplayer2\/upstream\/DataSource;[BLcom\/google\/android\/exoplayer2\/util\/PriorityTaskManager;I)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('priorityTaskManager' com.google.android.exoplayer2.util.PriorityTaskManager)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0005 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  \l  (r9 I:com.google.android.exoplayer2.util.PriorityTaskManager A[D('priorityTaskManager' com.google.android.exoplayer2.util.PriorityTaskManager)])\l  (r10 I:int A[D('priority' int)])\l com.google.android.exoplayer2.util.PriorityTaskManager.proceed(int):void type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\lSplitter:B:2:0x0005\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0005\l|0x0005: INVOKE  \l  (r7 I:com.google.android.exoplayer2.upstream.DataSource A[D('dataSource' com.google.android.exoplayer2.upstream.DataSource)])\l  (r6 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSource.open(com.google.android.exoplayer2.upstream.DataSpec):long type: INTERFACE A[Catch:\{ PriorityTooLowException \-\> 0x0016, all \-\> 0x002b \}, TRY_ENTER]\l0x0008: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ PriorityTooLowException \-\> 0x0016, all \-\> 0x002b \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r1 I:boolean) =  java.lang.Thread.interrupted():boolean type: STATIC A[Catch:\{ PriorityTooLowException \-\> 0x0016, all \-\> 0x002b \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001b A[Catch:\{ PriorityTooLowException \-\> 0x0016, all \-\> 0x002b \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: NEW_INSTANCE  (r1 I:java.lang.InterruptedException) =  java.lang.InterruptedException A[Catch:\{ PriorityTooLowException \-\> 0x0016, all \-\> 0x002b \}]\l0x0012: INVOKE  (r1 I:java.lang.InterruptedException) java.lang.InterruptedException.\<init\>():void type: DIRECT A[Catch:\{ PriorityTooLowException \-\> 0x0016, all \-\> 0x002b \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ PriorityTooLowException \-\> 0x0016, all \-\> 0x002b \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|ExcHandler: PriorityTooLowException null\lSplitter:B:2:0x0005\l|0x0016: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: INVOKE  \l  (r7 I:com.google.android.exoplayer2.upstream.DataSource A[D('dataSource' com.google.android.exoplayer2.upstream.DataSource)])\l com.google.android.exoplayer2.util.Util.closeQuietly(com.google.android.exoplayer2.upstream.DataSource):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|SYNTHETIC\lSplitter:B:11:0x001c\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x001c\l|0x001c: ARRAY_LENGTH  (r4 I:int) = (r8 I:?[] A[D('buffer' byte[])]) A[Catch:\{ PriorityTooLowException \-\> 0x0016, all \-\> 0x002b \}, TRY_ENTER]\l0x001d: INVOKE  (r0 I:int) = \l  (r7 I:com.google.android.exoplayer2.upstream.DataSource A[D('dataSource' com.google.android.exoplayer2.upstream.DataSource)])\l  (r8 I:byte[] A[D('buffer' byte[])])\l  (r1 I:int)\l  (r4 I:int)\l com.google.android.exoplayer2.upstream.DataSource.read(byte[], int, int):int type: INTERFACE A[Catch:\{ PriorityTooLowException \-\> 0x0016, all \-\> 0x002b \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|0x0021: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('read' int)]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0028 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|0x0024: INVOKE  \l  (r7 I:com.google.android.exoplayer2.upstream.DataSource A[D('dataSource' com.google.android.exoplayer2.upstream.DataSource)])\l com.google.android.exoplayer2.util.Util.closeQuietly(com.google.android.exoplayer2.upstream.DataSource):void type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|0x0027: RETURN  (r2 I:long A[D('totalRead' long)]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0028|0x0028: CAST  (r4 I:long) = (long) (r0 I:int A[D('read' int)]) \l0x0029: ARITH  (r2 I:long A[D('totalRead' long)]) = (r2 I:long A[D('totalRead' long)]) + (r4 I:long) \l}"];
Node_18 [shape=record,label="{18\:\ 0x002b|ExcHandler: all null\lSplitter:B:2:0x0005\l|0x002b: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x002c|0x002c: INVOKE  \l  (r7 I:com.google.android.exoplayer2.upstream.DataSource A[D('dataSource' com.google.android.exoplayer2.upstream.DataSource)])\l com.google.android.exoplayer2.util.Util.closeQuietly(com.google.android.exoplayer2.upstream.DataSource):void type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x002f|0x002f: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static long com.google.android.exoplayer2.upstream.cache.CacheUtil.readAndDiscard((r6 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.google.android.exoplayer2.upstream.DataSource A[D('dataSource' com.google.android.exoplayer2.upstream.DataSource), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:byte[] A[D('buffer' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.google.android.exoplayer2.util.PriorityTaskManager A[D('priorityTaskManager' com.google.android.exoplayer2.util.PriorityTaskManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('priority' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000a\-0x0016: r2 'totalRead' long\l  0x0021\-0x002b: r0 'read' int\l  0x001b\-0x002b: r2 'totalRead' long\l  ?\-0x002f: r6 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\l  ?\-0x002f: r7 'dataSource' com.google.android.exoplayer2.upstream.DataSource\l  ?\-0x002f: r8 'buffer' byte[]\l  ?\-0x002f: r9 'priorityTaskManager' com.google.android.exoplayer2.util.PriorityTaskManager\l  ?\-0x002f: r10 'priority' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_2 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_0;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_8;
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_12 -> Node_8;
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_4;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

