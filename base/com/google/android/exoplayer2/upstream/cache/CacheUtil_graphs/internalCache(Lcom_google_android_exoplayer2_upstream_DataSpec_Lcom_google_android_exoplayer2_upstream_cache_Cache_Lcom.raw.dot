digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheUtil.internalCache(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;Lcom\/google\/android\/exoplayer2\/upstream\/cache\/Cache;Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheDataSource;[BLcom\/google\/android\/exoplayer2\/util\/PriorityTaskManager;ILcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheUtil$CachingCounters;)Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheUtil$CachingCounters;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l \l0x0002: IGET  (r6 I:long) = (r0 I:com.google.android.exoplayer2.upstream.DataSpec) com.google.android.exoplayer2.upstream.DataSpec.position long \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l \l0x0006: IGET  (r8 I:long) = (r0 I:com.google.android.exoplayer2.upstream.DataSpec) com.google.android.exoplayer2.upstream.DataSpec.length long \l0x0008: INVOKE  (r5 I:java.lang.String) = \l  (r22 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.cache.CacheUtil.getKey(com.google.android.exoplayer2.upstream.DataSpec):java.lang.String type: STATIC \l0x000c: CONST  (r12 I:?[long, double]) = (\-1 ?[long, double]) \l0x000e: CMP_L  (r4 I:int) = (r8 I:long A[D('left' long)]), (r12 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache)])\l \l0x0014: INVOKE  (r8 I:long A[D('left' long)]) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.Cache)\l  (r5 I:java.lang.String A[D('key' java.lang.String)])\l com.google.android.exoplayer2.upstream.cache.Cache.getContentLength(java.lang.String):long type: INTERFACE \l0x0018: CONST  (r12 I:?[long, double]) = (\-1 ?[long, double]) \l0x001a: CMP_L  (r4 I:int) = (r8 I:long A[D('left' long)]), (r12 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0023 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: CONST  (r8 I:?[long, double] A[D('left' long)]) = \l  (9223372036854775807(0x7fffffffffffffff, double:NaN) ?[long, double])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: IF  (r28 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0054 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: NEW_INSTANCE  (r28 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)]) =  com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters \l0x0027: INVOKE  \l  (r28 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters.\<init\>():void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l0x002c: CMP_L  (r4 I:int) = (r8 I:long A[D('left' long)]), (r12 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:24:0x009b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: MOVE  (r4 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache)])\l \l0x0032: INVOKE  (r18 I:long) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.Cache)\l  (r5 I:java.lang.String A[D('key' java.lang.String)])\l  (r6 I:long A[D('start' long)])\l  (r8 I:long A[D('left' long)])\l com.google.android.exoplayer2.upstream.cache.Cache.getCachedBytes(java.lang.String, long, long):long type: INTERFACE \l0x0036: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l0x0038: CMP_L  (r4 I:int) = (r18 I:long A[D('blockLength' long)]), (r12 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:16:0x0061 \l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l0x003e: IGET  (r12 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters.alreadyCachedBytes long \l0x0040: ARITH  (r12 I:long) = (r12 I:long) + (r18 I:long A[D('blockLength' long)]) \l0x0042: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l0x0044: IPUT  \l  (r12 I:long)\l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters.alreadyCachedBytes long \l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|0x0046: ARITH  (r6 I:long A[D('start' long)]) = (r6 I:long A[D('start' long)]) + (r18 I:long A[D('blockLength' long)]) \l0x0048: CONST  (r12 I:?[long, double]) = \l  (9223372036854775807(0x7fffffffffffffff, double:NaN) ?[long, double])\l \l0x004d: CMP_L  (r4 I:int) = (r8 I:long A[D('left' long)]), (r12 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|0x004f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002a \l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|0x0051: ARITH  (r8 I:long A[D('left' long)]) = (r8 I:long A[D('left' long)]) \- (r18 I:long A[D('blockLength' long)]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|0x0054: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l0x0056: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l0x0058: IPUT  \l  (r12 I:long)\l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters.alreadyCachedBytes long \l0x005a: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l0x005c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l0x005e: IPUT  \l  (r12 I:long)\l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters.downloadedBytes long \l}"];
Node_16 [shape=record,label="{16\:\ 0x0061|0x0061: MOVE  (r0 I:?[long, double]) = (r18 I:?[long, double] A[D('blockLength' long)]) \l0x0063: NEG  (r0 I:long) = (r0 I:long) \l0x0064: MOVE  (r18 I:?[long, double] A[D('blockLength' long)]) = (r0 I:?[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0066|0x0066: IF  (r24 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('dataSource' com.google.android.exoplayer2.upstream.cache.CacheDataSource)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x009f \l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|0x0068: IF  (r25 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('buffer' byte[])]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x009f \l}"];
Node_19 [shape=record,label="{19\:\ 0x006a|0x006a: NEW_INSTANCE  (r10 I:com.google.android.exoplayer2.upstream.DataSpec) =  com.google.android.exoplayer2.upstream.DataSpec \l0x006c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l \l0x006e: IGET  (r11 I:android.net.Uri) = (r0 I:com.google.android.exoplayer2.upstream.DataSpec) com.google.android.exoplayer2.upstream.DataSpec.uri android.net.Uri \l0x0070: CONST  (r12 I:?[long, double]) = \l  (9223372036854775807(0x7fffffffffffffff, double:NaN) ?[long, double])\l \l0x0075: CMP_L  (r4 I:int) = (r18 I:long A[D('blockLength' long)]), (r12 I:long) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0077|0x0077: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x009c \l}"];
Node_21 [shape=record,label="{21\:\ 0x0079|0x0079: CONST  (r14 I:?[long, double]) = (\-1 ?[long, double]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x007b|0x007b: MOVE  (r12 I:?[long, double]) = (r6 I:?[long, double] A[D('start' long)]) \l0x007c: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY] A[D('key' java.lang.String)]) \l0x007e: INVOKE  \l  (r10 I:com.google.android.exoplayer2.upstream.DataSpec)\l  (r11 I:android.net.Uri)\l  (r12 I:long)\l  (r14 I:long)\l  (r16 I:java.lang.String)\l com.google.android.exoplayer2.upstream.DataSpec.\<init\>(android.net.Uri, long, long, java.lang.String):void type: DIRECT \l0x0081: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('dataSource' com.google.android.exoplayer2.upstream.cache.CacheDataSource)])\l \l0x0083: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY] A[D('buffer' byte[])]) \l0x0085: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('priorityTaskManager' com.google.android.exoplayer2.util.PriorityTaskManager)])\l \l0x0087: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('priority' int)])\l \l0x0089: INVOKE  (r20 I:long) = \l  (r10 I:com.google.android.exoplayer2.upstream.DataSpec A[D('subDataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l  (r0 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r1 I:byte[])\l  (r2 I:com.google.android.exoplayer2.util.PriorityTaskManager)\l  (r3 I:int)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.readAndDiscard(com.google.android.exoplayer2.upstream.DataSpec, com.google.android.exoplayer2.upstream.DataSource, byte[], com.google.android.exoplayer2.util.PriorityTaskManager, int):long type: STATIC \l0x008d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l0x008f: IGET  (r12 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters.downloadedBytes long \l0x0091: ARITH  (r12 I:long) = (r12 I:long) + (r20 I:long A[D('read' long)]) \l0x0093: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l0x0095: IPUT  \l  (r12 I:long)\l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters.downloadedBytes long \l0x0097: CMP_L  (r4 I:int) = \l  (r20 I:long A[D('read' long)])\l  (r18 I:long A[D('blockLength' long)])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0099|0x0099: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:12:0x0046 \l}"];
Node_24 [shape=record,label="{24\:\ 0x009b|0x009b: RETURN  \l  (r28 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x009c|0x009c: MOVE  (r14 I:?[long, double]) = (r18 I:?[long, double] A[D('blockLength' long)]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x009f|0x009f: CONST  (r12 I:?[long, double]) = \l  (9223372036854775807(0x7fffffffffffffff, double:NaN) ?[long, double])\l \l0x00a4: CMP_L  (r4 I:int) = (r18 I:long A[D('blockLength' long)]), (r12 I:long) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a6|0x00a6: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00af \l}"];
Node_28 [shape=record,label="{28\:\ 0x00a8|0x00a8: CONST  (r12 I:?[long, double]) = (\-1 ?[long, double]) \l0x00aa: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l0x00ac: IPUT  \l  (r12 I:long)\l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters.downloadedBytes long \l}"];
Node_29 [shape=record,label="{29\:\ 0x00af|0x00af: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l0x00b1: IGET  (r12 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters.downloadedBytes long \l0x00b3: ARITH  (r12 I:long) = (r12 I:long) + (r18 I:long A[D('blockLength' long)]) \l0x00b5: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l0x00b7: IPUT  \l  (r12 I:long)\l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.CachingCounters.downloadedBytes long \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters com.google.android.exoplayer2.upstream.cache.CacheUtil.internalCache((r22 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource A[D('dataSource' com.google.android.exoplayer2.upstream.cache.CacheDataSource), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:byte[] A[D('buffer' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:com.google.android.exoplayer2.util.PriorityTaskManager A[D('priorityTaskManager' com.google.android.exoplayer2.util.PriorityTaskManager), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:int A[D('priority' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0027: r28 'counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters\l  0x0036\-0x0054: r18 'blockLength' long\l  0x0081\-0x009b: r10 'subDataSpec' com.google.android.exoplayer2.upstream.DataSpec\l  0x0061\-0x009b: r18 'blockLength' long\l  0x008d\-0x009b: r20 'read' long\l  0x000c\-0x00b9: r5 'key' java.lang.String\l  0x0004\-0x00b9: r6 'start' long\l  0x0008\-0x00b9: r8 'left' long\l  0x009c\-0x00b9: r18 'blockLength' long\l  ?\-0x00b9: r22 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\l  ?\-0x00b9: r23 'cache' com.google.android.exoplayer2.upstream.cache.Cache\l  ?\-0x00b9: r24 'dataSource' com.google.android.exoplayer2.upstream.cache.CacheDataSource\l  ?\-0x00b9: r25 'buffer' byte[]\l  ?\-0x00b9: r26 'priorityTaskManager' com.google.android.exoplayer2.util.PriorityTaskManager\l  ?\-0x00b9: r27 'priority' int\l  0x002a\-0x00b9: r28 'counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_24;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_7;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_7;
Node_15 -> Node_7;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_12;
Node_23 -> Node_24[style=dashed];
Node_25 -> Node_22;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_24;
Node_29 -> Node_12;
}

