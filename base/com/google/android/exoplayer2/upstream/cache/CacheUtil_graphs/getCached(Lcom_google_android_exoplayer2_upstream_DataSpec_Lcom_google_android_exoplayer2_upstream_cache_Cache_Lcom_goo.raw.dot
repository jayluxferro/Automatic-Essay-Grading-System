digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheUtil.getCached(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;Lcom\/google\/android\/exoplayer2\/upstream\/cache\/Cache;Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheUtil$CachingCounters;)Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheUtil$CachingCounters;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY] A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l \l0x0005: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r9 I:?[OBJECT, ARRAY] A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache)])\l \l0x0006: MOVE  (r6 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY] A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0007\l|0x0007: INVOKE  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters) = \l  (r0 I:com.google.android.exoplayer2.upstream.DataSpec)\l  (r1 I:com.google.android.exoplayer2.upstream.cache.Cache)\l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l  (r3 I:byte[])\l  (r4 I:com.google.android.exoplayer2.util.PriorityTaskManager)\l  (r5 I:int)\l  (r6 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l com.google.android.exoplayer2.upstream.cache.CacheUtil.internalCache(com.google.android.exoplayer2.upstream.DataSpec, com.google.android.exoplayer2.upstream.cache.Cache, com.google.android.exoplayer2.upstream.cache.CacheDataSource, byte[], com.google.android.exoplayer2.util.PriorityTaskManager, int, com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters):com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters type: STATIC A[Catch:\{ IOException \-\> 0x000c, InterruptedException \-\> 0x0013 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: RETURN  \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters)\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|ExcHandler: IOException null\lSplitter:B:1:0x0007\l|0x000c: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x000f: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r7 I:java.lang.Throwable A[D('e' java.lang.Exception)])\l java.lang.IllegalStateException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|ExcHandler: InterruptedException null\lSplitter:B:1:0x0007\l|0x0013: MOVE_EXCEPTION  (r7 I:?[OBJECT] A[D('e' java.lang.Exception)]) =  \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters com.google.android.exoplayer2.upstream.cache.CacheUtil.getCached((r8 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters A[D('counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000d\-0x0013: r7 'e' java.lang.Exception\l  ?\-0x0014: r8 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\l  ?\-0x0014: r9 'cache' com.google.android.exoplayer2.upstream.cache.Cache\l  ?\-0x0014: r10 'counters' com.google.android.exoplayer2.upstream.cache.CacheUtil$CachingCounters\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_1 -> Node_8;
Node_2 -> Node_5;
Node_2 -> Node_8;
Node_2 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_6;
}

