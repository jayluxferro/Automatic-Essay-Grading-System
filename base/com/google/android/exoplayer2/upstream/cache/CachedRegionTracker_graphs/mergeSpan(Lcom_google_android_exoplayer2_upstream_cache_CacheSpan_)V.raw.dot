digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CachedRegionTracker.mergeSpan(Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheSpan;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) =  com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region \l0x0002: IGET  (r6 I:long) = \l  (r13 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.CacheSpan.position long \l0x0004: IGET  (r8 I:long) = \l  (r13 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.CacheSpan.position long \l0x0006: IGET  (r10 I:long) = \l  (r13 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.CacheSpan.length long \l0x0008: ARITH  (r8 I:long) = (r8 I:long) + (r10 I:long) \l0x0009: INVOKE  \l  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)\l  (r6 I:long)\l  (r8 I:long)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.\<init\>(long, long):void type: DIRECT \l0x000c: IGET  (r6 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet \l0x000e: INVOKE  (r3 I:java.lang.Object) = \l  (r6 I:java.util.TreeSet)\l  (r5 I:java.lang.Object A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l java.util.TreeSet.floor(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0012: CHECK_CAST  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) = (com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) (r3 I:?[OBJECT, ARRAY]) \l0x0014: IGET  (r6 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet \l0x0016: INVOKE  (r1 I:java.lang.Object) = \l  (r6 I:java.util.TreeSet)\l  (r5 I:java.lang.Object A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l java.util.TreeSet.ceiling(java.lang.Object):java.lang.Object type: VIRTUAL \l0x001a: CHECK_CAST  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) = (com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) (r1 I:?[OBJECT, ARRAY]) \l0x001c: INVOKE  (r2 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regionsConnect(com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region, com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region):boolean type: DIRECT \l0x0020: INVOKE  (r0 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('ceilingRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regionsConnect(com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region, com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ceilingConnects' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0044 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0026|0x0026: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('floorConnects' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0036 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|0x0028: IGET  (r6 I:long) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('ceilingRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long \l0x002a: IPUT  \l  (r6 I:long)\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long \l0x002c: IGET  (r6 I:int) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('ceilingRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int \l0x002e: IPUT  \l  (r6 I:int)\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|0x0030: IGET  (r6 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet \l0x0032: INVOKE  \l  (r6 I:java.util.TreeSet)\l  (r1 I:java.lang.Object A[D('ceilingRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l java.util.TreeSet.remove(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|0x0035: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: IGET  (r6 I:long) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('ceilingRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long \l0x0038: IPUT  \l  (r6 I:long)\l  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long \l0x003a: IGET  (r6 I:int) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('ceilingRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int \l0x003c: IPUT  \l  (r6 I:int)\l  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int \l0x003e: IGET  (r6 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet \l0x0040: INVOKE  \l  (r6 I:java.util.TreeSet)\l  (r5 I:java.lang.Object A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l java.util.TreeSet.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|0x0044: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('floorConnects' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0068 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0046|0x0046: IGET  (r6 I:long) = \l  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long \l0x0048: IPUT  \l  (r6 I:long)\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long \l0x004a: IGET  (r4 I:int) = \l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int \l}"];
Node_9 [shape=record,label="{9\:\ 0x004c|0x004c: IGET  (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex \l0x004e: IGET  (r6 I:int) = (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.length int \l0x0050: ARITH  (r6 I:int) = (r6 I:int) + (\-1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0052|0x0052: IF  (r4 I:?[int, byte, short, char] A[D('index' int)]) \>= (r6 I:?[int, byte, short, char])  \-\> B:14:0x0065 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0054|0x0054: IGET  (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex \l0x0056: IGET  (r6 I:long[]) = (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.offsets long[] \l0x0058: ARITH  (r7 I:int) = (r4 I:int A[D('index' int)]) + (1 int) \l0x005a: AGET  (r6 I:?[long, double]) = (r6 I:?[long, double][]), (r7 I:?[int, short, byte, char]) \l0x005c: IGET  (r8 I:long) = \l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long \l0x005e: CMP_L  (r6 I:int) = (r6 I:long), (r8 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0060|0x0060: IF  (r6 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:14:0x0065 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0062|0x0062: ARITH  (r4 I:int A[D('index' int)]) = (r4 I:int A[D('index' int)]) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0065|0x0065: IPUT  \l  (r4 I:int A[D('index' int)])\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int \l}"];
Node_15 [shape=record,label="{15\:\ 0x0068|0x0068: IGET  (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex \l0x006a: IGET  (r6 I:long[]) = (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.offsets long[] \l0x006c: IGET  (r8 I:long) = \l  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long \l0x006e: INVOKE  (r4 I:int) = (r6 I:long[]), (r8 I:long) java.util.Arrays.binarySearch(long[], long):int type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0072|0x0072: IF  (r4 I:?[int, byte, short, char] A[D('index' int)]) \>= (0 ?[int, byte, short, char])  \-\> B:18:0x0077 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0074|0x0074: NEG  (r6 I:int) = (r4 I:int A[D('index' int)]) \l0x0075: ARITH  (r4 I:int A[D('index' int)]) = (r6 I:int) + (\-2 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0077|0x0077: IPUT  \l  (r4 I:int A[D('index' int)])\l  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int \l0x0079: IGET  (r6 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet \l0x007b: INVOKE  \l  (r6 I:java.util.TreeSet)\l  (r5 I:java.lang.Object A[D('newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l java.util.TreeSet.add(java.lang.Object):boolean type: VIRTUAL \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.mergeSpan((r12 'this' I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker A[IMMUTABLE_TYPE, THIS]), (r13 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x004c\-0x0068: r4 'index' int\l  0x0072\-0x0077: r4 'index' int\l  0x0024\-0x007e: r0 'ceilingConnects' boolean\l  0x001c\-0x007e: r1 'ceilingRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\l  0x0020\-0x007e: r2 'floorConnects' boolean\l  0x0014\-0x007e: r3 'floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\l  0x000c\-0x007e: r5 'newRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\l  ?\-0x007e: r13 'span' com.google.android.exoplayer2.upstream.cache.CacheSpan\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_4;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_9;
Node_14 -> Node_5;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_5;
}

