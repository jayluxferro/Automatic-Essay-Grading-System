digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CachedRegionTracker.getRegionEndTimeMs(J)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: MONITOR_ENTER  (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|SYNTHETIC\lSplitter:B:2:0x0002\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0002\l|0x0002: IGET  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) = \l  (r11 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.lookupRegion com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[Catch:\{ all \-\> 0x0063 \}, TRY_ENTER]\l0x0004: IPUT  \l  (r12 I:long A[D('byteOffset' long)])\l  (r5 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.startOffset long A[Catch:\{ all \-\> 0x0063 \}]\l0x0006: IGET  (r5 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>) = \l  (r11 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet A[Catch:\{ all \-\> 0x0063 \}]\l0x0008: IGET  (r6 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) = \l  (r11 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.lookupRegion com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[Catch:\{ all \-\> 0x0063 \}]\l0x000a: INVOKE  (r0 I:java.lang.Object) = (r5 I:java.util.TreeSet), (r6 I:java.lang.Object) java.util.TreeSet.floor(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0063 \}]\l0x000e: CHECK_CAST  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) = (com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0063 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001c A[Catch:\{ all \-\> 0x0063 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IGET  (r6 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long A[Catch:\{ all \-\> 0x0063 \}]\l0x0014: CMP_L  (r5 I:int) = (r12 I:long A[D('byteOffset' long)]), (r6 I:long) A[Catch:\{ all \-\> 0x0063 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r5 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:9:0x001c A[Catch:\{ all \-\> 0x0063 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int A[Catch:\{ all \-\> 0x0063 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001e \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: MONITOR_EXIT  (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: RETURN  (r4 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|SYNTHETIC\lSplitter:B:11:0x001e\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x001e\l|0x001e: IGET  (r1 I:int) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int A[Catch:\{ all \-\> 0x0063 \}, TRY_ENTER]\l0x0020: IGET  (r4 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r11 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex A[Catch:\{ all \-\> 0x0063 \}]\l0x0022: IGET  (r4 I:int) = (r4 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.length int A[Catch:\{ all \-\> 0x0063 \}]\l0x0024: ARITH  (r4 I:int) = (r4 I:int) + (\-1 int) A[Catch:\{ all \-\> 0x0063 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003e A[Catch:\{ all \-\> 0x0063 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: IGET  (r4 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long A[Catch:\{ all \-\> 0x0063 \}]\l0x002a: IGET  (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r11 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex A[Catch:\{ all \-\> 0x0063 \}]\l0x002c: IGET  (r6 I:long[]) = (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.offsets long[] A[Catch:\{ all \-\> 0x0063 \}]\l0x002e: AGET  (r6 I:?[long, double]) = \l  (r6 I:?[long, double][])\l  (r1 I:?[int, short, byte, char] A[D('index' int)])\l A[Catch:\{ all \-\> 0x0063 \}]\l0x0030: IGET  (r8 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r11 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex A[Catch:\{ all \-\> 0x0063 \}]\l0x0032: IGET  (r8 I:int[]) = (r8 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.sizes int[] A[Catch:\{ all \-\> 0x0063 \}]\l0x0034: AGET  (r8 I:?[int, float]) = \l  (r8 I:?[int, float][])\l  (r1 I:?[int, short, byte, char] A[D('index' int)])\l A[Catch:\{ all \-\> 0x0063 \}]\l0x0036: CAST  (r8 I:long) = (long) (r8 I:int) A[Catch:\{ all \-\> 0x0063 \}]\l0x0037: ARITH  (r6 I:long) = (r6 I:long) + (r8 I:long) A[Catch:\{ all \-\> 0x0063 \}]\l0x0038: CMP_L  (r4 I:int) = (r4 I:long), (r6 I:long) A[Catch:\{ all \-\> 0x0063 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|0x003a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003e A[Catch:\{ all \-\> 0x0063 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|0x003c: CONST  (r4 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0063 \}]\l0x003d: GOTO  \-\> 0x001c A[Catch:\{ all \-\> 0x0063 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|0x003e: IGET  (r4 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r11 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex A[Catch:\{ all \-\> 0x0063 \}]\l0x0040: IGET  (r4 I:long[]) = (r4 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.durationsUs long[] A[Catch:\{ all \-\> 0x0063 \}]\l0x0042: AGET  (r4 I:?[long, double]) = \l  (r4 I:?[long, double][])\l  (r1 I:?[int, short, byte, char] A[D('index' int)])\l A[Catch:\{ all \-\> 0x0063 \}]\l0x0044: IGET  (r6 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long A[Catch:\{ all \-\> 0x0063 \}]\l0x0046: IGET  (r8 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r11 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex A[Catch:\{ all \-\> 0x0063 \}]\l0x0048: IGET  (r8 I:long[]) = (r8 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.offsets long[] A[Catch:\{ all \-\> 0x0063 \}]\l0x004a: AGET  (r8 I:?[long, double]) = \l  (r8 I:?[long, double][])\l  (r1 I:?[int, short, byte, char] A[D('index' int)])\l A[Catch:\{ all \-\> 0x0063 \}]\l0x004c: ARITH  (r6 I:long) = (r6 I:long) \- (r8 I:long) A[Catch:\{ all \-\> 0x0063 \}]\l0x004d: ARITH  (r4 I:long) = (r4 I:long) * (r6 I:long) A[Catch:\{ all \-\> 0x0063 \}]\l0x004e: IGET  (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r11 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex A[Catch:\{ all \-\> 0x0063 \}]\l0x0050: IGET  (r6 I:int[]) = (r6 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.sizes int[] A[Catch:\{ all \-\> 0x0063 \}]\l0x0052: AGET  (r6 I:?[int, float]) = \l  (r6 I:?[int, float][])\l  (r1 I:?[int, short, byte, char] A[D('index' int)])\l A[Catch:\{ all \-\> 0x0063 \}]\l0x0054: CAST  (r6 I:long) = (long) (r6 I:int) A[Catch:\{ all \-\> 0x0063 \}]\l0x0055: ARITH  (r2 I:long) = (r4 I:long) \/ (r6 I:long) A[Catch:\{ all \-\> 0x0063 \}]\l0x0057: IGET  (r4 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r11 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex A[Catch:\{ all \-\> 0x0063 \}]\l0x0059: IGET  (r4 I:long[]) = (r4 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.timesUs long[] A[Catch:\{ all \-\> 0x0063 \}]\l0x005b: AGET  (r4 I:?[long, double]) = \l  (r4 I:?[long, double][])\l  (r1 I:?[int, short, byte, char] A[D('index' int)])\l A[Catch:\{ all \-\> 0x0063 \}]\l0x005d: ARITH  (r4 I:long) = (r4 I:long) + (r2 I:long A[D('segmentFractionUs' long)]) A[Catch:\{ all \-\> 0x0063 \}]\l0x005e: CONST  (r6 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) A[Catch:\{ all \-\> 0x0063 \}]\l0x0060: ARITH  (r4 I:long) = (r4 I:long) \/ (r6 I:long) A[Catch:\{ all \-\> 0x0063 \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0061|0x0061: CAST  (r4 I:int) = (int) (r4 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0063|ExcHandler: all null\lSplitter:B:2:0x0002\l|0x0063: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x0064|0x0064: MONITOR_EXIT  (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0065|0x0065: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized int com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.getRegionEndTimeMs((r11 'this' I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker A[IMMUTABLE_TYPE, THIS]), (r12 I:long A[D('byteOffset' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0010\-0x0063: r0 'floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\l  0x0020\-0x0063: r1 'index' int\l  0x0057\-0x0063: r2 'segmentFractionUs' long\l  ?\-0x0065: r12 'byteOffset' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_9;
Node_17 -> Node_18;
Node_18 -> Node_9;
Node_19 -> Node_20;
Node_20 -> Node_21;
}

