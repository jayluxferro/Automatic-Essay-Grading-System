digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CachedRegionTracker.onSpanRemoved(Lcom\/google\/android\/exoplayer2\/upstream\/cache\/Cache;Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheSpan;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: NEW_INSTANCE  (r4 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) =  com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[Catch:\{ all \-\> 0x006a \}, TRY_ENTER]\l0x0003: IGET  (r6 I:long) = \l  (r14 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.CacheSpan.position long A[Catch:\{ all \-\> 0x006a \}]\l0x0005: IGET  (r8 I:long) = \l  (r14 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.CacheSpan.position long A[Catch:\{ all \-\> 0x006a \}]\l0x0007: IGET  (r10 I:long) = \l  (r14 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.CacheSpan.length long A[Catch:\{ all \-\> 0x006a \}]\l0x0009: ARITH  (r8 I:long) = (r8 I:long) + (r10 I:long) A[Catch:\{ all \-\> 0x006a \}]\l0x000a: INVOKE  \l  (r4 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)\l  (r6 I:long)\l  (r8 I:long)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.\<init\>(long, long):void type: DIRECT A[Catch:\{ all \-\> 0x006a \}]\l0x000d: IGET  (r5 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet A[Catch:\{ all \-\> 0x006a \}]\l0x000f: INVOKE  (r0 I:java.lang.Object) = \l  (r5 I:java.util.TreeSet)\l  (r4 I:java.lang.Object A[D('removedRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l java.util.TreeSet.floor(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x0013: CHECK_CAST  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) = (com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0020 A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: CONST_STR  (r5 I:java.lang.String) =  \"CachedRegionTracker\" A[Catch:\{ all \-\> 0x006a \}]\l0x0019: CONST_STR  (r6 I:java.lang.String) =  \"Removed a span we were not aware of\" A[Catch:\{ all \-\> 0x006a \}]\l0x001b: INVOKE  (r5 I:java.lang.String), (r6 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x006a \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: MONITOR_EXIT  (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|SYNTHETIC\lSplitter:B:7:0x0020\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0020\l|0x0020: IGET  (r5 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet A[Catch:\{ all \-\> 0x006a \}, TRY_ENTER]\l0x0022: INVOKE  \l  (r5 I:java.util.TreeSet)\l  (r0 I:java.lang.Object A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l java.util.TreeSet.remove(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l0x0025: IGET  (r6 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.startOffset long A[Catch:\{ all \-\> 0x006a \}]\l0x0027: IGET  (r8 I:long) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('removedRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.startOffset long A[Catch:\{ all \-\> 0x006a \}]\l0x0029: CMP_L  (r5 I:int) = (r6 I:long), (r8 I:long) A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:14:0x004c A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) =  com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[Catch:\{ all \-\> 0x006a \}]\l0x002f: IGET  (r6 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.startOffset long A[Catch:\{ all \-\> 0x006a \}]\l0x0031: IGET  (r8 I:long) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('removedRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.startOffset long A[Catch:\{ all \-\> 0x006a \}]\l0x0033: INVOKE  \l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)\l  (r6 I:long)\l  (r8 I:long)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.\<init\>(long, long):void type: DIRECT A[Catch:\{ all \-\> 0x006a \}]\l0x0036: IGET  (r5 I:com.google.android.exoplayer2.extractor.ChunkIndex) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex A[Catch:\{ all \-\> 0x006a \}]\l0x0038: IGET  (r5 I:long[]) = (r5 I:com.google.android.exoplayer2.extractor.ChunkIndex) com.google.android.exoplayer2.extractor.ChunkIndex.offsets long[] A[Catch:\{ all \-\> 0x006a \}]\l0x003a: IGET  (r6 I:long) = \l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('newFloorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long A[Catch:\{ all \-\> 0x006a \}]\l0x003c: INVOKE  (r1 I:int) = (r5 I:long[]), (r6 I:long) java.util.Arrays.binarySearch(long[], long):int type: STATIC A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: IF  (r1 I:?[int, byte, short, char] A[D('index' int)]) \>= (0 ?[int, byte, short, char])  \-\> B:13:0x0045 A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: NEG  (r5 I:int) = (r1 I:int A[D('index' int)]) A[Catch:\{ all \-\> 0x006a \}]\l0x0043: ARITH  (r1 I:int A[D('index' int)]) = (r5 I:int) + (\-2 int) A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|0x0045: IPUT  \l  (r1 I:int A[D('index' int)])\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('newFloorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int A[Catch:\{ all \-\> 0x006a \}]\l0x0047: IGET  (r5 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet A[Catch:\{ all \-\> 0x006a \}]\l0x0049: INVOKE  \l  (r5 I:java.util.TreeSet)\l  (r3 I:java.lang.Object A[D('newFloorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l java.util.TreeSet.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: IGET  (r6 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long A[Catch:\{ all \-\> 0x006a \}]\l0x004e: IGET  (r8 I:long) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('removedRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long A[Catch:\{ all \-\> 0x006a \}]\l0x0050: CMP_L  (r5 I:int) = (r6 I:long), (r8 I:long) A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0052|0x0052: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x001e A[Catch:\{ all \-\> 0x006a \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0054|0x0054: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) =  com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[Catch:\{ all \-\> 0x006a \}]\l0x0056: IGET  (r6 I:long) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('removedRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long A[Catch:\{ all \-\> 0x006a \}]\l0x0058: CONST  (r8 I:?[long, double]) = (1 ?[long, double]) A[Catch:\{ all \-\> 0x006a \}]\l0x005a: ARITH  (r6 I:long) = (r6 I:long) + (r8 I:long) A[Catch:\{ all \-\> 0x006a \}]\l0x005b: IGET  (r8 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffset long A[Catch:\{ all \-\> 0x006a \}]\l0x005d: INVOKE  \l  (r2 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)\l  (r6 I:long)\l  (r8 I:long)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.\<init\>(long, long):void type: DIRECT A[Catch:\{ all \-\> 0x006a \}]\l0x0060: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int A[Catch:\{ all \-\> 0x006a \}]\l0x0062: IPUT  \l  (r5 I:int)\l  (r2 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region A[D('newCeilingRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.endOffsetIndex int A[Catch:\{ all \-\> 0x006a \}]\l0x0064: IGET  (r5 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet A[Catch:\{ all \-\> 0x006a \}]\l0x0066: INVOKE  \l  (r5 I:java.util.TreeSet)\l  (r2 I:java.lang.Object A[D('newCeilingRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)])\l java.util.TreeSet.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x006a \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x006a|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x006a: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x006b|0x006b: MONITOR_EXIT  (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x006c|0x006c: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.onSpanRemoved((r12 'this' I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker A[IMMUTABLE_TYPE, THIS]), (r13 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0040\-0x0045: r1 'index' int\l  0x0036\-0x004c: r3 'newFloorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\l  0x0015\-0x006a: r0 'floorRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\l  0x0060\-0x006a: r2 'newCeilingRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\l  0x000d\-0x006a: r4 'removedRegion' com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\l  ?\-0x006c: r13 'cache' com.google.android.exoplayer2.upstream.cache.Cache\l  ?\-0x006c: r14 'span' com.google.android.exoplayer2.upstream.cache.CacheSpan\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_5;
Node_15 -> Node_16[style=dashed];
Node_16 -> Node_5;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

