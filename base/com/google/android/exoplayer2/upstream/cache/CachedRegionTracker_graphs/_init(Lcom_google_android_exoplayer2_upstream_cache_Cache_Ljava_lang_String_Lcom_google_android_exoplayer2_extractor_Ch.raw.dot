digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CachedRegionTracker.\<init\>(Lcom\/google\/android\/exoplayer2\/upstream\/cache\/Cache;Ljava\/lang\/String;Lcom\/google\/android\/exoplayer2\/extractor\/ChunkIndex;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0002: INVOKE  (r6 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: IPUT  \l  (r7 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache)])\l  (r6 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.cache com.google.android.exoplayer2.upstream.cache.Cache \l0x0007: IPUT  \l  (r8 I:java.lang.String A[D('cacheKey' java.lang.String)])\l  (r6 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.cacheKey java.lang.String \l0x0009: IPUT  \l  (r9 I:com.google.android.exoplayer2.extractor.ChunkIndex A[D('chunkIndex' com.google.android.exoplayer2.extractor.ChunkIndex)])\l  (r6 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.chunkIndex com.google.android.exoplayer2.extractor.ChunkIndex \l0x000b: NEW_INSTANCE  (r3 I:java.util.TreeSet) =  java.util.TreeSet \l0x000d: INVOKE  (r3 I:java.util.TreeSet) java.util.TreeSet.\<init\>():void type: DIRECT \l0x0010: IPUT  \l  (r3 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region\>)\l  (r6 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.regions java.util.TreeSet \l0x0012: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region) =  com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region \l0x0014: INVOKE  \l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)\l  (r4 I:long)\l  (r4 I:long)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region.\<init\>(long, long):void type: DIRECT \l0x0017: IPUT  \l  (r3 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region)\l  (r6 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.lookupRegion com.google.android.exoplayer2.upstream.cache.CachedRegionTracker$Region \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: MONITOR_ENTER  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|SYNTHETIC\lSplitter:B:2:0x001a\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x001a\l|0x001a: INVOKE  (r0 I:java.util.NavigableSet) = \l  (r7 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache)])\l  (r8 I:java.lang.String A[D('cacheKey' java.lang.String)])\l  (r6 I:com.google.android.exoplayer2.upstream.cache.Cache$Listener)\l com.google.android.exoplayer2.upstream.cache.Cache.addListener(java.lang.String, com.google.android.exoplayer2.upstream.cache.Cache$Listener):java.util.NavigableSet type: INTERFACE A[Catch:\{ all \-\> 0x0034 \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cacheSpans' java.util.NavigableSet\<com.google.android.exoplayer2.upstream.cache.CacheSpan\>)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0037 A[Catch:\{ all \-\> 0x0034 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: INVOKE  (r2 I:java.util.Iterator) = \l  (r0 I:java.util.NavigableSet A[D('cacheSpans' java.util.NavigableSet\<com.google.android.exoplayer2.upstream.cache.CacheSpan\>)])\l java.util.NavigableSet.descendingIterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x0034 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: INVOKE  (r3 I:boolean) = \l  (r2 I:java.util.Iterator A[D('spanIterator' java.util.Iterator\<com.google.android.exoplayer2.upstream.cache.CacheSpan\>)])\l java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0034 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0037 A[Catch:\{ all \-\> 0x0034 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: INVOKE  (r1 I:java.lang.Object) = \l  (r2 I:java.util.Iterator A[D('spanIterator' java.util.Iterator\<com.google.android.exoplayer2.upstream.cache.CacheSpan\>)])\l java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0034 \}]\l0x002e: CHECK_CAST  (r1 I:com.google.android.exoplayer2.upstream.cache.CacheSpan) = (com.google.android.exoplayer2.upstream.cache.CacheSpan) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0034 \}]\l0x0030: INVOKE  \l  (r6 I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker)\l  (r1 I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.CacheSpan)])\l com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.mergeSpan(com.google.android.exoplayer2.upstream.cache.CacheSpan):void type: DIRECT A[Catch:\{ all \-\> 0x0034 \}]\l0x0033: GOTO  \-\> 0x0024 A[Catch:\{ all \-\> 0x0034 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|ExcHandler: all null\lSplitter:B:2:0x001a\l|0x0034: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0034 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0034 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|SYNTHETIC\lSplitter:B:12:0x0037\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x0037\l|0x0037: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0034 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|0x0038: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.\<init\>((r6 'this' I:com.google.android.exoplayer2.upstream.cache.CachedRegionTracker A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[D('cacheKey' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.google.android.exoplayer2.extractor.ChunkIndex A[D('chunkIndex' com.google.android.exoplayer2.extractor.ChunkIndex), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001e\-0x0034: r0 'cacheSpans' java.util.NavigableSet\<com.google.android.exoplayer2.upstream.cache.CacheSpan\>\l  0x0030\-0x0034: r1 'span' com.google.android.exoplayer2.upstream.cache.CacheSpan\l  0x0024\-0x0034: r2 'spanIterator' java.util.Iterator\<com.google.android.exoplayer2.upstream.cache.CacheSpan\>\l  0x0037\-0x0038: r0 'cacheSpans' java.util.NavigableSet\<com.google.android.exoplayer2.upstream.cache.CacheSpan\>\l  ?\-0x0038: r7 'cache' com.google.android.exoplayer2.upstream.cache.Cache\l  ?\-0x0038: r8 'cacheKey' java.lang.String\l  ?\-0x0038: r9 'chunkIndex' com.google.android.exoplayer2.extractor.ChunkIndex\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_6;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_9;
Node_13 -> Node_14;
Node_13 -> Node_9;
}

