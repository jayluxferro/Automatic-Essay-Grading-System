digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheSpan.\<init\>(Ljava\/lang\/String;JJJLjava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r3 I:java.lang.String A[D('key' java.lang.String)])\l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheSpan)\l com.google.android.exoplayer2.upstream.cache.CacheSpan.key java.lang.String \l0x0005: IPUT  \l  (r4 I:long A[D('position' long)])\l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheSpan)\l com.google.android.exoplayer2.upstream.cache.CacheSpan.position long \l0x0007: IPUT  \l  (r6 I:long A[D('length' long)])\l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheSpan)\l com.google.android.exoplayer2.upstream.cache.CacheSpan.length long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('file' java.io.File)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IPUT  \l  (r0 I:boolean)\l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheSpan)\l com.google.android.exoplayer2.upstream.cache.CacheSpan.isCached boolean \l0x000e: IPUT  \l  (r10 I:java.io.File A[D('file' java.io.File)])\l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheSpan)\l com.google.android.exoplayer2.upstream.cache.CacheSpan.file java.io.File \l0x0010: IPUT  \l  (r8 I:long A[D('lastAccessTimestamp' long)])\l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheSpan)\l com.google.android.exoplayer2.upstream.cache.CacheSpan.lastAccessTimestamp long \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.cache.CacheSpan.\<init\>((r2 'this' I:com.google.android.exoplayer2.upstream.cache.CacheSpan A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[D('key' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[D('length' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:long A[D('lastAccessTimestamp' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.io.File A[D('file' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0014: r3 'key' java.lang.String\l  ?\-0x0014: r4 'position' long\l  ?\-0x0014: r6 'length' long\l  ?\-0x0014: r8 'lastAccessTimestamp' long\l  ?\-0x0014: r10 'file' java.io.File\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

