digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CachedContent.\<init\>(Ljava\/io\/DataInputStream;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = \l  (r5 I:java.io.DataInputStream A[D('input' java.io.DataInputStream)])\l java.io.DataInputStream.readInt():int type: VIRTUAL \l0x0004: INVOKE  (r1 I:java.lang.String) = \l  (r5 I:java.io.DataInputStream A[D('input' java.io.DataInputStream)])\l java.io.DataInputStream.readUTF():java.lang.String type: VIRTUAL \l0x0008: INVOKE  (r2 I:long) = \l  (r5 I:java.io.DataInputStream A[D('input' java.io.DataInputStream)])\l java.io.DataInputStream.readLong():long type: VIRTUAL \l0x000c: INVOKE  \l  (r4 I:com.google.android.exoplayer2.upstream.cache.CachedContent)\l  (r0 I:int)\l  (r1 I:java.lang.String)\l  (r2 I:long)\l com.google.android.exoplayer2.upstream.cache.CachedContent.\<init\>(int, java.lang.String, long):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.cache.CachedContent.\<init\>((r4 'this' I:com.google.android.exoplayer2.upstream.cache.CachedContent A[IMMUTABLE_TYPE, THIS]), (r5 I:java.io.DataInputStream A[D('input' java.io.DataInputStream), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000f: r5 'input' java.io.DataInputStream\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

