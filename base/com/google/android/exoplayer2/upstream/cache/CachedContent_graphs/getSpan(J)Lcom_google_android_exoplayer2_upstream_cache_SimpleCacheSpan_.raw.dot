digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CachedContent.getSpan(J)Lcom\/google\/android\/exoplayer2\/upstream\/cache\/SimpleCacheSpan;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r3 I:java.lang.String) = \l  (r9 I:com.google.android.exoplayer2.upstream.cache.CachedContent)\l com.google.android.exoplayer2.upstream.cache.CachedContent.key java.lang.String \l0x0002: INVOKE  (r2 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = (r3 I:java.lang.String), (r10 I:long A[D('position' long)]) com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.createLookup(java.lang.String, long):com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan type: STATIC \l0x0006: IGET  (r3 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\>) = \l  (r9 I:com.google.android.exoplayer2.upstream.cache.CachedContent)\l com.google.android.exoplayer2.upstream.cache.CachedContent.cachedSpans java.util.TreeSet \l0x0008: INVOKE  (r1 I:java.lang.Object) = \l  (r3 I:java.util.TreeSet)\l  (r2 I:java.lang.Object A[D('lookupSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l java.util.TreeSet.floor(java.lang.Object):java.lang.Object type: VIRTUAL \l0x000c: CHECK_CAST  (r1 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = (com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('floorSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IGET  (r4 I:long) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('floorSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.position long \l0x0012: IGET  (r6 I:long) = \l  (r1 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('floorSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.length long \l0x0014: ARITH  (r4 I:long) = (r4 I:long) + (r6 I:long) \l0x0015: CMP_L  (r3 I:int) = (r4 I:long), (r10 I:long A[D('position' long)]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: RETURN  \l  (r1 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('floorSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IGET  (r3 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\>) = \l  (r9 I:com.google.android.exoplayer2.upstream.cache.CachedContent)\l com.google.android.exoplayer2.upstream.cache.CachedContent.cachedSpans java.util.TreeSet \l0x001c: INVOKE  (r0 I:java.lang.Object) = \l  (r3 I:java.util.TreeSet)\l  (r2 I:java.lang.Object A[D('lookupSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l java.util.TreeSet.ceiling(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0020: CHECK_CAST  (r0 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = (com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('ceilSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IGET  (r3 I:java.lang.String) = \l  (r9 I:com.google.android.exoplayer2.upstream.cache.CachedContent)\l com.google.android.exoplayer2.upstream.cache.CachedContent.key java.lang.String \l0x0026: INVOKE  (r3 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = (r3 I:java.lang.String), (r10 I:long A[D('position' long)]) com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.createOpenHole(java.lang.String, long):com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: MOVE  (r1 I:?[OBJECT, ARRAY] A[D('floorSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IGET  (r3 I:java.lang.String) = \l  (r9 I:com.google.android.exoplayer2.upstream.cache.CachedContent)\l com.google.android.exoplayer2.upstream.cache.CachedContent.key java.lang.String \l0x002e: IGET  (r4 I:long) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('ceilSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.position long \l0x0030: ARITH  (r4 I:long) = (r4 I:long) \- (r10 I:long A[D('position' long)]) \l0x0031: INVOKE  (r3 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = \l  (r3 I:java.lang.String)\l  (r10 I:long A[D('position' long)])\l  (r4 I:long)\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.createClosedHole(java.lang.String, long, long):com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan type: STATIC \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan com.google.android.exoplayer2.upstream.cache.CachedContent.getSpan((r9 'this' I:com.google.android.exoplayer2.upstream.cache.CachedContent A[IMMUTABLE_TYPE, THIS]), (r10 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000e\-0x0019: r1 'floorSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\l  0x0022\-0x0035: r0 'ceilSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\l  0x001a\-0x0035: r1 'floorSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\l  0x0006\-0x0035: r2 'lookupSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\l  ?\-0x0035: r10 'position' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_4;
Node_9 -> Node_8;
}

