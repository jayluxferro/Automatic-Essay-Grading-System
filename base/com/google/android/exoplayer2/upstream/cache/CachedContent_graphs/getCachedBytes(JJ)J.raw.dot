digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CachedContent.getCachedBytes(JJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = \l  (r15 I:com.google.android.exoplayer2.upstream.cache.CachedContent)\l  (r16 I:long A[D('position' long)])\l com.google.android.exoplayer2.upstream.cache.CachedContent.getSpan(long):com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan type: VIRTUAL \l0x0004: INVOKE  (r8 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.isHoleSpan():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r8 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.isOpenEnded():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST  (r8 I:?[long, double]) = \l  (9223372036854775807(0x7fffffffffffffff, double:NaN) ?[long, double])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: MOVE  (r0 I:?[long, double]) = (r18 I:?[long, double] A[D('length' long)]) \l0x0017: INVOKE  (r8 I:long) = (r8 I:long), (r0 I:long) java.lang.Math.min(long, long):long type: STATIC \l0x001b: NEG  (r8 I:long) = (r8 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: RETURN  (r8 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IGET  (r8 I:long) = \l  (r5 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.length long \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: ARITH  (r6 I:long) = (r16 I:long A[D('position' long)]) + (r18 I:long A[D('length' long)]) \l0x0022: IGET  (r8 I:long) = \l  (r5 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.position long \l0x0024: IGET  (r10 I:long) = \l  (r5 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('span' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.length long \l0x0026: ARITH  (r2 I:long) = (r8 I:long) + (r10 I:long) \l0x0028: CMP_L  (r8 I:int) = \l  (r2 I:long A[D('currentEndPosition' long)])\l  (r6 I:long A[D('queryEndPosition' long)])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:15:0x0049 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IGET  (r8 I:java.util.TreeSet\<com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\>) = \l  (r15 I:com.google.android.exoplayer2.upstream.cache.CachedContent)\l com.google.android.exoplayer2.upstream.cache.CachedContent.cachedSpans java.util.TreeSet \l0x002e: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: INVOKE  (r8 I:java.util.NavigableSet) = \l  (r8 I:java.util.TreeSet)\l  (r5 I:java.lang.Object A[D('span' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l  (r9 I:boolean)\l java.util.TreeSet.tailSet(java.lang.Object, boolean):java.util.NavigableSet type: VIRTUAL \l0x0033: INVOKE  (r8 I:java.util.Iterator) = (r8 I:java.util.NavigableSet) java.util.NavigableSet.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: INVOKE  (r9 I:boolean) = (r8 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0049 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: INVOKE  (r4 I:java.lang.Object) = (r8 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0041: CHECK_CAST  (r4 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) = (com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) (r4 I:?[OBJECT, ARRAY]) \l0x0043: IGET  (r10 I:long) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('next' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.position long \l0x0045: CMP_L  (r9 I:int) = (r10 I:long), (r2 I:long A[D('currentEndPosition' long)]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|0x0047: IF  (r9 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:16:0x0052 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0049|0x0049: ARITH  (r8 I:long) = (r2 I:long A[D('currentEndPosition' long)]) \- (r16 I:long A[D('position' long)]) \l0x004b: MOVE  (r0 I:?[long, double]) = (r18 I:?[long, double] A[D('length' long)]) \l0x004d: INVOKE  (r8 I:long) = (r8 I:long), (r0 I:long) java.lang.Math.min(long, long):long type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|0x0052: IGET  (r10 I:long) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('next' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.position long \l0x0054: IGET  (r12 I:long) = \l  (r4 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[D('next' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.length long \l0x0056: ARITH  (r10 I:long) = (r10 I:long) + (r12 I:long) \l0x0057: INVOKE  (r2 I:long A[D('currentEndPosition' long)]) = (r2 I:long A[D('currentEndPosition' long)]), (r10 I:long) java.lang.Math.max(long, long):long type: STATIC \l0x005b: CMP_L  (r9 I:int) = \l  (r2 I:long A[D('currentEndPosition' long)])\l  (r6 I:long A[D('queryEndPosition' long)])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|0x005d: IF  (r9 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:11:0x0037 \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.upstream.cache.CachedContent.getCachedBytes((r15 'this' I:com.google.android.exoplayer2.upstream.cache.CachedContent A[IMMUTABLE_TYPE, THIS]), (r16 I:long A[D('position' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:long A[D('length' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0043\-0x0049: r4 'next' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\l  0x0028\-0x005f: r2 'currentEndPosition' long\l  0x0052\-0x005f: r4 'next' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\l  0x0004\-0x005f: r5 'span' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan\l  0x0022\-0x005f: r6 'queryEndPosition' long\l  ?\-0x005f: r16 'position' long\l  ?\-0x005f: r18 'length' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_6;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_17 -> Node_15[style=dashed];
}

