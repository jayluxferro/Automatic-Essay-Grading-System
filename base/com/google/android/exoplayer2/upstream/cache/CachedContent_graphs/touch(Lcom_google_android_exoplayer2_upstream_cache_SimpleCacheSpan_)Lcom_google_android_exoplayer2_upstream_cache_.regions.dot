digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CachedContent.touch(Lcom\/google\/android\/exoplayer2\/upstream\/cache\/SimpleCacheSpan;)Lcom\/google\/android\/exoplayer2\/upstream\/cache\/SimpleCacheSpan;" {
subgraph cluster_Region_1058121722 {
label = "R(2:0|(2:(1:3)|(2:4|5)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.exoplayer2.util.Assertions.checkState(r4.cachedSpans.remove(r5))\lcom.google.android.exoplayer2.upstream.cache.SimpleCacheSpan com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan r0 = r5.copyWithUpdatedLastAccessTime(r4.f2470id)\l}"];
subgraph cluster_Region_388327272 {
label = "R(2:(1:3)|(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_499863258 {
label = "IF [B:1:0x0017] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0017|if (r5.file.renameTo(r0.file) == false) goto L_0x0019\l}"];
subgraph cluster_Region_841356109 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0045|throw new com.google.android.exoplayer2.upstream.cache.Cache.CacheException(\"Renaming of \" + r5.file + \" to \" + r0.file + \" failed.\")\l}"];
}
}
subgraph cluster_Region_1294368760 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0046|r4.cachedSpans.add(r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x004b|RETURN\l|return r0\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0019}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan com.google.android.exoplayer2.upstream.cache.CachedContent.touch((r4v0 'this' com.google.android.exoplayer2.upstream.cache.CachedContent A[IMMUTABLE_TYPE, THIS]), (r5v0 'cacheSpan' com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.cache.Cache$CacheException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_4 -> Node_5;
Node_2 -> Node_3;
}

