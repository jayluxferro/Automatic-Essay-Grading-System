digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheDataSink.openNextOutputStream()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.exoplayer2.upstream.DataSpec) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.dataSpec com.google.android.exoplayer2.upstream.DataSpec \l0x0002: IGET  (r0 I:long) = (r0 I:com.google.android.exoplayer2.upstream.DataSpec) com.google.android.exoplayer2.upstream.DataSpec.length long \l0x0004: CONST  (r2 I:?[long, double]) = (\-1 ?[long, double]) \l0x0006: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0044 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r4 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.maxCacheFileSize long \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r0 I:com.google.android.exoplayer2.upstream.cache.Cache) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.cache com.google.android.exoplayer2.upstream.cache.Cache \l0x000e: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSpec) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.dataSpec com.google.android.exoplayer2.upstream.DataSpec \l0x0010: IGET  (r1 I:java.lang.String) = (r1 I:com.google.android.exoplayer2.upstream.DataSpec) com.google.android.exoplayer2.upstream.DataSpec.key java.lang.String \l0x0012: IGET  (r2 I:com.google.android.exoplayer2.upstream.DataSpec) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.dataSpec com.google.android.exoplayer2.upstream.DataSpec \l0x0014: IGET  (r2 I:long) = (r2 I:com.google.android.exoplayer2.upstream.DataSpec) com.google.android.exoplayer2.upstream.DataSpec.absoluteStreamPosition long \l0x0016: IGET  (r6 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.dataSpecBytesWritten long \l0x0018: ARITH  (r2 I:long) = (r2 I:long) + (r6 I:long) \l0x0019: INVOKE  (r0 I:java.io.File) = \l  (r0 I:com.google.android.exoplayer2.upstream.cache.Cache)\l  (r1 I:java.lang.String)\l  (r2 I:long)\l  (r4 I:long A[D('maxLength' long)])\l com.google.android.exoplayer2.upstream.cache.Cache.startFile(java.lang.String, long, long):java.io.File type: INTERFACE \l0x001d: IPUT  \l  (r0 I:java.io.File)\l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.file java.io.File \l0x001f: NEW_INSTANCE  (r0 I:java.io.FileOutputStream) =  java.io.FileOutputStream \l0x0021: IGET  (r1 I:java.io.File) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.file java.io.File \l0x0023: INVOKE  (r0 I:java.io.FileOutputStream), (r1 I:java.io.File) java.io.FileOutputStream.\<init\>(java.io.File):void type: DIRECT \l0x0026: IPUT  \l  (r0 I:java.io.FileOutputStream)\l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.underlyingFileOutputStream java.io.FileOutputStream \l0x0028: IGET  (r0 I:int) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.bufferSize int \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:13:0x005a \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IGET  (r0 I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.bufferedOutputStream com.google.android.exoplayer2.util.ReusableBufferedOutputStream \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0052 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream) =  com.google.android.exoplayer2.util.ReusableBufferedOutputStream \l0x0032: IGET  (r1 I:java.io.FileOutputStream) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.underlyingFileOutputStream java.io.FileOutputStream \l0x0034: IGET  (r2 I:int) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.bufferSize int \l0x0036: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream)\l  (r1 I:java.io.OutputStream)\l  (r2 I:int)\l com.google.android.exoplayer2.util.ReusableBufferedOutputStream.\<init\>(java.io.OutputStream, int):void type: DIRECT \l0x0039: IPUT  \l  (r0 I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream)\l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.bufferedOutputStream com.google.android.exoplayer2.util.ReusableBufferedOutputStream \l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|0x003b: IGET  (r0 I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.bufferedOutputStream com.google.android.exoplayer2.util.ReusableBufferedOutputStream \l0x003d: IPUT  \l  (r0 I:java.io.OutputStream)\l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.outputStream java.io.OutputStream \l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|0x003f: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0041: IPUT  \l  (r0 I:long)\l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.outputStreamBytesWritten long \l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|0x0043: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ 0x0044|0x0044: IGET  (r0 I:com.google.android.exoplayer2.upstream.DataSpec) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.dataSpec com.google.android.exoplayer2.upstream.DataSpec \l0x0046: IGET  (r0 I:long) = (r0 I:com.google.android.exoplayer2.upstream.DataSpec) com.google.android.exoplayer2.upstream.DataSpec.length long \l0x0048: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.dataSpecBytesWritten long \l0x004a: ARITH  (r0 I:long) = (r0 I:long) \- (r2 I:long) \l0x004b: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.maxCacheFileSize long \l0x004d: INVOKE  (r4 I:long) = (r0 I:long), (r2 I:long) java.lang.Math.min(long, long):long type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|0x0052: IGET  (r0 I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.bufferedOutputStream com.google.android.exoplayer2.util.ReusableBufferedOutputStream \l0x0054: IGET  (r1 I:java.io.FileOutputStream) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.underlyingFileOutputStream java.io.FileOutputStream \l0x0056: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.ReusableBufferedOutputStream)\l  (r1 I:java.io.OutputStream)\l com.google.android.exoplayer2.util.ReusableBufferedOutputStream.reset(java.io.OutputStream):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x005a|0x005a: IGET  (r0 I:java.io.FileOutputStream) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.underlyingFileOutputStream java.io.FileOutputStream \l0x005c: IPUT  \l  (r0 I:java.io.OutputStream)\l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.outputStream java.io.OutputStream \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.upstream.cache.CacheDataSink.openNextOutputStream((r8 'this' I:com.google.android.exoplayer2.upstream.cache.CacheDataSink A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x000c\-0x0044: r4 'maxLength' long\l  0x0052\-0x005e: r4 'maxLength' long\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_3;
Node_12 -> Node_8;
Node_13 -> Node_9;
}

