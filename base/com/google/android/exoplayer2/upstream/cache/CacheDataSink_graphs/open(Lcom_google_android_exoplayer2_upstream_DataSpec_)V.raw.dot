digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheDataSink.open(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:long) = \l  (r7 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.length long \l0x0002: CONST  (r4 I:?[long, double]) = (\-1 ?[long, double]) \l0x0004: CMP_L  (r1 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0009: INVOKE  (r1 I:boolean) = \l  (r7 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l  (r1 I:int)\l com.google.android.exoplayer2.upstream.DataSpec.isFlagSet(int):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: IPUT  \l  (r1 I:com.google.android.exoplayer2.upstream.DataSpec)\l  (r6 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.dataSpec com.google.android.exoplayer2.upstream.DataSpec \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IPUT  \l  (r7 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l  (r6 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.dataSpec com.google.android.exoplayer2.upstream.DataSpec \l0x0015: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0017: IPUT  \l  (r2 I:long)\l  (r6 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.dataSpecBytesWritten long \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|SYNTHETIC\lSplitter:B:7:0x0019\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0019\l|0x0019: INVOKE  \l  (r6 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink)\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.openNextOutputStream():void type: DIRECT A[Catch:\{ IOException \-\> 0x001d \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|ExcHandler: IOException null\lSplitter:B:7:0x0019\l|0x001d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink$CacheDataSinkException) =  com.google.android.exoplayer2.upstream.cache.CacheDataSink$CacheDataSinkException \l0x0020: INVOKE  \l  (r1 I:com.google.android.exoplayer2.upstream.cache.CacheDataSink$CacheDataSinkException)\l  (r0 I:java.io.IOException A[D('e' java.io.IOException)])\l com.google.android.exoplayer2.upstream.cache.CacheDataSink.CacheDataSinkException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.cache.CacheDataSink.open((r6 'this' I:com.google.android.exoplayer2.upstream.cache.CacheDataSink A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001e\-0x0023: r0 'e' java.io.IOException\l  ?\-0x0023: r7 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.cache.CacheDataSink$CacheDataSinkException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_10;
Node_8 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

