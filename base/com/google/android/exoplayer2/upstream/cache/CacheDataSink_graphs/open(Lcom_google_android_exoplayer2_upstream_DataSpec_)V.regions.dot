digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheDataSink.open(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;)V" {
subgraph cluster_Region_1422914843 {
label = "R(1:(2:5|(1:7))(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_364991808 {
label = "IF [B:1:0x0006, B:3:0x000d] THEN: R(2:5|(1:7)) ELSE: R(1:4)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r7.length != \-1) goto L_0x0013\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|ADDED_TO_REGION\l|if (r7.isFlagSet(2) == true) goto L_0x0013\l}"];
subgraph cluster_Region_1593921317 {
label = "R(2:5|(1:7))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|r6.dataSpec = r7\lr6.dataSpecBytesWritten = 0\l}"];
subgraph cluster_TryCatchRegion_1653685063 {
label = "Try: R(1:7) catches: R(2:8|10)";
node [shape=record,color=blue];
subgraph cluster_Region_1239248163 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ IOException \-\> 0x001d \}\lSplitter:B:6:0x0019\l|openNextOutputStream()     \/\/ Catch:\{ IOException \-\> 0x001d \}\l}"];
}
subgraph cluster_Region_1453935117 {
label = "R(2:8|10) | ExcHandler: IOException (r0v0 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|ExcHandler: IOException (r0v0 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:6:0x0019\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|throw new com.google.android.exoplayer2.upstream.cache.CacheDataSink.CacheDataSinkException(r0)\l}"];
}
}
}
subgraph cluster_Region_59002778 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|r6.dataSpec = null\l}"];
}
}
}
subgraph cluster_Region_1453935117 {
label = "R(2:8|10) | ExcHandler: IOException (r0v0 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|ExcHandler: IOException (r0v0 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:6:0x0019\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|throw new com.google.android.exoplayer2.upstream.cache.CacheDataSink.CacheDataSinkException(r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0019|SYNTHETIC\lSplitter:B:6:0x0019\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001e}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.cache.CacheDataSink.open((r6v0 'this' com.google.android.exoplayer2.upstream.cache.CacheDataSink A[IMMUTABLE_TYPE, THIS]), (r7v0 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.cache.CacheDataSink$CacheDataSinkException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_4 -> Node_11;
Node_8 -> Node_9;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_9 -> Node_10;
}

