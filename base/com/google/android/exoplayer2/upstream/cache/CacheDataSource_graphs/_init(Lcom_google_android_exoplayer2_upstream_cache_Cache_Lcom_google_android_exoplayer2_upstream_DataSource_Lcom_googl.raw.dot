digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheDataSource.\<init\>(Lcom\/google\/android\/exoplayer2\/upstream\/cache\/Cache;Lcom\/google\/android\/exoplayer2\/upstream\/DataSource;Lcom\/google\/android\/exoplayer2\/upstream\/DataSource;Lcom\/google\/android\/exoplayer2\/upstream\/DataSink;ILcom\/google\/android\/exoplayer2\/upstream\/cache\/CacheDataSource$EventListener;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: IPUT  \l  (r4 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache)])\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.cache com.google.android.exoplayer2.upstream.cache.Cache \l0x0007: IPUT  \l  (r6 I:com.google.android.exoplayer2.upstream.DataSource A[D('cacheReadDataSource' com.google.android.exoplayer2.upstream.DataSource)])\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.cacheReadDataSource com.google.android.exoplayer2.upstream.DataSource \l0x0009: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char] A[D('flags' int)]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IPUT  \l  (r0 I:boolean)\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.blockOnCache boolean \l0x0010: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char] A[D('flags' int)]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IPUT  \l  (r0 I:boolean)\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.ignoreCacheOnError boolean \l0x0017: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char] A[D('flags' int)]) & (4 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002f \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IPUT  \l  (r1 I:boolean)\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.ignoreCacheForUnsetLengthRequests boolean \l0x001d: IPUT  \l  (r5 I:com.google.android.exoplayer2.upstream.DataSource A[D('upstream' com.google.android.exoplayer2.upstream.DataSource)])\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.upstreamDataSource com.google.android.exoplayer2.upstream.DataSource \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('cacheWriteDataSink' com.google.android.exoplayer2.upstream.DataSink)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0031 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.upstream.TeeDataSource) =  com.google.android.exoplayer2.upstream.TeeDataSource \l0x0023: INVOKE  \l  (r0 I:com.google.android.exoplayer2.upstream.TeeDataSource)\l  (r5 I:com.google.android.exoplayer2.upstream.DataSource A[D('upstream' com.google.android.exoplayer2.upstream.DataSource)])\l  (r7 I:com.google.android.exoplayer2.upstream.DataSink A[D('cacheWriteDataSink' com.google.android.exoplayer2.upstream.DataSink)])\l com.google.android.exoplayer2.upstream.TeeDataSource.\<init\>(com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.upstream.DataSink):void type: DIRECT \l0x0026: IPUT  \l  (r0 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.cacheWriteDataSource com.google.android.exoplayer2.upstream.DataSource \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: IPUT  \l  (r9 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource$EventListener A[D('eventListener' com.google.android.exoplayer2.upstream.cache.CacheDataSource$EventListener)])\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.eventListener com.google.android.exoplayer2.upstream.cache.CacheDataSource$EventListener \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|0x0031: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0032: IPUT  \l  (r0 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r3 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.cacheWriteDataSource com.google.android.exoplayer2.upstream.DataSource \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.cache.CacheDataSource.\<init\>((r3 'this' I:com.google.android.exoplayer2.upstream.cache.CacheDataSource A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.android.exoplayer2.upstream.cache.Cache A[D('cache' com.google.android.exoplayer2.upstream.cache.Cache), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.google.android.exoplayer2.upstream.DataSource A[D('upstream' com.google.android.exoplayer2.upstream.DataSource), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.google.android.exoplayer2.upstream.DataSource A[D('cacheReadDataSource' com.google.android.exoplayer2.upstream.DataSource), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:com.google.android.exoplayer2.upstream.DataSink A[D('cacheWriteDataSink' com.google.android.exoplayer2.upstream.DataSink), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('flags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource$EventListener A[D('eventListener' com.google.android.exoplayer2.upstream.cache.CacheDataSource$EventListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , , , , , Annotation[BUILD, android.support.annotation.Nullable, \{\}]\lDebug Info:\l  ?\-0x0034: r4 'cache' com.google.android.exoplayer2.upstream.cache.Cache\l  ?\-0x0034: r5 'upstream' com.google.android.exoplayer2.upstream.DataSource\l  ?\-0x0034: r6 'cacheReadDataSource' com.google.android.exoplayer2.upstream.DataSource\l  ?\-0x0034: r7 'cacheWriteDataSink' com.google.android.exoplayer2.upstream.DataSink\l  ?\-0x0034: r8 'flags' int\l  ?\-0x0034: r9 'eventListener' com.google.android.exoplayer2.upstream.cache.CacheDataSource$EventListener\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_3;
Node_14 -> Node_6;
Node_15 -> Node_8;
Node_16 -> Node_11;
}

