digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheDataSource.read([BII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[long, double]) = (\-1 ?[long, double]) \l0x0002: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('readLength' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r0 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.bytesRemaining long \l0x000a: CMP_L  (r2 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|SYNTHETIC\lSplitter:B:6:0x0010\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0010\l|0x0010: IGET  (r2 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.currentDataSource com.google.android.exoplayer2.upstream.DataSource A[Catch:\{ IOException \-\> 0x0037 \}, TRY_ENTER]\l0x0012: INVOKE  (r0 I:int) = \l  (r2 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r9 I:byte[] A[D('buffer' byte[])])\l  (r10 I:int A[D('offset' int)])\l  (r11 I:int A[D('readLength' int)])\l com.google.android.exoplayer2.upstream.DataSource.read(byte[], int, int):int type: INTERFACE A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char] A[D('bytesRead' int)]) \< (0 ?[int, byte, short, char])  \-\> B:19:0x003c A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: IGET  (r2 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.currentDataSource com.google.android.exoplayer2.upstream.DataSource A[Catch:\{ IOException \-\> 0x0037 \}]\l0x001a: IGET  (r3 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.cacheReadDataSource com.google.android.exoplayer2.upstream.DataSource A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0024 A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.totalCachedBytesRead long A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0020: CAST  (r4 I:long) = (long) (r0 I:int A[D('bytesRead' int)]) A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0021: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0022: IPUT  \l  (r2 I:long)\l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.totalCachedBytesRead long A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.readPosition long A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0026: CAST  (r4 I:long) = (long) (r0 I:int A[D('bytesRead' int)]) A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0027: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0028: IPUT  \l  (r2 I:long)\l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.readPosition long A[Catch:\{ IOException \-\> 0x0037 \}]\l0x002a: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.bytesRemaining long A[Catch:\{ IOException \-\> 0x0037 \}]\l0x002c: CMP_L  (r2 I:int) = (r2 I:long), (r6 I:long) A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0007 A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.bytesRemaining long A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0032: CAST  (r4 I:long) = (long) (r0 I:int A[D('bytesRead' int)]) A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0033: ARITH  (r2 I:long) = (r2 I:long) \- (r4 I:long) A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0034: IPUT  \l  (r2 I:long)\l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.bytesRemaining long A[Catch:\{ IOException \-\> 0x0037 \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|ExcHandler: IOException null\lSplitter:B:6:0x0010\l|0x0037: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|0x0038: INVOKE  \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l  (r1 I:java.io.IOException A[D('e' java.io.IOException)])\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.handleBeforeThrow(java.io.IOException):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x003b|0x003b: THROW  (r1 I:java.lang.Throwable A[D('e' java.io.IOException)]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x003c|SYNTHETIC\lSplitter:B:19:0x003c\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x003c\l|0x003c: IGET  (r2 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.currentRequestUnbounded boolean A[Catch:\{ IOException \-\> 0x0037 \}, TRY_ENTER]\l}"];
Node_21 [shape=record,label="{21\:\ 0x003e|0x003e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0049 A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0040|0x0040: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.readPosition long A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0042: INVOKE  \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l  (r2 I:long)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.setContentLength(long):void type: DIRECT A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0045: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0047: IPUT  \l  (r2 I:long)\l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.bytesRemaining long A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0049|0x0049: INVOKE  \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.closeCurrentSource():void type: DIRECT A[Catch:\{ IOException \-\> 0x0037 \}]\l0x004c: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.bytesRemaining long A[Catch:\{ IOException \-\> 0x0037 \}]\l0x004e: CMP_L  (r2 I:int) = (r2 I:long), (r4 I:long) A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0050|0x0050: IF  (r2 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:27:0x0058 A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0052|0x0052: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.bytesRemaining long A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0054: CMP_L  (r2 I:int) = (r2 I:long), (r6 I:long) A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0056|0x0056: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0007 A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0058|0x0058: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x0037 \}]\l0x0059: INVOKE  (r2 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l  (r2 I:boolean)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.openNextSource(boolean):boolean type: DIRECT A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x005d|0x005d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0007 A[Catch:\{ IOException \-\> 0x0037 \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x005f|0x005f: INVOKE  (r0 I:int A[D('bytesRead' int)]) = \l  (r8 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l  (r9 I:byte[] A[D('buffer' byte[])])\l  (r10 I:int A[D('offset' int)])\l  (r11 I:int A[D('readLength' int)])\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.read(byte[], int, int):int type: VIRTUAL A[Catch:\{ IOException \-\> 0x0037 \}, TRY_LEAVE]\l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.upstream.cache.CacheDataSource.read((r8 'this' I:com.google.android.exoplayer2.upstream.cache.CacheDataSource A[IMMUTABLE_TYPE, THIS]), (r9 I:byte[] A[D('buffer' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('readLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0016\-0x0037: r0 'bytesRead' int\l  0x0038\-0x003c: r1 'e' java.io.IOException\l  0x003c\-0x0063: r0 'bytesRead' int\l  ?\-0x0063: r9 'buffer' byte[]\l  ?\-0x0063: r10 'offset' int\l  ?\-0x0063: r11 'readLength' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_2;
Node_6 -> Node_7;
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_2;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_2;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_2;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_2;
Node_28 -> Node_29[style=dashed];
Node_29 -> Node_2;
}

