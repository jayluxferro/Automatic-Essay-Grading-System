digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheDataSource.closeCurrentSource()V" {
subgraph cluster_Region_1138056996 {
label = "R(1:(1:(1:3))(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1283725847 {
label = "IF [B:1:0x0003] THEN: R(1:(1:3)) ELSE: R(0)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r4.currentDataSource != null) goto L_0x0006\l}"];
subgraph cluster_Region_637533107 {
label = "R(1:(1:3))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_783171772 {
label = "Try: R(1:3) finally: R(3:7|(1:10)|11)";
node [shape=record,color=blue];
subgraph cluster_Region_1198196274 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ all \-\> 0x001f \}\lSplitter:B:2:0x0006\l|r4.currentDataSource.close()     \/\/ Catch:\{ all \-\> 0x001f \}\lr4.currentDataSource = null     \/\/ Catch:\{ all \-\> 0x001f \}\lr4.currentRequestUnbounded = false     \/\/ Catch:\{ all \-\> 0x001f \}\l}"];
}
subgraph cluster_Region_735311978 {
label = "R(3:7|(1:10)|11) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001f|ExcHandler:  FINALLY\lSplitter:B:2:0x0006\l}"];
subgraph cluster_IfRegion_1898687680 {
label = "IF [B:9:0x0022] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0022|FINALLY_INSNS\l|if (r4.lockedSpan != null) goto L_0x0024\l}"];
subgraph cluster_Region_761047545 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0024|FINALLY_INSNS\l|r4.cache.releaseHoleSpan(r4.lockedSpan)\lr4.lockedSpan = null\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x002d|throw r0\l}"];
}
}
}
subgraph cluster_Region_840528118 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_735311978 {
label = "R(3:7|(1:10)|11) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001f|ExcHandler:  FINALLY\lSplitter:B:2:0x0006\l}"];
subgraph cluster_IfRegion_1898687680 {
label = "IF [B:9:0x0022] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0022|FINALLY_INSNS\l|if (r4.lockedSpan != null) goto L_0x0024\l}"];
subgraph cluster_Region_761047545 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0024|FINALLY_INSNS\l|r4.cache.releaseHoleSpan(r4.lockedSpan)\lr4.lockedSpan = null\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x002d|throw r0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006|SYNTHETIC\lSplitter:B:2:0x0006\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0011|DONT_GENERATE\l|com.google.android.exoplayer2.upstream.cache.CacheSpan r0 = r4.lockedSpan\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0013|DONT_GENERATE\l|if (r0 == null) goto L_?\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0015|DONT_GENERATE\l|com.google.android.exoplayer2.upstream.cache.Cache r0 = r4.cache\lcom.google.android.exoplayer2.upstream.cache.CacheSpan r1 = r4.lockedSpan\lr0.releaseHoleSpan(r1)\lr4.lockedSpan = null\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0020|FINALLY_INSNS\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_13 [shape=record,color=red,label="{13\:\ ?|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.upstream.cache.CacheDataSource.closeCurrentSource((r4v0 'this' com.google.android.exoplayer2.upstream.cache.CacheDataSource A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_12[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_14;
Node_8 -> Node_9;
}

