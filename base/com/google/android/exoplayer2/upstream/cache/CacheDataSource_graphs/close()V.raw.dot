digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CacheDataSource.close()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  \l  (r1 I:android.net.Uri)\l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.uri android.net.Uri \l0x0003: INVOKE  \l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.notifyBytesRead():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0006\l|0x0006: INVOKE  \l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.closeCurrentSource():void type: DIRECT A[Catch:\{ IOException \-\> 0x000a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|ExcHandler: IOException null\lSplitter:B:1:0x0006\l|0x000a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: INVOKE  \l  (r2 I:com.google.android.exoplayer2.upstream.cache.CacheDataSource)\l  (r0 I:java.io.IOException A[D('e' java.io.IOException)])\l com.google.android.exoplayer2.upstream.cache.CacheDataSource.handleBeforeThrow(java.io.IOException):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: THROW  (r0 I:java.lang.Throwable A[D('e' java.io.IOException)]) \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.cache.CacheDataSource.close((r2 'this' I:com.google.android.exoplayer2.upstream.cache.CacheDataSource A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x000b\-0x000e: r0 'e' java.io.IOException\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

