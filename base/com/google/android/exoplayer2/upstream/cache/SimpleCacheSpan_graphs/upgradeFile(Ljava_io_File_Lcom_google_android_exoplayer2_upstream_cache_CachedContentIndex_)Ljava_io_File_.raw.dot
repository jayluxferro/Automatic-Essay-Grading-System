digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.upgradeFile(Ljava\/io\/File;Lcom\/google\/android\/exoplayer2\/upstream\/cache\/CachedContentIndex;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r6 I:java.lang.String) = (r11 I:java.io.File A[D('file' java.io.File)]) java.io.File.getName():java.lang.String type: VIRTUAL \l0x0006: SGET  (r0 I:java.util.regex.Pattern) =  com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.CACHE_FILE_PATTERN_V2 java.util.regex.Pattern \l0x0008: INVOKE  (r8 I:java.util.regex.Matcher) = \l  (r0 I:java.util.regex.Pattern)\l  (r6 I:java.lang.CharSequence A[D('filename' java.lang.String)])\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x000c: INVOKE  (r0 I:boolean) = \l  (r8 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l java.util.regex.Matcher.matches():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: INVOKE  (r0 I:java.lang.String) = \l  (r8 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r1 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l0x0016: INVOKE  (r7 I:java.lang.String) = (r0 I:java.lang.String) com.google.android.exoplayer2.util.Util.unescapeFileName(java.lang.String):java.lang.String type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('key' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0030 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: RETURN  (r9 I:java.io.File) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: SGET  (r0 I:java.util.regex.Pattern) =  com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.CACHE_FILE_PATTERN_V1 java.util.regex.Pattern \l0x0020: INVOKE  (r8 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)]) = \l  (r0 I:java.util.regex.Pattern)\l  (r6 I:java.lang.CharSequence A[D('filename' java.lang.String)])\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x0024: INVOKE  (r0 I:boolean) = \l  (r8 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l java.util.regex.Matcher.matches():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: INVOKE  (r7 I:java.lang.String) = \l  (r8 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r1 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: INVOKE  (r0 I:java.io.File) = (r11 I:java.io.File A[D('file' java.io.File)]) java.io.File.getParentFile():java.io.File type: VIRTUAL \l0x0034: INVOKE  (r1 I:int) = \l  (r12 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex A[D('index' com.google.android.exoplayer2.upstream.cache.CachedContentIndex)])\l  (r7 I:java.lang.String A[D('key' java.lang.String)])\l com.google.android.exoplayer2.upstream.cache.CachedContentIndex.assignIdForKey(java.lang.String):int type: VIRTUAL \l0x0038: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0039: INVOKE  (r2 I:java.lang.String) = \l  (r8 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r2 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l0x003d: INVOKE  (r2 I:long) = (r2 I:java.lang.String) java.lang.Long.parseLong(java.lang.String):long type: STATIC \l0x0041: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0042: INVOKE  (r4 I:java.lang.String) = \l  (r8 I:java.util.regex.Matcher A[D('matcher' java.util.regex.Matcher)])\l  (r4 I:int)\l java.util.regex.Matcher.group(int):java.lang.String type: VIRTUAL \l0x0046: INVOKE  (r4 I:long) = (r4 I:java.lang.String) java.lang.Long.parseLong(java.lang.String):long type: STATIC \l0x004a: INVOKE  (r9 I:java.io.File) = (r0 I:java.io.File), (r1 I:int), (r2 I:long), (r4 I:long) com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.getCacheFile(java.io.File, int, long, long):java.io.File type: STATIC \l0x004e: INVOKE  (r0 I:boolean) = \l  (r11 I:java.io.File A[D('file' java.io.File)])\l  (r9 I:java.io.File A[D('newCacheFile' java.io.File)])\l java.io.File.renameTo(java.io.File):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0052|0x0052: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0054|0x0054: MOVE  (r9 I:?[OBJECT, ARRAY] A[D('newCacheFile' java.io.File)]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{private static java.io.File com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.upgradeFile((r11 I:java.io.File A[D('file' java.io.File), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:com.google.android.exoplayer2.upstream.cache.CachedContentIndex A[D('index' com.google.android.exoplayer2.upstream.cache.CachedContentIndex), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001a\-0x001d: r7 'key' java.lang.String\l  0x0006\-0x0055: r6 'filename' java.lang.String\l  0x0030\-0x0055: r7 'key' java.lang.String\l  0x000c\-0x0055: r8 'matcher' java.util.regex.Matcher\l  0x004e\-0x0055: r9 'newCacheFile' java.io.File\l  ?\-0x0055: r11 'file' java.io.File\l  ?\-0x0055: r12 'index' com.google.android.exoplayer2.upstream.cache.CachedContentIndex\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_5;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_5;
}

