digraph "CFG forcom.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.copyWithUpdatedLastAccessTime(I)Lcom\/google\/android\/exoplayer2\/upstream\/cache\/SimpleCacheSpan;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = \l  (r15 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.isCached boolean \l0x0002: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x0005: INVOKE  (r4 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC \l0x0009: IGET  (r0 I:java.io.File) = \l  (r15 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.file java.io.File \l0x000b: INVOKE  (r0 I:java.io.File) = (r0 I:java.io.File) java.io.File.getParentFile():java.io.File type: VIRTUAL \l0x000f: IGET  (r2 I:long) = \l  (r15 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.position long \l0x0011: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('id' int)])\l \l0x0013: INVOKE  (r14 I:java.io.File) = \l  (r0 I:java.io.File)\l  (r1 I:int)\l  (r2 I:long)\l  (r4 I:long A[D('now' long)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.getCacheFile(java.io.File, int, long, long):java.io.File type: STATIC \l0x0017: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan) =  com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan \l0x0019: IGET  (r7 I:java.lang.String) = \l  (r15 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.key java.lang.String \l0x001b: IGET  (r8 I:long) = \l  (r15 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.position long \l0x001d: IGET  (r10 I:long) = \l  (r15 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.length long \l0x001f: MOVE  (r12 I:?[long, double]) = (r4 I:?[long, double] A[D('now' long)]) \l0x0020: INVOKE  \l  (r6 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)\l  (r7 I:java.lang.String)\l  (r8 I:long)\l  (r10 I:long)\l  (r12 I:long)\l  (r14 I:java.io.File A[D('newCacheFile' java.io.File)])\l com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.\<init\>(java.lang.String, long, long, long, java.io.File):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0023|0x0023: RETURN  \l  (r6 I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan)\l \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan.copyWithUpdatedLastAccessTime((r15 'this' I:com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan A[IMMUTABLE_TYPE, THIS]), (r16 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0009\-0x0023: r4 'now' long\l  0x0017\-0x0023: r14 'newCacheFile' java.io.File\l  ?\-0x0023: r16 'id' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

