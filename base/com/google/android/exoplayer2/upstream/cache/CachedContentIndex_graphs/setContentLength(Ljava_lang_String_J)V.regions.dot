digraph "CFG forcom.google.android.exoplayer2.upstream.cache.CachedContentIndex.setContentLength(Ljava\/lang\/String;J)V" {
subgraph cluster_Region_517301455 {
label = "R(2:0|(1:5)(1:(1:4)(0)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.exoplayer2.upstream.cache.CachedContent com.google.android.exoplayer2.upstream.cache.CachedContent r0 = get(r5)\l}"];
subgraph cluster_IfRegion_1697444828 {
label = "IF [B:1:0x0004] THEN: R(1:5) ELSE: R(1:(1:4)(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 == null) goto L_0x0015\l}"];
subgraph cluster_Region_451573306 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0015|addNew(r5, r6)\l}"];
}
subgraph cluster_Region_1716812856 {
label = "R(1:(1:4)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_41852851 {
label = "IF [B:3:0x000c] THEN: R(1:4) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r0.getLength() != r6) goto L_0x000e\l}"];
subgraph cluster_Region_849802531 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|r0.setLength(r6)\lr4.changed = true\l}"];
}
subgraph cluster_Region_19761180 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.cache.CachedContentIndex.setContentLength((r4v0 'this' com.google.android.exoplayer2.upstream.cache.CachedContentIndex A[IMMUTABLE_TYPE, THIS]), (r5v0 'key' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'length' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_5 -> Node_8;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_6;
Node_2 -> Node_3;
}

