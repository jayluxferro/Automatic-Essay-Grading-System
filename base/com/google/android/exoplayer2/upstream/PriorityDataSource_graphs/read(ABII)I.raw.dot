digraph "CFG forcom.google.android.exoplayer2.upstream.PriorityDataSource.read([BII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.exoplayer2.util.PriorityTaskManager) = \l  (r2 I:com.google.android.exoplayer2.upstream.PriorityDataSource)\l com.google.android.exoplayer2.upstream.PriorityDataSource.priorityTaskManager com.google.android.exoplayer2.util.PriorityTaskManager \l0x0002: IGET  (r1 I:int) = \l  (r2 I:com.google.android.exoplayer2.upstream.PriorityDataSource)\l com.google.android.exoplayer2.upstream.PriorityDataSource.priority int \l0x0004: INVOKE  \l  (r0 I:com.google.android.exoplayer2.util.PriorityTaskManager)\l  (r1 I:int)\l com.google.android.exoplayer2.util.PriorityTaskManager.proceedOrThrow(int):void type: VIRTUAL \l0x0007: IGET  (r0 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r2 I:com.google.android.exoplayer2.upstream.PriorityDataSource)\l com.google.android.exoplayer2.upstream.PriorityDataSource.upstream com.google.android.exoplayer2.upstream.DataSource \l0x0009: INVOKE  (r0 I:int) = \l  (r0 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r3 I:byte[] A[D('buffer' byte[])])\l  (r4 I:int A[D('offset' int)])\l  (r5 I:int A[D('max' int)])\l com.google.android.exoplayer2.upstream.DataSource.read(byte[], int, int):int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.upstream.PriorityDataSource.read((r2 'this' I:com.google.android.exoplayer2.upstream.PriorityDataSource A[IMMUTABLE_TYPE, THIS]), (r3 I:byte[] A[D('buffer' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('max' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000d: r3 'buffer' byte[]\l  ?\-0x000d: r4 'offset' int\l  ?\-0x000d: r5 'max' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

