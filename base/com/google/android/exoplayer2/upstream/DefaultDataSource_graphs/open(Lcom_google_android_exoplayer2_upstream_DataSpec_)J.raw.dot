digraph "CFG forcom.google.android.exoplayer2.upstream.DefaultDataSource.open(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.dataSource com.google.android.exoplayer2.upstream.DataSource \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r1 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x0008: IGET  (r1 I:android.net.Uri) = \l  (r5 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.uri android.net.Uri \l0x000a: INVOKE  (r0 I:java.lang.String) = (r1 I:android.net.Uri) android.net.Uri.getScheme():java.lang.String type: VIRTUAL \l0x000e: IGET  (r1 I:android.net.Uri) = \l  (r5 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.uri android.net.Uri \l0x0010: INVOKE  (r1 I:boolean) = (r1 I:android.net.Uri) com.google.android.exoplayer2.util.Util.isLocalFileUri(android.net.Uri):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0036 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IGET  (r1 I:android.net.Uri) = \l  (r5 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSpec.uri android.net.Uri \l0x0018: INVOKE  (r1 I:java.lang.String) = (r1 I:android.net.Uri) android.net.Uri.getPath():java.lang.String type: VIRTUAL \l0x001c: CONST_STR  (r2 I:java.lang.String) =  \"\/android_asset\/\" \l0x001e: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0031 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.assetDataSource com.google.android.exoplayer2.upstream.DataSource \l0x0026: IPUT  \l  (r1 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.dataSource com.google.android.exoplayer2.upstream.DataSource \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.dataSource com.google.android.exoplayer2.upstream.DataSource \l0x002a: INVOKE  (r2 I:long) = \l  (r1 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r5 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l com.google.android.exoplayer2.upstream.DataSource.open(com.google.android.exoplayer2.upstream.DataSpec):long type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: RETURN  (r2 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.fileDataSource com.google.android.exoplayer2.upstream.DataSource \l0x0033: IPUT  \l  (r1 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.dataSource com.google.android.exoplayer2.upstream.DataSource \l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: CONST_STR  (r1 I:java.lang.String) =  \"asset\" \l0x0038: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r0 I:java.lang.Object A[D('scheme' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0043 \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.assetDataSource com.google.android.exoplayer2.upstream.DataSource \l0x0040: IPUT  \l  (r1 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.dataSource com.google.android.exoplayer2.upstream.DataSource \l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|0x0043: CONST_STR  (r1 I:java.lang.String) =  \"content\" \l0x0045: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r0 I:java.lang.Object A[D('scheme' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0050 \l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|0x004b: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.contentDataSource com.google.android.exoplayer2.upstream.DataSource \l0x004d: IPUT  \l  (r1 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.dataSource com.google.android.exoplayer2.upstream.DataSource \l}"];
Node_18 [shape=record,label="{18\:\ 0x0050|0x0050: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.baseDataSource com.google.android.exoplayer2.upstream.DataSource \l0x0052: IPUT  \l  (r1 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r4 I:com.google.android.exoplayer2.upstream.DefaultDataSource)\l com.google.android.exoplayer2.upstream.DefaultDataSource.dataSource com.google.android.exoplayer2.upstream.DataSource \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.upstream.DefaultDataSource.open((r4 'this' I:com.google.android.exoplayer2.upstream.DefaultDataSource A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000e\-0x002f: r0 'scheme' java.lang.String\l  0x0031\-0x0054: r0 'scheme' java.lang.String\l  ?\-0x0054: r5 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_3;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_8;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_8;
Node_18 -> Node_8;
}

