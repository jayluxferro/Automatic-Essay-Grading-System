digraph "CFG forcom.google.android.exoplayer2.upstream.ByteArrayDataSink.open(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if ((r5.length \> \-1 ? 1 : (r5.length == \-1 ? 0 : \-1)) != 0) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|r4.stream = new java.io.ByteArrayOutputStream()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010}"];
Node_4 [shape=record,label="{4\:\ 0x0017|if ((r5.length \> 2147483647L ? 1 : (r5.length == 2147483647L ? 0 : \-1)) \> 0) goto L_0x0028\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|r0 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|PHI: r0 \l  PHI: (r0v5 boolean) = (r0v4 boolean), (r0v7 boolean) binds: [B:7:0x0028, B:5:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r0)\lr4.stream = new java.io.ByteArrayOutputStream((int) r5.length)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|r0 = false\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.upstream.ByteArrayDataSink.open((r4v0 'this' com.google.android.exoplayer2.upstream.ByteArrayDataSink A[IMMUTABLE_TYPE, THIS]), (r5v0 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_9;
Node_7 -> Node_6;
}

