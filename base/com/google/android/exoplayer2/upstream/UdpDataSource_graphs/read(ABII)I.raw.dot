digraph "CFG forcom.google.android.exoplayer2.upstream.UdpDataSource.read([BII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('readLength' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.packetRemaining int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|SYNTHETIC\lSplitter:B:5:0x0008\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0008\l|0x0008: IGET  (r3 I:java.net.DatagramSocket) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.socket java.net.DatagramSocket A[Catch:\{ IOException \-\> 0x003d \}, TRY_ENTER]\l0x000a: IGET  (r4 I:java.net.DatagramPacket) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.packet java.net.DatagramPacket A[Catch:\{ IOException \-\> 0x003d \}]\l0x000c: INVOKE  \l  (r3 I:java.net.DatagramSocket)\l  (r4 I:java.net.DatagramPacket)\l java.net.DatagramSocket.receive(java.net.DatagramPacket):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x003d \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IGET  (r3 I:java.net.DatagramPacket) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.packet java.net.DatagramPacket \l0x0011: INVOKE  (r3 I:int) = (r3 I:java.net.DatagramPacket) java.net.DatagramPacket.getLength():int type: VIRTUAL \l0x0015: IPUT  \l  (r3 I:int)\l  (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource)\l com.google.android.exoplayer2.upstream.UdpDataSource.packetRemaining int \l0x0017: IGET  (r3 I:com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.UdpDataSource\>) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.listener com.google.android.exoplayer2.upstream.TransferListener \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IGET  (r3 I:com.google.android.exoplayer2.upstream.TransferListener\<? super com.google.android.exoplayer2.upstream.UdpDataSource\>) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.listener com.google.android.exoplayer2.upstream.TransferListener \l0x001d: IGET  (r4 I:int) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.packetRemaining int \l0x001f: INVOKE  \l  (r3 I:com.google.android.exoplayer2.upstream.TransferListener)\l  (r5 I:java.lang.Object)\l  (r4 I:int)\l com.google.android.exoplayer2.upstream.TransferListener.onBytesTransferred(java.lang.Object, int):void type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: IGET  (r3 I:java.net.DatagramPacket) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.packet java.net.DatagramPacket \l0x0024: INVOKE  (r3 I:int) = (r3 I:java.net.DatagramPacket) java.net.DatagramPacket.getLength():int type: VIRTUAL \l0x0028: IGET  (r4 I:int) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.packetRemaining int \l0x002a: ARITH  (r2 I:int) = (r3 I:int) \- (r4 I:int) \l0x002c: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.packetRemaining int \l0x002e: INVOKE  (r0 I:int) = (r3 I:int), (r8 I:int A[D('readLength' int)]) java.lang.Math.min(int, int):int type: STATIC \l0x0032: IGET  (r3 I:byte[]) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.packetBuffer byte[] \l0x0034: INVOKE  \l  (r3 I:java.lang.Object)\l  (r2 I:int A[D('packetOffset' int)])\l  (r6 I:java.lang.Object A[D('buffer' byte[])])\l  (r7 I:int A[D('offset' int)])\l  (r0 I:int A[D('bytesToRead' int)])\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0037: IGET  (r3 I:int) = (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource) com.google.android.exoplayer2.upstream.UdpDataSource.packetRemaining int \l0x0039: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int A[D('bytesToRead' int)]) \l0x003a: IPUT  \l  (r3 I:int)\l  (r5 I:com.google.android.exoplayer2.upstream.UdpDataSource)\l com.google.android.exoplayer2.upstream.UdpDataSource.packetRemaining int \l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|ExcHandler: IOException null\lSplitter:B:5:0x0008\l|0x003d: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|0x003e: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.upstream.UdpDataSource$UdpDataSourceException) =  com.google.android.exoplayer2.upstream.UdpDataSource$UdpDataSourceException \l0x0040: INVOKE  \l  (r3 I:com.google.android.exoplayer2.upstream.UdpDataSource$UdpDataSourceException)\l  (r1 I:java.io.IOException A[D('e' java.io.IOException)])\l com.google.android.exoplayer2.upstream.UdpDataSource.UdpDataSourceException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.upstream.UdpDataSource.read((r5 'this' I:com.google.android.exoplayer2.upstream.UdpDataSource A[IMMUTABLE_TYPE, THIS]), (r6 I:byte[] A[D('buffer' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('offset' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('readLength' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0032\-0x003d: r0 'bytesToRead' int\l  0x002c\-0x003d: r2 'packetOffset' int\l  0x003e\-0x0043: r1 'e' java.io.IOException\l  ?\-0x0043: r6 'buffer' byte[]\l  ?\-0x0043: r7 'offset' int\l  ?\-0x0043: r8 'readLength' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.upstream.UdpDataSource$UdpDataSourceException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_2;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

