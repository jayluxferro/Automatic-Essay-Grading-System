digraph "CFG forcom.google.android.exoplayer2.trackselection.MappingTrackSelector.getSelectionOverride(ILcom\/google\/android\/exoplayer2\/source\/TrackGroupArray;)Lcom\/google\/android\/exoplayer2\/trackselection\/MappingTrackSelector$SelectionOverride;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Map r0 = r2.selectionOverrides.get(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 == null) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x0011|SYNTHETIC\lRETURN\l|return null\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0.get(r4)\l}"];
MethodNode[shape=record,label="{public final com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride com.google.android.exoplayer2.trackselection.MappingTrackSelector.getSelectionOverride((r2v0 'this' com.google.android.exoplayer2.trackselection.MappingTrackSelector A[IMMUTABLE_TYPE, THIS]), (r3v0 'rendererIndex' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'groups' com.google.android.exoplayer2.source.TrackGroupArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
}

