digraph "CFG forcom.google.android.exoplayer2.trackselection.MappingTrackSelector.getFormatSupport(Lcom\/google\/android\/exoplayer2\/RendererCapabilities;Lcom\/google\/android\/exoplayer2\/source\/TrackGroup;)[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l com.google.android.exoplayer2.source.TrackGroup.length int \l0x0002: NEW_ARRAY  (r0 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l com.google.android.exoplayer2.source.TrackGroup.length int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:4:0x0016 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r2 I:com.google.android.exoplayer2.Format) = \l  (r4 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l  (r1 I:int A[D('i' int)])\l com.google.android.exoplayer2.source.TrackGroup.getFormat(int):com.google.android.exoplayer2.Format type: VIRTUAL \l0x000d: INVOKE  (r2 I:int) = \l  (r3 I:com.google.android.exoplayer2.RendererCapabilities A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities)])\l  (r2 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.RendererCapabilities.supportsFormat(com.google.android.exoplayer2.Format):int type: INTERFACE \l0x0011: APUT  \l  (r0 I:?[int, float][] A[D('formatSupport' int[])])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l  (r2 I:?[int, float])\l \l0x0013: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: RETURN  (r0 I:int[] A[D('formatSupport' int[])]) \l}"];
MethodNode[shape=record,label="{private static int[] com.google.android.exoplayer2.trackselection.MappingTrackSelector.getFormatSupport((r3 I:com.google.android.exoplayer2.RendererCapabilities A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0004\-0x0016: r0 'formatSupport' int[]\l  0x0005\-0x0016: r1 'i' int\l  ?\-0x0016: r3 'rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities\l  ?\-0x0016: r4 'group' com.google.android.exoplayer2.source.TrackGroup\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

