digraph "CFG forcom.google.android.exoplayer2.trackselection.MappingTrackSelector.hasSelectionOverride(ILcom\/google\/android\/exoplayer2\/source\/TrackGroupArray;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Map r0 = r2.selectionOverrides.get(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 == null) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r0.containsKey(r4) == false) goto L_0x0012\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public final boolean com.google.android.exoplayer2.trackselection.MappingTrackSelector.hasSelectionOverride((r2v0 'this' com.google.android.exoplayer2.trackselection.MappingTrackSelector A[IMMUTABLE_TYPE, THIS]), (r3v0 'rendererIndex' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'groups' com.google.android.exoplayer2.source.TrackGroupArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
}

