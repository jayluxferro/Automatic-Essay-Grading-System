digraph "CFG forcom.google.android.exoplayer2.trackselection.MappingTrackSelector.selectTracks([Lcom\/google\/android\/exoplayer2\/RendererCapabilities;Lcom\/google\/android\/exoplayer2\/source\/TrackGroupArray;)Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelectorResult;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x0002: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x0003: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l0x0005: NEW_ARRAY  (r0 I:int[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0007: MOVE  (r23 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0009: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x000b: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x000c: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l0x000e: NEW_ARRAY  (r0 I:com.google.android.exoplayer2.source.TrackGroup[][]) = (r8 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.source.TrackGroup[][] \l0x0010: MOVE  (r24 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0012: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x0014: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x0015: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l0x0017: NEW_ARRAY  (r6 I:int[][][]) = (r8 I:int A[IMMUTABLE_TYPE]) type: int[][][] \l0x0019: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY] A[D('rendererTrackGroups' com.google.android.exoplayer2.source.TrackGroup[][])])\l \l0x001d: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x001e: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0020|0x0020: IF  (r0 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:4:0x0035 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('trackGroups' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x0024: IGET  (r8 I:int) = (r0 I:com.google.android.exoplayer2.source.TrackGroupArray) com.google.android.exoplayer2.source.TrackGroupArray.length int \l0x0026: NEW_ARRAY  (r8 I:com.google.android.exoplayer2.source.TrackGroup[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.source.TrackGroup[] \l0x0028: APUT  \l  (r24 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroups' com.google.android.exoplayer2.source.TrackGroup[][])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x002a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('trackGroups' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x002c: IGET  (r8 I:int) = (r0 I:com.google.android.exoplayer2.source.TrackGroupArray) com.google.android.exoplayer2.source.TrackGroupArray.length int \l0x002e: NEW_ARRAY  (r8 I:int[][]) = (r8 I:int A[IMMUTABLE_TYPE]) type: int[][] \l0x0030: APUT  \l  (r6 I:?[OBJECT, ARRAY][] A[D('rendererFormatSupports' int[][][])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x0032: ARITH  (r16 I:int A[D('i' int)]) = (r16 I:int A[D('i' int)]) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0035|0x0035: INVOKE  (r5 I:int[]) = \l  (r27 I:com.google.android.exoplayer2.RendererCapabilities[] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.getMixedMimeTypeAdaptationSupport(com.google.android.exoplayer2.RendererCapabilities[]):int[] type: STATIC \l0x0039: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|0x003a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('trackGroups' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x003c: IGET  (r8 I:int) = (r0 I:com.google.android.exoplayer2.source.TrackGroupArray) com.google.android.exoplayer2.source.TrackGroupArray.length int \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: IF  (r15 I:?[int, byte, short, char] A[D('groupIndex' int)]) \>= (r8 I:?[int, byte, short, char])  \-\> B:12:0x0073 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|0x0040: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('trackGroups' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x0042: INVOKE  (r14 I:com.google.android.exoplayer2.source.TrackGroup) = \l  (r0 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r15 I:int A[D('groupIndex' int)])\l com.google.android.exoplayer2.source.TrackGroupArray.get(int):com.google.android.exoplayer2.source.TrackGroup type: VIRTUAL \l0x0046: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x0048: INVOKE  (r20 I:int) = \l  (r0 I:com.google.android.exoplayer2.RendererCapabilities[])\l  (r14 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.findRenderer(com.google.android.exoplayer2.RendererCapabilities[], com.google.android.exoplayer2.source.TrackGroup):int type: STATIC \l0x004c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x004e: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x004f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rendererIndex' int)])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|0x0051: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x006c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0053|0x0053: IGET  (r8 I:int) = \l  (r14 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l com.google.android.exoplayer2.source.TrackGroup.length int \l0x0055: NEW_ARRAY  (r0 I:int[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0057: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0059|0x0059: AGET  (r22 I:?[int, float]) = \l  (r23 I:?[int, float][] A[D('rendererTrackGroupCounts' int[])])\l  (r20 I:?[int, short, byte, char] A[D('rendererIndex' int)])\l \l0x005b: AGET  (r8 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroups' com.google.android.exoplayer2.source.TrackGroup[][])])\l  (r20 I:?[int, short, byte, char] A[D('rendererIndex' int)])\l \l0x005d: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r22 I:?[int, short, byte, char] A[D('rendererTrackGroupCount' int)])\l  (r14 I:?[OBJECT, ARRAY] A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l \l0x005f: AGET  (r8 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][] A[D('rendererFormatSupports' int[][][])])\l  (r20 I:?[int, short, byte, char] A[D('rendererIndex' int)])\l \l0x0061: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r22 I:?[int, short, byte, char] A[D('rendererTrackGroupCount' int)])\l  (r19 I:?[OBJECT, ARRAY] A[D('rendererFormatSupport' int[])])\l \l0x0063: AGET  (r8 I:?[int, float]) = \l  (r23 I:?[int, float][] A[D('rendererTrackGroupCounts' int[])])\l  (r20 I:?[int, short, byte, char] A[D('rendererIndex' int)])\l \l0x0065: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l0x0067: APUT  \l  (r23 I:?[int, float][] A[D('rendererTrackGroupCounts' int[])])\l  (r20 I:?[int, short, byte, char] A[D('rendererIndex' int)])\l  (r8 I:?[int, float])\l \l0x0069: ARITH  (r15 I:int A[D('groupIndex' int)]) = (r15 I:int A[D('groupIndex' int)]) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x006c|0x006c: AGET  (r8 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY][] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l  (r20 I:?[int, short, byte, char] A[D('rendererIndex' int)])\l \l0x006e: INVOKE  (r19 I:int[]) = \l  (r8 I:com.google.android.exoplayer2.RendererCapabilities)\l  (r14 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.getFormatSupport(com.google.android.exoplayer2.RendererCapabilities, com.google.android.exoplayer2.source.TrackGroup):int[] type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0073|0x0073: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x0075: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x0076: NEW_ARRAY  (r4 I:com.google.android.exoplayer2.source.TrackGroupArray[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.source.TrackGroupArray[] \l0x0078: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x007a: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x007b: NEW_ARRAY  (r3 I:int[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x007d: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x007f|0x007f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x0081: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x0082: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0084|0x0084: IF  (r0 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:16:0x00b0 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0086|0x0086: AGET  (r22 I:?[int, float]) = \l  (r23 I:?[int, float][] A[D('rendererTrackGroupCounts' int[])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0088: NEW_INSTANCE  (r9 I:com.google.android.exoplayer2.source.TrackGroupArray) =  com.google.android.exoplayer2.source.TrackGroupArray \l0x008a: AGET  (r8 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroups' com.google.android.exoplayer2.source.TrackGroup[][])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l \l0x008c: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rendererTrackGroupCount' int)])\l \l0x008e: INVOKE  (r8 I:java.lang.Object[]) = (r8 I:java.lang.Object[]), (r0 I:int) java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] type: STATIC \l0x0092: CHECK_CAST  (r8 I:com.google.android.exoplayer2.source.TrackGroup[]) = (com.google.android.exoplayer2.source.TrackGroup[]) (r8 I:?[OBJECT, ARRAY]) \l0x0094: INVOKE  \l  (r9 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r8 I:com.google.android.exoplayer2.source.TrackGroup[])\l com.google.android.exoplayer2.source.TrackGroupArray.\<init\>(com.google.android.exoplayer2.source.TrackGroup[]):void type: DIRECT \l0x0097: APUT  \l  (r4 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l  (r9 I:?[OBJECT, ARRAY])\l \l0x0099: AGET  (r8 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][] A[D('rendererFormatSupports' int[][][])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l \l0x009b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rendererTrackGroupCount' int)])\l \l0x009d: INVOKE  (r8 I:java.lang.Object[]) = (r8 I:java.lang.Object[]), (r0 I:int) java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] type: STATIC \l0x00a1: CHECK_CAST  (r8 I:int[][]) = (int[][]) (r8 I:?[OBJECT, ARRAY]) \l0x00a3: APUT  \l  (r6 I:?[OBJECT, ARRAY][] A[D('rendererFormatSupports' int[][][])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x00a5: AGET  (r8 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY][] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l \l0x00a7: INVOKE  (r8 I:int) = (r8 I:com.google.android.exoplayer2.RendererCapabilities) com.google.android.exoplayer2.RendererCapabilities.getTrackType():int type: INTERFACE \l0x00ab: APUT  \l  (r3 I:?[int, float][] A[D('rendererTrackTypes' int[])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l  (r8 I:?[int, float])\l \l0x00ad: ARITH  (r16 I:int A[D('i' int)]) = (r16 I:int A[D('i' int)]) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x00b0|0x00b0: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x00b2: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x00b3: AGET  (r25 I:?[int, float]) = \l  (r23 I:?[int, float][] A[D('rendererTrackGroupCounts' int[])])\l  (r8 I:?[int, short, byte, char])\l \l0x00b5: NEW_INSTANCE  (r7 I:com.google.android.exoplayer2.source.TrackGroupArray) =  com.google.android.exoplayer2.source.TrackGroupArray \l0x00b7: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x00b9: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x00ba: AGET  (r8 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroups' com.google.android.exoplayer2.source.TrackGroup[][])])\l  (r8 I:?[int, short, byte, char])\l \l0x00bc: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('unassociatedTrackGroupCount' int)])\l \l0x00be: INVOKE  (r8 I:java.lang.Object[]) = (r8 I:java.lang.Object[]), (r0 I:int) java.util.Arrays.copyOf(java.lang.Object[], int):java.lang.Object[] type: STATIC \l0x00c2: CHECK_CAST  (r8 I:com.google.android.exoplayer2.source.TrackGroup[]) = (com.google.android.exoplayer2.source.TrackGroup[]) (r8 I:?[OBJECT, ARRAY]) \l0x00c4: INVOKE  \l  (r7 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r8 I:com.google.android.exoplayer2.source.TrackGroup[])\l com.google.android.exoplayer2.source.TrackGroupArray.\<init\>(com.google.android.exoplayer2.source.TrackGroup[]):void type: DIRECT \l0x00c7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x00c9: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x00cb: INVOKE  (r12 I:com.google.android.exoplayer2.trackselection.TrackSelection[]) = \l  (r0 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector)\l  (r1 I:com.google.android.exoplayer2.RendererCapabilities[])\l  (r4 I:com.google.android.exoplayer2.source.TrackGroupArray[] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[])])\l  (r6 I:int[][][] A[D('rendererFormatSupports' int[][][])])\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.selectTracks(com.google.android.exoplayer2.RendererCapabilities[], com.google.android.exoplayer2.source.TrackGroupArray[], int[][][]):com.google.android.exoplayer2.trackselection.TrackSelection[] type: VIRTUAL \l0x00cf: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x00d1|0x00d1: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x00d3: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x00d4: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x00d6|0x00d6: IF  (r0 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:29:0x0116 \l}"];
Node_19 [shape=record,label="{19\:\ 0x00d8|0x00d8: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x00da: IGET  (r8 I:android.util.SparseBooleanArray) = \l  (r0 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector)\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.rendererDisabledFlags android.util.SparseBooleanArray \l0x00dc: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l0x00de: INVOKE  (r8 I:boolean) = (r8 I:android.util.SparseBooleanArray), (r0 I:int) android.util.SparseBooleanArray.get(int):boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x00e2|0x00e2: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00ea \l}"];
Node_21 [shape=record,label="{21\:\ 0x00e4|0x00e4: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00e5: APUT  \l  (r12 I:?[OBJECT, ARRAY][] A[D('trackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l  (r8 I:?[OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x00e7|0x00e7: ARITH  (r16 I:int A[D('i' int)]) = (r16 I:int A[D('i' int)]) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ea|0x00ea: AGET  (r21 I:?[OBJECT, ARRAY]) = \l  (r4 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l \l0x00ec: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x00ee: IGET  (r8 I:android.util.SparseArray\<java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>\>) = \l  (r0 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector)\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.selectionOverrides android.util.SparseArray \l0x00f0: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l0x00f2: INVOKE  (r18 I:java.lang.Object) = (r8 I:android.util.SparseArray), (r0 I:int) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x00f6: CHECK_CAST  (r18 I:java.util.Map) = (java.util.Map) (r18 I:?[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00f8|0x00f8: IF  (r18 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('overrides' java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0109 \l}"];
Node_25 [shape=record,label="{25\:\ 0x00fa|0x00fa: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x00fc|0x00fc: IF  (r17 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('override' com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00e7 \l}"];
Node_27 [shape=record,label="{27\:\ 0x00fe|0x00fe: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('override' com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride)])\l \l0x0100: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('rendererTrackGroup' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x0102: INVOKE  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r0 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride)\l  (r1 I:com.google.android.exoplayer2.source.TrackGroupArray)\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.SelectionOverride.createTrackSelection(com.google.android.exoplayer2.source.TrackGroupArray):com.google.android.exoplayer2.trackselection.TrackSelection type: VIRTUAL \l0x0106: APUT  \l  (r12 I:?[OBJECT, ARRAY][] A[D('trackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l  (r8 I:?[OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x0109|0x0109: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('overrides' java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>)])\l \l0x010b: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('rendererTrackGroup' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x010d: INVOKE  (r8 I:java.lang.Object) = (r0 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0111: CHECK_CAST  (r8 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride) = (com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride) (r8 I:?[OBJECT, ARRAY]) \l0x0113: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0116|0x0116: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo) =  com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo \l0x0118: INVOKE  \l  (r2 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo)\l  (r3 I:int[] A[D('rendererTrackTypes' int[])])\l  (r4 I:com.google.android.exoplayer2.source.TrackGroupArray[] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[])])\l  (r5 I:int[] A[D('mixedMimeTypeAdaptationSupport' int[])])\l  (r6 I:int[][][] A[D('rendererFormatSupports' int[][][])])\l  (r7 I:com.google.android.exoplayer2.source.TrackGroupArray A[D('unassociatedTrackGroupArray' com.google.android.exoplayer2.source.TrackGroupArray)])\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo.\<init\>(int[], com.google.android.exoplayer2.source.TrackGroupArray[], int[], int[][][], com.google.android.exoplayer2.source.TrackGroupArray):void type: DIRECT \l0x011b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x011d: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x011e: NEW_ARRAY  (r11 I:com.google.android.exoplayer2.RendererConfiguration[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.RendererConfiguration[] \l0x0120: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x0122|0x0122: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x0124: ARRAY_LENGTH  (r8 I:int) = (r0 I:?[]) \l0x0125: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x0127|0x0127: IF  (r0 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:37:0x0136 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0129|0x0129: AGET  (r8 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY][] A[D('trackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x012b|0x012b: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0134 \l}"];
Node_34 [shape=record,label="{34\:\ 0x012d|0x012d: SGET  (r8 I:com.google.android.exoplayer2.RendererConfiguration) =  com.google.android.exoplayer2.RendererConfiguration.DEFAULT com.google.android.exoplayer2.RendererConfiguration \l}"];
Node_35 [shape=record,label="{35\:\ 0x012f|0x012f: APUT  \l  (r11 I:?[OBJECT, ARRAY][] A[D('rendererConfigurations' com.google.android.exoplayer2.RendererConfiguration[])])\l  (r16 I:?[int, short, byte, char] A[D('i' int)])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x0131: ARITH  (r16 I:int A[D('i' int)]) = (r16 I:int A[D('i' int)]) + (1 int) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0134|0x0134: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x0136|0x0136: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0138: IGET  (r13 I:int) = \l  (r0 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector)\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.tunnelingAudioSessionId int \l0x013a: MOVE  (r8 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x013c: MOVE  (r9 I:?[OBJECT, ARRAY]) = \l  (r4 I:?[OBJECT, ARRAY] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[])])\l \l0x013d: MOVE  (r10 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY] A[D('rendererFormatSupports' int[][][])])\l \l0x013e: INVOKE  \l  (r8 I:com.google.android.exoplayer2.RendererCapabilities[])\l  (r9 I:com.google.android.exoplayer2.source.TrackGroupArray[])\l  (r10 I:int[][][])\l  (r11 I:com.google.android.exoplayer2.RendererConfiguration[] A[D('rendererConfigurations' com.google.android.exoplayer2.RendererConfiguration[])])\l  (r12 I:com.google.android.exoplayer2.trackselection.TrackSelection[] A[D('trackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r13 I:int)\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.maybeConfigureRenderersForTunneling(com.google.android.exoplayer2.RendererCapabilities[], com.google.android.exoplayer2.source.TrackGroupArray[], int[][][], com.google.android.exoplayer2.RendererConfiguration[], com.google.android.exoplayer2.trackselection.TrackSelection[], int):void type: STATIC \l0x0141: NEW_INSTANCE  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult) =  com.google.android.exoplayer2.trackselection.TrackSelectorResult \l0x0143: NEW_INSTANCE  (r9 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray) =  com.google.android.exoplayer2.trackselection.TrackSelectionArray \l0x0145: INVOKE  \l  (r9 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray)\l  (r12 I:com.google.android.exoplayer2.trackselection.TrackSelection[] A[D('trackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l com.google.android.exoplayer2.trackselection.TrackSelectionArray.\<init\>(com.google.android.exoplayer2.trackselection.TrackSelection[]):void type: DIRECT \l0x0148: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('trackGroups' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x014a: INVOKE  \l  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult)\l  (r0 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r9 I:com.google.android.exoplayer2.trackselection.TrackSelectionArray)\l  (r2 I:java.lang.Object A[D('mappedTrackInfo' com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo)])\l  (r11 I:com.google.android.exoplayer2.RendererConfiguration[] A[D('rendererConfigurations' com.google.android.exoplayer2.RendererConfiguration[])])\l com.google.android.exoplayer2.trackselection.TrackSelectorResult.\<init\>(com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.TrackSelectionArray, java.lang.Object, com.google.android.exoplayer2.RendererConfiguration[]):void type: DIRECT \l}"];
Node_38 [shape=record,label="{38\:\ 0x014d|0x014d: RETURN  \l  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelectorResult)\l \l}"];
MethodNode[shape=record,label="{public final com.google.android.exoplayer2.trackselection.TrackSelectorResult com.google.android.exoplayer2.trackselection.MappingTrackSelector.selectTracks((r26 'this' I:com.google.android.exoplayer2.trackselection.MappingTrackSelector A[IMMUTABLE_TYPE, THIS]), (r27 I:com.google.android.exoplayer2.RendererCapabilities[] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:com.google.android.exoplayer2.source.TrackGroupArray A[D('trackGroups' com.google.android.exoplayer2.source.TrackGroupArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0059\-0x006c: r19 'rendererFormatSupport' int[]\l  0x005b\-0x006c: r22 'rendererTrackGroupCount' int\l  0x0046\-0x0073: r14 'group' com.google.android.exoplayer2.source.TrackGroup\l  0x004c\-0x0073: r20 'rendererIndex' int\l  0x0088\-0x00b0: r22 'rendererTrackGroupCount' int\l  0x00fc\-0x0109: r17 'override' com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\l  0x00f8\-0x0116: r18 'overrides' java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>\l  0x00ec\-0x0116: r21 'rendererTrackGroup' com.google.android.exoplayer2.source.TrackGroupArray\l  0x011b\-0x014d: r2 'mappedTrackInfo' com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo\l  0x007d\-0x014d: r3 'rendererTrackTypes' int[]\l  0x0078\-0x014d: r4 'rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[]\l  0x0039\-0x014d: r5 'mixedMimeTypeAdaptationSupport' int[]\l  0x0019\-0x014d: r6 'rendererFormatSupports' int[][][]\l  0x00c7\-0x014d: r7 'unassociatedTrackGroupArray' com.google.android.exoplayer2.source.TrackGroupArray\l  0x0120\-0x014d: r11 'rendererConfigurations' com.google.android.exoplayer2.RendererConfiguration[]\l  0x00cf\-0x014d: r12 'trackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[]\l  0x003a\-0x014d: r15 'groupIndex' int\l  0x001b\-0x014d: r16 'i' int\l  0x0009\-0x014d: r23 'rendererTrackGroupCounts' int[]\l  0x0012\-0x014d: r24 'rendererTrackGroups' com.google.android.exoplayer2.source.TrackGroup[][]\l  0x00b5\-0x014d: r25 'unassociatedTrackGroupCount' int\l  ?\-0x014d: r27 'rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[]\l  ?\-0x014d: r28 'trackGroups' com.google.android.exoplayer2.source.TrackGroupArray\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_5;
Node_11 -> Node_10;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_29;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_17;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_22;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_22;
Node_28 -> Node_26;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_35 -> Node_30;
Node_36 -> Node_35;
Node_37 -> Node_38;
}

