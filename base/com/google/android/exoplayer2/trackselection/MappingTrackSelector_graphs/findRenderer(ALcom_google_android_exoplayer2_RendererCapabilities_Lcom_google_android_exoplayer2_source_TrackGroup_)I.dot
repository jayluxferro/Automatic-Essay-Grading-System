digraph "CFG forcom.google.android.exoplayer2.trackselection.MappingTrackSelector.findRenderer([Lcom\/google\/android\/exoplayer2\/RendererCapabilities;Lcom\/google\/android\/exoplayer2\/source\/TrackGroup;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = r8.length\lr0 = 0\lr5 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|LOOP_START\lPHI: r0 r1 r5 \l  PHI: (r0v1 'bestFormatSupportLevel' int) = (r0v0 'bestFormatSupportLevel' int), (r0v2 'bestFormatSupportLevel' int) binds: [B:0:0x0000, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 'bestRendererIndex' int) = (r1v0 'bestRendererIndex' int), (r1v2 'bestRendererIndex' int) binds: [B:0:0x0000, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 'rendererIndex' int) = (r5v0 'rendererIndex' int), (r5v2 'rendererIndex' int) binds: [B:0:0x0000, B:12:0x0023] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:12:0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r5 \>= r8.length) goto L_0x0026\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|r4 = r8[r5]\lr6 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|LOOP_START\lPHI: r0 r1 r6 \l  PHI: (r0v2 'bestFormatSupportLevel' int) = (r0v1 'bestFormatSupportLevel' int), (r0v3 'bestFormatSupportLevel' int) binds: [B:3:0x0006, B:11:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 'bestRendererIndex' int) = (r1v1 'bestRendererIndex' int), (r1v3 'bestRendererIndex' int) binds: [B:3:0x0006, B:11:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'trackIndex' int) = (r6v0 'trackIndex' int), (r6v2 'trackIndex' int) binds: [B:3:0x0006, B:11:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:4:0x0009\-\>B:11:0x0020\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r6 \>= r9.length) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|r3 = r4.supportsFormat(r9.getFormat(r6)) & 3\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|if (r3 \<= r0) goto L_0x0020\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|r1 = r5\lr0 = r3\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|if (r0 != 3) goto L_0x0020\l}"];
Node_10 [shape=record,label="{10\:\ 0x001e}"];
Node_11 [shape=record,label="{11\:\ 0x0020|LOOP_END\lPHI: r0 r1 \l  PHI: (r0v3 'bestFormatSupportLevel' int) = (r0v2 'bestFormatSupportLevel' int), (r0v4 'bestFormatSupportLevel' int) binds: [B:17:0x0020, B:18:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v3 'bestRendererIndex' int) = (r1v2 'bestRendererIndex' int), (r1v4 'bestRendererIndex' int) binds: [B:17:0x0020, B:18:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:4:0x0009\-\>B:11:0x0020\l|int r6 = r6 + 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:12:0x0023\l|int r5 = r5 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026}"];
Node_14 [shape=record,label="{14\:\ 0x0026|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0023|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0020|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0020|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r1\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.trackselection.MappingTrackSelector.findRenderer((r8v0 'rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'group' com.google.android.exoplayer2.source.TrackGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_15[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_19;
Node_11 -> Node_4;
Node_12 -> Node_1;
Node_13 -> Node_20;
Node_14 -> Node_13;
Node_15 -> Node_10;
Node_16 -> Node_12;
Node_17 -> Node_11;
Node_18 -> Node_11;
}

