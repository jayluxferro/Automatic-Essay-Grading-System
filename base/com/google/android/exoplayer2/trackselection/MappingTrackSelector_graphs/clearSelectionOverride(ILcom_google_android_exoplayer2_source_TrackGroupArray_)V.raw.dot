digraph "CFG forcom.google.android.exoplayer2.trackselection.MappingTrackSelector.clearSelectionOverride(ILcom\/google\/android\/exoplayer2\/source\/TrackGroupArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:android.util.SparseArray\<java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>\>) = \l  (r2 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector)\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.selectionOverrides android.util.SparseArray \l0x0002: INVOKE  (r0 I:java.lang.Object) = \l  (r1 I:android.util.SparseArray)\l  (r3 I:int A[D('rendererIndex' int)])\l android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:java.util.Map) = (java.util.Map) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('overrides' java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r1 I:boolean) = \l  (r0 I:java.util.Map A[D('overrides' java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>)])\l  (r4 I:java.lang.Object A[D('groups' com.google.android.exoplayer2.source.TrackGroupArray)])\l java.util.Map.containsKey(java.lang.Object):boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: INVOKE  \l  (r0 I:java.util.Map A[D('overrides' java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>)])\l  (r4 I:java.lang.Object A[D('groups' com.google.android.exoplayer2.source.TrackGroupArray)])\l java.util.Map.remove(java.lang.Object):java.lang.Object type: INTERFACE \l0x0014: INVOKE  (r1 I:boolean) = \l  (r0 I:java.util.Map A[D('overrides' java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>)])\l java.util.Map.isEmpty():boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IGET  (r1 I:android.util.SparseArray\<java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>\>) = \l  (r2 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector)\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.selectionOverrides android.util.SparseArray \l0x001c: INVOKE  \l  (r1 I:android.util.SparseArray)\l  (r3 I:int A[D('rendererIndex' int)])\l android.util.SparseArray.remove(int):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: INVOKE  \l  (r2 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector)\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.invalidate():void type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public final void com.google.android.exoplayer2.trackselection.MappingTrackSelector.clearSelectionOverride((r2 'this' I:com.google.android.exoplayer2.trackselection.MappingTrackSelector A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('rendererIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.google.android.exoplayer2.source.TrackGroupArray A[D('groups' com.google.android.exoplayer2.source.TrackGroupArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0008\-0x0022: r0 'overrides' java.util.Map\<com.google.android.exoplayer2.source.TrackGroupArray, com.google.android.exoplayer2.trackselection.MappingTrackSelector$SelectionOverride\>\l  ?\-0x0022: r3 'rendererIndex' int\l  ?\-0x0022: r4 'groups' com.google.android.exoplayer2.source.TrackGroupArray\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_4;
}

