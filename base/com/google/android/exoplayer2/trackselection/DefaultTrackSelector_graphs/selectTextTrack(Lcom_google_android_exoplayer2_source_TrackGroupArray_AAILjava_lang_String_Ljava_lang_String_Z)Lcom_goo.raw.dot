digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectTextTrack(Lcom\/google\/android\/exoplayer2\/source\/TrackGroupArray;[[ILjava\/lang\/String;Ljava\/lang\/String;Z)Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r16 I:?[OBJECT, ARRAY] A[D('groups' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x0006: IGET  (r13 I:int) = (r0 I:com.google.android.exoplayer2.source.TrackGroupArray) com.google.android.exoplayer2.source.TrackGroupArray.length int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r2 I:?[int, byte, short, char] A[D('groupIndex' int)]) \>= (r13 I:?[int, byte, short, char])  \-\> B:37:0x0070 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r16 I:?[OBJECT, ARRAY] A[D('groups' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x000c: INVOKE  (r10 I:com.google.android.exoplayer2.source.TrackGroup) = \l  (r0 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r2 I:int A[D('groupIndex' int)])\l com.google.android.exoplayer2.source.TrackGroupArray.get(int):com.google.android.exoplayer2.source.TrackGroup type: VIRTUAL \l0x0010: AGET  (r9 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY][] A[D('formatSupport' int[][])])\l  (r2 I:?[int, short, byte, char] A[D('groupIndex' int)])\l \l0x0012: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IGET  (r13 I:int) = \l  (r10 I:com.google.android.exoplayer2.source.TrackGroup A[D('trackGroup' com.google.android.exoplayer2.source.TrackGroup)])\l com.google.android.exoplayer2.source.TrackGroup.length int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r11 I:?[int, byte, short, char] A[D('trackIndex' int)]) \>= (r13 I:?[int, byte, short, char])  \-\> B:36:0x006d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: AGET  (r13 I:?[int, float]) = \l  (r9 I:?[int, float][] A[D('trackFormatSupport' int[])])\l  (r11 I:?[int, short, byte, char] A[D('trackIndex' int)])\l \l0x0019: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('exceedRendererCapabilitiesIfNecessary' boolean)])\l \l0x001b: INVOKE  (r13 I:boolean) = (r13 I:int), (r0 I:boolean) com.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupported(int, boolean):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x004e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: INVOKE  (r1 I:com.google.android.exoplayer2.Format) = \l  (r10 I:com.google.android.exoplayer2.source.TrackGroup A[D('trackGroup' com.google.android.exoplayer2.source.TrackGroup)])\l  (r11 I:int A[D('trackIndex' int)])\l com.google.android.exoplayer2.source.TrackGroup.getFormat(int):com.google.android.exoplayer2.Format type: VIRTUAL \l0x0025: IGET  (r13 I:int) = \l  (r1 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.selectionFlags int \l0x0027: ARITH  (r13 I:?[int, boolean, short, byte, char]) = (r13 I:?[int, boolean, short, byte, char]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0051 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IGET  (r13 I:int) = \l  (r1 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.selectionFlags int \l0x002e: ARITH  (r13 I:?[int, boolean, short, byte, char]) = (r13 I:?[int, boolean, short, byte, char]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0053 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('preferredTextLanguage' java.lang.String)])\l \l0x0035: INVOKE  (r13 I:boolean) = \l  (r1 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l  (r0 I:java.lang.String)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.formatHasLanguage(com.google.android.exoplayer2.Format, java.lang.String):boolean type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x005b \l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|0x003b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isDefault' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0055 \l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|0x003d: CONST  (r12 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|0x003e: AGET  (r13 I:?[int, float]) = \l  (r9 I:?[int, float][] A[D('trackFormatSupport' int[])])\l  (r11 I:?[int, short, byte, char] A[D('trackIndex' int)])\l \l0x0040: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: INVOKE  (r13 I:boolean) = (r13 I:int), (r14 I:boolean) com.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupported(int, boolean):boolean type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0045|0x0045: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x007a \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: ARITH  (r8 I:int) = (r12 I:int) + (1000 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|0x0049: IF  (r8 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char] A[D('selectedTrackScore' int)])  \-\> B:23:0x004e \l}"];
Node_22 [shape=record,label="{22\:\ 0x004b|0x004b: MOVE  (r5 I:?[OBJECT, ARRAY] A[D('selectedGroup' com.google.android.exoplayer2.source.TrackGroup)]) = \l  (r10 I:?[OBJECT, ARRAY] A[D('trackGroup' com.google.android.exoplayer2.source.TrackGroup)])\l \l0x004c: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectedTrackIndex' int)]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackIndex' int)])\l \l0x004d: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectedTrackScore' int)]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectedTrackScore' int)])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|0x004e: ARITH  (r11 I:int A[D('trackIndex' int)]) = (r11 I:int A[D('trackIndex' int)]) + (1 int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|0x0051: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|0x0053: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x0055|0x0055: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isForced' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0059 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0057|0x0057: CONST  (r12 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0059|0x0059: CONST  (r12 I:?[int, float, short, byte, char] A[D('trackScore' int)]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x005b|0x005b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isDefault' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x005f \l}"];
Node_30 [shape=record,label="{30\:\ 0x005d|0x005d: CONST  (r12 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x005f|0x005f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isForced' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x004e \l}"];
Node_32 [shape=record,label="{32\:\ 0x0061|0x0061: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('preferredAudioLanguage' java.lang.String)])\l \l0x0063: INVOKE  (r13 I:boolean) = \l  (r1 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l  (r0 I:java.lang.String)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.formatHasLanguage(com.google.android.exoplayer2.Format, java.lang.String):boolean type: STATIC \l}"];
Node_33 [shape=record,label="{33\:\ 0x0067|0x0067: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x006b \l}"];
Node_34 [shape=record,label="{34\:\ 0x0069|0x0069: CONST  (r12 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x006b|0x006b: CONST  (r12 I:?[boolean, int, float, short, byte, char] A[D('trackScore' int)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x006d|0x006d: ARITH  (r2 I:int A[D('groupIndex' int)]) = (r2 I:int A[D('groupIndex' int)]) + (1 int) \l}"];
Node_37 [shape=record,label="{37\:\ 0x0070|0x0070: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selectedGroup' com.google.android.exoplayer2.source.TrackGroup)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0074 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0072|0x0072: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x0073|0x0073: RETURN  \l  (r13 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l \l}"];
Node_40 [shape=record,label="{40\:\ 0x0074|0x0074: NEW_INSTANCE  (r13 I:com.google.android.exoplayer2.trackselection.FixedTrackSelection) =  com.google.android.exoplayer2.trackselection.FixedTrackSelection \l0x0076: INVOKE  \l  (r13 I:com.google.android.exoplayer2.trackselection.FixedTrackSelection)\l  (r5 I:com.google.android.exoplayer2.source.TrackGroup A[D('selectedGroup' com.google.android.exoplayer2.source.TrackGroup)])\l  (r6 I:int A[D('selectedTrackIndex' int)])\l com.google.android.exoplayer2.trackselection.FixedTrackSelection.\<init\>(com.google.android.exoplayer2.source.TrackGroup, int):void type: DIRECT \l}"];
Node_41 [shape=record,label="{41\:\ 0x007a|0x007a: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.trackselection.TrackSelection com.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectTextTrack((r15 'this' I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector A[IMMUTABLE_TYPE, THIS]), (r16 I:com.google.android.exoplayer2.source.TrackGroupArray A[D('groups' com.google.android.exoplayer2.source.TrackGroupArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int[][] A[D('formatSupport' int[][]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:java.lang.String A[D('preferredTextLanguage' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:java.lang.String A[D('preferredAudioLanguage' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:boolean A[D('exceedRendererCapabilitiesIfNecessary' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0003\-0x004d: r7 'selectedTrackScore' int\l  0x0025\-0x004e: r1 'format' com.google.android.exoplayer2.Format\l  0x002c\-0x004e: r3 'isDefault' boolean\l  0x0033\-0x004e: r4 'isForced' boolean\l  0x004d\-0x004e: r8 'selectedTrackScore' int\l  0x0058\-0x0059: r12 'trackScore' int\l  0x005a\-0x005b: r12 'trackScore' int\l  0x005e\-0x005f: r12 'trackScore' int\l  0x006a\-0x006b: r12 'trackScore' int\l  0x0051\-0x006d: r1 'format' com.google.android.exoplayer2.Format\l  0x0053\-0x006d: r3 'isDefault' boolean\l  0x0055\-0x006d: r4 'isForced' boolean\l  0x0012\-0x0070: r9 'trackFormatSupport' int[]\l  0x0010\-0x0070: r10 'trackGroup' com.google.android.exoplayer2.source.TrackGroup\l  0x0013\-0x0070: r11 'trackIndex' int\l  0x007a\-0x007b: r1 'format' com.google.android.exoplayer2.Format\l  0x0004\-0x007b: r2 'groupIndex' int\l  0x007a\-0x007b: r3 'isDefault' boolean\l  0x007a\-0x007b: r4 'isForced' boolean\l  0x0001\-0x007b: r5 'selectedGroup' com.google.android.exoplayer2.source.TrackGroup\l  0x0002\-0x007b: r6 'selectedTrackIndex' int\l  0x004e\-0x007b: r7 'selectedTrackScore' int\l  0x007a\-0x007b: r9 'trackFormatSupport' int[]\l  0x007a\-0x007b: r10 'trackGroup' com.google.android.exoplayer2.source.TrackGroup\l  0x007a\-0x007b: r11 'trackIndex' int\l  ?\-0x007b: r16 'groups' com.google.android.exoplayer2.source.TrackGroupArray\l  ?\-0x007b: r17 'formatSupport' int[][]\l  ?\-0x007b: r18 'preferredTextLanguage' java.lang.String\l  ?\-0x007b: r19 'preferredAudioLanguage' java.lang.String\l  ?\-0x007b: r20 'exceedRendererCapabilitiesIfNecessary' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_37;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_36;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_24;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_25;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_29;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_26;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_41;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_4;
Node_24 -> Node_11;
Node_25 -> Node_14;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_18;
Node_28 -> Node_18;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_18;
Node_31 -> Node_23;
Node_31 -> Node_32[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_18;
Node_35 -> Node_18;
Node_36 -> Node_1;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_40;
Node_38 -> Node_39;
Node_40 -> Node_39;
Node_41 -> Node_21;
}

