digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.compareFormatValues(II)I" {
subgraph cluster_Region_52149339 {
label = "R(1:(2:(1:2)|(1:(2:(1:5)|(1:8)))))";
node [shape=record,color=blue];
subgraph cluster_Region_169944565 {
label = "R(2:(1:2)|(1:(2:(1:5)|(1:8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1228308078 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r1 == \-1) goto L_0x0003\l}"];
subgraph cluster_Region_1906737425 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return r2 == \-1 ? 0 : \-1\l}"];
}
}
subgraph cluster_Region_788599322 {
label = "R(1:(2:(1:5)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_739021954 {
label = "R(2:(1:5)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1446206051 {
label = "IF [B:4:0x0007] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0007|if (r2 == \-1) goto L_0x0009\l}"];
subgraph cluster_Region_332982205 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|SYNTHETIC\lRETURN\l|return 1\l}"];
}
}
subgraph cluster_Region_879666718 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return r1 \- r2\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0005|SYNTHETIC\lORIG_RETURN\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000b}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.trackselection.DefaultTrackSelector.compareFormatValues((r1v0 'first' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 'second' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_0 -> Node_1;
Node_6 -> Node_8;
}

