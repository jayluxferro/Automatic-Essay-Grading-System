digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupported(IZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char] A[D('formatSupport' int)]) & (3 ?[int, float, short, byte, char]) \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('maskedSupport' int)]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('allowExceedsCapabilities' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000c \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('maskedSupport' int)]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: RETURN  (r1 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{protected static boolean com.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupported((r2 I:int A[D('formatSupport' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[D('allowExceedsCapabilities' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0002\-0x000d: r0 'maskedSupport' int\l  ?\-0x000d: r2 'formatSupport' int\l  ?\-0x000d: r3 'allowExceedsCapabilities' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_6;
}

