digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectAdaptiveVideoTrack(Lcom\/google\/android\/exoplayer2\/RendererCapabilities;Lcom\/google\/android\/exoplayer2\/source\/TrackGroupArray;[[IIIIZZIIZLcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection$Factory;)Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r19 == false) goto L_0x0033\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|r4 = 12\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|PHI: r4 \l  PHI: (r4v1 'requiredAdaptiveSupport' int) = (r4v0 'requiredAdaptiveSupport' int), (r4v2 'requiredAdaptiveSupport' int) binds: [B:12:0x0033, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l|if (r20 == false) goto L_0x0036\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if ((r13.supportsMixedMimeTypeAdaptation() & r4) == 0) goto L_0x0036\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|r3 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|PHI: r3 \l  PHI: (r3v1 'allowMixedMimeTypes' boolean) = (r3v0 'allowMixedMimeTypes' boolean), (r3v2 'allowMixedMimeTypes' boolean) binds: [B:13:0x0036, B:5:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|r12 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|LOOP_START\lPHI: r12 \l  PHI: (r12v1 'i' int) = (r12v0 'i' int), (r12v2 'i' int) binds: [B:6:0x000e, B:14:0x0038] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x000f\-\>B:14:0x0038\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|if (r12 \>= r14.length) goto L_0x003b\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|com.google.android.exoplayer2.source.TrackGroup r1 = r14.get(r12)\lint[] r11 = getAdaptiveVideoTracksForGroup(r1, r15[r12], r3, r4, r16, r17, r18, r21, r22, r23)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|if (r11.length \<= 0) goto L_0x0038\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c}"];
Node_12 [shape=record,label="{12\:\ 0x0033|r4 = 8\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|r3 = false\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|LOOP_END\lLOOP:0: B:7:0x000f\-\>B:14:0x0038\l|int r12 = r12 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|SYNTHETIC\lRETURN\l|return null\l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x002c|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r24.createTrackSelection(r1, r11)\l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.trackselection.TrackSelection com.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectAdaptiveVideoTrack((r13v0 'rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'groups' com.google.android.exoplayer2.source.TrackGroupArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'formatSupport' int[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'maxVideoWidth' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 'maxVideoHeight' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'maxVideoBitrate' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 'allowNonSeamlessAdaptiveness' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 'allowMixedMimeAdaptiveness' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'viewportWidth' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'viewportHeight' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'orientationMayChange' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'adaptiveTrackSelectionFactory' com.google.android.exoplayer2.trackselection.TrackSelection$Factory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_12;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_14;
Node_10 -> Node_17[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_2;
Node_13 -> Node_6;
Node_14 -> Node_7;
Node_16 -> Node_15;
Node_17 -> Node_11;
}

