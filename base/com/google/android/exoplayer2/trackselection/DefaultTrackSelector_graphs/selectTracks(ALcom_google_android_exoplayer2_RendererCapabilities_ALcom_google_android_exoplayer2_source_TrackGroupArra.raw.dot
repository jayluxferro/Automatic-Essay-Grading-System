digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectTracks([Lcom\/google\/android\/exoplayer2\/RendererCapabilities;[Lcom\/google\/android\/exoplayer2\/source\/TrackGroupArray;[[[I)[Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l \l0x0002: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0003: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rendererCount' int)])\l \l0x0007: NEW_ARRAY  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelection[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.trackselection.TrackSelection[] \l0x0009: MOVE  (r20 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x000b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x000d: IGET  (r2 I:java.util.concurrent.atomic.AtomicReference\<com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters\>) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.paramsReference java.util.concurrent.atomic.AtomicReference \l0x000f: INVOKE  (r18 I:java.lang.Object) = (r2 I:java.util.concurrent.atomic.AtomicReference) java.util.concurrent.atomic.AtomicReference.get():java.lang.Object type: VIRTUAL \l0x0013: CHECK_CAST  (r18 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters) = (com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters) (r18 I:?[OBJECT, ARRAY]) \l0x0015: CONST  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: CONST  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l0x001d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rendererCount' int)])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x001f|0x001f: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:16:0x007f \l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|0x0021: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0022: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY][] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0024: INVOKE  (r3 I:int) = (r3 I:com.google.android.exoplayer2.RendererCapabilities) com.google.android.exoplayer2.RendererCapabilities.getTrackType():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0077 \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: IF  (r24 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selectedVideoTracks' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x006e \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY][] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x002e: AGET  (r4 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0030: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY][] A[D('rendererFormatSupports' int[][][])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0032: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x0034: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.maxVideoWidth int \l0x0036: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x0038: IGET  (r7 I:int) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.maxVideoHeight int \l0x003a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x003c: IGET  (r8 I:int) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.maxVideoBitrate int \l0x003e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x0040: IGET  (r9 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.allowNonSeamlessAdaptiveness boolean \l0x0042: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x0044: IGET  (r10 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.allowMixedMimeAdaptiveness boolean \l0x0046: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x0048: IGET  (r11 I:int) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.viewportWidth int \l0x004a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x004c: IGET  (r12 I:int) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.viewportHeight int \l0x004e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x0050: IGET  (r13 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.orientationMayChange boolean \l0x0052: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0054: IGET  (r14 I:com.google.android.exoplayer2.trackselection.TrackSelection$Factory) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.adaptiveTrackSelectionFactory com.google.android.exoplayer2.trackselection.TrackSelection$Factory \l0x0056: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x0058: IGET  (r15 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.exceedVideoConstraintsIfNecessary boolean \l0x005a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x005c: IGET  (r0 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.exceedRendererCapabilitiesIfNecessary boolean \l0x005e: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0060: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0062: INVOKE  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r2 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector)\l  (r3 I:com.google.android.exoplayer2.RendererCapabilities)\l  (r4 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r5 I:int[][])\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:boolean)\l  (r10 I:boolean)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:boolean)\l  (r14 I:com.google.android.exoplayer2.trackselection.TrackSelection$Factory)\l  (r15 I:boolean)\l  (r16 I:boolean)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectVideoTrack(com.google.android.exoplayer2.RendererCapabilities, com.google.android.exoplayer2.source.TrackGroupArray, int[][], int, int, int, boolean, boolean, int, int, boolean, com.google.android.exoplayer2.trackselection.TrackSelection$Factory, boolean, boolean):com.google.android.exoplayer2.trackselection.TrackSelection type: VIRTUAL \l0x0066: APUT  \l  (r20 I:?[OBJECT, ARRAY][] A[D('rendererTrackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0068: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY][] A[D('rendererTrackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x006a|0x006a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x007a \l}"];
Node_8 [shape=record,label="{8\:\ 0x006c|0x006c: CONST  (r24 I:?[boolean, int, float, short, byte, char] A[D('selectedVideoTracks' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x006e|0x006e: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0070: IGET  (r2 I:int) = (r2 I:com.google.android.exoplayer2.source.TrackGroupArray) com.google.android.exoplayer2.source.TrackGroupArray.length int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0072|0x0072: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x007d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0074|0x0074: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0075|0x0075: ARITH  (r21 I:?[int, boolean, short, byte, char] A[D('seenVideoRendererWithMappedTracks' boolean)]) = (r21 I:?[int, boolean, short, byte, char] A[D('seenVideoRendererWithMappedTracks' boolean)]) \| (r2 I:?[int, boolean, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0077|0x0077: ARITH  (r17 I:int A[D('i' int)]) = (r17 I:int A[D('i' int)]) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x007a|0x007a: CONST  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectedVideoTracks' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x007d|0x007d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x007f|0x007f: CONST  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0081: CONST  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0083: CONST  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0085|0x0085: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)])\l \l0x0087: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rendererCount' int)])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0089|0x0089: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:39:0x00fd \l}"];
Node_19 [shape=record,label="{19\:\ 0x008b|0x008b: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY][] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x008d: INVOKE  (r2 I:int) = (r2 I:com.google.android.exoplayer2.RendererCapabilities) com.google.android.exoplayer2.RendererCapabilities.getTrackType():int type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x0091|0x0091: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3] t:[0x00ad, 0x00aa, 0x00d9] \l}"];
Node_21 [shape=record,label="{21\:\ 0x0094|0x0094: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY][] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0096: INVOKE  (r2 I:int) = (r2 I:com.google.android.exoplayer2.RendererCapabilities) com.google.android.exoplayer2.RendererCapabilities.getTrackType():int type: INTERFACE \l0x009a: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x009c: AGET  (r4 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY][] A[D('rendererFormatSupports' int[][][])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x009e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x00a0: IGET  (r5 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.exceedRendererCapabilitiesIfNecessary boolean \l0x00a2: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x00a4: INVOKE  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector)\l  (r2 I:int)\l  (r3 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r4 I:int[][])\l  (r5 I:boolean)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectOtherTrack(int, com.google.android.exoplayer2.source.TrackGroupArray, int[][], boolean):com.google.android.exoplayer2.trackselection.TrackSelection type: VIRTUAL \l0x00a8: APUT  \l  (r20 I:?[OBJECT, ARRAY][] A[D('rendererTrackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l  (r2 I:?[OBJECT, ARRAY])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x00aa|0x00aa: ARITH  (r17 I:int A[D('i' int)]) = (r17 I:int A[D('i' int)]) + (1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00ad|0x00ad: IF  (r22 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selectedAudioTracks' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00aa \l}"];
Node_24 [shape=record,label="{24\:\ 0x00af|0x00af: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x00b1: AGET  (r4 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY][] A[D('rendererFormatSupports' int[][][])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x00b3: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x00b5: IGET  (r5 I:java.lang.String) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.preferredAudioLanguage java.lang.String \l0x00b7: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x00b9: IGET  (r6 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.exceedRendererCapabilitiesIfNecessary boolean \l0x00bb: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x00bd: IGET  (r7 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.allowMixedMimeAdaptiveness boolean \l}"];
Node_25 [shape=record,label="{25\:\ 0x00bf|0x00bf: IF  (r21 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('seenVideoRendererWithMappedTracks' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00d1 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00c1|0x00c1: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x00c2|0x00c2: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x00c4: INVOKE  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r2 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector)\l  (r3 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r4 I:int[][])\l  (r5 I:java.lang.String)\l  (r6 I:boolean)\l  (r7 I:boolean)\l  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelection$Factory)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectAudioTrack(com.google.android.exoplayer2.source.TrackGroupArray, int[][], java.lang.String, boolean, boolean, com.google.android.exoplayer2.trackselection.TrackSelection$Factory):com.google.android.exoplayer2.trackselection.TrackSelection type: VIRTUAL \l0x00c8: APUT  \l  (r20 I:?[OBJECT, ARRAY][] A[D('rendererTrackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x00ca: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY][] A[D('rendererTrackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x00cc|0x00cc: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00d6 \l}"];
Node_29 [shape=record,label="{29\:\ 0x00ce|0x00ce: CONST  (r22 I:?[boolean, int, float, short, byte, char] A[D('selectedAudioTracks' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x00d1|0x00d1: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x00d3: IGET  (r8 I:com.google.android.exoplayer2.trackselection.TrackSelection$Factory) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.adaptiveTrackSelectionFactory com.google.android.exoplayer2.trackselection.TrackSelection$Factory \l}"];
Node_32 [shape=record,label="{32\:\ 0x00d6|0x00d6: CONST  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectedAudioTracks' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x00d9|0x00d9: IF  (r23 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selectedTextTracks' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00aa \l}"];
Node_34 [shape=record,label="{34\:\ 0x00db|0x00db: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY][] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x00dd: AGET  (r4 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY][] A[D('rendererFormatSupports' int[][][])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l0x00df: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x00e1: IGET  (r5 I:java.lang.String) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.preferredTextLanguage java.lang.String \l0x00e3: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x00e5: IGET  (r6 I:java.lang.String) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.preferredAudioLanguage java.lang.String \l0x00e7: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)])\l \l0x00e9: IGET  (r7 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.exceedRendererCapabilitiesIfNecessary boolean \l0x00eb: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x00ed: INVOKE  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r2 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector)\l  (r3 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r4 I:int[][])\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r7 I:boolean)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectTextTrack(com.google.android.exoplayer2.source.TrackGroupArray, int[][], java.lang.String, java.lang.String, boolean):com.google.android.exoplayer2.trackselection.TrackSelection type: VIRTUAL \l0x00f1: APUT  \l  (r20 I:?[OBJECT, ARRAY][] A[D('rendererTrackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x00f3: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY][] A[D('rendererTrackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r17 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x00f5|0x00f5: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x00fa \l}"];
Node_36 [shape=record,label="{36\:\ 0x00f7|0x00f7: CONST  (r23 I:?[boolean, int, float, short, byte, char] A[D('selectedTextTracks' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_38 [shape=record,label="{38\:\ 0x00fa|0x00fa: CONST  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectedTextTracks' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x00fd|0x00fd: RETURN  \l  (r20 I:com.google.android.exoplayer2.trackselection.TrackSelection[] A[D('rendererTrackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.trackselection.TrackSelection[] com.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectTracks((r25 'this' I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector A[IMMUTABLE_TYPE, THIS]), (r26 I:com.google.android.exoplayer2.RendererCapabilities[] A[D('rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:com.google.android.exoplayer2.source.TrackGroupArray[] A[D('rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:int[][][] A[D('rendererFormatSupports' int[][][]), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001b\-0x0107: r17 'i' int\l  0x0015\-0x0107: r18 'params' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters\l  0x0005\-0x0107: r19 'rendererCount' int\l  0x000b\-0x0107: r20 'rendererTrackSelections' com.google.android.exoplayer2.trackselection.TrackSelection[]\l  0x0017\-0x0107: r21 'seenVideoRendererWithMappedTracks' boolean\l  0x0081\-0x0107: r22 'selectedAudioTracks' boolean\l  0x0083\-0x0107: r23 'selectedTextTracks' boolean\l  0x0019\-0x0107: r24 'selectedVideoTracks' boolean\l  ?\-0x0107: r26 'rendererCapabilities' com.google.android.exoplayer2.RendererCapabilities[]\l  ?\-0x0107: r27 'rendererTrackGroupArrays' com.google.android.exoplayer2.source.TrackGroupArray[]\l  ?\-0x0107: r28 'rendererFormatSupports' int[][][]\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_14 -> Node_9;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_39;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_20 -> Node_23;
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_17;
Node_23 -> Node_22;
Node_23 -> Node_24[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_22;
Node_31 -> Node_27;
Node_32 -> Node_22;
Node_33 -> Node_22;
Node_33 -> Node_34[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_38;
Node_36 -> Node_22;
Node_38 -> Node_22;
}

