digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.getViewportFilteredTrackIndices(Lcom\/google\/android\/exoplayer2\/source\/TrackGroup;IIZ)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r10 I:?[int, float, short, byte, char]) = \l  (1065017672(0x3f7ae148, float:0.98) ?[int, float, short, byte, char])\l \l0x0003: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l0x0006: NEW_INSTANCE  (r5 I:java.util.ArrayList) =  java.util.ArrayList \l0x0008: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l com.google.android.exoplayer2.source.TrackGroup.length int \l0x000a: INVOKE  (r5 I:java.util.ArrayList), (r7 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x000d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l com.google.android.exoplayer2.source.TrackGroup.length int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r7 I:?[int, byte, short, char])  \-\> B:4:0x001c \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r7 I:java.lang.Integer) = (r1 I:int A[D('i' int)]) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0016: INVOKE  \l  (r5 I:java.util.ArrayList A[D('selectedTrackIndices' java.util.ArrayList\<java.lang.Integer\>)])\l  (r7 I:java.lang.Object)\l java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0019: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('viewportWidth' int)]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0020 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('viewportHeight' int)]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0021 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: RETURN  \l  (r5 I:java.util.List\<java.lang.Integer\> A[D('selectedTrackIndices' java.util.ArrayList\<java.lang.Integer\>)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l0x0024: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: IGET  (r7 I:int) = \l  (r11 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l com.google.android.exoplayer2.source.TrackGroup.length int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r7 I:?[int, byte, short, char])  \-\> B:21:0x005b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: INVOKE  (r0 I:com.google.android.exoplayer2.Format) = \l  (r11 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l  (r1 I:int A[D('i' int)])\l com.google.android.exoplayer2.source.TrackGroup.getFormat(int):com.google.android.exoplayer2.Format type: VIRTUAL \l0x002d: IGET  (r7 I:int) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.width int \l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|0x002f: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x0058 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: IGET  (r7 I:int) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.height int \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: IF  (r7 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x0058 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|0x0035: IGET  (r7 I:int) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.width int \l0x0037: IGET  (r8 I:int) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.height int \l0x0039: INVOKE  (r3 I:android.graphics.Point) = \l  (r14 I:boolean A[D('orientationMayChange' boolean)])\l  (r12 I:int A[D('viewportWidth' int)])\l  (r13 I:int A[D('viewportHeight' int)])\l  (r7 I:int)\l  (r8 I:int)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.getMaxVideoSizeInViewport(boolean, int, int, int, int):android.graphics.Point type: STATIC \l0x003d: IGET  (r7 I:int) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.width int \l0x003f: IGET  (r8 I:int) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.height int \l0x0041: ARITH  (r6 I:int) = (r7 I:int) * (r8 I:int) \l0x0043: IGET  (r7 I:int) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.width int \l0x0045: IGET  (r8 I:int) = \l  (r3 I:android.graphics.Point A[D('maxVideoSizeInViewport' android.graphics.Point)])\l android.graphics.Point.x int \l0x0047: CAST  (r8 I:float) = (float) (r8 I:int) \l0x0048: ARITH  (r8 I:float) = (r8 I:float) * (r10 I:float) \l0x0049: CAST  (r8 I:int) = (int) (r8 I:float) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: IF  (r7 I:?[int, byte, short, char]) \< (r8 I:?[int, byte, short, char])  \-\> B:20:0x0058 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|0x004c: IGET  (r7 I:int) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.height int \l0x004e: IGET  (r8 I:int) = \l  (r3 I:android.graphics.Point A[D('maxVideoSizeInViewport' android.graphics.Point)])\l android.graphics.Point.y int \l0x0050: CAST  (r8 I:float) = (float) (r8 I:int) \l0x0051: ARITH  (r8 I:float) = (r8 I:float) * (r10 I:float) \l0x0052: CAST  (r8 I:int) = (int) (r8 I:float) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|0x0053: IF  (r7 I:?[int, byte, short, char]) \< (r8 I:?[int, byte, short, char])  \-\> B:20:0x0058 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0055|0x0055: IF  (r6 I:?[int, byte, short, char] A[D('videoPixels' int)]) \>= (r2 I:?[int, byte, short, char] A[D('maxVideoPixelsToRetain' int)])  \-\> B:20:0x0058 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|0x0057: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxVideoPixelsToRetain' int)]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('videoPixels' int)])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0058|0x0058: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x005b|0x005b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('maxVideoPixelsToRetain' int)]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0020 \l}"];
Node_22 [shape=record,label="{22\:\ 0x005d|0x005d: INVOKE  (r7 I:int) = \l  (r5 I:java.util.ArrayList A[D('selectedTrackIndices' java.util.ArrayList\<java.lang.Integer\>)])\l java.util.ArrayList.size():int type: VIRTUAL \l0x0061: ARITH  (r1 I:int A[D('i' int)]) = (r7 I:int) + (\-1 int) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0063|0x0063: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \< (0 ?[int, byte, short, char])  \-\> B:6:0x0020 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0065|0x0065: INVOKE  (r7 I:java.lang.Object) = \l  (r5 I:java.util.ArrayList A[D('selectedTrackIndices' java.util.ArrayList\<java.lang.Integer\>)])\l  (r1 I:int A[D('i' int)])\l java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0069: CHECK_CAST  (r7 I:java.lang.Integer) = (java.lang.Integer) (r7 I:?[OBJECT, ARRAY]) \l0x006b: INVOKE  (r7 I:int) = (r7 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x006f: INVOKE  (r0 I:com.google.android.exoplayer2.Format) = \l  (r11 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l  (r7 I:int)\l com.google.android.exoplayer2.source.TrackGroup.getFormat(int):com.google.android.exoplayer2.Format type: VIRTUAL \l0x0073: INVOKE  (r4 I:int) = \l  (r0 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.getPixelCount():int type: VIRTUAL \l0x0077: CONST  (r7 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0078|0x0078: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pixelCount' int)]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x007c \l}"];
Node_26 [shape=record,label="{26\:\ 0x007a|0x007a: IF  (r4 I:?[int, byte, short, char] A[D('pixelCount' int)]) \<= (r2 I:?[int, byte, short, char] A[D('maxVideoPixelsToRetain' int)])  \-\> B:28:0x007f \l}"];
Node_27 [shape=record,label="{27\:\ 0x007c|0x007c: INVOKE  \l  (r5 I:java.util.ArrayList A[D('selectedTrackIndices' java.util.ArrayList\<java.lang.Integer\>)])\l  (r1 I:int A[D('i' int)])\l java.util.ArrayList.remove(int):java.lang.Object type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x007f|0x007f: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (\-1 int) \l}"];
MethodNode[shape=record,label="{private static java.util.List\<java.lang.Integer\> com.google.android.exoplayer2.trackselection.DefaultTrackSelector.getViewportFilteredTrackIndices((r11 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('viewportWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('viewportHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:boolean A[D('orientationMayChange' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x003d\-0x0058: r3 'maxVideoSizeInViewport' android.graphics.Point\l  0x0043\-0x0058: r6 'videoPixels' int\l  0x002d\-0x005b: r0 'format' com.google.android.exoplayer2.Format\l  0x0073\-0x0081: r0 'format' com.google.android.exoplayer2.Format\l  0x000e\-0x0081: r1 'i' int\l  0x0024\-0x0081: r2 'maxVideoPixelsToRetain' int\l  0x0077\-0x0081: r4 'pixelCount' int\l  0x000d\-0x0081: r5 'selectedTrackIndices' java.util.ArrayList\<java.lang.Integer\>\l  ?\-0x0081: r11 'group' com.google.android.exoplayer2.source.TrackGroup\l  ?\-0x0081: r12 'viewportWidth' int\l  ?\-0x0081: r13 'viewportHeight' int\l  ?\-0x0081: r14 'orientationMayChange' boolean\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/android\/exoplayer2\/source\/TrackGroup;, IIZ), Ljava\/util\/List, \<, Ljava\/lang\/Integer;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_21;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_8;
Node_21 -> Node_6;
Node_21 -> Node_22[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_6;
Node_23 -> Node_24[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_23;
}

