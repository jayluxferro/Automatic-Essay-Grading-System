digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.getAudioTrackScore(ILjava\/lang\/String;Lcom\/google\/android\/exoplayer2\/Format;)I" {
subgraph cluster_Region_1386072563 {
label = "R(3:(1:2)(1:10)|(1:(1:6)(1:11))(1:(1:13)(1:14))|(2:(1:15)|(1:16))) | DECL_VAR: boolean isDefault, int trackScore\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_215009874 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: R(1:10)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if ((r6.selectionFlags & 1) != 0) goto L_0x0007\l}"];
subgraph cluster_Region_1856573834 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|r0 = true\l}"];
}
subgraph cluster_Region_453174486 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001a|r0 = false\l}"];
}
}
subgraph cluster_IfRegion_1837738025 {
label = "IF [B:4:0x000c] THEN: R(1:(1:6)(1:11)) ELSE: R(1:(1:13)(1:14))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|if (formatHasLanguage(r6, r5) == true) goto L_0x000e\l}"];
subgraph cluster_Region_818178915 {
label = "R(1:(1:6)(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_212528857 {
label = "IF [B:5:0x000e] THEN: R(1:6) ELSE: R(1:11)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r0 == true) goto L_0x0010\l}"];
subgraph cluster_Region_1847516362 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0010|r1 = 4\l}"];
}
subgraph cluster_Region_1209901314 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001c|r1 = 3\l}"];
}
}
}
subgraph cluster_Region_102901572 {
label = "R(1:(1:13)(1:14)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_642391881 {
label = "IF [B:12:0x001e] THEN: R(1:13) ELSE: R(1:14) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x001e|if (r0 == true) goto L_0x0020\l}"];
subgraph cluster_Region_1144375558 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0020|r1 = 2\l}"];
}
subgraph cluster_Region_1809083060 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0022|r1 = 1\l}"];
}
}
}
}
subgraph cluster_Region_902231952 {
label = "R(2:(1:15)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1858145239 {
label = "IF [B:8:0x0015] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0015|if (isSupported(r4, false) == true) goto L_0x0017\l}"];
subgraph cluster_Region_2035157324 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r1 + 1000\l}"];
}
}
subgraph cluster_Region_260628859 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008|PHI: r0 \l  PHI: (r0v1 'isDefault' boolean) = (r0v0 'isDefault' boolean), (r0v2 'isDefault' boolean) binds: [B:10:0x001a, B:2:0x0007] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0011|PHI: r1 \l  PHI: (r1v2 'trackScore' int) = (r1v0 'trackScore' int), (r1v1 'trackScore' int), (r1v4 'trackScore' int), (r1v5 'trackScore' int) binds: [B:14:0x0022, B:13:0x0020, B:11:0x001c, B:6:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0017}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.trackselection.DefaultTrackSelector.getAudioTrackScore((r4v0 'formatSupport' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'preferredLanguage' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'format' com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_10[style=dashed];
Node_2 -> Node_3;
Node_10 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_12[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_11[style=dashed];
Node_6 -> Node_7;
Node_11 -> Node_7;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_7;
Node_14 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_16[style=dashed];
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_15;
}

