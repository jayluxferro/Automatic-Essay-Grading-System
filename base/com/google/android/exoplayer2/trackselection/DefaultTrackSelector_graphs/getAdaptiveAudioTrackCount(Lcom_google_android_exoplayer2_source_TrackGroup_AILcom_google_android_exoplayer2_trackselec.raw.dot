digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.getAdaptiveAudioTrackCount(Lcom\/google\/android\/exoplayer2\/source\/TrackGroup;[ILcom\/google\/android\/exoplayer2\/trackselection\/DefaultTrackSelector$AudioConfigurationTuple;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l com.google.android.exoplayer2.source.TrackGroup.length int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r2 I:com.google.android.exoplayer2.Format) = \l  (r4 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup)])\l  (r1 I:int A[D('i' int)])\l com.google.android.exoplayer2.source.TrackGroup.getFormat(int):com.google.android.exoplayer2.Format type: VIRTUAL \l0x000a: AGET  (r3 I:?[int, float]) = \l  (r5 I:?[int, float][] A[D('formatSupport' int[])])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l \l0x000c: INVOKE  (r2 I:boolean) = \l  (r2 I:com.google.android.exoplayer2.Format)\l  (r3 I:int)\l  (r6 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple A[D('configuration' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple)])\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupportedAdaptiveAudioTrack(com.google.android.exoplayer2.Format, int, com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: ARITH  (r0 I:int A[D('count' int)]) = (r0 I:int A[D('count' int)]) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: RETURN  (r0 I:int A[D('count' int)]) \l}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.trackselection.DefaultTrackSelector.getAdaptiveAudioTrackCount((r4 I:com.google.android.exoplayer2.source.TrackGroup A[D('group' com.google.android.exoplayer2.source.TrackGroup), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int[] A[D('formatSupport' int[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple A[D('configuration' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0001\-0x0017: r0 'count' int\l  0x0002\-0x0017: r1 'i' int\l  ?\-0x0017: r4 'group' com.google.android.exoplayer2.source.TrackGroup\l  ?\-0x0017: r5 'formatSupport' int[]\l  ?\-0x0017: r6 'configuration' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

