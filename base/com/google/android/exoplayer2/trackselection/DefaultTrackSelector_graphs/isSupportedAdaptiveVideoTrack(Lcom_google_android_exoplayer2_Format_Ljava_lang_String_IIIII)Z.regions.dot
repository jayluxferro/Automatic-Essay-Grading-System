digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupportedAdaptiveVideoTrack(Lcom\/google\/android\/exoplayer2\/Format;Ljava\/lang\/String;IIIII)Z" {
subgraph cluster_Region_1818127569 {
label = "R(1:(2:(1:21)|(1:(2:(1:22)|(1:(2:(1:23)|(1:(2:(1:24)|(1:(2:(1:19)|(1:25)))))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_389788816 {
label = "R(2:(1:21)|(1:(2:(1:22)|(1:(2:(1:23)|(1:(2:(1:24)|(1:(2:(1:19)|(1:25))))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_342070368 {
label = "IF [B:1:0x0006, B:3:0x000a] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (isSupported(r5, false) == false) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|ADDED_TO_REGION\l|if ((r5 & r6) == 0) goto L_?\l}"];
subgraph cluster_Region_131084939 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_410517060 {
label = "R(1:(2:(1:22)|(1:(2:(1:23)|(1:(2:(1:24)|(1:(2:(1:19)|(1:25)))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_1377982190 {
label = "R(2:(1:22)|(1:(2:(1:23)|(1:(2:(1:24)|(1:(2:(1:19)|(1:25))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1525291102 {
label = "IF [B:4:0x000c, B:6:0x0014] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r4 != null) goto L_0x000e\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|ADDED_TO_REGION\l|if (com.google.android.exoplayer2.util.Util.areEqual(r3.sampleMimeType, r4) != true) goto L_?\l}"];
subgraph cluster_Region_1554525666 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_2072669677 {
label = "R(1:(2:(1:23)|(1:(2:(1:24)|(1:(2:(1:19)|(1:25)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_1004523860 {
label = "R(2:(1:23)|(1:(2:(1:24)|(1:(2:(1:19)|(1:25))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_830277273 {
label = "IF [B:8:0x0018, B:10:0x001c] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0018|if (r3.width != \-1) goto L_0x001a\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|ADDED_TO_REGION\l|if (r3.width \> r7) goto L_?\l}"];
subgraph cluster_Region_740817513 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_82448133 {
label = "R(1:(2:(1:24)|(1:(2:(1:19)|(1:25)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1106918333 {
label = "R(2:(1:24)|(1:(2:(1:19)|(1:25))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_409642197 {
label = "IF [B:12:0x0020, B:14:0x0024] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0020|if (r3.height != \-1) goto L_0x0022\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|ADDED_TO_REGION\l|if (r3.height \> r8) goto L_?\l}"];
subgraph cluster_Region_185458947 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1598768448 {
label = "R(1:(2:(1:19)|(1:25)))";
node [shape=record,color=blue];
subgraph cluster_Region_1333574343 {
label = "R(2:(1:19)|(1:25))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_41808881 {
label = "IF [B:16:0x0028, B:18:0x002c] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0028|if (r3.bitrate == \-1) goto L_0x002e\l}"];
Node_18 [shape=record,label="{18\:\ 0x002c|ADDED_TO_REGION\l|if (r3.bitrate \<= r9) goto L_0x002e\l}"];
subgraph cluster_Region_1721503556 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x002e|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1677211538 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0016}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001a}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001e}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0022}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0026}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x002a}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupportedAdaptiveVideoTrack((r3v0 'format' com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 'mimeType' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'formatSupport' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'requiredAdaptiveSupport' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'maxVideoWidth' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'maxVideoHeight' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'maxVideoBitrate' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_21;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_22;
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_23;
Node_12 -> Node_13;
Node_12 -> Node_15[style=dashed];
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_24;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_18 -> Node_19;
Node_18 -> Node_25[style=dashed];
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

