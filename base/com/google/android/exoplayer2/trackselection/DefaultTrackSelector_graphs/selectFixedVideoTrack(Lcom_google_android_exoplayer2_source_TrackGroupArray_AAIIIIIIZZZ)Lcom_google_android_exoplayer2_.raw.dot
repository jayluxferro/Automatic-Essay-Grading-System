digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectFixedVideoTrack(Lcom\/google\/android\/exoplayer2\/source\/TrackGroupArray;[[IIIIIIZZZ)Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST  (r11 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0005: CONST  (r13 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0006: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('groups' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x0009: IGET  (r0 I:int) = (r0 I:com.google.android.exoplayer2.source.TrackGroupArray) com.google.android.exoplayer2.source.TrackGroupArray.length int \l0x000b: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IF  (r7 I:?[int, byte, short, char] A[D('groupIndex' int)]) \>= (r0 I:?[int, byte, short, char])  \-\> B:54:0x00fe \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('groups' com.google.android.exoplayer2.source.TrackGroupArray)])\l \l0x0013: INVOKE  (r18 I:com.google.android.exoplayer2.source.TrackGroup) = \l  (r0 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r7 I:int A[D('groupIndex' int)])\l com.google.android.exoplayer2.source.TrackGroupArray.get(int):com.google.android.exoplayer2.source.TrackGroup type: VIRTUAL \l0x0017: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('trackGroup' com.google.android.exoplayer2.source.TrackGroup)])\l \l0x0019: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r28 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('viewportWidth' int)])\l \l0x001b: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r29 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('viewportHeight' int)])\l \l0x001d: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r30 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('orientationMayChange' boolean)])\l \l0x001f: INVOKE  (r15 I:java.util.List) = \l  (r0 I:com.google.android.exoplayer2.source.TrackGroup)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:boolean)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.getViewportFilteredTrackIndices(com.google.android.exoplayer2.source.TrackGroup, int, int, boolean):java.util.List type: STATIC \l0x0023: AGET  (r17 I:?[OBJECT, ARRAY]) = \l  (r24 I:?[OBJECT, ARRAY][] A[D('formatSupport' int[][])])\l  (r7 I:?[int, short, byte, char] A[D('groupIndex' int)])\l \l0x0025: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|0x0027: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('trackGroup' com.google.android.exoplayer2.source.TrackGroup)])\l \l0x0029: IGET  (r0 I:int) = (r0 I:com.google.android.exoplayer2.source.TrackGroup) com.google.android.exoplayer2.source.TrackGroup.length int \l0x002b: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002d: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackIndex' int)])\l \l0x002f: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:53:0x00fa \l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|0x0033: AGET  (r21 I:?[int, float]) = \l  (r17 I:?[int, float][] A[D('trackFormatSupport' int[])])\l  (r19 I:?[int, short, byte, char] A[D('trackIndex' int)])\l \l0x0035: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0037: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r32 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('exceedRendererCapabilitiesIfNecessary' boolean)])\l \l0x0039: INVOKE  (r21 I:boolean) = (r0 I:int), (r1 I:boolean) com.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupported(int, boolean):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|0x003d: IF  (r21 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0096 \l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|0x003f: INVOKE  (r5 I:com.google.android.exoplayer2.Format) = \l  (r18 I:com.google.android.exoplayer2.source.TrackGroup A[D('trackGroup' com.google.android.exoplayer2.source.TrackGroup)])\l  (r19 I:int A[D('trackIndex' int)])\l com.google.android.exoplayer2.source.TrackGroup.getFormat(int):com.google.android.exoplayer2.Format type: VIRTUAL \l0x0043: INVOKE  (r21 I:java.lang.Integer) = (r19 I:int A[D('trackIndex' int)]) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0047: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0049: INVOKE  (r21 I:boolean) = \l  (r15 I:java.util.List A[D('selectedTrackIndices' java.util.List\<java.lang.Integer\>)])\l  (r0 I:java.lang.Object)\l java.util.List.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x004d|0x004d: IF  (r21 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0099 \l}"];
Node_10 [shape=record,label="{10\:\ 0x004f|0x004f: IGET  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.width int \l0x0051: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0053: CONST  (r22 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0055: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0059|0x0059: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0065 \l}"];
Node_12 [shape=record,label="{12\:\ 0x005b|0x005b: IGET  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.width int \l0x005d: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0061: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxVideoWidth' int)])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0063|0x0063: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:26:0x0099 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0065|0x0065: IGET  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.height int \l0x0067: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0069: CONST  (r22 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x006b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x006f|0x006f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x007b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0071|0x0071: IGET  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.height int \l0x0073: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0075: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0077: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxVideoHeight' int)])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0079|0x0079: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:26:0x0099 \l}"];
Node_18 [shape=record,label="{18\:\ 0x007b|0x007b: IGET  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.bitrate int \l0x007d: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007f: CONST  (r22 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0081: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0083: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0085|0x0085: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0091 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0087|0x0087: IGET  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.bitrate int \l0x0089: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxVideoBitrate' int)])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x008f|0x008f: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:26:0x0099 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0091|0x0091: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0092|0x0092: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isWithinConstraints' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x009b \l}"];
Node_24 [shape=record,label="{24\:\ 0x0094|0x0094: IF  (r31 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('exceedConstraintsIfNecessary' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x009b \l}"];
Node_25 [shape=record,label="{25\:\ 0x0096|0x0096: ARITH  (r19 I:int A[D('trackIndex' int)]) = (r19 I:int A[D('trackIndex' int)]) + (1 int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0099|0x0099: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x009b|0x009b: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isWithinConstraints' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x00e2 \l}"];
Node_28 [shape=record,label="{28\:\ 0x009d|0x009d: CONST  (r20 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x009f|0x009f: AGET  (r21 I:?[int, float]) = \l  (r17 I:?[int, float][] A[D('trackFormatSupport' int[])])\l  (r19 I:?[int, short, byte, char] A[D('trackIndex' int)])\l \l0x00a1: CONST  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a3: INVOKE  (r8 I:boolean) = (r21 I:int), (r22 I:boolean) com.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupported(int, boolean):boolean type: STATIC \l}"];
Node_30 [shape=record,label="{30\:\ 0x00a7|0x00a7: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isWithinCapabilities' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00af \l}"];
Node_31 [shape=record,label="{31\:\ 0x00a9|0x00a9: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackScore' int)])\l \l0x00ab: ARITH  (r0 I:int) = (r0 I:int) + (1000 int) \l0x00ad: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackScore' int)]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x00af|0x00af: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackScore' int)])\l \l0x00b1: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectedTrackScore' int)])\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x00b3|0x00b3: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:47:0x00e5 \l}"];
Node_34 [shape=record,label="{34\:\ 0x00b5|0x00b5: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00b6|0x00b6: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackScore' int)])\l \l0x00b8: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectedTrackScore' int)])\l \l}"];
Node_36 [shape=record,label="{36\:\ 0x00ba|0x00ba: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x00d3 \l}"];
Node_37 [shape=record,label="{37\:\ 0x00bc|0x00bc: INVOKE  (r6 I:int) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.getPixelCount():int type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x00c0|0x00c0: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('formatPixelCount' int)]) == (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selectedPixelCount' int)])  \-\> B:48:0x00e7 \l}"];
Node_39 [shape=record,label="{39\:\ 0x00c2|0x00c2: INVOKE  (r21 I:int) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.getPixelCount():int type: VIRTUAL \l0x00c6: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c8: INVOKE  (r4 I:int) = (r0 I:int), (r13 I:int A[D('selectedPixelCount' int)]) com.google.android.exoplayer2.trackselection.DefaultTrackSelector.compareFormatValues(int, int):int type: STATIC \l}"];
Node_40 [shape=record,label="{40\:\ 0x00cc|0x00cc: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isWithinCapabilities' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00f4 \l}"];
Node_41 [shape=record,label="{41\:\ 0x00ce|0x00ce: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isWithinConstraints' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00f4 \l}"];
Node_42 [shape=record,label="{42\:\ 0x00d0|0x00d0: IF  (r4 I:?[int, byte, short, char] A[D('comparisonResult' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:49:0x00f2 \l}"];
Node_43 [shape=record,label="{43\:\ 0x00d2|0x00d2: CONST  (r10 I:?[boolean, int, float, short, byte, char] A[D('selectTrack' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x00d3|0x00d3: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selectTrack' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0096 \l}"];
Node_45 [shape=record,label="{45\:\ 0x00d5|0x00d5: MOVE  (r12 I:?[OBJECT, ARRAY] A[D('selectedGroup' com.google.android.exoplayer2.source.TrackGroup)]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('trackGroup' com.google.android.exoplayer2.source.TrackGroup)])\l \l0x00d7: MOVE  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectedTrackIndex' int)]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackIndex' int)])\l \l0x00d9: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectedTrackScore' int)]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackScore' int)])\l \l0x00db: IGET  (r11 I:int A[D('selectedBitrate' int)]) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.bitrate int \l0x00dd: INVOKE  (r13 I:int A[D('selectedPixelCount' int)]) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.getPixelCount():int type: VIRTUAL \l}"];
Node_46 [shape=record,label="{46\:\ 0x00e2|0x00e2: CONST  (r20 I:?[boolean, int, float, short, byte, char] A[D('trackScore' int)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x00e5|0x00e5: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_48 [shape=record,label="{48\:\ 0x00e7|0x00e7: IGET  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.bitrate int \l0x00e9: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00eb: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ed: INVOKE  (r4 I:int) = (r0 I:int), (r11 I:int A[D('selectedBitrate' int)]) com.google.android.exoplayer2.trackselection.DefaultTrackSelector.compareFormatValues(int, int):int type: STATIC \l}"];
Node_49 [shape=record,label="{49\:\ 0x00f2|0x00f2: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectTrack' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_50 [shape=record,label="{50\:\ 0x00f4|0x00f4: IF  (r4 I:?[int, byte, short, char] A[D('comparisonResult' int)]) \>= (0 ?[int, byte, short, char])  \-\> B:52:0x00f8 \l}"];
Node_51 [shape=record,label="{51\:\ 0x00f6|0x00f6: CONST  (r10 I:?[boolean, int, float, short, byte, char] A[D('selectTrack' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x00f8|0x00f8: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectTrack' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_53 [shape=record,label="{53\:\ 0x00fa|0x00fa: ARITH  (r7 I:int A[D('groupIndex' int)]) = (r7 I:int A[D('groupIndex' int)]) + (1 int) \l}"];
Node_54 [shape=record,label="{54\:\ 0x00fe|0x00fe: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selectedGroup' com.google.android.exoplayer2.source.TrackGroup)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x0103 \l}"];
Node_55 [shape=record,label="{55\:\ 0x0100|0x0100: CONST  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_56 [shape=record,label="{56\:\ 0x0102|0x0102: RETURN  \l  (r21 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l \l}"];
Node_57 [shape=record,label="{57\:\ 0x0103|0x0103: NEW_INSTANCE  (r21 I:com.google.android.exoplayer2.trackselection.FixedTrackSelection) =  com.google.android.exoplayer2.trackselection.FixedTrackSelection \l0x0105: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0107: INVOKE  \l  (r0 I:com.google.android.exoplayer2.trackselection.FixedTrackSelection)\l  (r12 I:com.google.android.exoplayer2.source.TrackGroup A[D('selectedGroup' com.google.android.exoplayer2.source.TrackGroup)])\l  (r14 I:int A[D('selectedTrackIndex' int)])\l com.google.android.exoplayer2.trackselection.FixedTrackSelection.\<init\>(com.google.android.exoplayer2.source.TrackGroup, int):void type: DIRECT \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.trackselection.TrackSelection com.google.android.exoplayer2.trackselection.DefaultTrackSelector.selectFixedVideoTrack((r23 I:com.google.android.exoplayer2.source.TrackGroupArray A[D('groups' com.google.android.exoplayer2.source.TrackGroupArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int[][] A[D('formatSupport' int[][]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:int A[D('maxVideoWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:int A[D('maxVideoHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:int A[D('maxVideoBitrate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:int A[D('viewportWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:int A[D('viewportHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30 I:boolean A[D('orientationMayChange' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:boolean A[D('exceedConstraintsIfNecessary' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:boolean A[D('exceedRendererCapabilitiesIfNecessary' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0043\-0x0096: r5 'format' com.google.android.exoplayer2.Format\l  0x0092\-0x0096: r9 'isWithinConstraints' boolean\l  0x00cc\-0x00d3: r4 'comparisonResult' int\l  0x00c0\-0x00d3: r6 'formatPixelCount' int\l  0x00a7\-0x00e2: r8 'isWithinCapabilities' boolean\l  0x00b6\-0x00e2: r10 'selectTrack' boolean\l  0x009f\-0x00e2: r20 'trackScore' int\l  0x00f1\-0x00fa: r4 'comparisonResult' int\l  0x0099\-0x00fa: r5 'format' com.google.android.exoplayer2.Format\l  0x00e7\-0x00fa: r6 'formatPixelCount' int\l  0x00e5\-0x00fa: r8 'isWithinCapabilities' boolean\l  0x009b\-0x00fa: r9 'isWithinConstraints' boolean\l  0x00e7\-0x00fa: r10 'selectTrack' boolean\l  0x00e5\-0x00fa: r20 'trackScore' int\l  0x0023\-0x00fe: r15 'selectedTrackIndices' java.util.List\<java.lang.Integer\>\l  0x0025\-0x00fe: r17 'trackFormatSupport' int[]\l  0x0017\-0x00fe: r18 'trackGroup' com.google.android.exoplayer2.source.TrackGroup\l  0x0027\-0x00fe: r19 'trackIndex' int\l  0x0007\-0x010a: r7 'groupIndex' int\l  0x0005\-0x010a: r11 'selectedBitrate' int\l  0x0001\-0x010a: r12 'selectedGroup' com.google.android.exoplayer2.source.TrackGroup\l  0x0006\-0x010a: r13 'selectedPixelCount' int\l  0x0002\-0x010a: r14 'selectedTrackIndex' int\l  0x0004\-0x010a: r16 'selectedTrackScore' int\l  ?\-0x010a: r23 'groups' com.google.android.exoplayer2.source.TrackGroupArray\l  ?\-0x010a: r24 'formatSupport' int[][]\l  ?\-0x010a: r25 'maxVideoWidth' int\l  ?\-0x010a: r26 'maxVideoHeight' int\l  ?\-0x010a: r27 'maxVideoBitrate' int\l  ?\-0x010a: r28 'viewportWidth' int\l  ?\-0x010a: r29 'viewportHeight' int\l  ?\-0x010a: r30 'orientationMayChange' boolean\l  ?\-0x010a: r31 'exceedConstraintsIfNecessary' boolean\l  ?\-0x010a: r32 'exceedRendererCapabilitiesIfNecessary' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_54;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_53;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_25;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_26;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_26;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_4;
Node_26 -> Node_23;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_46;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_47;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_44;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_48;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_50;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_50;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_49;
Node_43 -> Node_44;
Node_44 -> Node_25;
Node_44 -> Node_45[style=dashed];
Node_45 -> Node_25;
Node_46 -> Node_29;
Node_47 -> Node_35;
Node_48 -> Node_40;
Node_49 -> Node_44;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_44;
Node_52 -> Node_44;
Node_53 -> Node_1;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_57;
Node_55 -> Node_56;
Node_57 -> Node_56;
}

