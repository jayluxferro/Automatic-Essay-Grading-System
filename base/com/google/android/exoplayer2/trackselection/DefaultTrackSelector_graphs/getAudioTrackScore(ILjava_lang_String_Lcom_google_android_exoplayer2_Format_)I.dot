digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.getAudioTrackScore(ILjava\/lang\/String;Lcom\/google\/android\/exoplayer2\/Format;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if ((r6.selectionFlags & 1) == 0) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|PHI: r0 \l  PHI: (r0v1 'isDefault' boolean) = (r0v0 'isDefault' boolean), (r0v2 'isDefault' boolean) binds: [B:10:0x001a, B:2:0x0007] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (formatHasLanguage(r6, r5) == false) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r0 == false) goto L_0x001c\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|r1 = 4\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|PHI: r1 \l  PHI: (r1v2 'trackScore' int) = (r1v0 'trackScore' int), (r1v1 'trackScore' int), (r1v4 'trackScore' int), (r1v5 'trackScore' int) binds: [B:14:0x0022, B:13:0x0020, B:11:0x001c, B:6:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|if (isSupported(r4, false) == false) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017}"];
Node_10 [shape=record,label="{10\:\ 0x001a|r0 = false\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|r1 = 3\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|if (r0 == false) goto L_0x0022\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|r1 = 2\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|r1 = 1\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r1 + 1000\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.trackselection.DefaultTrackSelector.getAudioTrackScore((r4v0 'formatSupport' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 'preferredLanguage' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'format' com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_15;
Node_10 -> Node_3;
Node_11 -> Node_7;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_7;
Node_14 -> Node_7;
}

