digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupportedAdaptiveAudioTrack(Lcom\/google\/android\/exoplayer2\/Format;ILcom\/google\/android\/exoplayer2\/trackselection\/DefaultTrackSelector$AudioConfigurationTuple;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r1 I:boolean) = (r4 I:int A[D('formatSupport' int)]), (r0 I:boolean) com.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupported(int, boolean):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r1 I:int) = \l  (r3 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.channelCount int \l0x0009: IGET  (r2 I:int) = \l  (r5 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple A[D('configuration' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple)])\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioConfigurationTuple.channelCount int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r1 I:int) = \l  (r3 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleRate int \l0x000f: IGET  (r2 I:int) = \l  (r5 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple A[D('configuration' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple)])\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioConfigurationTuple.sampleRate int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r1 I:java.lang.String) = \l  (r5 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple A[D('configuration' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple)])\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioConfigurationTuple.mimeType java.lang.String \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IGET  (r1 I:java.lang.String) = \l  (r5 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple A[D('configuration' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple)])\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioConfigurationTuple.mimeType java.lang.String \l0x0019: IGET  (r2 I:java.lang.String) = \l  (r3 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x001b: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.CharSequence)\l  (r2 I:java.lang.CharSequence)\l android.text.TextUtils.equals(java.lang.CharSequence, java.lang.CharSequence):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean com.google.android.exoplayer2.trackselection.DefaultTrackSelector.isSupportedAdaptiveAudioTrack((r3 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('formatSupport' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple A[D('configuration' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0022: r3 'format' com.google.android.exoplayer2.Format\l  ?\-0x0022: r4 'formatSupport' int\l  ?\-0x0022: r5 'configuration' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$AudioConfigurationTuple\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
}

