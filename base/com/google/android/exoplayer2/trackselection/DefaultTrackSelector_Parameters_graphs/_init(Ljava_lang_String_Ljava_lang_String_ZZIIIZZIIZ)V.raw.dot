digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.\<init\>(Ljava\/lang\/String;Ljava\/lang\/String;ZZIIIZZIIZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:java.lang.String A[D('preferredAudioLanguage' java.lang.String)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.preferredAudioLanguage java.lang.String \l0x0005: IPUT  \l  (r2 I:java.lang.String A[D('preferredTextLanguage' java.lang.String)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.preferredTextLanguage java.lang.String \l0x0007: IPUT  \l  (r3 I:boolean A[D('allowMixedMimeAdaptiveness' boolean)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.allowMixedMimeAdaptiveness boolean \l0x0009: IPUT  \l  (r4 I:boolean A[D('allowNonSeamlessAdaptiveness' boolean)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.allowNonSeamlessAdaptiveness boolean \l0x000b: IPUT  \l  (r5 I:int A[D('maxVideoWidth' int)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.maxVideoWidth int \l0x000d: IPUT  \l  (r6 I:int A[D('maxVideoHeight' int)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.maxVideoHeight int \l0x000f: IPUT  \l  (r7 I:int A[D('maxVideoBitrate' int)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.maxVideoBitrate int \l0x0011: IPUT  \l  (r8 I:boolean A[D('exceedVideoConstraintsIfNecessary' boolean)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.exceedVideoConstraintsIfNecessary boolean \l0x0013: IPUT  \l  (r9 I:boolean A[D('exceedRendererCapabilitiesIfNecessary' boolean)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.exceedRendererCapabilitiesIfNecessary boolean \l0x0015: IPUT  \l  (r10 I:int A[D('viewportWidth' int)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.viewportWidth int \l0x0017: IPUT  \l  (r11 I:int A[D('viewportHeight' int)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.viewportHeight int \l0x0019: IPUT  \l  (r12 I:boolean A[D('orientationMayChange' boolean)])\l  (r0 I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters)\l com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.orientationMayChange boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.\<init\>((r0 'this' I:com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.String A[D('preferredAudioLanguage' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[D('preferredTextLanguage' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[D('allowMixedMimeAdaptiveness' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('allowNonSeamlessAdaptiveness' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[D('maxVideoWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('maxVideoHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[D('maxVideoBitrate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[D('exceedVideoConstraintsIfNecessary' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[D('exceedRendererCapabilitiesIfNecessary' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('viewportWidth' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('viewportHeight' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:boolean A[D('orientationMayChange' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001b: r1 'preferredAudioLanguage' java.lang.String\l  ?\-0x001b: r2 'preferredTextLanguage' java.lang.String\l  ?\-0x001b: r3 'allowMixedMimeAdaptiveness' boolean\l  ?\-0x001b: r4 'allowNonSeamlessAdaptiveness' boolean\l  ?\-0x001b: r5 'maxVideoWidth' int\l  ?\-0x001b: r6 'maxVideoHeight' int\l  ?\-0x001b: r7 'maxVideoBitrate' int\l  ?\-0x001b: r8 'exceedVideoConstraintsIfNecessary' boolean\l  ?\-0x001b: r9 'exceedRendererCapabilitiesIfNecessary' boolean\l  ?\-0x001b: r10 'viewportWidth' int\l  ?\-0x001b: r11 'viewportHeight' int\l  ?\-0x001b: r12 'orientationMayChange' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

