digraph "CFG forcom.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.withViewportSize(IIZ)Lcom\/google\/android\/exoplayer2\/trackselection\/DefaultTrackSelector$Parameters;" {
subgraph cluster_Region_1960810264 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return (r15 == r14.viewportWidth && r16 == r14.viewportHeight && r17 == r14.orientationMayChange) ? r14 : new com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters(r14.preferredAudioLanguage, r14.preferredTextLanguage, r14.allowMixedMimeAdaptiveness, r14.allowNonSeamlessAdaptiveness, r14.maxVideoWidth, r14.maxVideoHeight, r14.maxVideoBitrate, r14.exceedVideoConstraintsIfNecessary, r14.exceedRendererCapabilitiesIfNecessary, r15, r16, r17)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008|REMOVE\lADDED_TO_REGION\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000a}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e|REMOVE\lADDED_TO_REGION\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0011}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters.withViewportSize((r14v0 'this' com.google.android.exoplayer2.trackselection.DefaultTrackSelector$Parameters A[IMMUTABLE_TYPE, THIS]), (r15v0 'viewportWidth' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'viewportHeight' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 'orientationMayChange' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug info: failed to restart local var, previous not found, register: 14\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
}

