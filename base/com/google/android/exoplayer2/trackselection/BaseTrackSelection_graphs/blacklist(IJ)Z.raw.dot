digraph "CFG forcom.google.android.exoplayer2.trackselection.BaseTrackSelection.blacklist(IJ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r2 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC \l0x0006: INVOKE  (r0 I:boolean) = \l  (r10 I:com.google.android.exoplayer2.trackselection.BaseTrackSelection)\l  (r11 I:int A[D('index' int)])\l  (r2 I:long A[D('nowMs' long)])\l com.google.android.exoplayer2.trackselection.BaseTrackSelection.isBlacklisted(int, long):boolean type: VIRTUAL \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IGET  (r6 I:int) = \l  (r10 I:com.google.android.exoplayer2.trackselection.BaseTrackSelection)\l com.google.android.exoplayer2.trackselection.BaseTrackSelection.length int \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r6 I:?[int, byte, short, char])  \-\> B:10:0x001f \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canBlacklist' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) == (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)])  \-\> B:9:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: INVOKE  (r6 I:boolean) = \l  (r10 I:com.google.android.exoplayer2.trackselection.BaseTrackSelection)\l  (r1 I:int A[D('i' int)])\l  (r2 I:long A[D('nowMs' long)])\l com.google.android.exoplayer2.trackselection.BaseTrackSelection.isBlacklisted(int, long):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001d \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('canBlacklist' boolean)]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('canBlacklist' boolean)]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('canBlacklist' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0022 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: RETURN  (r5 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: IGET  (r5 I:long[]) = \l  (r10 I:com.google.android.exoplayer2.trackselection.BaseTrackSelection)\l com.google.android.exoplayer2.trackselection.BaseTrackSelection.blacklistUntilTimes long[] \l0x0024: IGET  (r6 I:long[]) = \l  (r10 I:com.google.android.exoplayer2.trackselection.BaseTrackSelection)\l com.google.android.exoplayer2.trackselection.BaseTrackSelection.blacklistUntilTimes long[] \l0x0026: AGET  (r6 I:?[long, double]) = \l  (r6 I:?[long, double][])\l  (r11 I:?[int, short, byte, char] A[D('index' int)])\l \l0x0028: ARITH  (r8 I:long) = (r2 I:long A[D('nowMs' long)]) + (r12 I:long A[D('blacklistDurationMs' long)]) \l0x002a: INVOKE  (r6 I:long) = (r6 I:long), (r8 I:long) java.lang.Math.max(long, long):long type: STATIC \l0x002e: APUT  \l  (r5 I:?[long, double][])\l  (r11 I:?[int, short, byte, char] A[D('index' int)])\l  (r6 I:?[long, double])\l \l0x0030: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public final boolean com.google.android.exoplayer2.trackselection.BaseTrackSelection.blacklist((r10 'this' I:com.google.android.exoplayer2.trackselection.BaseTrackSelection A[IMMUTABLE_TYPE, THIS]), (r11 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[D('blacklistDurationMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000a\-0x0031: r0 'canBlacklist' boolean\l  0x000b\-0x0031: r1 'i' int\l  0x0006\-0x0031: r2 'nowMs' long\l  ?\-0x0031: r11 'index' int\l  ?\-0x0031: r12 'blacklistDurationMs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_8;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_11;
}

