digraph "CFG forcom.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo.getAdaptiveSupport(IIZ)I" {
subgraph cluster_Region_1797077057 {
label = "R(3:0|(3:2|(1:7)(1:11)|8)|10) | DECL_VAR: int trackIndexCount\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r2 = r7.trackGroups[r8].get(r9).length\lint[] int[] r5 = new int[r2]\lint r1 = 0\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_763546830 {
label = "LOOP:0: (3:2|(1:7)(1:11)|8)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000f|LOOP_START\lPHI: r1 r4 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:0:0x0000, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'trackIndexCount' int) = (r4v0 'trackIndexCount' int), (r4v2 'trackIndexCount' int) binds: [B:0:0x0000, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000f\-\>B:8:0x0021\l|if (r1 \< r2) goto L_0x0011\l}"];
subgraph cluster_Region_1920427220 {
label = "R(3:2|(1:7)(1:11)|8)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0011|int int r0 = getTrackFormatSupport(r8, r9, r1)\l}"];
subgraph cluster_IfRegion_1266008988 {
label = "IF [B:3:0x0016, B:4:0x0018, B:6:0x001b] THEN: R(1:7) ELSE: R(1:11)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r0 == 3) goto L_0x001d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|ADDED_TO_REGION\l|if (r10 == true) goto L_0x001a\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|ADDED_TO_REGION\l|if (r0 == 2) goto L_0x001d\l}"];
subgraph cluster_Region_2034654811 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001d|int r3 = r4 + 1\lr5[r4] = r1\l}"];
}
subgraph cluster_Region_1881834987 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002e|r3 = r4\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0021|LOOP_END\lPHI: r3 \l  PHI: (r3v1 'trackIndexCount' int) = (r3v2 'trackIndexCount' int), (r3v3 'trackIndexCount' int) binds: [B:13:0x0021, B:14:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000f\-\>B:8:0x0021\l|r1++\lr4 = r3\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x002d|RETURN\l|return getAdaptiveSupport(r8, r9, java.util.Arrays.copyOf(r5, r4))\l}"];
}
Node_5 [shape=record,color=red,label="{5\:\ 0x001a}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0025}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0025|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0021|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0021|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo.getAdaptiveSupport((r7v0 'this' com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo A[IMMUTABLE_TYPE, THIS]), (r8v0 'rendererIndex' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'groupIndex' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'includeCapabilitiesExceededTracks' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_12[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_11[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_11[style=dashed];
Node_7 -> Node_13;
Node_11 -> Node_14;
Node_8 -> Node_1;
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_12 -> Node_9;
Node_13 -> Node_8;
Node_14 -> Node_8;
}

