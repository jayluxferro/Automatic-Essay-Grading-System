digraph "CFG forcom.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo.getTrackTypeRendererSupport(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r2 I:int) = \l  (r3 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo)\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo.length int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r2 I:int[]) = \l  (r3 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo)\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo.rendererTrackTypes int[] \l0x0008: AGET  (r2 I:?[int, float]) = \l  (r2 I:?[int, float][])\l  (r1 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('trackType' int)])  \-\> B:6:0x0014 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: INVOKE  (r2 I:int) = \l  (r3 I:com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo)\l  (r1 I:int A[D('i' int)])\l com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo.getRendererSupport(int):int type: VIRTUAL \l0x0010: INVOKE  (r0 I:int A[D('bestRendererSupport' int)]) = (r0 I:int A[D('bestRendererSupport' int)]), (r2 I:int) java.lang.Math.max(int, int):int type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: RETURN  (r0 I:int A[D('bestRendererSupport' int)]) \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo.getTrackTypeRendererSupport((r3 'this' I:com.google.android.exoplayer2.trackselection.MappingTrackSelector$MappedTrackInfo A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[D('trackType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0001\-0x0017: r0 'bestRendererSupport' int\l  0x0002\-0x0017: r1 'i' int\l  ?\-0x0017: r4 'trackType' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

