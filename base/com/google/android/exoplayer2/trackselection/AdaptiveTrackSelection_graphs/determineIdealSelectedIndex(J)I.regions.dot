digraph "CFG forcom.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.determineIdealSelectedIndex(J)I" {
subgraph cluster_Region_1940874404 {
label = "R(5:0|1|3|(2:(1:(2:(1:21)|(1:13)))(0)|14)|20)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long long r0 = r11.bandwidthMeter.getBitrateEstimate()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|long r2 = r0 == \-1 ? (long) r11.maxInitialBitrate : (long) (((float) r0) * r11.bandwidthFraction)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|PHI: r2 \l  PHI: (r2v1 'effectiveBitrate' long) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r6 = 0\lint r5 = 0\l}"];
subgraph cluster_LoopRegion_1130192601 {
label = "LOOP:0: (2:(1:(2:(1:21)|(1:13)))(0)|14)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|if (r5 \< r11.length) goto L_0x0015\l}"];
subgraph cluster_Region_1272940626 {
label = "R(2:(1:(2:(1:21)|(1:13)))(0)|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_734183075 {
label = "IF [B:7:0x0019, B:9:0x001f] THEN: R(1:(2:(1:21)|(1:13))) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|if (r12 == Long.MIN_VALUE) goto L_0x0021\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|ADDED_TO_REGION\l|if (isBlacklisted(r5, r12) == false) goto L_0x0021\l}"];
subgraph cluster_Region_1692284282 {
label = "R(1:(2:(1:21)|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_1990671919 {
label = "R(2:(1:21)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1022071512 {
label = "IF [B:11:0x002a] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002a|if (((long) getFormat(r5).bitrate) \<= r2) goto L_0x002c\l}"];
subgraph cluster_Region_1089770809 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return r5\l}"];
}
}
subgraph cluster_Region_1610705793 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0033|r6 = r5\l}"];
}
}
}
subgraph cluster_Region_322817679 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_14 [shape=record,label="{14\:\ 0x0034|LOOP_END\lPHI: r6 \l  PHI: (r6v2 'lowestBitrateNonBlacklistedIndex' int) = (r6v3 'lowestBitrateNonBlacklistedIndex' int), (r6v1 'lowestBitrateNonBlacklistedIndex' int) binds: [B:18:0x0034, B:19:0x0034] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0011\-\>B:14:0x0034\l|r5++\l}"];
}
}
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r6\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000c}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0011|LOOP_START\lPHI: r5 r6 \l  PHI: (r5v1 'i' int) = (r5v0 'i' int), (r5v3 'i' int) binds: [B:3:0x000f, B:14:0x0034] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 'lowestBitrateNonBlacklistedIndex' int) = (r6v0 'lowestBitrateNonBlacklistedIndex' int), (r6v2 'lowestBitrateNonBlacklistedIndex' int) binds: [B:3:0x000f, B:14:0x0034] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0011\-\>B:14:0x0034\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0015}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001b}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0021}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002d}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0037}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0037|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x002c|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0034|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0034|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.determineIdealSelectedIndex((r11v0 'this' com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection A[IMMUTABLE_TYPE, THIS]), (r12v0 'nowMs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_12;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_16[style=dashed];
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_9 -> Node_10;
Node_9 -> Node_19[style=dashed];
Node_11 -> Node_13[style=dashed];
Node_11 -> Node_17;
Node_13 -> Node_18;
Node_14 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_3;
Node_15 -> Node_20;
Node_16 -> Node_15;
Node_17 -> Node_21;
Node_18 -> Node_14;
Node_19 -> Node_14;
}

