digraph "CFG forcom.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.\<init\>(Lcom\/google\/android\/exoplayer2\/source\/TrackGroup;[ILcom\/google\/android\/exoplayer2\/upstream\/BandwidthMeter;IJJJF)V" {
subgraph cluster_Region_2084339224 {
label = "R(1:0)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r8, r9)\lr7.bandwidthMeter = r10\lr7.maxInitialBitrate = r11\lr7.minDurationForQualityIncreaseUs = r12 * 1000\lr7.maxDurationForQualityDecreaseUs = r14 * 1000\lr7.minDurationToRetainAfterDiscardUs = r16 * 1000\lr7.bandwidthFraction = r18\lr7.selectedIndex = determineIdealSelectedIndex(Long.MIN_VALUE)\lr7.reason = 1\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0024}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.\<init\>((r7v0 'this' com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection A[IMMUTABLE_TYPE, THIS]), (r8v0 'group' com.google.android.exoplayer2.source.TrackGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'tracks' int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'bandwidthMeter' com.google.android.exoplayer2.upstream.BandwidthMeter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 'maxInitialBitrate' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'minDurationForQualityIncreaseMs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'maxDurationForQualityDecreaseMs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 'minDurationToRetainAfterDiscardMs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 'bandwidthFraction' float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

