digraph "CFG forcom.google.android.exoplayer2.video.DummySurface.DummySurfaceThread.handleMessage(Landroid\/os\/Message;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: IGET  (r1 I:int) = (r5 I:android.os.Message A[D('msg' android.os.Message)]) android.os.Message.what int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3] t:[0x0007, 0x004a, 0x0050] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN  (r2 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|SYNTHETIC\lSplitter:B:3:0x0007\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0007\l|0x0007: IGET  (r1 I:int) = (r5 I:android.os.Message A[D('msg' android.os.Message)]) android.os.Message.arg1 int A[Catch:\{ RuntimeException \-\> 0x001a, Error \-\> 0x002d \}, TRY_ENTER]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0018 A[Catch:\{ RuntimeException \-\> 0x001a, Error \-\> 0x002d \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ RuntimeException \-\> 0x001a, Error \-\> 0x002d \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|0x000c: INVOKE  \l  (r4 I:com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread)\l  (r1 I:boolean)\l com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread.initInternal(boolean):void type: DIRECT A[Catch:\{ RuntimeException \-\> 0x001a, Error \-\> 0x002d \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|SYNTHETIC\lSplitter:B:9:0x0010\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0010\l|0x0010: INVOKE  (r4 I:java.lang.Object) java.lang.Object.notify():void type: VIRTUAL A[Catch:\{ all \-\> 0x0015 \}, TRY_ENTER]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|0x0013: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|0x0014: GOTO  \-\> 0x0006 A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0015|ExcHandler: all null\lSplitter:B:9:0x0010\l|0x0015: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0016|0x0016: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0017|0x0017: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0018|0x0018: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x001a|ExcHandler: RuntimeException null\lSplitter:B:3:0x0007\l|0x001a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x001b|0x001b: CONST_STR  (r1 I:java.lang.String) =  \"DummySurface\" \l0x001d: CONST_STR  (r3 I:java.lang.String) =  \"Failed to initialize dummy surface\" \l}"];
Node_19 [shape=record,label="{19\:\ 0x001f|SYNTHETIC\lSplitter:B:19:0x001f\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x001f\l|0x001f: INVOKE  \l  (r1 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.RuntimeException)])\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x0040 \}, TRY_ENTER]\l0x0022: IPUT  \l  (r0 I:java.lang.RuntimeException A[D('e' java.lang.RuntimeException)])\l  (r4 I:com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread)\l com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread.initException java.lang.RuntimeException A[Catch:\{ all \-\> 0x0040 \}, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0024|0x0024: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0025|SYNTHETIC\lSplitter:B:22:0x0025\l}"];
Node_23 [shape=record,label="{23\:\ ?|Splitter:B:22:0x0025\l|0x0025: INVOKE  (r4 I:java.lang.Object) java.lang.Object.notify():void type: VIRTUAL A[Catch:\{ all \-\> 0x002a \}, TRY_ENTER]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0028|0x0028: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0029|0x0029: GOTO  \-\> 0x0006 A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x002a|ExcHandler: all null\lSplitter:B:22:0x0025\l|0x002a: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x002b|0x002b: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x002c|0x002c: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x002d|ExcHandler: Error null\lSplitter:B:3:0x0007\l|0x002d: MOVE_EXCEPTION  (r0 I:?[OBJECT] A[D('e' java.lang.RuntimeException)]) =  \l}"];
Node_30 [shape=record,label="{30\:\ 0x002e|0x002e: CONST_STR  (r1 I:java.lang.String) =  \"DummySurface\" \l0x0030: CONST_STR  (r3 I:java.lang.String) =  \"Failed to initialize dummy surface\" \l}"];
Node_31 [shape=record,label="{31\:\ 0x0032|SYNTHETIC\lSplitter:B:31:0x0032\l}"];
Node_32 [shape=record,label="{32\:\ ?|Splitter:B:31:0x0032\l|0x0032: INVOKE  \l  (r1 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.Error)])\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x0040 \}, TRY_ENTER]\l0x0035: IPUT  \l  (r0 I:java.lang.Error A[D('e' java.lang.Error)])\l  (r4 I:com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread)\l com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread.initError java.lang.Error A[Catch:\{ all \-\> 0x0040 \}, TRY_LEAVE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0037|0x0037: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0038|SYNTHETIC\lSplitter:B:34:0x0038\l}"];
Node_35 [shape=record,label="{35\:\ ?|Splitter:B:34:0x0038\l|0x0038: INVOKE  (r4 I:java.lang.Object) java.lang.Object.notify():void type: VIRTUAL A[Catch:\{ all \-\> 0x003d \}, TRY_ENTER]\l}"];
Node_36 [shape=record,label="{36\:\ 0x003b|0x003b: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003d \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x003c|0x003c: GOTO  \-\> 0x0006 A[Catch:\{ all \-\> 0x003d \}]\l}"];
Node_38 [shape=record,label="{38\:\ 0x003d|ExcHandler: all null\lSplitter:B:34:0x0038\l|0x003d: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x003d \}]\l}"];
Node_39 [shape=record,label="{39\:\ 0x003e|0x003e: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003d \}, TRY_LEAVE]\l}"];
Node_40 [shape=record,label="{40\:\ 0x003f|0x003f: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_41 [shape=record,label="{41\:\ 0x0040|ExcHandler: all null\lSplitter:B:19:0x001f\l|0x0040: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_42 [shape=record,label="{42\:\ 0x0041|0x0041: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0042|SYNTHETIC\lSplitter:B:43:0x0042\l}"];
Node_44 [shape=record,label="{44\:\ ?|Splitter:B:43:0x0042\l|0x0042: INVOKE  (r4 I:java.lang.Object) java.lang.Object.notify():void type: VIRTUAL A[Catch:\{ all \-\> 0x0047 \}, TRY_ENTER]\l}"];
Node_45 [shape=record,label="{45\:\ 0x0045|0x0045: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0047 \}, TRY_LEAVE]\l}"];
Node_46 [shape=record,label="{46\:\ 0x0046|0x0046: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0047|ExcHandler: all null\lSplitter:B:43:0x0042\l|0x0047: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_48 [shape=record,label="{48\:\ 0x0048|SYNTHETIC\lSplitter:B:48:0x0048\l}"];
Node_49 [shape=record,label="{49\:\ ?|Splitter:B:48:0x0048\l|0x0048: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0047 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0049|0x0049: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_51 [shape=record,label="{51\:\ 0x004a|0x004a: IGET  (r1 I:android.graphics.SurfaceTexture) = \l  (r4 I:com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread)\l com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread.surfaceTexture android.graphics.SurfaceTexture \l0x004c: INVOKE  (r1 I:android.graphics.SurfaceTexture) android.graphics.SurfaceTexture.updateTexImage():void type: VIRTUAL \l}"];
Node_52 [shape=record,label="{52\:\ 0x0050|SYNTHETIC\lSplitter:B:52:0x0050\l}"];
Node_53 [shape=record,label="{53\:\ ?|Splitter:B:52:0x0050\l|0x0050: INVOKE  \l  (r4 I:com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread)\l com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread.releaseInternal():void type: DIRECT A[Catch:\{ Throwable \-\> 0x0057 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_54 [shape=record,label="{54\:\ 0x0053|0x0053: INVOKE  \l  (r4 I:com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread)\l com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread.quit():boolean type: VIRTUAL \l}"];
Node_55 [shape=record,label="{55\:\ 0x0057|ExcHandler: Throwable null\lSplitter:B:52:0x0050\l|0x0057: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_56 [shape=record,label="{56\:\ 0x0058|0x0058: CONST_STR  (r1 I:java.lang.String) =  \"DummySurface\" \l0x005a: CONST_STR  (r3 I:java.lang.String) =  \"Failed to release dummy surface\" \l}"];
Node_57 [shape=record,label="{57\:\ 0x005c|SYNTHETIC\lSplitter:B:57:0x005c\l}"];
Node_58 [shape=record,label="{58\:\ ?|Splitter:B:57:0x005c\l|0x005c: INVOKE  \l  (r1 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable A[D('e' java.lang.Throwable)])\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x0063 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_59 [shape=record,label="{59\:\ 0x005f|0x005f: INVOKE  \l  (r4 I:com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread)\l com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread.quit():boolean type: VIRTUAL \l}"];
Node_60 [shape=record,label="{60\:\ 0x0063|ExcHandler: all null\lSplitter:B:57:0x005c\l|0x0063: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_61 [shape=record,label="{61\:\ 0x0064|0x0064: INVOKE  \l  (r4 I:com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread)\l com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread.quit():boolean type: VIRTUAL \l}"];
Node_62 [shape=record,label="{62\:\ 0x0067|0x0067: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread.handleMessage((r4 'this' I:com.google.android.exoplayer2.video.DummySurface$DummySurfaceThread A[IMMUTABLE_TYPE, THIS]), (r5 I:android.os.Message A[D('msg' android.os.Message), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001b\-0x002d: r0 'e' java.lang.RuntimeException\l  0x002e\-0x0040: r0 'e' java.lang.Error\l  0x0058\-0x0063: r0 'e' java.lang.Throwable\l  ?\-0x0071: r5 'msg' android.os.Message\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_51;
Node_1 -> Node_52;
Node_3 -> Node_4;
Node_3 -> Node_17;
Node_3 -> Node_29;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_2;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_7;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_41;
Node_20 -> Node_21;
Node_20 -> Node_41;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_2;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_41;
Node_32 -> Node_33;
Node_32 -> Node_41;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_2;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_43 -> Node_47;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_48 -> Node_47;
Node_49 -> Node_50;
Node_49 -> Node_47;
Node_51 -> Node_2;
Node_52 -> Node_53;
Node_52 -> Node_55;
Node_53 -> Node_54;
Node_53 -> Node_55;
Node_54 -> Node_2;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_57 -> Node_60;
Node_58 -> Node_59;
Node_58 -> Node_60;
Node_59 -> Node_2;
Node_60 -> Node_61;
Node_61 -> Node_62;
}

