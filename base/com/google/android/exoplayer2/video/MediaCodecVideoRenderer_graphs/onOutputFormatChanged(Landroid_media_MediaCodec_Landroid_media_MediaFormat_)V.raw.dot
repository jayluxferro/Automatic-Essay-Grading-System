digraph "CFG forcom.google.android.exoplayer2.video.MediaCodecVideoRenderer.onOutputFormatChanged(Landroid\/media\/MediaCodec;Landroid\/media\/MediaFormat;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r2 I:java.lang.String) =  \"crop\-right\" \l0x0002: INVOKE  (r2 I:boolean) = \l  (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat)])\l  (r2 I:java.lang.String)\l android.media.MediaFormat.containsKey(java.lang.String):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0072 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST_STR  (r2 I:java.lang.String) =  \"crop\-left\" \l0x000a: INVOKE  (r2 I:boolean) = \l  (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat)])\l  (r2 I:java.lang.String)\l android.media.MediaFormat.containsKey(java.lang.String):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0072 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST_STR  (r2 I:java.lang.String) =  \"crop\-bottom\" \l0x0012: INVOKE  (r2 I:boolean) = \l  (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat)])\l  (r2 I:java.lang.String)\l android.media.MediaFormat.containsKey(java.lang.String):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0072 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: CONST_STR  (r2 I:java.lang.String) =  \"crop\-top\" \l0x001a: INVOKE  (r2 I:boolean) = \l  (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat)])\l  (r2 I:java.lang.String)\l android.media.MediaFormat.containsKey(java.lang.String):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0072 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasCrop' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0074 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: CONST_STR  (r2 I:java.lang.String) =  \"crop\-right\" \l0x0025: INVOKE  (r2 I:int) = \l  (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat)])\l  (r2 I:java.lang.String)\l android.media.MediaFormat.getInteger(java.lang.String):int type: VIRTUAL \l0x0029: CONST_STR  (r3 I:java.lang.String) =  \"crop\-left\" \l0x002b: INVOKE  (r3 I:int) = \l  (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat)])\l  (r3 I:java.lang.String)\l android.media.MediaFormat.getInteger(java.lang.String):int type: VIRTUAL \l0x002f: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0030: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.currentWidth int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasCrop' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x007b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|0x0036: CONST_STR  (r2 I:java.lang.String) =  \"crop\-bottom\" \l0x0038: INVOKE  (r2 I:int) = \l  (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat)])\l  (r2 I:java.lang.String)\l android.media.MediaFormat.getInteger(java.lang.String):int type: VIRTUAL \l0x003c: CONST_STR  (r3 I:java.lang.String) =  \"crop\-top\" \l0x003e: INVOKE  (r3 I:int) = \l  (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat)])\l  (r3 I:java.lang.String)\l android.media.MediaFormat.getInteger(java.lang.String):int type: VIRTUAL \l0x0042: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0043: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|0x0045: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.currentHeight int \l0x0047: IGET  (r2 I:float) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.pendingPixelWidthHeightRatio float \l0x0049: IPUT  \l  (r2 I:float)\l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.currentPixelWidthHeightRatio float \l0x004b: SGET  (r2 I:int) =  com.google.android.exoplayer2.util.Util.SDK_INT int \l0x004d: CONST  (r3 I:?[int, float, short, byte, char]) = (21 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:26:0x0082 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|0x0051: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.pendingRotationDegrees int \l0x0053: CONST  (r3 I:?[int, float, short, byte, char]) = (90 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0055|0x0055: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x005d \l}"];
Node_18 [shape=record,label="{18\:\ 0x0057|0x0057: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.pendingRotationDegrees int \l0x0059: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (270(0x10e, float:3.78E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x005b|0x005b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x006c \l}"];
Node_20 [shape=record,label="{20\:\ 0x005d|0x005d: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.currentWidth int \l0x005f: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.currentHeight int \l0x0061: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.currentWidth int \l0x0063: IPUT  \l  (r1 I:int A[D('rotatedHeight' int)])\l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.currentHeight int \l0x0065: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0067: IGET  (r3 I:float) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.currentPixelWidthHeightRatio float \l0x0069: ARITH  (r2 I:float) = (r2 I:float) \/ (r3 I:float) \l0x006a: IPUT  \l  (r2 I:float)\l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.currentPixelWidthHeightRatio float \l}"];
Node_21 [shape=record,label="{21\:\ 0x006c|0x006c: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.scalingMode int \l0x006e: INVOKE  \l  (r5 I:android.media.MediaCodec A[D('codec' android.media.MediaCodec)])\l  (r2 I:int)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.setVideoScalingMode(android.media.MediaCodec, int):void type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x0071|0x0071: RETURN   \l}"];
Node_23 [shape=record,label="{23\:\ 0x0072|0x0072: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('hasCrop' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x0074|0x0074: CONST_STR  (r2 I:java.lang.String) =  \"width\" \l0x0076: INVOKE  (r2 I:int) = \l  (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat)])\l  (r2 I:java.lang.String)\l android.media.MediaFormat.getInteger(java.lang.String):int type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x007b|0x007b: CONST_STR  (r2 I:java.lang.String) =  \"height\" \l0x007d: INVOKE  (r2 I:int) = \l  (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat)])\l  (r2 I:java.lang.String)\l android.media.MediaFormat.getInteger(java.lang.String):int type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0082|0x0082: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.pendingRotationDegrees int \l0x0084: IPUT  \l  (r2 I:int)\l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.currentUnappliedRotationDegrees int \l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onOutputFormatChanged((r4 'this' I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer A[IMMUTABLE_TYPE, THIS]), (r5 I:android.media.MediaCodec A[D('codec' android.media.MediaCodec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.media.MediaFormat A[D('outputFormat' android.media.MediaFormat), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x005f\-0x006c: r1 'rotatedHeight' int\l  0x0021\-0x0072: r0 'hasCrop' boolean\l  0x0074\-0x0086: r0 'hasCrop' boolean\l  ?\-0x0086: r5 'codec' android.media.MediaCodec\l  ?\-0x0086: r6 'outputFormat' android.media.MediaFormat\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_23;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_23;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_23;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_24;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_25;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_26;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_9;
Node_24 -> Node_11;
Node_25 -> Node_14;
Node_26 -> Node_21;
}

