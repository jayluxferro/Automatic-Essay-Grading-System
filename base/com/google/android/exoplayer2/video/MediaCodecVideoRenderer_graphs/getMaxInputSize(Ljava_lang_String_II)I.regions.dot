digraph "CFG forcom.google.android.exoplayer2.video.MediaCodecVideoRenderer.getMaxInputSize(Ljava\/lang\/String;II)I" {
subgraph cluster_Region_515856005 {
label = "R(1:(2:(1:33)|(3:4|6|34))) | DECL_VAR: char null, int maxPixels, int minCompressionRatio\l";
node [shape=record,color=blue];
subgraph cluster_Region_1845465634 {
label = "R(2:(1:33)|(3:4|6|34))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2087099899 {
label = "IF [B:1:0x0003, B:2:0x0005] THEN: R(1:33) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r7 == \-1) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|ADDED_TO_REGION\l|if (r8 == \-1) goto L_?\l}"];
subgraph cluster_Region_1534211850 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_1067276703 {
label = "R(3:4|6|34)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_778220236 {
label = "Switch: 6, default: R(2:5|1)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|switch(r6.hashCode()) \{\l    case \-1664118616: goto L_0x001d;\l    case \-1662541442: goto L_0x0045;\l    case 1187890754: goto L_0x0027;\l    case 1331836730: goto L_0x0031;\l    case 1599127256: goto L_0x003b;\l    case 1599127257: goto L_0x004f;\l    default: goto L_0x000f;\l\}\l}"];
subgraph cluster_Region_1721985982 {
label = "R(1:(2:11|1)) | FALL_THROUGH\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_740547079 {
label = "IF [B:10:0x0023] THEN: R(2:11|1) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0023|if (r6.equals(com.google.android.exoplayer2.util.MimeTypes.VIDEO_H263) == true) goto L_0x0025\l}"];
subgraph cluster_Region_1788232919 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0025|r3 = 0\l}"];
Node_InsnContainer_2041003965 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1122506391 {
label = "R(1:(2:23|1)) | FALL_THROUGH\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1072393199 {
label = "IF [B:22:0x004b] THEN: R(2:23|1) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x004b|if (r6.equals(com.google.android.exoplayer2.util.MimeTypes.VIDEO_H265) == true) goto L_0x004d\l}"];
subgraph cluster_Region_356206452 {
label = "R(2:23|1)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x004d|r3 = 4\l}"];
Node_InsnContainer_229277175 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1303437608 {
label = "R(1:(2:14|1)) | FALL_THROUGH\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1332611751 {
label = "IF [B:13:0x002d] THEN: R(2:14|1) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002d|if (r6.equals(com.google.android.exoplayer2.util.MimeTypes.VIDEO_MP4V) == true) goto L_0x002f\l}"];
subgraph cluster_Region_635021311 {
label = "R(2:14|1)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002f|r3 = 1\l}"];
Node_InsnContainer_733914294 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1965367795 {
label = "R(1:(2:17|1)) | FALL_THROUGH\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1070999518 {
label = "IF [B:16:0x0037] THEN: R(2:17|1) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0037|if (r6.equals(com.google.android.exoplayer2.util.MimeTypes.VIDEO_H264) == true) goto L_0x0039\l}"];
subgraph cluster_Region_173389199 {
label = "R(2:17|1)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0039|r3 = 2\l}"];
Node_InsnContainer_13777329 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_1586996745 {
label = "R(1:(2:20|1)) | FALL_THROUGH\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_39927441 {
label = "IF [B:19:0x0041] THEN: R(2:20|1) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0041|if (r6.equals(com.google.android.exoplayer2.util.MimeTypes.VIDEO_VP8) == true) goto L_0x0043\l}"];
subgraph cluster_Region_357442898 {
label = "R(2:20|1)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0043|r3 = 3\l}"];
Node_InsnContainer_210178516 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_495562308 {
label = "R(1:(2:26|1)) | FALL_THROUGH\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2127426578 {
label = "IF [B:25:0x0055] THEN: R(2:26|1) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0055|if (r6.equals(com.google.android.exoplayer2.util.MimeTypes.VIDEO_VP9) == true) goto L_0x0057\l}"];
subgraph cluster_Region_816050202 {
label = "R(2:26|1)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0057|r3 = 5\l}"];
Node_InsnContainer_1976817900 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_244750434 {
label = "R(2:5|1)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|FALL_THROUGH\l|r3 = 65535\l}"];
Node_InsnContainer_1097760307 [shape=record,label="{|break\l}"];
}
}
subgraph cluster_SwitchRegion_289735636 {
label = "Switch: 4, default: R(1:36)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0010|PHI: r3 \l  PHI: (r3v19 char) = (r3v3 char), (r3v6 char), (r3v9 char), (r3v12 char), (r3v15 char), (r3v18 char), (r3v24 char) binds: [B:26:0x0057, B:23:0x004d, B:20:0x0043, B:17:0x0039, B:14:0x002f, B:11:0x0025, B:5:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|switch(r3) \{\l    case 0: goto L_0x0014;\l    case 1: goto L_0x0014;\l    case 2: goto L_0x0059;\l    case 3: goto L_0x0072;\l    case 4: goto L_0x0076;\l    case 5: goto L_0x0076;\l    default: goto L_0x0013;\l\}\l}"];
subgraph cluster_Region_599890871 {
label = "R(2:7|1)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0014|int r0 = r7 * r8\lr1 = 2\l}"];
Node_InsnContainer_3741834 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1799791833 {
label = "R(1:(2:29|1)(1:35))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1508622436 {
label = "IF [B:28:0x0061] THEN: R(2:29|1) ELSE: R(1:35)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0061|if (\"BRAVIA 4K 2015\".equals(com.google.android.exoplayer2.util.Util.MODEL) == false) goto L_0x0063\l}"];
subgraph cluster_Region_422462840 {
label = "R(2:29|1)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0063|int r0 = com.google.android.exoplayer2.util.Util.ceilDivide(r7, 16) * com.google.android.exoplayer2.util.Util.ceilDivide(r8, 16) * 16 * 16\lr1 = 2\l}"];
Node_InsnContainer_1611211566 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_683449069 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
}
subgraph cluster_Region_1095111035 {
label = "R(2:30|1)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0072|int r0 = r7 * r8\lr1 = 2\l}"];
Node_InsnContainer_1979880271 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_692628978 {
label = "R(2:31|1)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0076|int r0 = r7 * r8\lr1 = 4\l}"];
Node_InsnContainer_1903002891 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1481951323 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return (r0 * 3) \/ (r1 * 2)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0017|PHI: r0 r1 \l  PHI: (r0v3 'maxPixels' int) = (r0v0 'maxPixels' int), (r0v1 'maxPixels' int), (r0v2 'maxPixels' int), (r0v4 'maxPixels' int) binds: [B:31:0x0076, B:30:0x0072, B:29:0x0063, B:7:0x0014] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v3 'minCompressionRatio' int) = (r1v0 'minCompressionRatio' int), (r1v1 'minCompressionRatio' int), (r1v2 'minCompressionRatio' int), (r1v4 'minCompressionRatio' int) binds: [B:31:0x0076, B:30:0x0072, B:29:0x0063, B:7:0x0014] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001d}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0027}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0031}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003b}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0045}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x004f}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0059}"];
Node_32 [shape=record,color=red,label="{32\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return \-1\l}"];
MethodNode[shape=record,label="{private static int com.google.android.exoplayer2.video.MediaCodecVideoRenderer.getMaxInputSize((r6v0 'sampleMimeType' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'width' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'height' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCan't fix incorrect switch cases order\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_32;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_33;
Node_4 -> Node_5;
Node_4 -> Node_9;
Node_4 -> Node_12;
Node_4 -> Node_15;
Node_4 -> Node_18;
Node_4 -> Node_21;
Node_4 -> Node_24;
Node_10 -> Node_5[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_6;
Node_22 -> Node_5[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_6;
Node_13 -> Node_5[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_6;
Node_16 -> Node_5[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_6;
Node_19 -> Node_5[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_6;
Node_25 -> Node_5[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_27;
Node_6 -> Node_30;
Node_6 -> Node_31;
Node_6 -> Node_36;
Node_7 -> Node_8;
Node_28 -> Node_29;
Node_28 -> Node_35[style=dashed];
Node_29 -> Node_8;
Node_30 -> Node_8;
Node_31 -> Node_8;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_8 -> Node_34;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_21 -> Node_22;
Node_24 -> Node_25;
Node_27 -> Node_28;
}

