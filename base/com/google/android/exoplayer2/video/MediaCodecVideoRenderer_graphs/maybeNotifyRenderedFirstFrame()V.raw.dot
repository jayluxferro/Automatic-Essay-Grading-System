digraph "CFG forcom.google.android.exoplayer2.video.MediaCodecVideoRenderer.maybeNotifyRenderedFirstFrame()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.renderedFirstFrame boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: IPUT  \l  (r0 I:boolean)\l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.renderedFirstFrame boolean \l0x0007: IGET  (r0 I:com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.eventDispatcher com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher \l0x0009: IGET  (r1 I:android.view.Surface) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.surface android.view.Surface \l0x000b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher)\l  (r1 I:android.view.Surface)\l com.google.android.exoplayer2.video.VideoRendererEventListener.EventDispatcher.renderedFirstFrame(android.view.Surface):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: RETURN   \l}"];
MethodNode[shape=record,label="{void com.google.android.exoplayer2.video.MediaCodecVideoRenderer.maybeNotifyRenderedFirstFrame((r2 'this' I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

