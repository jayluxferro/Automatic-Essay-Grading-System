digraph "CFG forcom.google.android.exoplayer2.video.MediaCodecVideoRenderer.canReconfigureCodec(Landroid\/media\/MediaCodec;ZLcom\/google\/android\/exoplayer2\/Format;Lcom\/google\/android\/exoplayer2\/Format;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r4 I:boolean A[D('codecIsAdaptive' boolean)])\l  (r5 I:com.google.android.exoplayer2.Format A[D('oldFormat' com.google.android.exoplayer2.Format)])\l  (r6 I:com.google.android.exoplayer2.Format A[D('newFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.areAdaptationCompatible(boolean, com.google.android.exoplayer2.Format, com.google.android.exoplayer2.Format):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:int) = \l  (r6 I:com.google.android.exoplayer2.Format A[D('newFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.width int \l0x0008: IGET  (r1 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.codecMaxValues com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues \l0x000a: IGET  (r1 I:int) = \l  (r1 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues.width int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:10:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:int) = \l  (r6 I:com.google.android.exoplayer2.Format A[D('newFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.height int \l0x0010: IGET  (r1 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.codecMaxValues com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues \l0x0012: IGET  (r1 I:int) = \l  (r1 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues.height int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:10:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IGET  (r0 I:int) = \l  (r6 I:com.google.android.exoplayer2.Format A[D('newFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.maxInputSize int \l0x0018: IGET  (r1 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.codecMaxValues com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues \l0x001a: IGET  (r1 I:int) = \l  (r1 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues.inputSize int \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IF  (r0 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:10:0x0020 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: RETURN  (r0 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{protected boolean com.google.android.exoplayer2.video.MediaCodecVideoRenderer.canReconfigureCodec((r2 'this' I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer A[IMMUTABLE_TYPE, THIS]), (r3 I:android.media.MediaCodec A[D('codec' android.media.MediaCodec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('codecIsAdaptive' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.google.android.exoplayer2.Format A[D('oldFormat' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:com.google.android.exoplayer2.Format A[D('newFormat' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0021: r3 'codec' android.media.MediaCodec\l  ?\-0x0021: r4 'codecIsAdaptive' boolean\l  ?\-0x0021: r5 'oldFormat' com.google.android.exoplayer2.Format\l  ?\-0x0021: r6 'newFormat' com.google.android.exoplayer2.Format\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_9;
}

