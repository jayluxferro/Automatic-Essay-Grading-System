digraph "CFG forcom.google.android.exoplayer2.video.MediaCodecVideoRenderer.getMediaFormat(Lcom\/google\/android\/exoplayer2\/Format;Lcom\/google\/android\/exoplayer2\/video\/MediaCodecVideoRenderer$CodecMaxValues;ZI)Landroid\/media\/MediaFormat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.media.MediaFormat) = \l  (r3 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.getFrameworkMediaFormatV16():android.media.MediaFormat type: VIRTUAL \l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"max\-width\" \l0x0006: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues A[D('codecMaxValues' com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues)])\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues.width int \l0x0008: INVOKE  \l  (r0 I:android.media.MediaFormat A[D('frameworkMediaFormat' android.media.MediaFormat)])\l  (r1 I:java.lang.String)\l  (r2 I:int)\l android.media.MediaFormat.setInteger(java.lang.String, int):void type: VIRTUAL \l0x000b: CONST_STR  (r1 I:java.lang.String) =  \"max\-height\" \l0x000d: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues A[D('codecMaxValues' com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues)])\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues.height int \l0x000f: INVOKE  \l  (r0 I:android.media.MediaFormat A[D('frameworkMediaFormat' android.media.MediaFormat)])\l  (r1 I:java.lang.String)\l  (r2 I:int)\l android.media.MediaFormat.setInteger(java.lang.String, int):void type: VIRTUAL \l0x0012: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues A[D('codecMaxValues' com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues)])\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues.inputSize int \l0x0014: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: CONST_STR  (r1 I:java.lang.String) =  \"max\-input\-size\" \l0x0019: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues A[D('codecMaxValues' com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues)])\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues.inputSize int \l0x001b: INVOKE  \l  (r0 I:android.media.MediaFormat A[D('frameworkMediaFormat' android.media.MediaFormat)])\l  (r1 I:java.lang.String)\l  (r2 I:int)\l android.media.MediaFormat.setInteger(java.lang.String, int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('deviceNeedsAutoFrcWorkaround' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0026 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: CONST_STR  (r1 I:java.lang.String) =  \"auto\-frc\" \l0x0022: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: INVOKE  \l  (r0 I:android.media.MediaFormat A[D('frameworkMediaFormat' android.media.MediaFormat)])\l  (r1 I:java.lang.String)\l  (r2 I:int)\l android.media.MediaFormat.setInteger(java.lang.String, int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('tunnelingAudioSessionId' int)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: INVOKE  \l  (r0 I:android.media.MediaFormat A[D('frameworkMediaFormat' android.media.MediaFormat)])\l  (r6 I:int A[D('tunnelingAudioSessionId' int)])\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.configureTunnelingV21(android.media.MediaFormat, int):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: RETURN  \l  (r0 I:android.media.MediaFormat A[D('frameworkMediaFormat' android.media.MediaFormat)])\l \l}"];
MethodNode[shape=record,label="{private static android.media.MediaFormat com.google.android.exoplayer2.video.MediaCodecVideoRenderer.getMediaFormat((r3 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues A[D('codecMaxValues' com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[D('deviceNeedsAutoFrcWorkaround' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('tunnelingAudioSessionId' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0004\-0x002b: r0 'frameworkMediaFormat' android.media.MediaFormat\l  ?\-0x002b: r3 'format' com.google.android.exoplayer2.Format\l  ?\-0x002b: r4 'codecMaxValues' com.google.android.exoplayer2.video.MediaCodecVideoRenderer$CodecMaxValues\l  ?\-0x002b: r5 'deviceNeedsAutoFrcWorkaround' boolean\l  ?\-0x002b: r6 'tunnelingAudioSessionId' int\lAnnotation[BUILD, android.annotation.SuppressLint, \{value=[InlinedApi]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
}

