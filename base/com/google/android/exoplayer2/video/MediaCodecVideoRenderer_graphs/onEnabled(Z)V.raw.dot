digraph "CFG forcom.google.android.exoplayer2.video.MediaCodecVideoRenderer.onEnabled(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r2 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l  (r3 I:boolean A[D('joining' boolean)])\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.onEnabled(boolean):void type: SUPER \l0x0003: INVOKE  (r0 I:com.google.android.exoplayer2.RendererConfiguration) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.getConfiguration():com.google.android.exoplayer2.RendererConfiguration type: VIRTUAL \l0x0007: IGET  (r0 I:int) = (r0 I:com.google.android.exoplayer2.RendererConfiguration) com.google.android.exoplayer2.RendererConfiguration.tunnelingAudioSessionId int \l0x0009: IPUT  \l  (r0 I:int)\l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.tunnelingAudioSessionId int \l0x000b: IGET  (r0 I:int) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.tunnelingAudioSessionId int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IPUT  \l  (r0 I:boolean)\l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.tunneling boolean \l0x0012: IGET  (r0 I:com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.eventDispatcher com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher \l0x0014: IGET  (r1 I:com.google.android.exoplayer2.decoder.DecoderCounters) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.decoderCounters com.google.android.exoplayer2.decoder.DecoderCounters \l0x0016: INVOKE  \l  (r0 I:com.google.android.exoplayer2.video.VideoRendererEventListener$EventDispatcher)\l  (r1 I:com.google.android.exoplayer2.decoder.DecoderCounters)\l com.google.android.exoplayer2.video.VideoRendererEventListener.EventDispatcher.enabled(com.google.android.exoplayer2.decoder.DecoderCounters):void type: VIRTUAL \l0x0019: IGET  (r0 I:com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper) = \l  (r2 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.frameReleaseTimeHelper com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper \l0x001b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper)\l com.google.android.exoplayer2.video.VideoFrameReleaseTimeHelper.enable():void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{protected void com.google.android.exoplayer2.video.MediaCodecVideoRenderer.onEnabled((r2 'this' I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer A[IMMUTABLE_TYPE, THIS]), (r3 I:boolean A[D('joining' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0020: r3 'joining' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

