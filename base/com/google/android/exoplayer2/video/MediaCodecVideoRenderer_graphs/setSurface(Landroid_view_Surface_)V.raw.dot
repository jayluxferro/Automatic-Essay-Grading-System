digraph "CFG forcom.google.android.exoplayer2.video.MediaCodecVideoRenderer.setSurface(Landroid\/view\/Surface;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0001: IGET  (r2 I:android.view.Surface) = \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.surface android.view.Surface \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('surface' android.view.Surface)])  \-\> B:17:0x003d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IPUT  \l  (r6 I:android.view.Surface A[D('surface' android.view.Surface)])\l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.surface android.view.Surface \l0x0007: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.getState():int type: VIRTUAL \l0x000b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' int)]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' int)]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0021 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r0 I:android.media.MediaCodec) = \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.getCodec():android.media.MediaCodec type: VIRTUAL \l0x0014: SGET  (r2 I:int) =  com.google.android.exoplayer2.util.Util.SDK_INT int \l0x0016: CONST  (r3 I:?[int, float, short, byte, char]) = (23 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r2 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:15:0x002f \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('codec' android.media.MediaCodec)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002f \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('surface' android.view.Surface)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x002f \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: INVOKE  \l  (r0 I:android.media.MediaCodec A[D('codec' android.media.MediaCodec)])\l  (r6 I:android.view.Surface A[D('surface' android.view.Surface)])\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.setOutputSurfaceV23(android.media.MediaCodec, android.view.Surface):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('surface' android.view.Surface)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0036 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: INVOKE  \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.maybeRenotifyVideoSizeChanged():void type: DIRECT \l0x0026: INVOKE  \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.clearRenderedFirstFrame():void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('state' int)]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e \l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|0x002b: INVOKE  \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.setJoiningDeadlineMs():void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: RETURN   \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: INVOKE  \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.releaseCodec():void type: VIRTUAL \l0x0032: INVOKE  \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.maybeInitCodec():void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0036|0x0036: INVOKE  \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.clearReportedVideoSize():void type: DIRECT \l0x0039: INVOKE  \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.clearRenderedFirstFrame():void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|0x003d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('surface' android.view.Surface)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e \l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|0x003f: INVOKE  \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.maybeRenotifyVideoSizeChanged():void type: DIRECT \l0x0042: INVOKE  \l  (r5 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.maybeRenotifyRenderedFirstFrame():void type: DIRECT \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.video.MediaCodecVideoRenderer.setSurface((r5 'this' I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.Surface A[D('surface' android.view.Surface), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0014\-0x0021: r0 'codec' android.media.MediaCodec\l  0x000b\-0x002e: r1 'state' int\l  0x002f\-0x0036: r0 'codec' android.media.MediaCodec\l  0x002f\-0x003d: r1 'state' int\l  ?\-0x0045: r6 'surface' android.view.Surface\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ExoPlaybackException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_15 -> Node_10;
Node_16 -> Node_14;
Node_17 -> Node_14;
Node_17 -> Node_18[style=dashed];
Node_18 -> Node_14;
}

