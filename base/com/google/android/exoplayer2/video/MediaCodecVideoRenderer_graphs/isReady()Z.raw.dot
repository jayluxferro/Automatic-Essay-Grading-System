digraph "CFG forcom.google.android.exoplayer2.video.MediaCodecVideoRenderer.isReady()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST  (r6 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0007: IGET  (r2 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.renderedFirstFrame boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: INVOKE  (r2 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.shouldInitCodec():boolean type: SUPER \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r2 I:boolean) = \l  (r8 I:com.google.android.exoplayer2.mediacodec.MediaCodecRenderer)\l com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.isReady():boolean type: SUPER \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IPUT  \l  (r6 I:long)\l  (r8 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.joiningDeadlineMs long \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: RETURN  (r0 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IGET  (r2 I:long) = \l  (r8 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.joiningDeadlineMs long \l0x001c: CMP_L  (r2 I:int) = (r2 I:long), (r6 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: INVOKE  (r2 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC \l0x0026: IGET  (r4 I:long) = \l  (r8 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.joiningDeadlineMs long \l0x0028: CMP_L  (r2 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: IPUT  \l  (r6 I:long)\l  (r8 I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer)\l com.google.android.exoplayer2.video.MediaCodecVideoRenderer.joiningDeadlineMs long \l0x002e: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.video.MediaCodecVideoRenderer.isReady((r8 'this' I:com.google.android.exoplayer2.video.MediaCodecVideoRenderer A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_7;
Node_11 -> Node_12;
Node_12 -> Node_7;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_7;
}

