digraph "CFG forcom.google.android.exoplayer2.video.AvcConfig.parse(Lcom\/google\/android\/exoplayer2\/util\/ParsableByteArray;)Lcom\/google\/android\/exoplayer2\/video\/AvcConfig;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l  (r0 I:int)\l com.google.android.exoplayer2.util.ParsableByteArray.skipBytes(int):void type: VIRTUAL A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}, TRY_ENTER]\l0x0004: INVOKE  (r0 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0008: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (3 ?[int, float, short, byte, char]) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x000a: ARITH  (r2 I:int) = (r0 I:int) + (1 int) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x000c: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('nalUnitLengthFieldLength' int)]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001e A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0011: INVOKE  (r0 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|ExcHandler: ArrayIndexOutOfBoundsException null\lSplitter:B:1:0x0001\l|0x0015: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0018: CONST_STR  (r12 I:java.lang.String) =  \"Error parsing AVC config\" \l0x001a: INVOKE  \l  (r0 I:com.google.android.exoplayer2.ParserException)\l  (r12 I:java.lang.String)\l  (r6 I:java.lang.Throwable A[D('e' java.lang.ArrayIndexOutOfBoundsException)])\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|SYNTHETIC\lSplitter:B:9:0x001e\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x001e\l|0x001e: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}, TRY_ENTER]\l0x0020: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0023: INVOKE  (r0 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0027: ARITH  (r9 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) & (31 ?[int, float, short, byte, char]) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0029: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: IF  (r7 I:?[int, byte, short, char] A[D('j' int)]) \>= (r9 I:?[int, byte, short, char] A[D('numSequenceParameterSets' int)])  \-\> B:13:0x0036 A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: INVOKE  (r0 I:byte[]) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.video.AvcConfig.buildNalUnitForChild(com.google.android.exoplayer2.util.ParsableByteArray):byte[] type: STATIC A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0030: INVOKE  \l  (r1 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r0 I:java.lang.Object)\l java.util.List.add(java.lang.Object):boolean type: INTERFACE A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0033: ARITH  (r7 I:int A[D('j' int)]) = (r7 I:int A[D('j' int)]) + (1 int) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0035: GOTO  \-\> 0x002a A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|0x0036: INVOKE  (r8 I:int) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.util.ParsableByteArray.readUnsignedByte():int type: VIRTUAL A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x003a: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('j' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: IF  (r7 I:?[int, byte, short, char] A[D('j' int)]) \>= (r8 I:?[int, byte, short, char] A[D('numPictureParameterSets' int)])  \-\> B:16:0x0047 A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: INVOKE  (r0 I:byte[]) = \l  (r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray)])\l com.google.android.exoplayer2.video.AvcConfig.buildNalUnitForChild(com.google.android.exoplayer2.util.ParsableByteArray):byte[] type: STATIC A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0041: INVOKE  \l  (r1 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r0 I:java.lang.Object)\l java.util.List.add(java.lang.Object):boolean type: INTERFACE A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0044: ARITH  (r7 I:int A[D('j' int)]) = (r7 I:int A[D('j' int)]) + (1 int) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0046: GOTO  \-\> 0x003b A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|0x0047: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0048: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0049: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|0x004b: IF  (r9 I:?[int, byte, short, char] A[D('numSequenceParameterSets' int)]) \<= (0 ?[int, byte, short, char])  \-\> B:19:0x0066 A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|0x004d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x004e: INVOKE  (r10 I:java.lang.Object) = \l  (r1 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r0 I:int)\l java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0052: CHECK_CAST  (r10 I:byte[]) = (byte[]) (r10 I:?[OBJECT, ARRAY]) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0054: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0055: INVOKE  (r0 I:java.lang.Object) = \l  (r1 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r0 I:int)\l java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0059: CHECK_CAST  (r0 I:byte[]) = (byte[]) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x005b: ARRAY_LENGTH  (r12 I:int) = (r10 I:?[] A[D('sps' byte[])]) A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x005c: INVOKE  (r11 I:com.google.android.exoplayer2.util.NalUnitUtil$SpsData) = \l  (r0 I:byte[])\l  (r2 I:int A[D('nalUnitLengthFieldLength' int)])\l  (r12 I:int)\l com.google.android.exoplayer2.util.NalUnitUtil.parseSpsNalUnit(byte[], int, int):com.google.android.exoplayer2.util.NalUnitUtil$SpsData type: STATIC A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0060: IGET  (r3 I:int A[D('width' int)]) = \l  (r11 I:com.google.android.exoplayer2.util.NalUnitUtil$SpsData A[D('spsData' com.google.android.exoplayer2.util.NalUnitUtil$SpsData)])\l com.google.android.exoplayer2.util.NalUnitUtil.SpsData.width int A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0062: IGET  (r4 I:int A[D('height' int)]) = \l  (r11 I:com.google.android.exoplayer2.util.NalUnitUtil$SpsData A[D('spsData' com.google.android.exoplayer2.util.NalUnitUtil$SpsData)])\l com.google.android.exoplayer2.util.NalUnitUtil.SpsData.height int A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0064: IGET  (r5 I:float A[D('pixelWidthAspectRatio' float)]) = \l  (r11 I:com.google.android.exoplayer2.util.NalUnitUtil$SpsData A[D('spsData' com.google.android.exoplayer2.util.NalUnitUtil$SpsData)])\l com.google.android.exoplayer2.util.NalUnitUtil.SpsData.pixelWidthAspectRatio float A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0066|0x0066: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.video.AvcConfig) =  com.google.android.exoplayer2.video.AvcConfig A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}]\l0x0068: INVOKE  \l  (r0 I:com.google.android.exoplayer2.video.AvcConfig)\l  (r1 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)])\l  (r2 I:int A[D('nalUnitLengthFieldLength' int)])\l  (r3 I:int A[D('width' int)])\l  (r4 I:int A[D('height' int)])\l  (r5 I:float A[D('pixelWidthAspectRatio' float)])\l com.google.android.exoplayer2.video.AvcConfig.\<init\>(java.util.List, int, int, int, float):void type: DIRECT A[Catch:\{ ArrayIndexOutOfBoundsException \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x006b|0x006b: RETURN  (r0 I:com.google.android.exoplayer2.video.AvcConfig) \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.video.AvcConfig com.google.android.exoplayer2.video.AvcConfig.parse((r13 I:com.google.android.exoplayer2.util.ParsableByteArray A[D('data' com.google.android.exoplayer2.util.ParsableByteArray), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000c\-0x0015: r2 'nalUnitLengthFieldLength' int\l  0x0016\-0x001e: r6 'e' java.lang.ArrayIndexOutOfBoundsException\l  0x0054\-0x0066: r10 'sps' byte[]\l  0x0060\-0x0066: r11 'spsData' com.google.android.exoplayer2.util.NalUnitUtil$SpsData\l  0x0023\-0x006b: r1 'initializationData' java.util.List\<byte[]\>\l  0x001e\-0x006b: r2 'nalUnitLengthFieldLength' int\l  0x0048\-0x006b: r3 'width' int\l  0x0049\-0x006b: r4 'height' int\l  0x004b\-0x006b: r5 'pixelWidthAspectRatio' float\l  0x002a\-0x006b: r7 'j' int\l  0x003a\-0x006b: r8 'numPictureParameterSets' int\l  0x0029\-0x006b: r9 'numSequenceParameterSets' int\l  ?\-0x006b: r13 'data' com.google.android.exoplayer2.util.ParsableByteArray\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.android.exoplayer2.ParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_6;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_11;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_14;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

