digraph "CFG forcom.google.android.exoplayer2.Format.getFrameworkMediaFormatV16()Landroid\/media\/MediaFormat;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.media.MediaFormat r0 = new android.media.MediaFormat()\lr0.setString(\"mime\", r4.sampleMimeType)\lmaybeSetStringV16(r0, \"language\", r4.language)\lmaybeSetIntegerV16(r0, \"max\-input\-size\", r4.maxInputSize)\lmaybeSetIntegerV16(r0, \"width\", r4.width)\lmaybeSetIntegerV16(r0, \"height\", r4.height)\lmaybeSetFloatV16(r0, \"frame\-rate\", r4.frameRate)\lmaybeSetIntegerV16(r0, \"rotation\-degrees\", r4.rotationDegrees)\lmaybeSetIntegerV16(r0, \"channel\-count\", r4.channelCount)\lmaybeSetIntegerV16(r0, \"sample\-rate\", r4.sampleRate)\lmaybeSetIntegerV16(r0, \"encoder\-delay\", r4.encoderDelay)\lmaybeSetIntegerV16(r0, \"encoder\-padding\", r4.encoderPadding)\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0053|LOOP_START\lPHI: r1 \l  PHI: (r1v1 'i' int) = (r1v0 'i' int), (r1v2 'i' int) binds: [B:0:0x0000, B:3:0x005b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0053\-\>B:3:0x005b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0059|if (r1 \>= r4.initializationData.size()) goto L_0x0080\l}"];
Node_3 [shape=record,label="{3\:\ 0x005b|LOOP_END\lLOOP:0: B:1:0x0053\-\>B:3:0x005b\l|r0.setByteBuffer(new java.lang.StringBuilder().append(\"csd\-\").append(r1).toString(), java.nio.ByteBuffer.wrap(r4.initializationData.get(r1)))\lint r1 = r1 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0080|maybeSetColorInfoV24(r0, r4.colorInfo)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0085|RETURN\l|return r0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0080|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final android.media.MediaFormat com.google.android.exoplayer2.Format.getFrameworkMediaFormatV16((r4v0 'this' com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, android.annotation.SuppressLint, \{value=[InlinedApi]\}], Annotation[BUILD, android.annotation.TargetApi, \{value=16\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

