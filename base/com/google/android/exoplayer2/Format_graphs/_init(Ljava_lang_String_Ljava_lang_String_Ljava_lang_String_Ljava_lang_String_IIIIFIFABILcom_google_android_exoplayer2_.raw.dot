digraph "CFG forcom.google.android.exoplayer2.Format.\<init\>(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;IIIIFIF[BILcom\/google\/android\/exoplayer2\/video\/ColorInfo;IIIIIILjava\/lang\/String;IJLjava\/util\/List;Lcom\/google\/android\/exoplayer2\/drm\/DrmInitData;Lcom\/google\/android\/exoplayer2\/metadata\/Metadata;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r4 I:java.lang.String A[D('id' java.lang.String)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.id java.lang.String \l0x0005: IPUT  \l  (r5 I:java.lang.String A[D('containerMimeType' java.lang.String)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.containerMimeType java.lang.String \l0x0007: IPUT  \l  (r6 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x0009: IPUT  \l  (r7 I:java.lang.String A[D('codecs' java.lang.String)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.codecs java.lang.String \l0x000b: IPUT  \l  (r8 I:int A[D('bitrate' int)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.bitrate int \l0x000d: IPUT  \l  (r9 I:int A[D('maxInputSize' int)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.maxInputSize int \l0x000f: IPUT  \l  (r10 I:int A[D('width' int)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.width int \l0x0011: IPUT  \l  (r11 I:int A[D('height' int)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.height int \l0x0013: IPUT  \l  (r12 I:float A[D('frameRate' float)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.frameRate float \l0x0015: IPUT  \l  (r13 I:int A[D('rotationDegrees' int)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.rotationDegrees int \l0x0017: IPUT  \l  (r14 I:float A[D('pixelWidthHeightRatio' float)])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.pixelWidthHeightRatio float \l0x0019: IPUT  \l  (r15 I:byte[] A[D('projectionData' byte[])])\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.projectionData byte[] \l0x001b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('stereoMode' int)])\l \l0x001d: IPUT  (r0 I:int), (r3 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.stereoMode int \l0x001f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('colorInfo' com.google.android.exoplayer2.video.ColorInfo)])\l \l0x0021: IPUT  \l  (r0 I:com.google.android.exoplayer2.video.ColorInfo)\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.colorInfo com.google.android.exoplayer2.video.ColorInfo \l0x0023: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('channelCount' int)])\l \l0x0025: IPUT  (r0 I:int), (r3 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.channelCount int \l0x0027: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('sampleRate' int)])\l \l0x0029: IPUT  (r0 I:int), (r3 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.sampleRate int \l0x002b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pcmEncoding' int)])\l \l0x002d: IPUT  (r0 I:int), (r3 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.pcmEncoding int \l0x002f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('encoderDelay' int)])\l \l0x0031: IPUT  (r0 I:int), (r3 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.encoderDelay int \l0x0033: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('encoderPadding' int)])\l \l0x0035: IPUT  (r0 I:int), (r3 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.encoderPadding int \l0x0037: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectionFlags' int)])\l \l0x0039: IPUT  (r0 I:int), (r3 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.selectionFlags int \l0x003b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x003d: IPUT  \l  (r0 I:java.lang.String)\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.language java.lang.String \l0x003f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('accessibilityChannel' int)])\l \l0x0041: IPUT  (r0 I:int), (r3 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.accessibilityChannel int \l0x0043: MOVE  (r0 I:?[long, double]) = (r26 I:?[long, double] A[D('subsampleOffsetUs' long)]) \l0x0045: IPUT  (r0 I:long), (r3 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.subsampleOffsetUs long \l}"];
Node_1 [shape=record,label="{1\:\ 0x0047|0x0047: IF  (r28 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('initializationData' java.util.List\<byte[]\>)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x004d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0049|0x0049: INVOKE  (r28 I:java.util.List A[D('initializationData' java.util.List\<byte[]\>)]) =  java.util.Collections.emptyList():java.util.List type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x004d|0x004d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r28 I:?[OBJECT, ARRAY] A[D('initializationData' java.util.List\<byte[]\>)])\l \l0x004f: IPUT  \l  (r0 I:java.util.List\<byte[]\>)\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.initializationData java.util.List \l0x0051: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r29 I:?[OBJECT, ARRAY] A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData)])\l \l0x0053: IPUT  \l  (r0 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.drmInitData com.google.android.exoplayer2.drm.DrmInitData \l0x0055: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r30 I:?[OBJECT, ARRAY] A[D('metadata' com.google.android.exoplayer2.metadata.Metadata)])\l \l0x0057: IPUT  \l  (r0 I:com.google.android.exoplayer2.metadata.Metadata)\l  (r3 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.metadata com.google.android.exoplayer2.metadata.Metadata \l}"];
Node_4 [shape=record,label="{4\:\ 0x0059|0x0059: RETURN   \l}"];
MethodNode[shape=record,label="{void com.google.android.exoplayer2.Format.\<init\>((r3 'this' I:com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[D('id' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[D('containerMimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[D('sampleMimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[D('codecs' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[D('bitrate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[D('maxInputSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:float A[D('frameRate' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('rotationDegrees' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:float A[D('pixelWidthHeightRatio' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:byte[] A[D('projectionData' byte[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[D('stereoMode' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:com.google.android.exoplayer2.video.ColorInfo A[D('colorInfo' com.google.android.exoplayer2.video.ColorInfo), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('channelCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('sampleRate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[D('pcmEncoding' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:int A[D('encoderDelay' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[D('encoderPadding' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[D('selectionFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:java.lang.String A[D('language' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:int A[D('accessibilityChannel' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:long A[D('subsampleOffsetUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:java.util.List\<byte[]\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:com.google.android.exoplayer2.drm.DrmInitData A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30 I:com.google.android.exoplayer2.metadata.Metadata A[D('metadata' com.google.android.exoplayer2.metadata.Metadata), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0000\-0x004d: r28 'initializationData' java.util.List\<byte[]\>\l  ?\-0x0059: r4 'id' java.lang.String\l  ?\-0x0059: r5 'containerMimeType' java.lang.String\l  ?\-0x0059: r6 'sampleMimeType' java.lang.String\l  ?\-0x0059: r7 'codecs' java.lang.String\l  ?\-0x0059: r8 'bitrate' int\l  ?\-0x0059: r9 'maxInputSize' int\l  ?\-0x0059: r10 'width' int\l  ?\-0x0059: r11 'height' int\l  ?\-0x0059: r12 'frameRate' float\l  ?\-0x0059: r13 'rotationDegrees' int\l  ?\-0x0059: r14 'pixelWidthHeightRatio' float\l  ?\-0x0059: r15 'projectionData' byte[]\l  ?\-0x0059: r16 'stereoMode' int\l  ?\-0x0059: r17 'colorInfo' com.google.android.exoplayer2.video.ColorInfo\l  ?\-0x0059: r18 'channelCount' int\l  ?\-0x0059: r19 'sampleRate' int\l  ?\-0x0059: r20 'pcmEncoding' int\l  ?\-0x0059: r21 'encoderDelay' int\l  ?\-0x0059: r22 'encoderPadding' int\l  ?\-0x0059: r23 'selectionFlags' int\l  ?\-0x0059: r24 'language' java.lang.String\l  ?\-0x0059: r25 'accessibilityChannel' int\l  ?\-0x0059: r26 'subsampleOffsetUs' long\l  ?\-0x0059: r29 'drmInitData' com.google.android.exoplayer2.drm.DrmInitData\l  ?\-0x0059: r30 'metadata' com.google.android.exoplayer2.metadata.Metadata\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/lang\/String;, Ljava\/lang\/String;, Ljava\/lang\/String;, IIIIFIF[BI, Lcom\/google\/android\/exoplayer2\/video\/ColorInfo;, IIIIII, Ljava\/lang\/String;, IJ, Ljava\/util\/List, \<[B\>;, Lcom\/google\/android\/exoplayer2\/drm\/DrmInitData;, Lcom\/google\/android\/exoplayer2\/metadata\/Metadata;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

