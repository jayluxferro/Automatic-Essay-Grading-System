digraph "CFG forcom.google.android.exoplayer2.Format.toLogString(Lcom\/google\/android\/exoplayer2\/Format;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('format' com.google.android.exoplayer2.Format)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST_STR  (r1 I:java.lang.String) =  \"null\" \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r1 I:java.lang.String) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0008: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000b: CONST_STR  (r1 I:java.lang.String) =  \"id=\" \l0x000d: INVOKE  (r1 I:java.lang.StringBuilder) = \l  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l  (r1 I:java.lang.String)\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0011: IGET  (r2 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.id java.lang.String \l0x0013: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0017: CONST_STR  (r2 I:java.lang.String) =  \", mimeType=\" \l0x0019: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001d: IGET  (r2 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x001f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0022: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.bitrate int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0031 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: CONST_STR  (r1 I:java.lang.String) =  \", bitrate=\" \l0x0028: INVOKE  (r1 I:java.lang.StringBuilder) = \l  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l  (r1 I:java.lang.String)\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002c: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.bitrate int \l0x002e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|0x0031: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.width int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|0x0033: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0050 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|0x0035: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.height int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0050 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: CONST_STR  (r1 I:java.lang.String) =  \", res=\" \l0x003b: INVOKE  (r1 I:java.lang.StringBuilder) = \l  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l  (r1 I:java.lang.String)\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.width int \l0x0041: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0045: CONST_STR  (r2 I:java.lang.String) =  \"x\" \l0x0047: INVOKE  (r1 I:java.lang.StringBuilder) = (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004b: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.height int \l0x004d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|0x0050: IGET  (r1 I:float) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.frameRate float \l0x0052: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (\-1082130432(0xffffffffbf800000, float:\-1.0) ?[int, float, short, byte, char])\l \l0x0054: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0056|0x0056: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0063 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0058|0x0058: CONST_STR  (r1 I:java.lang.String) =  \", fps=\" \l0x005a: INVOKE  (r1 I:java.lang.StringBuilder) = \l  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l  (r1 I:java.lang.String)\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005e: IGET  (r2 I:float) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.frameRate float \l0x0060: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:float) java.lang.StringBuilder.append(float):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0063|0x0063: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.channelCount int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0065|0x0065: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0072 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0067|0x0067: CONST_STR  (r1 I:java.lang.String) =  \", channels=\" \l0x0069: INVOKE  (r1 I:java.lang.StringBuilder) = \l  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l  (r1 I:java.lang.String)\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006d: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.channelCount int \l0x006f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0072|0x0072: IGET  (r1 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleRate int \l}"];
Node_19 [shape=record,label="{19\:\ 0x0074|0x0074: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0081 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0076|0x0076: CONST_STR  (r1 I:java.lang.String) =  \", sample_rate=\" \l0x0078: INVOKE  (r1 I:java.lang.StringBuilder) = \l  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l  (r1 I:java.lang.String)\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007c: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleRate int \l0x007e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0081|0x0081: IGET  (r1 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.language java.lang.String \l}"];
Node_22 [shape=record,label="{22\:\ 0x0083|0x0083: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0090 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0085|0x0085: CONST_STR  (r1 I:java.lang.String) =  \", language=\" \l0x0087: INVOKE  (r1 I:java.lang.StringBuilder) = \l  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l  (r1 I:java.lang.String)\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008b: IGET  (r2 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.language java.lang.String \l0x008d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0090|0x0090: INVOKE  (r1 I:java.lang.String) = \l  (r0 I:java.lang.StringBuilder A[D('builder' java.lang.StringBuilder)])\l java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
MethodNode[shape=record,label="{public static java.lang.String com.google.android.exoplayer2.Format.toLogString((r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000b\-0x0095: r0 'builder' java.lang.StringBuilder\l  ?\-0x0095: r4 'format' com.google.android.exoplayer2.Format\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_3;
}

