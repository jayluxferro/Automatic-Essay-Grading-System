digraph "CFG forcom.google.android.exoplayer2.Format.copyWithContainerInfo(Ljava\/lang\/String;Ljava\/lang\/String;IIIILjava\/lang\/String;)Lcom\/google\/android\/exoplayer2\/Format;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.Format) =  com.google.android.exoplayer2.Format \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r5 I:java.lang.String) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.containerMimeType java.lang.String \l0x0006: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0008: IGET  (r6 I:java.lang.String) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x000a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x000c: IGET  (r9 I:int) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.maxInputSize int \l0x000e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0010: IGET  (r12 I:float) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.frameRate float \l0x0012: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0014: IGET  (r13 I:int) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.rotationDegrees int \l0x0016: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0018: IGET  (r14 I:float) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.pixelWidthHeightRatio float \l0x001a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x001c: IGET  (r15 I:byte[]) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.projectionData byte[] \l0x001e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0020: IGET  (r0 I:int) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.stereoMode int \l0x0022: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0024: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0026: IGET  (r0 I:com.google.android.exoplayer2.video.ColorInfo) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.colorInfo com.google.android.exoplayer2.video.ColorInfo \l0x0028: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x002a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x002c: IGET  (r0 I:int) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.channelCount int \l0x002e: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0030: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0032: IGET  (r0 I:int) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.sampleRate int \l0x0034: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0036: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0038: IGET  (r0 I:int) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.pcmEncoding int \l0x003a: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x003e: IGET  (r0 I:int) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.encoderDelay int \l0x0040: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0044: IGET  (r0 I:int) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.encoderPadding int \l0x0046: MOVE  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0048: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x004a: IGET  (r0 I:int) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.accessibilityChannel int \l0x004c: MOVE  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0050: IGET  (r0 I:long) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.subsampleOffsetUs long \l0x0052: MOVE  (r26 I:?[long, double]) = (r0 I:?[long, double]) \l0x0054: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0056: IGET  (r0 I:java.util.List\<byte[]\>) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.initializationData java.util.List \l0x0058: MOVE  (r28 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x005a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x005c: IGET  (r0 I:com.google.android.exoplayer2.drm.DrmInitData) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.drmInitData com.google.android.exoplayer2.drm.DrmInitData \l0x005e: MOVE  (r29 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0060: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0062: IGET  (r0 I:com.google.android.exoplayer2.metadata.Metadata) = (r0 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.metadata com.google.android.exoplayer2.metadata.Metadata \l0x0064: MOVE  (r30 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0066: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x0068: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r33 I:?[OBJECT, ARRAY] A[D('codecs' java.lang.String)]) \l0x006a: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r34 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bitrate' int)])\l \l0x006c: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r35 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)])\l \l0x006e: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r36 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('height' int)])\l \l0x0070: MOVE  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r37 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectionFlags' int)])\l \l0x0072: MOVE  (r24 I:?[OBJECT, ARRAY]) = (r38 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x0074: INVOKE  \l  (r3 I:com.google.android.exoplayer2.Format)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:float)\l  (r13 I:int)\l  (r14 I:float)\l  (r15 I:byte[])\l  (r16 I:int)\l  (r17 I:com.google.android.exoplayer2.video.ColorInfo)\l  (r18 I:int)\l  (r19 I:int)\l  (r20 I:int)\l  (r21 I:int)\l  (r22 I:int)\l  (r23 I:int)\l  (r24 I:java.lang.String)\l  (r25 I:int)\l  (r26 I:long)\l  (r28 I:java.util.List)\l  (r29 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r30 I:com.google.android.exoplayer2.metadata.Metadata)\l com.google.android.exoplayer2.Format.\<init\>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, int, int, float, int, float, byte[], int, com.google.android.exoplayer2.video.ColorInfo, int, int, int, int, int, int, java.lang.String, int, long, java.util.List, com.google.android.exoplayer2.drm.DrmInitData, com.google.android.exoplayer2.metadata.Metadata):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0077|0x0077: RETURN  (r3 I:com.google.android.exoplayer2.Format) \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.Format com.google.android.exoplayer2.Format.copyWithContainerInfo((r31 'this' I:com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, THIS]), (r32 I:java.lang.String A[D('id' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:java.lang.String A[D('codecs' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:int A[D('bitrate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36 I:int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r37 I:int A[D('selectionFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r38 I:java.lang.String A[D('language' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0077: r32 'id' java.lang.String\l  ?\-0x0077: r33 'codecs' java.lang.String\l  ?\-0x0077: r34 'bitrate' int\l  ?\-0x0077: r35 'width' int\l  ?\-0x0077: r36 'height' int\l  ?\-0x0077: r37 'selectionFlags' int\l  ?\-0x0077: r38 'language' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

