digraph "CFG forcom.google.android.exoplayer2.Format.\<init\>(Landroid\/os\/Parcel;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r3 I:java.lang.String) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x0007: IPUT  \l  (r3 I:java.lang.String)\l  (r6 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.id java.lang.String \l0x0009: INVOKE  (r3 I:java.lang.String) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x000d: IPUT  \l  (r3 I:java.lang.String)\l  (r6 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.containerMimeType java.lang.String \l0x000f: INVOKE  (r3 I:java.lang.String) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x0013: IPUT  \l  (r3 I:java.lang.String)\l  (r6 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x0015: INVOKE  (r3 I:java.lang.String) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x0019: IPUT  \l  (r3 I:java.lang.String)\l  (r6 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.codecs java.lang.String \l0x001b: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x001f: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.bitrate int \l0x0021: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x0025: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.maxInputSize int \l0x0027: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x002b: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.width int \l0x002d: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x0031: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.height int \l0x0033: INVOKE  (r3 I:float) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readFloat():float type: VIRTUAL \l0x0037: IPUT  (r3 I:float), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.frameRate float \l0x0039: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x003d: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.rotationDegrees int \l0x003f: INVOKE  (r3 I:float) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readFloat():float type: VIRTUAL \l0x0043: IPUT  (r3 I:float), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.pixelWidthHeightRatio float \l0x0045: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0049|0x0049: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x00b8 \l}"];
Node_2 [shape=record,label="{2\:\ 0x004b|0x004b: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x004c|0x004c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('hasProjectionData' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x00ba \l}"];
Node_4 [shape=record,label="{4\:\ 0x004e|0x004e: INVOKE  (r3 I:byte[]) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.createByteArray():byte[] type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0052|0x0052: IPUT  (r3 I:byte[]), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.projectionData byte[] \l0x0054: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x0058: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.stereoMode int \l0x005a: CONST_CLASS  (r3 I:java.lang.Class\<com.google.android.exoplayer2.video.ColorInfo\>) =  com.google.android.exoplayer2.video.ColorInfo.class \l0x005c: INVOKE  (r3 I:java.lang.ClassLoader) = (r3 I:java.lang.Class) java.lang.Class.getClassLoader():java.lang.ClassLoader type: VIRTUAL \l0x0060: INVOKE  (r3 I:android.os.Parcelable) = \l  (r7 I:android.os.Parcel A[D('in' android.os.Parcel)])\l  (r3 I:java.lang.ClassLoader)\l android.os.Parcel.readParcelable(java.lang.ClassLoader):android.os.Parcelable type: VIRTUAL \l0x0064: CHECK_CAST  (r3 I:com.google.android.exoplayer2.video.ColorInfo) = (com.google.android.exoplayer2.video.ColorInfo) (r3 I:?[OBJECT, ARRAY]) \l0x0066: IPUT  \l  (r3 I:com.google.android.exoplayer2.video.ColorInfo)\l  (r6 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.colorInfo com.google.android.exoplayer2.video.ColorInfo \l0x0068: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x006c: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.channelCount int \l0x006e: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x0072: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.sampleRate int \l0x0074: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x0078: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.pcmEncoding int \l0x007a: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x007e: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.encoderDelay int \l0x0080: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x0084: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.encoderPadding int \l0x0086: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x008a: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.selectionFlags int \l0x008c: INVOKE  (r3 I:java.lang.String) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readString():java.lang.String type: VIRTUAL \l0x0090: IPUT  \l  (r3 I:java.lang.String)\l  (r6 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.language java.lang.String \l0x0092: INVOKE  (r3 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x0096: IPUT  (r3 I:int), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.accessibilityChannel int \l0x0098: INVOKE  (r4 I:long) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readLong():long type: VIRTUAL \l0x009c: IPUT  (r4 I:long), (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.subsampleOffsetUs long \l0x009e: INVOKE  (r2 I:int) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.readInt():int type: VIRTUAL \l0x00a2: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList \l0x00a4: INVOKE  \l  (r3 I:java.util.ArrayList)\l  (r2 I:int A[D('initializationDataSize' int)])\l java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x00a7: IPUT  \l  (r3 I:java.util.List\<byte[]\>)\l  (r6 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.initializationData java.util.List \l0x00a9: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x00aa|0x00aa: IF  (r1 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char] A[D('initializationDataSize' int)])  \-\> B:10:0x00bc \l}"];
Node_7 [shape=record,label="{7\:\ 0x00ac|0x00ac: IGET  (r3 I:java.util.List\<byte[]\>) = (r6 I:com.google.android.exoplayer2.Format) com.google.android.exoplayer2.Format.initializationData java.util.List \l0x00ae: INVOKE  (r4 I:byte[]) = (r7 I:android.os.Parcel A[D('in' android.os.Parcel)]) android.os.Parcel.createByteArray():byte[] type: VIRTUAL \l0x00b2: INVOKE  (r3 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x00b5: ARITH  (r1 I:int A[D('i' int)]) = (r1 I:int A[D('i' int)]) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x00b8|0x00b8: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('hasProjectionData' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x00ba|0x00ba: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x00bc|0x00bc: CONST_CLASS  (r3 I:java.lang.Class\<com.google.android.exoplayer2.drm.DrmInitData\>) =  com.google.android.exoplayer2.drm.DrmInitData.class \l0x00be: INVOKE  (r3 I:java.lang.ClassLoader) = (r3 I:java.lang.Class) java.lang.Class.getClassLoader():java.lang.ClassLoader type: VIRTUAL \l0x00c2: INVOKE  (r3 I:android.os.Parcelable) = \l  (r7 I:android.os.Parcel A[D('in' android.os.Parcel)])\l  (r3 I:java.lang.ClassLoader)\l android.os.Parcel.readParcelable(java.lang.ClassLoader):android.os.Parcelable type: VIRTUAL \l0x00c6: CHECK_CAST  (r3 I:com.google.android.exoplayer2.drm.DrmInitData) = (com.google.android.exoplayer2.drm.DrmInitData) (r3 I:?[OBJECT, ARRAY]) \l0x00c8: IPUT  \l  (r3 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r6 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.drmInitData com.google.android.exoplayer2.drm.DrmInitData \l0x00ca: CONST_CLASS  (r3 I:java.lang.Class\<com.google.android.exoplayer2.metadata.Metadata\>) =  com.google.android.exoplayer2.metadata.Metadata.class \l0x00cc: INVOKE  (r3 I:java.lang.ClassLoader) = (r3 I:java.lang.Class) java.lang.Class.getClassLoader():java.lang.ClassLoader type: VIRTUAL \l0x00d0: INVOKE  (r3 I:android.os.Parcelable) = \l  (r7 I:android.os.Parcel A[D('in' android.os.Parcel)])\l  (r3 I:java.lang.ClassLoader)\l android.os.Parcel.readParcelable(java.lang.ClassLoader):android.os.Parcelable type: VIRTUAL \l0x00d4: CHECK_CAST  (r3 I:com.google.android.exoplayer2.metadata.Metadata) = (com.google.android.exoplayer2.metadata.Metadata) (r3 I:?[OBJECT, ARRAY]) \l0x00d6: IPUT  \l  (r3 I:com.google.android.exoplayer2.metadata.Metadata)\l  (r6 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.Format.metadata com.google.android.exoplayer2.metadata.Metadata \l}"];
Node_11 [shape=record,label="{11\:\ 0x00d8|0x00d8: RETURN   \l}"];
MethodNode[shape=record,label="{void com.google.android.exoplayer2.Format.\<init\>((r6 'this' I:com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, THIS]), (r7 I:android.os.Parcel A[D('in' android.os.Parcel), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x004c\-0x00b8: r0 'hasProjectionData' boolean\l  0x00aa\-0x00b8: r1 'i' int\l  0x00a2\-0x00b8: r2 'initializationDataSize' int\l  0x00ba\-0x00d8: r0 'hasProjectionData' boolean\l  0x00bc\-0x00d8: r1 'i' int\l  0x00bc\-0x00d8: r2 'initializationDataSize' int\l  ?\-0x00d8: r7 'in' android.os.Parcel\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_6;
Node_8 -> Node_3;
Node_9 -> Node_5;
Node_10 -> Node_11;
}

