digraph "CFG forcom.google.android.exoplayer2.Format.createTextSampleFormat(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;IILjava\/lang\/String;Lcom\/google\/android\/exoplayer2\/drm\/DrmInitData;J)Lcom\/google\/android\/exoplayer2\/Format;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r6 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: INVOKE  (r10 I:java.util.List) =  java.util.Collections.emptyList():java.util.List type: STATIC \l0x0005: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x0006: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY] A[D('sampleMimeType' java.lang.String)])\l \l0x0007: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY] A[D('codecs' java.lang.String)]) \l0x0008: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bitrate' int)])\l \l0x0009: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectionFlags' int)])\l \l0x000a: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x000c: MOVE  (r7 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData)])\l \l0x000e: MOVE  (r8 I:?[long, double]) = (r18 I:?[long, double] A[D('subsampleOffsetUs' long)]) \l0x0010: INVOKE  (r0 I:com.google.android.exoplayer2.Format) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:java.lang.String)\l  (r6 I:int)\l  (r7 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r8 I:long)\l  (r10 I:java.util.List)\l com.google.android.exoplayer2.Format.createTextSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.String, int, com.google.android.exoplayer2.drm.DrmInitData, long, java.util.List):com.google.android.exoplayer2.Format type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: RETURN  (r0 I:com.google.android.exoplayer2.Format) \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.Format com.google.android.exoplayer2.Format.createTextSampleFormat((r11 I:java.lang.String A[D('id' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.lang.String A[D('sampleMimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.String A[D('codecs' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('bitrate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('selectionFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:java.lang.String A[D('language' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:com.google.android.exoplayer2.drm.DrmInitData A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:long A[D('subsampleOffsetUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0014: r11 'id' java.lang.String\l  ?\-0x0014: r12 'sampleMimeType' java.lang.String\l  ?\-0x0014: r13 'codecs' java.lang.String\l  ?\-0x0014: r14 'bitrate' int\l  ?\-0x0014: r15 'selectionFlags' int\l  ?\-0x0014: r16 'language' java.lang.String\l  ?\-0x0014: r17 'drmInitData' com.google.android.exoplayer2.drm.DrmInitData\l  ?\-0x0014: r18 'subsampleOffsetUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

