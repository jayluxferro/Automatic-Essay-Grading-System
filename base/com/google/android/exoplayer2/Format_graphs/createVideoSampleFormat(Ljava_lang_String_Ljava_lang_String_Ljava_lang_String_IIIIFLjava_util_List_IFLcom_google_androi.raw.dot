digraph "CFG forcom.google.android.exoplayer2.Format.createVideoSampleFormat(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;IIIIFLjava\/util\/List;IFLcom\/google\/android\/exoplayer2\/drm\/DrmInitData;)Lcom\/google\/android\/exoplayer2\/Format;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r12 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0002: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x0004: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r16 I:?[OBJECT, ARRAY] A[D('sampleMimeType' java.lang.String)])\l \l0x0006: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY] A[D('codecs' java.lang.String)]) \l0x0008: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bitrate' int)])\l \l0x000a: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxInputSize' int)])\l \l0x000c: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)])\l \l0x000e: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('height' int)])\l \l0x0010: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('frameRate' float)])\l \l0x0012: MOVE  (r8 I:?[OBJECT, ARRAY]) = \l  (r23 I:?[OBJECT, ARRAY] A[D('initializationData' java.util.List\<byte[]\>)])\l \l0x0014: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('rotationDegrees' int)])\l \l0x0016: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r25 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('pixelWidthHeightRatio' float)])\l \l0x0018: MOVE  (r14 I:?[OBJECT, ARRAY]) = \l  (r26 I:?[OBJECT, ARRAY] A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData)])\l \l0x001a: INVOKE  (r0 I:com.google.android.exoplayer2.Format) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:float)\l  (r8 I:java.util.List)\l  (r9 I:int)\l  (r10 I:float)\l  (r11 I:byte[])\l  (r12 I:int)\l  (r13 I:com.google.android.exoplayer2.video.ColorInfo)\l  (r14 I:com.google.android.exoplayer2.drm.DrmInitData)\l com.google.android.exoplayer2.Format.createVideoSampleFormat(java.lang.String, java.lang.String, java.lang.String, int, int, int, int, float, java.util.List, int, float, byte[], int, com.google.android.exoplayer2.video.ColorInfo, com.google.android.exoplayer2.drm.DrmInitData):com.google.android.exoplayer2.Format type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: RETURN  (r0 I:com.google.android.exoplayer2.Format) \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.Format com.google.android.exoplayer2.Format.createVideoSampleFormat((r15 I:java.lang.String A[D('id' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:java.lang.String A[D('sampleMimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:java.lang.String A[D('codecs' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('bitrate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('maxInputSize' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:float A[D('frameRate' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:java.util.List\<byte[]\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int A[D('rotationDegrees' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:float A[D('pixelWidthHeightRatio' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:com.google.android.exoplayer2.drm.DrmInitData A[D('drmInitData' com.google.android.exoplayer2.drm.DrmInitData), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001e: r15 'id' java.lang.String\l  ?\-0x001e: r16 'sampleMimeType' java.lang.String\l  ?\-0x001e: r17 'codecs' java.lang.String\l  ?\-0x001e: r18 'bitrate' int\l  ?\-0x001e: r19 'maxInputSize' int\l  ?\-0x001e: r20 'width' int\l  ?\-0x001e: r21 'height' int\l  ?\-0x001e: r22 'frameRate' float\l  0x0000\-0x001e: r23 'initializationData' java.util.List\<byte[]\>\l  ?\-0x001e: r24 'rotationDegrees' int\l  ?\-0x001e: r25 'pixelWidthHeightRatio' float\l  ?\-0x001e: r26 'drmInitData' com.google.android.exoplayer2.drm.DrmInitData\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/lang\/String;, Ljava\/lang\/String;, IIIIF, Ljava\/util\/List, \<[B\>;IF, Lcom\/google\/android\/exoplayer2\/drm\/DrmInitData;, ), Lcom\/google\/android\/exoplayer2\/Format;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

