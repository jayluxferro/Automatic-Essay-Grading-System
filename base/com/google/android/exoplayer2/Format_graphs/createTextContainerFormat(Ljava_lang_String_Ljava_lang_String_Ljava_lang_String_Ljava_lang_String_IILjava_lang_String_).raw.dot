digraph "CFG forcom.google.android.exoplayer2.Format.createTextContainerFormat(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;IILjava\/lang\/String;)Lcom\/google\/android\/exoplayer2\/Format;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r9 I:?[OBJECT, ARRAY] A[D('containerMimeType' java.lang.String)])\l \l0x0003: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY] A[D('sampleMimeType' java.lang.String)])\l \l0x0004: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY] A[D('codecs' java.lang.String)]) \l0x0005: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bitrate' int)])\l \l0x0006: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectionFlags' int)])\l \l0x0007: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x0008: INVOKE  (r0 I:com.google.android.exoplayer2.Format) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:java.lang.String)\l  (r7 I:int)\l com.google.android.exoplayer2.Format.createTextContainerFormat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.String, int):com.google.android.exoplayer2.Format type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN  (r0 I:com.google.android.exoplayer2.Format) \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.Format com.google.android.exoplayer2.Format.createTextContainerFormat((r8 I:java.lang.String A[D('id' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[D('containerMimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[D('sampleMimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.String A[D('codecs' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[D('bitrate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[D('selectionFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.lang.String A[D('language' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x000c: r8 'id' java.lang.String\l  ?\-0x000c: r9 'containerMimeType' java.lang.String\l  ?\-0x000c: r10 'sampleMimeType' java.lang.String\l  ?\-0x000c: r11 'codecs' java.lang.String\l  ?\-0x000c: r12 'bitrate' int\l  ?\-0x000c: r13 'selectionFlags' int\l  ?\-0x000c: r14 'language' java.lang.String\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

