digraph "CFG forcom.google.android.exoplayer2.Format.createSampleFormat(Ljava\/lang\/String;Ljava\/lang\/String;J)Lcom\/google\/android\/exoplayer2\/Format;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.Format) =  com.google.android.exoplayer2.Format \l0x0002: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST  (r6 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0005: CONST  (r7 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0006: CONST  (r8 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0007: CONST  (r9 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0008: CONST  (r10 I:?[int, float, short, byte, char]) = \l  (\-1082130432(0xffffffffbf800000, float:\-1.0) ?[int, float, short, byte, char])\l \l0x000a: CONST  (r11 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000b: CONST  (r12 I:?[int, float, short, byte, char]) = \l  (\-1082130432(0xffffffffbf800000, float:\-1.0) ?[int, float, short, byte, char])\l \l0x000d: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: CONST  (r14 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000f: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: CONST  (r16 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0012: CONST  (r17 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0014: CONST  (r18 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0016: CONST  (r19 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0018: CONST  (r20 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x001a: CONST  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: CONST  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: CONST  (r23 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0020: CONST  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0022: CONST  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0024: CONST  (r28 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0026: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r30 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x0028: MOVE  (r4 I:?[OBJECT, ARRAY]) = \l  (r31 I:?[OBJECT, ARRAY] A[D('sampleMimeType' java.lang.String)])\l \l0x002a: MOVE  (r24 I:?[long, double]) = (r32 I:?[long, double] A[D('subsampleOffsetUs' long)]) \l0x002c: INVOKE  \l  (r1 I:com.google.android.exoplayer2.Format)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:float)\l  (r11 I:int)\l  (r12 I:float)\l  (r13 I:byte[])\l  (r14 I:int)\l  (r15 I:com.google.android.exoplayer2.video.ColorInfo)\l  (r16 I:int)\l  (r17 I:int)\l  (r18 I:int)\l  (r19 I:int)\l  (r20 I:int)\l  (r21 I:int)\l  (r22 I:java.lang.String)\l  (r23 I:int)\l  (r24 I:long)\l  (r26 I:java.util.List)\l  (r27 I:com.google.android.exoplayer2.drm.DrmInitData)\l  (r28 I:com.google.android.exoplayer2.metadata.Metadata)\l com.google.android.exoplayer2.Format.\<init\>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, int, int, float, int, float, byte[], int, com.google.android.exoplayer2.video.ColorInfo, int, int, int, int, int, int, java.lang.String, int, long, java.util.List, com.google.android.exoplayer2.drm.DrmInitData, com.google.android.exoplayer2.metadata.Metadata):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x002f|0x002f: RETURN  (r1 I:com.google.android.exoplayer2.Format) \l}"];
MethodNode[shape=record,label="{public static com.google.android.exoplayer2.Format com.google.android.exoplayer2.Format.createSampleFormat((r30 I:java.lang.String A[D('id' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:java.lang.String A[D('sampleMimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:long A[D('subsampleOffsetUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x002f: r30 'id' java.lang.String\l  ?\-0x002f: r31 'sampleMimeType' java.lang.String\l  ?\-0x002f: r32 'subsampleOffsetUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

