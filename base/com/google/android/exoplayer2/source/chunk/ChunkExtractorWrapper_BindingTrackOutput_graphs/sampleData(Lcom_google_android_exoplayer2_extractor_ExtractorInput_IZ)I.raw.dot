digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.sampleData(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;IZ)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r1 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.trackOutput com.google.android.exoplayer2.extractor.TrackOutput \l0x0002: INVOKE  (r0 I:int) = \l  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r2 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l  (r3 I:int A[D('length' int)])\l  (r4 I:boolean A[D('allowEndOfInput' boolean)])\l com.google.android.exoplayer2.extractor.TrackOutput.sampleData(com.google.android.exoplayer2.extractor.ExtractorInput, int, boolean):int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.sampleData((r1 'this' I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[D('length' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[D('allowEndOfInput' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0006: r2 'input' com.google.android.exoplayer2.extractor.ExtractorInput\l  ?\-0x0006: r3 'length' int\l  ?\-0x0006: r4 'allowEndOfInput' boolean\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

