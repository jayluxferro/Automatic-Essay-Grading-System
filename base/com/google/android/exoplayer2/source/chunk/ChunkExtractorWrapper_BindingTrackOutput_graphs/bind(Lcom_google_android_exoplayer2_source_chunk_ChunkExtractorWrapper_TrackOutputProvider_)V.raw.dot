digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.bind(Lcom\/google\/android\/exoplayer2\/source\/chunk\/ChunkExtractorWrapper$TrackOutputProvider;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('trackOutputProvider' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.DummyTrackOutput) =  com.google.android.exoplayer2.extractor.DummyTrackOutput \l0x0004: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.DummyTrackOutput)\l com.google.android.exoplayer2.extractor.DummyTrackOutput.\<init\>():void type: DIRECT \l0x0007: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.trackOutput com.google.android.exoplayer2.extractor.TrackOutput \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r0 I:int) = \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.id int \l0x000c: IGET  (r1 I:int) = \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.type int \l0x000e: INVOKE  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r3 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider A[D('trackOutputProvider' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider)])\l  (r0 I:int)\l  (r1 I:int)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.TrackOutputProvider.track(int, int):com.google.android.exoplayer2.extractor.TrackOutput type: INTERFACE \l0x0012: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.trackOutput com.google.android.exoplayer2.extractor.TrackOutput \l0x0014: IGET  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.trackOutput com.google.android.exoplayer2.extractor.TrackOutput \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0009 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IGET  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput) = \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.trackOutput com.google.android.exoplayer2.extractor.TrackOutput \l0x001a: IGET  (r1 I:com.google.android.exoplayer2.Format) = \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.sampleFormat com.google.android.exoplayer2.Format \l0x001c: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput)\l  (r1 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.extractor.TrackOutput.format(com.google.android.exoplayer2.Format):void type: INTERFACE \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.bind((r2 'this' I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider A[D('trackOutputProvider' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001f: r3 'trackOutputProvider' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_2;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_2;
}

