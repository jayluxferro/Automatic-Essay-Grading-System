digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.\<init\>(IILcom\/google\/android\/exoplayer2\/Format;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:int A[D('id' int)])\l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.id int \l0x0005: IPUT  \l  (r2 I:int A[D('type' int)])\l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.type int \l0x0007: IPUT  \l  (r3 I:com.google.android.exoplayer2.Format A[D('manifestFormat' com.google.android.exoplayer2.Format)])\l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.manifestFormat com.google.android.exoplayer2.Format \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.\<init\>((r0 'this' I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.android.exoplayer2.Format A[D('manifestFormat' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0009: r1 'id' int\l  ?\-0x0009: r2 'type' int\l  ?\-0x0009: r3 'manifestFormat' com.google.android.exoplayer2.Format\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

