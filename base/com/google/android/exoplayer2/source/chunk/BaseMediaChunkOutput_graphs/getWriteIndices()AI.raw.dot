digraph "CFG forcom.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput.getWriteIndices()[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput[]) = \l  (r3 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput)\l com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput.trackOutputs com.google.android.exoplayer2.extractor.DefaultTrackOutput[] \l0x0002: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x0003: NEW_ARRAY  (r1 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IGET  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput[]) = \l  (r3 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput)\l com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput.trackOutputs com.google.android.exoplayer2.extractor.DefaultTrackOutput[] \l0x0008: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput[]) = \l  (r3 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput)\l com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput.trackOutputs com.google.android.exoplayer2.extractor.DefaultTrackOutput[] \l0x000d: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r2 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001b \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IGET  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput[]) = \l  (r3 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput)\l com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput.trackOutputs com.google.android.exoplayer2.extractor.DefaultTrackOutput[] \l0x0013: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r2 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0015: INVOKE  (r2 I:int) = \l  (r2 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.getWriteIndex():int type: VIRTUAL \l0x0019: APUT  \l  (r1 I:?[int, float][] A[D('writeIndices' int[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r2 I:?[int, float])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN  (r1 I:int[] A[D('writeIndices' int[])]) \l}"];
MethodNode[shape=record,label="{public int[] com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput.getWriteIndices((r3 'this' I:com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0006\-0x001e: r0 'i' int\l  0x0005\-0x001e: r1 'writeIndices' int[]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

