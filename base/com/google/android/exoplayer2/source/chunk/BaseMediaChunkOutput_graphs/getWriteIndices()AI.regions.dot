digraph "CFG forcom.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput.getWriteIndices()[I" {
subgraph cluster_Region_1119595361 {
label = "R(3:0|(2:(1:5)(0)|6)|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int[] int[] r1 = new int[r3.trackOutputs.length]\lint r0 = 0\l}"];
subgraph cluster_LoopRegion_265194820 {
label = "LOOP:0: (2:(1:5)(0)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|if (r0 \< r3.trackOutputs.length) goto L_0x000b\l}"];
subgraph cluster_Region_414855975 {
label = "R(2:(1:5)(0)|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_121992178 {
label = "IF [B:4:0x000f] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r3.trackOutputs[r0] != null) goto L_0x0011\l}"];
subgraph cluster_Region_591663201 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|r1[r0] = r3.trackOutputs[r0].getWriteIndex()\l}"];
}
subgraph cluster_Region_487608320 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_6 [shape=record,label="{6\:\ 0x001b|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:6:0x001b\l|r0++\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|return r1\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:0:0x0000, B:6:0x001b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:6:0x001b\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001e|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001b|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int[] com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput.getWriteIndices((r3v0 'this' com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_8 -> Node_7;
Node_9 -> Node_6;
Node_10 -> Node_6;
}

