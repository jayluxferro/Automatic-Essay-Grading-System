digraph "CFG forcom.google.android.exoplayer2.source.chunk.DataChunk.maybeExpandData()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:byte[]) = (r2 I:com.google.android.exoplayer2.source.chunk.DataChunk) com.google.android.exoplayer2.source.chunk.DataChunk.data byte[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (16384(0x4000, float:2.2959E\-41) ?[int, float, short, byte, char])\l \l0x0006: NEW_ARRAY  (r0 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0008: IPUT  \l  (r0 I:byte[])\l  (r2 I:com.google.android.exoplayer2.source.chunk.DataChunk)\l com.google.android.exoplayer2.source.chunk.DataChunk.data byte[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r0 I:byte[]) = (r2 I:com.google.android.exoplayer2.source.chunk.DataChunk) com.google.android.exoplayer2.source.chunk.DataChunk.data byte[] \l0x000d: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x000e: IGET  (r1 I:int) = (r2 I:com.google.android.exoplayer2.source.chunk.DataChunk) com.google.android.exoplayer2.source.chunk.DataChunk.limit int \l0x0010: ARITH  (r1 I:int) = (r1 I:int) + (16384 int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IGET  (r0 I:byte[]) = (r2 I:com.google.android.exoplayer2.source.chunk.DataChunk) com.google.android.exoplayer2.source.chunk.DataChunk.data byte[] \l0x0016: IGET  (r1 I:byte[]) = (r2 I:com.google.android.exoplayer2.source.chunk.DataChunk) com.google.android.exoplayer2.source.chunk.DataChunk.data byte[] \l0x0018: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l0x0019: ARITH  (r1 I:int) = (r1 I:int) + (16384 int) \l0x001b: INVOKE  (r0 I:byte[]) = (r0 I:byte[]), (r1 I:int) java.util.Arrays.copyOf(byte[], int):byte[] type: STATIC \l0x001f: IPUT  \l  (r0 I:byte[])\l  (r2 I:com.google.android.exoplayer2.source.chunk.DataChunk)\l com.google.android.exoplayer2.source.chunk.DataChunk.data byte[] \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.source.chunk.DataChunk.maybeExpandData((r2 'this' I:com.google.android.exoplayer2.source.chunk.DataChunk A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_3;
Node_5 -> Node_6[style=dashed];
Node_6 -> Node_3;
}

