digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.endTracks()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.exoplayer2.Format[] r1 = new com.google.android.exoplayer2.Format[r3.bindingTrackOutputs.size()]\lr0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:0:0x0000, B:3:0x0011] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:3:0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|if (r0 \>= r3.bindingTrackOutputs.size()) goto L_0x0020\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|LOOP_END\lLOOP:0: B:1:0x0009\-\>B:3:0x0011\l|r1[r0] = r3.bindingTrackOutputs.valueAt(r0).sampleFormat\lint r0 = r0 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|r3.sampleFormats = r1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.endTracks((r3v0 'this' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

