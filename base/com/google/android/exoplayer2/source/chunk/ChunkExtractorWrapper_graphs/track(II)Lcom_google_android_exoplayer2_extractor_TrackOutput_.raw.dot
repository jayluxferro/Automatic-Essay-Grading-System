digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.track(II)Lcom\/google\/android\/exoplayer2\/extractor\/TrackOutput;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:android.util.SparseArray\<com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput\>) = \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.bindingTrackOutputs android.util.SparseArray \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r1 I:android.util.SparseArray), (r3 I:int A[D('id' int)]) android.util.SparseArray.get(int):java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput) = (com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('bindingTrackOutput' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r1 I:com.google.android.exoplayer2.Format[]) = \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.sampleFormats com.google.android.exoplayer2.Format[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r1 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x0012: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput A[D('bindingTrackOutput' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)]) =  com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput \l0x0014: IGET  (r1 I:com.google.android.exoplayer2.Format) = \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.manifestFormat com.google.android.exoplayer2.Format \l0x0016: INVOKE  \l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)\l  (r3 I:int A[D('id' int)])\l  (r4 I:int A[D('type' int)])\l  (r1 I:com.google.android.exoplayer2.Format)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.\<init\>(int, int, com.google.android.exoplayer2.Format):void type: DIRECT \l0x0019: IGET  (r1 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider) = \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.trackOutputProvider com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider \l0x001b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput A[D('bindingTrackOutput' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)])\l  (r1 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.BindingTrackOutput.bind(com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$TrackOutputProvider):void type: VIRTUAL \l0x001e: IGET  (r1 I:android.util.SparseArray\<com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput\>) = \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.bindingTrackOutputs android.util.SparseArray \l0x0020: INVOKE  \l  (r1 I:android.util.SparseArray)\l  (r3 I:int A[D('id' int)])\l  (r0 I:java.lang.Object A[D('bindingTrackOutput' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)])\l android.util.SparseArray.put(int, java.lang.Object):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: RETURN  \l  (r0 I:com.google.android.exoplayer2.extractor.TrackOutput A[D('bindingTrackOutput' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.extractor.TrackOutput com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.track((r2 'this' I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[D('id' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[D('type' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0008\-0x0014: r0 'bindingTrackOutput' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput\l  0x0019\-0x0025: r0 'bindingTrackOutput' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper$BindingTrackOutput\l  ?\-0x0025: r3 'id' int\l  ?\-0x0025: r4 'type' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_5;
}

