digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkSampleStream.discardDownstreamMediaChunks(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IGET  (r1 I:java.util.LinkedList\<com.google.android.exoplayer2.source.chunk.BaseMediaChunk\>) = \l  (r8 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.mediaChunks java.util.LinkedList \l0x0003: INVOKE  (r1 I:int) = (r1 I:java.util.LinkedList) java.util.LinkedList.size():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r1 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r1 I:java.util.LinkedList\<com.google.android.exoplayer2.source.chunk.BaseMediaChunk\>) = \l  (r8 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.mediaChunks java.util.LinkedList \l0x000b: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.LinkedList), (r4 I:int) java.util.LinkedList.get(int):java.lang.Object type: VIRTUAL \l0x000f: CHECK_CAST  (r1 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunk) = (com.google.android.exoplayer2.source.chunk.BaseMediaChunk) (r1 I:?[OBJECT, ARRAY]) \l0x0011: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: INVOKE  (r1 I:int) = \l  (r1 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunk)\l  (r2 I:int)\l com.google.android.exoplayer2.source.chunk.BaseMediaChunk.getFirstSampleIndex(int):int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r1 I:?[int, byte, short, char]) \> (r9 I:?[int, byte, short, char] A[D('primaryStreamReadIndex' int)])  \-\> B:6:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IGET  (r1 I:java.util.LinkedList\<com.google.android.exoplayer2.source.chunk.BaseMediaChunk\>) = \l  (r8 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.mediaChunks java.util.LinkedList \l0x001a: INVOKE  (r1 I:java.util.LinkedList) java.util.LinkedList.removeFirst():java.lang.Object type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IGET  (r1 I:java.util.LinkedList\<com.google.android.exoplayer2.source.chunk.BaseMediaChunk\>) = \l  (r8 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.mediaChunks java.util.LinkedList \l0x0020: INVOKE  (r0 I:java.lang.Object) = (r1 I:java.util.LinkedList) java.util.LinkedList.getFirst():java.lang.Object type: VIRTUAL \l0x0024: CHECK_CAST  (r0 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunk) = (com.google.android.exoplayer2.source.chunk.BaseMediaChunk) (r0 I:?[OBJECT, ARRAY]) \l0x0026: IGET  (r3 I:com.google.android.exoplayer2.Format) = \l  (r0 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunk A[D('currentChunk' com.google.android.exoplayer2.source.chunk.BaseMediaChunk)])\l com.google.android.exoplayer2.source.chunk.BaseMediaChunk.trackFormat com.google.android.exoplayer2.Format \l0x0028: IGET  (r1 I:com.google.android.exoplayer2.Format) = \l  (r8 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.primaryDownstreamTrackFormat com.google.android.exoplayer2.Format \l0x002a: INVOKE  (r1 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.Format A[D('trackFormat' com.google.android.exoplayer2.Format)])\l  (r1 I:java.lang.Object)\l com.google.android.exoplayer2.Format.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IGET  (r1 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher) = \l  (r8 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.eventDispatcher com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher \l0x0032: IGET  (r2 I:int) = \l  (r8 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.primaryTrackType int \l0x0034: IGET  (r4 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunk A[D('currentChunk' com.google.android.exoplayer2.source.chunk.BaseMediaChunk)])\l com.google.android.exoplayer2.source.chunk.BaseMediaChunk.trackSelectionReason int \l0x0036: IGET  (r5 I:java.lang.Object) = \l  (r0 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunk A[D('currentChunk' com.google.android.exoplayer2.source.chunk.BaseMediaChunk)])\l com.google.android.exoplayer2.source.chunk.BaseMediaChunk.trackSelectionData java.lang.Object \l0x0038: IGET  (r6 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.chunk.BaseMediaChunk A[D('currentChunk' com.google.android.exoplayer2.source.chunk.BaseMediaChunk)])\l com.google.android.exoplayer2.source.chunk.BaseMediaChunk.startTimeUs long \l0x003a: INVOKE  \l  (r1 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher)\l  (r2 I:int)\l  (r3 I:com.google.android.exoplayer2.Format A[D('trackFormat' com.google.android.exoplayer2.Format)])\l  (r4 I:int)\l  (r5 I:java.lang.Object)\l  (r6 I:long)\l com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.downstreamFormatChanged(int, com.google.android.exoplayer2.Format, int, java.lang.Object, long):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: IPUT  \l  (r3 I:com.google.android.exoplayer2.Format A[D('trackFormat' com.google.android.exoplayer2.Format)])\l  (r8 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.primaryDownstreamTrackFormat com.google.android.exoplayer2.Format \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|0x003f: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.source.chunk.ChunkSampleStream.discardDownstreamMediaChunks((r8 'this' I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('primaryStreamReadIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0026\-0x003f: r0 'currentChunk' com.google.android.exoplayer2.source.chunk.BaseMediaChunk\l  0x0028\-0x003f: r3 'trackFormat' com.google.android.exoplayer2.Format\l  0x0000\-0x003f: r8 'this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>\l  ?\-0x003f: r9 'primaryStreamReadIndex' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

