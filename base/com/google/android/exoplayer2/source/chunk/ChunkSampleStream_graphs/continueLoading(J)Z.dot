digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkSampleStream.continueLoading(J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r19.loadingFinished != false) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r19.loader.isLoading() == false) goto L_0x0012\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|T r4 = r19.chunkSource\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|if (r19.mediaChunks.isEmpty() == false) goto L_0x005b\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|r3 = null\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|PHI: r3 \l  PHI: (r3v9 com.google.android.exoplayer2.source.chunk.BaseMediaChunk) = (r3v8 com.google.android.exoplayer2.source.chunk.BaseMediaChunk), (r3v22 com.google.android.exoplayer2.source.chunk.BaseMediaChunk) binds: [B:14:0x005b, B:7:0x0020] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|if ((r19.pendingResetPositionUs \> com.google.android.exoplayer2.C1260C.TIME_UNSET ? 1 : (r19.pendingResetPositionUs == com.google.android.exoplayer2.C1260C.TIME_UNSET ? 0 : \-1)) == 0) goto L_0x0034\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|r20 = r19.pendingResetPositionUs\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|PHI: r20 \l  PHI: (r20v1 'positionUs' long) = (r20v0 'positionUs' long), (r20v2 'positionUs' long) binds: [B:9:0x002c, B:10:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.source.chunk.ChunkHolder r5 = r19.nextChunkHolder\lr4.getNextChunk(r3, r20, r5)\lboolean r2 = r19.nextChunkHolder.endOfStream\lr16 = r19.nextChunkHolder.chunk\lr19.nextChunkHolder.clear()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|if (r2 == false) goto L_0x0066\l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|r19.loadingFinished = true\l}"];
Node_14 [shape=record,label="{14\:\ 0x005b|com.google.android.exoplayer2.source.chunk.BaseMediaChunk r3 = r19.mediaChunks.getLast()\l}"];
Node_15 [shape=record,label="{15\:\ 0x0066|if (r16 != null) goto L_0x006a\l}"];
Node_16 [shape=record,label="{16\:\ 0x0068|SYNTHETIC\lRETURN\l|return false\l}"];
Node_17 [shape=record,label="{17\:\ 0x006a}"];
Node_18 [shape=record,label="{18\:\ 0x0072|if (isMediaChunk(r16) == false) goto L_0x0093\l}"];
Node_19 [shape=record,label="{19\:\ 0x0074|r19.pendingResetPositionUs = com.google.android.exoplayer2.C1260C.TIME_UNSET\lcom.google.android.exoplayer2.source.chunk.BaseMediaChunk r17 = (com.google.android.exoplayer2.source.chunk.BaseMediaChunk) r16\lcom.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput r3 = r19.mediaChunkOutput\lr17.init(r3)\lr19.mediaChunks.add(r17)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0093|com.google.android.exoplayer2.upstream.Loader r3 = r19.loader\lint r4 = r19.minLoadableRetryCount\llong r14 = r3.startLoading(r16, r19, r4)\lr19.eventDispatcher.loadStarted(r16.dataSpec, r16.type, r19.primaryTrackType, r16.trackFormat, r16.trackSelectionReason, r16.trackSelectionData, r16.startTimeUs, r16.endTimeUs, r14)\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.source.chunk.ChunkSampleStream.continueLoading((r19v0 'this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[IMMUTABLE_TYPE, THIS]), (r20v0 'positionUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_21;
Node_14 -> Node_8;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_22;
}

