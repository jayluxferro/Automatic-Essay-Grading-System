digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkSampleStream.getNextLoadPositionUs()J" {
subgraph cluster_Region_2089749784 {
label = "R(1:(2:(1:7)|(1:(2:(1:5)|(1:8)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1126681745 {
label = "R(2:(1:7)|(1:(2:(1:5)|(1:8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_639288809 {
label = "IF [B:1:0x0004] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (isPendingReset() == true) goto L_0x0006\l}"];
subgraph cluster_Region_575353904 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r2.pendingResetPositionUs\l}"];
}
}
subgraph cluster_Region_640162476 {
label = "R(1:(2:(1:5)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1528170940 {
label = "R(2:(1:5)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_726903482 {
label = "IF [B:4:0x000b] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r2.loadingFinished == true) goto L_0x000d\l}"];
subgraph cluster_Region_1354948948 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|SYNTHETIC\lRETURN\l|return Long.MIN_VALUE\l}"];
}
}
subgraph cluster_Region_920222874 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return r2.mediaChunks.getLast().endTimeUs\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0009}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0010}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.source.chunk.ChunkSampleStream.getNextLoadPositionUs((r2v0 'this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_0 -> Node_1;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_6 -> Node_8;
}

