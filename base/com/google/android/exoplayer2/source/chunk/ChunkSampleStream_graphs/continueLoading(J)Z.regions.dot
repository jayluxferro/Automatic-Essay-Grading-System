digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkSampleStream.continueLoading(J)Z" {
subgraph cluster_Region_1270054670 {
label = "R(1:(2:(1:4)|(5:5|(1:7)(1:14)|(1:10)|11|(2:13|21)(1:(1:16)(3:(1:19)|20|22))))) | DECL_VAR: com.google.android.exoplayer2.source.chunk.BaseMediaChunk null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1573320194 {
label = "R(2:(1:4)|(5:5|(1:7)(1:14)|(1:10)|11|(2:13|21)(1:(1:16)(3:(1:19)|20|22))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_739612764 {
label = "IF [B:1:0x0004, B:3:0x000e] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r19.loadingFinished == true) goto L_0x0010\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|ADDED_TO_REGION\l|if (r19.loader.isLoading() == true) goto L_0x0010\l}"];
subgraph cluster_Region_1589321930 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_826965162 {
label = "R(5:5|(1:7)(1:14)|(1:10)|11|(2:13|21)(1:(1:16)(3:(1:19)|20|22)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|T T r4 = r19.chunkSource\l}"];
subgraph cluster_IfRegion_237010716 {
label = "IF [B:6:0x001e] THEN: R(1:7) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001e|if (r19.mediaChunks.isEmpty() == true) goto L_0x0020\l}"];
subgraph cluster_Region_1906309721 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0020|r3 = null\l}"];
}
subgraph cluster_Region_606093986 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x005b|com.google.android.exoplayer2.source.chunk.BaseMediaChunk r3 = r19.mediaChunks.getLast()\l}"];
}
}
subgraph cluster_IfRegion_1690103356 {
label = "IF [B:9:0x002c] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002c|if (r19.pendingResetPositionUs != com.google.android.exoplayer2.C1260C.TIME_UNSET) goto L_0x002e\l}"];
subgraph cluster_Region_1684757903 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002e|r20 = r19.pendingResetPositionUs\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0034|PHI: r20 \l  PHI: (r20v1 'positionUs' long) = (r20v0 'positionUs' long), (r20v2 'positionUs' long) binds: [B:9:0x002c, B:10:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|r4.getNextChunk(r3, r20, r19.nextChunkHolder)\lboolean boolean r2 = r19.nextChunkHolder.endOfStream\lcom.google.android.exoplayer2.source.chunk.Chunk r16 = r19.nextChunkHolder.chunk\lr19.nextChunkHolder.clear()\l}"];
subgraph cluster_IfRegion_1518990428 {
label = "IF [B:12:0x0052] THEN: R(2:13|21) ELSE: R(1:(1:16)(3:(1:19)|20|22))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0052|if (r2 == true) goto L_0x0054\l}"];
subgraph cluster_Region_1674677432 {
label = "R(2:13|21)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0054|r19.loadingFinished = true\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
subgraph cluster_Region_1845811009 {
label = "R(1:(1:16)(3:(1:19)|20|22)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_952401035 {
label = "IF [B:15:0x0066] THEN: R(1:16) ELSE: R(3:(1:19)|20|22) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0066|if (r16 == null) goto L_0x0068\l}"];
subgraph cluster_Region_1841957299 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0068|SYNTHETIC\lRETURN\l|return false\l}"];
}
subgraph cluster_Region_86658440 {
label = "R(3:(1:19)|20|22)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_509021283 {
label = "IF [B:18:0x0072] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0072|if (isMediaChunk(r16) == true) goto L_0x0074\l}"];
subgraph cluster_Region_269775042 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0074|r19.pendingResetPositionUs = com.google.android.exoplayer2.C1260C.TIME_UNSET\lcom.google.android.exoplayer2.source.chunk.BaseMediaChunk com.google.android.exoplayer2.source.chunk.BaseMediaChunk r17 = (com.google.android.exoplayer2.source.chunk.BaseMediaChunk) r16\lr17.init(r19.mediaChunkOutput)\lr19.mediaChunks.add(r17)\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x0093|r19.eventDispatcher.loadStarted(r16.dataSpec, r16.type, r19.primaryTrackType, r16.trackFormat, r16.trackSelectionReason, r16.trackSelectionData, r16.startTimeUs, r16.endTimeUs, r19.loader.startLoading(r16, r19, r19.minLoadableRetryCount))\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0021|PHI: r3 \l  PHI: (r3v9 com.google.android.exoplayer2.source.chunk.BaseMediaChunk) = (r3v8 com.google.android.exoplayer2.source.chunk.BaseMediaChunk), (r3v22 com.google.android.exoplayer2.source.chunk.BaseMediaChunk) binds: [B:14:0x005b, B:7:0x0020] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x006a}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.source.chunk.ChunkSampleStream.continueLoading((r19v0 'this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[IMMUTABLE_TYPE, THIS]), (r20v0 'positionUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_14[style=dashed];
Node_7 -> Node_8;
Node_14 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_15[style=dashed];
Node_13 -> Node_21;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_8 -> Node_9;
Node_17 -> Node_18;
}

