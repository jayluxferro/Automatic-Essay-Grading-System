digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkSampleStream.seekToUs(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4 = 0\lr9.lastSeekPositionUs = r10\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (isPendingReset() != false) goto L_0x0042\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|com.google.android.exoplayer2.extractor.DefaultTrackOutput r5 = r9.primarySampleQueue\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if ((r10 \> getNextLoadPositionUs() ? 1 : (r10 == getNextLoadPositionUs() ? 0 : \-1)) \>= 0) goto L_0x0040\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|r2 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|PHI: r2 \l  PHI: (r2v17 boolean) = (r2v16 boolean), (r2v19 boolean) binds: [B:14:0x0040, B:4:0x0014] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|if (r5.skipToKeyframeBefore(r10, r2) == false) goto L_0x0042\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|r1 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|PHI: r1 \l  PHI: (r1v1 'seekInsideBuffer' boolean) = (r1v0 'seekInsideBuffer' boolean), (r1v2 'seekInsideBuffer' boolean) binds: [B:15:0x0042, B:7:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_0x0051\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|LOOP_START\lLOOP:0: B:9:0x001e\-\>B:13:0x003a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|if (r9.mediaChunks.size() \<= 1) goto L_0x0044\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026}"];
Node_12 [shape=record,label="{12\:\ 0x0038|if (r9.mediaChunks.get(1).getFirstSampleIndex(0) \> r9.primarySampleQueue.getReadIndex()) goto L_0x0044\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|LOOP_END\lLOOP:0: B:9:0x001e\-\>B:13:0x003a\l|r9.mediaChunks.removeFirst()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|r2 = false\l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|r1 = false\l}"];
Node_16 [shape=record,label="{16\:\ 0x0044|com.google.android.exoplayer2.extractor.DefaultTrackOutput[] r2 = r9.embeddedSampleQueues\lint r5 = r2.length\l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|LOOP_START\lPHI: r4 \l  PHI: (r4v3 int) = (r4v0 int), (r4v4 int) binds: [B:16:0x0044, B:18:0x0049] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:17:0x0047\-\>B:18:0x0049\l|if (r4 \>= r5) goto L_0x0067\l}"];
Node_18 [shape=record,label="{18\:\ 0x0049|LOOP_END\lLOOP:1: B:17:0x0047\-\>B:18:0x0049\l|r2[r4].skipToKeyframeBefore(r10, true)\lint r4 = r4 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0051|r9.pendingResetPositionUs = r10\lr9.loadingFinished = false\lr9.mediaChunks.clear()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0060|if (r9.loader.isLoading() == false) goto L_0x0068\l}"];
Node_21 [shape=record,label="{21\:\ 0x0062|r9.loader.cancelLoading()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0068|r9.primarySampleQueue.reset(true)\lcom.google.android.exoplayer2.extractor.DefaultTrackOutput[] r2 = r9.embeddedSampleQueues\lint r5 = r2.length\l}"];
Node_23 [shape=record,label="{23\:\ 0x0070|LOOP_START\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:22:0x0068, B:24:0x0072] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:23:0x0070\-\>B:24:0x0072\l|if (r4 \>= r5) goto L_0x0067\l}"];
Node_24 [shape=record,label="{24\:\ 0x0072|LOOP_END\lLOOP:2: B:23:0x0070\-\>B:24:0x0072\l|r2[r4].reset(true)\lint r4 = r4 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0044|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0044|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0067|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0067|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.chunk.ChunkSampleStream.seekToUs((r9v0 'this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[IMMUTABLE_TYPE, THIS]), (r10v0 'positionUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_25;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_26;
Node_13 -> Node_9;
Node_14 -> Node_5;
Node_15 -> Node_8;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_17;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_23;
Node_25 -> Node_16;
Node_26 -> Node_16;
Node_27 -> Node_30;
Node_28 -> Node_31;
}

