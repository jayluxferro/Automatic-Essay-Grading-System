digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkSampleStream.onLoadCompleted(Lcom\/google\/android\/exoplayer2\/source\/chunk\/Chunk;JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l \l0x0002: IGET  (r2 I:T) = \l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream)\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.chunkSource com.google.android.exoplayer2.source.chunk.ChunkSource \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('loadable' com.google.android.exoplayer2.source.chunk.Chunk)])\l \l0x0006: INVOKE  \l  (r2 I:com.google.android.exoplayer2.source.chunk.ChunkSource)\l  (r0 I:com.google.android.exoplayer2.source.chunk.Chunk)\l com.google.android.exoplayer2.source.chunk.ChunkSource.onChunkLoadCompleted(com.google.android.exoplayer2.source.chunk.Chunk):void type: INTERFACE \l0x0009: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l \l0x000b: IGET  (r3 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher) = \l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream)\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.eventDispatcher com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher \l0x000d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('loadable' com.google.android.exoplayer2.source.chunk.Chunk)])\l \l0x000f: IGET  (r4 I:com.google.android.exoplayer2.upstream.DataSpec) = (r0 I:com.google.android.exoplayer2.source.chunk.Chunk) com.google.android.exoplayer2.source.chunk.Chunk.dataSpec com.google.android.exoplayer2.upstream.DataSpec \l0x0011: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('loadable' com.google.android.exoplayer2.source.chunk.Chunk)])\l \l0x0013: IGET  (r5 I:int) = (r0 I:com.google.android.exoplayer2.source.chunk.Chunk) com.google.android.exoplayer2.source.chunk.Chunk.type int \l0x0015: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l \l0x0017: IGET  (r6 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream)\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.primaryTrackType int \l0x0019: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('loadable' com.google.android.exoplayer2.source.chunk.Chunk)])\l \l0x001b: IGET  (r7 I:com.google.android.exoplayer2.Format) = (r0 I:com.google.android.exoplayer2.source.chunk.Chunk) com.google.android.exoplayer2.source.chunk.Chunk.trackFormat com.google.android.exoplayer2.Format \l0x001d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('loadable' com.google.android.exoplayer2.source.chunk.Chunk)])\l \l0x001f: IGET  (r8 I:int) = (r0 I:com.google.android.exoplayer2.source.chunk.Chunk) com.google.android.exoplayer2.source.chunk.Chunk.trackSelectionReason int \l0x0021: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('loadable' com.google.android.exoplayer2.source.chunk.Chunk)])\l \l0x0023: IGET  (r9 I:java.lang.Object) = (r0 I:com.google.android.exoplayer2.source.chunk.Chunk) com.google.android.exoplayer2.source.chunk.Chunk.trackSelectionData java.lang.Object \l0x0025: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('loadable' com.google.android.exoplayer2.source.chunk.Chunk)])\l \l0x0027: IGET  (r10 I:long) = (r0 I:com.google.android.exoplayer2.source.chunk.Chunk) com.google.android.exoplayer2.source.chunk.Chunk.startTimeUs long \l0x0029: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('loadable' com.google.android.exoplayer2.source.chunk.Chunk)])\l \l0x002b: IGET  (r12 I:long) = (r0 I:com.google.android.exoplayer2.source.chunk.Chunk) com.google.android.exoplayer2.source.chunk.Chunk.endTimeUs long \l0x002d: INVOKE  (r18 I:long) = \l  (r21 I:com.google.android.exoplayer2.source.chunk.Chunk A[D('loadable' com.google.android.exoplayer2.source.chunk.Chunk)])\l com.google.android.exoplayer2.source.chunk.Chunk.bytesLoaded():long type: VIRTUAL \l0x0031: MOVE  (r14 I:?[long, double]) = (r22 I:?[long, double] A[D('elapsedRealtimeMs' long)]) \l0x0033: MOVE  (r16 I:?[long, double]) = (r24 I:?[long, double] A[D('loadDurationMs' long)]) \l0x0035: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher)\l  (r4 I:com.google.android.exoplayer2.upstream.DataSpec)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:com.google.android.exoplayer2.Format)\l  (r8 I:int)\l  (r9 I:java.lang.Object)\l  (r10 I:long)\l  (r12 I:long)\l  (r14 I:long)\l  (r16 I:long)\l  (r18 I:long)\l com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.loadCompleted(com.google.android.exoplayer2.upstream.DataSpec, int, int, com.google.android.exoplayer2.Format, int, java.lang.Object, long, long, long, long, long):void type: VIRTUAL \l0x0038: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l \l0x003a: IGET  (r2 I:com.google.android.exoplayer2.source.SequenceableLoader$Callback\<com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>\>) = \l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream)\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.callback com.google.android.exoplayer2.source.SequenceableLoader$Callback \l0x003c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>)])\l \l0x003e: INVOKE  \l  (r2 I:com.google.android.exoplayer2.source.SequenceableLoader$Callback)\l  (r0 I:com.google.android.exoplayer2.source.SequenceableLoader)\l com.google.android.exoplayer2.source.SequenceableLoader.Callback.onContinueLoadingRequested(com.google.android.exoplayer2.source.SequenceableLoader):void type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0041|0x0041: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.chunk.ChunkSampleStream.onLoadCompleted((r20 'this' I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream A[IMMUTABLE_TYPE, THIS]), (r21 I:com.google.android.exoplayer2.source.chunk.Chunk A[D('loadable' com.google.android.exoplayer2.source.chunk.Chunk), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:long A[D('elapsedRealtimeMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:long A[D('loadDurationMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0000\-0x0041: r20 'this' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<T\>\l  ?\-0x0041: r21 'loadable' com.google.android.exoplayer2.source.chunk.Chunk\l  ?\-0x0041: r22 'elapsedRealtimeMs' long\l  ?\-0x0041: r24 'loadDurationMs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

