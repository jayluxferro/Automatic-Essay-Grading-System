digraph "CFG forcom.google.android.exoplayer2.source.chunk.ChunkedTrackBlacklistUtil.maybeBlacklistTrack(Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;ILjava\/lang\/Exception;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (shouldBlacklist(r7) == false) goto L_0x0068\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|boolean r0 = r5.blacklist(r6, r8)\lint r1 = ((com.google.android.exoplayer2.upstream.HttpDataSource.InvalidResponseCodeException) r7).responseCode\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r0 == false) goto L_0x0041\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|android.util.Log.w(TAG, new java.lang.StringBuilder().append(\"Blacklisted: duration=\").append(r8).append(\", responseCode=\").append(r1).append(\", format=\").append(r5.getFormat(r6)).toString())\l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|android.util.Log.w(TAG, new java.lang.StringBuilder().append(\"Blacklisting failed (cannot blacklist last enabled track): responseCode=\").append(r1).append(\", format=\").append(r5.getFormat(r6)).toString())\l}"];
Node_6 [shape=record,label="{6\:\ 0x0068|SYNTHETIC\lRETURN\l|return false\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public static boolean com.google.android.exoplayer2.source.chunk.ChunkedTrackBlacklistUtil.maybeBlacklistTrack((r5v0 'trackSelection' com.google.android.exoplayer2.trackselection.TrackSelection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'trackSelectionIndex' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'e' java.lang.Exception A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'blacklistDurationMs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_8;
}

