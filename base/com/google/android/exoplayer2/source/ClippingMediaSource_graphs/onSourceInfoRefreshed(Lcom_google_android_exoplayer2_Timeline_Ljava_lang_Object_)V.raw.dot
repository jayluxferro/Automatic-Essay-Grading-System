digraph "CFG forcom.google.android.exoplayer2.source.ClippingMediaSource.onSourceInfoRefreshed(Lcom\/google\/android\/exoplayer2\/Timeline;Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline) =  com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline \l0x0002: IGET  (r2 I:long) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaSource)\l com.google.android.exoplayer2.source.ClippingMediaSource.startUs long \l0x0004: IGET  (r4 I:long) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaSource)\l com.google.android.exoplayer2.source.ClippingMediaSource.endUs long \l0x0006: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY] A[D('timeline' com.google.android.exoplayer2.Timeline)])\l \l0x0007: INVOKE  \l  (r0 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline)\l  (r1 I:com.google.android.exoplayer2.Timeline)\l  (r2 I:long)\l  (r4 I:long)\l com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.\<init\>(com.google.android.exoplayer2.Timeline, long, long):void type: DIRECT \l0x000a: IPUT  \l  (r0 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline)\l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaSource)\l com.google.android.exoplayer2.source.ClippingMediaSource.clippingTimeline com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline \l0x000c: IGET  (r0 I:com.google.android.exoplayer2.source.MediaSource$Listener) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaSource)\l com.google.android.exoplayer2.source.ClippingMediaSource.sourceListener com.google.android.exoplayer2.source.MediaSource$Listener \l0x000e: IGET  (r1 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaSource)\l com.google.android.exoplayer2.source.ClippingMediaSource.clippingTimeline com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline \l0x0010: INVOKE  \l  (r0 I:com.google.android.exoplayer2.source.MediaSource$Listener)\l  (r1 I:com.google.android.exoplayer2.Timeline)\l  (r14 I:java.lang.Object A[D('manifest' java.lang.Object)])\l com.google.android.exoplayer2.source.MediaSource.Listener.onSourceInfoRefreshed(com.google.android.exoplayer2.Timeline, java.lang.Object):void type: INTERFACE \l0x0013: IGET  (r0 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaSource)\l com.google.android.exoplayer2.source.ClippingMediaSource.clippingTimeline com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline \l0x0015: INVOKE  (r10 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline)\l com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.access$000(com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline):long type: STATIC \l0x0019: IGET  (r0 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaSource)\l com.google.android.exoplayer2.source.ClippingMediaSource.clippingTimeline com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline \l0x001b: INVOKE  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline)\l com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.access$100(com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline):long type: STATIC \l0x001f: CONST  (r2 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x0024: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|0x0026: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0041 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0028|0x0028: CONST  (r8 I:?[long, double]) = (\-9223372036854775808 ?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: IGET  (r0 I:java.util.ArrayList\<com.google.android.exoplayer2.source.ClippingMediaPeriod\>) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaSource)\l com.google.android.exoplayer2.source.ClippingMediaSource.mediaPeriods java.util.ArrayList \l0x002c: INVOKE  (r6 I:int) = (r0 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0030: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: IF  (r7 I:?[int, byte, short, char] A[D('i' int)]) \>= (r6 I:?[int, byte, short, char] A[D('count' int)])  \-\> B:7:0x0048 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: IGET  (r0 I:java.util.ArrayList\<com.google.android.exoplayer2.source.ClippingMediaPeriod\>) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaSource)\l com.google.android.exoplayer2.source.ClippingMediaSource.mediaPeriods java.util.ArrayList \l0x0035: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.ArrayList), (r7 I:int A[D('i' int)]) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0039: CHECK_CAST  (r0 I:com.google.android.exoplayer2.source.ClippingMediaPeriod) = (com.google.android.exoplayer2.source.ClippingMediaPeriod) (r0 I:?[OBJECT, ARRAY]) \l0x003b: INVOKE  \l  (r0 I:com.google.android.exoplayer2.source.ClippingMediaPeriod)\l  (r10 I:long A[D('startUs' long)])\l  (r8 I:long A[D('endUs' long)])\l com.google.android.exoplayer2.source.ClippingMediaPeriod.setClipping(long, long):void type: VIRTUAL \l0x003e: ARITH  (r7 I:int A[D('i' int)]) = (r7 I:int A[D('i' int)]) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0041|0x0041: IGET  (r0 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaSource)\l com.google.android.exoplayer2.source.ClippingMediaSource.clippingTimeline com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline \l0x0043: INVOKE  (r8 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline)\l com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.access$100(com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline):long type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0048|0x0048: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.ClippingMediaSource.onSourceInfoRefreshed((r12 'this' I:com.google.android.exoplayer2.source.ClippingMediaSource A[IMMUTABLE_TYPE, THIS]), (r13 I:com.google.android.exoplayer2.Timeline A[D('timeline' com.google.android.exoplayer2.Timeline), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.lang.Object A[D('manifest' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0030\-0x0041: r6 'count' int\l  0x0031\-0x0041: r7 'i' int\l  0x002a\-0x0041: r8 'endUs' long\l  0x0048\-0x0048: r6 'count' int\l  0x0048\-0x0048: r7 'i' int\l  0x0048\-0x0048: r8 'endUs' long\l  0x0019\-0x0048: r10 'startUs' long\l  ?\-0x0048: r13 'timeline' com.google.android.exoplayer2.Timeline\l  ?\-0x0048: r14 'manifest' java.lang.Object\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_4;
Node_6 -> Node_3;
}

