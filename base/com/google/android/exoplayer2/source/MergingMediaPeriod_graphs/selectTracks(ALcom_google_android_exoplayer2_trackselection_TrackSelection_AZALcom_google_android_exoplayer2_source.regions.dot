digraph "CFG forcom.google.android.exoplayer2.source.MergingMediaPeriod.selectTracks([Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;[Z[Lcom\/google\/android\/exoplayer2\/source\/SampleStream;[ZJ)J" {
subgraph cluster_Region_1178711188 {
label = "R(6:0|(4:(1:5)(1:15)|6|(2:8|(1:(1:65)(1:(2:13|63)(1:16))))(0)|14)|17|(8:20|(2:26|29)|32|(1:34)(1:(1:48))|35|(2:(1:43)(1:(1:55)(0))|44)|(1:58)(0)|59)|60|61) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int[] r17 = new int[r20.length]\lint[] r16 = new int[r20.length]\lint r10 = 0\l}"];
subgraph cluster_LoopRegion_1016034731 {
label = "LOOP:0: (4:(1:5)(1:15)|6|(2:8|(1:(1:65)(1:(2:13|63)(1:16))))(0)|14)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0012|if (r10 \< r20.length) goto L_0x0014\l}"];
subgraph cluster_Region_1311257966 {
label = "R(4:(1:5)(1:15)|6|(2:8|(1:(1:65)(1:(2:13|63)(1:16))))(0)|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1518099862 {
label = "IF [B:4:0x0016] THEN: R(1:5) ELSE: R(1:15)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r22[r10] == null) goto L_0x0018\l}"];
subgraph cluster_Region_1349957129 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|r3 = \-1\l}"];
}
subgraph cluster_Region_8064273 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0048|int r3 = r19.streamPeriodIndices.get(r22[r10]).intValue()\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0019|PHI: r3 \l  PHI: (r3v49 int) = (r3v48 int), (r3v59 int) binds: [B:15:0x0048, B:5:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|r17[r10] = r3\lr16[r10] = \-1\l}"];
subgraph cluster_IfRegion_856242338 {
label = "IF [B:7:0x0020] THEN: R(2:8|(1:(1:65)(1:(2:13|63)(1:16)))) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0020|if (r20[r10] != null) goto L_0x0022\l}"];
subgraph cluster_Region_1953243461 {
label = "R(2:8|(1:(1:65)(1:(2:13|63)(1:16))))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0022|com.google.android.exoplayer2.source.TrackGroup com.google.android.exoplayer2.source.TrackGroup r18 = r20[r10].getTrackGroup()\lint r11 = 0\l}"];
subgraph cluster_LoopRegion_334760344 {
label = "LOOP:1: (1:(1:65)(1:(2:13|63)(1:16)))";
node [shape=record,color=blue];
subgraph cluster_Region_188933332 {
label = "R(1:(1:65)(1:(2:13|63)(1:16)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1480018461 {
label = "IF [B:10:0x002e] THEN: R(1:65) ELSE: R(1:(2:13|63)(1:16))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002e|if (r11 \>= r19.periods.length) goto L_0x0045\l}"];
subgraph cluster_Region_1214799711 {
label = "R(1:65)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x0045|SYNTHETIC\lEDGE_INSN: B:65:0x0045\-\>B:14:0x0045 ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_1056157481 {
label = "R(1:(2:13|63)(1:16)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1699547338 {
label = "IF [B:12:0x0041] THEN: R(2:13|63) ELSE: R(1:16) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0041|if (r19.periods[r11].getTrackGroups().indexOf(r18) != \-1) goto L_0x0043\l}"];
subgraph cluster_Region_569337438 {
label = "R(2:13|63)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0043|r16[r10] = r11\l}"];
Node_63 [shape=record,label="{63\:\ 0x0045|SYNTHETIC\lEDGE_INSN: B:63:0x0045\-\>B:14:0x0045 ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_1101982309 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0059|LOOP_END\lLOOP:1: B:9:0x0029\-\>B:16:0x0059\l|r11++\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_234412454 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_14 [shape=record,label="{14\:\ 0x0045|LOOP_END\lEDGE_INSN: B:63:0x0045\-\>B:14:0x0045 ?: BREAK  \lEDGE_INSN: B:65:0x0045\-\>B:14:0x0045 ?: BREAK  \lLOOP:0: B:1:0x000f\-\>B:14:0x0045\l|r10++\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x005c|r19.streamPeriodIndices.clear()\lcom.google.android.exoplayer2.source.SampleStream[] com.google.android.exoplayer2.source.SampleStream[] r12 = new com.google.android.exoplayer2.source.SampleStream[r20.length]\lcom.google.android.exoplayer2.source.SampleStream[] com.google.android.exoplayer2.source.SampleStream[] r6 = new com.google.android.exoplayer2.source.SampleStream[r20.length]\lcom.google.android.exoplayer2.trackselection.TrackSelection[] com.google.android.exoplayer2.trackselection.TrackSelection[] r4 = new com.google.android.exoplayer2.trackselection.TrackSelection[r20.length]\ljava.util.ArrayList java.util.ArrayList\<com.google.android.exoplayer2.source.MediaPeriod\> r2 = new java.util.ArrayList\<\>(r19.periods.length)\lint r10 = 0\l}"];
subgraph cluster_LoopRegion_368401711 {
label = "LOOP:2: (8:20|(2:26|29)|32|(1:34)(1:(1:48))|35|(2:(1:43)(1:(1:55)(0))|44)|(1:58)(0)|59)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0082|if (r10 \< r19.periods.length) goto L_0x0084\l}"];
subgraph cluster_Region_336580031 {
label = "R(8:20|(2:26|29)|32|(1:34)(1:(1:48))|35|(2:(1:43)(1:(1:55)(0))|44)|(1:58)(0)|59)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0084|int r11 = 0\l}"];
subgraph cluster_LoopRegion_1488906459 {
label = "LOOP:3: (2:26|29)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0088|if (r11 \< r20.length) goto L_0x008a\l}"];
subgraph cluster_Region_1181385349 {
label = "R(2:26|29)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0090|PHI: r3 \l  PHI: (r3v38 com.google.android.exoplayer2.source.SampleStream) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r6[r11] = r17[r11] == r10 ? r22[r11] : null\l}"];
Node_29 [shape=record,label="{29\:\ 0x0098|LOOP_END\lPHI: r3 \l  PHI: (r3v41 com.google.android.exoplayer2.trackselection.TrackSelection) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:21:0x0085\-\>B:29:0x0098\l|r4[r11] = r16[r11] == r10 ? r20[r11] : null\lr11++\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x00a1|long long r14 = r19.periods[r10].selectTracks(r4, r21, r6, r23, r24)\l}"];
subgraph cluster_IfRegion_2147293211 {
label = "IF [B:33:0x00b1] THEN: R(1:34) ELSE: R(1:(1:48))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00b1|if (r10 == 0) goto L_0x00b3\l}"];
subgraph cluster_Region_1905545554 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00b3|r24 = r14\l}"];
}
subgraph cluster_Region_293660809 {
label = "R(1:(1:48)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1320646250 {
label = "IF [B:46:0x00df] THEN: R(1:48) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x00df|if (r14 != r24) goto L_0x00e1\l}"];
subgraph cluster_Region_454610753 {
label = "R(1:48)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x00e8|throw new java.lang.IllegalStateException(\"Children enabled at different positions\")\l}"];
}
}
}
}
Node_35 [shape=record,label="{35\:\ 0x00b5|PHI: r24 \l  PHI: (r24v2 'positionUs' long) = (r24v1 'positionUs' long), (r24v3 'positionUs' long) binds: [B:46:0x00df, B:34:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l|boolean r13 = false\lint r11 = 0\l}"];
subgraph cluster_LoopRegion_1984577983 {
label = "LOOP:4: (2:(1:43)(1:(1:55)(0))|44)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x00ba|if (r11 \< r20.length) goto L_0x00bc\l}"];
subgraph cluster_Region_621248741 {
label = "R(2:(1:43)(1:(1:55)(0))|44)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_778286152 {
label = "IF [B:39:0x00be] THEN: R(1:43) ELSE: R(1:(1:55)(0))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x00be|if (r16[r11] == r10) goto L_0x00c0\l}"];
subgraph cluster_Region_1287930547 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x00c5|PHI: r3 \l  PHI: (r3v32 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r6[r11] != null)\lr12[r11] = r6[r11]\lr13 = true\lr19.streamPeriodIndices.put(r6[r11], java.lang.Integer.valueOf(r10))\l}"];
}
subgraph cluster_Region_942780908 {
label = "R(1:(1:55)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1782680214 {
label = "IF [B:51:0x00ed] THEN: R(1:55) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00ed|if (r17[r11] == r10) goto L_0x00ef\l}"];
subgraph cluster_Region_1849240500 {
label = "R(1:55)";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x00f4|PHI: r3 \l  PHI: (r3v28 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r6[r11] == null)\l}"];
}
subgraph cluster_Region_1934584485 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_44 [shape=record,label="{44\:\ 0x00da|LOOP_END\lPHI: r13 \l  PHI: (r13v2 'periodEnabled' boolean) = (r13v1 'periodEnabled' boolean), (r13v1 'periodEnabled' boolean), (r13v3 'periodEnabled' boolean) binds: [B:76:0x00da, B:77:0x00da, B:75:0x00da] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:36:0x00b7\-\>B:44:0x00da\l|r11++\l}"];
}
}
subgraph cluster_IfRegion_1503498855 {
label = "IF [B:57:0x00fa] THEN: R(1:58) ELSE: R(0)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x00fa|if (r13 == true) goto L_0x00fc\l}"];
subgraph cluster_Region_2076858687 {
label = "R(1:58)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x00fc|r2.add(r19.periods[r10])\l}"];
}
subgraph cluster_Region_1696399589 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_59 [shape=record,label="{59\:\ 0x0105|LOOP_END\lLOOP:2: B:18:0x007d\-\>B:59:0x0105\l|r10++\l}"];
}
}
Node_60 [shape=record,label="{60\:\ 0x0109|java.lang.System.arraycopy(r12, 0, r22, 0, r12.length)\lr19.enabledPeriods = new com.google.android.exoplayer2.source.MediaPeriod[r2.size()]\lr2.toArray(r19.enabledPeriods)\lr19.sequenceableLoader = new com.google.android.exoplayer2.source.CompositeSequenceableLoader(r19.enabledPeriods)\l}"];
Node_61 [shape=record,label="{61\:\ 0x012f|RETURN\l|return r24\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000f|LOOP_START\lPHI: r10 \l  PHI: (r10v1 'i' int) = (r10v0 'i' int), (r10v5 'i' int) binds: [B:0:0x0000, B:14:0x0045] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000f\-\>B:14:0x0045\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0014}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0029|LOOP_START\lPHI: r11 \l  PHI: (r11v7 'j' int) = (r11v6 'j' int), (r11v8 'j' int) binds: [B:8:0x0022, B:16:0x0059] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:9:0x0029\-\>B:16:0x0059\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0030}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x007d|LOOP_START\lPHI: r10 r24 \l  PHI: (r10v3 'i' int) = (r10v2 'i' int), (r10v4 'i' int) binds: [B:17:0x005c, B:59:0x0105] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r24v1 'positionUs' long) = (r24v0 'positionUs' long), (r24v2 'positionUs' long) binds: [B:17:0x005c, B:59:0x0105] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:18:0x007d\-\>B:59:0x0105\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0085|LOOP_START\lPHI: r11 \l  PHI: (r11v1 'j' int) = (r11v0 'j' int), (r11v5 'j' int) binds: [B:20:0x0084, B:29:0x0098] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:21:0x0085\-\>B:29:0x0098\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x008a}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x008c}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x008e}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0094}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0096}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x009d}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x009f}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x00b7|LOOP_START\lPHI: r11 r13 \l  PHI: (r11v3 'j' int) = (r11v2 'j' int), (r11v4 'j' int) binds: [B:35:0x00b5, B:44:0x00da] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 'periodEnabled' boolean) = (r13v0 'periodEnabled' boolean), (r13v2 'periodEnabled' boolean) binds: [B:35:0x00b5, B:44:0x00da] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:36:0x00b7\-\>B:44:0x00da\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x00bc}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00c0}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00c2}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00c4}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x00dd}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x00e1}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x00e9}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x00eb}"];
Node_52 [shape=record,color=red,label="{52\:\ 0x00ef}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x00f1}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x00f3}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x00f8}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x005c|SYNTHETIC\l}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0045|SYNTHETIC\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0043|SYNTHETIC\l}"];
Node_67 [shape=record,color=red,label="{67\:\ 0x0109|SYNTHETIC\l}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x00e1|SYNTHETIC\l}"];
Node_69 [shape=record,color=red,label="{69\:\ 0x0105|SYNTHETIC\l}"];
Node_70 [shape=record,color=red,label="{70\:\ 0x0105|SYNTHETIC\l}"];
Node_71 [shape=record,color=red,label="{71\:\ 0x00a1|SYNTHETIC\l}"];
Node_72 [shape=record,color=red,label="{72\:\ 0x0098|SYNTHETIC\l}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x0098|SYNTHETIC\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x00fa|SYNTHETIC\l}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x00da|SYNTHETIC\l}"];
Node_76 [shape=record,color=red,label="{76\:\ 0x00da|SYNTHETIC\l}"];
Node_77 [shape=record,color=red,label="{77\:\ 0x00da|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.source.MergingMediaPeriod.selectTracks((r19v0 'this' com.google.android.exoplayer2.source.MergingMediaPeriod A[IMMUTABLE_TYPE, THIS]), (r20v0 'selections' com.google.android.exoplayer2.trackselection.TrackSelection[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'mayRetainStreamFlags' boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'streams' com.google.android.exoplayer2.source.SampleStream[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'streamResetFlags' boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'positionUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_62[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_15[style=dashed];
Node_5 -> Node_6;
Node_15 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_64[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_65;
Node_65 -> Node_14;
Node_12 -> Node_16[style=dashed];
Node_12 -> Node_66;
Node_13 -> Node_63;
Node_63 -> Node_14;
Node_16 -> Node_9;
Node_14 -> Node_1;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_19 -> Node_67[style=dashed];
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_22 -> Node_71[style=dashed];
Node_26 -> Node_27;
Node_29 -> Node_21;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_45[style=dashed];
Node_34 -> Node_35;
Node_46 -> Node_35[style=dashed];
Node_46 -> Node_68;
Node_35 -> Node_36;
Node_37 -> Node_38;
Node_37 -> Node_74[style=dashed];
Node_39 -> Node_40;
Node_39 -> Node_50[style=dashed];
Node_43 -> Node_75;
Node_51 -> Node_52;
Node_51 -> Node_76[style=dashed];
Node_55 -> Node_77;
Node_44 -> Node_36;
Node_57 -> Node_58;
Node_57 -> Node_70[style=dashed];
Node_58 -> Node_69;
Node_59 -> Node_18;
Node_60 -> Node_61;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_18 -> Node_19;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_30;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_27 -> Node_31;
Node_28 -> Node_72;
Node_30 -> Node_26;
Node_31 -> Node_73;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_49;
Node_42 -> Node_43;
Node_45 -> Node_46;
Node_47 -> Node_48;
Node_49 -> Node_43;
Node_50 -> Node_51;
Node_52 -> Node_53;
Node_53 -> Node_54;
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_56 -> Node_55;
Node_62 -> Node_17;
Node_64 -> Node_14;
Node_66 -> Node_13;
Node_67 -> Node_60;
Node_68 -> Node_47;
Node_69 -> Node_59;
Node_70 -> Node_59;
Node_71 -> Node_32;
Node_72 -> Node_29;
Node_73 -> Node_29;
Node_74 -> Node_57;
Node_75 -> Node_44;
Node_76 -> Node_44;
Node_77 -> Node_44;
}

