digraph "CFG forcom.google.android.exoplayer2.source.MergingMediaPeriod.selectTracks([Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;[Z[Lcom\/google\/android\/exoplayer2\/source\/SampleStream;[ZJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l0x0002: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) \l0x0003: NEW_ARRAY  (r0 I:int[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0005: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0007: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l0x0009: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) \l0x000a: NEW_ARRAY  (r0 I:int[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x000c: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x000e: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l0x0011: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: IF  (r10 I:?[int, byte, short, char] A[D('i' int)]) \>= (r3 I:?[int, byte, short, char])  \-\> B:17:0x005c \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r10 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0048 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: APUT  \l  (r17 I:?[int, float][] A[D('streamChildIndices' int[])])\l  (r10 I:?[int, short, byte, char] A[D('i' int)])\l  (r3 I:?[int, float])\l \l0x001b: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x001c: APUT  \l  (r16 I:?[int, float][] A[D('selectionChildIndices' int[])])\l  (r10 I:?[int, short, byte, char] A[D('i' int)])\l  (r3 I:?[int, float])\l \l0x001e: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY][] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r10 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0045 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY][] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r10 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0024: INVOKE  (r18 I:com.google.android.exoplayer2.source.TrackGroup) = \l  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l com.google.android.exoplayer2.trackselection.TrackSelection.getTrackGroup():com.google.android.exoplayer2.source.TrackGroup type: INTERFACE \l0x0028: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x002b: IGET  (r3 I:com.google.android.exoplayer2.source.MediaPeriod[]) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.periods com.google.android.exoplayer2.source.MediaPeriod[] \l0x002d: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: IF  (r11 I:?[int, byte, short, char] A[D('j' int)]) \>= (r3 I:?[int, byte, short, char])  \-\> B:14:0x0045 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0032: IGET  (r3 I:com.google.android.exoplayer2.source.MediaPeriod[]) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.periods com.google.android.exoplayer2.source.MediaPeriod[] \l0x0034: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r3 I:?[OBJECT, ARRAY][])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l0x0036: INVOKE  (r3 I:com.google.android.exoplayer2.source.TrackGroupArray) = (r3 I:com.google.android.exoplayer2.source.MediaPeriod) com.google.android.exoplayer2.source.MediaPeriod.getTrackGroups():com.google.android.exoplayer2.source.TrackGroupArray type: INTERFACE \l0x003a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('trackGroup' com.google.android.exoplayer2.source.TrackGroup)])\l \l0x003c: INVOKE  (r3 I:int) = \l  (r3 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r0 I:com.google.android.exoplayer2.source.TrackGroup)\l com.google.android.exoplayer2.source.TrackGroupArray.indexOf(com.google.android.exoplayer2.source.TrackGroup):int type: VIRTUAL \l0x0040: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0059 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: APUT  \l  (r16 I:?[int, float][] A[D('selectionChildIndices' int[])])\l  (r10 I:?[int, short, byte, char] A[D('i' int)])\l  (r11 I:?[int, float] A[D('j' int)])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|0x0045: ARITH  (r10 I:int A[D('i' int)]) = (r10 I:int A[D('i' int)]) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x004a: IGET  (r3 I:java.util.IdentityHashMap\<com.google.android.exoplayer2.source.SampleStream, java.lang.Integer\>) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.streamPeriodIndices java.util.IdentityHashMap \l0x004c: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r10 I:?[int, short, byte, char] A[D('i' int)])\l \l0x004e: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.IdentityHashMap), (r5 I:java.lang.Object) java.util.IdentityHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0052: CHECK_CAST  (r3 I:java.lang.Integer) = (java.lang.Integer) (r3 I:?[OBJECT, ARRAY]) \l0x0054: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|0x0059: ARITH  (r11 I:int A[D('j' int)]) = (r11 I:int A[D('j' int)]) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x005c|0x005c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x005e: IGET  (r3 I:java.util.IdentityHashMap\<com.google.android.exoplayer2.source.SampleStream, java.lang.Integer\>) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.streamPeriodIndices java.util.IdentityHashMap \l0x0060: INVOKE  (r3 I:java.util.IdentityHashMap) java.util.IdentityHashMap.clear():void type: VIRTUAL \l0x0063: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l0x0065: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) \l0x0066: NEW_ARRAY  (r12 I:com.google.android.exoplayer2.source.SampleStream[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.source.SampleStream[] \l0x0068: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l0x006a: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) \l0x006b: NEW_ARRAY  (r6 I:com.google.android.exoplayer2.source.SampleStream[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.source.SampleStream[] \l0x006d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l0x006f: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) \l0x0070: NEW_ARRAY  (r4 I:com.google.android.exoplayer2.trackselection.TrackSelection[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.trackselection.TrackSelection[] \l0x0072: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0074: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0076: IGET  (r3 I:com.google.android.exoplayer2.source.MediaPeriod[]) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.periods com.google.android.exoplayer2.source.MediaPeriod[] \l0x0078: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l0x0079: INVOKE  (r2 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x007c: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x007d|0x007d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x007f: IGET  (r3 I:com.google.android.exoplayer2.source.MediaPeriod[]) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.periods com.google.android.exoplayer2.source.MediaPeriod[] \l0x0081: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0082|0x0082: IF  (r10 I:?[int, byte, short, char] A[D('i' int)]) \>= (r3 I:?[int, byte, short, char])  \-\> B:60:0x0109 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0084|0x0084: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x0085|0x0085: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l0x0087: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0088|0x0088: IF  (r11 I:?[int, byte, short, char] A[D('j' int)]) \>= (r3 I:?[int, byte, short, char])  \-\> B:32:0x00a1 \l}"];
Node_23 [shape=record,label="{23\:\ 0x008a|0x008a: AGET  (r3 I:?[int, float]) = \l  (r17 I:?[int, float][] A[D('streamChildIndices' int[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x008c|0x008c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)])  \-\> B:30:0x009d \l}"];
Node_25 [shape=record,label="{25\:\ 0x008e|0x008e: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x0090|0x0090: APUT  \l  (r6 I:?[OBJECT, ARRAY][] A[D('childStreams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0092: AGET  (r3 I:?[int, float]) = \l  (r16 I:?[int, float][] A[D('selectionChildIndices' int[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x0094|0x0094: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)])  \-\> B:31:0x009f \l}"];
Node_28 [shape=record,label="{28\:\ 0x0096|0x0096: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY][] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l}"];
Node_29 [shape=record,label="{29\:\ 0x0098|0x0098: APUT  \l  (r4 I:?[OBJECT, ARRAY][] A[D('childSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x009a: ARITH  (r11 I:int A[D('j' int)]) = (r11 I:int A[D('j' int)]) + (1 int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x009d|0x009d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x009f|0x009f: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x00a1|0x00a1: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x00a3: IGET  (r3 I:com.google.android.exoplayer2.source.MediaPeriod[]) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.periods com.google.android.exoplayer2.source.MediaPeriod[] \l0x00a5: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r3 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char] A[D('i' int)])\l \l0x00a7: MOVE  (r5 I:?[OBJECT, ARRAY]) = \l  (r21 I:?[OBJECT, ARRAY] A[D('mayRetainStreamFlags' boolean[])])\l \l0x00a9: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY] A[D('streamResetFlags' boolean[])]) \l0x00ab: MOVE  (r8 I:?[long, double]) = (r24 I:?[long, double] A[D('positionUs' long)]) \l0x00ad: INVOKE  (r14 I:long) = \l  (r3 I:com.google.android.exoplayer2.source.MediaPeriod)\l  (r4 I:com.google.android.exoplayer2.trackselection.TrackSelection[] A[D('childSelections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r5 I:boolean[])\l  (r6 I:com.google.android.exoplayer2.source.SampleStream[] A[D('childStreams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r7 I:boolean[])\l  (r8 I:long)\l com.google.android.exoplayer2.source.MediaPeriod.selectTracks(com.google.android.exoplayer2.trackselection.TrackSelection[], boolean[], com.google.android.exoplayer2.source.SampleStream[], boolean[], long):long type: INTERFACE \l}"];
Node_33 [shape=record,label="{33\:\ 0x00b1|0x00b1: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x00dd \l}"];
Node_34 [shape=record,label="{34\:\ 0x00b3|0x00b3: MOVE  (r24 I:?[long, double] A[D('positionUs' long)]) = (r14 I:?[long, double] A[D('selectPositionUs' long)]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00b5|0x00b5: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00b6: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('j' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_36 [shape=record,label="{36\:\ 0x00b7|0x00b7: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l0x00b9: ARRAY_LENGTH  (r3 I:int) = (r0 I:?[]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00ba|0x00ba: IF  (r11 I:?[int, byte, short, char] A[D('j' int)]) \>= (r3 I:?[int, byte, short, char])  \-\> B:57:0x00fa \l}"];
Node_38 [shape=record,label="{38\:\ 0x00bc|0x00bc: AGET  (r3 I:?[int, float]) = \l  (r16 I:?[int, float][] A[D('selectionChildIndices' int[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x00be|0x00be: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)])  \-\> B:50:0x00eb \l}"];
Node_40 [shape=record,label="{40\:\ 0x00c0|0x00c0: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][] A[D('childStreams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l}"];
Node_41 [shape=record,label="{41\:\ 0x00c2|0x00c2: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x00e9 \l}"];
Node_42 [shape=record,label="{42\:\ 0x00c4|0x00c4: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x00c5|0x00c5: INVOKE  (r3 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x00c8: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][] A[D('childStreams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l0x00ca: APUT  \l  (r12 I:?[OBJECT, ARRAY][] A[D('newStreams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x00cc: CONST  (r13 I:?[boolean, int, float, short, byte, char] A[D('periodEnabled' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00cd: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x00cf: IGET  (r3 I:java.util.IdentityHashMap\<com.google.android.exoplayer2.source.SampleStream, java.lang.Integer\>) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.streamPeriodIndices java.util.IdentityHashMap \l0x00d1: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][] A[D('childStreams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l0x00d3: INVOKE  (r7 I:java.lang.Integer) = (r10 I:int A[D('i' int)]) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x00d7: INVOKE  \l  (r3 I:java.util.IdentityHashMap)\l  (r5 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l java.util.IdentityHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_44 [shape=record,label="{44\:\ 0x00da|0x00da: ARITH  (r11 I:int A[D('j' int)]) = (r11 I:int A[D('j' int)]) + (1 int) \l}"];
Node_45 [shape=record,label="{45\:\ 0x00dd|0x00dd: CMP_L  (r3 I:int) = \l  (r14 I:long A[D('selectPositionUs' long)])\l  (r24 I:long A[D('positionUs' long)])\l \l}"];
Node_46 [shape=record,label="{46\:\ 0x00df|0x00df: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x00b5 \l}"];
Node_47 [shape=record,label="{47\:\ 0x00e1|0x00e1: NEW_INSTANCE  (r3 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x00e3: CONST_STR  (r5 I:java.lang.String) =  \"Children enabled at different positions\" \l0x00e5: INVOKE  \l  (r3 I:java.lang.IllegalStateException)\l  (r5 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_48 [shape=record,label="{48\:\ 0x00e8|0x00e8: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_49 [shape=record,label="{49\:\ 0x00e9|0x00e9: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_50 [shape=record,label="{50\:\ 0x00eb|0x00eb: AGET  (r3 I:?[int, float]) = \l  (r17 I:?[int, float][] A[D('streamChildIndices' int[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l}"];
Node_51 [shape=record,label="{51\:\ 0x00ed|0x00ed: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('i' int)])  \-\> B:44:0x00da \l}"];
Node_52 [shape=record,label="{52\:\ 0x00ef|0x00ef: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][] A[D('childStreams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r11 I:?[int, short, byte, char] A[D('j' int)])\l \l}"];
Node_53 [shape=record,label="{53\:\ 0x00f1|0x00f1: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x00f8 \l}"];
Node_54 [shape=record,label="{54\:\ 0x00f3|0x00f3: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x00f4|0x00f4: INVOKE  (r3 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l}"];
Node_56 [shape=record,label="{56\:\ 0x00f8|0x00f8: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_57 [shape=record,label="{57\:\ 0x00fa|0x00fa: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('periodEnabled' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x0105 \l}"];
Node_58 [shape=record,label="{58\:\ 0x00fc|0x00fc: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x00fe: IGET  (r3 I:com.google.android.exoplayer2.source.MediaPeriod[]) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.periods com.google.android.exoplayer2.source.MediaPeriod[] \l0x0100: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r3 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0102: INVOKE  \l  (r2 I:java.util.ArrayList A[D('enabledPeriodsList' java.util.ArrayList\<com.google.android.exoplayer2.source.MediaPeriod\>)])\l  (r3 I:java.lang.Object)\l java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_59 [shape=record,label="{59\:\ 0x0105|0x0105: ARITH  (r10 I:int A[D('i' int)]) = (r10 I:int A[D('i' int)]) + (1 int) \l}"];
Node_60 [shape=record,label="{60\:\ 0x0109|0x0109: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x010a: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x010b: ARRAY_LENGTH  (r7 I:int) = \l  (r12 I:?[] A[D('newStreams' com.google.android.exoplayer2.source.SampleStream[])])\l \l0x010c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l \l0x010e: INVOKE  \l  (r12 I:java.lang.Object A[D('newStreams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r3 I:int)\l  (r0 I:java.lang.Object)\l  (r5 I:int)\l  (r7 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0111: INVOKE  (r3 I:int) = \l  (r2 I:java.util.ArrayList A[D('enabledPeriodsList' java.util.ArrayList\<com.google.android.exoplayer2.source.MediaPeriod\>)])\l java.util.ArrayList.size():int type: VIRTUAL \l0x0115: NEW_ARRAY  (r3 I:com.google.android.exoplayer2.source.MediaPeriod[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.source.MediaPeriod[] \l0x0117: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0119: IPUT  \l  (r3 I:com.google.android.exoplayer2.source.MediaPeriod[])\l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.enabledPeriods com.google.android.exoplayer2.source.MediaPeriod[] \l0x011b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x011d: IGET  (r3 I:com.google.android.exoplayer2.source.MediaPeriod[]) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.enabledPeriods com.google.android.exoplayer2.source.MediaPeriod[] \l0x011f: INVOKE  \l  (r2 I:java.util.ArrayList A[D('enabledPeriodsList' java.util.ArrayList\<com.google.android.exoplayer2.source.MediaPeriod\>)])\l  (r3 I:java.lang.Object[])\l java.util.ArrayList.toArray(java.lang.Object[]):java.lang.Object[] type: VIRTUAL \l0x0122: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.source.CompositeSequenceableLoader) =  com.google.android.exoplayer2.source.CompositeSequenceableLoader \l0x0124: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0126: IGET  (r5 I:com.google.android.exoplayer2.source.MediaPeriod[]) = \l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.enabledPeriods com.google.android.exoplayer2.source.MediaPeriod[] \l0x0128: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.CompositeSequenceableLoader)\l  (r5 I:com.google.android.exoplayer2.source.SequenceableLoader[])\l com.google.android.exoplayer2.source.CompositeSequenceableLoader.\<init\>(com.google.android.exoplayer2.source.SequenceableLoader[]):void type: DIRECT \l0x012b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x012d: IPUT  \l  (r3 I:com.google.android.exoplayer2.source.SequenceableLoader)\l  (r0 I:com.google.android.exoplayer2.source.MergingMediaPeriod)\l com.google.android.exoplayer2.source.MergingMediaPeriod.sequenceableLoader com.google.android.exoplayer2.source.SequenceableLoader \l}"];
Node_61 [shape=record,label="{61\:\ 0x012f|0x012f: RETURN  (r24 I:long A[D('positionUs' long)]) \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.source.MergingMediaPeriod.selectTracks((r19 'this' I:com.google.android.exoplayer2.source.MergingMediaPeriod A[IMMUTABLE_TYPE, THIS]), (r20 I:com.google.android.exoplayer2.trackselection.TrackSelection[] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:boolean[] A[D('mayRetainStreamFlags' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:com.google.android.exoplayer2.source.SampleStream[] A[D('streams' com.google.android.exoplayer2.source.SampleStream[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:boolean[] A[D('streamResetFlags' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0029\-0x0045: r11 'j' int\l  0x0028\-0x0045: r18 'trackGroup' com.google.android.exoplayer2.source.TrackGroup\l  0x0059\-0x005c: r11 'j' int\l  0x0059\-0x005c: r18 'trackGroup' com.google.android.exoplayer2.source.TrackGroup\l  0x00b6\-0x00dd: r13 'periodEnabled' boolean\l  0x0085\-0x0109: r11 'j' int\l  0x00e9\-0x0109: r13 'periodEnabled' boolean\l  0x00b1\-0x0109: r14 'selectPositionUs' long\l  0x007c\-0x012f: r2 'enabledPeriodsList' java.util.ArrayList\<com.google.android.exoplayer2.source.MediaPeriod\>\l  0x0072\-0x012f: r4 'childSelections' com.google.android.exoplayer2.trackselection.TrackSelection[]\l  0x006d\-0x012f: r6 'childStreams' com.google.android.exoplayer2.source.SampleStream[]\l  0x000f\-0x012f: r10 'i' int\l  0x0068\-0x012f: r12 'newStreams' com.google.android.exoplayer2.source.SampleStream[]\l  0x000e\-0x012f: r16 'selectionChildIndices' int[]\l  0x0007\-0x012f: r17 'streamChildIndices' int[]\l  ?\-0x012f: r20 'selections' com.google.android.exoplayer2.trackselection.TrackSelection[]\l  ?\-0x012f: r21 'mayRetainStreamFlags' boolean[]\l  ?\-0x012f: r22 'streams' com.google.android.exoplayer2.source.SampleStream[]\l  ?\-0x012f: r23 'streamResetFlags' boolean[]\l  ?\-0x012f: r24 'positionUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_1;
Node_15 -> Node_6;
Node_16 -> Node_9;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_60;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_32;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_21;
Node_30 -> Node_26;
Node_31 -> Node_29;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_45;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_57;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_50;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_49;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_36;
Node_45 -> Node_46;
Node_46 -> Node_35;
Node_46 -> Node_47[style=dashed];
Node_47 -> Node_48;
Node_49 -> Node_43;
Node_50 -> Node_51;
Node_51 -> Node_44;
Node_51 -> Node_52[style=dashed];
Node_52 -> Node_53;
Node_53 -> Node_54[style=dashed];
Node_53 -> Node_56;
Node_54 -> Node_55;
Node_55 -> Node_44;
Node_56 -> Node_55;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_59;
Node_59 -> Node_18;
Node_60 -> Node_61;
}

