digraph "CFG forcom.google.android.exoplayer2.source.ExtractorMediaSource.createPeriod(ILcom\/google\/android\/exoplayer2\/upstream\/Allocator;J)Lcom\/google\/android\/exoplayer2\/source\/MediaPeriod;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0024 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x0006: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod) =  com.google.android.exoplayer2.source.ExtractorMediaPeriod \l0x0008: IGET  (r1 I:android.net.Uri) = \l  (r10 I:com.google.android.exoplayer2.source.ExtractorMediaSource)\l com.google.android.exoplayer2.source.ExtractorMediaSource.uri android.net.Uri \l0x000a: IGET  (r2 I:com.google.android.exoplayer2.upstream.DataSource$Factory) = \l  (r10 I:com.google.android.exoplayer2.source.ExtractorMediaSource)\l com.google.android.exoplayer2.source.ExtractorMediaSource.dataSourceFactory com.google.android.exoplayer2.upstream.DataSource$Factory \l0x000c: INVOKE  (r2 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r2 I:com.google.android.exoplayer2.upstream.DataSource$Factory)\l com.google.android.exoplayer2.upstream.DataSource.Factory.createDataSource():com.google.android.exoplayer2.upstream.DataSource type: INTERFACE \l0x0010: IGET  (r3 I:com.google.android.exoplayer2.extractor.ExtractorsFactory) = \l  (r10 I:com.google.android.exoplayer2.source.ExtractorMediaSource)\l com.google.android.exoplayer2.source.ExtractorMediaSource.extractorsFactory com.google.android.exoplayer2.extractor.ExtractorsFactory \l0x0012: INVOKE  (r3 I:com.google.android.exoplayer2.extractor.Extractor[]) = \l  (r3 I:com.google.android.exoplayer2.extractor.ExtractorsFactory)\l com.google.android.exoplayer2.extractor.ExtractorsFactory.createExtractors():com.google.android.exoplayer2.extractor.Extractor[] type: INTERFACE \l0x0016: IGET  (r4 I:int) = \l  (r10 I:com.google.android.exoplayer2.source.ExtractorMediaSource)\l com.google.android.exoplayer2.source.ExtractorMediaSource.minLoadableRetryCount int \l0x0018: IGET  (r5 I:android.os.Handler) = \l  (r10 I:com.google.android.exoplayer2.source.ExtractorMediaSource)\l com.google.android.exoplayer2.source.ExtractorMediaSource.eventHandler android.os.Handler \l0x001a: IGET  (r6 I:com.google.android.exoplayer2.source.ExtractorMediaSource$EventListener) = \l  (r10 I:com.google.android.exoplayer2.source.ExtractorMediaSource)\l com.google.android.exoplayer2.source.ExtractorMediaSource.eventListener com.google.android.exoplayer2.source.ExtractorMediaSource$EventListener \l0x001c: IGET  (r9 I:java.lang.String) = \l  (r10 I:com.google.android.exoplayer2.source.ExtractorMediaSource)\l com.google.android.exoplayer2.source.ExtractorMediaSource.customCacheKey java.lang.String \l0x001e: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x001f: MOVE  (r8 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY] A[D('allocator' com.google.android.exoplayer2.upstream.Allocator)])\l \l0x0020: INVOKE  \l  (r0 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l  (r1 I:android.net.Uri)\l  (r2 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r3 I:com.google.android.exoplayer2.extractor.Extractor[])\l  (r4 I:int)\l  (r5 I:android.os.Handler)\l  (r6 I:com.google.android.exoplayer2.source.ExtractorMediaSource$EventListener)\l  (r7 I:com.google.android.exoplayer2.source.MediaSource$Listener)\l  (r8 I:com.google.android.exoplayer2.upstream.Allocator)\l  (r9 I:java.lang.String)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.\<init\>(android.net.Uri, com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.extractor.Extractor[], int, android.os.Handler, com.google.android.exoplayer2.source.ExtractorMediaSource$EventListener, com.google.android.exoplayer2.source.MediaSource$Listener, com.google.android.exoplayer2.upstream.Allocator, java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: RETURN  (r0 I:com.google.android.exoplayer2.source.MediaPeriod) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.source.MediaPeriod com.google.android.exoplayer2.source.ExtractorMediaSource.createPeriod((r10 'this' I:com.google.android.exoplayer2.source.ExtractorMediaSource A[IMMUTABLE_TYPE, THIS]), (r11 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:com.google.android.exoplayer2.upstream.Allocator A[D('allocator' com.google.android.exoplayer2.upstream.Allocator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0025: r11 'index' int\l  ?\-0x0025: r12 'allocator' com.google.android.exoplayer2.upstream.Allocator\l  ?\-0x0025: r13 'positionUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_2;
}

