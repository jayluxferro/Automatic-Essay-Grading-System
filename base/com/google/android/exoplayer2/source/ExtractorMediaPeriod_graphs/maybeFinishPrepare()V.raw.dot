digraph "CFG forcom.google.android.exoplayer2.source.ExtractorMediaPeriod.maybeFinishPrepare()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: IGET  (r6 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.released boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r6 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.prepared boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r6 I:com.google.android.exoplayer2.extractor.SeekMap) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.seekMap com.google.android.exoplayer2.extractor.SeekMap \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IGET  (r6 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.tracksBuilt boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0013 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IGET  (r6 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.DefaultTrackOutput\>) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.sampleQueues android.util.SparseArray \l0x0015: INVOKE  (r4 I:int) = (r6 I:android.util.SparseArray) android.util.SparseArray.size():int type: VIRTUAL \l0x0019: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r4 I:?[int, byte, short, char] A[D('trackCount' int)])  \-\> B:14:0x002d \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: IGET  (r6 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.DefaultTrackOutput\>) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.sampleQueues android.util.SparseArray \l0x001e: INVOKE  (r6 I:java.lang.Object) = (r6 I:android.util.SparseArray), (r0 I:int A[D('i' int)]) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x0022: CHECK_CAST  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput) = (com.google.android.exoplayer2.extractor.DefaultTrackOutput) (r6 I:?[OBJECT, ARRAY]) \l0x0024: INVOKE  (r6 I:com.google.android.exoplayer2.Format) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.getUpstreamFormat():com.google.android.exoplayer2.Format type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: IGET  (r6 I:com.google.android.exoplayer2.util.ConditionVariable) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.loadCondition com.google.android.exoplayer2.util.ConditionVariable \l0x002f: INVOKE  (r6 I:com.google.android.exoplayer2.util.ConditionVariable) com.google.android.exoplayer2.util.ConditionVariable.close():boolean type: VIRTUAL \l0x0032: NEW_ARRAY  (r3 I:com.google.android.exoplayer2.source.TrackGroup[]) = (r4 I:int A[D('trackCount' int), IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.source.TrackGroup[] \l0x0034: NEW_ARRAY  (r6 I:boolean[]) = (r4 I:int A[D('trackCount' int), IMMUTABLE_TYPE]) type: boolean[] \l0x0036: IPUT  \l  (r6 I:boolean[])\l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.trackIsAudioVideoFlags boolean[] \l0x0038: NEW_ARRAY  (r6 I:boolean[]) = (r4 I:int A[D('trackCount' int), IMMUTABLE_TYPE]) type: boolean[] \l0x003a: IPUT  \l  (r6 I:boolean[])\l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.trackEnabledStates boolean[] \l0x003c: IGET  (r6 I:com.google.android.exoplayer2.extractor.SeekMap) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.seekMap com.google.android.exoplayer2.extractor.SeekMap \l0x003e: INVOKE  (r10 I:long) = (r6 I:com.google.android.exoplayer2.extractor.SeekMap) com.google.android.exoplayer2.extractor.SeekMap.getDurationUs():long type: INTERFACE \l0x0042: IPUT  \l  (r10 I:long)\l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.durationUs long \l0x0044: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|0x0045: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r4 I:?[int, byte, short, char] A[D('trackCount' int)])  \-\> B:23:0x007b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|0x0047: IGET  (r6 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.DefaultTrackOutput\>) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.sampleQueues android.util.SparseArray \l0x0049: INVOKE  (r6 I:java.lang.Object) = (r6 I:android.util.SparseArray), (r0 I:int A[D('i' int)]) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x004d: CHECK_CAST  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput) = (com.google.android.exoplayer2.extractor.DefaultTrackOutput) (r6 I:?[OBJECT, ARRAY]) \l0x004f: INVOKE  (r5 I:com.google.android.exoplayer2.Format) = \l  (r6 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.getUpstreamFormat():com.google.android.exoplayer2.Format type: VIRTUAL \l0x0053: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.source.TrackGroup) =  com.google.android.exoplayer2.source.TrackGroup \l0x0055: NEW_ARRAY  (r9 I:com.google.android.exoplayer2.Format[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.Format[] \l0x0057: APUT  \l  (r9 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY] A[D('trackFormat' com.google.android.exoplayer2.Format)])\l \l0x0059: INVOKE  \l  (r6 I:com.google.android.exoplayer2.source.TrackGroup)\l  (r9 I:com.google.android.exoplayer2.Format[])\l com.google.android.exoplayer2.source.TrackGroup.\<init\>(com.google.android.exoplayer2.Format[]):void type: DIRECT \l0x005c: APUT  \l  (r3 I:?[OBJECT, ARRAY][] A[D('trackArray' com.google.android.exoplayer2.source.TrackGroup[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x005e: IGET  (r2 I:java.lang.String) = \l  (r5 I:com.google.android.exoplayer2.Format A[D('trackFormat' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x0060: INVOKE  (r6 I:boolean) = (r2 I:java.lang.String A[D('mimeType' java.lang.String)]) com.google.android.exoplayer2.util.MimeTypes.isVideo(java.lang.String):boolean type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x0064|0x0064: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x006c \l}"];
Node_18 [shape=record,label="{18\:\ 0x0066|0x0066: INVOKE  (r6 I:boolean) = (r2 I:java.lang.String A[D('mimeType' java.lang.String)]) com.google.android.exoplayer2.util.MimeTypes.isAudio(java.lang.String):boolean type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x006a|0x006a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0079 \l}"];
Node_20 [shape=record,label="{20\:\ 0x006c|0x006c: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x006d|0x006d: IGET  (r6 I:boolean[]) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.trackIsAudioVideoFlags boolean[] \l0x006f: APUT  \l  (r6 I:boolean[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r1 I:boolean A[D('isAudioVideo' boolean), IMMUTABLE_TYPE])\l \l0x0071: IGET  (r6 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.haveAudioVideoTracks boolean \l0x0073: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char] A[D('isAudioVideo' boolean)]) \l0x0074: IPUT  \l  (r6 I:boolean)\l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.haveAudioVideoTracks boolean \l0x0076: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0079|0x0079: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isAudioVideo' boolean)]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x007b|0x007b: NEW_INSTANCE  (r6 I:com.google.android.exoplayer2.source.TrackGroupArray) =  com.google.android.exoplayer2.source.TrackGroupArray \l0x007d: INVOKE  \l  (r6 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r3 I:com.google.android.exoplayer2.source.TrackGroup[] A[D('trackArray' com.google.android.exoplayer2.source.TrackGroup[])])\l com.google.android.exoplayer2.source.TrackGroupArray.\<init\>(com.google.android.exoplayer2.source.TrackGroup[]):void type: DIRECT \l0x0080: IPUT  \l  (r6 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.tracks com.google.android.exoplayer2.source.TrackGroupArray \l0x0082: IPUT  \l  (r8 I:boolean)\l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.prepared boolean \l0x0084: IGET  (r6 I:com.google.android.exoplayer2.source.MediaSource$Listener) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.sourceListener com.google.android.exoplayer2.source.MediaSource$Listener \l0x0086: NEW_INSTANCE  (r7 I:com.google.android.exoplayer2.source.SinglePeriodTimeline) =  com.google.android.exoplayer2.source.SinglePeriodTimeline \l0x0088: IGET  (r8 I:long) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.durationUs long \l0x008a: IGET  (r10 I:com.google.android.exoplayer2.extractor.SeekMap) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.seekMap com.google.android.exoplayer2.extractor.SeekMap \l0x008c: INVOKE  (r10 I:boolean) = (r10 I:com.google.android.exoplayer2.extractor.SeekMap) com.google.android.exoplayer2.extractor.SeekMap.isSeekable():boolean type: INTERFACE \l0x0090: INVOKE  \l  (r7 I:com.google.android.exoplayer2.source.SinglePeriodTimeline)\l  (r8 I:long)\l  (r10 I:boolean)\l com.google.android.exoplayer2.source.SinglePeriodTimeline.\<init\>(long, boolean):void type: DIRECT \l0x0093: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0094: INVOKE  \l  (r6 I:com.google.android.exoplayer2.source.MediaSource$Listener)\l  (r7 I:com.google.android.exoplayer2.Timeline)\l  (r8 I:java.lang.Object)\l com.google.android.exoplayer2.source.MediaSource.Listener.onSourceInfoRefreshed(com.google.android.exoplayer2.Timeline, java.lang.Object):void type: INTERFACE \l0x0097: IGET  (r6 I:com.google.android.exoplayer2.source.MediaPeriod$Callback) = \l  (r12 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.callback com.google.android.exoplayer2.source.MediaPeriod$Callback \l0x0099: INVOKE  \l  (r6 I:com.google.android.exoplayer2.source.MediaPeriod$Callback)\l  (r12 I:com.google.android.exoplayer2.source.MediaPeriod)\l com.google.android.exoplayer2.source.MediaPeriod.Callback.onPrepared(com.google.android.exoplayer2.source.MediaPeriod):void type: INTERFACE \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.source.ExtractorMediaPeriod.maybeFinishPrepare((r12 'this' I:com.google.android.exoplayer2.source.ExtractorMediaPeriod A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x006d\-0x0079: r1 'isAudioVideo' boolean\l  0x0060\-0x007b: r2 'mimeType' java.lang.String\l  0x0053\-0x007b: r5 'trackFormat' com.google.android.exoplayer2.Format\l  0x001a\-0x009d: r0 'i' int\l  0x0034\-0x009d: r3 'trackArray' com.google.android.exoplayer2.source.TrackGroup[]\l  0x0019\-0x009d: r4 'trackCount' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_8;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_10;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_15;
Node_22 -> Node_21;
Node_23 -> Node_8;
}

