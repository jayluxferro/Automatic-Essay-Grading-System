digraph "CFG forcom.google.android.exoplayer2.source.ExtractorMediaPeriod.onLoadCanceled(Lcom\/google\/android\/exoplayer2\/source\/ExtractorMediaPeriod$ExtractingLoadable;JJZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|copyLengthFromLoader(r5)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r10 != false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r4.enabledTrackCount \<= 0) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|int r1 = r4.sampleQueues.size()\lr0 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|LOOP_START\lPHI: r0 \l  PHI: (r0v1 'i' int) = (r0v0 'i' int), (r0v2 'i' int) binds: [B:4:0x0009, B:6:0x0012] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0010\-\>B:6:0x0012\l|if (r0 \>= r1) goto L_0x0024\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|LOOP_END\lLOOP:0: B:5:0x0010\-\>B:6:0x0012\l|r4.sampleQueues.valueAt(r0).reset(r4.trackEnabledStates[r0])\lint r0 = r0 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|r4.callback.onContinueLoadingRequested(r4)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.ExtractorMediaPeriod.onLoadCanceled((r4v0 'this' com.google.android.exoplayer2.source.ExtractorMediaPeriod A[IMMUTABLE_TYPE, THIS]), (r5v0 'loadable' com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 'elapsedRealtimeMs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 'loadDurationMs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'released' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_5;
Node_7 -> Node_9;
Node_8 -> Node_7;
}

