digraph "CFG forcom.google.android.exoplayer2.source.ExtractorMediaPeriod.onLoadCompleted(Lcom\/google\/android\/exoplayer2\/source\/ExtractorMediaPeriod$ExtractingLoadable;JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r7 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l  (r8 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable A[D('loadable' com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable)])\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.copyLengthFromLoader(com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable):void type: DIRECT \l0x0003: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0004: IPUT  \l  (r2 I:boolean)\l  (r7 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.loadingFinished boolean \l0x0006: IGET  (r2 I:long) = \l  (r7 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.durationUs long \l0x0008: CONST  (r4 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x000d: CMP_L  (r2 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0032 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: INVOKE  (r0 I:long) = \l  (r7 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.getLargestQueuedTimestampUs():long type: DIRECT \l0x0015: CONST  (r2 I:?[long, double]) = (\-9223372036854775808 ?[long, double]) \l0x0017: CMP_L  (r2 I:int) = \l  (r0 I:long A[D('largestQueuedTimestampUs' long)])\l  (r2 I:long)\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0038 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IPUT  \l  (r2 I:long)\l  (r7 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.durationUs long \l0x001f: IGET  (r2 I:com.google.android.exoplayer2.source.MediaSource$Listener) = \l  (r7 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.sourceListener com.google.android.exoplayer2.source.MediaSource$Listener \l0x0021: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.source.SinglePeriodTimeline) =  com.google.android.exoplayer2.source.SinglePeriodTimeline \l0x0023: IGET  (r4 I:long) = \l  (r7 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.durationUs long \l0x0025: IGET  (r6 I:com.google.android.exoplayer2.extractor.SeekMap) = \l  (r7 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.seekMap com.google.android.exoplayer2.extractor.SeekMap \l0x0027: INVOKE  (r6 I:boolean) = (r6 I:com.google.android.exoplayer2.extractor.SeekMap) com.google.android.exoplayer2.extractor.SeekMap.isSeekable():boolean type: INTERFACE \l0x002b: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.SinglePeriodTimeline)\l  (r4 I:long)\l  (r6 I:boolean)\l com.google.android.exoplayer2.source.SinglePeriodTimeline.\<init\>(long, boolean):void type: DIRECT \l0x002e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: INVOKE  \l  (r2 I:com.google.android.exoplayer2.source.MediaSource$Listener)\l  (r3 I:com.google.android.exoplayer2.Timeline)\l  (r4 I:java.lang.Object)\l com.google.android.exoplayer2.source.MediaSource.Listener.onSourceInfoRefreshed(com.google.android.exoplayer2.Timeline, java.lang.Object):void type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|0x0032: IGET  (r2 I:com.google.android.exoplayer2.source.MediaPeriod$Callback) = \l  (r7 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.callback com.google.android.exoplayer2.source.MediaPeriod$Callback \l0x0034: INVOKE  \l  (r2 I:com.google.android.exoplayer2.source.MediaPeriod$Callback)\l  (r7 I:com.google.android.exoplayer2.source.SequenceableLoader)\l com.google.android.exoplayer2.source.MediaPeriod.Callback.onContinueLoadingRequested(com.google.android.exoplayer2.source.SequenceableLoader):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|0x0038: CONST  (r2 I:?[long, double]) = (10000(0x2710, double:4.9407E\-320) ?[long, double]) \l0x003a: ARITH  (r2 I:long) = (r2 I:long) + (r0 I:long A[D('largestQueuedTimestampUs' long)]) \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.ExtractorMediaPeriod.onLoadCompleted((r7 'this' I:com.google.android.exoplayer2.source.ExtractorMediaPeriod A[IMMUTABLE_TYPE, THIS]), (r8 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable A[D('loadable' com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[D('elapsedRealtimeMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:long A[D('loadDurationMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0015\-0x0032: r0 'largestQueuedTimestampUs' long\l  0x0038\-0x003b: r0 'largestQueuedTimestampUs' long\l  ?\-0x003b: r8 'loadable' com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable\l  ?\-0x003b: r9 'elapsedRealtimeMs' long\l  ?\-0x003b: r11 'loadDurationMs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_5;
}

