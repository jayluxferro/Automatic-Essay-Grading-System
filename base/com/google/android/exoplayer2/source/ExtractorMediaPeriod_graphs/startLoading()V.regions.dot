digraph "CFG forcom.google.android.exoplayer2.source.ExtractorMediaPeriod.startLoading()V" {
subgraph cluster_Region_667803512 {
label = "R(5:0|(2:2|(1:7)(2:6|21))|8|(1:11)|19)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractingLoadable r0 = new com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractingLoadable(r10.uri, r10.dataSource, r10.extractorHolder, r10.loadCondition)\l}"];
subgraph cluster_IfRegion_1727095849 {
label = "IF [B:1:0x0015] THEN: R(2:2|(1:7)(2:6|21)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0015|if (r10.prepared == true) goto L_0x0017\l}"];
subgraph cluster_Region_182673986 {
label = "R(2:2|(1:7)(2:6|21))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0017|com.google.android.exoplayer2.util.Assertions.checkState(isPendingReset())\l}"];
subgraph cluster_IfRegion_164105310 {
label = "IF [B:3:0x0022, B:5:0x002a] THEN: R(1:7) ELSE: R(2:6|21)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0022|if (r10.durationUs == com.google.android.exoplayer2.C1260C.TIME_UNSET) goto L_0x0032\l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|ADDED_TO_REGION\l|if (r10.pendingResetPositionUs \< r10.durationUs) goto L_0x0032\l}"];
subgraph cluster_Region_201375883 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0032|r0.setLoadPosition(r10.seekMap.getPosition(r10.pendingResetPositionUs), r10.pendingResetPositionUs)\lr10.pendingResetPositionUs = com.google.android.exoplayer2.C1260C.TIME_UNSET\l}"];
}
subgraph cluster_Region_1860127408 {
label = "R(2:6|21)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002c|r10.loadingFinished = true\lr10.pendingResetPositionUs = com.google.android.exoplayer2.C1260C.TIME_UNSET\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
}
}
}
}
Node_8 [shape=record,label="{8\:\ 0x0041|r10.extractedSamplesCountAtStartOfLoad = getExtractedSamplesCount()\lint int r6 = r10.minLoadableRetryCount\l}"];
subgraph cluster_IfRegion_1275944871 {
label = "IF [B:9:0x004a] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x004a|if (r6 == \-1) goto L_0x004c\l}"];
subgraph cluster_Region_1652479184 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x004e|r6 = (r10.prepared && r10.length == \-1 && (r10.seekMap == null \|\| r10.seekMap.getDurationUs() == com.google.android.exoplayer2.C1260C.TIME_UNSET)) ? 6 : 3\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x0067|PHI: r6 \l  PHI: (r6v1 'minRetryCount' int) = (r6v0 'minRetryCount' int), (r6v2 'minRetryCount' int) binds: [B:9:0x004a, B:18:0x0066] A[DONT_GENERATE, DONT_INLINE]\l|r10.loader.startLoading(r0, r10, r6)\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0024}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x004c}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0050}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0056|REMOVE\lADDED_TO_REGION\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0058}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x005a|REMOVE\lADDED_TO_REGION\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x005c}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0064|REMOVE\lADDED_TO_REGION\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0066}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x006d}"];
Node_22 [shape=record,color=red,label="{22\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.source.ExtractorMediaPeriod.startLoading((r10v0 'this' com.google.android.exoplayer2.source.ExtractorMediaPeriod A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_6 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_19[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_18;
Node_19 -> Node_22;
Node_4 -> Node_5;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_19;
}

