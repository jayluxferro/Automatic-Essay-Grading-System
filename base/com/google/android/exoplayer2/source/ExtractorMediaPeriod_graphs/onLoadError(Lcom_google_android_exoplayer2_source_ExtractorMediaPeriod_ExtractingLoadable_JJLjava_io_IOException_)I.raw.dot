digraph "CFG forcom.google.android.exoplayer2.source.ExtractorMediaPeriod.onLoadError(Lcom\/google\/android\/exoplayer2\/source\/ExtractorMediaPeriod$ExtractingLoadable;JJLjava\/io\/IOException;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l  (r6 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable A[D('loadable' com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable)])\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.copyLengthFromLoader(com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable):void type: DIRECT \l0x0005: INVOKE  \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l  (r11 I:java.io.IOException A[D('error' java.io.IOException)])\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.notifyLoadError(java.io.IOException):void type: DIRECT \l0x0008: INVOKE  (r4 I:boolean) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l  (r11 I:java.io.IOException A[D('error' java.io.IOException)])\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.isLoadableExceptionFatal(java.io.IOException):boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: RETURN  (r2 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: INVOKE  (r0 I:int) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.getExtractedSamplesCount():int type: DIRECT \l0x0014: IGET  (r4 I:int) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.extractedSamplesCountAtStartOfLoad int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char] A[D('extractedSamplesCount' int)]) \<= (r4 I:?[int, byte, short, char])  \-\> B:10:0x0026 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: INVOKE  \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l  (r6 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable A[D('loadable' com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable)])\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.configureRetry(com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable):void type: DIRECT \l0x001c: INVOKE  (r4 I:int) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.getExtractedSamplesCount():int type: DIRECT \l0x0020: IPUT  \l  (r4 I:int)\l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.extractedSamplesCountAtStartOfLoad int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('madeProgress' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|0x0026: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('madeProgress' boolean)]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.source.ExtractorMediaPeriod.onLoadError((r5 'this' I:com.google.android.exoplayer2.source.ExtractorMediaPeriod A[IMMUTABLE_TYPE, THIS]), (r6 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable A[D('loadable' com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:long A[D('elapsedRealtimeMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[D('loadDurationMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.io.IOException A[D('error' java.io.IOException), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0019\-0x0026: r1 'madeProgress' boolean\l  0x0014\-0x0027: r0 'extractedSamplesCount' int\l  ?\-0x0027: r6 'loadable' com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractingLoadable\l  ?\-0x0027: r7 'elapsedRealtimeMs' long\l  ?\-0x0027: r9 'loadDurationMs' long\l  ?\-0x0027: r11 'error' java.io.IOException\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_3;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_3;
Node_10 -> Node_7;
}

