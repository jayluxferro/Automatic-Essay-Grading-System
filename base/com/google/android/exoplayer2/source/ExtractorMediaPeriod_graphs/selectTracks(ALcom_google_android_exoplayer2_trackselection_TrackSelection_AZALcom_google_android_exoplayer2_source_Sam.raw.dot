digraph "CFG forcom.google.android.exoplayer2.source.ExtractorMediaPeriod.selectTracks([Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;[Z[Lcom\/google\/android\/exoplayer2\/source\/SampleStream;[ZJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r5 I:boolean) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.prepared boolean \l0x0002: INVOKE  (r5 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: ARRAY_LENGTH  (r5 I:int) = \l  (r10 I:?[] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r5 I:?[int, byte, short, char])  \-\> B:11:0x0040 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003d \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0015 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: AGET  (r5 I:boolean A[IMMUTABLE_TYPE]) = \l  (r11 I:boolean[] A[D('mayRetainStreamFlags' boolean[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0017: CHECK_CAST  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$SampleStreamImpl) = (com.google.android.exoplayer2.source.ExtractorMediaPeriod$SampleStreamImpl) (r5 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  (r3 I:int) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$SampleStreamImpl)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.SampleStreamImpl.access$400(com.google.android.exoplayer2.source.ExtractorMediaPeriod$SampleStreamImpl):int type: STATIC \l0x001d: IGET  (r5 I:boolean[]) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.trackEnabledStates boolean[] \l0x001f: AGET  (r5 I:boolean A[IMMUTABLE_TYPE]) = \l  (r5 I:boolean[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char] A[D('track' int)])\l \l0x0021: INVOKE  (r5 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x0024: IGET  (r5 I:int) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.enabledTrackCount int \l0x0026: ARITH  (r5 I:int) = (r5 I:int) + (\-1 int) \l0x0028: IPUT  \l  (r5 I:int)\l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.enabledTrackCount int \l0x002a: IGET  (r5 I:boolean[]) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.trackEnabledStates boolean[] \l0x002c: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002d: APUT  \l  (r5 I:boolean[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char] A[D('track' int)])\l  (r6 I:boolean A[IMMUTABLE_TYPE])\l \l0x002f: IGET  (r5 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.DefaultTrackOutput\>) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.sampleQueues android.util.SparseArray \l0x0031: INVOKE  (r5 I:java.lang.Object) = \l  (r5 I:android.util.SparseArray)\l  (r3 I:int A[D('track' int)])\l android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x0035: CHECK_CAST  (r5 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput) = (com.google.android.exoplayer2.extractor.DefaultTrackOutput) (r5 I:?[OBJECT, ARRAY]) \l0x0037: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.disable():void type: VIRTUAL \l0x003a: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: APUT  \l  (r12 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r5 I:?[OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|0x003d: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: ARRAY_LENGTH  (r5 I:int) = \l  (r10 I:?[] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r5 I:?[int, byte, short, char])  \-\> B:32:0x0098 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|0x0045: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0047|0x0047: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x008f \l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|0x004b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x008f \l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|0x004d: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY][] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l0x004f: INVOKE  (r5 I:int) = \l  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelection A[D('selection' com.google.android.exoplayer2.trackselection.TrackSelection)])\l com.google.android.exoplayer2.trackselection.TrackSelection.length():int type: INTERFACE \l0x0053: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|0x0054: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0092 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0056|0x0056: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0057|0x0057: INVOKE  (r5 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x005a: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005b: INVOKE  (r5 I:int) = \l  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelection A[D('selection' com.google.android.exoplayer2.trackselection.TrackSelection)])\l  (r5 I:int)\l com.google.android.exoplayer2.trackselection.TrackSelection.getIndexInTrackGroup(int):int type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x005f|0x005f: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0094 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0061|0x0061: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0062|0x0062: INVOKE  (r5 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x0065: IGET  (r5 I:com.google.android.exoplayer2.source.TrackGroupArray) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.tracks com.google.android.exoplayer2.source.TrackGroupArray \l0x0067: INVOKE  (r6 I:com.google.android.exoplayer2.source.TrackGroup) = \l  (r2 I:com.google.android.exoplayer2.trackselection.TrackSelection A[D('selection' com.google.android.exoplayer2.trackselection.TrackSelection)])\l com.google.android.exoplayer2.trackselection.TrackSelection.getTrackGroup():com.google.android.exoplayer2.source.TrackGroup type: INTERFACE \l0x006b: INVOKE  (r3 I:int) = \l  (r5 I:com.google.android.exoplayer2.source.TrackGroupArray)\l  (r6 I:com.google.android.exoplayer2.source.TrackGroup)\l com.google.android.exoplayer2.source.TrackGroupArray.indexOf(com.google.android.exoplayer2.source.TrackGroup):int type: VIRTUAL \l0x006f: IGET  (r5 I:boolean[]) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.trackEnabledStates boolean[] \l0x0071: AGET  (r5 I:boolean A[IMMUTABLE_TYPE]) = \l  (r5 I:boolean[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char] A[D('track' int)])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0073|0x0073: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0096 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0075|0x0075: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0076|0x0076: INVOKE  (r5 I:boolean) com.google.android.exoplayer2.util.Assertions.checkState(boolean):void type: STATIC \l0x0079: IGET  (r5 I:int) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.enabledTrackCount int \l0x007b: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x007d: IPUT  \l  (r5 I:int)\l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.enabledTrackCount int \l0x007f: IGET  (r5 I:boolean[]) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.trackEnabledStates boolean[] \l0x0081: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0082: APUT  \l  (r5 I:boolean[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char] A[D('track' int)])\l  (r6 I:boolean A[IMMUTABLE_TYPE])\l \l0x0084: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$SampleStreamImpl) =  com.google.android.exoplayer2.source.ExtractorMediaPeriod$SampleStreamImpl \l0x0086: INVOKE  \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$SampleStreamImpl)\l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l  (r3 I:int A[D('track' int)])\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.SampleStreamImpl.\<init\>(com.google.android.exoplayer2.source.ExtractorMediaPeriod, int):void type: DIRECT \l0x0089: APUT  \l  (r12 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x008b: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x008c: APUT  \l  (r13 I:boolean[] A[D('streamResetFlags' boolean[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r5 I:boolean A[IMMUTABLE_TYPE])\l \l0x008e: CONST  (r1 I:?[boolean, int, float, short, byte, char] A[D('selectedNewTracks' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x008f|0x008f: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0092|0x0092: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x0094|0x0094: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x0096|0x0096: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x0098|0x0098: IGET  (r5 I:boolean) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.seenFirstTrackSelection boolean \l}"];
Node_33 [shape=record,label="{33\:\ 0x009a|0x009a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x00b9 \l}"];
Node_34 [shape=record,label="{34\:\ 0x009c|0x009c: IGET  (r5 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.DefaultTrackOutput\>) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.sampleQueues android.util.SparseArray \l0x009e: INVOKE  (r4 I:int) = (r5 I:android.util.SparseArray) android.util.SparseArray.size():int type: VIRTUAL \l0x00a2: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x00a3|0x00a3: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r4 I:?[int, byte, short, char] A[D('trackCount' int)])  \-\> B:40:0x00b9 \l}"];
Node_36 [shape=record,label="{36\:\ 0x00a5|0x00a5: IGET  (r5 I:boolean[]) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.trackEnabledStates boolean[] \l0x00a7: AGET  (r5 I:boolean A[IMMUTABLE_TYPE]) = \l  (r5 I:boolean[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x00a9|0x00a9: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x00b6 \l}"];
Node_38 [shape=record,label="{38\:\ 0x00ab|0x00ab: IGET  (r5 I:android.util.SparseArray\<com.google.android.exoplayer2.extractor.DefaultTrackOutput\>) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.sampleQueues android.util.SparseArray \l0x00ad: INVOKE  (r5 I:java.lang.Object) = (r5 I:android.util.SparseArray), (r0 I:int A[D('i' int)]) android.util.SparseArray.valueAt(int):java.lang.Object type: VIRTUAL \l0x00b1: CHECK_CAST  (r5 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput) = (com.google.android.exoplayer2.extractor.DefaultTrackOutput) (r5 I:?[OBJECT, ARRAY]) \l0x00b3: INVOKE  \l  (r5 I:com.google.android.exoplayer2.extractor.DefaultTrackOutput)\l com.google.android.exoplayer2.extractor.DefaultTrackOutput.disable():void type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x00b6|0x00b6: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_40 [shape=record,label="{40\:\ 0x00b9|0x00b9: IGET  (r5 I:int) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.enabledTrackCount int \l}"];
Node_41 [shape=record,label="{41\:\ 0x00bb|0x00bb: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x00d1 \l}"];
Node_42 [shape=record,label="{42\:\ 0x00bd|0x00bd: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00be: IPUT  \l  (r5 I:boolean)\l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.notifyReset boolean \l0x00c0: IGET  (r5 I:com.google.android.exoplayer2.upstream.Loader) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.loader com.google.android.exoplayer2.upstream.Loader \l0x00c2: INVOKE  (r5 I:boolean) = (r5 I:com.google.android.exoplayer2.upstream.Loader) com.google.android.exoplayer2.upstream.Loader.isLoading():boolean type: VIRTUAL \l}"];
Node_43 [shape=record,label="{43\:\ 0x00c6|0x00c6: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x00cd \l}"];
Node_44 [shape=record,label="{44\:\ 0x00c8|0x00c8: IGET  (r5 I:com.google.android.exoplayer2.upstream.Loader) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.loader com.google.android.exoplayer2.upstream.Loader \l0x00ca: INVOKE  (r5 I:com.google.android.exoplayer2.upstream.Loader) com.google.android.exoplayer2.upstream.Loader.cancelLoading():void type: VIRTUAL \l}"];
Node_45 [shape=record,label="{45\:\ 0x00cd|0x00cd: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00ce: IPUT  \l  (r5 I:boolean)\l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.seenFirstTrackSelection boolean \l}"];
Node_46 [shape=record,label="{46\:\ 0x00d0|0x00d0: RETURN  (r14 I:long A[D('positionUs' long)]) \l}"];
Node_47 [shape=record,label="{47\:\ 0x00d1|0x00d1: IGET  (r5 I:boolean) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.seenFirstTrackSelection boolean \l}"];
Node_48 [shape=record,label="{48\:\ 0x00d3|0x00d3: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x00e9 \l}"];
Node_49 [shape=record,label="{49\:\ 0x00d5|0x00d5: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('selectedNewTracks' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x00cd \l}"];
Node_50 [shape=record,label="{50\:\ 0x00d7|0x00d7: INVOKE  (r14 I:long A[D('positionUs' long)]) = \l  (r9 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod)\l  (r14 I:long A[D('positionUs' long)])\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.seekToUs(long):long type: VIRTUAL \l0x00db: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('i' int)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_51 [shape=record,label="{51\:\ 0x00dc|0x00dc: ARRAY_LENGTH  (r5 I:int) = \l  (r12 I:?[] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l \l}"];
Node_52 [shape=record,label="{52\:\ 0x00dd|0x00dd: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r5 I:?[int, byte, short, char])  \-\> B:45:0x00cd \l}"];
Node_53 [shape=record,label="{53\:\ 0x00df|0x00df: AGET  (r5 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_54 [shape=record,label="{54\:\ 0x00e1|0x00e1: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x00e6 \l}"];
Node_55 [shape=record,label="{55\:\ 0x00e3|0x00e3: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00e4: APUT  \l  (r13 I:boolean[] A[D('streamResetFlags' boolean[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r5 I:boolean A[IMMUTABLE_TYPE])\l \l}"];
Node_56 [shape=record,label="{56\:\ 0x00e6|0x00e6: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_57 [shape=record,label="{57\:\ 0x00e9|0x00e9: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x00eb: CMP_L  (r5 I:int) = (r14 I:long A[D('positionUs' long)]), (r6 I:long) \l}"];
Node_58 [shape=record,label="{58\:\ 0x00ed|0x00ed: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x00cd \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.source.ExtractorMediaPeriod.selectTracks((r9 'this' I:com.google.android.exoplayer2.source.ExtractorMediaPeriod A[IMMUTABLE_TYPE, THIS]), (r10 I:com.google.android.exoplayer2.trackselection.TrackSelection[] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean[] A[D('mayRetainStreamFlags' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:com.google.android.exoplayer2.source.SampleStream[] A[D('streams' com.google.android.exoplayer2.source.SampleStream[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:boolean[] A[D('streamResetFlags' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001d\-0x003d: r3 'track' int\l  0x004f\-0x008f: r2 'selection' com.google.android.exoplayer2.trackselection.TrackSelection\l  0x006f\-0x008f: r3 'track' int\l  0x0092\-0x0098: r2 'selection' com.google.android.exoplayer2.trackselection.TrackSelection\l  0x0096\-0x0098: r3 'track' int\l  0x00a2\-0x00b9: r4 'trackCount' int\l  0x0006\-0x00ef: r0 'i' int\l  0x0041\-0x00ef: r1 'selectedNewTracks' boolean\l  ?\-0x00ef: r10 'selections' com.google.android.exoplayer2.trackselection.TrackSelection[]\l  ?\-0x00ef: r11 'mayRetainStreamFlags' boolean[]\l  ?\-0x00ef: r12 'streams' com.google.android.exoplayer2.source.SampleStream[]\l  ?\-0x00ef: r13 'streamResetFlags' boolean[]\l  ?\-0x00ef: r14 'positionUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_32;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_28;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_28;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_30;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_12;
Node_29 -> Node_21;
Node_30 -> Node_24;
Node_31 -> Node_27;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_40;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_40;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_35;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_47;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_57;
Node_49 -> Node_45;
Node_49 -> Node_50[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_45;
Node_52 -> Node_53[style=dashed];
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_56;
Node_55 -> Node_56;
Node_56 -> Node_51;
Node_57 -> Node_58;
Node_58 -> Node_45;
Node_58 -> Node_50[style=dashed];
}

