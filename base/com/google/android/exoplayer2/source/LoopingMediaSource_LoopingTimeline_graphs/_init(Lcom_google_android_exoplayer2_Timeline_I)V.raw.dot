digraph "CFG forcom.google.android.exoplayer2.source.LoopingMediaSource.LoopingTimeline.\<init\>(Lcom\/google\/android\/exoplayer2\/Timeline;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:com.google.android.exoplayer2.Timeline) com.google.android.exoplayer2.Timeline.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r5 I:com.google.android.exoplayer2.Timeline A[D('childTimeline' com.google.android.exoplayer2.Timeline)])\l  (r4 I:com.google.android.exoplayer2.source.LoopingMediaSource$LoopingTimeline)\l com.google.android.exoplayer2.source.LoopingMediaSource.LoopingTimeline.childTimeline com.google.android.exoplayer2.Timeline \l0x0005: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.Timeline A[D('childTimeline' com.google.android.exoplayer2.Timeline)])\l com.google.android.exoplayer2.Timeline.getPeriodCount():int type: VIRTUAL \l0x0009: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.source.LoopingMediaSource$LoopingTimeline)\l com.google.android.exoplayer2.source.LoopingMediaSource.LoopingTimeline.childPeriodCount int \l0x000b: INVOKE  (r1 I:int) = \l  (r5 I:com.google.android.exoplayer2.Timeline A[D('childTimeline' com.google.android.exoplayer2.Timeline)])\l com.google.android.exoplayer2.Timeline.getWindowCount():int type: VIRTUAL \l0x000f: IPUT  \l  (r1 I:int)\l  (r4 I:com.google.android.exoplayer2.source.LoopingMediaSource$LoopingTimeline)\l com.google.android.exoplayer2.source.LoopingMediaSource.LoopingTimeline.childWindowCount int \l0x0011: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (157680000(0x9660180, float:2.7685948E\-33) ?[int, float, short, byte, char])\l \l0x0014: IGET  (r2 I:int) = \l  (r4 I:com.google.android.exoplayer2.source.LoopingMediaSource$LoopingTimeline)\l com.google.android.exoplayer2.source.LoopingMediaSource.LoopingTimeline.childPeriodCount int \l0x0016: ARITH  (r0 I:int) = (r1 I:int) \/ (r2 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: IF  (r6 I:?[int, byte, short, char] A[D('loopCount' int)]) \<= (r0 I:?[int, byte, short, char] A[D('maxLoopCount' int)])  \-\> B:7:0x0044 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('loopCount' int)]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0041 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: CONST_STR  (r1 I:java.lang.String) =  \"LoopingMediaSource\" \l0x0021: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0023: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0026: CONST_STR  (r3 I:java.lang.String) =  \"Capped loops to avoid overflow: \" \l0x0028: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002c: INVOKE  (r2 I:java.lang.StringBuilder) = \l  (r2 I:java.lang.StringBuilder)\l  (r6 I:int A[D('loopCount' int)])\l java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0030: CONST_STR  (r3 I:java.lang.String) =  \" \-\> \" \l0x0032: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r2 I:java.lang.StringBuilder) = \l  (r2 I:java.lang.StringBuilder)\l  (r0 I:int A[D('maxLoopCount' int)])\l java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x003a: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003e: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|0x0041: IPUT  \l  (r0 I:int A[D('maxLoopCount' int)])\l  (r4 I:com.google.android.exoplayer2.source.LoopingMediaSource$LoopingTimeline)\l com.google.android.exoplayer2.source.LoopingMediaSource.LoopingTimeline.loopCount int \l}"];
Node_6 [shape=record,label="{6\:\ 0x0043|0x0043: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|0x0044: IPUT  \l  (r6 I:int A[D('loopCount' int)])\l  (r4 I:com.google.android.exoplayer2.source.LoopingMediaSource$LoopingTimeline)\l com.google.android.exoplayer2.source.LoopingMediaSource.LoopingTimeline.loopCount int \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.LoopingMediaSource.LoopingTimeline.\<init\>((r4 'this' I:com.google.android.exoplayer2.source.LoopingMediaSource$LoopingTimeline A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.android.exoplayer2.Timeline A[D('childTimeline' com.google.android.exoplayer2.Timeline), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[D('loopCount' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0018\-0x0046: r0 'maxLoopCount' int\l  ?\-0x0046: r5 'childTimeline' com.google.android.exoplayer2.Timeline\l  ?\-0x0046: r6 'loopCount' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_6;
}

