digraph "CFG forcom.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.load()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  \l  (r1 I:int)\l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleSize int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.dataSource com.google.android.exoplayer2.upstream.DataSource A[Catch:\{ all \-\> 0x0048 \}, TRY_ENTER]\l0x0005: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.upstream.DataSpec) =  com.google.android.exoplayer2.upstream.DataSpec A[Catch:\{ all \-\> 0x0048 \}]\l0x0007: IGET  (r3 I:android.net.Uri) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.uri android.net.Uri A[Catch:\{ all \-\> 0x0048 \}]\l0x0009: INVOKE  \l  (r2 I:com.google.android.exoplayer2.upstream.DataSpec)\l  (r3 I:android.net.Uri)\l com.google.android.exoplayer2.upstream.DataSpec.\<init\>(android.net.Uri):void type: DIRECT A[Catch:\{ all \-\> 0x0048 \}]\l0x000c: INVOKE  \l  (r1 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r2 I:com.google.android.exoplayer2.upstream.DataSpec)\l com.google.android.exoplayer2.upstream.DataSource.open(com.google.android.exoplayer2.upstream.DataSpec):long type: INTERFACE A[Catch:\{ all \-\> 0x0048 \}]\l0x000f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004f A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r1 I:int) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleSize int A[Catch:\{ all \-\> 0x0048 \}]\l0x0015: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int A[D('result' int)]) A[Catch:\{ all \-\> 0x0048 \}]\l0x0016: IPUT  \l  (r1 I:int)\l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleSize int A[Catch:\{ all \-\> 0x0048 \}]\l0x0018: IGET  (r1 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleData byte[] A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0033 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1024(0x400, float:1.435E\-42) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x0048 \}]\l0x001e: NEW_ARRAY  (r1 I:byte[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ all \-\> 0x0048 \}]\l0x0020: IPUT  \l  (r1 I:byte[])\l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleData byte[] A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.dataSource com.google.android.exoplayer2.upstream.DataSource A[Catch:\{ all \-\> 0x0048 \}]\l0x0024: IGET  (r2 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleData byte[] A[Catch:\{ all \-\> 0x0048 \}]\l0x0026: IGET  (r3 I:int) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleSize int A[Catch:\{ all \-\> 0x0048 \}]\l0x0028: IGET  (r4 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleData byte[] A[Catch:\{ all \-\> 0x0048 \}]\l0x002a: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) A[Catch:\{ all \-\> 0x0048 \}]\l0x002b: IGET  (r5 I:int) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleSize int A[Catch:\{ all \-\> 0x0048 \}]\l0x002d: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) A[Catch:\{ all \-\> 0x0048 \}]\l0x002e: INVOKE  (r0 I:int A[D('result' int)]) = \l  (r1 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r2 I:byte[])\l  (r3 I:int)\l  (r4 I:int)\l com.google.android.exoplayer2.upstream.DataSource.read(byte[], int, int):int type: INTERFACE A[Catch:\{ all \-\> 0x0048 \}]\l0x0032: GOTO  \-\> 0x0010 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: IGET  (r1 I:int) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleSize int A[Catch:\{ all \-\> 0x0048 \}]\l0x0035: IGET  (r2 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleData byte[] A[Catch:\{ all \-\> 0x0048 \}]\l0x0037: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0022 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: IGET  (r1 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleData byte[] A[Catch:\{ all \-\> 0x0048 \}]\l0x003c: IGET  (r2 I:byte[]) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleData byte[] A[Catch:\{ all \-\> 0x0048 \}]\l0x003e: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) A[Catch:\{ all \-\> 0x0048 \}]\l0x003f: ARITH  (r2 I:int) = (r2 I:int) * (2 int) A[Catch:\{ all \-\> 0x0048 \}]\l0x0041: INVOKE  (r1 I:byte[]) = (r1 I:byte[]), (r2 I:int) java.util.Arrays.copyOf(byte[], int):byte[] type: STATIC A[Catch:\{ all \-\> 0x0048 \}]\l0x0045: IPUT  \l  (r1 I:byte[])\l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.sampleData byte[] A[Catch:\{ all \-\> 0x0048 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|ExcHandler: all null\lSplitter:B:1:0x0003\l|0x0048: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|0x0049: IGET  (r2 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.dataSource com.google.android.exoplayer2.upstream.DataSource \l0x004b: INVOKE  (r2 I:com.google.android.exoplayer2.upstream.DataSource) com.google.android.exoplayer2.util.Util.closeQuietly(com.google.android.exoplayer2.upstream.DataSource):void type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|0x004e: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|0x004f: IGET  (r1 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.dataSource com.google.android.exoplayer2.upstream.DataSource \l0x0051: INVOKE  (r1 I:com.google.android.exoplayer2.upstream.DataSource) com.google.android.exoplayer2.util.Util.closeQuietly(com.google.android.exoplayer2.upstream.DataSource):void type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x0054|0x0054: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.load((r6 'this' I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable A[IMMUTABLE_TYPE, THIS]))  | Debug Info:\l  0x0010\-0x0048: r0 'result' int\l  0x004f\-0x0054: r0 'result' int\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_3;
Node_9 -> Node_10;
Node_10 -> Node_8;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_8;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

