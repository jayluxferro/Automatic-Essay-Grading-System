digraph "CFG forcom.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.load()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6.sampleSize = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0048 \}\lSplitter:B:1:0x0003\l|r6.dataSource.open(new com.google.android.exoplayer2.upstream.DataSpec(r6.uri))     \/\/ Catch:\{ all \-\> 0x0048 \}\lr0 = 0     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|LOOP_START\lCatch:\{ all \-\> 0x0048 \}\lPHI: r0 \l  PHI: (r0v1 'result' int) = (r0v0 'result' int), (r0v2 'result' int) binds: [B:2:?, B:8:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0010\-\>B:8:0x0022\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|Catch:\{ all \-\> 0x0048 \}\l|if (r0 == \-1) goto L_0x004f     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|Catch:\{ all \-\> 0x0048 \}\l|r6.sampleSize = r6.sampleSize + r0     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|Catch:\{ all \-\> 0x0048 \}\l|if (r6.sampleData != null) goto L_0x0033     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|Catch:\{ all \-\> 0x0048 \}\l|r6.sampleData = new byte[1024]     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|LOOP_END\lCatch:\{ all \-\> 0x0048 \}\lLOOP:0: B:3:0x0010\-\>B:8:0x0022\l|int r0 = r6.dataSource.read(r6.sampleData, r6.sampleSize, r6.sampleData.length \- r6.sampleSize)     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|Catch:\{ all \-\> 0x0048 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|Catch:\{ all \-\> 0x0048 \}\l|if (r6.sampleSize != r6.sampleData.length) goto L_0x0022     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|Catch:\{ all \-\> 0x0048 \}\l|r6.sampleData = java.util.Arrays.copyOf(r6.sampleData, r6.sampleData.length * 2)     \/\/ Catch:\{ all \-\> 0x0048 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0048|ExcHandler:  FINALLY\lSplitter:B:1:0x0003\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|FINALLY_INSNS\l|com.google.android.exoplayer2.util.Util.closeQuietly(r6.dataSource)\l}"];
Node_14 [shape=record,label="{14\:\ 0x004e|throw r1\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|DONT_GENERATE\l|com.google.android.exoplayer2.upstream.DataSource r1 = r6.dataSource\lcom.google.android.exoplayer2.util.Util.closeQuietly(r1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0054|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ 0x004f|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0022|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0022|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0022|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable.load((r6v0 'this' com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SourceLoadable A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_18;
Node_8 -> Node_3;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_19;
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_15;
Node_18 -> Node_8;
Node_19 -> Node_8;
Node_20 -> Node_8;
}

