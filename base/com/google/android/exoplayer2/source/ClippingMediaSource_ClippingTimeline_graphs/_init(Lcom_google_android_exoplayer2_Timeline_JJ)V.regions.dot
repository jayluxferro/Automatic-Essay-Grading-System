digraph "CFG forcom.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.\<init\>(Lcom\/google\/android\/exoplayer2\/Timeline;JJ)V" {
subgraph cluster_Region_316510501 {
label = "R(6:3|6|9|(1:11)(1:34)|(3:19|22|25)|29) | DECL_VAR: long resolvedEndUs\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|PHI: r4 \l  PHI: (r4v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r9.getWindowCount() == 1)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|PHI: r4 \l  PHI: (r4v5 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r9.getPeriodCount() == 1)\lcom.google.android.exoplayer2.Timeline$Window com.google.android.exoplayer2.Timeline.Window r1 = r9.getWindow(0, new com.google.android.exoplayer2.Timeline.Window(), false)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|PHI: r4 \l  PHI: (r4v9 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(!r1.isDynamic)\l}"];
subgraph cluster_IfRegion_1234884441 {
label = "IF [B:10:0x0030] THEN: R(1:11) ELSE: R(1:34)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0030|if (r12 == Long.MIN_VALUE) goto L_0x0032\l}"];
subgraph cluster_Region_1340997458 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0032|long r2 = r1.durationUs\l}"];
}
subgraph cluster_Region_1371545238 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0084|r2 = r12\l}"];
}
}
subgraph cluster_IfRegion_732372264 {
label = "IF [B:13:0x003d] THEN: R(3:19|22|25) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x003d|if (r1.durationUs != com.google.android.exoplayer2.C1260C.TIME_UNSET) goto L_0x003f\l}"];
subgraph cluster_Region_803923703 {
label = "R(3:19|22|25)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x004a|PHI: r4 \l  PHI: (r4v22 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r10 == 0 \|\| r1.isSeekable)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0054|PHI: r4 \l  PHI: (r4v26 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r2 \<= r1.durationUs)\l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|PHI: r4 \l  PHI: (r4v29 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r10 \<= r2)\l}"];
}
}
Node_29 [shape=record,label="{29\:\ 0x0074|PHI: r4 \l  PHI: (r4v18 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkArgument(r9.getPeriod(0, new com.google.android.exoplayer2.Timeline.Period()).getPositionInWindowUs() == 0)\lr8.timeline = r9\lr8.startUs = r10\lr8.endUs = r2\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0008}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000a}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0013}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0015}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0026}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0028}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0034|PHI: r2 \l  PHI: (r2v1 'resolvedEndUs' long) = (r2v0 'resolvedEndUs' long), (r2v2 'resolvedEndUs' long) binds: [B:34:0x0084, B:11:0x0032] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003f}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0043}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0045}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0047|REMOVE\lADDED_TO_REGION\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0049}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0051}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0053}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0059}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x005b}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x005f}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0071}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0073}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x007d}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x007e}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0080}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0082}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0086}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0088}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x008a}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x008c}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.\<init\>((r8v0 'this' com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline A[IMMUTABLE_TYPE, THIS]), (r9v0 'timeline' com.google.android.exoplayer2.Timeline A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'startUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 'endUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_34[style=dashed];
Node_11 -> Node_12;
Node_34 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_26[style=dashed];
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_25 -> Node_26;
Node_29 -> Node_30;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_32;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_33;
Node_8 -> Node_9;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_35;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_20 -> Node_36;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_23 -> Node_37;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_38;
Node_28 -> Node_29;
Node_31 -> Node_3;
Node_32 -> Node_6;
Node_33 -> Node_9;
Node_35 -> Node_19;
Node_36 -> Node_22;
Node_37 -> Node_25;
Node_38 -> Node_29;
}

