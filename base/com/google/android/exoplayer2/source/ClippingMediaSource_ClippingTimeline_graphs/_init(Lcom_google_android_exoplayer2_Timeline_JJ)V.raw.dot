digraph "CFG forcom.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.\<init\>(Lcom\/google\/android\/exoplayer2\/Timeline;JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r8 I:com.google.android.exoplayer2.Timeline) com.google.android.exoplayer2.Timeline.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r4 I:int) = \l  (r9 I:com.google.android.exoplayer2.Timeline A[D('timeline' com.google.android.exoplayer2.Timeline)])\l com.google.android.exoplayer2.Timeline.getWindowCount():int type: VIRTUAL \l0x0007: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x007e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r4 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x000e: INVOKE  (r4 I:int) = \l  (r9 I:com.google.android.exoplayer2.Timeline A[D('timeline' com.google.android.exoplayer2.Timeline)])\l com.google.android.exoplayer2.Timeline.getPeriodCount():int type: VIRTUAL \l0x0012: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0080 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INVOKE  (r4 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x0019: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001a: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.Timeline$Window) =  com.google.android.exoplayer2.Timeline$Window \l0x001c: INVOKE  (r5 I:com.google.android.exoplayer2.Timeline$Window) com.google.android.exoplayer2.Timeline.Window.\<init\>():void type: DIRECT \l0x001f: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: INVOKE  (r1 I:com.google.android.exoplayer2.Timeline$Window) = \l  (r9 I:com.google.android.exoplayer2.Timeline A[D('timeline' com.google.android.exoplayer2.Timeline)])\l  (r4 I:int)\l  (r5 I:com.google.android.exoplayer2.Timeline$Window)\l  (r6 I:boolean)\l com.google.android.exoplayer2.Timeline.getWindow(int, com.google.android.exoplayer2.Timeline$Window, boolean):com.google.android.exoplayer2.Timeline$Window type: VIRTUAL \l0x0024: IGET  (r4 I:boolean) = \l  (r1 I:com.google.android.exoplayer2.Timeline$Window A[D('window' com.google.android.exoplayer2.Timeline$Window)])\l com.google.android.exoplayer2.Timeline.Window.isDynamic boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0082 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: INVOKE  (r4 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x002c: CONST  (r4 I:?[long, double]) = (\-9223372036854775808 ?[long, double]) \l0x002e: CMP_L  (r4 I:int) = (r12 I:long A[D('endUs' long)]), (r4 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0084 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: IGET  (r2 I:long) = \l  (r1 I:com.google.android.exoplayer2.Timeline$Window A[D('window' com.google.android.exoplayer2.Timeline$Window)])\l com.google.android.exoplayer2.Timeline.Window.durationUs long \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: IGET  (r4 I:long) = \l  (r1 I:com.google.android.exoplayer2.Timeline$Window A[D('window' com.google.android.exoplayer2.Timeline$Window)])\l com.google.android.exoplayer2.Timeline.Window.durationUs long \l0x0036: CONST  (r6 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x003b: CMP_L  (r4 I:int) = (r4 I:long), (r6 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x005f \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0041: CMP_L  (r4 I:int) = (r10 I:long A[D('startUs' long)]), (r4 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|0x0043: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0049 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|0x0045: IGET  (r4 I:boolean) = \l  (r1 I:com.google.android.exoplayer2.Timeline$Window A[D('window' com.google.android.exoplayer2.Timeline$Window)])\l com.google.android.exoplayer2.Timeline.Window.isSeekable boolean \l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|0x0047: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0086 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0049|0x0049: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: INVOKE  (r4 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x004d: IGET  (r4 I:long) = \l  (r1 I:com.google.android.exoplayer2.Timeline$Window A[D('window' com.google.android.exoplayer2.Timeline$Window)])\l com.google.android.exoplayer2.Timeline.Window.durationUs long \l0x004f: CMP_L  (r4 I:int) = (r2 I:long A[D('resolvedEndUs' long)]), (r4 I:long) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0051|0x0051: IF  (r4 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:36:0x0088 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0053|0x0053: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0054|0x0054: INVOKE  (r4 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x0057: CMP_L  (r4 I:int) = \l  (r10 I:long A[D('startUs' long)])\l  (r2 I:long A[D('resolvedEndUs' long)])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|0x0059: IF  (r4 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:37:0x008a \l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|0x005b: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|0x005c: INVOKE  (r4 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l}"];
Node_26 [shape=record,label="{26\:\ 0x005f|0x005f: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0060: NEW_INSTANCE  (r5 I:com.google.android.exoplayer2.Timeline$Period) =  com.google.android.exoplayer2.Timeline$Period \l0x0062: INVOKE  (r5 I:com.google.android.exoplayer2.Timeline$Period) com.google.android.exoplayer2.Timeline.Period.\<init\>():void type: DIRECT \l0x0065: INVOKE  (r0 I:com.google.android.exoplayer2.Timeline$Period) = \l  (r9 I:com.google.android.exoplayer2.Timeline A[D('timeline' com.google.android.exoplayer2.Timeline)])\l  (r4 I:int)\l  (r5 I:com.google.android.exoplayer2.Timeline$Period)\l com.google.android.exoplayer2.Timeline.getPeriod(int, com.google.android.exoplayer2.Timeline$Period):com.google.android.exoplayer2.Timeline$Period type: VIRTUAL \l0x0069: INVOKE  (r4 I:long) = \l  (r0 I:com.google.android.exoplayer2.Timeline$Period A[D('period' com.google.android.exoplayer2.Timeline$Period)])\l com.google.android.exoplayer2.Timeline.Period.getPositionInWindowUs():long type: VIRTUAL \l0x006d: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x006f: CMP_L  (r4 I:int) = (r4 I:long), (r6 I:long) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0071|0x0071: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x008c \l}"];
Node_28 [shape=record,label="{28\:\ 0x0073|0x0073: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0074|0x0074: INVOKE  (r4 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x0077: IPUT  \l  (r9 I:com.google.android.exoplayer2.Timeline A[D('timeline' com.google.android.exoplayer2.Timeline)])\l  (r8 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline)\l com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.timeline com.google.android.exoplayer2.Timeline \l0x0079: IPUT  \l  (r10 I:long A[D('startUs' long)])\l  (r8 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline)\l com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.startUs long \l0x007b: IPUT  \l  (r2 I:long A[D('resolvedEndUs' long)])\l  (r8 I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline)\l com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.endUs long \l}"];
Node_30 [shape=record,label="{30\:\ 0x007d|0x007d: RETURN   \l}"];
Node_31 [shape=record,label="{31\:\ 0x007e|0x007e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x0080|0x0080: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_33 [shape=record,label="{33\:\ 0x0082|0x0082: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_34 [shape=record,label="{34\:\ 0x0084|0x0084: MOVE  (r2 I:?[long, double]) = (r12 I:?[long, double] A[D('endUs' long)]) \l}"];
Node_35 [shape=record,label="{35\:\ 0x0086|0x0086: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_36 [shape=record,label="{36\:\ 0x0088|0x0088: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x008a|0x008a: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_38 [shape=record,label="{38\:\ 0x008c|0x008c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline.\<init\>((r8 'this' I:com.google.android.exoplayer2.source.ClippingMediaSource$ClippingTimeline A[IMMUTABLE_TYPE, THIS]), (r9 I:com.google.android.exoplayer2.Timeline A[D('timeline' com.google.android.exoplayer2.Timeline), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:long A[D('startUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[D('endUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0069\-0x007e: r0 'period' com.google.android.exoplayer2.Timeline$Period\l  0x0024\-0x007e: r1 'window' com.google.android.exoplayer2.Timeline$Window\l  0x0034\-0x007e: r2 'resolvedEndUs' long\l  0x008c\-0x008d: r0 'period' com.google.android.exoplayer2.Timeline$Period\l  0x0082\-0x008d: r1 'window' com.google.android.exoplayer2.Timeline$Window\l  0x0086\-0x008d: r2 'resolvedEndUs' long\l  ?\-0x008d: r9 'timeline' com.google.android.exoplayer2.Timeline\l  ?\-0x008d: r10 'startUs' long\l  ?\-0x008d: r12 'endUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_32;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_33;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_34;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_26;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_35;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_36;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_37;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_38;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_3;
Node_32 -> Node_6;
Node_33 -> Node_9;
Node_34 -> Node_12;
Node_35 -> Node_19;
Node_36 -> Node_22;
Node_37 -> Node_25;
Node_38 -> Node_29;
}

