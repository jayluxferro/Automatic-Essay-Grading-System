digraph "CFG forcom.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.loadCompleted(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;IILcom\/google\/android\/exoplayer2\/Format;ILjava\/lang\/Object;JJJJJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0002: IGET  (r2 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener) = \l  (r0 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher)\l com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.listener com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0008: IGET  (r0 I:android.os.Handler) = \l  (r0 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher)\l com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.handler android.os.Handler \l0x000a: MOVE  (r20 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x000c: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher$2) =  com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher$2 \l0x000e: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0010: MOVE  (r4 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l \l0x0012: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('dataType' int)])\l \l0x0014: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackType' int)])\l \l0x0016: MOVE  (r7 I:?[OBJECT, ARRAY]) = \l  (r25 I:?[OBJECT, ARRAY] A[D('trackFormat' com.google.android.exoplayer2.Format)])\l \l0x0018: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('trackSelectionReason' int)])\l \l0x001a: MOVE  (r9 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('trackSelectionData' java.lang.Object)])\l \l0x001c: MOVE  (r10 I:?[long, double]) = (r28 I:?[long, double] A[D('mediaStartTimeUs' long)]) \l0x001e: MOVE  (r12 I:?[long, double]) = (r30 I:?[long, double] A[D('mediaEndTimeUs' long)]) \l0x0020: MOVE  (r14 I:?[long, double]) = (r32 I:?[long, double] A[D('elapsedRealtimeMs' long)]) \l0x0022: MOVE  (r16 I:?[long, double]) = (r34 I:?[long, double] A[D('loadDurationMs' long)]) \l0x0024: MOVE  (r18 I:?[long, double]) = (r36 I:?[long, double] A[D('bytesLoaded' long)]) \l0x0026: INVOKE  \l  (r2 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher$2)\l  (r3 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher)\l  (r4 I:com.google.android.exoplayer2.upstream.DataSpec)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:com.google.android.exoplayer2.Format)\l  (r8 I:int)\l  (r9 I:java.lang.Object)\l  (r10 I:long)\l  (r12 I:long)\l  (r14 I:long)\l  (r16 I:long)\l  (r18 I:long)\l com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.2.\<init\>(com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher, com.google.android.exoplayer2.upstream.DataSpec, int, int, com.google.android.exoplayer2.Format, int, java.lang.Object, long, long, long, long, long):void type: DIRECT \l0x0029: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x002b: INVOKE  (r0 I:android.os.Handler), (r2 I:java.lang.Runnable) android.os.Handler.post(java.lang.Runnable):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x002e|0x002e: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.loadCompleted((r21 'this' I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher A[IMMUTABLE_TYPE, THIS]), (r22 I:com.google.android.exoplayer2.upstream.DataSpec A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[D('dataType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int A[D('trackType' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:com.google.android.exoplayer2.Format A[D('trackFormat' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:int A[D('trackSelectionReason' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:java.lang.Object A[D('trackSelectionData' java.lang.Object), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:long A[D('mediaStartTimeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30 I:long A[D('mediaEndTimeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:long A[D('elapsedRealtimeMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:long A[D('loadDurationMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36 I:long A[D('bytesLoaded' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x002e: r22 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\l  ?\-0x002e: r23 'dataType' int\l  ?\-0x002e: r24 'trackType' int\l  ?\-0x002e: r25 'trackFormat' com.google.android.exoplayer2.Format\l  ?\-0x002e: r26 'trackSelectionReason' int\l  ?\-0x002e: r27 'trackSelectionData' java.lang.Object\l  ?\-0x002e: r28 'mediaStartTimeUs' long\l  ?\-0x002e: r30 'mediaEndTimeUs' long\l  ?\-0x002e: r32 'elapsedRealtimeMs' long\l  ?\-0x002e: r34 'loadDurationMs' long\l  ?\-0x002e: r36 'bytesLoaded' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

