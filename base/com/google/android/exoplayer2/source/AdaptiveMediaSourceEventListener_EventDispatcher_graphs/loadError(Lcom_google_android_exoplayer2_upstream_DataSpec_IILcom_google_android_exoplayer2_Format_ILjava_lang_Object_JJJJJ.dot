digraph "CFG forcom.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.loadError(Lcom\/google\/android\/exoplayer2\/upstream\/DataSpec;IILcom\/google\/android\/exoplayer2\/Format;ILjava\/lang\/Object;JJJJJLjava\/io\/IOException;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r23.listener == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|r4 = r24\lr5 = r25\lr6 = r26\lr7 = r27\lr8 = r28\lr9 = r29\lr10 = r30\lr12 = r32\lr14 = r34\lr16 = r36\lr18 = r38\lr20 = r40\lr21 = r41\lr0 = r23.handler\lr0.post(new com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.C13304(r23))\l}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.loadError((r23v0 'this' com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher A[IMMUTABLE_TYPE, THIS]), (r24v0 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 'dataType' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 'trackType' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 'trackFormat' com.google.android.exoplayer2.Format A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 'trackSelectionReason' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 'trackSelectionData' java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 'mediaStartTimeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 'mediaEndTimeUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 'elapsedRealtimeMs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36v0 'loadDurationMs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r38v0 'bytesLoaded' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r40v0 'error' java.io.IOException A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r41v0 'wasCanceled' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

