digraph "CFG forcom.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.\<init\>(Landroid\/os\/Handler;Lcom\/google\/android\/exoplayer2\/source\/AdaptiveMediaSourceEventListener;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('listener' com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.lang.Object A[D('handler' android.os.Handler)]) com.google.android.exoplayer2.util.Assertions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0009: CHECK_CAST  (r0 I:android.os.Handler) = (android.os.Handler) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IPUT  \l  (r0 I:android.os.Handler)\l  (r1 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher)\l com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.handler android.os.Handler \l0x000d: IPUT  \l  (r3 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener A[D('listener' com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener)])\l  (r1 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher)\l com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.listener com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener \l0x000f: IPUT  \l  (r4 I:long A[D('mediaTimeOffsetMs' long)])\l  (r1 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher)\l com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.mediaTimeOffsetMs long \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener.EventDispatcher.\<init\>((r1 'this' I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher A[IMMUTABLE_TYPE, THIS]), (r2 I:android.os.Handler A[D('handler' android.os.Handler), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener A[D('listener' com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('mediaTimeOffsetMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0013: r2 'handler' android.os.Handler\l  ?\-0x0013: r3 'listener' com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener\l  ?\-0x0013: r4 'mediaTimeOffsetMs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

