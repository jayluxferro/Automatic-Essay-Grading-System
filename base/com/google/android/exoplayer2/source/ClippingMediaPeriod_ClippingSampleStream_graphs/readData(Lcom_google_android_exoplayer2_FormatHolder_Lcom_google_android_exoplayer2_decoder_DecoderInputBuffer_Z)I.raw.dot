digraph "CFG forcom.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.readData(Lcom\/google\/android\/exoplayer2\/FormatHolder;Lcom\/google\/android\/exoplayer2\/decoder\/DecoderInputBuffer;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r10 I:?[long, double]) = (\-9223372036854775808 ?[long, double]) \l0x0002: CONST  (r8 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0003: CONST  (r1 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l0x0004: CONST  (r2 I:?[int, float, short, byte, char]) = (\-4 ?[int, float, short, byte, char]) \l0x0005: IGET  (r3 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream)\l com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.pendingDiscontinuity boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r3 I:boolean) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream)\l com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.sentEos boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: INVOKE  \l  (r14 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l  (r8 I:int)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.setFlags(int):void type: VIRTUAL \l0x0012: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IGET  (r3 I:com.google.android.exoplayer2.source.SampleStream) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream)\l com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.stream com.google.android.exoplayer2.source.SampleStream \l0x0016: INVOKE  (r0 I:int) = \l  (r3 I:com.google.android.exoplayer2.source.SampleStream)\l  (r13 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder)])\l  (r14 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l  (r15 I:boolean A[D('requireFormat' boolean)])\l com.google.android.exoplayer2.source.SampleStream.readData(com.google.android.exoplayer2.FormatHolder, com.google.android.exoplayer2.decoder.DecoderInputBuffer, boolean):int type: INTERFACE \l0x001a: IGET  (r4 I:long) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream)\l com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.endUs long \l0x001c: CMP_L  (r3 I:int) = (r4 I:long), (r10 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0041 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: IGET  (r4 I:long) = \l  (r14 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.timeUs long \l0x0024: IGET  (r6 I:long) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream)\l com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.endUs long \l0x0026: CMP_L  (r3 I:int) = (r4 I:long), (r6 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:15:0x0036 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0041 \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: IGET  (r1 I:com.google.android.exoplayer2.source.MediaPeriod) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream)\l com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.mediaPeriod com.google.android.exoplayer2.source.MediaPeriod \l0x002e: INVOKE  (r4 I:long) = (r1 I:com.google.android.exoplayer2.source.MediaPeriod) com.google.android.exoplayer2.source.MediaPeriod.getBufferedPositionUs():long type: INTERFACE \l0x0032: CMP_L  (r1 I:int) = (r4 I:long), (r10 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0041 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: INVOKE  \l  (r14 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.clear():void type: VIRTUAL \l0x0039: INVOKE  \l  (r14 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l  (r8 I:int)\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.setFlags(int):void type: VIRTUAL \l0x003c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003d: IPUT  \l  (r1 I:boolean)\l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream)\l com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.sentEos boolean \l0x003f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('result' int)]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|0x0041: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('result' int)]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_17 [shape=record,label="{17\:\ 0x0043|0x0043: INVOKE  (r1 I:boolean) = \l  (r14 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.isEndOfStream():boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0047|0x0047: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|0x0049: IGET  (r2 I:long) = \l  (r14 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.timeUs long \l0x004b: IGET  (r4 I:long) = \l  (r12 I:com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream)\l com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.startUs long \l0x004d: ARITH  (r2 I:long) = (r2 I:long) \- (r4 I:long) \l0x004e: IPUT  \l  (r2 I:long)\l  (r14 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer)])\l com.google.android.exoplayer2.decoder.DecoderInputBuffer.timeUs long \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.readData((r12 'this' I:com.google.android.exoplayer2.source.ClippingMediaPeriod$ClippingSampleStream A[IMMUTABLE_TYPE, THIS]), (r13 I:com.google.android.exoplayer2.FormatHolder A[D('formatHolder' com.google.android.exoplayer2.FormatHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:com.google.android.exoplayer2.decoder.DecoderInputBuffer A[D('buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:boolean A[D('requireFormat' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001a\-0x0050: r0 'result' int\l  ?\-0x0050: r13 'formatHolder' com.google.android.exoplayer2.FormatHolder\l  ?\-0x0050: r14 'buffer' com.google.android.exoplayer2.decoder.DecoderInputBuffer\l  ?\-0x0050: r15 'requireFormat' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_3;
Node_16 -> Node_3;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_3;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_3;
}

