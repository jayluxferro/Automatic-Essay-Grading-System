digraph "CFG forcom.google.android.exoplayer2.source.SingleSampleMediaPeriod.selectTracks([Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;[Z[Lcom\/google\/android\/exoplayer2\/source\/SampleStream;[ZJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: ARRAY_LENGTH  (r2 I:int) = \l  (r6 I:?[] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char] A[D('i' int)]) \>= (r2 I:?[int, byte, short, char])  \-\> B:16:0x0034 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0011 \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: AGET  (r2 I:boolean A[IMMUTABLE_TYPE]) = \l  (r7 I:boolean[] A[D('mayRetainStreamFlags' boolean[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: IGET  (r2 I:java.util.ArrayList\<com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SampleStreamImpl\>) = \l  (r5 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.sampleStreams java.util.ArrayList \l0x0013: AGET  (r3 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l0x0015: INVOKE  (r2 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.remove(java.lang.Object):boolean type: VIRTUAL \l0x0018: APUT  \l  (r8 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r4 I:?[OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0031 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|0x001e: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r6 I:?[OBJECT, ARRAY][] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|0x0020: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0031 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|0x0022: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SampleStreamImpl) =  com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SampleStreamImpl \l0x0024: INVOKE  \l  (r1 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SampleStreamImpl)\l  (r5 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod)\l  (r4 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod$1)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SampleStreamImpl.\<init\>(com.google.android.exoplayer2.source.SingleSampleMediaPeriod, com.google.android.exoplayer2.source.SingleSampleMediaPeriod$1):void type: DIRECT \l0x0027: IGET  (r2 I:java.util.ArrayList\<com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SampleStreamImpl\>) = \l  (r5 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.sampleStreams java.util.ArrayList \l0x0029: INVOKE  \l  (r2 I:java.util.ArrayList)\l  (r1 I:java.lang.Object A[D('stream' com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SampleStreamImpl)])\l java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x002c: APUT  \l  (r8 I:?[OBJECT, ARRAY][] A[D('streams' com.google.android.exoplayer2.source.SampleStream[])])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r1 I:?[OBJECT, ARRAY] A[D('stream' com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SampleStreamImpl)])\l \l0x002e: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002f: APUT  \l  (r9 I:boolean[] A[D('streamResetFlags' boolean[]), IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char] A[D('i' int)])\l  (r2 I:boolean A[IMMUTABLE_TYPE])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: ARITH  (r0 I:int A[D('i' int)]) = (r0 I:int A[D('i' int)]) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|0x0034: RETURN  (r10 I:long A[D('positionUs' long)]) \l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.source.SingleSampleMediaPeriod.selectTracks((r5 'this' I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod A[IMMUTABLE_TYPE, THIS]), (r6 I:com.google.android.exoplayer2.trackselection.TrackSelection[] A[D('selections' com.google.android.exoplayer2.trackselection.TrackSelection[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:boolean[] A[D('mayRetainStreamFlags' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.android.exoplayer2.source.SampleStream[] A[D('streams' com.google.android.exoplayer2.source.SampleStream[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean[] A[D('streamResetFlags' boolean[]), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0027\-0x0031: r1 'stream' com.google.android.exoplayer2.source.SingleSampleMediaPeriod$SampleStreamImpl\l  0x0002\-0x0034: r0 'i' int\l  ?\-0x0034: r6 'selections' com.google.android.exoplayer2.trackselection.TrackSelection[]\l  ?\-0x0034: r7 'mayRetainStreamFlags' boolean[]\l  ?\-0x0034: r8 'streams' com.google.android.exoplayer2.source.SampleStream[]\l  ?\-0x0034: r9 'streamResetFlags' boolean[]\l  ?\-0x0034: r10 'positionUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_1;
}

