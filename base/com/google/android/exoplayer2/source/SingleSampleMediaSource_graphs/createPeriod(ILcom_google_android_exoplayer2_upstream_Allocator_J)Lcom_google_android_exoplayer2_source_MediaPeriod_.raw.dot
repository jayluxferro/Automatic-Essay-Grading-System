digraph "CFG forcom.google.android.exoplayer2.source.SingleSampleMediaSource.createPeriod(ILcom\/google\/android\/exoplayer2\/upstream\/Allocator;J)Lcom\/google\/android\/exoplayer2\/source\/MediaPeriod;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('index' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001a \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r0 I:boolean) com.google.android.exoplayer2.util.Assertions.checkArgument(boolean):void type: STATIC \l0x0006: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod) =  com.google.android.exoplayer2.source.SingleSampleMediaPeriod \l0x0008: IGET  (r1 I:android.net.Uri) = \l  (r8 I:com.google.android.exoplayer2.source.SingleSampleMediaSource)\l com.google.android.exoplayer2.source.SingleSampleMediaSource.uri android.net.Uri \l0x000a: IGET  (r2 I:com.google.android.exoplayer2.upstream.DataSource$Factory) = \l  (r8 I:com.google.android.exoplayer2.source.SingleSampleMediaSource)\l com.google.android.exoplayer2.source.SingleSampleMediaSource.dataSourceFactory com.google.android.exoplayer2.upstream.DataSource$Factory \l0x000c: IGET  (r3 I:com.google.android.exoplayer2.Format) = \l  (r8 I:com.google.android.exoplayer2.source.SingleSampleMediaSource)\l com.google.android.exoplayer2.source.SingleSampleMediaSource.format com.google.android.exoplayer2.Format \l0x000e: IGET  (r4 I:int) = \l  (r8 I:com.google.android.exoplayer2.source.SingleSampleMediaSource)\l com.google.android.exoplayer2.source.SingleSampleMediaSource.minLoadableRetryCount int \l0x0010: IGET  (r5 I:android.os.Handler) = \l  (r8 I:com.google.android.exoplayer2.source.SingleSampleMediaSource)\l com.google.android.exoplayer2.source.SingleSampleMediaSource.eventHandler android.os.Handler \l0x0012: IGET  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaSource$EventListener) = \l  (r8 I:com.google.android.exoplayer2.source.SingleSampleMediaSource)\l com.google.android.exoplayer2.source.SingleSampleMediaSource.eventListener com.google.android.exoplayer2.source.SingleSampleMediaSource$EventListener \l0x0014: IGET  (r7 I:int) = \l  (r8 I:com.google.android.exoplayer2.source.SingleSampleMediaSource)\l com.google.android.exoplayer2.source.SingleSampleMediaSource.eventSourceId int \l0x0016: INVOKE  \l  (r0 I:com.google.android.exoplayer2.source.SingleSampleMediaPeriod)\l  (r1 I:android.net.Uri)\l  (r2 I:com.google.android.exoplayer2.upstream.DataSource$Factory)\l  (r3 I:com.google.android.exoplayer2.Format)\l  (r4 I:int)\l  (r5 I:android.os.Handler)\l  (r6 I:com.google.android.exoplayer2.source.SingleSampleMediaSource$EventListener)\l  (r7 I:int)\l com.google.android.exoplayer2.source.SingleSampleMediaPeriod.\<init\>(android.net.Uri, com.google.android.exoplayer2.upstream.DataSource$Factory, com.google.android.exoplayer2.Format, int, android.os.Handler, com.google.android.exoplayer2.source.SingleSampleMediaSource$EventListener, int):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: RETURN  (r0 I:com.google.android.exoplayer2.source.MediaPeriod) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.source.MediaPeriod com.google.android.exoplayer2.source.SingleSampleMediaSource.createPeriod((r8 'this' I:com.google.android.exoplayer2.source.SingleSampleMediaSource A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[D('index' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.google.android.exoplayer2.upstream.Allocator A[D('allocator' com.google.android.exoplayer2.upstream.Allocator), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001b: r9 'index' int\l  ?\-0x001b: r10 'allocator' com.google.android.exoplayer2.upstream.Allocator\l  ?\-0x001b: r11 'positionUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_2;
}

