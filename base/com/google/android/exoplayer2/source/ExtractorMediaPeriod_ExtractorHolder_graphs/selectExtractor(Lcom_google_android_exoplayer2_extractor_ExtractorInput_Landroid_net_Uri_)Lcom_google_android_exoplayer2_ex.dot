digraph "CFG forcom.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.selectExtractor(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;Landroid\/net\/Uri;)Lcom\/google\/android\/exoplayer2\/extractor\/Extractor;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5.extractor == null) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0007|com.google.android.exoplayer2.extractor.Extractor[] r2 = r5.extractors\lint r3 = r2.length\lr1 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v8 int) binds: [B:3:0x0007, B:16:0x0046] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000b\-\>B:16:0x0046\l|if (r1 \>= r3) goto L_0x001a\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|r0 = r2[r1]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|SYNTHETIC\lSplitter:B:6:0x000f\l}"];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ EOFException \-\> 0x0049, all \-\> 0x004e \}\lSplitter:B:6:0x000f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|Catch:\{ EOFException \-\> 0x0049, all \-\> 0x004e \}\l|if (r0.sniff(r6) == false) goto L_0x0043     \/\/ Catch:\{ EOFException \-\> 0x0049, all \-\> 0x004e \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|Catch:\{ EOFException \-\> 0x0049, all \-\> 0x004e \}\l|r5.extractor = r0     \/\/ Catch:\{ EOFException \-\> 0x0049, all \-\> 0x004e \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|r6.resetPeekPosition()\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a}"];
Node_12 [shape=record,label="{12\:\ 0x001c|if (r5.extractor != null) goto L_0x0053\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e}"];
Node_14 [shape=record,label="{14\:\ 0x0042|throw new com.google.android.exoplayer2.source.UnrecognizedInputFormatException(new java.lang.StringBuilder().append(\"None of the available extractors (\").append(com.google.android.exoplayer2.util.Util.getCommaDelimitedSimpleClassNames(r5.extractors)).append(\") could read the stream.\").toString(), r7)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|DONT_GENERATE\l|r6.resetPeekPosition()\l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|LOOP_END\lLOOP:0: B:4:0x000b\-\>B:16:0x0046\l|int r1 = r1 + 1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|ExcHandler: EOFException (e java.io.EOFException)\lSplitter:B:6:0x000f\l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|DONT_GENERATE\l|r6.resetPeekPosition()\l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|ExcHandler:  FINALLY\lSplitter:B:6:0x000f\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_20 [shape=record,label="{20\:\ 0x004f|FINALLY_INSNS\l|r6.resetPeekPosition()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0052|throw r1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|r5.extractor.init(r5.extractorOutput)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0015|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x001a|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0046|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0046|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r5.extractor\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return r5.extractor\l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.extractor.Extractor com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.selectExtractor((r5v0 'this' com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder A[IMMUTABLE_TYPE, THIS]), (r6v0 'input' com.google.android.exoplayer2.extractor.ExtractorInput A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'uri' android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_27;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_24;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_17;
Node_6 -> Node_19;
Node_7 -> Node_8;
Node_8 -> Node_15;
Node_8 -> Node_23[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_15 -> Node_25;
Node_16 -> Node_4;
Node_17 -> Node_18;
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_28;
Node_23 -> Node_9;
Node_24 -> Node_11;
Node_25 -> Node_16;
Node_26 -> Node_16;
}

