digraph "CFG forcom.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.selectExtractor(Lcom\/google\/android\/exoplayer2\/extractor\/ExtractorInput;Landroid\/net\/Uri;)Lcom\/google\/android\/exoplayer2\/extractor\/Extractor;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r1 I:com.google.android.exoplayer2.extractor.Extractor) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.extractor com.google.android.exoplayer2.extractor.Extractor \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r1 I:com.google.android.exoplayer2.extractor.Extractor) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.extractor com.google.android.exoplayer2.extractor.Extractor \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r1 I:com.google.android.exoplayer2.extractor.Extractor) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IGET  (r2 I:com.google.android.exoplayer2.extractor.Extractor[]) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.extractors com.google.android.exoplayer2.extractor.Extractor[] \l0x0009: ARRAY_LENGTH  (r3 I:int) = (r2 I:?[]) \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:12:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: AGET  (r0 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|SYNTHETIC\lSplitter:B:7:0x000f\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x000f\l|0x000f: INVOKE  (r4 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.extractor.Extractor A[D('extractor' com.google.android.exoplayer2.extractor.Extractor)])\l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.Extractor.sniff(com.google.android.exoplayer2.extractor.ExtractorInput):boolean type: INTERFACE A[Catch:\{ EOFException \-\> 0x0049, all \-\> 0x004e \}, TRY_ENTER]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0043 A[Catch:\{ EOFException \-\> 0x0049, all \-\> 0x004e \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: IPUT  \l  (r0 I:com.google.android.exoplayer2.extractor.Extractor A[D('extractor' com.google.android.exoplayer2.extractor.Extractor)])\l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.extractor com.google.android.exoplayer2.extractor.Extractor A[Catch:\{ EOFException \-\> 0x0049, all \-\> 0x004e \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0017|0x0017: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.resetPeekPosition():void type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|0x001a: IGET  (r1 I:com.google.android.exoplayer2.extractor.Extractor) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.extractor com.google.android.exoplayer2.extractor.Extractor \l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|0x001c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0053 \l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|0x001e: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.source.UnrecognizedInputFormatException) =  com.google.android.exoplayer2.source.UnrecognizedInputFormatException \l0x0020: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0022: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0025: CONST_STR  (r3 I:java.lang.String) =  \"None of the available extractors (\" \l0x0027: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002b: IGET  (r3 I:com.google.android.exoplayer2.extractor.Extractor[]) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.extractors com.google.android.exoplayer2.extractor.Extractor[] \l0x002d: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.Object[]) com.google.android.exoplayer2.util.Util.getCommaDelimitedSimpleClassNames(java.lang.Object[]):java.lang.String type: STATIC \l0x0031: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0035: CONST_STR  (r3 I:java.lang.String) =  \") could read the stream.\" \l0x0037: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003b: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003f: INVOKE  \l  (r1 I:com.google.android.exoplayer2.source.UnrecognizedInputFormatException)\l  (r2 I:java.lang.String)\l  (r7 I:android.net.Uri A[D('uri' android.net.Uri)])\l com.google.android.exoplayer2.source.UnrecognizedInputFormatException.\<init\>(java.lang.String, android.net.Uri):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|0x0042: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|0x0043: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.resetPeekPosition():void type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|0x0046: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0049|ExcHandler: EOFException null\lSplitter:B:7:0x000f\l|0x0049: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.resetPeekPosition():void type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|ExcHandler: all null\lSplitter:B:7:0x000f\l|0x004e: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x004f|0x004f: INVOKE  \l  (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput)])\l com.google.android.exoplayer2.extractor.ExtractorInput.resetPeekPosition():void type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0052|0x0052: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0053|0x0053: IGET  (r1 I:com.google.android.exoplayer2.extractor.Extractor) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.extractor com.google.android.exoplayer2.extractor.Extractor \l0x0055: IGET  (r2 I:com.google.android.exoplayer2.extractor.ExtractorOutput) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.extractorOutput com.google.android.exoplayer2.extractor.ExtractorOutput \l0x0057: INVOKE  \l  (r1 I:com.google.android.exoplayer2.extractor.Extractor)\l  (r2 I:com.google.android.exoplayer2.extractor.ExtractorOutput)\l com.google.android.exoplayer2.extractor.Extractor.init(com.google.android.exoplayer2.extractor.ExtractorOutput):void type: INTERFACE \l0x005a: IGET  (r1 I:com.google.android.exoplayer2.extractor.Extractor) = \l  (r5 I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder)\l com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.extractor com.google.android.exoplayer2.extractor.Extractor \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.extractor.Extractor com.google.android.exoplayer2.source.ExtractorMediaPeriod.ExtractorHolder.selectExtractor((r5 'this' I:com.google.android.exoplayer2.source.ExtractorMediaPeriod$ExtractorHolder A[IMMUTABLE_TYPE, THIS]), (r6 I:com.google.android.exoplayer2.extractor.ExtractorInput A[D('input' com.google.android.exoplayer2.extractor.ExtractorInput), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.net.Uri A[D('uri' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000f\-0x001a: r0 'extractor' com.google.android.exoplayer2.extractor.Extractor\l  0x0043\-0x0053: r0 'extractor' com.google.android.exoplayer2.extractor.Extractor\l  ?\-0x005c: r6 'input' com.google.android.exoplayer2.extractor.ExtractorInput\l  ?\-0x005c: r7 'uri' android.net.Uri\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_18;
Node_7 -> Node_20;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_23;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_5;
Node_18 -> Node_19;
Node_19 -> Node_17;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_3;
}

