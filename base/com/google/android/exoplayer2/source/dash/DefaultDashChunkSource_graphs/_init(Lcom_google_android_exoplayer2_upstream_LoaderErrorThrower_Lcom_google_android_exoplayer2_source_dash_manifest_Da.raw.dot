digraph "CFG forcom.google.android.exoplayer2.source.dash.DefaultDashChunkSource.\<init\>(Lcom\/google\/android\/exoplayer2\/upstream\/LoaderErrorThrower;Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/DashManifest;IILcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;Lcom\/google\/android\/exoplayer2\/upstream\/DataSource;JIZZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r13 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r14 I:com.google.android.exoplayer2.upstream.LoaderErrorThrower A[D('manifestLoaderErrorThrower' com.google.android.exoplayer2.upstream.LoaderErrorThrower)])\l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.manifestLoaderErrorThrower com.google.android.exoplayer2.upstream.LoaderErrorThrower \l0x0005: IPUT  \l  (r15 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest A[D('manifest' com.google.android.exoplayer2.source.dash.manifest.DashManifest)])\l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.manifest com.google.android.exoplayer2.source.dash.manifest.DashManifest \l0x0007: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('adaptationSetIndex' int)])\l \l0x0009: IPUT  \l  (r0 I:int)\l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.adaptationSetIndex int \l0x000b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('trackSelection' com.google.android.exoplayer2.trackselection.TrackSelection)])\l \l0x000d: IPUT  \l  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x000f: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('dataSource' com.google.android.exoplayer2.upstream.DataSource)])\l \l0x0011: IPUT  \l  (r0 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.dataSource com.google.android.exoplayer2.upstream.DataSource \l0x0013: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('periodIndex' int)])\l \l0x0015: IPUT  \l  (r0 I:int)\l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.periodIndex int \l0x0017: MOVE  (r0 I:?[long, double]) = \l  (r20 I:?[long, double] A[D('elapsedRealtimeOffsetMs' long)])\l \l0x0019: IPUT  \l  (r0 I:long)\l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.elapsedRealtimeOffsetMs long \l0x001b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('maxSegmentsPerLoad' int)])\l \l0x001d: IPUT  \l  (r0 I:int)\l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.maxSegmentsPerLoad int \l0x001f: INVOKE  (r4 I:long) = \l  (r15 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest A[D('manifest' com.google.android.exoplayer2.source.dash.manifest.DashManifest)])\l  (r16 I:int A[D('periodIndex' int)])\l com.google.android.exoplayer2.source.dash.manifest.DashManifest.getPeriodDurationUs(int):long type: VIRTUAL \l0x0023: INVOKE  (r2 I:com.google.android.exoplayer2.source.dash.manifest.AdaptationSet) = \l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.getAdaptationSet():com.google.android.exoplayer2.source.dash.manifest.AdaptationSet type: DIRECT \l0x0027: IGET  (r11 I:java.util.List\<com.google.android.exoplayer2.source.dash.manifest.Representation\>) = \l  (r2 I:com.google.android.exoplayer2.source.dash.manifest.AdaptationSet A[D('adaptationSet' com.google.android.exoplayer2.source.dash.manifest.AdaptationSet)])\l com.google.android.exoplayer2.source.dash.manifest.AdaptationSet.representations java.util.List \l0x0029: INVOKE  (r3 I:int) = \l  (r18 I:com.google.android.exoplayer2.trackselection.TrackSelection A[D('trackSelection' com.google.android.exoplayer2.trackselection.TrackSelection)])\l com.google.android.exoplayer2.trackselection.TrackSelection.length():int type: INTERFACE \l0x002d: NEW_ARRAY  (r3 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder[] \l0x002f: IPUT  \l  (r3 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder[])\l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.representationHolders com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder[] \l0x0031: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0032|0x0032: IGET  (r3 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder[]) = \l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.representationHolders com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder[] \l0x0034: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0035|0x0035: IF  (r10 I:?[int, byte, short, char] A[D('i' int)]) \>= (r3 I:?[int, byte, short, char])  \-\> B:4:0x0055 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0037|0x0037: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('trackSelection' com.google.android.exoplayer2.trackselection.TrackSelection)])\l \l0x0039: INVOKE  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l  (r10 I:int A[D('i' int)])\l com.google.android.exoplayer2.trackselection.TrackSelection.getIndexInTrackGroup(int):int type: INTERFACE \l0x003d: INVOKE  (r6 I:java.lang.Object) = \l  (r11 I:java.util.List A[D('representations' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.Representation\>)])\l  (r3 I:int)\l java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0041: CHECK_CAST  (r6 I:com.google.android.exoplayer2.source.dash.manifest.Representation) = (com.google.android.exoplayer2.source.dash.manifest.Representation) (r6 I:?[OBJECT, ARRAY]) \l0x0043: IGET  (r12 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder[]) = \l  (r13 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.representationHolders com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder[] \l0x0045: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder) =  com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder \l0x0047: IGET  (r9 I:int) = \l  (r2 I:com.google.android.exoplayer2.source.dash.manifest.AdaptationSet A[D('adaptationSet' com.google.android.exoplayer2.source.dash.manifest.AdaptationSet)])\l com.google.android.exoplayer2.source.dash.manifest.AdaptationSet.type int \l0x0049: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('enableEventMessageTrack' boolean)])\l \l0x004b: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('enableCea608Track' boolean)])\l \l0x004d: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)\l  (r4 I:long A[D('periodDurationUs' long)])\l  (r6 I:com.google.android.exoplayer2.source.dash.manifest.Representation A[D('representation' com.google.android.exoplayer2.source.dash.manifest.Representation)])\l  (r7 I:boolean)\l  (r8 I:boolean)\l  (r9 I:int)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder.\<init\>(long, com.google.android.exoplayer2.source.dash.manifest.Representation, boolean, boolean, int):void type: DIRECT \l0x0050: APUT  \l  (r12 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char] A[D('i' int)])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0052: ARITH  (r10 I:int A[D('i' int)]) = (r10 I:int A[D('i' int)]) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0055|0x0055: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.\<init\>((r13 'this' I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource A[IMMUTABLE_TYPE, THIS]), (r14 I:com.google.android.exoplayer2.upstream.LoaderErrorThrower A[D('manifestLoaderErrorThrower' com.google.android.exoplayer2.upstream.LoaderErrorThrower), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest A[D('manifest' com.google.android.exoplayer2.source.dash.manifest.DashManifest), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[D('periodIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('adaptationSetIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:com.google.android.exoplayer2.trackselection.TrackSelection A[D('trackSelection' com.google.android.exoplayer2.trackselection.TrackSelection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:com.google.android.exoplayer2.upstream.DataSource A[D('dataSource' com.google.android.exoplayer2.upstream.DataSource), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:long A[D('elapsedRealtimeOffsetMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[D('maxSegmentsPerLoad' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:boolean A[D('enableEventMessageTrack' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:boolean A[D('enableCea608Track' boolean), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0043\-0x0055: r6 'representation' com.google.android.exoplayer2.source.dash.manifest.Representation\l  0x0027\-0x0055: r2 'adaptationSet' com.google.android.exoplayer2.source.dash.manifest.AdaptationSet\l  0x0023\-0x0055: r4 'periodDurationUs' long\l  0x0032\-0x0055: r10 'i' int\l  0x0029\-0x0055: r11 'representations' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.Representation\>\l  ?\-0x0055: r14 'manifestLoaderErrorThrower' com.google.android.exoplayer2.upstream.LoaderErrorThrower\l  ?\-0x0055: r15 'manifest' com.google.android.exoplayer2.source.dash.manifest.DashManifest\l  ?\-0x0055: r16 'periodIndex' int\l  ?\-0x0055: r17 'adaptationSetIndex' int\l  ?\-0x0055: r18 'trackSelection' com.google.android.exoplayer2.trackselection.TrackSelection\l  ?\-0x0055: r19 'dataSource' com.google.android.exoplayer2.upstream.DataSource\l  ?\-0x0055: r20 'elapsedRealtimeOffsetMs' long\l  ?\-0x0055: r22 'maxSegmentsPerLoad' int\l  ?\-0x0055: r23 'enableEventMessageTrack' boolean\l  ?\-0x0055: r24 'enableCea608Track' boolean\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

