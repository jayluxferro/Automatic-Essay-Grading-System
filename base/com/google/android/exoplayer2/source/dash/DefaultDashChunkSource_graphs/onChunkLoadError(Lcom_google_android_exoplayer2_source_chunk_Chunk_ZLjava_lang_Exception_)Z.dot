digraph "CFG forcom.google.android.exoplayer2.source.dash.DefaultDashChunkSource.onChunkLoadError(Lcom\/google\/android\/exoplayer2\/source\/chunk\/Chunk;ZLjava\/lang\/Exception;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r9 != false) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005}"];
Node_4 [shape=record,label="{4\:\ 0x0009|if (r7.manifest.dynamic != false) goto L_0x0045\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b}"];
Node_6 [shape=record,label="{6\:\ 0x000d|if ((r8 instanceof com.google.android.exoplayer2.source.chunk.MediaChunk) == false) goto L_0x0045\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f}"];
Node_8 [shape=record,label="{8\:\ 0x0011|if ((r10 instanceof com.google.android.exoplayer2.upstream.HttpDataSource.InvalidResponseCodeException) == false) goto L_0x0045\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013}"];
Node_10 [shape=record,label="{10\:\ 0x001a|if (((com.google.android.exoplayer2.upstream.HttpDataSource.InvalidResponseCodeException) r10).responseCode != 404) goto L_0x0045\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|r1 = r7.representationHolders[r7.trackSelection.indexOf(r8.trackFormat)]\lint r2 = r1.getSegmentCount()\l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|if (r2 == \-1) goto L_0x0045\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|if (r2 == 0) goto L_0x0045\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|int r0 = (r1.getFirstSegmentNum() + r2) + \-1\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|if (((com.google.android.exoplayer2.source.chunk.MediaChunk) r8).getNextChunkIndex() \<= r0) goto L_0x0045\l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|r7.missingLastSegment = true\l}"];
Node_17 [shape=record,label="{17\:\ 0x0045}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return com.google.android.exoplayer2.source.chunk.ChunkedTrackBlacklistUtil.maybeBlacklistTrack(r7.trackSelection, r7.trackSelection.indexOf(r8.trackFormat), r10)\l}"];
MethodNode[shape=record,label="{public boolean com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.onChunkLoadError((r7v0 'this' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource A[IMMUTABLE_TYPE, THIS]), (r8v0 'chunk' com.google.android.exoplayer2.source.chunk.Chunk A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 'cancelable' boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 'e' java.lang.Exception A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_17;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_19;
}

