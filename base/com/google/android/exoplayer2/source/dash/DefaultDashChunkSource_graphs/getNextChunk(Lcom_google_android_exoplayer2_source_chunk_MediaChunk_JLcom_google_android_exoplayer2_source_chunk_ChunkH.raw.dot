digraph "CFG forcom.google.android.exoplayer2.source.dash.DefaultDashChunkSource.getNextChunk(Lcom\/google\/android\/exoplayer2\/source\/chunk\/MediaChunk;JLcom\/google\/android\/exoplayer2\/source\/chunk\/ChunkHolder;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0002: IGET  (r3 I:java.io.IOException) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.fatalError java.io.IOException \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r33 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previous' com.google.android.exoplayer2.source.chunk.MediaChunk)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x006d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r33 I:?[OBJECT, ARRAY] A[D('previous' com.google.android.exoplayer2.source.chunk.MediaChunk)])\l \l0x000b: IGET  (r4 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.chunk.MediaChunk)\l com.google.android.exoplayer2.source.chunk.MediaChunk.endTimeUs long \l0x000d: ARITH  (r20 I:long) = (r4 I:long) \- (r34 I:long A[D('playbackPositionUs' long)]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0011: IGET  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x0013: MOVE  (r0 I:?[long, double]) = (r20 I:?[long, double] A[D('bufferedDurationUs' long)]) \l0x0015: INVOKE  \l  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l  (r0 I:long)\l com.google.android.exoplayer2.trackselection.TrackSelection.updateSelectedTrack(long):void type: INTERFACE \l0x0018: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x001a: IGET  (r3 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder[]) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.representationHolders com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder[] \l0x001c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x001e: IGET  (r4 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x0020: INVOKE  (r4 I:int) = \l  (r4 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l com.google.android.exoplayer2.trackselection.TrackSelection.getSelectedIndex():int type: INTERFACE \l0x0024: AGET  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0026: IGET  (r3 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder.extractorWrapper com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0070 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: IGET  (r0 I:com.google.android.exoplayer2.source.dash.manifest.Representation) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder.representation com.google.android.exoplayer2.source.dash.manifest.Representation \l0x002c: MOVE  (r23 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x002e: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0030: IGET  (r3 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder.extractorWrapper com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper \l0x0032: INVOKE  (r3 I:com.google.android.exoplayer2.Format[]) = \l  (r3 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper)\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.getSampleFormats():com.google.android.exoplayer2.Format[] type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: INVOKE  (r7 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri A[D('pendingInitializationUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri)]) = \l  (r23 I:com.google.android.exoplayer2.source.dash.manifest.Representation A[D('selectedRepresentation' com.google.android.exoplayer2.source.dash.manifest.Representation)])\l com.google.android.exoplayer2.source.dash.manifest.Representation.getInitializationUri():com.google.android.exoplayer2.source.dash.manifest.RangedUri type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|0x003c: IGET  (r3 I:com.google.android.exoplayer2.source.dash.DashSegmentIndex) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder.segmentIndex com.google.android.exoplayer2.source.dash.DashSegmentIndex \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0044 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: INVOKE  (r8 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri A[D('pendingIndexUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri)]) = \l  (r23 I:com.google.android.exoplayer2.source.dash.manifest.Representation A[D('selectedRepresentation' com.google.android.exoplayer2.source.dash.manifest.Representation)])\l com.google.android.exoplayer2.source.dash.manifest.Representation.getIndexUri():com.google.android.exoplayer2.source.dash.manifest.RangedUri type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pendingInitializationUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0048 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('pendingIndexUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0070 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x004a: IGET  (r3 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.dataSource com.google.android.exoplayer2.upstream.DataSource \l0x004c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x004e: IGET  (r4 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x0050: INVOKE  (r4 I:com.google.android.exoplayer2.Format) = \l  (r4 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l com.google.android.exoplayer2.trackselection.TrackSelection.getSelectedFormat():com.google.android.exoplayer2.Format type: INTERFACE \l0x0054: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0056: IGET  (r5 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x0058: INVOKE  (r5 I:int) = \l  (r5 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l com.google.android.exoplayer2.trackselection.TrackSelection.getSelectionReason():int type: INTERFACE \l0x005c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x005e: IGET  (r6 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x0060: INVOKE  (r6 I:java.lang.Object) = \l  (r6 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l com.google.android.exoplayer2.trackselection.TrackSelection.getSelectionData():java.lang.Object type: INTERFACE \l0x0064: INVOKE  (r3 I:com.google.android.exoplayer2.source.chunk.Chunk) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l  (r3 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r4 I:com.google.android.exoplayer2.Format)\l  (r5 I:int)\l  (r6 I:java.lang.Object)\l  (r7 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri A[D('pendingInitializationUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri)])\l  (r8 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri A[D('pendingIndexUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri)])\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.newInitializationChunk(com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder, com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.Format, int, java.lang.Object, com.google.android.exoplayer2.source.dash.manifest.RangedUri, com.google.android.exoplayer2.source.dash.manifest.RangedUri):com.google.android.exoplayer2.source.chunk.Chunk type: STATIC \l0x0068: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r36 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.source.chunk.ChunkHolder)])\l \l0x006a: IPUT  \l  (r3 I:com.google.android.exoplayer2.source.chunk.Chunk)\l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkHolder)\l com.google.android.exoplayer2.source.chunk.ChunkHolder.chunk com.google.android.exoplayer2.source.chunk.Chunk \l}"];
Node_16 [shape=record,label="{16\:\ 0x006d|0x006d: CONST  (r20 I:?[long, double] A[D('bufferedDurationUs' long)]) = (0 ?[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0070|0x0070: INVOKE  (r28 I:long) = \l  (r32 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.getNowUnixTimeUs():long type: DIRECT \l0x0074: INVOKE  (r16 I:int) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder.getSegmentCount():int type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0078|0x0078: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('availableSegmentCount' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x009b \l}"];
Node_19 [shape=record,label="{19\:\ 0x007a|0x007a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x007c: IGET  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.manifest com.google.android.exoplayer2.source.dash.manifest.DashManifest \l0x007e: IGET  (r3 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest)\l com.google.android.exoplayer2.source.dash.manifest.DashManifest.dynamic boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x0080|0x0080: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0092 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0082|0x0082: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0084: IGET  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.periodIndex int \l0x0086: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0088: IGET  (r4 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.manifest com.google.android.exoplayer2.source.dash.manifest.DashManifest \l0x008a: INVOKE  (r4 I:int) = \l  (r4 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest)\l com.google.android.exoplayer2.source.dash.manifest.DashManifest.getPeriodCount():int type: VIRTUAL \l0x008e: ARITH  (r4 I:int) = (r4 I:int) + (\-1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0090|0x0090: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:25:0x0099 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0092|0x0092: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0093|0x0093: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r36 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.source.chunk.ChunkHolder)])\l \l0x0095: IPUT  \l  (r3 I:boolean)\l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkHolder)\l com.google.android.exoplayer2.source.chunk.ChunkHolder.endOfStream boolean \l}"];
Node_25 [shape=record,label="{25\:\ 0x0099|0x0099: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x009b|0x009b: INVOKE  (r17 I:int) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder.getFirstSegmentNum():int type: VIRTUAL \l0x009f: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x00a0: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('availableSegmentCount' int)])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a2|0x00a2: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x012d \l}"];
Node_28 [shape=record,label="{28\:\ 0x00a4|0x00a4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x00a6: IGET  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.manifest com.google.android.exoplayer2.source.dash.manifest.DashManifest \l0x00a8: IGET  (r4 I:long) = \l  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest)\l com.google.android.exoplayer2.source.dash.manifest.DashManifest.availabilityStartTime long \l0x00aa: CONST  (r10 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x00ac: ARITH  (r4 I:long) = (r4 I:long) * (r10 I:long) \l0x00ad: ARITH  (r26 I:long) = (r28 I:long A[D('nowUs' long)]) \- (r4 I:long) \l0x00af: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x00b1: IGET  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.manifest com.google.android.exoplayer2.source.dash.manifest.DashManifest \l0x00b3: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x00b5: IGET  (r4 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.periodIndex int \l0x00b7: INVOKE  (r3 I:com.google.android.exoplayer2.source.dash.manifest.Period) = \l  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest)\l  (r4 I:int)\l com.google.android.exoplayer2.source.dash.manifest.DashManifest.getPeriod(int):com.google.android.exoplayer2.source.dash.manifest.Period type: VIRTUAL \l0x00bb: IGET  (r4 I:long) = \l  (r3 I:com.google.android.exoplayer2.source.dash.manifest.Period)\l com.google.android.exoplayer2.source.dash.manifest.Period.startMs long \l0x00bd: CONST  (r10 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x00bf: ARITH  (r30 I:long) = (r4 I:long) * (r10 I:long) \l0x00c1: ARITH  (r24 I:long) = (r26 I:long A[D('liveEdgeTimeUs' long)]) \- (r30 I:long A[D('periodStartUs' long)]) \l0x00c3: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x00c5: IGET  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.manifest com.google.android.exoplayer2.source.dash.manifest.DashManifest \l0x00c7: IGET  (r4 I:long) = \l  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest)\l com.google.android.exoplayer2.source.dash.manifest.DashManifest.timeShiftBufferDepth long \l0x00c9: CONST  (r10 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x00ce: CMP_L  (r3 I:int) = (r4 I:long), (r10 I:long) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00d0|0x00d0: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00e8 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00d2|0x00d2: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x00d4: IGET  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.manifest com.google.android.exoplayer2.source.dash.manifest.DashManifest \l0x00d6: IGET  (r4 I:long) = \l  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest)\l com.google.android.exoplayer2.source.dash.manifest.DashManifest.timeShiftBufferDepth long \l0x00d8: CONST  (r10 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x00da: ARITH  (r18 I:long) = (r4 I:long) * (r10 I:long) \l0x00dc: ARITH  (r4 I:long) = (r24 I:long A[D('liveEdgeTimeInPeriodUs' long)]) \- (r18 I:long A[D('bufferDepthUs' long)]) \l0x00de: INVOKE  (r3 I:int) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l  (r4 I:long)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder.getSegmentNum(long):int type: VIRTUAL \l0x00e2: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('firstAvailableSegmentNum' int)])\l \l0x00e4: INVOKE  (r17 I:int A[D('firstAvailableSegmentNum' int)]) = (r0 I:int), (r3 I:int) java.lang.Math.max(int, int):int type: STATIC \l}"];
Node_31 [shape=record,label="{31\:\ 0x00e8|0x00e8: MOVE  (r0 I:?[long, double]) = (r24 I:?[long, double] A[D('liveEdgeTimeInPeriodUs' long)]) \l0x00ea: INVOKE  (r3 I:int) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l  (r0 I:long)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder.getSegmentNum(long):int type: VIRTUAL \l0x00ee: ARITH  (r22 I:int) = (r3 I:int) + (\-1 int) \l}"];
Node_32 [shape=record,label="{32\:\ 0x00f0|0x00f0: IF  (r33 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('previous' com.google.android.exoplayer2.source.chunk.MediaChunk)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0132 \l}"];
Node_33 [shape=record,label="{33\:\ 0x00f2|0x00f2: MOVE  (r0 I:?[long, double]) = (r34 I:?[long, double] A[D('playbackPositionUs' long)]) \l0x00f4: INVOKE  (r3 I:int) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l  (r0 I:long)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder.getSegmentNum(long):int type: VIRTUAL \l0x00f8: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('firstAvailableSegmentNum' int)])\l \l0x00fa: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lastAvailableSegmentNum' int)])\l \l0x00fc: INVOKE  (r14 I:int) = (r3 I:int), (r0 I:int), (r1 I:int) com.google.android.exoplayer2.util.Util.constrainValue(int, int, int):int type: STATIC \l}"];
Node_34 [shape=record,label="{34\:\ 0x0100|0x0100: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lastAvailableSegmentNum' int)])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x0102|0x0102: IF  (r14 I:?[int, byte, short, char] A[D('segmentNum' int)]) \> (r0 I:?[int, byte, short, char])  \-\> B:40:0x010e \l}"];
Node_36 [shape=record,label="{36\:\ 0x0104|0x0104: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0106: IGET  (r3 I:boolean) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.missingLastSegment boolean \l}"];
Node_37 [shape=record,label="{37\:\ 0x0108|0x0108: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x0147 \l}"];
Node_38 [shape=record,label="{38\:\ 0x010a|0x010a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lastAvailableSegmentNum' int)])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x010c|0x010c: IF  (r14 I:?[int, byte, short, char] A[D('segmentNum' int)]) \< (r0 I:?[int, byte, short, char])  \-\> B:51:0x0147 \l}"];
Node_40 [shape=record,label="{40\:\ 0x010e|0x010e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0110: IGET  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.manifest com.google.android.exoplayer2.source.dash.manifest.DashManifest \l0x0112: IGET  (r3 I:boolean) = \l  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest)\l com.google.android.exoplayer2.source.dash.manifest.DashManifest.dynamic boolean \l}"];
Node_41 [shape=record,label="{41\:\ 0x0114|0x0114: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0126 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0116|0x0116: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0118: IGET  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.periodIndex int \l0x011a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x011c: IGET  (r4 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.manifest com.google.android.exoplayer2.source.dash.manifest.DashManifest \l0x011e: INVOKE  (r4 I:int) = \l  (r4 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest)\l com.google.android.exoplayer2.source.dash.manifest.DashManifest.getPeriodCount():int type: VIRTUAL \l0x0122: ARITH  (r4 I:int) = (r4 I:int) + (\-1 int) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0124|0x0124: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:50:0x0145 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0126|0x0126: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0127|0x0127: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r36 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.source.chunk.ChunkHolder)])\l \l0x0129: IPUT  \l  (r3 I:boolean)\l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkHolder)\l com.google.android.exoplayer2.source.chunk.ChunkHolder.endOfStream boolean \l}"];
Node_46 [shape=record,label="{46\:\ 0x012d|0x012d: ARITH  (r3 I:int) = (r17 I:int A[D('firstAvailableSegmentNum' int)]) + (r16 I:int A[D('availableSegmentCount' int)]) \l0x012f: ARITH  (r22 I:int) = (r3 I:int) + (\-1 int) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0132|0x0132: INVOKE  (r14 I:int) = \l  (r33 I:com.google.android.exoplayer2.source.chunk.MediaChunk A[D('previous' com.google.android.exoplayer2.source.chunk.MediaChunk)])\l com.google.android.exoplayer2.source.chunk.MediaChunk.getNextChunkIndex():int type: VIRTUAL \l0x0136: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('firstAvailableSegmentNum' int)])\l \l}"];
Node_48 [shape=record,label="{48\:\ 0x0138|0x0138: IF  (r14 I:?[int, byte, short, char] A[D('segmentNum' int)]) \>= (r0 I:?[int, byte, short, char])  \-\> B:34:0x0100 \l}"];
Node_49 [shape=record,label="{49\:\ 0x013a|0x013a: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.source.BehindLiveWindowException) =  com.google.android.exoplayer2.source.BehindLiveWindowException \l0x013c: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.BehindLiveWindowException)\l com.google.android.exoplayer2.source.BehindLiveWindowException.\<init\>():void type: DIRECT \l0x013f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0141: IPUT  \l  (r3 I:java.io.IOException)\l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.fatalError java.io.IOException \l}"];
Node_50 [shape=record,label="{50\:\ 0x0145|0x0145: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_51 [shape=record,label="{51\:\ 0x0147|0x0147: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0149: IGET  (r3 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.maxSegmentsPerLoad int \l0x014b: ARITH  (r4 I:int) = (r22 I:int A[D('lastAvailableSegmentNum' int)]) \- (r14 I:int A[D('segmentNum' int)]) \l0x014d: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x014f: INVOKE  (r15 I:int) = (r3 I:int), (r4 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0153: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0155: IGET  (r10 I:com.google.android.exoplayer2.upstream.DataSource) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.dataSource com.google.android.exoplayer2.upstream.DataSource \l0x0157: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0159: IGET  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x015b: INVOKE  (r11 I:com.google.android.exoplayer2.Format) = \l  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l com.google.android.exoplayer2.trackselection.TrackSelection.getSelectedFormat():com.google.android.exoplayer2.Format type: INTERFACE \l0x015f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0161: IGET  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x0163: INVOKE  (r12 I:int) = \l  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l com.google.android.exoplayer2.trackselection.TrackSelection.getSelectionReason():int type: INTERFACE \l0x0167: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0169: IGET  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x016b: INVOKE  (r13 I:java.lang.Object) = \l  (r3 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l com.google.android.exoplayer2.trackselection.TrackSelection.getSelectionData():java.lang.Object type: INTERFACE \l0x016f: MOVE  (r9 I:?[OBJECT, ARRAY]) = \l  (r2 I:?[OBJECT, ARRAY] A[D('representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)])\l \l0x0170: INVOKE  (r3 I:com.google.android.exoplayer2.source.chunk.Chunk) = \l  (r9 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder)\l  (r10 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r11 I:com.google.android.exoplayer2.Format)\l  (r12 I:int)\l  (r13 I:java.lang.Object)\l  (r14 I:int A[D('segmentNum' int)])\l  (r15 I:int A[D('maxSegmentCount' int)])\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.newMediaChunk(com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder, com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.Format, int, java.lang.Object, int, int):com.google.android.exoplayer2.source.chunk.Chunk type: STATIC \l0x0174: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r36 I:?[OBJECT, ARRAY] A[D('out' com.google.android.exoplayer2.source.chunk.ChunkHolder)])\l \l0x0176: IPUT  \l  (r3 I:com.google.android.exoplayer2.source.chunk.Chunk)\l  (r0 I:com.google.android.exoplayer2.source.chunk.ChunkHolder)\l com.google.android.exoplayer2.source.chunk.ChunkHolder.chunk com.google.android.exoplayer2.source.chunk.Chunk \l}"];
MethodNode[shape=record,label="{public final void com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.getNextChunk((r32 'this' I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource A[IMMUTABLE_TYPE, THIS]), (r33 I:com.google.android.exoplayer2.source.chunk.MediaChunk A[D('previous' com.google.android.exoplayer2.source.chunk.MediaChunk), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:long A[D('playbackPositionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36 I:com.google.android.exoplayer2.source.chunk.ChunkHolder A[D('out' com.google.android.exoplayer2.source.chunk.ChunkHolder), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0026\-0x006d: r2 'representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder\l  0x002f\-0x006d: r7 'pendingInitializationUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri\l  0x0030\-0x006d: r8 'pendingIndexUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri\l  0x000f\-0x006d: r20 'bufferedDurationUs' long\l  0x002e\-0x006d: r23 'selectedRepresentation' com.google.android.exoplayer2.source.dash.manifest.Representation\l  0x00dc\-0x00e8: r18 'bufferDepthUs' long\l  0x00c3\-0x00f0: r24 'liveEdgeTimeInPeriodUs' long\l  0x00af\-0x00f0: r26 'liveEdgeTimeUs' long\l  0x00c1\-0x00f0: r30 'periodStartUs' long\l  0x0100\-0x012d: r14 'segmentNum' int\l  0x00f0\-0x012d: r22 'lastAvailableSegmentNum' int\l  0x0070\-0x0179: r2 'representationHolder' com.google.android.exoplayer2.source.dash.DefaultDashChunkSource$RepresentationHolder\l  0x0136\-0x0179: r14 'segmentNum' int\l  0x0153\-0x0179: r15 'maxSegmentCount' int\l  0x0078\-0x0179: r16 'availableSegmentCount' int\l  0x009f\-0x0179: r17 'firstAvailableSegmentNum' int\l  0x0070\-0x0179: r20 'bufferedDurationUs' long\l  0x0131\-0x0179: r22 'lastAvailableSegmentNum' int\l  0x0074\-0x0179: r28 'nowUs' long\l  ?\-0x0179: r33 'previous' com.google.android.exoplayer2.source.chunk.MediaChunk\l  ?\-0x0179: r34 'playbackPositionUs' long\l  ?\-0x0179: r36 'out' com.google.android.exoplayer2.source.chunk.ChunkHolder\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_17;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_2;
Node_16 -> Node_5;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_26;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_2;
Node_25 -> Node_24;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_46;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_47;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_40;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_51;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_51;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_44;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_50;
Node_44 -> Node_45;
Node_45 -> Node_2;
Node_46 -> Node_32;
Node_47 -> Node_48;
Node_48 -> Node_34;
Node_48 -> Node_49[style=dashed];
Node_49 -> Node_2;
Node_50 -> Node_45;
Node_51 -> Node_2;
}

