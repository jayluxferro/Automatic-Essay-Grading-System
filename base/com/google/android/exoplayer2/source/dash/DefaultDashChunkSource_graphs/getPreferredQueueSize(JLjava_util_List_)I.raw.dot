digraph "CFG forcom.google.android.exoplayer2.source.dash.DefaultDashChunkSource.getPreferredQueueSize(JLjava\/util\/List;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.io.IOException) = \l  (r3 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.fatalError java.io.IOException \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r3 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x0006: INVOKE  (r0 I:int) = \l  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l com.google.android.exoplayer2.trackselection.TrackSelection.length():int type: INTERFACE \l0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r0 I:int) = \l  (r6 I:java.util.List A[D('queue' java.util.List\<? extends com.google.android.exoplayer2.source.chunk.MediaChunk\>)])\l java.util.List.size():int type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN  (r0 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IGET  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelection) = \l  (r3 I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource)\l com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.trackSelection com.google.android.exoplayer2.trackselection.TrackSelection \l0x0014: INVOKE  (r0 I:int) = \l  (r0 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l  (r4 I:long A[D('playbackPositionUs' long)])\l  (r6 I:java.util.List A[D('queue' java.util.List\<? extends com.google.android.exoplayer2.source.chunk.MediaChunk\>)])\l com.google.android.exoplayer2.trackselection.TrackSelection.evaluateQueueSize(long, java.util.List):int type: INTERFACE \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.getPreferredQueueSize((r3 'this' I:com.google.android.exoplayer2.source.dash.DefaultDashChunkSource A[IMMUTABLE_TYPE, THIS]), (r4 I:long A[D('playbackPositionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.List\<? extends com.google.android.exoplayer2.source.chunk.MediaChunk\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0018: r4 'playbackPositionUs' long\l  0x0000\-0x0018: r6 'queue' java.util.List\<? extends com.google.android.exoplayer2.source.chunk.MediaChunk\>\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(J, Ljava\/util\/List, \<+, Lcom\/google\/android\/exoplayer2\/source\/chunk\/MediaChunk;, \>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_5;
}

