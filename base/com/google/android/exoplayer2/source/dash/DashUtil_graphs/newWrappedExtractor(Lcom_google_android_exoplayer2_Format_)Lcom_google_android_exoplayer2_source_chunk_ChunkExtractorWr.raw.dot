digraph "CFG forcom.google.android.exoplayer2.source.dash.DashUtil.newWrappedExtractor(Lcom\/google\/android\/exoplayer2\/Format;)Lcom\/google\/android\/exoplayer2\/source\/chunk\/ChunkExtractorWrapper;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.containerMimeType java.lang.String \l0x0002: CONST_STR  (r3 I:java.lang.String) =  \"video\/webm\" \l0x0004: INVOKE  (r3 I:boolean) = \l  (r2 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r3 I:java.lang.String)\l java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST_STR  (r3 I:java.lang.String) =  \"audio\/webm\" \l0x000c: INVOKE  (r3 I:boolean) = \l  (r2 I:java.lang.String A[D('mimeType' java.lang.String)])\l  (r3 I:java.lang.String)\l java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('isWebm' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor) =  com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor \l0x0017: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor)\l com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.\<init\>():void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper) =  com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper \l0x001c: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper)\l  (r0 I:com.google.android.exoplayer2.extractor.Extractor A[D('extractor' com.google.android.exoplayer2.extractor.Extractor)])\l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper.\<init\>(com.google.android.exoplayer2.extractor.Extractor, com.google.android.exoplayer2.Format):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: RETURN  \l  (r3 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper)\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('isWebm' boolean)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor) =  com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor \l0x0024: INVOKE  \l  (r0 I:com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor)\l com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.\<init\>():void type: DIRECT \l}"];
MethodNode[shape=record,label="{private static com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper com.google.android.exoplayer2.source.dash.DashUtil.newWrappedExtractor((r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x001a\-0x0020: r0 'extractor' com.google.android.exoplayer2.extractor.Extractor\l  0x0013\-0x0020: r1 'isWebm' boolean\l  0x0022\-0x0027: r1 'isWebm' boolean\l  0x0002\-0x0027: r2 'mimeType' java.lang.String\l  ?\-0x0027: r4 'format' com.google.android.exoplayer2.Format\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_5;
Node_10 -> Node_7;
}

