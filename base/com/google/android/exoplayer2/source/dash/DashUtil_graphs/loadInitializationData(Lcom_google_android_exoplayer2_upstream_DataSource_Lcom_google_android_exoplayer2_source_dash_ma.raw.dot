digraph "CFG forcom.google.android.exoplayer2.source.dash.DashUtil.loadInitializationData(Lcom\/google\/android\/exoplayer2\/upstream\/DataSource;Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/Representation;Lcom\/google\/android\/exoplayer2\/source\/chunk\/ChunkExtractorWrapper;Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/RangedUri;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.upstream.DataSpec) =  com.google.android.exoplayer2.upstream.DataSpec \l0x0002: IGET  (r2 I:java.lang.String) = \l  (r9 I:com.google.android.exoplayer2.source.dash.manifest.Representation A[D('representation' com.google.android.exoplayer2.source.dash.manifest.Representation)])\l com.google.android.exoplayer2.source.dash.manifest.Representation.baseUrl java.lang.String \l0x0004: INVOKE  (r1 I:android.net.Uri) = \l  (r11 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri A[D('requestUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri)])\l  (r2 I:java.lang.String)\l com.google.android.exoplayer2.source.dash.manifest.RangedUri.resolveUri(java.lang.String):android.net.Uri type: VIRTUAL \l0x0008: IGET  (r2 I:long) = \l  (r11 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri A[D('requestUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri)])\l com.google.android.exoplayer2.source.dash.manifest.RangedUri.start long \l0x000a: IGET  (r4 I:long) = \l  (r11 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri A[D('requestUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri)])\l com.google.android.exoplayer2.source.dash.manifest.RangedUri.length long \l0x000c: INVOKE  (r6 I:java.lang.String) = \l  (r9 I:com.google.android.exoplayer2.source.dash.manifest.Representation A[D('representation' com.google.android.exoplayer2.source.dash.manifest.Representation)])\l com.google.android.exoplayer2.source.dash.manifest.Representation.getCacheKey():java.lang.String type: VIRTUAL \l0x0010: INVOKE  \l  (r0 I:com.google.android.exoplayer2.upstream.DataSpec)\l  (r1 I:android.net.Uri)\l  (r2 I:long)\l  (r4 I:long)\l  (r6 I:java.lang.String)\l com.google.android.exoplayer2.upstream.DataSpec.\<init\>(android.net.Uri, long, long, java.lang.String):void type: DIRECT \l0x0013: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.source.chunk.InitializationChunk) =  com.google.android.exoplayer2.source.chunk.InitializationChunk \l0x0015: IGET  (r4 I:com.google.android.exoplayer2.Format) = \l  (r9 I:com.google.android.exoplayer2.source.dash.manifest.Representation A[D('representation' com.google.android.exoplayer2.source.dash.manifest.Representation)])\l com.google.android.exoplayer2.source.dash.manifest.Representation.format com.google.android.exoplayer2.Format \l0x0017: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r8 I:?[OBJECT, ARRAY] A[D('dataSource' com.google.android.exoplayer2.upstream.DataSource)])\l \l0x001a: MOVE  (r3 I:?[OBJECT, ARRAY]) = \l  (r0 I:?[OBJECT, ARRAY] A[D('dataSpec' com.google.android.exoplayer2.upstream.DataSpec)])\l \l0x001b: MOVE  (r7 I:?[OBJECT, ARRAY]) = \l  (r10 I:?[OBJECT, ARRAY] A[D('extractorWrapper' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper)])\l \l0x001c: INVOKE  \l  (r1 I:com.google.android.exoplayer2.source.chunk.InitializationChunk)\l  (r2 I:com.google.android.exoplayer2.upstream.DataSource)\l  (r3 I:com.google.android.exoplayer2.upstream.DataSpec)\l  (r4 I:com.google.android.exoplayer2.Format)\l  (r5 I:int)\l  (r6 I:java.lang.Object)\l  (r7 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper)\l com.google.android.exoplayer2.source.chunk.InitializationChunk.\<init\>(com.google.android.exoplayer2.upstream.DataSource, com.google.android.exoplayer2.upstream.DataSpec, com.google.android.exoplayer2.Format, int, java.lang.Object, com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper):void type: DIRECT \l0x001f: INVOKE  \l  (r1 I:com.google.android.exoplayer2.source.chunk.InitializationChunk A[D('initializationChunk' com.google.android.exoplayer2.source.chunk.InitializationChunk)])\l com.google.android.exoplayer2.source.chunk.InitializationChunk.load():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.google.android.exoplayer2.source.dash.DashUtil.loadInitializationData((r8 I:com.google.android.exoplayer2.upstream.DataSource A[D('dataSource' com.google.android.exoplayer2.upstream.DataSource), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:com.google.android.exoplayer2.source.dash.manifest.Representation A[D('representation' com.google.android.exoplayer2.source.dash.manifest.Representation), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper A[D('extractorWrapper' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri A[D('requestUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0013\-0x0022: r0 'dataSpec' com.google.android.exoplayer2.upstream.DataSpec\l  0x001f\-0x0022: r1 'initializationChunk' com.google.android.exoplayer2.source.chunk.InitializationChunk\l  ?\-0x0022: r8 'dataSource' com.google.android.exoplayer2.upstream.DataSource\l  ?\-0x0022: r9 'representation' com.google.android.exoplayer2.source.dash.manifest.Representation\l  ?\-0x0022: r10 'extractorWrapper' com.google.android.exoplayer2.source.chunk.ChunkExtractorWrapper\l  ?\-0x0022: r11 'requestUri' com.google.android.exoplayer2.source.dash.manifest.RangedUri\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

