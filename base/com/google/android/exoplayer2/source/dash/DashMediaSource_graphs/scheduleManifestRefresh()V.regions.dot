digraph "CFG forcom.google.android.exoplayer2.source.dash.DashMediaSource.scheduleManifestRefresh()V" {
subgraph cluster_Region_727663367 {
label = "R(1:(1:(3:2|(1:4)|5)))";
node [shape=record,color=blue];
subgraph cluster_Region_1371217745 {
label = "R(1:(3:2|(1:4)|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1388712393 {
label = "IF [B:1:0x0006] THEN: R(3:2|(1:4)|5) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r10.manifest.dynamic != false) goto L_0x0009\l}"];
subgraph cluster_Region_197332018 {
label = "R(3:2|(1:4)|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|long long r2 = r10.manifest.minUpdatePeriod\l}"];
subgraph cluster_IfRegion_1201154360 {
label = "IF [B:3:0x000f] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r2 == 0) goto L_0x0011\l}"];
subgraph cluster_Region_1820755144 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|r2 = com.google.android.exoplayer2.DefaultRenderersFactory.DEFAULT_ALLOWED_VIDEO_JOINING_TIME_MS\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0013|PHI: r2 \l  PHI: (r2v1 'minUpdatePeriod' long) = (r2v0 'minUpdatePeriod' long), (r2v2 'minUpdatePeriod' long) binds: [B:3:0x000f, B:4:0x0011] A[DONT_GENERATE, DONT_INLINE]\l|r10.handler.postDelayed(r10.refreshManifestRunnable, java.lang.Math.max(0, (r10.manifestLoadStartTimestamp + r2) \- android.os.SystemClock.elapsedRealtime()))\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.source.dash.DashMediaSource.scheduleManifestRefresh((r10v0 'this' com.google.android.exoplayer2.source.dash.DashMediaSource A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_0 -> Node_1;
}

