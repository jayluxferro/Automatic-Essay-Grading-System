digraph "CFG forcom.google.android.exoplayer2.source.dash.DashMediaSource.resolveUtcTimingElement(Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/UtcTimingElement;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IGET  (r0 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement A[D('timingElement' com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement)])\l com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement.schemeIdUri java.lang.String \l0x0003: CONST_STR  (r1 I:java.lang.String) =  \"urn:mpeg:dash:utc:direct:2014\" \l0x0005: INVOKE  (r1 I:boolean) = \l  (r0 I:java.lang.Object A[D('scheme' java.lang.String)])\l  (r1 I:java.lang.Object)\l com.google.android.exoplayer2.util.Util.areEqual(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: CONST_STR  (r1 I:java.lang.String) =  \"urn:mpeg:dash:utc:direct:2012\" \l0x000d: INVOKE  (r1 I:boolean) = \l  (r0 I:java.lang.Object A[D('scheme' java.lang.String)])\l  (r1 I:java.lang.Object)\l com.google.android.exoplayer2.util.Util.areEqual(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.dash.DashMediaSource)\l  (r4 I:com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement A[D('timingElement' com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement)])\l com.google.android.exoplayer2.source.dash.DashMediaSource.resolveUtcTimingElementDirect(com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: CONST_STR  (r1 I:java.lang.String) =  \"urn:mpeg:dash:utc:http\-iso:2014\" \l0x0019: INVOKE  (r1 I:boolean) = \l  (r0 I:java.lang.Object A[D('scheme' java.lang.String)])\l  (r1 I:java.lang.Object)\l com.google.android.exoplayer2.util.Util.areEqual(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0027 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: CONST_STR  (r1 I:java.lang.String) =  \"urn:mpeg:dash:utc:http\-iso:2012\" \l0x0021: INVOKE  (r1 I:boolean) = \l  (r0 I:java.lang.Object A[D('scheme' java.lang.String)])\l  (r1 I:java.lang.Object)\l com.google.android.exoplayer2.util.Util.areEqual(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.source.dash.DashMediaSource$Iso8601Parser) =  com.google.android.exoplayer2.source.dash.DashMediaSource$Iso8601Parser \l0x0029: INVOKE  \l  (r1 I:com.google.android.exoplayer2.source.dash.DashMediaSource$Iso8601Parser)\l  (r2 I:com.google.android.exoplayer2.source.dash.DashMediaSource$1)\l com.google.android.exoplayer2.source.dash.DashMediaSource.Iso8601Parser.\<init\>(com.google.android.exoplayer2.source.dash.DashMediaSource$1):void type: DIRECT \l0x002c: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.dash.DashMediaSource)\l  (r4 I:com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement A[D('timingElement' com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement)])\l  (r1 I:com.google.android.exoplayer2.upstream.ParsingLoadable$Parser)\l com.google.android.exoplayer2.source.dash.DashMediaSource.resolveUtcTimingElementHttp(com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement, com.google.android.exoplayer2.upstream.ParsingLoadable$Parser):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: CONST_STR  (r1 I:java.lang.String) =  \"urn:mpeg:dash:utc:http\-xsdate:2014\" \l0x0032: INVOKE  (r1 I:boolean) = \l  (r0 I:java.lang.Object A[D('scheme' java.lang.String)])\l  (r1 I:java.lang.Object)\l com.google.android.exoplayer2.util.Util.areEqual(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0040 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: CONST_STR  (r1 I:java.lang.String) =  \"urn:mpeg:dash:utc:http\-xsdate:2012\" \l0x003a: INVOKE  (r1 I:boolean) = \l  (r0 I:java.lang.Object A[D('scheme' java.lang.String)])\l  (r1 I:java.lang.Object)\l com.google.android.exoplayer2.util.Util.areEqual(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x003e|0x003e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0049 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|0x0040: NEW_INSTANCE  (r1 I:com.google.android.exoplayer2.source.dash.DashMediaSource$XsDateTimeParser) =  com.google.android.exoplayer2.source.dash.DashMediaSource$XsDateTimeParser \l0x0042: INVOKE  \l  (r1 I:com.google.android.exoplayer2.source.dash.DashMediaSource$XsDateTimeParser)\l  (r2 I:com.google.android.exoplayer2.source.dash.DashMediaSource$1)\l com.google.android.exoplayer2.source.dash.DashMediaSource.XsDateTimeParser.\<init\>(com.google.android.exoplayer2.source.dash.DashMediaSource$1):void type: DIRECT \l0x0045: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.dash.DashMediaSource)\l  (r4 I:com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement A[D('timingElement' com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement)])\l  (r1 I:com.google.android.exoplayer2.upstream.ParsingLoadable$Parser)\l com.google.android.exoplayer2.source.dash.DashMediaSource.resolveUtcTimingElementHttp(com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement, com.google.android.exoplayer2.upstream.ParsingLoadable$Parser):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: NEW_INSTANCE  (r1 I:java.io.IOException) =  java.io.IOException \l0x004b: CONST_STR  (r2 I:java.lang.String) =  \"Unsupported UTC timing scheme\" \l0x004d: INVOKE  (r1 I:java.io.IOException), (r2 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l0x0050: INVOKE  \l  (r3 I:com.google.android.exoplayer2.source.dash.DashMediaSource)\l  (r1 I:java.io.IOException)\l com.google.android.exoplayer2.source.dash.DashMediaSource.onUtcTimestampResolutionError(java.io.IOException):void type: DIRECT \l}"];
MethodNode[shape=record,label="{private void com.google.android.exoplayer2.source.dash.DashMediaSource.resolveUtcTimingElement((r3 'this' I:com.google.android.exoplayer2.source.dash.DashMediaSource A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement A[D('timingElement' com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0003\-0x0053: r0 'scheme' java.lang.String\l  ?\-0x0053: r4 'timingElement' com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_5;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_5;
Node_16 -> Node_5;
}

