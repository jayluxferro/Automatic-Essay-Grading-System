digraph "CFG forcom.google.android.exoplayer2.source.dash.DashMediaPeriod.buildSampleStream(ILcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;J)Lcom\/google\/android\/exoplayer2\/source\/chunk\/ChunkSampleStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0002: IGET  (r2 I:java.util.List\<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet\>) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DashMediaPeriod)\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.adaptationSets java.util.List \l0x0004: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('adaptationSetIndex' int)])\l \l0x0006: INVOKE  (r22 I:java.lang.Object) = (r2 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000a: CHECK_CAST  (r22 I:com.google.android.exoplayer2.source.dash.manifest.AdaptationSet) = (com.google.android.exoplayer2.source.dash.manifest.AdaptationSet) (r22 I:?[OBJECT, ARRAY]) \l0x000c: CONST  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000f: NEW_ARRAY  (r14 I:int[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0011: INVOKE  (r10 I:boolean) = \l  (r22 I:com.google.android.exoplayer2.source.dash.manifest.AdaptationSet A[D('adaptationSet' com.google.android.exoplayer2.source.dash.manifest.AdaptationSet)])\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.hasEventMessageTrack(com.google.android.exoplayer2.source.dash.manifest.AdaptationSet):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('enableEventMessageTrack' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: ARITH  (r24 I:int) = (r23 I:int A[D('embeddedTrackCount' int)]) + (1 int) \l0x0019: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x001a: APUT  \l  (r14 I:?[int, float][] A[D('embeddedTrackTypes' int[])])\l  (r23 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x001c: MOVE  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('embeddedTrackCount' int)])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: INVOKE  (r11 I:boolean) = \l  (r22 I:com.google.android.exoplayer2.source.dash.manifest.AdaptationSet A[D('adaptationSet' com.google.android.exoplayer2.source.dash.manifest.AdaptationSet)])\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.hasCea608Track(com.google.android.exoplayer2.source.dash.manifest.AdaptationSet):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('enableCea608Track' boolean)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002b \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: ARITH  (r24 I:int) = (r23 I:int A[D('embeddedTrackCount' int)]) + (1 int) \l0x0026: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0027: APUT  \l  (r14 I:?[int, float][] A[D('embeddedTrackTypes' int[])])\l  (r23 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0029: MOVE  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('embeddedTrackCount' int)])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: ARRAY_LENGTH  (r2 I:int) = (r14 I:?[] A[D('embeddedTrackTypes' int[])]) \l0x002c: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('embeddedTrackCount' int)])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:9:0x0036 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('embeddedTrackCount' int)])\l \l0x0032: INVOKE  (r14 I:int[] A[D('embeddedTrackTypes' int[])]) = (r14 I:int[] A[D('embeddedTrackTypes' int[])]), (r0 I:int) java.util.Arrays.copyOf(int[], int):int[] type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0038: IGET  (r2 I:com.google.android.exoplayer2.source.dash.DashChunkSource$Factory) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DashMediaPeriod)\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.chunkSourceFactory com.google.android.exoplayer2.source.dash.DashChunkSource$Factory \l0x003a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x003c: IGET  (r3 I:com.google.android.exoplayer2.upstream.LoaderErrorThrower) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DashMediaPeriod)\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.manifestLoaderErrorThrower com.google.android.exoplayer2.upstream.LoaderErrorThrower \l0x003e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0040: IGET  (r4 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DashMediaPeriod)\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.manifest com.google.android.exoplayer2.source.dash.manifest.DashManifest \l0x0042: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0044: IGET  (r5 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DashMediaPeriod)\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.periodIndex int \l0x0046: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0048: IGET  (r8 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DashMediaPeriod)\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.elapsedRealtimeOffset long \l0x004a: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('adaptationSetIndex' int)])\l \l0x004c: MOVE  (r7 I:?[OBJECT, ARRAY]) = \l  (r27 I:?[OBJECT, ARRAY] A[D('selection' com.google.android.exoplayer2.trackselection.TrackSelection)])\l \l0x004e: INVOKE  (r15 I:com.google.android.exoplayer2.source.dash.DashChunkSource) = \l  (r2 I:com.google.android.exoplayer2.source.dash.DashChunkSource$Factory)\l  (r3 I:com.google.android.exoplayer2.upstream.LoaderErrorThrower)\l  (r4 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:com.google.android.exoplayer2.trackselection.TrackSelection)\l  (r8 I:long)\l  (r10 I:boolean A[D('enableEventMessageTrack' boolean)])\l  (r11 I:boolean A[D('enableCea608Track' boolean)])\l com.google.android.exoplayer2.source.dash.DashChunkSource.Factory.createDashChunkSource(com.google.android.exoplayer2.upstream.LoaderErrorThrower, com.google.android.exoplayer2.source.dash.manifest.DashManifest, int, int, com.google.android.exoplayer2.trackselection.TrackSelection, long, boolean, boolean):com.google.android.exoplayer2.source.dash.DashChunkSource type: INTERFACE \l0x0052: NEW_INSTANCE  (r12 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream) =  com.google.android.exoplayer2.source.chunk.ChunkSampleStream \l0x0054: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r22 I:?[OBJECT, ARRAY] A[D('adaptationSet' com.google.android.exoplayer2.source.dash.manifest.AdaptationSet)])\l \l0x0056: IGET  (r13 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.AdaptationSet)\l com.google.android.exoplayer2.source.dash.manifest.AdaptationSet.type int \l0x0058: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x005a: IGET  (r0 I:com.google.android.exoplayer2.upstream.Allocator) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DashMediaPeriod)\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.allocator com.google.android.exoplayer2.upstream.Allocator \l0x005c: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x005e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0060: IGET  (r0 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DashMediaPeriod)\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.minLoadableRetryCount int \l0x0062: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0064: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0066: IGET  (r0 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher) = \l  (r0 I:com.google.android.exoplayer2.source.dash.DashMediaPeriod)\l com.google.android.exoplayer2.source.dash.DashMediaPeriod.eventDispatcher com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher \l0x0068: MOVE  (r21 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x006a: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x006c: MOVE  (r18 I:?[long, double]) = (r28 I:?[long, double] A[D('positionUs' long)]) \l0x006e: INVOKE  \l  (r12 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream)\l  (r13 I:int)\l  (r14 I:int[] A[D('embeddedTrackTypes' int[])])\l  (r15 I:com.google.android.exoplayer2.source.chunk.ChunkSource A[D('chunkSource' com.google.android.exoplayer2.source.dash.DashChunkSource)])\l  (r16 I:com.google.android.exoplayer2.source.SequenceableLoader$Callback)\l  (r17 I:com.google.android.exoplayer2.upstream.Allocator)\l  (r18 I:long)\l  (r20 I:int)\l  (r21 I:com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher)\l com.google.android.exoplayer2.source.chunk.ChunkSampleStream.\<init\>(int, int[], com.google.android.exoplayer2.source.chunk.ChunkSource, com.google.android.exoplayer2.source.SequenceableLoader$Callback, com.google.android.exoplayer2.upstream.Allocator, long, int, com.google.android.exoplayer2.source.AdaptiveMediaSourceEventListener$EventDispatcher):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0071|0x0071: RETURN  \l  (r12 I:com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<com.google.android.exoplayer2.source.dash.DashChunkSource\> A[D('stream' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<com.google.android.exoplayer2.source.dash.DashChunkSource\>)])\l \l}"];
MethodNode[shape=record,label="{private com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<com.google.android.exoplayer2.source.dash.DashChunkSource\> com.google.android.exoplayer2.source.dash.DashMediaPeriod.buildSampleStream((r25 'this' I:com.google.android.exoplayer2.source.dash.DashMediaPeriod A[IMMUTABLE_TYPE, THIS]), (r26 I:int A[D('adaptationSetIndex' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:com.google.android.exoplayer2.trackselection.TrackSelection A[D('selection' com.google.android.exoplayer2.trackselection.TrackSelection), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:long A[D('positionUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000e\-0x0019: r23 'embeddedTrackCount' int\l  0x0019\-0x001e: r24 'embeddedTrackCount' int\l  0x001e\-0x0026: r23 'embeddedTrackCount' int\l  0x0026\-0x002b: r24 'embeddedTrackCount' int\l  0x0015\-0x0071: r10 'enableEventMessageTrack' boolean\l  0x0022\-0x0071: r11 'enableCea608Track' boolean\l  0x0071\-0x0071: r12 'stream' com.google.android.exoplayer2.source.chunk.ChunkSampleStream\<com.google.android.exoplayer2.source.dash.DashChunkSource\>\l  0x0011\-0x0071: r14 'embeddedTrackTypes' int[]\l  0x0052\-0x0071: r15 'chunkSource' com.google.android.exoplayer2.source.dash.DashChunkSource\l  0x000c\-0x0071: r22 'adaptationSet' com.google.android.exoplayer2.source.dash.manifest.AdaptationSet\l  0x002b\-0x0071: r23 'embeddedTrackCount' int\l  ?\-0x0071: r26 'adaptationSetIndex' int\l  ?\-0x0071: r27 'selection' com.google.android.exoplayer2.trackselection.TrackSelection\l  ?\-0x0071: r28 'positionUs' long\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I, Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;, J), Lcom\/google\/android\/exoplayer2\/source\/chunk\/ChunkSampleStream, \<, Lcom\/google\/android\/exoplayer2\/source\/dash\/DashChunkSource;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

