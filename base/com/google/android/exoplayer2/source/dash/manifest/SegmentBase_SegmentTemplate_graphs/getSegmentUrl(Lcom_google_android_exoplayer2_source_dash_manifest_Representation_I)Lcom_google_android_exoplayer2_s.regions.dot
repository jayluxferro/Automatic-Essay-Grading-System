digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTemplate.getSegmentUrl(Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/Representation;I)Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/RangedUri;" {
subgraph cluster_Region_1042450563 {
label = "R(3:(1:2)(1:5)|3|4) | DECL_VAR: long time\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_938945493 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r12.segmentTimeline != null) goto L_0x0004\l}"];
subgraph cluster_Region_1804457551 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|long r4 = ((com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement) r12.segmentTimeline.get(r14 \- r12.startNumber)).startTime\l}"];
}
subgraph cluster_Region_1961662195 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002b|long r4 = ((long) (r14 \- r12.startNumber)) * r12.duration\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0012|PHI: r4 \l  PHI: (r4v1 'time' long) = (r4v0 'time' long), (r4v2 'time' long) binds: [B:5:0x002b, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|RETURN\l|return new com.google.android.exoplayer2.source.dash.manifest.RangedUri(r12.mediaTemplate.buildUri(r13.format.f2443id, r14, r13.format.bitrate, r4), 0, \-1)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.source.dash.manifest.RangedUri com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTemplate.getSegmentUrl((r12v0 'this' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTemplate A[IMMUTABLE_TYPE, THIS]), (r13v0 'representation' com.google.android.exoplayer2.source.dash.manifest.Representation A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'sequenceNumber' int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_5 -> Node_3;
Node_3 -> Node_4;
Node_0 -> Node_1;
}

