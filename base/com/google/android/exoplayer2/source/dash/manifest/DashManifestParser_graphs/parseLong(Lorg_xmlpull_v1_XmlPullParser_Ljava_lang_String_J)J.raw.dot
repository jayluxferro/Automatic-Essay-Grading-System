digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseLong(Lorg\/xmlpull\/v1\/XmlPullParser;Ljava\/lang\/String;J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r0 I:java.lang.String) = \l  (r2 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l  (r1 I:java.lang.String)\l  (r3 I:java.lang.String A[D('name' java.lang.String)])\l org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('value' java.lang.String)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r4 I:long A[D('defaultValue' long)]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r4 I:long A[D('defaultValue' long)]) = (r0 I:java.lang.String A[D('value' java.lang.String)]) java.lang.Long.parseLong(java.lang.String):long type: STATIC \l}"];
MethodNode[shape=record,label="{protected static long com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseLong((r2 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[D('name' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('defaultValue' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0007: r4 'defaultValue' long\l  0x0005\-0x000c: r0 'value' java.lang.String\l  ?\-0x000c: r2 'xpp' org.xmlpull.v1.XmlPullParser\l  ?\-0x000c: r3 'name' java.lang.String\l  0x0008\-0x000c: r4 'defaultValue' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_2;
}

