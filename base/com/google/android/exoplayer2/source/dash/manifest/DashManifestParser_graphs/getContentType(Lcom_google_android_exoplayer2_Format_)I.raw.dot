digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.DashManifestParser.getContentType(Lcom\/google\/android\/exoplayer2\/Format;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: IGET  (r0 I:java.lang.String) = \l  (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.sampleMimeType java.lang.String \l0x0003: INVOKE  (r2 I:boolean) = \l  (r0 I:java.lang.CharSequence A[D('sampleMimeType' java.lang.String)])\l android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: RETURN  (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r2 I:boolean) = \l  (r0 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l com.google.android.exoplayer2.util.MimeTypes.isVideo(java.lang.String):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: INVOKE  (r2 I:boolean) = \l  (r0 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l com.google.android.exoplayer2.util.MimeTypes.isAudio(java.lang.String):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001a \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: INVOKE  (r2 I:boolean) = \l  (r0 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.mimeTypeIsRawText(java.lang.String):boolean type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0009 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
MethodNode[shape=record,label="{protected int com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.getContentType((r3 'this' I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0003\-0x0021: r0 'sampleMimeType' java.lang.String\l  ?\-0x0021: r4 'format' com.google.android.exoplayer2.Format\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_2;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_2;
Node_9 -> Node_10;
Node_10 -> Node_2;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_2;
}

