digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.getSegmentNum(JJ)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:int) = \l  (r19 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.getFirstSegmentNum():int type: VIRTUAL \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r1 I:?[long, double]) = (r22 I:?[long, double] A[D('periodDurationUs' long)]) \l0x0008: INVOKE  (r12 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l  (r1 I:long)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.getSegmentCount(long):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('segmentCount' int)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: RETURN  (r6 I:int A[D('firstSegmentNum' int)]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0011: IGET  (r14 I:java.util.List\<com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTimelineElement\>) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.segmentTimeline java.util.List \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0041 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0017: IGET  (r14 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.duration long \l0x0019: CONST  (r16 I:?[long, double]) = (1000000(0xf4240, double:4.940656E\-318) ?[long, double]) \l0x001c: ARITH  (r14 I:long) = (r14 I:long) * (r16 I:long) \l0x001e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0020: IGET  (r0 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.timescale long \l0x0022: MOVE  (r16 I:?[long, double]) = (r0 I:?[long, double]) \l0x0024: ARITH  (r4 I:long) = (r14 I:long) \/ (r16 I:long) \l0x0026: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0028: IGET  (r14 I:int) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.startNumber int \l0x002a: ARITH  (r16 I:long) = (r20 I:long A[D('timeUs' long)]) \/ (r4 I:long A[D('durationUs' long)]) \l0x002c: MOVE  (r0 I:?[long, double]) = (r16 I:?[long, double]) \l0x002e: CAST  (r15 I:int) = (int) (r0 I:long) \l0x002f: ARITH  (r13 I:int) = (r14 I:int) + (r15 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|0x0031: IF  (r13 I:?[int, byte, short, char] A[D('segmentNum' int)]) \< (r6 I:?[int, byte, short, char] A[D('firstSegmentNum' int)])  \-\> B:2:0x000e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|0x0033: CONST  (r14 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('segmentCount' int)]) != (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0038 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|0x0036: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('firstSegmentNum' int)]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('segmentNum' int)])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: ARITH  (r14 I:int) = (r6 I:int A[D('firstSegmentNum' int)]) + (r12 I:int A[D('segmentCount' int)]) \l0x003a: ARITH  (r14 I:int) = (r14 I:int) + (\-1 int) \l0x003c: INVOKE  (r6 I:int A[D('firstSegmentNum' int)]) = (r13 I:int A[D('segmentNum' int)]), (r14 I:int) java.lang.Math.min(int, int):int type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('firstSegmentNum' int)])\l \l0x0042: ARITH  (r14 I:int) = (r6 I:int A[D('firstSegmentNum' int)]) + (r12 I:int A[D('segmentCount' int)]) \l0x0044: ARITH  (r7 I:int) = (r14 I:int) + (\-1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|0x0046: IF  (r8 I:?[int, byte, short, char] A[D('lowIndex' int)]) \> (r7 I:?[int, byte, short, char] A[D('highIndex' int)])  \-\> B:20:0x0064 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: ARITH  (r14 I:int) = (r7 I:int A[D('highIndex' int)]) \- (r8 I:int A[D('lowIndex' int)]) \l0x004a: ARITH  (r14 I:int) = (r14 I:int) \/ (2 int) \l0x004c: ARITH  (r9 I:int) = (r8 I:int A[D('lowIndex' int)]) + (r14 I:int) \l0x004e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0050: INVOKE  (r10 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l  (r9 I:int A[D('midIndex' int)])\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.getSegmentTimeUs(int):long type: VIRTUAL \l0x0054: CMP_L  (r14 I:int) = \l  (r10 I:long A[D('midTimeUs' long)])\l  (r20 I:long A[D('timeUs' long)])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0056|0x0056: IF  (r14 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:16:0x005b \l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|0x0058: ARITH  (r8 I:int A[D('lowIndex' int)]) = (r9 I:int A[D('midIndex' int)]) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x005b|0x005b: CMP_L  (r14 I:int) = \l  (r10 I:long A[D('midTimeUs' long)])\l  (r20 I:long A[D('timeUs' long)])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|0x005d: IF  (r14 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:19:0x0062 \l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|0x005f: ARITH  (r7 I:int A[D('highIndex' int)]) = (r9 I:int A[D('midIndex' int)]) + (\-1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|0x0062: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('firstSegmentNum' int)]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('midIndex' int)])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0064|0x0064: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('lowIndex' int)]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('firstSegmentNum' int)])  \-\> B:22:0x0068 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0066|0x0066: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('firstSegmentNum' int)]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lowIndex' int)])\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x0068|0x0068: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('lowIndex' int)]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('highIndex' int)])\l \l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.getSegmentNum((r19 'this' I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase A[IMMUTABLE_TYPE, THIS]), (r20 I:long A[D('timeUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:long A[D('periodDurationUs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0004\-0x000e: r6 'firstSegmentNum' int\l  0x0026\-0x0041: r4 'durationUs' long\l  0x0031\-0x0041: r13 'segmentNum' int\l  0x004e\-0x0064: r9 'midIndex' int\l  0x0054\-0x0064: r10 'midTimeUs' long\l  0x0042\-0x0066: r8 'lowIndex' int\l  0x000f\-0x0069: r6 'firstSegmentNum' int\l  0x0046\-0x0069: r7 'highIndex' int\l  0x0068\-0x0069: r8 'lowIndex' int\l  0x000c\-0x0069: r12 'segmentCount' int\l  ?\-0x0069: r20 'timeUs' long\l  ?\-0x0069: r22 'periodDurationUs' long\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_2;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_2;
Node_10 -> Node_2;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_20;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_12;
Node_19 -> Node_2;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_2;
Node_22 -> Node_21;
}

