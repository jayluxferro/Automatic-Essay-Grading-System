digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseSegmentBase(Lorg\/xmlpull\/v1\/XmlPullParser;Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/SegmentBase$SingleSegmentBase;)Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/SegmentBase$SingleSegmentBase;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r2 I:java.lang.String) =  \"timescale\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0074 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)])\l \l0x0006: IGET  (r14 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase.timescale long \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x000a: INVOKE  (r4 I:long) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r2 I:java.lang.String)\l  (r14 I:long)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseLong(org.xmlpull.v1.XmlPullParser, java.lang.String, long):long type: STATIC \l0x000e: CONST_STR  (r2 I:java.lang.String) =  \"presentationTimeOffset\" \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0077 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)])\l \l0x0014: IGET  (r14 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase.presentationTimeOffset long \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x0018: INVOKE  (r6 I:long) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r2 I:java.lang.String)\l  (r14 I:long)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseLong(org.xmlpull.v1.XmlPullParser, java.lang.String, long):long type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x007a \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)])\l \l0x0020: IGET  (r8 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase.indexStart long \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x007d \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)])\l \l0x0026: IGET  (r10 I:long) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase.indexLength long \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0029: CONST_STR  (r14 I:java.lang.String) =  \"indexRange\" \l0x002b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x002d: INVOKE  (r13 I:java.lang.String) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r2 I:java.lang.String)\l  (r14 I:java.lang.String)\l org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String):java.lang.String type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('indexRangeText' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x004c \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: CONST_STR  (r2 I:java.lang.String) =  \"\-\" \l0x0035: INVOKE  (r12 I:java.lang.String[]) = \l  (r13 I:java.lang.String A[D('indexRangeText' java.lang.String)])\l  (r2 I:java.lang.String)\l java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL \l0x0039: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003a: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY][] A[D('indexRange' java.lang.String[])])\l  (r2 I:?[int, short, byte, char])\l \l0x003c: INVOKE  (r8 I:long A[D('indexStart' long)]) = (r2 I:java.lang.String) java.lang.Long.parseLong(java.lang.String):long type: STATIC \l0x0040: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0041: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY][] A[D('indexRange' java.lang.String[])])\l  (r2 I:?[int, short, byte, char])\l \l0x0043: INVOKE  (r14 I:long) = (r2 I:java.lang.String) java.lang.Long.parseLong(java.lang.String):long type: STATIC \l0x0047: ARITH  (r14 I:long) = (r14 I:long) \- (r8 I:long A[D('indexStart' long)]) \l0x0048: CONST  (r16 I:?[long, double]) = (1 ?[long, double]) \l0x004a: ARITH  (r10 I:long A[D('indexLength' long)]) = (r14 I:long) + (r16 I:long) \l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0080 \l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|0x004e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r20 I:?[OBJECT, ARRAY] A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)])\l \l0x0050: IGET  (r3 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase.initialization com.google.android.exoplayer2.source.dash.manifest.RangedUri \l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|0x0052: INVOKE  \l  (r19 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x0055: CONST_STR  (r2 I:java.lang.String) =  \"Initialization\" \l0x0057: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x0059: INVOKE  (r2 I:boolean) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r2 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isStartTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|0x005d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0063 \l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|0x005f: INVOKE  (r3 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri A[D('initialization' com.google.android.exoplayer2.source.dash.manifest.RangedUri)]) = \l  (r18 I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser)\l  (r19 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseInitialization(org.xmlpull.v1.XmlPullParser):com.google.android.exoplayer2.source.dash.manifest.RangedUri type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0063|0x0063: CONST_STR  (r2 I:java.lang.String) =  \"SegmentBase\" \l0x0065: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x0067: INVOKE  (r2 I:boolean) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r2 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isEndTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x006b|0x006b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0052 \l}"];
Node_21 [shape=record,label="{21\:\ 0x006d|0x006d: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x006f: INVOKE  (r2 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase) = \l  (r2 I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser)\l  (r3 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri A[D('initialization' com.google.android.exoplayer2.source.dash.manifest.RangedUri)])\l  (r4 I:long A[D('timescale' long)])\l  (r6 I:long A[D('presentationTimeOffset' long)])\l  (r8 I:long A[D('indexStart' long)])\l  (r10 I:long A[D('indexLength' long)])\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.buildSingleSegmentBase(com.google.android.exoplayer2.source.dash.manifest.RangedUri, long, long, long, long):com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0073|0x0073: RETURN  \l  (r2 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0074|0x0074: CONST  (r14 I:?[long, double]) = (1 ?[long, double]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0077|0x0077: CONST  (r14 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x007a|0x007a: CONST  (r8 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x007d|0x007d: CONST  (r10 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0080|0x0080: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseSegmentBase((r18 'this' I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser A[IMMUTABLE_TYPE, THIS]), (r19 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase A[D('parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0039\-0x004c: r12 'indexRange' java.lang.String[]\l  0x0052\-0x0074: r3 'initialization' com.google.android.exoplayer2.source.dash.manifest.RangedUri\l  0x000e\-0x0074: r4 'timescale' long\l  0x001c\-0x0074: r6 'presentationTimeOffset' long\l  0x0022\-0x0074: r8 'indexStart' long\l  0x0028\-0x0074: r10 'indexLength' long\l  0x0031\-0x0074: r13 'indexRangeText' java.lang.String\l  0x0077\-0x0081: r4 'timescale' long\l  0x007a\-0x0081: r6 'presentationTimeOffset' long\l  0x007d\-0x0081: r8 'indexStart' long\l  0x0080\-0x0081: r10 'indexLength' long\l  0x0080\-0x0081: r13 'indexRangeText' java.lang.String\l  ?\-0x0081: r19 'xpp' org.xmlpull.v1.XmlPullParser\l  ?\-0x0081: r20 'parent' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_23;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_24;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_25;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_26;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_27;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_16;
Node_20 -> Node_21[style=dashed];
Node_21 -> Node_22;
Node_23 -> Node_3;
Node_24 -> Node_6;
Node_25 -> Node_9;
Node_26 -> Node_11;
Node_27 -> Node_16;
}

