digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseRangedUrl(Lorg\/xmlpull\/v1\/XmlPullParser;Ljava\/lang\/String;Ljava\/lang\/String;)Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/RangedUri;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r1 = r13.getAttributeValue((java.lang.String) null, r14)\lr2 = 0\lr4 = \-1\ljava.lang.String r6 = r13.getAttributeValue((java.lang.String) null, r15)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r6 == null) goto L_0x002c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|java.lang.String[] r7 = r6.split(\"\-\")\llong r2 = java.lang.Long.parseLong(r7[0])\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|if (r7.length != 2) goto L_0x002c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|long r4 = (java.lang.Long.parseLong(r7[1]) \- r2) + 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|PHI: r2 r4 \l  PHI: (r2v1 'rangeStart' long) = (r2v0 'rangeStart' long), (r2v2 'rangeStart' long), (r2v2 'rangeStart' long) binds: [B:1:0x000d, B:3:0x001e, B:4:0x0020] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'rangeLength' long) = (r4v0 'rangeLength' long), (r4v0 'rangeLength' long), (r4v2 'rangeLength' long) binds: [B:1:0x000d, B:3:0x001e, B:4:0x0020] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|RETURN\l|return buildRangedUri(r1, r2, r4)\l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.source.dash.manifest.RangedUri com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseRangedUrl((r12v0 'this' com.google.android.exoplayer2.source.dash.manifest.DashManifestParser A[IMMUTABLE_TYPE, THIS]), (r13v0 'xpp' org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 'urlAttribute' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 'rangeAttribute' java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

