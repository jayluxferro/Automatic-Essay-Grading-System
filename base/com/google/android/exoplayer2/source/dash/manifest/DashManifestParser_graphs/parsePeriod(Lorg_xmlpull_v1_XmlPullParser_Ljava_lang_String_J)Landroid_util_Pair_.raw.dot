digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parsePeriod(Lorg\/xmlpull\/v1\/XmlPullParser;Ljava\/lang\/String;J)Landroid\/util\/Pair;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST_STR  (r13 I:java.lang.String) =  \"id\" \l0x0003: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x0005: INVOKE  (r5 I:java.lang.String) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:java.lang.String)\l  (r13 I:java.lang.String)\l org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String):java.lang.String type: INTERFACE \l0x0009: CONST_STR  (r12 I:java.lang.String) =  \"start\" \l0x000b: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x000d: MOVE  (r1 I:?[long, double]) = (r20 I:?[long, double] A[D('defaultStartMs' long)]) \l0x000f: INVOKE  (r10 I:long) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:java.lang.String)\l  (r1 I:long)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseDuration(org.xmlpull.v1.XmlPullParser, java.lang.String, long):long type: STATIC \l0x0013: CONST_STR  (r12 I:java.lang.String) =  \"duration\" \l0x0015: CONST  (r14 I:?[long, double]) = \l  (\-9223372036854775807(0x8000000000000001, double:\-4.9E\-324) ?[long, double])\l \l0x001a: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x001c: INVOKE  (r6 I:long) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:java.lang.String)\l  (r14 I:long)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseDuration(org.xmlpull.v1.XmlPullParser, java.lang.String, long):long type: STATIC \l0x0020: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0021: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList \l0x0023: INVOKE  (r4 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0026: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0027|0x0027: INVOKE  \l  (r18 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x002a: CONST_STR  (r12 I:java.lang.String) =  \"BaseURL\" \l0x002c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x002e: INVOKE  (r12 I:boolean) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isStartTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_2 [shape=record,label="{2\:\ 0x0032|0x0032: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0054 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0034|0x0034: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('seenFirstBaseUrl' boolean)]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x003b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0036|0x0036: INVOKE  (r19 I:java.lang.String A[D('baseUrl' java.lang.String)]) = \l  (r18 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l  (r19 I:java.lang.String A[D('baseUrl' java.lang.String)])\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseBaseUrl(org.xmlpull.v1.XmlPullParser, java.lang.String):java.lang.String type: STATIC \l0x003a: CONST  (r8 I:?[boolean, int, float, short, byte, char] A[D('seenFirstBaseUrl' boolean)]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x003b|0x003b: CONST_STR  (r12 I:java.lang.String) =  \"Period\" \l0x003d: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x003f: INVOKE  (r12 I:boolean) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isEndTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0043|0x0043: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0027 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|0x0045: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0047: INVOKE  (r12 I:com.google.android.exoplayer2.source.dash.manifest.Period) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser)\l  (r5 I:java.lang.String A[D('id' java.lang.String)])\l  (r10 I:long A[D('startMs' long)])\l  (r4 I:java.util.List A[D('adaptationSets' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet\>)])\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.buildPeriod(java.lang.String, long, java.util.List):com.google.android.exoplayer2.source.dash.manifest.Period type: VIRTUAL \l0x004b: INVOKE  (r13 I:java.lang.Long) = (r6 I:long A[D('durationMs' long)]) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x004f: INVOKE  (r12 I:android.util.Pair) = (r12 I:java.lang.Object), (r13 I:java.lang.Object) android.util.Pair.create(java.lang.Object, java.lang.Object):android.util.Pair type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0053|0x0053: RETURN  \l  (r12 I:android.util.Pair\<com.google.android.exoplayer2.source.dash.manifest.Period, java.lang.Long\>)\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0054|0x0054: CONST_STR  (r12 I:java.lang.String) =  \"AdaptationSet\" \l0x0056: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x0058: INVOKE  (r12 I:boolean) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isStartTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x005c|0x005c: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x006c \l}"];
Node_11 [shape=record,label="{11\:\ 0x005e|0x005e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0060: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x0062: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY] A[D('baseUrl' java.lang.String)]) \l0x0064: INVOKE  (r12 I:com.google.android.exoplayer2.source.dash.manifest.AdaptationSet) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser)\l  (r1 I:org.xmlpull.v1.XmlPullParser)\l  (r2 I:java.lang.String)\l  (r9 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase A[D('segmentBase' com.google.android.exoplayer2.source.dash.manifest.SegmentBase)])\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseAdaptationSet(org.xmlpull.v1.XmlPullParser, java.lang.String, com.google.android.exoplayer2.source.dash.manifest.SegmentBase):com.google.android.exoplayer2.source.dash.manifest.AdaptationSet type: VIRTUAL \l0x0068: INVOKE  \l  (r4 I:java.util.List A[D('adaptationSets' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet\>)])\l  (r12 I:java.lang.Object)\l java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x006c|0x006c: CONST_STR  (r12 I:java.lang.String) =  \"SegmentBase\" \l0x006e: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x0070: INVOKE  (r12 I:boolean) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isStartTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0074|0x0074: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0080 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0076|0x0076: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0077: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0079: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x007b: INVOKE  (r9 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase A[D('segmentBase' com.google.android.exoplayer2.source.dash.manifest.SegmentBase)]) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser)\l  (r1 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseSegmentBase(org.xmlpull.v1.XmlPullParser, com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase):com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0080|0x0080: CONST_STR  (r12 I:java.lang.String) =  \"SegmentList\" \l0x0082: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x0084: INVOKE  (r12 I:boolean) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isStartTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0088|0x0088: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0094 \l}"];
Node_17 [shape=record,label="{17\:\ 0x008a|0x008a: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008b: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x008d: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x008f: INVOKE  (r9 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentList A[D('segmentBase' com.google.android.exoplayer2.source.dash.manifest.SegmentBase)]) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser)\l  (r1 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentList)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseSegmentList(org.xmlpull.v1.XmlPullParser, com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentList):com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentList type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0094|0x0094: CONST_STR  (r12 I:java.lang.String) =  \"SegmentTemplate\" \l0x0096: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x0098: INVOKE  (r12 I:boolean) = \l  (r0 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isStartTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x009c|0x009c: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x003b \l}"];
Node_20 [shape=record,label="{20\:\ 0x009e|0x009e: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009f: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x00a1: MOVE  (r1 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l \l0x00a3: INVOKE  (r9 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTemplate A[D('segmentBase' com.google.android.exoplayer2.source.dash.manifest.SegmentBase)]) = \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser)\l  (r1 I:org.xmlpull.v1.XmlPullParser)\l  (r12 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTemplate)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseSegmentTemplate(org.xmlpull.v1.XmlPullParser, com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTemplate):com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTemplate type: VIRTUAL \l}"];
MethodNode[shape=record,label="{protected android.util.Pair\<com.google.android.exoplayer2.source.dash.manifest.Period, java.lang.Long\> com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parsePeriod((r17 'this' I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser A[IMMUTABLE_TYPE, THIS]), (r18 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:java.lang.String A[D('baseUrl' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:long A[D('defaultStartMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0026\-0x00a7: r4 'adaptationSets' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet\>\l  0x0009\-0x00a7: r5 'id' java.lang.String\l  0x0020\-0x00a7: r6 'durationMs' long\l  0x0027\-0x00a7: r8 'seenFirstBaseUrl' boolean\l  0x0021\-0x00a7: r9 'segmentBase' com.google.android.exoplayer2.source.dash.manifest.SegmentBase\l  0x0013\-0x00a7: r10 'startMs' long\l  ?\-0x00a7: r18 'xpp' org.xmlpull.v1.XmlPullParser\l  ?\-0x00a7: r19 'baseUrl' java.lang.String\l  ?\-0x00a7: r20 'defaultStartMs' long\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/xmlpull\/v1\/XmlPullParser;, Ljava\/lang\/String;, J), Landroid\/util\/Pair, \<, Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/Period;, Ljava\/lang\/Long;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_5;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_5;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_5;
Node_18 -> Node_19;
Node_19 -> Node_5;
Node_19 -> Node_20[style=dashed];
Node_20 -> Node_5;
}

