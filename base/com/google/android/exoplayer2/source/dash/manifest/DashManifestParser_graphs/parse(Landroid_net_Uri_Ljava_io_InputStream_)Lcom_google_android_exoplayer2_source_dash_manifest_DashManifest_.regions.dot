digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(Landroid\/net\/Uri;Ljava\/io\/InputStream;)Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/DashManifest;" {
subgraph cluster_Region_1797758030 {
label = "R(1:(2:1|(2:(1:12)|(1:6))))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1062440143 {
label = "Try: R(2:1|(2:(1:12)|(1:6))) catches: R(2:7|9)";
node [shape=record,color=blue];
subgraph cluster_Region_1587349694 {
label = "R(2:1|(2:(1:12)|(1:6)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ XmlPullParserException \-\> 0x0025 \}\lSplitter:B:0:0x0000\l|org.xmlpull.v1.XmlPullParser org.xmlpull.v1.XmlPullParser r2 = r5.xmlParserFactory.newPullParser()     \/\/ Catch:\{ XmlPullParserException \-\> 0x0025 \}\lr2.setInput(r7, (java.lang.String) null)     \/\/ Catch:\{ XmlPullParserException \-\> 0x0025 \}\l}"];
subgraph cluster_Region_367266734 {
label = "R(2:(1:12)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_743618241 {
label = "IF [B:2:0x000f, B:4:0x001b] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000f|Catch:\{ XmlPullParserException \-\> 0x0025 \}\l|if (r2.next() == 2) goto L_0x0011     \/\/ Catch:\{ XmlPullParserException \-\> 0x0025 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|ADDED_TO_REGION\lCatch:\{ XmlPullParserException \-\> 0x0025 \}\l|if (\"MPD\".equals(r2.getName()) != false) goto L_0x002c     \/\/ Catch:\{ XmlPullParserException \-\> 0x0025 \}\l}"];
subgraph cluster_Region_369752789 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0034|RETURN\l|return parseMediaPresentationDescription(r2, r6.toString())\l}"];
}
}
subgraph cluster_Region_257381358 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0024|Catch:\{ XmlPullParserException \-\> 0x0025 \}\l|throw new com.google.android.exoplayer2.ParserException(\"inputStream does not contain a valid media presentation description\")     \/\/ Catch:\{ XmlPullParserException \-\> 0x0025 \}\l}"];
}
}
}
subgraph cluster_Region_1480948646 {
label = "R(2:7|9) | ExcHandler: XmlPullParserException (r0v0 'e' org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0025|ExcHandler: XmlPullParserException (r0v0 'e' org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|throw new com.google.android.exoplayer2.ParserException((java.lang.Throwable) r0)\l}"];
}
}
}
subgraph cluster_Region_1480948646 {
label = "R(2:7|9) | ExcHandler: XmlPullParserException (r0v0 'e' org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0025|ExcHandler: XmlPullParserException (r0v0 'e' org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|throw new com.google.android.exoplayer2.ParserException((java.lang.Throwable) r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0011|Catch:\{ XmlPullParserException \-\> 0x0025 \}\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001d|Catch:\{ XmlPullParserException \-\> 0x0025 \}\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0026}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002c|SYNTHETIC\lSplitter:B:10:0x002c\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|Catch:\{ XmlPullParserException \-\> 0x0025 \}\lSplitter:B:10:0x002c\l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.source.dash.manifest.DashManifest com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse((r5v0 'this' com.google.android.exoplayer2.source.dash.manifest.DashManifestParser A[IMMUTABLE_TYPE, THIS]), (r6v0 'uri' android.net.Uri A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 'inputStream' java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_7 -> Node_8;
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_0 -> Node_7;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_7;
Node_11 -> Node_7;
Node_11 -> Node_12;
}

