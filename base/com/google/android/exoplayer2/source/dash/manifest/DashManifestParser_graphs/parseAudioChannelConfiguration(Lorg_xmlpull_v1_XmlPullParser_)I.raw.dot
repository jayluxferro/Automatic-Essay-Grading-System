digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseAudioChannelConfiguration(Lorg\/xmlpull\/v1\/XmlPullParser;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0001: CONST_STR  (r2 I:java.lang.String) =  \"schemeIdUri\" \l0x0003: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: INVOKE  (r1 I:java.lang.String) = \l  (r5 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseString(org.xmlpull.v1.XmlPullParser, java.lang.String, java.lang.String):java.lang.String type: STATIC \l0x0008: CONST_STR  (r2 I:java.lang.String) =  \"urn:mpeg:dash:23003:3:audio_channel_configuration:2011\" \l0x000a: INVOKE  (r2 I:boolean) = \l  (r2 I:java.lang.String)\l  (r1 I:java.lang.Object A[D('schemeIdUri' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: CONST_STR  (r2 I:java.lang.String) =  \"value\" \l0x0012: INVOKE  (r0 I:int) = \l  (r5 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l  (r2 I:java.lang.String)\l  (r0 I:int)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseInt(org.xmlpull.v1.XmlPullParser, java.lang.String, int):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: INVOKE  \l  (r5 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x0019: CONST_STR  (r2 I:java.lang.String) =  \"AudioChannelConfiguration\" \l0x001b: INVOKE  (r2 I:boolean) = \l  (r5 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l  (r2 I:java.lang.String)\l com.google.android.exoplayer2.util.XmlPullParserUtil.isEndTag(org.xmlpull.v1.XmlPullParser, java.lang.String):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: RETURN  (r0 I:int A[D('audioChannels' int)]) \l}"];
MethodNode[shape=record,label="{protected int com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseAudioChannelConfiguration((r4 'this' I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser A[IMMUTABLE_TYPE, THIS]), (r5 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0016\-0x0021: r0 'audioChannels' int\l  0x0008\-0x0021: r1 'schemeIdUri' java.lang.String\l  ?\-0x0021: r5 'xpp' org.xmlpull.v1.XmlPullParser\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_3;
Node_4 -> Node_5[style=dashed];
}

