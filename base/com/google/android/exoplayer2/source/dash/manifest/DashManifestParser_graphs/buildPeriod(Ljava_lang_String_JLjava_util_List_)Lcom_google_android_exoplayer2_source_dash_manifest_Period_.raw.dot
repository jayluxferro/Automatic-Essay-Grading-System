digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.DashManifestParser.buildPeriod(Ljava\/lang\/String;JLjava\/util\/List;)Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/Period;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:com.google.android.exoplayer2.source.dash.manifest.Period) =  com.google.android.exoplayer2.source.dash.manifest.Period \l0x0002: INVOKE  \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.Period)\l  (r3 I:java.lang.String A[D('id' java.lang.String)])\l  (r4 I:long A[D('startMs' long)])\l  (r6 I:java.util.List A[D('adaptationSets' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet\>)])\l com.google.android.exoplayer2.source.dash.manifest.Period.\<init\>(java.lang.String, long, java.util.List):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  \l  (r0 I:com.google.android.exoplayer2.source.dash.manifest.Period)\l \l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.source.dash.manifest.Period com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.buildPeriod((r2 'this' I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[D('id' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[D('startMs' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.List\<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x0005: r3 'id' java.lang.String\l  ?\-0x0005: r4 'startMs' long\l  0x0000\-0x0005: r6 'adaptationSets' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet\>\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, J, Ljava\/util\/List, \<, Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/AdaptationSet;, \>;), Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/Period;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

