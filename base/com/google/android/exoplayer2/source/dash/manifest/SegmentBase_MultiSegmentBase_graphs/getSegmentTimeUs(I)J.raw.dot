digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.getSegmentTimeUs(I)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:java.util.List\<com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTimelineElement\>) = \l  (r6 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.segmentTimeline java.util.List \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r2 I:java.util.List\<com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTimelineElement\>) = \l  (r6 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.segmentTimeline java.util.List \l0x0006: IGET  (r3 I:int) = \l  (r6 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.startNumber int \l0x0008: ARITH  (r3 I:int) = (r7 I:int A[D('sequenceNumber' int)]) \- (r3 I:int) \l0x000a: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000e: CHECK_CAST  (r2 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTimelineElement) = (com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTimelineElement) (r2 I:?[OBJECT, ARRAY]) \l0x0010: IGET  (r2 I:long) = \l  (r2 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SegmentTimelineElement)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement.startTime long \l0x0012: IGET  (r4 I:long) = \l  (r6 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.presentationTimeOffset long \l0x0014: ARITH  (r0 I:long) = (r2 I:long) \- (r4 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: CONST  (r2 I:?[long, double]) = (1000000(0xf4240, double:4.940656E\-318) ?[long, double]) \l0x0019: IGET  (r4 I:long) = \l  (r6 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.timescale long \l0x001b: INVOKE  (r2 I:long) = \l  (r0 I:long A[D('unscaledSegmentTime' long)])\l  (r2 I:long)\l  (r4 I:long)\l com.google.android.exoplayer2.util.Util.scaleLargeTimestamp(long, long, long):long type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: RETURN  (r2 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: IGET  (r2 I:int) = \l  (r6 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.startNumber int \l0x0022: ARITH  (r2 I:int) = (r7 I:int A[D('sequenceNumber' int)]) \- (r2 I:int) \l0x0024: CAST  (r2 I:long) = (long) (r2 I:int) \l0x0025: IGET  (r4 I:long) = \l  (r6 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase)\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.duration long \l0x0027: ARITH  (r0 I:long) = (r2 I:long) * (r4 I:long) \l}"];
MethodNode[shape=record,label="{public final long com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase.getSegmentTimeUs((r6 'this' I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$MultiSegmentBase A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[D('sequenceNumber' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0016\-0x0020: r0 'unscaledSegmentTime' long\l  0x0029\-0x0029: r0 'unscaledSegmentTime' long\l  ?\-0x0029: r7 'sequenceNumber' int\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

