digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse(Landroid\/net\/Uri;Ljava\/io\/InputStream;)Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/DashManifest;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r3 I:org.xmlpull.v1.XmlPullParserFactory) = \l  (r5 I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.xmlParserFactory org.xmlpull.v1.XmlPullParserFactory A[Catch:\{ XmlPullParserException \-\> 0x0025 \}, TRY_ENTER]\l0x0002: INVOKE  (r2 I:org.xmlpull.v1.XmlPullParser) = (r3 I:org.xmlpull.v1.XmlPullParserFactory) org.xmlpull.v1.XmlPullParserFactory.newPullParser():org.xmlpull.v1.XmlPullParser type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l0x0007: INVOKE  \l  (r2 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l  (r7 I:java.io.InputStream A[D('inputStream' java.io.InputStream)])\l  (r3 I:java.lang.String)\l org.xmlpull.v1.XmlPullParser.setInput(java.io.InputStream, java.lang.String):void type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l0x000a: INVOKE  (r1 I:int) = \l  (r2 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l0x000e: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('eventType' int)]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001d A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: CONST_STR  (r3 I:java.lang.String) =  \"MPD\" A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l0x0013: INVOKE  (r4 I:java.lang.String) = \l  (r2 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l0x0017: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002c A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l0x001f: CONST_STR  (r4 I:java.lang.String) =  \"inputStream does not contain a valid media presentation description\" A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l0x0021: INVOKE  \l  (r3 I:com.google.android.exoplayer2.ParserException)\l  (r4 I:java.lang.String)\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ XmlPullParserException \-\> 0x0025 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ XmlPullParserException \-\> 0x0025 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|ExcHandler: XmlPullParserException null\lSplitter:B:0:0x0000\l|0x0025: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: NEW_INSTANCE  (r3 I:com.google.android.exoplayer2.ParserException) =  com.google.android.exoplayer2.ParserException \l0x0028: INVOKE  \l  (r3 I:com.google.android.exoplayer2.ParserException)\l  (r0 I:java.lang.Throwable A[D('e' org.xmlpull.v1.XmlPullParserException)])\l com.google.android.exoplayer2.ParserException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|SYNTHETIC\lSplitter:B:10:0x002c\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x002c\l|0x002c: INVOKE  (r3 I:java.lang.String) = (r6 I:android.net.Uri A[D('uri' android.net.Uri)]) android.net.Uri.toString():java.lang.String type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0025 \}, TRY_ENTER]\l0x0030: INVOKE  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest) = \l  (r5 I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser)\l  (r2 I:org.xmlpull.v1.XmlPullParser A[D('xpp' org.xmlpull.v1.XmlPullParser)])\l  (r3 I:java.lang.String)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseMediaPresentationDescription(org.xmlpull.v1.XmlPullParser, java.lang.String):com.google.android.exoplayer2.source.dash.manifest.DashManifest type: VIRTUAL A[Catch:\{ XmlPullParserException \-\> 0x0025 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: RETURN  \l  (r3 I:com.google.android.exoplayer2.source.dash.manifest.DashManifest)\l \l}"];
MethodNode[shape=record,label="{public com.google.android.exoplayer2.source.dash.manifest.DashManifest com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parse((r5 'this' I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser A[IMMUTABLE_TYPE, THIS]), (r6 I:android.net.Uri A[D('uri' android.net.Uri), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.io.InputStream A[D('inputStream' java.io.InputStream), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x000e\-0x0025: r1 'eventType' int\l  0x0006\-0x0025: r2 'xpp' org.xmlpull.v1.XmlPullParser\l  0x0026\-0x002c: r0 'e' org.xmlpull.v1.XmlPullParserException\l  0x002c\-0x0034: r1 'eventType' int\l  0x002c\-0x0034: r2 'xpp' org.xmlpull.v1.XmlPullParser\l  ?\-0x0034: r6 'uri' android.net.Uri\l  ?\-0x0034: r7 'inputStream' java.io.InputStream\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_7;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_7;
Node_11 -> Node_7;
Node_11 -> Node_13;
}

