digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.DashManifestParser.buildFormat(Ljava\/lang\/String;Ljava\/lang\/String;IIFIIILjava\/lang\/String;ILjava\/util\/List;Ljava\/lang\/String;)Lcom\/google\/android\/exoplayer2\/Format;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY] A[D('codecs' java.lang.String)]) \l0x0002: INVOKE  (r3 I:java.lang.String) = \l  (r13 I:java.lang.String A[D('containerMimeType' java.lang.String)])\l  (r0 I:java.lang.String)\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.getSampleMimeType(java.lang.String, java.lang.String):java.lang.String type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('sampleMimeType' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r1 I:boolean) = \l  (r3 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l com.google.android.exoplayer2.util.MimeTypes.isVideo(java.lang.String):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x0010: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY] A[D('containerMimeType' java.lang.String)])\l \l0x0011: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY] A[D('codecs' java.lang.String)]) \l0x0013: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bitrate' int)])\l \l0x0015: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('width' int)])\l \l0x0016: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('height' int)])\l \l0x0017: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('frameRate' float)])\l \l0x0019: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectionFlags' int)])\l \l0x001b: INVOKE  (r1 I:com.google.android.exoplayer2.Format) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:float)\l  (r9 I:java.util.List)\l  (r10 I:int)\l com.google.android.exoplayer2.Format.createVideoContainerFormat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, int, float, java.util.List, int):com.google.android.exoplayer2.Format type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: RETURN  (r1 I:com.google.android.exoplayer2.Format) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: INVOKE  (r1 I:boolean) = \l  (r3 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l com.google.android.exoplayer2.util.MimeTypes.isAudio(java.lang.String):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003a \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x0028: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY] A[D('containerMimeType' java.lang.String)])\l \l0x0029: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY] A[D('codecs' java.lang.String)]) \l0x002b: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bitrate' int)])\l \l0x002d: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('audioChannels' int)])\l \l0x002f: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('audioSamplingRate' int)])\l \l0x0031: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectionFlags' int)])\l \l0x0033: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x0035: INVOKE  (r1 I:com.google.android.exoplayer2.Format) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:java.util.List)\l  (r9 I:int)\l  (r10 I:java.lang.String)\l com.google.android.exoplayer2.Format.createAudioContainerFormat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, int, java.util.List, int, java.lang.String):com.google.android.exoplayer2.Format type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|0x003a: INVOKE  (r1 I:boolean) = \l  (r3 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.mimeTypeIsRawText(java.lang.String):boolean type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|0x003e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x006a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: CONST_STR  (r1 I:java.lang.String) =  \"application\/cea\-608\" \l0x0042: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r3 I:java.lang.Object A[D('sampleMimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|0x0046: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x005b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: INVOKE  (r8 I:int) = \l  (r22 I:java.util.List A[D('accessibilityDescriptors' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.SchemeValuePair\>)])\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseCea608AccessibilityChannel(java.util.List):int type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x004d: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY] A[D('containerMimeType' java.lang.String)])\l \l0x004e: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY] A[D('codecs' java.lang.String)]) \l0x0050: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bitrate' int)])\l \l0x0052: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectionFlags' int)])\l \l0x0054: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x0056: INVOKE  (r1 I:com.google.android.exoplayer2.Format) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:java.lang.String)\l  (r8 I:int A[D('accessibilityChannel' int)])\l com.google.android.exoplayer2.Format.createTextContainerFormat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.String, int):com.google.android.exoplayer2.Format type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x005b|0x005b: CONST_STR  (r1 I:java.lang.String) =  \"application\/cea\-708\" \l0x005d: INVOKE  (r1 I:boolean) = \l  (r1 I:java.lang.String)\l  (r3 I:java.lang.Object A[D('sampleMimeType' java.lang.String)])\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0061|0x0061: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0068 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0063|0x0063: INVOKE  (r8 I:int) = \l  (r22 I:java.util.List A[D('accessibilityDescriptors' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.SchemeValuePair\>)])\l com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.parseCea708AccessibilityChannel(java.util.List):int type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|0x0068: CONST  (r8 I:?[int, float, short, byte, char] A[D('accessibilityChannel' int)]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x006a|0x006a: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY] A[D('id' java.lang.String)]) \l0x006b: MOVE  (r2 I:?[OBJECT, ARRAY]) = \l  (r13 I:?[OBJECT, ARRAY] A[D('containerMimeType' java.lang.String)])\l \l0x006c: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY] A[D('codecs' java.lang.String)]) \l0x006e: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('bitrate' int)])\l \l0x0070: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('selectionFlags' int)])\l \l0x0072: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY] A[D('language' java.lang.String)]) \l0x0074: INVOKE  (r1 I:com.google.android.exoplayer2.Format) = \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String A[D('sampleMimeType' java.lang.String)])\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:java.lang.String)\l com.google.android.exoplayer2.Format.createContainerFormat(java.lang.String, java.lang.String, java.lang.String, java.lang.String, int, int, java.lang.String):com.google.android.exoplayer2.Format type: STATIC \l}"];
MethodNode[shape=record,label="{protected com.google.android.exoplayer2.Format com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.buildFormat((r11 'this' I:com.google.android.exoplayer2.source.dash.manifest.DashManifestParser A[IMMUTABLE_TYPE, THIS]), (r12 I:java.lang.String A[D('id' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.String A[D('containerMimeType' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[D('width' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[D('height' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:float A[D('frameRate' float), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[D('audioChannels' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[D('audioSamplingRate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[D('bitrate' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:java.lang.String A[D('language' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:int A[D('selectionFlags' int), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:java.util.List\<com.google.android.exoplayer2.source.dash.manifest.SchemeValuePair\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:java.lang.String A[D('codecs' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x004c\-0x005b: r8 'accessibilityChannel' int\l  0x0067\-0x0068: r8 'accessibilityChannel' int\l  0x0069\-0x006a: r8 'accessibilityChannel' int\l  0x0006\-0x0078: r3 'sampleMimeType' java.lang.String\l  ?\-0x0078: r12 'id' java.lang.String\l  ?\-0x0078: r13 'containerMimeType' java.lang.String\l  ?\-0x0078: r14 'width' int\l  ?\-0x0078: r15 'height' int\l  ?\-0x0078: r16 'frameRate' float\l  ?\-0x0078: r17 'audioChannels' int\l  ?\-0x0078: r18 'audioSamplingRate' int\l  ?\-0x0078: r19 'bitrate' int\l  ?\-0x0078: r20 'language' java.lang.String\l  ?\-0x0078: r21 'selectionFlags' int\l  0x0000\-0x0078: r22 'accessibilityDescriptors' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.SchemeValuePair\>\l  ?\-0x0078: r23 'codecs' java.lang.String\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/lang\/String;, IIFIII, Ljava\/lang\/String;, I, Ljava\/util\/List, \<, Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/SchemeValuePair;, \>;, Ljava\/lang\/String;, ), Lcom\/google\/android\/exoplayer2\/Format;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_5;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_14;
Node_18 -> Node_14;
Node_19 -> Node_5;
}

