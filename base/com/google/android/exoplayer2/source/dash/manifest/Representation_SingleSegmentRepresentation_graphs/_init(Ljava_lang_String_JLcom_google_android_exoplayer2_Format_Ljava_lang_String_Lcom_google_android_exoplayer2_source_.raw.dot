digraph "CFG forcom.google.android.exoplayer2.source.dash.manifest.Representation.SingleSegmentRepresentation.\<init\>(Ljava\/lang\/String;JLcom\/google\/android\/exoplayer2\/Format;Ljava\/lang\/String;Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/SegmentBase$SingleSegmentBase;Ljava\/util\/List;Ljava\/lang\/String;J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY] A[D('contentId' java.lang.String)]) \l0x0003: MOVE  (r4 I:?[long, double]) = (r13 I:?[long, double] A[D('revisionId' long)]) \l0x0004: MOVE  (r6 I:?[OBJECT, ARRAY]) = \l  (r15 I:?[OBJECT, ARRAY] A[D('format' com.google.android.exoplayer2.Format)])\l \l0x0005: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY] A[D('baseUrl' java.lang.String)]) \l0x0007: MOVE  (r8 I:?[OBJECT, ARRAY]) = \l  (r17 I:?[OBJECT, ARRAY] A[D('segmentBase' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)])\l \l0x0009: MOVE  (r9 I:?[OBJECT, ARRAY]) = \l  (r18 I:?[OBJECT, ARRAY] A[D('inbandEventStreams' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.SchemeValuePair\>)])\l \l0x000b: INVOKE  \l  (r2 I:com.google.android.exoplayer2.source.dash.manifest.Representation)\l  (r3 I:java.lang.String)\l  (r4 I:long)\l  (r6 I:com.google.android.exoplayer2.Format)\l  (r7 I:java.lang.String)\l  (r8 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase)\l  (r9 I:java.util.List)\l  (r10 I:com.google.android.exoplayer2.source.dash.manifest.Representation$1)\l com.google.android.exoplayer2.source.dash.manifest.Representation.\<init\>(java.lang.String, long, com.google.android.exoplayer2.Format, java.lang.String, com.google.android.exoplayer2.source.dash.manifest.SegmentBase, java.util.List, com.google.android.exoplayer2.source.dash.manifest.Representation$1):void type: DIRECT \l0x000e: INVOKE  (r2 I:android.net.Uri) = (r16 I:java.lang.String A[D('baseUrl' java.lang.String)]) android.net.Uri.parse(java.lang.String):android.net.Uri type: STATIC \l0x0012: IPUT  \l  (r2 I:android.net.Uri)\l  (r11 I:com.google.android.exoplayer2.source.dash.manifest.Representation$SingleSegmentRepresentation)\l com.google.android.exoplayer2.source.dash.manifest.Representation.SingleSegmentRepresentation.uri android.net.Uri \l0x0014: INVOKE  (r2 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri) = \l  (r17 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase A[D('segmentBase' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase)])\l com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase.getIndex():com.google.android.exoplayer2.source.dash.manifest.RangedUri type: VIRTUAL \l0x0018: IPUT  \l  (r2 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri)\l  (r11 I:com.google.android.exoplayer2.source.dash.manifest.Representation$SingleSegmentRepresentation)\l com.google.android.exoplayer2.source.dash.manifest.Representation.SingleSegmentRepresentation.indexUri com.google.android.exoplayer2.source.dash.manifest.RangedUri \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('customCacheKey' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: MOVE  (r0 I:?[OBJECT, ARRAY]) = \l  (r19 I:?[OBJECT, ARRAY] A[D('customCacheKey' java.lang.String)])\l \l0x001e: IPUT  \l  (r0 I:java.lang.String)\l  (r11 I:com.google.android.exoplayer2.source.dash.manifest.Representation$SingleSegmentRepresentation)\l com.google.android.exoplayer2.source.dash.manifest.Representation.SingleSegmentRepresentation.cacheKey java.lang.String \l0x0020: MOVE  (r0 I:?[long, double]) = (r20 I:?[long, double] A[D('contentLength' long)]) \l0x0022: IPUT  \l  (r0 I:long)\l  (r11 I:com.google.android.exoplayer2.source.dash.manifest.Representation$SingleSegmentRepresentation)\l com.google.android.exoplayer2.source.dash.manifest.Representation.SingleSegmentRepresentation.contentLength long \l0x0024: IGET  (r2 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri) = \l  (r11 I:com.google.android.exoplayer2.source.dash.manifest.Representation$SingleSegmentRepresentation)\l com.google.android.exoplayer2.source.dash.manifest.Representation.SingleSegmentRepresentation.indexUri com.google.android.exoplayer2.source.dash.manifest.RangedUri \l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0055 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: IPUT  \l  (r2 I:com.google.android.exoplayer2.source.dash.manifest.SingleSegmentIndex)\l  (r11 I:com.google.android.exoplayer2.source.dash.manifest.Representation$SingleSegmentRepresentation)\l com.google.android.exoplayer2.source.dash.manifest.Representation.SingleSegmentRepresentation.segmentIndex com.google.android.exoplayer2.source.dash.manifest.SingleSegmentIndex \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('contentId' java.lang.String)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0052 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0030: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0033: INVOKE  (r2 I:java.lang.StringBuilder) = \l  (r2 I:java.lang.StringBuilder)\l  (r12 I:java.lang.String A[D('contentId' java.lang.String)])\l java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: CONST_STR  (r3 I:java.lang.String) =  \".\" \l0x0039: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003d: IGET  (r3 I:java.lang.String) = \l  (r15 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format)])\l com.google.android.exoplayer2.Format.id java.lang.String \l0x003f: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0043: CONST_STR  (r3 I:java.lang.String) =  \".\" \l0x0045: INVOKE  (r2 I:java.lang.StringBuilder) = (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0049: INVOKE  (r2 I:java.lang.StringBuilder) = \l  (r2 I:java.lang.StringBuilder)\l  (r13 I:long A[D('revisionId' long)])\l java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x004d: INVOKE  (r19 I:java.lang.String A[D('customCacheKey' java.lang.String)]) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0052|0x0052: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY] A[D('customCacheKey' java.lang.String)]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0055|0x0055: NEW_INSTANCE  (r8 I:com.google.android.exoplayer2.source.dash.manifest.SingleSegmentIndex) =  com.google.android.exoplayer2.source.dash.manifest.SingleSegmentIndex \l0x0057: NEW_INSTANCE  (r2 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri) =  com.google.android.exoplayer2.source.dash.manifest.RangedUri \l0x0059: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005a: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x005c: MOVE  (r6 I:?[long, double]) = (r20 I:?[long, double] A[D('contentLength' long)]) \l0x005e: INVOKE  \l  (r2 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri)\l  (r3 I:java.lang.String)\l  (r4 I:long)\l  (r6 I:long)\l com.google.android.exoplayer2.source.dash.manifest.RangedUri.\<init\>(java.lang.String, long, long):void type: DIRECT \l0x0061: INVOKE  \l  (r8 I:com.google.android.exoplayer2.source.dash.manifest.SingleSegmentIndex)\l  (r2 I:com.google.android.exoplayer2.source.dash.manifest.RangedUri)\l com.google.android.exoplayer2.source.dash.manifest.SingleSegmentIndex.\<init\>(com.google.android.exoplayer2.source.dash.manifest.RangedUri):void type: DIRECT \l0x0064: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
MethodNode[shape=record,label="{public void com.google.android.exoplayer2.source.dash.manifest.Representation.SingleSegmentRepresentation.\<init\>((r11 'this' I:com.google.android.exoplayer2.source.dash.manifest.Representation$SingleSegmentRepresentation A[IMMUTABLE_TYPE, THIS]), (r12 I:java.lang.String A[D('contentId' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:long A[D('revisionId' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:com.google.android.exoplayer2.Format A[D('format' com.google.android.exoplayer2.Format), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:java.lang.String A[D('baseUrl' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase A[D('segmentBase' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:java.util.List\<com.google.android.exoplayer2.source.dash.manifest.SchemeValuePair\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:java.lang.String A[D('customCacheKey' java.lang.String), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:long A[D('contentLength' long), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  ?\-0x001c: r19 'customCacheKey' java.lang.String\l  0x002c\-0x0055: r19 'customCacheKey' java.lang.String\l  ?\-0x0065: r12 'contentId' java.lang.String\l  ?\-0x0065: r13 'revisionId' long\l  ?\-0x0065: r15 'format' com.google.android.exoplayer2.Format\l  ?\-0x0065: r16 'baseUrl' java.lang.String\l  ?\-0x0065: r17 'segmentBase' com.google.android.exoplayer2.source.dash.manifest.SegmentBase$SingleSegmentBase\l  0x0000\-0x0065: r18 'inbandEventStreams' java.util.List\<com.google.android.exoplayer2.source.dash.manifest.SchemeValuePair\>\l  ?\-0x0065: r20 'contentLength' long\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, J, Lcom\/google\/android\/exoplayer2\/Format;, Ljava\/lang\/String;, Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/SegmentBase$SingleSegmentBase;, Ljava\/util\/List, \<, Lcom\/google\/android\/exoplayer2\/source\/dash\/manifest\/SchemeValuePair;, \>;, Ljava\/lang\/String;, J)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_2;
Node_9 -> Node_2;
Node_10 -> Node_5;
}

