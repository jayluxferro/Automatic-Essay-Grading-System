digraph "CFG forcom.google.android.exoplayer2.source.dash.DashMediaSource.DashTimeline.getIndexOfPeriod(Ljava\/lang\/Object;)I" {
subgraph cluster_Region_455124931 {
label = "R(1:(2:(1:10)|(1:9))) | DECL_VAR: int periodId\l";
node [shape=record,color=blue];
subgraph cluster_Region_1625059590 {
label = "R(2:(1:10)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1571999307 {
label = "IF [B:1:0x0003, B:3:0x000e, B:5:0x0017] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if ((r5 instanceof java.lang.Integer) == true) goto L_0x0006\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|ADDED_TO_REGION\l|if ((r0 = ((java.lang.Integer) r5).intValue()) \>= r4.firstPeriodId) goto L_0x0010\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|ADDED_TO_REGION\l|if (r0 \< (r4.firstPeriodId + getPeriodCount())) goto L_0x0019\l}"];
subgraph cluster_Region_1911486658 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return r0 \- r4.firstPeriodId\l}"];
}
}
subgraph cluster_Region_1869498243 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0019}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return \-1\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return \-1\l}"];
MethodNode[shape=record,label="{public int com.google.android.exoplayer2.source.dash.DashMediaSource.DashTimeline.getIndexOfPeriod((r4v0 'this' com.google.android.exoplayer2.source.dash.DashMediaSource$DashTimeline A[IMMUTABLE_TYPE, THIS]), (r5v0 'uid' java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_9[style=dashed];
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_10;
}

