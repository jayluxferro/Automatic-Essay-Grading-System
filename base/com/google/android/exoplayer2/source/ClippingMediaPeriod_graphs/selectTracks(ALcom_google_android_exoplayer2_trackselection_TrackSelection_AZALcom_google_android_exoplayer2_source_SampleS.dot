digraph "CFG forcom.google.android.exoplayer2.source.ClippingMediaPeriod.selectTracks([Lcom\/google\/android\/exoplayer2\/trackselection\/TrackSelection;[Z[Lcom\/google\/android\/exoplayer2\/source\/SampleStream;[ZJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r19.sampleStreams = new com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream[r22.length]\lcom.google.android.exoplayer2.source.SampleStream[] r6 = new com.google.android.exoplayer2.source.SampleStream[r22.length]\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|LOOP_START\lPHI: r2 \l  PHI: (r2v1 'i' int) = (r2v0 'i' int), (r2v5 'i' int) binds: [B:0:0x0000, B:6:0x0030] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000f\-\>B:6:0x0030\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|if (r2 \>= r22.length) goto L_0x0037\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|r19.sampleStreams[r2] = r22[r2]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|if (r19.sampleStreams[r2] == null) goto L_0x0035\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|com.google.android.exoplayer2.source.SampleStream r3 = com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.access$000(r19.sampleStreams[r2])\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|LOOP_END\lPHI: r3 \l  PHI: (r3v27 com.google.android.exoplayer2.source.SampleStream) = (r3v26 com.google.android.exoplayer2.source.SampleStream), (r3v30 com.google.android.exoplayer2.source.SampleStream) binds: [B:34:0x0030, B:33:0x0030] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000f\-\>B:6:0x0030\l|r6[r2] = r3\lint r2 = r2 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|r3 = null\l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|com.google.android.exoplayer2.source.MediaPeriod r3 = r19.mediaPeriod\llong r8 = r24 + r19.startUs\llong r16 = r3.selectTracks(r20, r21, r6, r23, r8)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0053|if ((r16 \> (r19.startUs + r24) ? 1 : (r16 == (r19.startUs + r24) ? 0 : \-1)) == 0) goto L_0x006f\l}"];
Node_10 [shape=record,label="{10\:\ 0x0055}"];
Node_11 [shape=record,label="{11\:\ 0x005b|if ((r16 \> r19.startUs ? 1 : (r16 == r19.startUs ? 0 : \-1)) \< 0) goto L_0x008f\l}"];
Node_12 [shape=record,label="{12\:\ 0x005d}"];
Node_13 [shape=record,label="{13\:\ 0x0065|if ((r19.endUs \> Long.MIN_VALUE ? 1 : (r19.endUs == Long.MIN_VALUE ? 0 : \-1)) == 0) goto L_0x006f\l}"];
Node_14 [shape=record,label="{14\:\ 0x0067}"];
Node_15 [shape=record,label="{15\:\ 0x006d|if ((r16 \> r19.endUs ? 1 : (r16 == r19.endUs ? 0 : \-1)) \> 0) goto L_0x008f\l}"];
Node_16 [shape=record,label="{16\:\ 0x006f|r3 = true\l}"];
Node_17 [shape=record,label="{17\:\ 0x0070|PHI: r3 \l  PHI: (r3v6 boolean) = (r3v17 boolean), (r3v19 boolean) binds: [B:16:0x006f, B:24:0x008f] A[DONT_GENERATE, DONT_INLINE]\l|com.google.android.exoplayer2.util.Assertions.checkState(r3)\lr2 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x0074|LOOP_START\lPHI: r2 \l  PHI: (r2v3 'i' int) = (r2v2 'i' int), (r2v4 'i' int) binds: [B:17:0x0070, B:23:0x0084] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:18:0x0074\-\>B:23:0x0084\l}"];
Node_19 [shape=record,label="{19\:\ 0x0077|if (r2 \>= r22.length) goto L_0x00bf\l}"];
Node_20 [shape=record,label="{20\:\ 0x0079}"];
Node_21 [shape=record,label="{21\:\ 0x007b|if (r6[r2] != null) goto L_0x0091\l}"];
Node_22 [shape=record,label="{22\:\ 0x007d|r19.sampleStreams[r2] = null\l}"];
Node_23 [shape=record,label="{23\:\ 0x0084|LOOP_END\lLOOP:1: B:18:0x0074\-\>B:23:0x0084\l|r22[r2] = r19.sampleStreams[r2]\lint r2 = r2 + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x008f|r3 = false\l}"];
Node_25 [shape=record,label="{25\:\ 0x0091}"];
Node_26 [shape=record,label="{26\:\ 0x0093|if (r22[r2] == null) goto L_0x00a3\l}"];
Node_27 [shape=record,label="{27\:\ 0x0095}"];
Node_28 [shape=record,label="{28\:\ 0x00a1|if (com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream.access$000(r19.sampleStreams[r2]) == r6[r2]) goto L_0x0084\l}"];
Node_29 [shape=record,label="{29\:\ 0x00a3|r8 = r19\lr19.sampleStreams[r2] = new com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream(r8, r6[r2], r19.startUs, r19.endUs, r19.pendingInitialDiscontinuity)\l}"];
Node_30 [shape=record,label="{30\:\ 0x00bf}"];
Node_31 [shape=record,label="{31\:\ 0x00c5|RETURN\l|return r16 \- r19.startUs\l}"];
Node_32 [shape=record,label="{32\:\ 0x0037|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0030|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0030|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x00bf|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0084|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x0084|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0084|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long com.google.android.exoplayer2.source.ClippingMediaPeriod.selectTracks((r19v0 'this' com.google.android.exoplayer2.source.ClippingMediaPeriod A[IMMUTABLE_TYPE, THIS]), (r20v0 'selections' com.google.android.exoplayer2.trackselection.TrackSelection[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 'mayRetainStreamFlags' boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 'streams' com.google.android.exoplayer2.source.SampleStream[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 'streamResetFlags' boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 'positionUs' long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_32;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_33;
Node_6 -> Node_1;
Node_7 -> Node_34;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_24;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_35;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_36;
Node_23 -> Node_18;
Node_24 -> Node_17;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_37;
Node_29 -> Node_38;
Node_30 -> Node_31;
Node_32 -> Node_8;
Node_33 -> Node_6;
Node_34 -> Node_6;
Node_35 -> Node_30;
Node_36 -> Node_23;
Node_37 -> Node_23;
Node_38 -> Node_23;
}

