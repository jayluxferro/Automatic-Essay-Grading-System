digraph "CFG forcom.google.firebase.FirebaseApp.UserUnlockReceiver.ensureReceiverRegistered(Landroid\/content\/Context;)V" {
subgraph cluster_Region_161454558 {
label = "R(1:(1:(2:2|(1:(1:4)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1249675164 {
label = "R(1:(2:2|(1:(1:4))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1858927208 {
label = "IF [B:1:0x0006] THEN: R(2:2|(1:(1:4))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (INSTANCE.get() == null) goto L_0x0008\l}"];
subgraph cluster_Region_853647605 {
label = "R(2:2|(1:(1:4)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|com.google.firebase.FirebaseApp$UserUnlockReceiver com.google.firebase.FirebaseApp.UserUnlockReceiver r0 = new com.google.firebase.FirebaseApp.UserUnlockReceiver(r3)\l}"];
subgraph cluster_Region_1371609111 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_310284615 {
label = "IF [B:3:0x0014] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0014|if (INSTANCE.compareAndSet((java.lang.Object) null, r0) == true) goto L_0x0016\l}"];
subgraph cluster_Region_1966914833 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|r3.registerReceiver(r0, new android.content.IntentFilter(\"android.intent.action.USER_UNLOCKED\"))\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void com.google.firebase.FirebaseApp.UserUnlockReceiver.ensureReceiverRegistered((r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | access modifiers changed from: private\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_0 -> Node_1;
}

