digraph "CFG forcom.google.firebase.FirebaseApp.getInstance(Ljava\/lang\/String;)Lcom\/google\/firebase\/FirebaseApp;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.lang.Object) =  com.google.firebase.FirebaseApp.LOCK java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: SGET  (r1 I:java.util.Map\<java.lang.String, com.google.firebase.FirebaseApp\>) =  com.google.firebase.FirebaseApp.INSTANCES java.util.Map A[Catch:\{ all \-\> 0x004c \}, TRY_ENTER]\l0x0005: INVOKE  (r2 I:java.lang.String) = (r5 I:java.lang.String) com.google.firebase.FirebaseApp.normalize(java.lang.String):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x004c \}]\l0x0009: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Map), (r2 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x004c \}]\l0x000d: CHECK_CAST  (r1 I:com.google.firebase.FirebaseApp) = (com.google.firebase.FirebaseApp) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0013 A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN  (r1 I:com.google.firebase.FirebaseApp) A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: INVOKE  (r1 I:java.util.List) =  com.google.firebase.FirebaseApp.getAllAppNames():java.util.List type: STATIC A[Catch:\{ all \-\> 0x004c \}]\l0x0017: INVOKE  (r2 I:boolean) = (r1 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0020 A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: CONST_STR  (r1 I:java.lang.String) =  \"\" A[Catch:\{ all \-\> 0x004c \}]\l0x001f: GOTO  \-\> 0x0037 A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x004c \}]\l0x0022: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x004c \}]\l0x0025: CONST_STR  (r3 I:java.lang.String) =  \"Available app names: \" A[Catch:\{ all \-\> 0x004c \}]\l0x0027: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x004c \}]\l0x002a: CONST_STR  (r3 I:java.lang.String) =  \", \" A[Catch:\{ all \-\> 0x004c \}]\l0x002c: INVOKE  (r1 I:java.lang.String) = (r3 I:java.lang.CharSequence), (r1 I:java.lang.Iterable) android.text.TextUtils.join(java.lang.CharSequence, java.lang.Iterable):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x004c \}]\l0x0030: INVOKE  (r2 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x004c \}]\l0x0033: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: CONST_STR  (r2 I:java.lang.String) =  \"FirebaseApp with name %s doesn't exist. %s\" A[Catch:\{ all \-\> 0x004c \}]\l0x0039: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x004c \}]\l0x003a: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ all \-\> 0x004c \}]\l0x003c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x004c \}]\l0x003d: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x004c \}]\l0x003f: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x004c \}]\l0x0040: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x004c \}]\l0x0042: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.String), (r3 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x004c \}]\l0x0046: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x004c \}]\l0x0048: INVOKE  \l  (r1 I:java.lang.IllegalStateException)\l  (r5 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|0x004b: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x004c: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|0x004d: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004c \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|0x004e: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static com.google.firebase.FirebaseApp com.google.firebase.FirebaseApp.getInstance((r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\lAnnotation[BUILD, com.google.firebase.annotations.PublicApi, \{\}], Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

