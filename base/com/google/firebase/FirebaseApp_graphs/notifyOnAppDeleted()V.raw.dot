digraph "CFG forcom.google.firebase.FirebaseApp.notifyOnAppDeleted()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.google.firebase.FirebaseAppLifecycleListener\>) = (r4 I:com.google.firebase.FirebaseApp) com.google.firebase.FirebaseApp.lifecycleListeners java.util.List \l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001a \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r1 I:com.google.firebase.FirebaseAppLifecycleListener) = (com.google.firebase.FirebaseAppLifecycleListener) (r1 I:?[OBJECT, ARRAY]) \l0x0012: IGET  (r2 I:java.lang.String) = (r4 I:com.google.firebase.FirebaseApp) com.google.firebase.FirebaseApp.name java.lang.String \l0x0014: IGET  (r3 I:com.google.firebase.FirebaseOptions) = (r4 I:com.google.firebase.FirebaseApp) com.google.firebase.FirebaseApp.options com.google.firebase.FirebaseOptions \l0x0016: INVOKE  \l  (r1 I:com.google.firebase.FirebaseAppLifecycleListener)\l  (r2 I:java.lang.String)\l  (r3 I:com.google.firebase.FirebaseOptions)\l com.google.firebase.FirebaseAppLifecycleListener.onDeleted(java.lang.String, com.google.firebase.FirebaseOptions):void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.firebase.FirebaseApp.notifyOnAppDeleted((r4 'this' I:com.google.firebase.FirebaseApp A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

