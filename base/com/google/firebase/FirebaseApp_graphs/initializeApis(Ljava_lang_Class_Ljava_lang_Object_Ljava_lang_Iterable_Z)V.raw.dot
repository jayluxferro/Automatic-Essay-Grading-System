digraph "CFG forcom.google.firebase.FirebaseApp.initializeApis(Ljava\/lang\/Class;Ljava\/lang\/Object;Ljava\/lang\/Iterable;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r9 I:java.util.Iterator) = (r9 I:java.lang.Iterable) java.lang.Iterable.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = (r9 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00b7 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r0 I:java.lang.Object) = (r9 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x000e: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0021 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|SYNTHETIC\lSplitter:B:5:0x0012\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0012\l|0x0012: SGET  (r1 I:java.util.List\<java.lang.String\>) =  com.google.firebase.FirebaseApp.DIRECT_BOOT_COMPATIBLE_API_INITIALIZERS java.util.List A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}, TRY_ENTER]\l0x0014: INVOKE  (r1 I:boolean) = (r1 I:java.util.List), (r0 I:java.lang.Object) java.util.List.contains(java.lang.Object):boolean type: INTERFACE A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0004 A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: GOTO  \-\> 0x0021 A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|ExcHandler: IllegalAccessException null\lSplitter:B:5:0x0012\l|0x001b: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: GOTO  \-\> 0x004a A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|ExcHandler: InvocationTargetException null\lSplitter:B:5:0x0012\l|0x001d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|0x001e: GOTO  \-\> 0x0061 A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|0x0020: GOTO  \-\> 0x0080 A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException null\lSplitter:B:5:0x0012\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|0x0021: INVOKE  (r1 I:java.lang.Class) = (r0 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x0025: CONST_STR  (r2 I:java.lang.String) =  \"getInstance\" A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x0027: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x0028: NEW_ARRAY  (r4 I:java.lang.Class[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x002a: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x002b: APUT  \l  (r4 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x002d: INVOKE  (r1 I:java.lang.reflect.Method) = \l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l  (r4 I:java.lang.Class[])\l java.lang.Class.getMethod(java.lang.String, java.lang.Class[]):java.lang.reflect.Method type: VIRTUAL A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x0031: INVOKE  (r2 I:int) = (r1 I:java.lang.reflect.Method) java.lang.reflect.Method.getModifiers():int type: VIRTUAL A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x0035: INVOKE  (r4 I:boolean) = (r2 I:int) java.lang.reflect.Modifier.isPublic(int):boolean type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0004 A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003b|0x003b: INVOKE  (r2 I:boolean) = (r2 I:int) java.lang.reflect.Modifier.isStatic(int):boolean type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|0x003f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0004 A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|0x0041: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x0042: NEW_ARRAY  (r3 I:java.lang.Object[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x0044: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}]\l0x0046: INVOKE  \l  (r1 I:java.lang.reflect.Method)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object[])\l java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ ClassNotFoundException \-\> 0x001f, NoSuchMethodException \-\> 0x0069, InvocationTargetException \-\> 0x001d, IllegalAccessException \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x004a|0x004a: CONST_STR  (r2 I:java.lang.String) =  \"FirebaseApp\" \l0x004c: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004e: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0051: CONST_STR  (r4 I:java.lang.String) =  \"Failed to initialize \" \l0x0053: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0056: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0059: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005d: INVOKE  \l  (r2 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l android.util.Log.wtf(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x0061|0x0061: CONST_STR  (r1 I:java.lang.String) =  \"FirebaseApp\" \l0x0063: CONST_STR  (r2 I:java.lang.String) =  \"Firebase API initialization failure.\" \l0x0065: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.wtf(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_23 [shape=record,label="{23\:\ 0x0069|0x0069: NEW_INSTANCE  (r7 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x006b: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x006d: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0070: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0073: CONST_STR  (r9 I:java.lang.String) =  \"#getInstance has been removed by Proguard. Add keep rule to prevent it.\" \l0x0075: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0078: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x007c: INVOKE  \l  (r7 I:java.lang.IllegalStateException)\l  (r8 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lExcHandler: NoSuchMethodException null\lSplitter:B:5:0x0012\l}"];
Node_25 [shape=record,label="{25\:\ 0x007f|0x007f: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0080|0x0080: SGET  (r1 I:java.util.Set\<java.lang.String\>) =  com.google.firebase.FirebaseApp.CORE_CLASSES java.util.Set \l0x0082: INVOKE  (r1 I:boolean) = (r1 I:java.util.Set), (r0 I:java.lang.Object) java.util.Set.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x0086|0x0086: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00a0 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0088|0x0088: CONST_STR  (r1 I:java.lang.String) =  \"FirebaseApp\" \l0x008a: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x008c: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x008f: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0092: CONST_STR  (r0 I:java.lang.String) =  \" is not linked. Skipping initialization.\" \l0x0094: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0097: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x009b: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_29 [shape=record,label="{29\:\ 0x00a0|0x00a0: NEW_INSTANCE  (r7 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x00a2: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00a4: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00a7: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00aa: CONST_STR  (r9 I:java.lang.String) =  \" is missing, but is required. Check if it has been removed by Proguard.\" \l0x00ac: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00af: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b3: INVOKE  \l  (r7 I:java.lang.IllegalStateException)\l  (r8 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b6|0x00b6: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_31 [shape=record,label="{31\:\ 0x00b7|0x00b7: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.firebase.FirebaseApp.initializeApis((r6 'this' I:com.google.firebase.FirebaseApp A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.Iterable\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Class\<, TT;\>;TT;, Ljava\/lang\/Iterable\<, Ljava\/lang\/String;, \>;Z)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_31;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_5 -> Node_14;
Node_5 -> Node_24;
Node_5 -> Node_11;
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_21;
Node_11 -> Node_12;
Node_12 -> Node_22;
Node_13 -> Node_26;
Node_14 -> Node_13;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_1;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_1;
Node_21 -> Node_1;
Node_22 -> Node_1;
Node_23 -> Node_25;
Node_24 -> Node_23;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_1;
Node_29 -> Node_30;
}

