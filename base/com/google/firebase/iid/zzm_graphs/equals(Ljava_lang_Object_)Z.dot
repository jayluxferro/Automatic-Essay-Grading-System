digraph "CFG forcom.google.firebase.iid.zzm.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r3 != null) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|SYNTHETIC\lSplitter:B:3:0x0004\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ ClassCastException \-\> 0x0013 \}\lSplitter:B:3:0x0004\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\l|return getBinder().equals(((com.google.firebase.iid.zzm) r3).getBinder())\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|RETURN\l|return false\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lExcHandler: ClassCastException (unused java.lang.ClassCastException)\lSplitter:B:3:0x0004\l}"];
MethodNode[shape=record,label="{public boolean com.google.firebase.iid.zzm.equals((r2v0 'this' com.google.firebase.iid.zzm A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_7 -> Node_6;
}

