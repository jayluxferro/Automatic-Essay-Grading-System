digraph "CFG forcom.google.firebase.iid.zzz.zza(Ljava\/io\/File;)Lcom\/google\/firebase\/iid\/zzy;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0002: INVOKE  (r0 I:java.io.FileInputStream), (r10 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT \l0x0005: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|SYNTHETIC\lSplitter:B:1:0x0006\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0006\l|0x0006: INVOKE  (r7 I:java.nio.channels.FileChannel) = (r0 I:java.io.FileInputStream) java.io.FileInputStream.getChannel():java.nio.channels.FileChannel type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0034 \}, TRY_ENTER]\l0x0009: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x000c: CONST  (r4 I:?[long, double]) = \l  (9223372036854775807(0x7fffffffffffffff, double:NaN) ?[long, double])\l \l0x0011: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0012: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|SYNTHETIC\lSplitter:B:4:0x0013\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x0013\l|0x0013: INVOKE  \l  (r1 I:java.nio.channels.FileChannel)\l  (r2 I:long)\l  (r4 I:long)\l  (r6 I:boolean)\l java.nio.channels.FileChannel.lock(long, long, boolean):java.nio.channels.FileLock type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0026, all \-\> 0x0023 \}, TRY_ENTER]\l0x0016: INVOKE  (r1 I:com.google.firebase.iid.zzy) = (r7 I:java.nio.channels.FileChannel) com.google.firebase.iid.zzz.zza(java.nio.channels.FileChannel):com.google.firebase.iid.zzy type: STATIC A[Catch:\{ Throwable \-\> 0x0026, all \-\> 0x0023 \}]\l0x0019: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|SYNTHETIC\lSplitter:B:7:0x001c\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x001c\l|0x001c: INVOKE  \l  (r10 I:java.lang.Throwable)\l  (r7 I:java.nio.channels.FileChannel)\l com.google.firebase.iid.zzz.zza(java.lang.Throwable, java.nio.channels.FileChannel):void type: STATIC A[Catch:\{ Throwable \-\> 0x0034 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: INVOKE  (r10 I:java.lang.Throwable), (r0 I:java.io.FileInputStream) com.google.firebase.iid.zzz.zza(java.lang.Throwable, java.io.FileInputStream):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: RETURN  (r1 I:com.google.firebase.iid.zzy) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|ExcHandler: all null\lSplitter:B:4:0x0013\l|0x0023: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|ExcHandler: Throwable null\lSplitter:B:4:0x0013\l|0x0026: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|SYNTHETIC\lSplitter:B:14:0x0027\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x0027\l|0x0027: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0028 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0028|ExcHandler: all null\lSplitter:B:14:0x0027\l|0x0028: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0029|0x0029: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x002a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x002b: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x002c|0x002c: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0031 \l}"];
Node_19 [shape=record,label="{19\:\ 0x002e|SYNTHETIC\lSplitter:B:19:0x002e\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x002e\l|0x002e: INVOKE  \l  (r2 I:java.lang.Throwable)\l  (r7 I:java.nio.channels.FileChannel)\l com.google.firebase.iid.zzz.zza(java.lang.Throwable, java.nio.channels.FileChannel):void type: STATIC A[Catch:\{ Throwable \-\> 0x0034 \}, TRY_ENTER]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0031|0x0031: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ Throwable \-\> 0x0034 \}, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0032|ExcHandler: all null\lSplitter:B:25:0x0035\l|0x0032: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_24 [shape=record,label="{24\:\ 0x0034|ExcHandler: Throwable null\lSplitter:B:1:0x0006\l|0x0034: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x0035|SYNTHETIC\lSplitter:B:25:0x0035\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x0035\l|0x0035: THROW  (r10 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0032 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0036|0x0036: INVOKE  (r10 I:java.lang.Throwable), (r0 I:java.io.FileInputStream) com.google.firebase.iid.zzz.zza(java.lang.Throwable, java.io.FileInputStream):void type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x0039|0x0039: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private final com.google.firebase.iid.zzy com.google.firebase.iid.zzz.zza((r9 'this' I:com.google.firebase.iid.zzz A[IMMUTABLE_TYPE, THIS]), (r10 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.firebase.iid.zzaa, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_24;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_13;
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_7 -> Node_24;
Node_8 -> Node_9;
Node_8 -> Node_24;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_22 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_22;
Node_26 -> Node_22;
Node_27 -> Node_28;
}

