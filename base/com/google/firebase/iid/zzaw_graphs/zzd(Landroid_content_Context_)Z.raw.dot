digraph "CFG forcom.google.firebase.iid.zzaw.zzd(Landroid\/content\/Context;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Boolean) = (r1 I:com.google.firebase.iid.zzaw) com.google.firebase.iid.zzaw.zzdh java.lang.Boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST_STR  (r0 I:java.lang.String) =  \"android.permission.WAKE_LOCK\" \l0x0006: INVOKE  (r2 I:int) = (r2 I:android.content.Context), (r0 I:java.lang.String) android.content.Context.checkCallingOrSelfPermission(java.lang.String):int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: INVOKE  (r2 I:java.lang.Boolean) = (r2 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x0013: IPUT  \l  (r2 I:java.lang.Boolean)\l  (r1 I:com.google.firebase.iid.zzaw)\l com.google.firebase.iid.zzaw.zzdh java.lang.Boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IGET  (r2 I:java.lang.Boolean) = (r1 I:com.google.firebase.iid.zzaw) com.google.firebase.iid.zzaw.zzdh java.lang.Boolean \l0x0017: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002d \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: CONST_STR  (r2 I:java.lang.String) =  \"FirebaseInstanceId\" \l0x001f: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0020: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r0 I:int) android.util.Log.isLoggable(java.lang.String, int):boolean type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: CONST_STR  (r2 I:java.lang.String) =  \"FirebaseInstanceId\" \l0x0028: CONST_STR  (r0 I:java.lang.String) =  \"Missing Permission: android.permission.WAKE_LOCK this should normally be included by the manifest merger, but may needed to be manually added to your manifest\" \l0x002a: INVOKE  (r2 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: IGET  (r2 I:java.lang.Boolean) = (r1 I:com.google.firebase.iid.zzaw) com.google.firebase.iid.zzaw.zzdh java.lang.Boolean \l0x002f: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{final boolean com.google.firebase.iid.zzaw.zzd((r1 'this' I:com.google.firebase.iid.zzaw A[IMMUTABLE_TYPE, THIS]), (r2 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

