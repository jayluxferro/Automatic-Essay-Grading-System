digraph "CFG forcom.google.firebase.components.ComponentRuntime.processInstanceComponents()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r5.components.entrySet().iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lLOOP:0: B:1:0x000a\-\>B:11:0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|if (r0.hasNext() == false) goto L_0x0043\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|java.util.Map$Entry r1 = r0.next()\lcom.google.firebase.components.Component r2 = (com.google.firebase.components.Component) r1.getKey()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|if (r2.isValue() != false) goto L_0x0023\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|com.google.firebase.components.Lazy r1 = (com.google.firebase.components.Lazy) r1.getValue()\ljava.util.Iterator r2 = r2.getProvidedInterfaces().iterator()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|LOOP_START\lLOOP:1: B:6:0x0031\-\>B:8:0x0037\l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|if (r2.hasNext() == false) goto L_0x000a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|LOOP_END\lLOOP:1: B:6:0x0031\-\>B:8:0x0037\l|java.util.Map\<java.lang.Class\<?\>, com.google.firebase.components.Lazy\<?\>\> r4 = r5.lazyInstanceMap\lr4.put((java.lang.Class) r2.next(), r1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0043|validateDependencies()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x000a\-\>B:11:0x000a\l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.firebase.components.ComponentRuntime.processInstanceComponents((r5v0 'this' com.google.firebase.components.ComponentRuntime A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_13[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_6;
Node_9 -> Node_10;
Node_11 -> Node_1;
Node_12 -> Node_9;
Node_13 -> Node_11;
Node_14 -> Node_11;
}

