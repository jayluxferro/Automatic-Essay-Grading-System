digraph "CFG forcom.google.firebase.components.ComponentRuntime.lambda$processSetComponents$1(Ljava\/util\/Set;)Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet \l0x0002: INVOKE  (r0 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: INVOKE  (r1 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001d \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r1 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r1 I:com.google.firebase.components.Lazy) = (com.google.firebase.components.Lazy) (r1 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  (r1 I:java.lang.Object) = (r1 I:com.google.firebase.components.Lazy) com.google.firebase.components.Lazy.get():java.lang.Object type: VIRTUAL \l0x0019: INVOKE  (r0 I:java.util.Set), (r1 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: INVOKE  (r2 I:java.util.Set) = (r0 I:java.util.Set) java.util.Collections.unmodifiableSet(java.util.Set):java.util.Set type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: RETURN  (r2 I:java.util.Set) \l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.util.Set com.google.firebase.components.ComponentRuntime.lambda$processSetComponents$1((r2 I:java.util.Set A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

