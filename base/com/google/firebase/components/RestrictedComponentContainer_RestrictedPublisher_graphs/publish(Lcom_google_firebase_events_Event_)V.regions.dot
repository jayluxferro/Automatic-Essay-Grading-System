digraph "CFG forcom.google.firebase.components.RestrictedComponentContainer.RestrictedPublisher.publish(Lcom\/google\/firebase\/events\/Event;)V" {
subgraph cluster_Region_541861300 {
label = "R(1:(1:2)(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_501389103 {
label = "IF [B:1:0x000a] THEN: R(1:2) ELSE: R(2:4|5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r3.allowedPublishedEvents.contains(r4.getType()) == true) goto L_0x000c\l}"];
subgraph cluster_Region_496420697 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|r3.delegate.publish(r4)\l}"];
}
subgraph cluster_Region_743891502 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012}"];
Node_5 [shape=record,label="{5\:\ 0x0023|throw new java.lang.IllegalArgumentException(java.lang.String.format(\"Attempting to publish an undeclared event %s.\", new java.lang.Object[]\{r4\}))\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0011}"];
MethodNode[shape=record,label="{public void com.google.firebase.components.RestrictedComponentContainer.RestrictedPublisher.publish((r3v0 'this' com.google.firebase.components.RestrictedComponentContainer$RestrictedPublisher A[IMMUTABLE_TYPE, THIS]), (r4v0 com.google.firebase.events.Event\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/firebase\/events\/Event\<, *\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_0 -> Node_1;
}

