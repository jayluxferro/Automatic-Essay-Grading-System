digraph "CFG forcom.google.firebase.components.CycleDetector.detect(Ljava\/util\/List;)V" {
subgraph cluster_Region_738468382 {
label = "R(3:0|(2:3|(2:6|(1:8)(0)))|(1:(3:12|(2:15|(1:19))|21)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Set java.util.Set\<com.google.firebase.components.CycleDetector.ComponentNode\> r0 = toGraph(r7)\ljava.util.Set java.util.Set\<com.google.firebase.components.CycleDetector.ComponentNode\> r1 = getRoots(r0)\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1597523206 {
label = "LOOP:0: (2:3|(2:6|(1:8)(0)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|if (r1.isEmpty() == false) goto L_0x000f\l}"];
subgraph cluster_Region_1905612907 {
label = "R(2:3|(2:6|(1:8)(0)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|com.google.firebase.components.CycleDetector$ComponentNode com.google.firebase.components.CycleDetector.ComponentNode r3 = r1.iterator().next()\lr1.remove(r3)\lr2++\ljava.util.Iterator r4 = r3.getDependencies().iterator()\l}"];
subgraph cluster_LoopRegion_1201366486 {
label = "LOOP:1: (2:6|(1:8)(0))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002a|if (r4.hasNext() != false) goto L_0x002c\l}"];
subgraph cluster_Region_1662078669 {
label = "R(2:6|(1:8)(0))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002c|com.google.firebase.components.CycleDetector$ComponentNode r5 = r4.next()\lr5.removeDependent(r3)\l}"];
subgraph cluster_IfRegion_1741826437 {
label = "IF [B:7:0x0039] THEN: R(1:8) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0039|if (r5.isRoot() == true) goto L_0x003b\l}"];
subgraph cluster_Region_2081198229 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003b|r1.add(r5)\l}"];
}
subgraph cluster_Region_724499778 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
subgraph cluster_Region_1189117824 {
label = "R(1:(3:12|(2:15|(1:19))|21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_630292084 {
label = "IF [B:10:0x0043] THEN: R(3:12|(2:15|(1:19))|21) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0043|if (r2 != r7.size()) goto L_0x0046\l}"];
subgraph cluster_Region_758029653 {
label = "R(3:12|(2:15|(1:19))|21)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0046|java.util.ArrayList java.util.ArrayList r7 = new java.util.ArrayList()\ljava.util.Iterator r0 = r0.iterator()\l}"];
subgraph cluster_LoopRegion_1514739551 {
label = "LOOP:2: (2:15|(1:19))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0053|if (r0.hasNext() != false) goto L_0x0055\l}"];
subgraph cluster_Region_748782482 {
label = "R(2:15|(1:19))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0055|com.google.firebase.components.CycleDetector$ComponentNode r1 = r0.next()\l}"];
subgraph cluster_IfRegion_1891217321 {
label = "IF [B:16:0x005f, B:18:0x0065] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x005f|ADDED_TO_REGION\l|if (r1.isRoot() == false) goto L_0x0061\l}"];
Node_18 [shape=record,label="{18\:\ 0x0065|ADDED_TO_REGION\l|if (r1.isLeaf() == false) goto L_0x0067\l}"];
subgraph cluster_Region_949751733 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0067|r7.add(r1.getComponent())\l}"];
}
}
}
}
Node_21 [shape=record,label="{21\:\ 0x0074|throw new com.google.firebase.components.DependencyCycleException(r7)\l}"];
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0009|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v4 int) binds: [B:0:0x0000, B:24:0x0009] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:24:0x0009\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0026|LOOP_START\lLOOP:1: B:4:0x0026\-\>B:23:0x0026\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x003f}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0045}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x004f|LOOP_START\lLOOP:2: B:13:0x004f\-\>B:27:0x004f\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0061}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x006f}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x003f|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0026|LOOP_END\lSYNTHETIC\lLOOP:1: B:4:0x0026\-\>B:23:0x0026\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0009|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0009\-\>B:24:0x0009\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0026|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0026|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x004f|LOOP_END\lSYNTHETIC\lLOOP:2: B:13:0x004f\-\>B:27:0x004f\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x006f|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x004f|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x004f|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x004f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void com.google.firebase.components.CycleDetector.detect((r7v0 java.util.List\<com.google.firebase.components.Component\<?\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lcom\/google\/firebase\/components\/Component\<, *\>;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_22[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_24[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_25[style=dashed];
Node_8 -> Node_26;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_28[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_29[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_30[style=dashed];
Node_19 -> Node_31;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_9 -> Node_10;
Node_13 -> Node_14;
Node_17 -> Node_18;
Node_20 -> Node_21;
Node_22 -> Node_9;
Node_23 -> Node_4;
Node_24 -> Node_1;
Node_25 -> Node_23;
Node_26 -> Node_23;
Node_27 -> Node_13;
Node_28 -> Node_20;
Node_29 -> Node_27;
Node_30 -> Node_27;
Node_31 -> Node_27;
}

