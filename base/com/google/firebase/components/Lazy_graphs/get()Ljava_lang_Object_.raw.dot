digraph "CFG forcom.google.firebase.components.Lazy.get()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r2 I:com.google.firebase.components.Lazy) com.google.firebase.components.Lazy.instance java.lang.Object \l0x0002: SGET  (r1 I:java.lang.Object) =  com.google.firebase.components.Lazy.UNINITIALIZED java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|SYNTHETIC\lSplitter:B:3:0x0007\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0007\l|0x0007: IGET  (r0 I:java.lang.Object) = (r2 I:com.google.firebase.components.Lazy) com.google.firebase.components.Lazy.instance java.lang.Object A[Catch:\{ all \-\> 0x001a \}, TRY_ENTER]\l0x0009: SGET  (r1 I:java.lang.Object) =  com.google.firebase.components.Lazy.UNINITIALIZED java.lang.Object A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IGET  (r0 I:com.google.firebase.inject.Provider\<T\>) = (r2 I:com.google.firebase.components.Lazy) com.google.firebase.components.Lazy.provider com.google.firebase.inject.Provider A[Catch:\{ all \-\> 0x001a \}]\l0x000f: INVOKE  (r0 I:java.lang.Object) = (r0 I:com.google.firebase.inject.Provider) com.google.firebase.inject.Provider.get():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x001a \}]\l0x0013: IPUT  \l  (r0 I:java.lang.Object)\l  (r2 I:com.google.firebase.components.Lazy)\l com.google.firebase.components.Lazy.instance java.lang.Object A[Catch:\{ all \-\> 0x001a \}]\l0x0015: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x001a \}]\l0x0016: IPUT  \l  (r1 I:com.google.firebase.inject.Provider\<T\>)\l  (r2 I:com.google.firebase.components.Lazy)\l com.google.firebase.components.Lazy.provider com.google.firebase.inject.Provider A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: GOTO  \-\> 0x001d A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|ExcHandler: all null\lSplitter:B:3:0x0007\l|0x001a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001a \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: RETURN  (r0 I:T) \l}"];
MethodNode[shape=record,label="{public T com.google.firebase.components.Lazy.get((r2 'this' I:com.google.firebase.components.Lazy A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

