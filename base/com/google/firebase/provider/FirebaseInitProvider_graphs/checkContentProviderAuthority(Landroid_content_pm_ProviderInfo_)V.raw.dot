digraph "CFG forcom.google.firebase.provider.FirebaseInitProvider.checkContentProviderAuthority(Landroid\/content\/pm\/ProviderInfo;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"FirebaseInitProvider ProviderInfo cannot be null.\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.Object) com.google.android.gms.common.internal.Preconditions.checkNotNull(java.lang.Object, java.lang.Object):java.lang.Object type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"com.google.firebase.firebaseinitprovider\" \l0x0007: IGET  (r1 I:java.lang.String) = (r1 I:android.content.pm.ProviderInfo) android.content.pm.ProviderInfo.authority java.lang.String \l0x0009: INVOKE  (r1 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: NEW_INSTANCE  (r1 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0012: CONST_STR  (r0 I:java.lang.String) =  \"Incorrect provider authority in manifest. Most likely due to a missing applicationId variable in application's build.gradle.\" \l0x0014: INVOKE  \l  (r1 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static void com.google.firebase.provider.FirebaseInitProvider.checkContentProviderAuthority((r1 I:android.content.pm.ProviderInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.support.annotation.NonNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

