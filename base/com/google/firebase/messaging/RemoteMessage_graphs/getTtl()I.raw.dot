digraph "CFG forcom.google.firebase.messaging.RemoteMessage.getTtl()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.os.Bundle) = (r4 I:com.google.firebase.messaging.RemoteMessage) com.google.firebase.messaging.RemoteMessage.zzee android.os.Bundle \l0x0002: CONST_STR  (r1 I:java.lang.String) =  \"google.ttl\" \l0x0004: INVOKE  (r0 I:java.lang.Object) = (r0 I:android.os.Bundle), (r1 I:java.lang.String) android.os.Bundle.get(java.lang.String):java.lang.Object type: VIRTUAL \l0x0008: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) java.lang.Integer \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CHECK_CAST  (r0 I:java.lang.Integer) = (java.lang.Integer) (r0 I:?[OBJECT, ARRAY]) \l0x000e: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: RETURN  (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) java.lang.String \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0043 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|SYNTHETIC\lSplitter:B:7:0x0018\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0018\l|0x0018: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ NumberFormatException \-\> 0x001f \}, TRY_ENTER]\l0x001a: INVOKE  (r1 I:int) = (r1 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x001f \}]\l0x001d: NOP   A[TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: RETURN  (r1 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: CONST_STR  (r1 I:java.lang.String) =  \"FirebaseMessaging\" \l0x0021: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0025: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x0029: INVOKE  (r2 I:int) = (r2 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x002d: ARITH  (r2 I:int) = (r2 I:int) + (13 int) \l0x002f: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0031: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l0x0034: CONST_STR  (r2 I:java.lang.String) =  \"Invalid TTL: \" \l0x0036: INVOKE  (r3 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0039: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003c: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0040: INVOKE  (r1 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:7:0x0018\l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|0x0043: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public final int com.google.firebase.messaging.RemoteMessage.getTtl((r4 'this' I:com.google.firebase.messaging.RemoteMessage A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_10 -> Node_12;
Node_11 -> Node_10;
Node_12 -> Node_13;
}

