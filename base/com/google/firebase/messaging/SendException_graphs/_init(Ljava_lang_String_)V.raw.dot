digraph "CFG forcom.google.firebase.messaging.SendException.\<init\>(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:java.lang.Exception), (r8 I:java.lang.String) java.lang.Exception.\<init\>(java.lang.String):void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0005: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0006: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0054 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: SGET  (r5 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x000c: INVOKE  (r8 I:java.lang.String) = (r8 I:java.lang.String), (r5 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL \l0x0010: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0011: INVOKE  (r6 I:int) = (r8 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: SWITCH  \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[\-1743242157, \-1290953729, \-920906446, \-617027085, \-95047692] t:[0x0041, 0x0037, 0x002d, 0x0023, 0x0019] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: CONST_STR  (r6 I:java.lang.String) =  \"missing_to\" \l0x001b: INVOKE  (r8 I:boolean) = (r8 I:java.lang.String), (r6 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: CONST_STR  (r6 I:java.lang.String) =  \"messagetoobig\" \l0x0025: INVOKE  (r8 I:boolean) = (r8 I:java.lang.String), (r6 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004a \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: CONST_STR  (r6 I:java.lang.String) =  \"invalid_parameters\" \l0x002f: INVOKE  (r8 I:boolean) = (r8 I:java.lang.String), (r6 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004a \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: CONST_STR  (r6 I:java.lang.String) =  \"toomanymessages\" \l0x0039: INVOKE  (r8 I:boolean) = (r8 I:java.lang.String), (r6 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004a \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|0x0041: CONST_STR  (r6 I:java.lang.String) =  \"service_not_available\" \l0x0043: INVOKE  (r8 I:boolean) = (r8 I:java.lang.String), (r6 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0047|0x0047: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004a \l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|0x0049: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x004a|0x004a: SWITCH  \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3, 4] t:[0x0052, 0x0052, 0x0050, 0x004e, 0x0055] \l}"];
Node_22 [shape=record,label="{22\:\ 0x004e|0x004e: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0050|0x0050: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0052|0x0052: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0054|0x0054: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x0055|0x0055: IPUT  \l  (r0 I:int)\l  (r7 I:com.google.firebase.messaging.SendException)\l com.google.firebase.messaging.SendException.errorCode int \l}"];
Node_27 [shape=record,label="{27\:\ 0x0057|0x0057: RETURN   \l}"];
MethodNode[shape=record,label="{void com.google.firebase.messaging.SendException.\<init\>((r7 'this' I:com.google.firebase.messaging.SendException A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_8;
Node_3 -> Node_11;
Node_3 -> Node_14;
Node_3 -> Node_17;
Node_3 -> Node_20;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_20;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_20;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_20;
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_23;
Node_20 -> Node_24;
Node_20 -> Node_26;
Node_20 -> Node_25;
Node_22 -> Node_26;
Node_23 -> Node_26;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

