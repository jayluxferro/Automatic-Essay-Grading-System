digraph "CFG forcom.google.gson.JsonArray.deepCopy()Lcom\/google\/gson\/JsonArray;" {
subgraph cluster_Region_1659971317 {
label = "R(1:(2:(1:8)|(3:2|(1:5)|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1184193509 {
label = "R(2:(1:8)|(3:2|(1:5)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1629261701 {
label = "IF [B:1:0x0006] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3.elements.isEmpty() != false) goto L_0x002e\l}"];
subgraph cluster_Region_1234191544 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0033|RETURN\l|return new com.google.gson.JsonArray()\l}"];
}
}
subgraph cluster_Region_115618074 {
label = "R(3:2|(1:5)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|com.google.gson.JsonArray com.google.gson.JsonArray r0 = new com.google.gson.JsonArray(r3.elements.size())\ljava.util.Iterator r1 = r3.elements.iterator()\l}"];
subgraph cluster_LoopRegion_582817265 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001d|if (r1.hasNext() != false) goto L_0x001f\l}"];
subgraph cluster_Region_1698434607 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001f|LOOP_END\lLOOP:0: B:3:0x0019\-\>B:5:0x001f\l|r0.add(r2.deepCopy())\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x002d|RETURN\l|return r0\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0019|LOOP_START\lLOOP:0: B:3:0x0019\-\>B:5:0x001f\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002e}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public com.google.gson.JsonArray com.google.gson.JsonArray.deepCopy((r3v0 'this' com.google.gson.JsonArray A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_3;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_6;
}

