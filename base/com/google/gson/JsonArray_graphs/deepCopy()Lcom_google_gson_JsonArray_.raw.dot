digraph "CFG forcom.google.gson.JsonArray.deepCopy()Lcom\/google\/gson\/JsonArray;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.google.gson.JsonElement\>) = (r3 I:com.google.gson.JsonArray) com.google.gson.JsonArray.elements java.util.List \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: NEW_INSTANCE  (r0 I:com.google.gson.JsonArray) =  com.google.gson.JsonArray \l0x000a: IGET  (r1 I:java.util.List\<com.google.gson.JsonElement\>) = (r3 I:com.google.gson.JsonArray) com.google.gson.JsonArray.elements java.util.List \l0x000c: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0010: INVOKE  (r0 I:com.google.gson.JsonArray), (r1 I:int) com.google.gson.JsonArray.\<init\>(int):void type: DIRECT \l0x0013: IGET  (r1 I:java.util.List\<com.google.gson.JsonElement\>) = (r3 I:com.google.gson.JsonArray) com.google.gson.JsonArray.elements java.util.List \l0x0015: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002d \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0023: CHECK_CAST  (r2 I:com.google.gson.JsonElement) = (com.google.gson.JsonElement) (r2 I:?[OBJECT, ARRAY]) \l0x0025: INVOKE  (r2 I:com.google.gson.JsonElement) = (r2 I:com.google.gson.JsonElement) com.google.gson.JsonElement.deepCopy():com.google.gson.JsonElement type: VIRTUAL \l0x0029: INVOKE  \l  (r0 I:com.google.gson.JsonArray)\l  (r2 I:com.google.gson.JsonElement)\l com.google.gson.JsonArray.add(com.google.gson.JsonElement):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: RETURN  (r0 I:com.google.gson.JsonArray) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: NEW_INSTANCE  (r0 I:com.google.gson.JsonArray) =  com.google.gson.JsonArray \l0x0030: INVOKE  (r0 I:com.google.gson.JsonArray) com.google.gson.JsonArray.\<init\>():void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|0x0033: RETURN  (r0 I:com.google.gson.JsonArray) \l}"];
MethodNode[shape=record,label="{public com.google.gson.JsonArray com.google.gson.JsonArray.deepCopy((r3 'this' I:com.google.gson.JsonArray A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_7 -> Node_8;
}

