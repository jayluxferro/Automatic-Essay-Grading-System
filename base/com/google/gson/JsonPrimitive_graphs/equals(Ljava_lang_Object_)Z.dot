digraph "CFG forcom.google.gson.JsonPrimitive.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r6 != r7) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004}"];
Node_4 [shape=record,label="{4\:\ 0x0005|if (r7 == null) goto L_0x007a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007}"];
Node_6 [shape=record,label="{6\:\ 0x000f|if (getClass() == r7.getClass()) goto L_0x0012\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|com.google.gson.JsonPrimitive r7 = (com.google.gson.JsonPrimitive) r7\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|if (r6.value != null) goto L_0x001f\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018}"];
Node_10 [shape=record,label="{10\:\ 0x001a|if (r7.value != null) goto L_0x001d\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f}"];
Node_13 [shape=record,label="{13\:\ 0x0023|if (isIntegral(r6) == false) goto L_0x0042\l}"];
Node_14 [shape=record,label="{14\:\ 0x0025}"];
Node_15 [shape=record,label="{15\:\ 0x0029|if (isIntegral(r7) == false) goto L_0x0042\l}"];
Node_16 [shape=record,label="{16\:\ 0x002b}"];
Node_17 [shape=record,label="{17\:\ 0x003d|if ((getAsNumber().longValue() \> r7.getAsNumber().longValue() ? 1 : (getAsNumber().longValue() == r7.getAsNumber().longValue() ? 0 : \-1)) != 0) goto L_0x0040\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_19 [shape=record,label="{19\:\ 0x0042}"];
Node_20 [shape=record,label="{20\:\ 0x0046|if ((r6.value instanceof java.lang.Number) == false) goto L_0x0071\l}"];
Node_21 [shape=record,label="{21\:\ 0x0048}"];
Node_22 [shape=record,label="{22\:\ 0x004c|if ((r7.value instanceof java.lang.Number) == false) goto L_0x0071\l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|double r2 = getAsNumber().doubleValue()\ldouble r4 = r7.getAsNumber().doubleValue()\l}"];
Node_24 [shape=record,label="{24\:\ 0x0060|if ((r2 \> r4 ? 1 : (r2 == r4 ? 0 : \-1)) == 0) goto L_?\l}"];
Node_25 [shape=record,label="{25\:\ 0x0062}"];
Node_26 [shape=record,label="{26\:\ 0x0066|if (java.lang.Double.isNaN(r2) == false) goto L_0x006f\l}"];
Node_27 [shape=record,label="{27\:\ 0x0068}"];
Node_28 [shape=record,label="{28\:\ 0x006c|if (java.lang.Double.isNaN(r4) == false) goto L_0x006f\l}"];
Node_29 [shape=record,label="{29\:\ 0x006f|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_30 [shape=record,label="{30\:\ 0x0071}"];
Node_31 [shape=record,label="{31\:\ 0x0079|RETURN\l|return r6.value.equals(r7.value)\l}"];
Node_32 [shape=record,label="{32\:\ 0x007a|RETURN\l|return false\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean com.google.gson.JsonPrimitive.equals((r6v0 'this' com.google.gson.JsonPrimitive A[IMMUTABLE_TYPE, THIS]), (r7v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_32;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_32[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_33[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_34[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_30;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_30;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_35;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_36[style=dashed];
Node_30 -> Node_31;
}

