digraph "CFG forcom.google.gson.JsonPrimitive.isIntegral(Lcom\/google\/gson\/JsonPrimitive;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r2 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.value java.lang.Object \l0x0002: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) java.lang.Number \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r2 I:java.lang.Object) = (r2 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.value java.lang.Object \l0x0009: CHECK_CAST  (r2 I:java.lang.Number) = (java.lang.Number) (r2 I:?[OBJECT, ARRAY]) \l0x000b: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.math.BigInteger \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.lang.Long \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.lang.Integer \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.lang.Short \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001f \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: INSTANCE_OF  (r2 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.lang.Byte \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0020 \l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|0x001f: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|0x0020: RETURN  (r1 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0021|0x0021: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean com.google.gson.JsonPrimitive.isIntegral((r2 I:com.google.gson.JsonPrimitive A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
}

