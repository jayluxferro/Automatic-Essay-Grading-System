digraph "CFG forcom.google.gson.JsonPrimitive.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.value java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, short, byte, char]) = (31 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.isIntegral(com.google.gson.JsonPrimitive):boolean type: STATIC \l0x000b: CONST  (r1 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001c \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: INVOKE  (r0 I:java.lang.Number) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.getAsNumber():java.lang.Number type: VIRTUAL \l0x0013: INVOKE  (r2 I:long) = (r0 I:java.lang.Number) java.lang.Number.longValue():long type: VIRTUAL \l0x0017: ARITH  (r0 I:long) = (r2 I:long) \>\>\> (r1 I:long) \l0x0019: ARITH  (r0 I:long) = (r0 I:long) ^ (r2 I:long) \l0x001a: CAST  (r0 I:int) = (int) (r0 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: RETURN  (r0 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IGET  (r0 I:java.lang.Object) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.value java.lang.Object \l0x001e: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) java.lang.Number \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0033 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: INVOKE  (r0 I:java.lang.Number) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.getAsNumber():java.lang.Number type: VIRTUAL \l0x0026: INVOKE  (r2 I:double) = (r0 I:java.lang.Number) java.lang.Number.doubleValue():double type: VIRTUAL \l0x002a: INVOKE  (r2 I:long) = (r2 I:double) java.lang.Double.doubleToLongBits(double):long type: STATIC \l0x002e: ARITH  (r0 I:long) = (r2 I:long) \>\>\> (r1 I:long) \l0x0030: ARITH  (r0 I:long) = (r0 I:long) ^ (r2 I:long) \l0x0031: CAST  (r0 I:int) = (int) (r0 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: RETURN  (r0 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: IGET  (r0 I:java.lang.Object) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.value java.lang.Object \l0x0035: INVOKE  (r0 I:int) = (r0 I:java.lang.Object) java.lang.Object.hashCode():int type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|0x0039: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int com.google.gson.JsonPrimitive.hashCode((r4 'this' I:com.google.gson.JsonPrimitive A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

