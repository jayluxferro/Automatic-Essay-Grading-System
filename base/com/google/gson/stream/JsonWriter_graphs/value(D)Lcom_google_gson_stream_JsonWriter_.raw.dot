digraph "CFG forcom.google.gson.stream.JsonWriter.value(D)Lcom\/google\/gson\/stream\/JsonWriter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.writeDeferredName():void type: DIRECT \l0x0003: IGET  (r0 I:boolean) = (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.lenient boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) = (r4 I:double) java.lang.Double.isNaN(double):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r0 I:boolean) = (r4 I:double) java.lang.Double.isInfinite(double):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0016: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0018: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001b: CONST_STR  (r2 I:java.lang.String) =  \"Numeric values must be finite, but was \" \l0x001d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0020: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:double) java.lang.StringBuilder.append(double):java.lang.StringBuilder type: VIRTUAL \l0x0023: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0027: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.beforeValue():void type: DIRECT \l0x002e: IGET  (r0 I:java.io.Writer) = (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.out java.io.Writer \l0x0030: INVOKE  (r4 I:java.lang.String) = (r4 I:double) java.lang.Double.toString(double):java.lang.String type: STATIC \l0x0034: INVOKE  (r0 I:java.io.Writer), (r4 I:java.lang.CharSequence) java.io.Writer.append(java.lang.CharSequence):java.io.Writer type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: RETURN  (r3 I:com.google.gson.stream.JsonWriter) \l}"];
MethodNode[shape=record,label="{public com.google.gson.stream.JsonWriter com.google.gson.stream.JsonWriter.value((r3 'this' I:com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, THIS]), (r4 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
}

