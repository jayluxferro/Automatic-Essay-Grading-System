digraph "CFG forcom.google.gson.stream.JsonWriter.string(Ljava\/lang\/String;)V" {
subgraph cluster_Region_271653854 {
label = "R(5:1|4|(5:6|(2:8|(1:19))(1:(1:12)(1:(1:15)(1:19)))|(1:17)|18|19)|(1:21)|22) | DECL_VAR: java.lang.String null\l";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|java.lang.String[] r0 = r7.htmlSafe ? HTML_SAFE_REPLACEMENT_CHARS : REPLACEMENT_CHARS\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|PHI: r0 \l  PHI: (r0v1 java.lang.String[]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r7.out.write(org.osgeo.proj4j.units.AngleFormat.STR_SEC_SYMBOL)\lint int r1 = r8.length()\lint r2 = 0\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_77157689 {
label = "LOOP:0: (5:6|(2:8|(1:19))(1:(1:12)(1:(1:15)(1:19)))|(1:17)|18|19)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0016|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:4:0x0009, B:19:0x0042] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:4:0x0009, B:19:0x0042] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0016\-\>B:19:0x0042\l|if (r2 \< r1) goto L_0x0018\l}"];
subgraph cluster_Region_267899505 {
label = "R(5:6|(2:8|(1:19))(1:(1:12)(1:(1:15)(1:19)))|(1:17)|18|19)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0018|char char r4 = r8.charAt(r2)\l}"];
subgraph cluster_IfRegion_213295656 {
label = "IF [B:7:0x001e] THEN: R(2:8|(1:19)) ELSE: R(1:(1:12)(1:(1:15)(1:19)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001e|if (r4 \< 128) goto L_0x0020\l}"];
subgraph cluster_Region_1508084017 {
label = "R(2:8|(1:19))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0020|r4 = r0[r4]\l}"];
subgraph cluster_IfRegion_1397398193 {
label = "IF [B:9:0x0022] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0022|if (r4 == null) goto L_0x0042\l}"];
subgraph cluster_Region_1506491705 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0042|LOOP_END\lPHI: r3 \l  PHI: (r3v2 int) = (r3v4 int), (r3v1 int), (r3v1 int) binds: [B:25:0x0042, B:26:0x0042, B:27:0x0042] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0016\-\>B:19:0x0042\l|r2++\l}"];
}
}
}
subgraph cluster_Region_2052250702 {
label = "R(1:(1:12)(1:(1:15)(1:19))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1029934485 {
label = "IF [B:11:0x0027] THEN: R(1:12) ELSE: R(1:(1:15)(1:19)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0027|if (r4 == 8232) goto L_0x0029\l}"];
subgraph cluster_Region_306222782 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0029|java.lang.String r4 = \"u2028\"\l}"];
}
subgraph cluster_Region_263981211 {
label = "R(1:(1:15)(1:19)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_924427416 {
label = "IF [B:14:0x002e] THEN: R(1:15) ELSE: R(1:19) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002e|if (r4 == 8233) goto L_0x0030\l}"];
subgraph cluster_Region_736024079 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0030|java.lang.String r4 = \"u2029\"\l}"];
}
subgraph cluster_Region_397777828 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0042|LOOP_END\lPHI: r3 \l  PHI: (r3v2 int) = (r3v4 int), (r3v1 int), (r3v1 int) binds: [B:25:0x0042, B:26:0x0042, B:27:0x0042] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0016\-\>B:19:0x0042\l|r2++\l}"];
}
}
}
}
}
}
subgraph cluster_IfRegion_927442687 {
label = "IF [B:16:0x0032] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0032|PHI: r4 \l  PHI: (r4v1 java.lang.String) = (r4v2 java.lang.String), (r4v3 java.lang.String), (r4v4 java.lang.String) binds: [B:15:0x0030, B:12:0x0029, B:9:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 \< r2) goto L_0x0034\l}"];
subgraph cluster_Region_929396699 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0034|r7.out.write(r8, r3, r2 \- r3)\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x003b|r7.out.write(r4)\lint r3 = r2 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|LOOP_END\lPHI: r3 \l  PHI: (r3v2 int) = (r3v4 int), (r3v1 int), (r3v1 int) binds: [B:25:0x0042, B:26:0x0042, B:27:0x0042] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0016\-\>B:19:0x0042\l|r2++\l}"];
}
}
subgraph cluster_IfRegion_72581426 {
label = "IF [B:20:0x0045] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0045|if (r3 \< r1) goto L_0x0047\l}"];
subgraph cluster_Region_472159629 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0047|r7.out.write(r8, r3, r1 \- r3)\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x004d|r7.out.write(org.osgeo.proj4j.units.AngleFormat.STR_SEC_SYMBOL)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0007}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0025}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002c}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0054}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0045|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0042|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0042|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0042|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.gson.stream.JsonWriter.string((r7v0 'this' com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, THIS]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_24[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_16[style=dashed];
Node_9 -> Node_27;
Node_19 -> Node_5;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_14 -> Node_15;
Node_14 -> Node_26[style=dashed];
Node_15 -> Node_16;
Node_19 -> Node_5;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_25;
Node_19 -> Node_5;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_0 -> Node_1;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_24 -> Node_20;
Node_25 -> Node_19;
Node_26 -> Node_19;
Node_27 -> Node_19;
}

