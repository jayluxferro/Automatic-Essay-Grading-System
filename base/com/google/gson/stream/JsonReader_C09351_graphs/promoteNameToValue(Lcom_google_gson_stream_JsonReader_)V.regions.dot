digraph "CFG forcom.google.gson.stream.JsonReader.1.promoteNameToValue(Lcom\/google\/gson\/stream\/JsonReader;)V" {
subgraph cluster_Region_905145392 {
label = "R(1:(2:(2:2|3)|(3:4|(1:6)|(1:9)(1:(1:12)(1:(1:15)(2:16|17))))))";
node [shape=record,color=blue];
subgraph cluster_Region_588356199 {
label = "R(2:(2:2|3)|(3:4|(1:6)|(1:9)(1:(1:12)(1:(1:15)(2:16|17)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1269259041 {
label = "IF [B:1:0x0002] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r4 instanceof com.google.gson.internal.bind.JsonTreeReader) == true) goto L_0x0004\l}"];
subgraph cluster_Region_2008214474 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|((com.google.gson.internal.bind.JsonTreeReader) r4).promoteNameToValue()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1013136959 {
label = "R(3:4|(1:6)|(1:9)(1:(1:12)(1:(1:15)(2:16|17))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|int int r0 = r4.peeked\l}"];
subgraph cluster_IfRegion_863216612 {
label = "IF [B:5:0x000c] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r0 == 0) goto L_0x000e\l}"];
subgraph cluster_Region_215700355 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|int r0 = r4.doPeek()\l}"];
}
}
subgraph cluster_IfRegion_1331452224 {
label = "IF [B:8:0x0014] THEN: R(1:9) ELSE: R(1:(1:12)(1:(1:15)(2:16|17)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0014|if (r0 == 13) goto L_0x0016\l}"];
subgraph cluster_Region_1502514144 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0016|r4.peeked = 9\l}"];
}
subgraph cluster_Region_1986256916 {
label = "R(1:(1:12)(1:(1:15)(2:16|17))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1793791058 {
label = "IF [B:11:0x001d] THEN: R(1:12) ELSE: R(1:(1:15)(2:16|17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001d|if (r0 == 12) goto L_0x001f\l}"];
subgraph cluster_Region_124568490 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x001f|r4.peeked = 8\l}"];
}
subgraph cluster_Region_1742771254 {
label = "R(1:(1:15)(2:16|17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1023018439 {
label = "IF [B:14:0x0026] THEN: R(1:15) ELSE: R(2:16|17) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0026|if (r0 == 14) goto L_0x0028\l}"];
subgraph cluster_Region_1243398817 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0028|r4.peeked = 10\l}"];
}
subgraph cluster_Region_588703926 {
label = "R(2:16|17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002d}"];
Node_17 [shape=record,label="{17\:\ 0x004e|throw new java.lang.IllegalStateException(\"Expected a name but was \" + r4.peek() + r4.locationString())\l}"];
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0012|PHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v7 int) binds: [B:5:0x000c, B:6:0x000e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001b}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0024}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.gson.stream.JsonReader.1.promoteNameToValue((r3v0 'this' com.google.gson.stream.JsonReader$1 A[IMMUTABLE_TYPE, THIS]), (r4v0 com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_20;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_0 -> Node_1;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_13 -> Node_14;
}

