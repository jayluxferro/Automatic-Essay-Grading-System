digraph "CFG forcom.google.gson.stream.JsonReader.nextLong()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r7.peeked\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r0 != 0) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|int r0 = doPeek()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|PHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v22 int) binds: [B:1:0x0002, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r0 != 15) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|r7.peeked = 0\lint[] r0 = r7.pathIndices\lint r1 = r7.stackSize + \-1\lr0[r1] = r0[r1] + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|RETURN\l|return r7.peekedLong\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e}"];
Node_8 [shape=record,label="{8\:\ 0x0020|if (r0 != 16) goto L_0x0037\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|r7.peekedString = new java.lang.String(r7.buffer, r7.pos, r7.peekedNumberLength)\lr7.pos = r7.pos + r7.peekedNumberLength\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037}"];
Node_11 [shape=record,label="{11\:\ 0x003b|if (r0 == 8) goto L_0x0066\l}"];
Node_12 [shape=record,label="{12\:\ 0x003d}"];
Node_13 [shape=record,label="{13\:\ 0x003f|if (r0 == 9) goto L_0x0066\l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|if (r0 != 10) goto L_0x0044\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Expected a long but was \")\lr1.append(peek())\lr1.append(locationString())\l}"];
Node_16 [shape=record,label="{16\:\ 0x0065|throw new java.lang.IllegalStateException(r1.toString())\l}"];
Node_17 [shape=record,label="{17\:\ 0x0066|if (r0 != 10) goto L_0x006f\l}"];
Node_18 [shape=record,label="{18\:\ 0x0068|r7.peekedString = nextUnquotedValue()\l}"];
Node_19 [shape=record,label="{19\:\ 0x006f|if (r0 != 8) goto L_0x0074\l}"];
Node_20 [shape=record,label="{20\:\ 0x0071|r0 = org.osgeo.proj4j.units.AngleFormat.CH_MIN_SYMBOL\l}"];
Node_21 [shape=record,label="{21\:\ 0x0074|r0 = kotlin.text.Typography.quote\l}"];
Node_22 [shape=record,label="{22\:\ 0x0076|PHI: r0 \l  PHI: (r0v11 char) = (r0v13 char), (r0v14 char) binds: [B:21:0x0074, B:20:0x0071] A[DONT_GENERATE, DONT_INLINE]\l|r7.peekedString = nextQuotedValue(r0)\l}"];
Node_23 [shape=record,label="{23\:\ 0x007c|SYNTHETIC\lSplitter:B:23:0x007c\l}"];
Node_24 [shape=record,label="{24\:\ ?|Catch:\{ NumberFormatException \-\> 0x0091 \}\lSplitter:B:23:0x007c\l|long r0 = java.lang.Long.parseLong(r7.peekedString)     \/\/ Catch:\{ NumberFormatException \-\> 0x0091 \}\lr7.peeked = 0     \/\/ Catch:\{ NumberFormatException \-\> 0x0091 \}\lint[] r3 = r7.pathIndices     \/\/ Catch:\{ NumberFormatException \-\> 0x0091 \}\lint r4 = r7.stackSize + \-1     \/\/ Catch:\{ NumberFormatException \-\> 0x0091 \}\lr3[r4] = r3[r4] + 1     \/\/ Catch:\{ NumberFormatException \-\> 0x0091 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x0090|RETURN\l|return r0\l}"];
Node_26 [shape=record,label="{26\:\ 0x0091|r7.peeked = 11\ldouble r0 = java.lang.Double.parseDouble(r7.peekedString)\llong r3 = (long) r0\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\lSplitter:B:23:0x007c\l}"];
Node_28 [shape=record,label="{28\:\ 0x009f|if ((((double) r3) \> r0 ? 1 : (((double) r3) == r0 ? 0 : \-1)) != 0) goto L_0x00b3\l}"];
Node_29 [shape=record,label="{29\:\ 0x00a1|r7.peekedString = null\lr7.peeked = 0\lint[] r0 = r7.pathIndices\lint r1 = r7.stackSize + \-1\lr0[r1] = r0[r1] + 1\l}"];
Node_30 [shape=record,label="{30\:\ 0x00b2|RETURN\l|return r3\l}"];
Node_31 [shape=record,label="{31\:\ 0x00b3|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Expected a long but was \")\lr1.append(r7.peekedString)\lr1.append(locationString())\l}"];
Node_32 [shape=record,label="{32\:\ 0x00d2|throw new java.lang.NumberFormatException(r1.toString())\l}"];
MethodNode[shape=record,label="{public long com.google.gson.stream.JsonReader.nextLong((r7v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_26;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_23;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_24 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_26;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_31 -> Node_32;
}

