digraph "CFG forcom.google.gson.stream.JsonReader.nextString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r4.peeked\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r0 != 0) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|int r0 = doPeek()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|PHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v13 int) binds: [B:1:0x0002, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r0 != 10) goto L_0x0011\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|java.lang.String r0 = nextUnquotedValue()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011}"];
Node_7 [shape=record,label="{7\:\ 0x0013|if (r0 != 8) goto L_0x001c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|java.lang.String r0 = nextQuotedValue(org.osgeo.proj4j.units.AngleFormat.CH_MIN_SYMBOL)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c}"];
Node_10 [shape=record,label="{10\:\ 0x001e|if (r0 != 9) goto L_0x0027\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|java.lang.String r0 = nextQuotedValue(kotlin.text.Typography.quote)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027}"];
Node_13 [shape=record,label="{13\:\ 0x0029|if (r0 != 11) goto L_0x0031\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|java.lang.String r0 = r4.peekedString\lr4.peekedString = null\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031}"];
Node_16 [shape=record,label="{16\:\ 0x0033|if (r0 != 15) goto L_0x003c\l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|java.lang.String r0 = java.lang.Long.toString(r4.peekedLong)\l}"];
Node_18 [shape=record,label="{18\:\ 0x003c}"];
Node_19 [shape=record,label="{19\:\ 0x003e|if (r0 != 16) goto L_0x0062\l}"];
Node_20 [shape=record,label="{20\:\ 0x0040|java.lang.String r0 = new java.lang.String(r4.buffer, r4.pos, r4.peekedNumberLength)\lr4.pos = r4.pos + r4.peekedNumberLength\l}"];
Node_21 [shape=record,label="{21\:\ 0x0052|PHI: r0 \l  PHI: (r0v2 java.lang.String) = (r0v4 java.lang.String), (r0v6 java.lang.String), (r0v7 java.lang.String), (r0v9 java.lang.String), (r0v11 java.lang.String), (r0v12 java.lang.String) binds: [B:20:0x0040, B:17:0x0035, B:14:0x002b, B:11:0x0020, B:8:0x0015, B:5:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r4.peeked = 0\lint[] r1 = r4.pathIndices\lint r2 = r4.stackSize + \-1\lr1[r2] = r1[r2] + 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0061|RETURN\l|return r0\l}"];
Node_23 [shape=record,label="{23\:\ 0x0062|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Expected a string but was \")\lr1.append(peek())\lr1.append(locationString())\l}"];
Node_24 [shape=record,label="{24\:\ 0x0083|throw new java.lang.IllegalStateException(r1.toString())\l}"];
MethodNode[shape=record,label="{public java.lang.String com.google.gson.stream.JsonReader.nextString((r4v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_21;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_21;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_21;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_24;
}

