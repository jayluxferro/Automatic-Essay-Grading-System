digraph "CFG forcom.google.gson.stream.JsonReader.isLiteral(C)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[9, 10, 12, 13, 32, 35, 44, 47, 58, 59, 61, 91, 92, 93, 123, 125] t:[0x0008, 0x0008, 0x0008, 0x0008, 0x0008, 0x0005, 0x0008, 0x0005, 0x0008, 0x0005, 0x0005, 0x0008, 0x0005, 0x0008, 0x0008, 0x0008] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r0 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.checkLenient():void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean com.google.gson.stream.JsonReader.isLiteral((r0 'this' I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]), (r1 I:char A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

