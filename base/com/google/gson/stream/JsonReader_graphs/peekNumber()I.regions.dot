digraph "CFG forcom.google.gson.stream.JsonReader.peekNumber()I" {
subgraph cluster_Region_1660036091 {
label = "R(4:0|(5:(1:(2:(1:5)|(1:(1:8)(0))))|9|(1:(1:15)(2:75|(2:(1:79)|(2:80|84))))(2:81|(1:85))|83|84)|(1:65)|(3:(1:54)|55|56)(1:(1:62)(2:63|64))) | DECL_VAR: char null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r18\lchar[] char[] r1 = r0.buffer\lint int r2 = r0.pos\lint r7 = 0\lint r8 = r0.limit\lint r3 = 0\lchar r9 = 0\lboolean r10 = true\llong r11 = 0\lboolean r13 = false\l}"];
subgraph cluster_LoopRegion_826466303 {
label = "LOOP:0: (5:(1:(2:(1:5)|(1:(1:8)(0))))|9|(1:(1:15)(2:75|(2:(1:79)|(2:80|84))))(2:81|(1:85))|83|84)";
node [shape=record,color=blue];
subgraph cluster_Region_62987164 {
label = "R(5:(1:(2:(1:5)|(1:(1:8)(0))))|9|(1:(1:15)(2:75|(2:(1:79)|(2:80|84))))(2:81|(1:85))|83|84)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_892883680 {
label = "IF [B:2:0x0014] THEN: R(1:(2:(1:5)|(1:(1:8)(0)))) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0014|if ((r2 + r3) == r8) goto L_0x0016\l}"];
subgraph cluster_Region_773979411 {
label = "R(1:(2:(1:5)|(1:(1:8)(0))))";
node [shape=record,color=blue];
subgraph cluster_Region_2041970358 {
label = "R(2:(1:5)|(1:(1:8)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1583808076 {
label = "IF [B:4:0x0017] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|if (r3 == r1.length) goto L_0x0019\l}"];
subgraph cluster_Region_130606022 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0019|RETURN\l|return r7\l}"];
}
}
subgraph cluster_Region_384825539 {
label = "R(1:(1:8)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_702504896 {
label = "IF [B:7:0x0020] THEN: R(1:8) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0020|if (fillBuffer(r3 + 1) != false) goto L_0x0024\l}"];
subgraph cluster_Region_1185307700 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0024|int r2 = r0.pos\lint r8 = r0.limit\l}"];
}
subgraph cluster_Region_838168774 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
Node_9 [shape=record,label="{9\:\ 0x0028|PHI: r2 r8 \l  PHI: (r2v2 int) = (r2v1 int), (r2v6 int) binds: [B:2:0x0014, B:8:0x0024] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 int) = (r8v1 int), (r8v3 int) binds: [B:2:0x0014, B:8:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|char r14 = r1[r2 + r3]\l}"];
subgraph cluster_IfRegion_33297436 {
label = "IF [B:10:0x0030] THEN: R(1:(1:15)(2:75|(2:(1:79)|(2:80|84)))) ELSE: R(2:81|(1:85))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0030|if (r14 != '+') goto L_0x0032\l}"];
subgraph cluster_Region_270391950 {
label = "R(1:(1:15)(2:75|(2:(1:79)|(2:80|84))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2006096880 {
label = "IF [B:12:0x0034, B:14:0x0038] THEN: R(1:15) ELSE: R(2:75|(2:(1:79)|(2:80|84)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0034|if (r14 != 'E') goto L_0x0036\l}"];
Node_14 [shape=record,label="{14\:\ 0x0038|ADDED_TO_REGION\l|if (r14 != 'e') goto L_0x003a\l}"];
subgraph cluster_Region_1175180917 {
label = "R(1:15)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1107824406 {
label = "Switch: 2, default: R(1:(2:(1:41)(2:(1:(2:(1:25)|(3:26|27|33)))(1:(1:35)(1:(1:40)))|39)|1)(1:1))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x003a|switch(r14) \{\l    case 45: goto L_0x00d5;\l    case 46: goto L_0x00cd;\l    default: goto L_0x003d;\l\}\l}"];
subgraph cluster_Region_601883208 {
label = "R(2:70|(2:72|1)(1:(1:74))) | FALL_THROUGH\l";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x00d5|r7 = 0\l}"];
subgraph cluster_IfRegion_1440420769 {
label = "IF [B:71:0x00d9] THEN: R(2:72|1) ELSE: R(1:(1:74))";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x00d9|if (r9 == 0) goto L_0x00db\l}"];
subgraph cluster_Region_156176871 {
label = "R(2:72|1)";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x00db|r9 = 1\lr13 = true\l}"];
Node_InsnContainer_801838999 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_891433448 {
label = "R(1:(1:74)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_710820914 {
label = "IF [B:73:0x00de] THEN: R(1:74) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x00de|if (r9 != 5) goto L_0x00e1\l}"];
subgraph cluster_Region_1259689064 {
label = "R(1:74)";
node [shape=record,color=blue];
Node_74 [shape=record,label="{74\:\ 0x00e1|RETURN\l|return 0\l}"];
}
}
}
}
}
subgraph cluster_Region_1413016454 {
label = "R(2:66|(2:68|1)(1:69))";
node [shape=record,color=blue];
Node_66 [shape=record,label="{66\:\ 0x00cd|r7 = 0\l}"];
subgraph cluster_IfRegion_1534048439 {
label = "IF [B:67:0x00d0] THEN: R(2:68|1) ELSE: R(1:69)";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x00d0|if (r9 == 2) goto L_0x00d2\l}"];
subgraph cluster_Region_1513979473 {
label = "R(2:68|1)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x00d2|r9 = 3\l}"];
Node_InsnContainer_1404406529 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_607471951 {
label = "R(1:69)";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x00d4|RETURN\l|return 0\l}"];
}
}
}
subgraph cluster_Region_12357968 {
label = "R(1:(2:(1:41)(2:(1:(2:(1:25)|(3:26|27|33)))(1:(1:35)(1:(1:40)))|39)|1)(1:1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_615981915 {
label = "IF [B:17:0x003f, B:19:0x0043] THEN: R(2:(1:41)(2:(1:(2:(1:25)|(3:26|27|33)))(1:(1:35)(1:(1:40)))|39)|1) ELSE: R(1:1)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003f|if (r14 \>= '0') goto L_0x0041\l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|ADDED_TO_REGION\l|if (r14 \<= '9') goto L_0x0046\l}"];
subgraph cluster_Region_1634415419 {
label = "R(2:(1:41)(2:(1:(2:(1:25)|(3:26|27|33)))(1:(1:35)(1:(1:40)))|39)|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1787923069 {
label = "IF [B:20:0x0046, B:21:0x0048] THEN: R(1:41) ELSE: R(2:(1:(2:(1:25)|(3:26|27|33)))(1:(1:35)(1:(1:40)))|39)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0046|if (r9 == 1) goto L_0x0084\l}"];
Node_21 [shape=record,label="{21\:\ 0x0048|ADDED_TO_REGION\l|if (r9 == 0) goto L_0x0084\l}"];
subgraph cluster_Region_578791026 {
label = "R(1:41)";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0084|r11 = (long) (\-(r14 \- '0'))\lr7 = 0\lr9 = 2\l}"];
}
subgraph cluster_Region_1753057716 {
label = "R(2:(1:(2:(1:25)|(3:26|27|33)))(1:(1:35)(1:(1:40)))|39)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1734007445 {
label = "IF [B:22:0x004b] THEN: R(1:(2:(1:25)|(3:26|27|33))) ELSE: R(1:(1:35)(1:(1:40)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x004b|if (r9 == 2) goto L_0x004d\l}"];
subgraph cluster_Region_519655828 {
label = "R(1:(2:(1:25)|(3:26|27|33)))";
node [shape=record,color=blue];
subgraph cluster_Region_268966965 {
label = "R(2:(1:25)|(3:26|27|33))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_549633441 {
label = "IF [B:24:0x0051] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0051|if (r11 == 0) goto L_0x0053\l}"];
subgraph cluster_Region_1960454517 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0053|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_1498489202 {
label = "R(3:26|27|33)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0055|long long r4 = (10 * r11) \- ((long) (r14 \- '0'))\lint int r7 = (r11 \> MIN_INCOMPLETE_INTEGER ? 1 : (r11 == MIN_INCOMPLETE_INTEGER ? 0 : \-1))\l}"];
Node_27 [shape=record,label="{27\:\ 0x0064|boolean r7 = r7 \> 0 \|\| (r7 == 0 && r4 \< r11)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0070|PHI: r7 \l  PHI: (r7v21 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r11 = r4\lr10 = r7 & r10\l}"];
}
}
}
subgraph cluster_Region_1276132926 {
label = "R(1:(1:35)(1:(1:40))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1065184664 {
label = "IF [B:34:0x0074] THEN: R(1:35) ELSE: R(1:(1:40)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0074|if (r9 == 3) goto L_0x0076\l}"];
subgraph cluster_Region_1482396297 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0076|r7 = 0\lr9 = 4\l}"];
}
subgraph cluster_Region_414299097 {
label = "R(1:(1:40)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_435278016 {
label = "IF [B:36:0x0079, B:38:0x007c] THEN: R(1:40) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0079|ADDED_TO_REGION\l|if (r9 == 5) goto L_0x0081\l}"];
Node_38 [shape=record,label="{38\:\ 0x007c|ADDED_TO_REGION\l|if (r9 == 6) goto L_0x0081\l}"];
subgraph cluster_Region_1261184177 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x0081|r7 = 0\lr9 = 7\l}"];
}
}
}
}
}
}
Node_39 [shape=record,label="{39\:\ 0x007f|PHI: r10 r11 \l  PHI: (r10v4 boolean) = (r10v1 boolean), (r10v5 boolean) binds: [B:38:0x007c, B:33:0x0070] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v7 long) = (r11v1 long), (r11v8 long) binds: [B:38:0x007c, B:33:0x0070] A[DONT_GENERATE, DONT_INLINE]\l|r7 = 0\l}"];
}
}
Node_InsnContainer_1216937294 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1841095851 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_546363116 [shape=record,label="{|break\l}"];
}
}
}
}
}
subgraph cluster_Region_1465103210 {
label = "R(2:75|(2:(1:79)|(2:80|84)))";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x00e2|r7 = 0\l}"];
subgraph cluster_Region_900367964 {
label = "R(2:(1:79)|(2:80|84))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2144691169 {
label = "IF [B:76:0x00e5, B:78:0x00e8] THEN: R(1:79) ELSE: null";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x00e5|if (r9 != 2) goto L_0x00e7\l}"];
Node_78 [shape=record,label="{78\:\ 0x00e8|ADDED_TO_REGION\l|if (r9 != 4) goto L_0x00eb\l}"];
subgraph cluster_Region_986148650 {
label = "R(1:79)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x00eb|RETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_66906786 {
label = "R(2:80|84)";
node [shape=record,color=blue];
Node_80 [shape=record,label="{80\:\ 0x00ec|r9 = 5\l}"];
Node_84 [shape=record,label="{84\:\ 0x00f5|LOOP_END\lPHI: r7 r9 r10 r11 r13 \l  PHI: (r7v4 int) = (r7v5 int), (r7v8 int), (r7v10 int), (r7v11 int), (r7v15 int) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v2 char) = (r9v3 char), (r9v4 char), (r9v5 char), (r9v6 char), (r9v7 char) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 boolean) = (r10v1 boolean), (r10v1 boolean), (r10v1 boolean), (r10v1 boolean), (r10v3 boolean) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v4 long) = (r11v1 long), (r11v1 long), (r11v1 long), (r11v1 long), (r11v5 long) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 boolean) = (r13v1 boolean), (r13v1 boolean), (r13v3 boolean), (r13v1 boolean), (r13v1 boolean) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:84:0x00f5\l|r3++\l}"];
}
}
}
}
}
subgraph cluster_Region_1556434581 {
label = "R(2:81|(1:85))";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x00ee|r7 = 0\l}"];
subgraph cluster_IfRegion_1315606780 {
label = "IF [B:82:0x00f2] THEN: R(1:85) ELSE: null";
node [shape=record,color=blue];
Node_82 [shape=record,label="{82\:\ 0x00f2|if (r9 != 5) goto L_0x00f9\l}"];
subgraph cluster_Region_810831205 {
label = "R(1:85)";
node [shape=record,color=blue];
Node_85 [shape=record,label="{85\:\ 0x00f9|RETURN\l|return 0\l}"];
}
}
}
}
Node_83 [shape=record,label="{83\:\ 0x00f4|FALL_THROUGH\lPHI: r7 \l  PHI: (r7v5 int) = (r7v6 int), (r7v10 int) binds: [B:82:0x00f2, B:73:0x00de] A[DONT_GENERATE, DONT_INLINE]\l|r9 = 6\l}"];
Node_84 [shape=record,label="{84\:\ 0x00f5|LOOP_END\lPHI: r7 r9 r10 r11 r13 \l  PHI: (r7v4 int) = (r7v5 int), (r7v8 int), (r7v10 int), (r7v11 int), (r7v15 int) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v2 char) = (r9v3 char), (r9v4 char), (r9v5 char), (r9v6 char), (r9v7 char) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 boolean) = (r10v1 boolean), (r10v1 boolean), (r10v1 boolean), (r10v1 boolean), (r10v3 boolean) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v4 long) = (r11v1 long), (r11v1 long), (r11v1 long), (r11v1 long), (r11v5 long) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 boolean) = (r13v1 boolean), (r13v1 boolean), (r13v3 boolean), (r13v1 boolean), (r13v1 boolean) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:84:0x00f5\l|r3++\l}"];
}
}
subgraph cluster_IfRegion_1166712613 {
label = "IF [B:44:0x0093] THEN: R(1:65) ELSE: null";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0093|if (isLiteral(r14) == true) goto L_0x00cb\l}"];
subgraph cluster_Region_383113781 {
label = "R(1:65)";
node [shape=record,color=blue];
Node_65 [shape=record,label="{65\:\ 0x00cb|RETURN\l|return 0\l}"];
}
}
subgraph cluster_IfRegion_439297284 {
label = "IF [B:45:0x0095, B:46:0x0097, B:48:0x009d, B:49:0x009f, B:51:0x00a5, B:52:0x00a7] THEN: R(3:(1:54)|55|56) ELSE: R(1:(1:62)(2:63|64))";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0095|if (r9 == 2) goto L_0x0097\l}"];
Node_46 [shape=record,label="{46\:\ 0x0097|ADDED_TO_REGION\l|if (r10 != false) goto L_0x0099\l}"];
Node_48 [shape=record,label="{48\:\ 0x009d|ADDED_TO_REGION\l|if (r11 != Long.MIN_VALUE) goto L_0x00a1\l}"];
Node_49 [shape=record,label="{49\:\ 0x009f|ADDED_TO_REGION\l|if (r13 != false) goto L_0x00a1\l}"];
Node_51 [shape=record,label="{51\:\ 0x00a5|ADDED_TO_REGION\l|if (r11 != 0) goto L_0x00a9\l}"];
Node_52 [shape=record,label="{52\:\ 0x00a7|ADDED_TO_REGION\l|if (r13 != true) goto L_0x00a9\l}"];
subgraph cluster_Region_764698536 {
label = "R(3:(1:54)|55|56)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1375135201 {
label = "IF [B:53:0x00a9] THEN: R(1:54) ELSE: null";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x00a9|if (r13 == false) goto L_0x00ac\l}"];
subgraph cluster_Region_1134995412 {
label = "R(1:54)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x00ac|long r11 = \-r11\l}"];
}
}
Node_55 [shape=record,label="{55\:\ 0x00ad|PHI: r11 \l  PHI: (r11v2 long) = (r11v1 long), (r11v3 long) binds: [B:53:0x00a9, B:54:0x00ac] A[DONT_GENERATE, DONT_INLINE]\l|r0.peekedLong = r11\lr0.pos += r3\lr0.peeked = 15\l}"];
Node_56 [shape=record,label="{56\:\ 0x00b8|RETURN\l|return 15\l}"];
}
subgraph cluster_Region_1999386325 {
label = "R(1:(1:62)(2:63|64)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_223314257 {
label = "IF [B:57:0x00b9, B:59:0x00bc, B:61:0x00bf] THEN: R(1:62) ELSE: R(2:63|64) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x00b9|if (r9 != 2) goto L_0x00bb\l}"];
Node_59 [shape=record,label="{59\:\ 0x00bc|ADDED_TO_REGION\l|if (r9 != 4) goto L_0x00be\l}"];
Node_61 [shape=record,label="{61\:\ 0x00bf|ADDED_TO_REGION\l|if (r9 != 7) goto L_0x00c2\l}"];
subgraph cluster_Region_1989388581 {
label = "R(1:62)";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x00c2|RETURN\l|return 0\l}"];
}
subgraph cluster_Region_1837260559 {
label = "R(2:63|64)";
node [shape=record,color=blue];
Node_63 [shape=record,label="{63\:\ 0x00c4|r0.peekedNumberLength = r3\lr0.peeked = 16\l}"];
Node_64 [shape=record,label="{64\:\ 0x00ca|RETURN\l|return 16\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0011|LOOP_START\lPHI: r2 r3 r7 r8 r9 r10 r11 r13 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v4 int) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v2 int) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 char) = (r9v0 char), (r9v2 char) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 boolean) = (r10v0 boolean), (r10v2 boolean) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 long) = (r11v0 long), (r11v4 long) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 boolean) = (r13v0 boolean), (r13v2 boolean) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:84:0x00f5\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0016}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001a}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0032}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0036}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003d}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0041}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x004d}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0066|REMOVE\lADDED_TO_REGION\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0068}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x006a|REMOVE\lADDED_TO_REGION\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x006d}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x006f}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x007b}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x008b|PHI: r7 r9 r10 r11 \l  PHI: (r7v15 int) = (r7v16 int), (r7v17 int), (r7v18 int), (r7v19 int) binds: [B:41:0x0084, B:39:0x007f, B:40:0x0081, B:35:0x0076] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v7 char) = (r9v8 char), (r9v1 char), (r9v9 char), (r9v10 char) binds: [B:41:0x0084, B:39:0x007f, B:40:0x0081, B:35:0x0076] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v3 boolean) = (r10v1 boolean), (r10v4 boolean), (r10v1 boolean), (r10v1 boolean) binds: [B:41:0x0084, B:39:0x007f, B:40:0x0081, B:35:0x0076] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v5 long) = (r11v6 long), (r11v7 long), (r11v1 long), (r11v1 long) binds: [B:41:0x0084, B:39:0x007f, B:40:0x0081, B:35:0x0076] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x008f}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0099}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x00a1}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x00bb}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x00be}"];
Node_77 [shape=record,color=red,label="{77\:\ 0x00e7}"];
Node_86 [shape=record,color=red,label="{86\:\ 0x0019|SYNTHETIC\l}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x0095|SYNTHETIC\l}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x008f|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x008f|SYNTHETIC\l}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x00d4|SYNTHETIC\l}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x0053|SYNTHETIC\l}"];
Node_92 [shape=record,color=red,label="{92\:\ 0x00e1|SYNTHETIC\l}"];
Node_93 [shape=record,color=red,label="{93\:\ 0x00eb|SYNTHETIC\l}"];
Node_94 [shape=record,color=red,label="{94\:\ 0x00f9|SYNTHETIC\l}"];
Node_95 [shape=record,color=red,label="{95\:\ 0x00f5|SYNTHETIC\l}"];
Node_96 [shape=record,color=red,label="{96\:\ 0x00f5|SYNTHETIC\l}"];
Node_97 [shape=record,color=red,label="{97\:\ 0x00f5|SYNTHETIC\l}"];
Node_98 [shape=record,color=red,label="{98\:\ 0x00f5|SYNTHETIC\l}"];
Node_99 [shape=record,color=red,label="{99\:\ 0x00f5|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int com.google.gson.stream.JsonReader.peekNumber((r18v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lCan't fix incorrect switch cases order\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_86;
Node_7 -> Node_8;
Node_7 -> Node_87[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_81[style=dashed];
Node_12 -> Node_13;
Node_12 -> Node_75[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_75[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_66;
Node_15 -> Node_70;
Node_70 -> Node_71;
Node_71 -> Node_72;
Node_71 -> Node_73[style=dashed];
Node_72 -> Node_98;
Node_73 -> Node_83[style=dashed];
Node_73 -> Node_92;
Node_66 -> Node_67;
Node_67 -> Node_68;
Node_67 -> Node_90[style=dashed];
Node_68 -> Node_97;
Node_17 -> Node_18;
Node_17 -> Node_88[style=dashed];
Node_19 -> Node_20;
Node_19 -> Node_89[style=dashed];
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_41;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_41;
Node_41 -> Node_42;
Node_22 -> Node_23;
Node_22 -> Node_34[style=dashed];
Node_24 -> Node_26[style=dashed];
Node_24 -> Node_91;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_32;
Node_33 -> Node_39;
Node_34 -> Node_35;
Node_34 -> Node_36[style=dashed];
Node_35 -> Node_42;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_40 -> Node_42;
Node_39 -> Node_42;
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_76 -> Node_80[style=dashed];
Node_78 -> Node_80[style=dashed];
Node_78 -> Node_93;
Node_80 -> Node_99;
Node_84 -> Node_1;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_94;
Node_83 -> Node_95;
Node_84 -> Node_1;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_65;
Node_45 -> Node_46;
Node_45 -> Node_57[style=dashed];
Node_46 -> Node_47;
Node_46 -> Node_57[style=dashed];
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_49 -> Node_57[style=dashed];
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_53;
Node_52 -> Node_57[style=dashed];
Node_53 -> Node_54;
Node_53 -> Node_55[style=dashed];
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_57 -> Node_58;
Node_57 -> Node_63[style=dashed];
Node_59 -> Node_60;
Node_59 -> Node_63[style=dashed];
Node_61 -> Node_62;
Node_61 -> Node_63[style=dashed];
Node_63 -> Node_64;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_23 -> Node_24;
Node_28 -> Node_29;
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_37 -> Node_38;
Node_42 -> Node_96;
Node_43 -> Node_44;
Node_47 -> Node_48;
Node_50 -> Node_51;
Node_58 -> Node_59;
Node_60 -> Node_61;
Node_77 -> Node_78;
Node_86 -> Node_5;
Node_87 -> Node_45;
Node_88 -> Node_43;
Node_89 -> Node_43;
Node_90 -> Node_69;
Node_91 -> Node_25;
Node_92 -> Node_74;
Node_93 -> Node_79;
Node_94 -> Node_85;
Node_95 -> Node_84;
Node_96 -> Node_84;
Node_97 -> Node_84;
Node_98 -> Node_84;
Node_99 -> Node_84;
}

