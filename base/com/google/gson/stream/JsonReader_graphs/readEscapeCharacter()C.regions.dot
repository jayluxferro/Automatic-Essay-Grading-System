digraph "CFG forcom.google.gson.stream.JsonReader.readEscapeCharacter()C" {
subgraph cluster_Region_1543673655 {
label = "R(1:(2:(3:6|(1:59)(1:(1:(2:(1:58)|(1:(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24))))))))))|60)|(1:5))) | DECL_VAR: int null\l";
node [shape=record,color=blue];
subgraph cluster_Region_1242470652 {
label = "R(2:(3:6|(1:59)(1:(1:(2:(1:58)|(1:(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24))))))))))|60)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_566221337 {
label = "IF [B:1:0x0005, B:3:0x000b] THEN: R(3:6|(1:59)(1:(1:(2:(1:58)|(1:(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24))))))))))|60) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r8.pos != r8.limit) goto L_0x0015\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|ADDED_TO_REGION\l|if (fillBuffer(1) == true) goto L_0x0015\l}"];
subgraph cluster_Region_91693168 {
label = "R(3:6|(1:59)(1:(1:(2:(1:58)|(1:(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24))))))))))|60)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|char[] char[] r0 = r8.buffer\lint int r1 = r8.pos\lr8.pos = r1 + 1\lchar char r0 = r0[r1]\l}"];
subgraph cluster_IfRegion_711604923 {
label = "IF [B:7:0x0021] THEN: R(1:59) ELSE: R(1:(1:(2:(1:58)|(1:(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24))))))))))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|if (r0 == 10) goto L_0x00cd\l}"];
subgraph cluster_Region_847104652 {
label = "R(1:59)";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x00cd|r8.lineNumber++\lr8.lineStart = r8.pos\l}"];
}
subgraph cluster_Region_2056149211 {
label = "R(1:(1:(2:(1:58)|(1:(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24)))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_594592104 {
label = "IF [B:9:0x0025, B:11:0x0029, B:13:0x002d, B:15:0x0031] THEN: R(1:(2:(1:58)|(1:(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24))))))))) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0025|ADDED_TO_REGION\l|if (r0 == '\"') goto L_0x00d6\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|ADDED_TO_REGION\l|if (r0 == ''') goto L_0x00d6\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|ADDED_TO_REGION\l|if (r0 == '\/') goto L_0x00d6\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|ADDED_TO_REGION\l|if (r0 == '') goto L_0x00d6\l}"];
subgraph cluster_Region_1157228046 {
label = "R(1:(2:(1:58)|(1:(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24)))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_466191258 {
label = "R(2:(1:58)|(1:(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_90217810 {
label = "IF [B:17:0x0035] THEN: R(1:58) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0035|if (r0 == 'b') goto L_0x00ca\l}"];
subgraph cluster_Region_1195119557 {
label = "R(1:58)";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x00ca|RETURN\l|return 8\l}"];
}
}
subgraph cluster_Region_1333580665 {
label = "R(1:(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24)))))))";
node [shape=record,color=blue];
subgraph cluster_Region_1153336590 {
label = "R(2:(1:57)|(1:(2:(1:56)|(1:(2:(1:55)|(1:24))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_958941486 {
label = "IF [B:19:0x0039] THEN: R(1:57) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0039|if (r0 == 'f') goto L_0x00c7\l}"];
subgraph cluster_Region_331090768 {
label = "R(1:57)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x00c7|RETURN\l|return 12\l}"];
}
}
subgraph cluster_Region_884572377 {
label = "R(1:(2:(1:56)|(1:(2:(1:55)|(1:24)))))";
node [shape=record,color=blue];
subgraph cluster_Region_502757932 {
label = "R(2:(1:56)|(1:(2:(1:55)|(1:24))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1122767698 {
label = "IF [B:21:0x003d] THEN: R(1:56) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x003d|if (r0 == 'n') goto L_0x00c6\l}"];
subgraph cluster_Region_768674409 {
label = "R(1:56)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x00c6|RETURN\l|return 10\l}"];
}
}
subgraph cluster_Region_1581539848 {
label = "R(1:(2:(1:55)|(1:24)))";
node [shape=record,color=blue];
subgraph cluster_Region_637771345 {
label = "R(2:(1:55)|(1:24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1731387878 {
label = "IF [B:23:0x0041] THEN: R(1:55) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0041|if (r0 == 'r') goto L_0x00c3\l}"];
subgraph cluster_Region_243367 {
label = "R(1:55)";
node [shape=record,color=blue];
Node_55 [shape=record,label="{55\:\ 0x00c3|RETURN\l|return 13\l}"];
}
}
subgraph cluster_Region_623142540 {
label = "R(1:24)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1723431519 {
label = "Switch: 2, default: R(1:26)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0043|switch(r0) \{\l    case 116: goto L_0x00c0;\l    case 117: goto L_0x004d;\l    default: goto L_0x0046;\l\}\l}"];
subgraph cluster_Region_1477252098 {
label = "R(1:54)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x00c0|RETURN\l|return 9\l}"];
}
subgraph cluster_Region_1648818244 {
label = "R(1:(2:(4:33|(3:35|(1:39)(1:(1:43)(1:(2:50|51)(1:48)))|49)|52|53)|(1:32)))";
node [shape=record,color=blue];
subgraph cluster_Region_2137906213 {
label = "R(2:(4:33|(3:35|(1:39)(1:(1:43)(1:(2:50|51)(1:48)))|49)|52|53)|(1:32))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2038154562 {
label = "IF [B:28:0x0053, B:30:0x0059] THEN: R(4:33|(3:35|(1:39)(1:(1:43)(1:(2:50|51)(1:48)))|49)|52|53) ELSE: null";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0053|if ((r8.pos + 4) \<= r8.limit) goto L_0x0063\l}"];
Node_30 [shape=record,label="{30\:\ 0x0059|ADDED_TO_REGION\l|if (fillBuffer(4) == true) goto L_0x0063\l}"];
subgraph cluster_Region_497237663 {
label = "R(4:33|(3:35|(1:39)(1:(1:43)(1:(2:50|51)(1:48)))|49)|52|53)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0063|char r0 = 0\lint int r4 = r8.pos\lint int r5 = r4 + 4\l}"];
subgraph cluster_LoopRegion_1337598771 {
label = "LOOP:0: (3:35|(1:39)(1:(1:43)(1:(2:50|51)(1:48)))|49)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0068|LOOP_START\lPHI: r0 r4 \l  PHI: (r0v10 char) = (r0v9 char), (r0v14 char) binds: [B:33:0x0063, B:49:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 int) = (r4v1 int), (r4v3 int) binds: [B:33:0x0063, B:49:0x0097] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:34:0x0068\-\>B:49:0x0097\l|if (r4 \< r5) goto L_0x006a\l}"];
subgraph cluster_Region_1073207546 {
label = "R(3:35|(1:39)(1:(1:43)(1:(2:50|51)(1:48)))|49)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x006a|char char r6 = r8.buffer[r4]\lchar char r0 = (char) (r0 \<\< 4)\l}"];
subgraph cluster_IfRegion_1660736281 {
label = "IF [B:36:0x0073, B:38:0x0077] THEN: R(1:39) ELSE: R(1:(1:43)(1:(2:50|51)(1:48)))";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0073|if (r6 \>= '0') goto L_0x0075\l}"];
Node_38 [shape=record,label="{38\:\ 0x0077|ADDED_TO_REGION\l|if (r6 \<= '9') goto L_0x0079\l}"];
subgraph cluster_Region_1714380319 {
label = "R(1:39)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0079|int r6 = r6 \- '0'\l}"];
}
subgraph cluster_Region_1239835499 {
label = "R(1:(1:43)(1:(2:50|51)(1:48))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1730046504 {
label = "IF [B:41:0x0080, B:42:0x0082] THEN: R(1:43) ELSE: R(1:(2:50|51)(1:48)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x0080|if (r6 \>= 'a') goto L_0x0082\l}"];
Node_42 [shape=record,label="{42\:\ 0x0082|ADDED_TO_REGION\l|if (r6 \<= 'f') goto L_0x0084\l}"];
subgraph cluster_Region_2040757827 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0084|int r6 = (r6 \- 'a') + 10\l}"];
}
subgraph cluster_Region_481769163 {
label = "R(1:(2:50|51)(1:48)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2109935221 {
label = "IF [B:45:0x008c, B:47:0x0090] THEN: R(2:50|51) ELSE: R(1:48) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x008c|if (r6 \< 'A') goto L_0x009a\l}"];
Node_47 [shape=record,label="{47\:\ 0x0090|ADDED_TO_REGION\l|if (r6 \> 'F') goto L_0x009a\l}"];
subgraph cluster_Region_220880268 {
label = "R(2:50|51)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x009a}"];
Node_51 [shape=record,label="{51\:\ 0x00b9|throw new java.lang.NumberFormatException(\"u\" + new java.lang.String(r8.buffer, r8.pos, 4))\l}"];
}
subgraph cluster_Region_1627420788 {
label = "R(1:48)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x0092|int r6 = (r6 \- 'A') + 10\l}"];
}
}
}
}
}
}
Node_49 [shape=record,label="{49\:\ 0x0097|LOOP_END\lPHI: r6 \l  PHI: (r6v2 int) = (r6v4 int), (r6v6 int), (r6v7 int) binds: [B:64:0x0097, B:66:0x0097, B:65:0x0097] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:34:0x0068\-\>B:49:0x0097\l|char r0 = (char) (r0 + r6)\lr4++\l}"];
}
}
Node_52 [shape=record,label="{52\:\ 0x00ba|r8.pos += 4\l}"];
Node_53 [shape=record,label="{53\:\ 0x00bf|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_719112382 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0062|throw syntaxError(\"Unterminated escape sequence\")\l}"];
}
}
}
subgraph cluster_Region_1348144053 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x004c|throw syntaxError(\"Invalid escape sequence\")\l}"];
}
}
}
}
}
}
}
}
}
}
}
}
}
}
Node_60 [shape=record,label="{60\:\ 0x00d6|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1971285531 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|throw syntaxError(\"Unterminated escape sequence\")\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0007}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000e}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0023}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0027}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002b}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x002f}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0033}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0037}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x003b}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x003f}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0046}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x004d}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0055}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x005c}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0075}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x007e}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x008a}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x008e}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x00ba|SYNTHETIC\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x009a|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_63 [shape=record,color=red,label="{63\:\ 0x009a|SYNTHETIC\l}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x0097|SYNTHETIC\l}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x0097|SYNTHETIC\l}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x0097|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private char com.google.gson.stream.JsonReader.readEscapeCharacter((r8v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_59;
Node_59 -> Node_60;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_60;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_60;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_60;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_60;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_58;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_57;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_56;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_55;
Node_24 -> Node_25;
Node_24 -> Node_27;
Node_24 -> Node_54;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_33;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_61[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_40[style=dashed];
Node_38 -> Node_39;
Node_38 -> Node_40[style=dashed];
Node_39 -> Node_65;
Node_41 -> Node_42;
Node_41 -> Node_44[style=dashed];
Node_42 -> Node_43;
Node_42 -> Node_44[style=dashed];
Node_43 -> Node_66;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_62;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_63;
Node_50 -> Node_51;
Node_48 -> Node_64;
Node_49 -> Node_34;
Node_52 -> Node_53;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_37 -> Node_38;
Node_40 -> Node_41;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_61 -> Node_52;
Node_62 -> Node_50;
Node_63 -> Node_50;
Node_64 -> Node_49;
Node_65 -> Node_49;
Node_66 -> Node_49;
}

