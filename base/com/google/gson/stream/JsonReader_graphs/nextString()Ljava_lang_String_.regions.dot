digraph "CFG forcom.google.gson.stream.JsonReader.nextString()Ljava\/lang\/String;" {
subgraph cluster_Region_2024654118 {
label = "R(5:0|(1:2)|(1:5)(1:(1:8)(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(2:23|24))))))|21|22) | DECL_VAR: java.lang.String null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r4.peeked\l}"];
subgraph cluster_IfRegion_1419735937 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r0 == 0) goto L_0x0004\l}"];
subgraph cluster_Region_687212396 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|int r0 = doPeek()\l}"];
}
}
subgraph cluster_IfRegion_1837982951 {
label = "IF [B:4:0x000a] THEN: R(1:5) ELSE: R(1:(1:8)(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(2:23|24))))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r0 == 10) goto L_0x000c\l}"];
subgraph cluster_Region_127228877 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|java.lang.String r0 = nextUnquotedValue()\l}"];
}
subgraph cluster_Region_1833031744 {
label = "R(1:(1:8)(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(2:23|24)))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2074024069 {
label = "IF [B:7:0x0013] THEN: R(1:8) ELSE: R(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(2:23|24))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013|if (r0 == 8) goto L_0x0015\l}"];
subgraph cluster_Region_860347867 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0015|java.lang.String r0 = nextQuotedValue(org.osgeo.proj4j.units.AngleFormat.CH_MIN_SYMBOL)\l}"];
}
subgraph cluster_Region_224052203 {
label = "R(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(2:23|24))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1665838589 {
label = "IF [B:10:0x001e] THEN: R(1:11) ELSE: R(1:(1:14)(1:(1:17)(1:(1:20)(2:23|24)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001e|if (r0 == 9) goto L_0x0020\l}"];
subgraph cluster_Region_1171912714 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0020|java.lang.String r0 = nextQuotedValue(kotlin.text.Typography.quote)\l}"];
}
subgraph cluster_Region_1888300467 {
label = "R(1:(1:14)(1:(1:17)(1:(1:20)(2:23|24)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1290193262 {
label = "IF [B:13:0x0029] THEN: R(1:14) ELSE: R(1:(1:17)(1:(1:20)(2:23|24))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0029|if (r0 == 11) goto L_0x002b\l}"];
subgraph cluster_Region_515219605 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002b|java.lang.String r0 = r4.peekedString\lr4.peekedString = null\l}"];
}
subgraph cluster_Region_1056163402 {
label = "R(1:(1:17)(1:(1:20)(2:23|24))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1246377545 {
label = "IF [B:16:0x0033] THEN: R(1:17) ELSE: R(1:(1:20)(2:23|24)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0033|if (r0 == 15) goto L_0x0035\l}"];
subgraph cluster_Region_89536008 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0035|java.lang.String r0 = java.lang.Long.toString(r4.peekedLong)\l}"];
}
subgraph cluster_Region_1561561612 {
label = "R(1:(1:20)(2:23|24)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1225938101 {
label = "IF [B:19:0x003e] THEN: R(1:20) ELSE: R(2:23|24) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x003e|if (r0 == 16) goto L_0x0040\l}"];
subgraph cluster_Region_2139176239 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0040|java.lang.String r0 = new java.lang.String(r4.buffer, r4.pos, r4.peekedNumberLength)\lr4.pos += r4.peekedNumberLength\l}"];
}
subgraph cluster_Region_101535710 {
label = "R(2:23|24)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0062}"];
Node_24 [shape=record,label="{24\:\ 0x0083|throw new java.lang.IllegalStateException(\"Expected a string but was \" + peek() + locationString())\l}"];
}
}
}
}
}
}
}
}
}
}
}
}
Node_21 [shape=record,label="{21\:\ 0x0052|PHI: r0 \l  PHI: (r0v2 java.lang.String) = (r0v4 java.lang.String), (r0v6 java.lang.String), (r0v7 java.lang.String), (r0v9 java.lang.String), (r0v11 java.lang.String), (r0v12 java.lang.String) binds: [B:20:0x0040, B:17:0x0035, B:14:0x002b, B:11:0x0020, B:8:0x0015, B:5:0x000c] A[DONT_GENERATE, DONT_INLINE]\l|r4.peeked = 0\lint[] int[] r1 = r4.pathIndices\lint int r2 = r4.stackSize \- 1\lr1[r2] = r1[r2] + 1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0061|RETURN\l|return r0\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0008|PHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v13 int) binds: [B:1:0x0002, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0011}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001c}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0027}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0031}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003c}"];
MethodNode[shape=record,label="{public java.lang.String com.google.gson.stream.JsonReader.nextString((r4v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_21;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_21;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_21;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_19 -> Node_20;
Node_19 -> Node_23[style=dashed];
Node_20 -> Node_21;
Node_23 -> Node_24;
Node_21 -> Node_22;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_18 -> Node_19;
}

