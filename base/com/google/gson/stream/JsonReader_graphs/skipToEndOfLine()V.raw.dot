digraph "CFG forcom.google.gson.stream.JsonReader.skipToEndOfLine()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0002: IGET  (r1 I:int) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.limit int \l0x0004: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r0 I:boolean) = (r4 I:com.google.gson.stream.JsonReader), (r2 I:int) com.google.gson.stream.JsonReader.fillBuffer(int):boolean type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0029 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r0 I:char[]) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.buffer char[] \l0x000f: IGET  (r1 I:int) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0011: ARITH  (r3 I:int) = (r1 I:int) + (1 int) \l0x0013: IPUT  (r3 I:int), (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0015: AGET  (r0 I:char A[IMMUTABLE_TYPE]) = \l  (r0 I:char[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0017: CONST  (r1 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IGET  (r0 I:int) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.lineNumber int \l0x001d: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x001e: IPUT  (r0 I:int), (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.lineNumber int \l0x0020: IGET  (r0 I:int) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0022: IPUT  (r0 I:int), (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.lineStart int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: CONST  (r1 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:0:0x0000 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: RETURN   \l}"];
MethodNode[shape=record,label="{private void com.google.gson.stream.JsonReader.skipToEndOfLine((r4 'this' I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_0;
Node_8 -> Node_9[style=dashed];
}

