digraph "CFG forcom.google.gson.stream.JsonReader.nextNonWhitespace(Z)I" {
subgraph cluster_Region_581568650 {
label = "R(2:0|(4:(2:3|(1:9)(1:(1:6)(2:7|8)))|10|(1:12)(1:(1:(4:21|(2:23|(1:25))|26|(2:31|(1:33)(1:35))(1:(1:29)(1:30)))(1:(1:38)(2:39|40))))|41))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|char[] char[] r0 = r7.buffer\lint int r1 = r7.pos\lint int r2 = r7.limit\l}"];
subgraph cluster_LoopRegion_308972535 {
label = "LOOP:0: (4:(2:3|(1:9)(1:(1:6)(2:7|8)))|10|(1:12)(1:(1:(4:21|(2:23|(1:25))|26|(2:31|(1:33)(1:35))(1:(1:29)(1:30)))(1:(1:38)(2:39|40))))|41)";
node [shape=record,color=blue];
subgraph cluster_Region_907014695 {
label = "R(4:(2:3|(1:9)(1:(1:6)(2:7|8)))|10|(1:12)(1:(1:(4:21|(2:23|(1:25))|26|(2:31|(1:33)(1:35))(1:(1:29)(1:30)))(1:(1:38)(2:39|40))))|41)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1962193696 {
label = "IF [B:2:0x0007] THEN: R(2:3|(1:9)(1:(1:6)(2:7|8))) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r1 == r2) goto L_0x0009\l}"];
subgraph cluster_Region_1627324746 {
label = "R(2:3|(1:9)(1:(1:6)(2:7|8)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|r7.pos = r1\l}"];
subgraph cluster_IfRegion_1750618695 {
label = "IF [B:4:0x000f] THEN: R(1:9) ELSE: R(1:(1:6)(2:7|8))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|if (fillBuffer(1) != false) goto L_0x0030\l}"];
subgraph cluster_Region_1999151835 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0030|int r1 = r7.pos\lint r2 = r7.limit\l}"];
}
subgraph cluster_Region_564035639 {
label = "R(1:(1:6)(2:7|8)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1416628164 {
label = "IF [B:5:0x0011] THEN: R(1:6) ELSE: R(2:7|8) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r8 == false) goto L_0x0013\l}"];
subgraph cluster_Region_310578062 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0013|RETURN\l|return \-1\l}"];
}
subgraph cluster_Region_946059763 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015}"];
Node_8 [shape=record,label="{8\:\ 0x002f|throw new java.io.EOFException(\"End of input\" + locationString())\l}"];
}
}
}
}
}
}
Node_10 [shape=record,label="{10\:\ 0x0034|PHI: r1 r2 \l  PHI: (r1v2 int) = (r1v1 int), (r1v21 int) binds: [B:2:0x0007, B:9:0x0030] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 int) = (r2v1 int), (r2v13 int) binds: [B:2:0x0007, B:9:0x0030] A[DONT_GENERATE, DONT_INLINE]\l|int int r4 = r1 + 1\lchar char r1 = r0[r1]\l}"];
subgraph cluster_IfRegion_2083685064 {
label = "IF [B:11:0x003a] THEN: R(1:12) ELSE: R(1:(1:(4:21|(2:23|(1:25))|26|(2:31|(1:33)(1:35))(1:(1:29)(1:30)))(1:(1:38)(2:39|40))))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003a|if (r1 == 10) goto L_0x003c\l}"];
subgraph cluster_Region_895738487 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003c|r7.lineNumber++\lr7.lineStart = r4\l}"];
}
subgraph cluster_Region_1839794672 {
label = "R(1:(1:(4:21|(2:23|(1:25))|26|(2:31|(1:33)(1:35))(1:(1:29)(1:30)))(1:(1:38)(2:39|40)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_110538139 {
label = "IF [B:14:0x0047, B:16:0x004b, B:18:0x004f] THEN: R(1:(4:21|(2:23|(1:25))|26|(2:31|(1:33)(1:35))(1:(1:29)(1:30)))(1:(1:38)(2:39|40))) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0047|ADDED_TO_REGION\l|if (r1 == ' ') goto L_0x00b8\l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|ADDED_TO_REGION\l|if (r1 == 13) goto L_0x00b8\l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|ADDED_TO_REGION\l|if (r1 == 9) goto L_0x00b8\l}"];
subgraph cluster_Region_959675814 {
label = "R(1:(4:21|(2:23|(1:25))|26|(2:31|(1:33)(1:35))(1:(1:29)(1:30)))(1:(1:38)(2:39|40)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_743212900 {
label = "IF [B:20:0x0054] THEN: R(4:21|(2:23|(1:25))|26|(2:31|(1:33)(1:35))(1:(1:29)(1:30))) ELSE: R(1:(1:38)(2:39|40))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0054|if (r1 == '\/') goto L_0x0056\l}"];
subgraph cluster_Region_1748620327 {
label = "R(4:21|(2:23|(1:25))|26|(2:31|(1:33)(1:35))(1:(1:29)(1:30)))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0056|r7.pos = r4\l}"];
subgraph cluster_IfRegion_133146155 {
label = "IF [B:22:0x0059] THEN: R(2:23|(1:25)) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0059|if (r4 == r2) goto L_0x005b\l}"];
subgraph cluster_Region_757392167 {
label = "R(2:23|(1:25))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x005b|r7.pos\-\-\lboolean boolean r2 = fillBuffer(2)\lr7.pos++\l}"];
subgraph cluster_IfRegion_257337120 {
label = "IF [B:24:0x0069] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0069|if (r2 == false) goto L_0x006b\l}"];
subgraph cluster_Region_828143055 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x006b|RETURN\l|return r1\l}"];
}
}
}
}
Node_26 [shape=record,label="{26\:\ 0x006c|checkLenient()\lchar char r2 = r0[r7.pos]\l}"];
subgraph cluster_IfRegion_577166506 {
label = "IF [B:27:0x0075] THEN: R(2:31|(1:33)(1:35)) ELSE: R(1:(1:29)(1:30))";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0075|if (r2 == '*') goto L_0x0088\l}"];
subgraph cluster_Region_862379637 {
label = "R(2:31|(1:33)(1:35))";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0088|r7.pos++\l}"];
subgraph cluster_IfRegion_376391115 {
label = "IF [B:32:0x0093] THEN: R(1:33) ELSE: R(1:35)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0093|if (skipTo(\"*\/\") == true) goto L_0x0095\l}"];
subgraph cluster_Region_406952919 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0095|int r1 = r7.pos + 2\lint r2 = r7.limit\l}"];
}
subgraph cluster_Region_858531967 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x00a2|throw syntaxError(\"Unterminated comment\")\l}"];
}
}
}
subgraph cluster_Region_290500081 {
label = "R(1:(1:29)(1:30)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1883649828 {
label = "IF [B:28:0x0077] THEN: R(1:29) ELSE: R(1:30) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0077|if (r2 != '\/') goto L_0x0079\l}"];
subgraph cluster_Region_1502647790 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0079|RETURN\l|return r1\l}"];
}
subgraph cluster_Region_1360452658 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x007a|r7.pos++\lskipToEndOfLine()\lint r1 = r7.pos\lint r2 = r7.limit\l}"];
}
}
}
}
}
subgraph cluster_Region_339758296 {
label = "R(1:(1:38)(2:39|40)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1792606514 {
label = "IF [B:37:0x00a5] THEN: R(1:38) ELSE: R(2:39|40) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x00a5|if (r1 == '#') goto L_0x00a7\l}"];
subgraph cluster_Region_1784488014 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x00a7|r7.pos = r4\lcheckLenient()\lskipToEndOfLine()\lint r1 = r7.pos\lint r2 = r7.limit\l}"];
}
subgraph cluster_Region_1692346952 {
label = "R(2:39|40)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x00b5|r7.pos = r4\l}"];
Node_40 [shape=record,label="{40\:\ 0x00b7|RETURN\l|return r1\l}"];
}
}
}
}
}
}
}
}
Node_41 [shape=record,label="{41\:\ 0x00b8|r1 = r4\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v4 int) binds: [B:0:0x0000, B:42:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:0:0x0000, B:42:0x0006] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:42:0x0006\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0045}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0049}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x004d}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0052}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x009c}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x00a3}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0006|LOOP_END\lSYNTHETIC\lPHI: r1 r2 \l  PHI: (r1v4 int) = (r1v5 int), (r1v6 int), (r1v12 int), (r1v15 int) binds: [B:51:0x0006, B:50:0x0006, B:49:0x0006, B:48:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 int) = (r2v2 int), (r2v5 int), (r2v8 int), (r2v9 int) binds: [B:51:0x0006, B:50:0x0006, B:49:0x0006, B:48:0x0006] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:42:0x0006\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0011|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x009c|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x00b5|SYNTHETIC\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x006b|SYNTHETIC\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0079|SYNTHETIC\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x0006|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x0006|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x0006|SYNTHETIC\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x0006|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int com.google.gson.stream.JsonReader.nextNonWhitespace((r7v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]), (r8v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_10[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_9;
Node_4 -> Node_43[style=dashed];
Node_9 -> Node_10;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_41;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_41;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_41;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_41;
Node_20 -> Node_21;
Node_20 -> Node_36[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_26[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_26[style=dashed];
Node_24 -> Node_46;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_44[style=dashed];
Node_33 -> Node_49;
Node_28 -> Node_30[style=dashed];
Node_28 -> Node_47;
Node_30 -> Node_48;
Node_37 -> Node_38;
Node_37 -> Node_45[style=dashed];
Node_38 -> Node_50;
Node_39 -> Node_40;
Node_41 -> Node_51;
Node_1 -> Node_2;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_42 -> Node_1;
Node_43 -> Node_5;
Node_44 -> Node_34;
Node_45 -> Node_39;
Node_46 -> Node_25;
Node_47 -> Node_29;
Node_48 -> Node_42;
Node_49 -> Node_42;
Node_50 -> Node_42;
Node_51 -> Node_42;
}

