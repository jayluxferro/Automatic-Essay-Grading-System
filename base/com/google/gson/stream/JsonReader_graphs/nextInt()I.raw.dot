digraph "CFG forcom.google.gson.stream.JsonReader.nextInt()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peeked int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:int) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.doPeek():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: CONST  (r1 I:?[int, float, short, byte, char]) = (15 ?[int, float, short, byte, char]) \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0046 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r0 I:long) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peekedLong long \l0x000f: CAST  (r0 I:int) = (int) (r0 I:long) \l0x0010: IGET  (r3 I:long) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peekedLong long \l0x0012: CAST  (r5 I:long) = (long) (r0 I:int) \l0x0013: CMP_L  (r1 I:int) = (r3 I:long), (r5 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0026 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IPUT  (r2 I:int), (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peeked int \l0x0019: IGET  (r1 I:int[]) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pathIndices int[] \l0x001b: IGET  (r2 I:int) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.stackSize int \l0x001d: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l0x001f: AGET  (r3 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0021: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x0023: APUT  \l  (r1 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: NEW_INSTANCE  (r0 I:java.lang.NumberFormatException) =  java.lang.NumberFormatException \l0x0028: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002a: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002d: CONST_STR  (r2 I:java.lang.String) =  \"Expected an int but was \" \l0x002f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0032: IGET  (r2 I:long) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peekedLong long \l0x0034: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x0037: INVOKE  (r2 I:java.lang.String) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.locationString():java.lang.String type: VIRTUAL \l0x003b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003e: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0042: INVOKE  \l  (r0 I:java.lang.NumberFormatException)\l  (r1 I:java.lang.String)\l java.lang.NumberFormatException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|0x0045: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|0x0046: CONST  (r1 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0048|0x0048: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x005f \l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|0x004a: NEW_INSTANCE  (r0 I:java.lang.String) =  java.lang.String \l0x004c: IGET  (r1 I:char[]) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.buffer char[] \l0x004e: IGET  (r3 I:int) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0050: IGET  (r4 I:int) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peekedNumberLength int \l0x0052: INVOKE  \l  (r0 I:java.lang.String)\l  (r1 I:char[])\l  (r3 I:int)\l  (r4 I:int)\l java.lang.String.\<init\>(char[], int, int):void type: DIRECT \l0x0055: IPUT  \l  (r0 I:java.lang.String)\l  (r7 I:com.google.gson.stream.JsonReader)\l com.google.gson.stream.JsonReader.peekedString java.lang.String \l0x0057: IGET  (r0 I:int) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0059: IGET  (r1 I:int) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peekedNumberLength int \l0x005b: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x005c: IPUT  (r0 I:int), (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l}"];
Node_14 [shape=record,label="{14\:\ 0x005f|0x005f: CONST  (r1 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0061: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0063|0x0063: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x008e \l}"];
Node_16 [shape=record,label="{16\:\ 0x0065|0x0065: CONST  (r4 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0067|0x0067: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x008e \l}"];
Node_18 [shape=record,label="{18\:\ 0x0069|0x0069: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x006c \l}"];
Node_20 [shape=record,label="{20\:\ 0x006c|0x006c: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x006e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0070: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0073: CONST_STR  (r2 I:java.lang.String) =  \"Expected an int but was \" \l0x0075: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0078: INVOKE  (r2 I:com.google.gson.stream.JsonToken) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x007c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x007f: INVOKE  (r2 I:java.lang.String) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.locationString():java.lang.String type: VIRTUAL \l0x0083: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0086: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008a: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x008d|0x008d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x008e|0x008e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0097 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0090|0x0090: INVOKE  (r0 I:java.lang.String) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextUnquotedValue():java.lang.String type: DIRECT \l0x0094: IPUT  \l  (r0 I:java.lang.String)\l  (r7 I:com.google.gson.stream.JsonReader)\l com.google.gson.stream.JsonReader.peekedString java.lang.String \l}"];
Node_24 [shape=record,label="{24\:\ 0x0097|0x0097: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x009c \l}"];
Node_25 [shape=record,label="{25\:\ 0x0099|0x0099: CONST  (r0 I:?[int, float, short, byte, char]) = (39 ?[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x009c|0x009c: CONST  (r0 I:?[int, float, short, byte, char]) = (34 ?[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x009e|0x009e: INVOKE  (r0 I:java.lang.String) = (r7 I:com.google.gson.stream.JsonReader), (r0 I:char) com.google.gson.stream.JsonReader.nextQuotedValue(char):java.lang.String type: DIRECT \l0x00a2: IPUT  \l  (r0 I:java.lang.String)\l  (r7 I:com.google.gson.stream.JsonReader)\l com.google.gson.stream.JsonReader.peekedString java.lang.String \l}"];
Node_28 [shape=record,label="{28\:\ 0x00a4|SYNTHETIC\lSplitter:B:28:0x00a4\l}"];
Node_29 [shape=record,label="{29\:\ ?|Splitter:B:28:0x00a4\l|0x00a4: IGET  (r0 I:java.lang.String) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peekedString java.lang.String A[Catch:\{ NumberFormatException \-\> 0x00b9 \}, TRY_ENTER]\l0x00a6: INVOKE  (r0 I:int) = (r0 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00b9 \}]\l0x00aa: IPUT  (r2 I:int), (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peeked int A[Catch:\{ NumberFormatException \-\> 0x00b9 \}]\l0x00ac: IGET  (r1 I:int[]) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pathIndices int[] A[Catch:\{ NumberFormatException \-\> 0x00b9 \}]\l0x00ae: IGET  (r3 I:int) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.stackSize int A[Catch:\{ NumberFormatException \-\> 0x00b9 \}]\l0x00b0: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) A[Catch:\{ NumberFormatException \-\> 0x00b9 \}]\l0x00b2: AGET  (r4 I:?[int, float]) = (r1 I:?[int, float][]), (r3 I:?[int, short, byte, char]) A[Catch:\{ NumberFormatException \-\> 0x00b9 \}]\l0x00b4: ARITH  (r4 I:int) = (r4 I:int) + (1 int) A[Catch:\{ NumberFormatException \-\> 0x00b9 \}]\l0x00b6: APUT  \l  (r1 I:?[int, float][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l A[Catch:\{ NumberFormatException \-\> 0x00b9 \}, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x00b8|0x00b8: RETURN  (r0 I:int) \l}"];
Node_31 [shape=record,label="{31\:\ 0x00b9|0x00b9: CONST  (r0 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l0x00bb: IPUT  (r0 I:int), (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peeked int \l0x00bd: IGET  (r0 I:java.lang.String) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peekedString java.lang.String \l0x00bf: INVOKE  (r0 I:double) = (r0 I:java.lang.String) java.lang.Double.parseDouble(java.lang.String):double type: STATIC \l0x00c3: CAST  (r3 I:int) = (int) (r0 I:double) \l0x00c4: CAST  (r4 I:double) = (double) (r3 I:int) \l0x00c5: CMP_L  (r0 I:int) = (r4 I:double), (r0 I:double) \l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:28:0x00a4\l}"];
Node_33 [shape=record,label="{33\:\ 0x00c7|0x00c7: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00db \l}"];
Node_34 [shape=record,label="{34\:\ 0x00c9|0x00c9: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ca: IPUT  \l  (r0 I:java.lang.String)\l  (r7 I:com.google.gson.stream.JsonReader)\l com.google.gson.stream.JsonReader.peekedString java.lang.String \l0x00cc: IPUT  (r2 I:int), (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peeked int \l0x00ce: IGET  (r0 I:int[]) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pathIndices int[] \l0x00d0: IGET  (r1 I:int) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.stackSize int \l0x00d2: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x00d4: AGET  (r2 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x00d6: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x00d8: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x00da|0x00da: RETURN  (r3 I:int) \l}"];
Node_36 [shape=record,label="{36\:\ 0x00db|0x00db: NEW_INSTANCE  (r0 I:java.lang.NumberFormatException) =  java.lang.NumberFormatException \l0x00dd: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00df: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00e2: CONST_STR  (r2 I:java.lang.String) =  \"Expected an int but was \" \l0x00e4: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00e7: IGET  (r2 I:java.lang.String) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peekedString java.lang.String \l0x00e9: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ec: INVOKE  (r2 I:java.lang.String) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.locationString():java.lang.String type: VIRTUAL \l0x00f0: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00f3: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00f7: INVOKE  \l  (r0 I:java.lang.NumberFormatException)\l  (r1 I:java.lang.String)\l java.lang.NumberFormatException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_37 [shape=record,label="{37\:\ 0x00fa|0x00fa: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int com.google.gson.stream.JsonReader.nextInt((r7 'this' I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_31;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_20;
Node_18 -> Node_22[style=dashed];
Node_20 -> Node_21;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_28;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_29 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_31;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_36 -> Node_37;
}

