digraph "CFG forcom.google.gson.stream.JsonReader.skipQuotedValue(C)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|char[] r0 = r6.buffer\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lLOOP:0: B:1:0x0002\-\>B:16:0x0033\l|int r1 = r6.pos\lint r2 = r6.limit\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v4 int) binds: [B:1:0x0002, B:21:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:1:0x0002, B:21:0x0006] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:2:0x0006\-\>B:21:0x0006\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r1 \>= r2) goto L_0x002d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|int r4 = r1 + 1\lchar r1 = r0[r1]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if (r1 != r7) goto L_0x0012\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|r6.pos = r4\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012}"];
Node_9 [shape=record,label="{9\:\ 0x0014|if (r1 != '') goto L_0x0020\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|r6.pos = r4\lreadEscapeCharacter()\lint r1 = r6.pos\lint r2 = r6.limit\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020}"];
Node_12 [shape=record,label="{12\:\ 0x0022|if (r1 != 10) goto L_0x002b\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|r6.lineNumber = r6.lineNumber + 1\lr6.lineStart = r4\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|r1 = r4\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|r6.pos = r1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0033|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:16:0x0033\l|if (fillBuffer(1) == false) goto L_0x0036\l}"];
Node_17 [shape=record,label="{17\:\ 0x0036}"];
Node_18 [shape=record,label="{18\:\ 0x003c|throw syntaxError(\"Unterminated string\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x000f|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0036|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0006|LOOP_END\lSYNTHETIC\lPHI: r1 r2 \l  PHI: (r1v4 int) = (r1v5 int), (r1v8 int) binds: [B:24:0x0006, B:23:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:24:0x0006, B:23:0x0006] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:2:0x0006\-\>B:21:0x0006\l}"];
Node_22 [shape=record,label="{22\:\ 0x002d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0006|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0006|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.gson.stream.JsonReader.skipQuotedValue((r6v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]), (r7v0 char A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_22;
Node_4 -> Node_5;
Node_5 -> Node_8;
Node_5 -> Node_19[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_23;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_24;
Node_15 -> Node_16;
Node_16 -> Node_1[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_19 -> Node_6;
Node_20 -> Node_17;
Node_21 -> Node_2;
Node_22 -> Node_15;
Node_23 -> Node_21;
Node_24 -> Node_21;
}

