digraph "CFG forcom.google.gson.stream.JsonReader.checkLenient()V" {
subgraph cluster_Region_1769866561 {
label = "R(1:(1:(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_1767410362 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1170729713 {
label = "IF [B:1:0x0002] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.lenient != true) goto L_0x0005\l}"];
subgraph cluster_Region_60040582 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|throw syntaxError(\"Use JsonReader.setLenient(true) to accept malformed JSON\")\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0005}"];
MethodNode[shape=record,label="{private void com.google.gson.stream.JsonReader.checkLenient((r1v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

