digraph "CFG forcom.google.gson.stream.JsonReader.skipValue()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r2 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peeked int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r2 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.doPeek():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x000b: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: INVOKE  (r5 I:com.google.gson.stream.JsonReader), (r4 I:int) com.google.gson.stream.JsonReader.push(int):void type: DIRECT \l0x0011: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: INVOKE  (r5 I:com.google.gson.stream.JsonReader), (r3 I:int) com.google.gson.stream.JsonReader.push(int):void type: DIRECT \l0x0019: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0027 \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: IGET  (r2 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.stackSize int \l0x0021: ARITH  (r2 I:int) = (r2 I:int) \- (r4 I:int) \l0x0022: IPUT  (r2 I:int), (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.stackSize int \l0x0024: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0032 \l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|0x002a: IGET  (r2 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.stackSize int \l0x002c: ARITH  (r2 I:int) = (r2 I:int) \- (r4 I:int) \l0x002d: IPUT  (r2 I:int), (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.stackSize int \l0x002f: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|0x0032: CONST  (r3 I:?[int, float, short, byte, char]) = (14 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|0x0034: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x0065 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: CONST  (r3 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0038|0x0038: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x003b \l}"];
Node_20 [shape=record,label="{20\:\ 0x003b|0x003b: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x003d|0x003d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x005f \l}"];
Node_22 [shape=record,label="{22\:\ 0x003f|0x003f: CONST  (r3 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0041|0x0041: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0044 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0044|0x0044: CONST  (r3 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0046|0x0046: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0059 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0048|0x0048: CONST  (r3 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x004a|0x004a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x004d \l}"];
Node_30 [shape=record,label="{30\:\ 0x004d|0x004d: CONST  (r3 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x004f|0x004f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x0068 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0051|0x0051: IGET  (r2 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0053: IGET  (r3 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peekedNumberLength int \l0x0055: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0056: IPUT  (r2 I:int), (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l}"];
Node_33 [shape=record,label="{33\:\ 0x0059|0x0059: CONST  (r2 I:?[int, float, short, byte, char]) = (34 ?[int, float, short, byte, char]) \l0x005b: INVOKE  (r5 I:com.google.gson.stream.JsonReader), (r2 I:char) com.google.gson.stream.JsonReader.skipQuotedValue(char):void type: DIRECT \l}"];
Node_34 [shape=record,label="{34\:\ 0x005f|0x005f: CONST  (r2 I:?[int, float, short, byte, char]) = (39 ?[int, float, short, byte, char]) \l0x0061: INVOKE  (r5 I:com.google.gson.stream.JsonReader), (r2 I:char) com.google.gson.stream.JsonReader.skipQuotedValue(char):void type: DIRECT \l}"];
Node_35 [shape=record,label="{35\:\ 0x0065|0x0065: INVOKE  (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.skipUnquotedValue():void type: DIRECT \l}"];
Node_36 [shape=record,label="{36\:\ 0x0068|0x0068: IPUT  (r0 I:int), (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peeked int \l}"];
Node_37 [shape=record,label="{37\:\ 0x006a|0x006a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0002 \l}"];
Node_38 [shape=record,label="{38\:\ 0x006c|0x006c: IGET  (r0 I:int[]) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pathIndices int[] \l0x006e: IGET  (r1 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.stackSize int \l0x0070: ARITH  (r1 I:int) = (r1 I:int) \- (r4 I:int) \l0x0071: AGET  (r2 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x0073: ARITH  (r2 I:int) = (r2 I:int) + (r4 I:int) \l0x0074: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0076: IGET  (r0 I:java.lang.String[]) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pathNames java.lang.String[] \l0x0078: IGET  (r1 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.stackSize int \l0x007a: ARITH  (r1 I:int) = (r1 I:int) \- (r4 I:int) \l0x007b: CONST_STR  (r2 I:java.lang.String) =  \"null\" \l0x007d: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x007f|0x007f: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.gson.stream.JsonReader.skipValue((r5 'this' I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_36;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_36;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_36;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_36;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_35;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_35[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_34;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_34[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_30;
Node_28 -> Node_33[style=dashed];
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_36;
Node_32 -> Node_36;
Node_33 -> Node_36;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_1;
Node_37 -> Node_38[style=dashed];
Node_38 -> Node_39;
}

