digraph "CFG forcom.google.gson.stream.JsonReader.peekNumber()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r18\lchar[] r1 = r0.buffer\lint r2 = r0.pos\lr7 = 0\lr8 = r0.limit\lr3 = 0\lr9 = 0\lr10 = true\lr11 = 0\lr13 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|LOOP_START\lPHI: r2 r3 r7 r8 r9 r10 r11 r13 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v4 int) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v2 int) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 char) = (r9v0 char), (r9v2 char) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 boolean) = (r10v0 boolean), (r10v2 boolean) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 long) = (r11v0 long), (r11v4 long) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 boolean) = (r13v0 boolean), (r13v2 boolean) binds: [B:0:0x0000, B:84:0x00f5] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:84:0x00f5\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|if ((r2 + r3) != r8) goto L_0x0028\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016}"];
Node_4 [shape=record,label="{4\:\ 0x0017|if (r3 != r1.length) goto L_0x001a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|RETURN\l|return r7\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a}"];
Node_7 [shape=record,label="{7\:\ 0x0020|if (fillBuffer(r3 + 1) != false) goto L_0x0024\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|int r2 = r0.pos\lint r8 = r0.limit\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|PHI: r2 r8 \l  PHI: (r2v2 int) = (r2v1 int), (r2v6 int) binds: [B:2:0x0014, B:8:0x0024] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 int) = (r8v1 int), (r8v3 int) binds: [B:2:0x0014, B:8:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|char r14 = r1[r2 + r3]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|if (r14 == '+') goto L_0x00ee\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032}"];
Node_12 [shape=record,label="{12\:\ 0x0034|if (r14 == 'E') goto L_0x00e2\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036}"];
Node_14 [shape=record,label="{14\:\ 0x0038|if (r14 == 'e') goto L_0x00e2\l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|switch(r14) \{\l    case 45: goto L_0x00d5;\l    case 46: goto L_0x00cd;\l    default: goto L_0x003d;\l\}\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d}"];
Node_17 [shape=record,label="{17\:\ 0x003f|if (r14 \< '0') goto L_0x008f\l}"];
Node_18 [shape=record,label="{18\:\ 0x0041}"];
Node_19 [shape=record,label="{19\:\ 0x0043|if (r14 \<= '9') goto L_0x0046\l}"];
Node_20 [shape=record,label="{20\:\ 0x0046|if (r9 == 1) goto L_0x0084\l}"];
Node_21 [shape=record,label="{21\:\ 0x0048|if (r9 != 0) goto L_0x004b\l}"];
Node_22 [shape=record,label="{22\:\ 0x004b|if (r9 != 2) goto L_0x0074\l}"];
Node_23 [shape=record,label="{23\:\ 0x004d}"];
Node_24 [shape=record,label="{24\:\ 0x0051|if ((r11 \> 0 ? 1 : (r11 == 0 ? 0 : \-1)) != 0) goto L_0x0055\l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|RETURN\l|return 0\l}"];
Node_26 [shape=record,label="{26\:\ 0x0055|long r4 = (10 * r11) \- ((long) (r14 + 65488))\lint r7 = (r11 \> MIN_INCOMPLETE_INTEGER ? 1 : (r11 == MIN_INCOMPLETE_INTEGER ? 0 : \-1))\l}"];
Node_27 [shape=record,label="{27\:\ 0x0064|if (r7 \> 0) goto L_0x006f\l}"];
Node_28 [shape=record,label="{28\:\ 0x0066|if (r7 != 0) goto L_0x006d\l}"];
Node_29 [shape=record,label="{29\:\ 0x0068}"];
Node_30 [shape=record,label="{30\:\ 0x006a|if ((r4 \> r11 ? 1 : (r4 == r11 ? 0 : \-1)) \>= 0) goto L_0x006d\l}"];
Node_31 [shape=record,label="{31\:\ 0x006d|r7 = false\l}"];
Node_32 [shape=record,label="{32\:\ 0x006f|r7 = true\l}"];
Node_33 [shape=record,label="{33\:\ 0x0070|PHI: r7 \l  PHI: (r7v21 boolean) = (r7v23 boolean), (r7v24 boolean) binds: [B:32:0x006f, B:31:0x006d] A[DONT_GENERATE, DONT_INLINE]\l|r11 = r4\lr10 = r7 & r10\l}"];
Node_34 [shape=record,label="{34\:\ 0x0074|if (r9 != 3) goto L_0x0079\l}"];
Node_35 [shape=record,label="{35\:\ 0x0076|r7 = 0\lr9 = 4\l}"];
Node_36 [shape=record,label="{36\:\ 0x0079|if (r9 == 5) goto L_0x0081\l}"];
Node_37 [shape=record,label="{37\:\ 0x007b}"];
Node_38 [shape=record,label="{38\:\ 0x007c|if (r9 != 6) goto L_0x007f\l}"];
Node_39 [shape=record,label="{39\:\ 0x007f|PHI: r10 r11 \l  PHI: (r10v4 boolean) = (r10v1 boolean), (r10v5 boolean) binds: [B:38:0x007c, B:33:0x0070] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v7 long) = (r11v1 long), (r11v8 long) binds: [B:38:0x007c, B:33:0x0070] A[DONT_GENERATE, DONT_INLINE]\l|r7 = 0\l}"];
Node_40 [shape=record,label="{40\:\ 0x0081|r7 = 0\lr9 = 7\l}"];
Node_41 [shape=record,label="{41\:\ 0x0084|r11 = (long) (\-(r14 + 65488))\lr7 = 0\lr9 = 2\l}"];
Node_42 [shape=record,label="{42\:\ 0x008b|PHI: r7 r9 r10 r11 \l  PHI: (r7v15 int) = (r7v16 int), (r7v17 int), (r7v18 int), (r7v19 int) binds: [B:41:0x0084, B:39:0x007f, B:40:0x0081, B:35:0x0076] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v7 char) = (r9v8 char), (r9v1 char), (r9v9 char), (r9v10 char) binds: [B:41:0x0084, B:39:0x007f, B:40:0x0081, B:35:0x0076] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v3 boolean) = (r10v1 boolean), (r10v4 boolean), (r10v1 boolean), (r10v1 boolean) binds: [B:41:0x0084, B:39:0x007f, B:40:0x0081, B:35:0x0076] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v5 long) = (r11v6 long), (r11v7 long), (r11v1 long), (r11v1 long) binds: [B:41:0x0084, B:39:0x007f, B:40:0x0081, B:35:0x0076] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x008f}"];
Node_44 [shape=record,label="{44\:\ 0x0093|if (isLiteral(r14) != false) goto L_0x00cb\l}"];
Node_45 [shape=record,label="{45\:\ 0x0095|if (r9 != 2) goto L_0x00b9\l}"];
Node_46 [shape=record,label="{46\:\ 0x0097|if (r10 == false) goto L_0x00b9\l}"];
Node_47 [shape=record,label="{47\:\ 0x0099}"];
Node_48 [shape=record,label="{48\:\ 0x009d|if ((r11 \> Long.MIN_VALUE ? 1 : (r11 == Long.MIN_VALUE ? 0 : \-1)) != 0) goto L_0x00a1\l}"];
Node_49 [shape=record,label="{49\:\ 0x009f|if (r13 == false) goto L_0x00b9\l}"];
Node_50 [shape=record,label="{50\:\ 0x00a1}"];
Node_51 [shape=record,label="{51\:\ 0x00a5|if ((r11 \> 0 ? 1 : (r11 == 0 ? 0 : \-1)) != 0) goto L_0x00a9\l}"];
Node_52 [shape=record,label="{52\:\ 0x00a7|if (r13 != false) goto L_0x00b9\l}"];
Node_53 [shape=record,label="{53\:\ 0x00a9|if (r13 == false) goto L_0x00ac\l}"];
Node_54 [shape=record,label="{54\:\ 0x00ac|long r11 = \-r11\l}"];
Node_55 [shape=record,label="{55\:\ 0x00ad|PHI: r11 \l  PHI: (r11v2 long) = (r11v1 long), (r11v3 long) binds: [B:53:0x00a9, B:54:0x00ac] A[DONT_GENERATE, DONT_INLINE]\l|r0.peekedLong = r11\lr0.pos = r0.pos + r3\lr0.peeked = 15\l}"];
Node_56 [shape=record,label="{56\:\ 0x00b8|RETURN\l|return 15\l}"];
Node_57 [shape=record,label="{57\:\ 0x00b9|if (r9 == 2) goto L_0x00c4\l}"];
Node_58 [shape=record,label="{58\:\ 0x00bb}"];
Node_59 [shape=record,label="{59\:\ 0x00bc|if (r9 == 4) goto L_0x00c4\l}"];
Node_60 [shape=record,label="{60\:\ 0x00be}"];
Node_61 [shape=record,label="{61\:\ 0x00bf|if (r9 != 7) goto L_0x00c2\l}"];
Node_62 [shape=record,label="{62\:\ 0x00c2|RETURN\l|return 0\l}"];
Node_63 [shape=record,label="{63\:\ 0x00c4|r0.peekedNumberLength = r3\lr0.peeked = 16\l}"];
Node_64 [shape=record,label="{64\:\ 0x00ca|RETURN\l|return 16\l}"];
Node_65 [shape=record,label="{65\:\ 0x00cb|RETURN\l|return 0\l}"];
Node_66 [shape=record,label="{66\:\ 0x00cd|r7 = 0\l}"];
Node_67 [shape=record,label="{67\:\ 0x00d0|if (r9 != 2) goto L_0x00d4\l}"];
Node_68 [shape=record,label="{68\:\ 0x00d2|r9 = 3\l}"];
Node_69 [shape=record,label="{69\:\ 0x00d4|RETURN\l|return 0\l}"];
Node_70 [shape=record,label="{70\:\ 0x00d5|r7 = 0\l}"];
Node_71 [shape=record,label="{71\:\ 0x00d9|if (r9 != 0) goto L_0x00de\l}"];
Node_72 [shape=record,label="{72\:\ 0x00db|r9 = 1\lr13 = true\l}"];
Node_73 [shape=record,label="{73\:\ 0x00de|if (r9 != 5) goto L_0x00e1\l}"];
Node_74 [shape=record,label="{74\:\ 0x00e1|RETURN\l|return 0\l}"];
Node_75 [shape=record,label="{75\:\ 0x00e2|r7 = 0\l}"];
Node_76 [shape=record,label="{76\:\ 0x00e5|if (r9 == 2) goto L_0x00ec\l}"];
Node_77 [shape=record,label="{77\:\ 0x00e7}"];
Node_78 [shape=record,label="{78\:\ 0x00e8|if (r9 != 4) goto L_0x00eb\l}"];
Node_79 [shape=record,label="{79\:\ 0x00eb|RETURN\l|return 0\l}"];
Node_80 [shape=record,label="{80\:\ 0x00ec|r9 = 5\l}"];
Node_81 [shape=record,label="{81\:\ 0x00ee|r7 = 0\l}"];
Node_82 [shape=record,label="{82\:\ 0x00f2|if (r9 != 5) goto L_0x00f9\l}"];
Node_83 [shape=record,label="{83\:\ 0x00f4|PHI: r7 \l  PHI: (r7v5 int) = (r7v6 int), (r7v10 int) binds: [B:82:0x00f2, B:73:0x00de] A[DONT_GENERATE, DONT_INLINE]\l|r9 = 6\l}"];
Node_84 [shape=record,label="{84\:\ 0x00f5|LOOP_END\lPHI: r7 r9 r10 r11 r13 \l  PHI: (r7v4 int) = (r7v5 int), (r7v8 int), (r7v10 int), (r7v11 int), (r7v15 int) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v2 char) = (r9v3 char), (r9v4 char), (r9v5 char), (r9v6 char), (r9v7 char) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 boolean) = (r10v1 boolean), (r10v1 boolean), (r10v1 boolean), (r10v1 boolean), (r10v3 boolean) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v4 long) = (r11v1 long), (r11v1 long), (r11v1 long), (r11v1 long), (r11v5 long) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 boolean) = (r13v1 boolean), (r13v1 boolean), (r13v3 boolean), (r13v1 boolean), (r13v1 boolean) binds: [B:95:0x00f5, B:99:0x00f5, B:98:0x00f5, B:97:0x00f5, B:96:0x00f5] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:84:0x00f5\l|int r3 = r3 + 1\l}"];
Node_85 [shape=record,label="{85\:\ 0x00f9|RETURN\l|return 0\l}"];
Node_86 [shape=record,label="{86\:\ 0x0019|SYNTHETIC\l}"];
Node_87 [shape=record,label="{87\:\ 0x0095|SYNTHETIC\l}"];
Node_88 [shape=record,label="{88\:\ 0x008f|SYNTHETIC\l}"];
Node_89 [shape=record,label="{89\:\ 0x008f|SYNTHETIC\l}"];
Node_90 [shape=record,label="{90\:\ 0x00d4|SYNTHETIC\l}"];
Node_91 [shape=record,label="{91\:\ 0x0053|SYNTHETIC\l}"];
Node_92 [shape=record,label="{92\:\ 0x00e1|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x00eb|SYNTHETIC\l}"];
Node_94 [shape=record,label="{94\:\ 0x00f9|SYNTHETIC\l}"];
Node_95 [shape=record,label="{95\:\ 0x00f5|SYNTHETIC\l}"];
Node_96 [shape=record,label="{96\:\ 0x00f5|SYNTHETIC\l}"];
Node_97 [shape=record,label="{97\:\ 0x00f5|SYNTHETIC\l}"];
Node_98 [shape=record,label="{98\:\ 0x00f5|SYNTHETIC\l}"];
Node_99 [shape=record,label="{99\:\ 0x00f5|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int com.google.gson.stream.JsonReader.peekNumber((r18v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_86[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_87[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_81;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_75;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_75;
Node_15 -> Node_16;
Node_15 -> Node_66;
Node_15 -> Node_70;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_88;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_89[style=dashed];
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_41;
Node_21 -> Node_22;
Node_21 -> Node_41[style=dashed];
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_34;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_91[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_39;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_42;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_38 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_96;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_65;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_57;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_57;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_57;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_57;
Node_53 -> Node_54;
Node_53 -> Node_55[style=dashed];
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_63;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_63;
Node_60 -> Node_61;
Node_61 -> Node_62;
Node_61 -> Node_63[style=dashed];
Node_63 -> Node_64;
Node_66 -> Node_67;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_90;
Node_68 -> Node_97;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_73;
Node_72 -> Node_98;
Node_73 -> Node_83[style=dashed];
Node_73 -> Node_92;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_80;
Node_77 -> Node_78;
Node_78 -> Node_80[style=dashed];
Node_78 -> Node_93;
Node_80 -> Node_99;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_94;
Node_83 -> Node_95;
Node_84 -> Node_1;
Node_86 -> Node_5;
Node_87 -> Node_45;
Node_88 -> Node_43;
Node_89 -> Node_43;
Node_90 -> Node_69;
Node_91 -> Node_25;
Node_92 -> Node_74;
Node_93 -> Node_79;
Node_94 -> Node_85;
Node_95 -> Node_84;
Node_96 -> Node_84;
Node_97 -> Node_84;
Node_98 -> Node_84;
Node_99 -> Node_84;
}

