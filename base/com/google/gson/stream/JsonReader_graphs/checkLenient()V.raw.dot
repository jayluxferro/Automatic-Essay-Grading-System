digraph "CFG forcom.google.gson.stream.JsonReader.checkLenient()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r1 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.lenient boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST_STR  (r0 I:java.lang.String) =  \"Use JsonReader.setLenient(true) to accept malformed JSON\" \l0x0007: INVOKE  (r0 I:java.io.IOException) = \l  (r1 I:com.google.gson.stream.JsonReader)\l  (r0 I:java.lang.String)\l com.google.gson.stream.JsonReader.syntaxError(java.lang.String):java.io.IOException type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.google.gson.stream.JsonReader.checkLenient((r1 'this' I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

