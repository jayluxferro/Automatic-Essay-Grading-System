digraph "CFG forcom.google.gson.stream.JsonReader.nextDouble()D" {
subgraph cluster_Region_1634090107 {
label = "R(3:0|(1:2)|(2:(2:5|6)|(3:(1:9)(1:(1:23)(1:(1:16)(1:(2:18|19))))|24|(2:(2:32|33)|(2:30|31)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r6.peeked\l}"];
subgraph cluster_IfRegion_705203755 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r0 == 0) goto L_0x0004\l}"];
subgraph cluster_Region_37218592 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|int r0 = doPeek()\l}"];
}
}
subgraph cluster_Region_1653692012 {
label = "R(2:(2:5|6)|(3:(1:9)(1:(1:23)(1:(1:16)(1:(2:18|19))))|24|(2:(2:32|33)|(2:30|31))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1294944735 {
label = "IF [B:4:0x000b] THEN: R(2:5|6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r0 == 15) goto L_0x000d\l}"];
subgraph cluster_Region_1971783410 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|r6.peeked = 0\lint[] int[] r0 = r6.pathIndices\lint int r1 = r6.stackSize \- 1\lr0[r1] = r0[r1] + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|RETURN\l|return (double) r6.peekedLong\l}"];
}
}
subgraph cluster_Region_1480169991 {
label = "R(3:(1:9)(1:(1:23)(1:(1:16)(1:(2:18|19))))|24|(2:(2:32|33)|(2:30|31)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_502936037 {
label = "IF [B:8:0x0023] THEN: R(1:9) ELSE: R(1:(1:23)(1:(1:16)(1:(2:18|19))))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0023|if (r0 == 16) goto L_0x0025\l}"];
subgraph cluster_Region_1246505135 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0025|r6.peekedString = new java.lang.String(r6.buffer, r6.pos, r6.peekedNumberLength)\lr6.pos += r6.peekedNumberLength\l}"];
}
subgraph cluster_Region_1939193912 {
label = "R(1:(1:23)(1:(1:16)(1:(2:18|19)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_549041555 {
label = "IF [B:11:0x003c, B:13:0x0040] THEN: R(1:23) ELSE: R(1:(1:16)(1:(2:18|19))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003c|if (r0 == 8) goto L_0x0073\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|ADDED_TO_REGION\l|if (r0 == 9) goto L_0x0073\l}"];
subgraph cluster_Region_1320029817 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x007a|PHI: r0 \l  PHI: (r0v6 char) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r6.peekedString = nextQuotedValue(r0 == 8 ? org.osgeo.proj4j.units.AngleFormat.CH_MIN_SYMBOL : kotlin.text.Typography.quote)\l}"];
}
subgraph cluster_Region_721804664 {
label = "R(1:(1:16)(1:(2:18|19))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2037958594 {
label = "IF [B:15:0x0045] THEN: R(1:16) ELSE: R(1:(2:18|19)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0045|if (r0 == 10) goto L_0x0047\l}"];
subgraph cluster_Region_1129303106 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0047|r6.peekedString = nextUnquotedValue()\l}"];
}
subgraph cluster_Region_1752014292 {
label = "R(1:(2:18|19)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_893494289 {
label = "IF [B:17:0x004e] THEN: R(2:18|19) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x004e|if (r0 != 11) goto L_0x0051\l}"];
subgraph cluster_Region_899941601 {
label = "R(2:18|19)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0051}"];
Node_19 [shape=record,label="{19\:\ 0x0072|throw new java.lang.IllegalStateException(\"Expected a double but was \" + peek() + locationString())\l}"];
}
}
}
}
}
}
}
}
Node_24 [shape=record,label="{24\:\ 0x0080|r6.peeked = 11\ldouble double r0 = java.lang.Double.parseDouble(r6.peekedString)\l}"];
subgraph cluster_Region_810545456 {
label = "R(2:(2:32|33)|(2:30|31))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1717209791 {
label = "IF [B:25:0x008a, B:27:0x0090, B:29:0x0096] THEN: R(2:32|33) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x008a|if (r6.lenient == true) goto L_0x00b7\l}"];
Node_27 [shape=record,label="{27\:\ 0x0090|ADDED_TO_REGION\l|if (java.lang.Double.isNaN(r0) == false) goto L_0x0092\l}"];
Node_29 [shape=record,label="{29\:\ 0x0096|ADDED_TO_REGION\l|if (java.lang.Double.isInfinite(r0) == false) goto L_0x00b7\l}"];
subgraph cluster_Region_1503856481 {
label = "R(2:32|33)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x00b7|r6.peekedString = null\lr6.peeked = 0\lint[] int[] r2 = r6.pathIndices\lint int r3 = r6.stackSize \- 1\lr2[r3] = r2[r3] + 1\l}"];
Node_33 [shape=record,label="{33\:\ 0x00c8|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1643790696 {
label = "R(2:30|31)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0099}"];
Node_31 [shape=record,label="{31\:\ 0x00b6|throw new com.google.gson.stream.MalformedJsonException(\"JSON forbids NaN and infinities: \" + r0 + locationString())\l}"];
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0008|PHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v18 int) binds: [B:1:0x0002, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003a}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x003e}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0043}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0073}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0075}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0078}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x008c}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0092}"];
MethodNode[shape=record,label="{public double com.google.gson.stream.JsonReader.nextDouble((r6v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_24;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_20;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_23 -> Node_24;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_17 -> Node_24[style=dashed];
Node_18 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_27 -> Node_28;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_32;
Node_32 -> Node_33;
Node_30 -> Node_31;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_20 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_26 -> Node_27;
Node_28 -> Node_29;
}

