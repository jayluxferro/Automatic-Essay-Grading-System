digraph "CFG forcom.google.gson.stream.JsonReader.skipQuotedValue(C)V" {
subgraph cluster_Region_33311275 {
label = "R(3:0|(3:1|(2:4|(2:6|7)(1:(1:10)(2:(1:13)|14)))|15)|18)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|char[] char[] r0 = r6.buffer\l}"];
subgraph cluster_LoopRegion_711367429 {
label = "LOOP:0: (3:1|(2:4|(2:6|7)(1:(1:10)(2:(1:13)|14)))|15)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0033|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:16:0x0033\l|if (fillBuffer(1) != false) goto L_0x0002\l}"];
subgraph cluster_Region_353930358 {
label = "R(3:1|(2:4|(2:6|7)(1:(1:10)(2:(1:13)|14)))|15)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lLOOP:0: B:1:0x0002\-\>B:16:0x0033\l|int int r1 = r6.pos\lint int r2 = r6.limit\l}"];
subgraph cluster_LoopRegion_822608688 {
label = "LOOP:1: (2:4|(2:6|7)(1:(1:10)(2:(1:13)|14)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r1 \< r2) goto L_0x0009\l}"];
subgraph cluster_Region_981001838 {
label = "R(2:4|(2:6|7)(1:(1:10)(2:(1:13)|14)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|int int r4 = r1 + 1\lchar char r1 = r0[r1]\l}"];
subgraph cluster_IfRegion_1982614792 {
label = "IF [B:5:0x000d] THEN: R(2:6|7) ELSE: R(1:(1:10)(2:(1:13)|14))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|if (r1 == r7) goto L_0x000f\l}"];
subgraph cluster_Region_1621246555 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|r6.pos = r4\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|RETURN\l|return\l}"];
}
subgraph cluster_Region_1714630607 {
label = "R(1:(1:10)(2:(1:13)|14)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_122474878 {
label = "IF [B:9:0x0014] THEN: R(1:10) ELSE: R(2:(1:13)|14) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0014|if (r1 == '') goto L_0x0016\l}"];
subgraph cluster_Region_1279186767 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0016|r6.pos = r4\lreadEscapeCharacter()\lint r1 = r6.pos\lint r2 = r6.limit\l}"];
}
subgraph cluster_Region_795901336 {
label = "R(2:(1:13)|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1963916118 {
label = "IF [B:12:0x0022] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0022|if (r1 == 10) goto L_0x0024\l}"];
subgraph cluster_Region_1276280682 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0024|r6.lineNumber++\lr6.lineStart = r4\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x002b|r1 = r4\l}"];
}
}
}
}
}
}
Node_15 [shape=record,label="{15\:\ 0x002d|r6.pos = r1\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x003c|throw syntaxError(\"Unterminated string\")\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0006|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v4 int) binds: [B:1:0x0002, B:21:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:1:0x0002, B:21:0x0006] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:2:0x0006\-\>B:21:0x0006\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0012}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0020}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0036}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000f|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0036|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0006|LOOP_END\lSYNTHETIC\lPHI: r1 r2 \l  PHI: (r1v4 int) = (r1v5 int), (r1v8 int) binds: [B:24:0x0006, B:23:0x0006] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:24:0x0006, B:23:0x0006] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:2:0x0006\-\>B:21:0x0006\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x002d|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0006|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0006|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void com.google.gson.stream.JsonReader.skipQuotedValue((r6v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]), (r7v0 char A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_16 -> Node_1;
Node_16 -> Node_20[style=dashed];
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_22[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_8[style=dashed];
Node_5 -> Node_19;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_23;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_24;
Node_15 -> Node_16;
Node_2 -> Node_3;
Node_8 -> Node_9;
Node_11 -> Node_12;
Node_17 -> Node_18;
Node_19 -> Node_6;
Node_20 -> Node_17;
Node_21 -> Node_2;
Node_22 -> Node_15;
Node_23 -> Node_21;
Node_24 -> Node_21;
}

