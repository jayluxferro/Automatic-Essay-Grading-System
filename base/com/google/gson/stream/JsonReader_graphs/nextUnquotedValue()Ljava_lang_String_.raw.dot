digraph "CFG forcom.google.gson.stream.JsonReader.nextUnquotedValue()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r3 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0006: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int) \l0x0007: IGET  (r4 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.limit int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:8:0x001c \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IGET  (r3 I:char[]) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.buffer char[] \l0x000d: IGET  (r4 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x000f: ARITH  (r4 I:int) = (r4 I:int) + (r1 I:int) \l0x0010: AGET  (r3 I:char A[IMMUTABLE_TYPE]) = \l  (r3 I:char[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[9, 10, 12, 13, 32, 35, 44, 47, 58, 59, 61, 91, 92, 93, 123, 125] t:[0x002a, 0x002a, 0x002a, 0x002a, 0x002a, 0x0018, 0x002a, 0x0018, 0x002a, 0x0018, 0x0018, 0x002a, 0x0018, 0x002a, 0x002a, 0x002a] \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: INVOKE  (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.checkLenient():void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IGET  (r3 I:char[]) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.buffer char[] \l0x001e: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:14:0x002c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: ARITH  (r3 I:int) = (r1 I:int) + (1 int) \l0x0023: INVOKE  (r3 I:boolean) = (r5 I:com.google.gson.stream.JsonReader), (r3 I:int) com.google.gson.stream.JsonReader.fillBuffer(int):boolean type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002a \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0039 \l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0030: CONST  (r3 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0032: INVOKE  (r3 I:int) = (r1 I:int), (r3 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0036: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.\<init\>(int):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: IGET  (r3 I:char[]) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.buffer char[] \l0x003b: IGET  (r4 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x003d: INVOKE  \l  (r2 I:java.lang.StringBuilder)\l  (r3 I:char[])\l  (r4 I:int)\l  (r1 I:int)\l java.lang.StringBuilder.append(char[], int, int):java.lang.StringBuilder type: VIRTUAL \l0x0040: IGET  (r3 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0042: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int) \l0x0043: IPUT  (r3 I:int), (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0045: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0046: INVOKE  (r1 I:boolean) = (r5 I:com.google.gson.stream.JsonReader), (r1 I:int) com.google.gson.stream.JsonReader.fillBuffer(int):boolean type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x004a|0x004a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0003 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004c|0x004c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0058 \l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|0x004e: NEW_INSTANCE  (r1 I:java.lang.String) =  java.lang.String \l0x0050: IGET  (r2 I:char[]) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.buffer char[] \l0x0052: IGET  (r3 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0054: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:char[])\l  (r3 I:int)\l  (r0 I:int)\l java.lang.String.\<init\>(char[], int, int):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x0058|0x0058: IGET  (r1 I:char[]) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.buffer char[] \l0x005a: IGET  (r3 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x005c: INVOKE  \l  (r2 I:java.lang.StringBuilder)\l  (r1 I:char[])\l  (r3 I:int)\l  (r0 I:int)\l java.lang.StringBuilder.append(char[], int, int):java.lang.StringBuilder type: VIRTUAL \l0x005f: INVOKE  (r1 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0063|0x0063: IGET  (r2 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0065: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l0x0066: IPUT  (r2 I:int), (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l}"];
Node_22 [shape=record,label="{22\:\ 0x0068|0x0068: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private java.lang.String com.google.gson.stream.JsonReader.nextUnquotedValue((r5 'this' I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_5 -> Node_13;
Node_6 -> Node_2;
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_2[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_1;
Node_17 -> Node_18[style=dashed];
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
}

