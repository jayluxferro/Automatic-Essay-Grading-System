digraph "CFG forcom.google.gson.stream.JsonReader.skipValue()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:34:0x006a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:34:0x006a\l|int r2 = r5.peeked\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r2 != 0) goto L_0x000a\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|int r2 = doPeek()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v13 int) binds: [B:2:0x0004, B:3:0x0006] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r2 != 3) goto L_0x0014\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|push(1)\lint r1 = r1 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if (r2 != 1) goto L_0x001c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|push(3)\lint r1 = r1 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c}"];
Node_10 [shape=record,label="{10\:\ 0x001d|if (r2 != 4) goto L_0x0027\l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|r5.stackSize = r5.stackSize \- 1\lint r1 = r1 + \-1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027}"];
Node_13 [shape=record,label="{13\:\ 0x0028|if (r2 != 2) goto L_0x0032\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|r5.stackSize = r5.stackSize \- 1\lint r1 = r1 + \-1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0032}"];
Node_16 [shape=record,label="{16\:\ 0x0034|if (r2 == 14) goto L_0x0065\l}"];
Node_17 [shape=record,label="{17\:\ 0x0036}"];
Node_18 [shape=record,label="{18\:\ 0x0038|if (r2 != 10) goto L_0x003b\l}"];
Node_19 [shape=record,label="{19\:\ 0x003b}"];
Node_20 [shape=record,label="{20\:\ 0x003d|if (r2 == 8) goto L_0x005f\l}"];
Node_21 [shape=record,label="{21\:\ 0x003f}"];
Node_22 [shape=record,label="{22\:\ 0x0041|if (r2 != 12) goto L_0x0044\l}"];
Node_23 [shape=record,label="{23\:\ 0x0044}"];
Node_24 [shape=record,label="{24\:\ 0x0046|if (r2 == 9) goto L_0x0059\l}"];
Node_25 [shape=record,label="{25\:\ 0x0048}"];
Node_26 [shape=record,label="{26\:\ 0x004a|if (r2 != 13) goto L_0x004d\l}"];
Node_27 [shape=record,label="{27\:\ 0x004d}"];
Node_28 [shape=record,label="{28\:\ 0x004f|if (r2 != 16) goto L_0x0068\l}"];
Node_29 [shape=record,label="{29\:\ 0x0051|r5.pos = r5.pos + r5.peekedNumberLength\l}"];
Node_30 [shape=record,label="{30\:\ 0x0059|skipQuotedValue(kotlin.text.Typography.quote)\l}"];
Node_31 [shape=record,label="{31\:\ 0x005f|skipQuotedValue(org.osgeo.proj4j.units.AngleFormat.CH_MIN_SYMBOL)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0065|skipUnquotedValue()\l}"];
Node_33 [shape=record,label="{33\:\ 0x0068|PHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v1 int), (r1v1 int), (r1v1 int), (r1v1 int), (r1v7 int), (r1v8 int), (r1v9 int), (r1v10 int) binds: [B:32:0x0065, B:31:0x005f, B:30:0x0059, B:28:0x004f, B:29:0x0051, B:14:0x002a, B:11:0x001f, B:8:0x0016, B:6:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r5.peeked = 0\l}"];
Node_34 [shape=record,label="{34\:\ 0x006a|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:34:0x006a\l|if (r1 != 0) goto L_0x0002\l}"];
Node_35 [shape=record,label="{35\:\ 0x006c|int[] r0 = r5.pathIndices\lint r1 = r5.stackSize \- 1\lr0[r1] = r0[r1] + 1\lr5.pathNames[r5.stackSize \- 1] = \"null\"\l}"];
Node_36 [shape=record,label="{36\:\ 0x007f|RETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ 0x006c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.gson.stream.JsonReader.skipValue((r5v0 'this' com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_33;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_33;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_33;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_33;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_32;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_32[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_31;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_31[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_30[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_33;
Node_29 -> Node_33;
Node_30 -> Node_33;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_1;
Node_34 -> Node_37[style=dashed];
Node_35 -> Node_36;
Node_37 -> Node_35;
}

