digraph "CFG forcom.google.gson.stream.JsonReader.skipTo(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r6 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IGET  (r1 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0006: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x0007: IGET  (r2 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.limit int \l0x0009: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:7:0x0014 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r1 I:boolean) = (r5 I:com.google.gson.stream.JsonReader), (r0 I:int) com.google.gson.stream.JsonReader.fillBuffer(int):boolean type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: RETURN  (r3 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IGET  (r1 I:char[]) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.buffer char[] \l0x0016: IGET  (r2 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0018: AGET  (r1 I:char A[IMMUTABLE_TYPE]) = \l  (r1 I:char[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x001a: CONST  (r2 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x001c: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002a \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: IGET  (r1 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.lineNumber int \l0x0021: ARITH  (r1 I:int) = (r1 I:int) + (r4 I:int) \l0x0022: IPUT  (r1 I:int), (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.lineNumber int \l0x0024: IGET  (r1 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0026: ARITH  (r1 I:int) = (r1 I:int) + (r4 I:int) \l0x0027: IPUT  (r1 I:int), (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.lineStart int \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: IF  (r3 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:15:0x0042 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IGET  (r1 I:char[]) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.buffer char[] \l0x002e: IGET  (r2 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x0030: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0031: AGET  (r1 I:char A[IMMUTABLE_TYPE]) = \l  (r1 I:char[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0033: INVOKE  (r2 I:char) = (r6 I:java.lang.String), (r3 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0037|0x0037: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003f \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|0x0039: IGET  (r1 I:int) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l0x003b: ARITH  (r1 I:int) = (r1 I:int) + (r4 I:int) \l0x003c: IPUT  (r1 I:int), (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.pos int \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|0x0042: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean com.google.gson.stream.JsonReader.skipTo((r5 'this' I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_13;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_1;
Node_14 -> Node_10;
}

