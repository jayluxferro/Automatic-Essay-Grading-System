digraph "CFG forcom.google.gson.Gson.5.write(Lcom\/google\/gson\/stream\/JsonWriter;Ljava\/util\/concurrent\/atomic\/AtomicLongArray;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.beginArray():com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0003: INVOKE  (r0 I:int) = (r7 I:java.util.concurrent.atomic.AtomicLongArray) java.util.concurrent.atomic.AtomicLongArray.length():int type: VIRTUAL \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:3:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r2 I:com.google.gson.TypeAdapter) = (r5 I:com.google.gson.Gson$5) com.google.gson.Gson.5.val$longAdapter com.google.gson.TypeAdapter \l0x000c: INVOKE  (r3 I:long) = \l  (r7 I:java.util.concurrent.atomic.AtomicLongArray)\l  (r1 I:int)\l java.util.concurrent.atomic.AtomicLongArray.get(int):long type: VIRTUAL \l0x0010: INVOKE  (r3 I:java.lang.Long) = (r3 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0014: INVOKE  \l  (r2 I:com.google.gson.TypeAdapter)\l  (r6 I:com.google.gson.stream.JsonWriter)\l  (r3 I:java.lang.Object)\l com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter, java.lang.Object):void type: VIRTUAL \l0x0017: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: INVOKE  (r6 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.endArray():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.gson.Gson.5.write((r5 'this' I:com.google.gson.Gson$5 A[IMMUTABLE_TYPE, THIS]), (r6 I:com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.concurrent.atomic.AtomicLongArray A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
}

