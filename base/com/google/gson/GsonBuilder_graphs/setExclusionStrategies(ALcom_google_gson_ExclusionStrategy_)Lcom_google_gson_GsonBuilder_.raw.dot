digraph "CFG forcom.google.gson.GsonBuilder.setExclusionStrategies([Lcom\/google\/gson\/ExclusionStrategy;)Lcom\/google\/gson\/GsonBuilder;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r6 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: AGET  (r2 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0006: IGET  (r3 I:com.google.gson.internal.Excluder) = (r5 I:com.google.gson.GsonBuilder) com.google.gson.GsonBuilder.excluder com.google.gson.internal.Excluder \l0x0008: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0009: INVOKE  (r2 I:com.google.gson.internal.Excluder) = \l  (r3 I:com.google.gson.internal.Excluder)\l  (r2 I:com.google.gson.ExclusionStrategy)\l  (r4 I:boolean)\l  (r4 I:boolean)\l com.google.gson.internal.Excluder.withExclusionStrategy(com.google.gson.ExclusionStrategy, boolean, boolean):com.google.gson.internal.Excluder type: VIRTUAL \l0x000d: IPUT  \l  (r2 I:com.google.gson.internal.Excluder)\l  (r5 I:com.google.gson.GsonBuilder)\l com.google.gson.GsonBuilder.excluder com.google.gson.internal.Excluder \l0x000f: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: RETURN  (r5 I:com.google.gson.GsonBuilder) \l}"];
MethodNode[shape=record,label="{public com.google.gson.GsonBuilder com.google.gson.GsonBuilder.setExclusionStrategies((r5 'this' I:com.google.gson.GsonBuilder A[IMMUTABLE_TYPE, THIS]), (r6 I:com.google.gson.ExclusionStrategy[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

