digraph "CFG forcom.google.gson.internal.reflect.UnsafeReflectionAccessor.makeAccessible(Ljava\/lang\/reflect\/AccessibleObject;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (makeAccessibleWithUnsafe(r5) != false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0007|SYNTHETIC\lSplitter:B:3:0x0007\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ SecurityException \-\> 0x000b \}\lSplitter:B:3:0x0007\l|r5.setAccessible(true)     \/\/ Catch:\{ SecurityException \-\> 0x000b \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|ExcHandler: SecurityException (r0v2 'e' java.lang.SecurityException A[CUSTOM_DECLARE])\lSplitter:B:3:0x0007\l|java.lang.SecurityException r0 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Gson couldn't modify fields for \")\lr2.append(r5)\lr2.append(\"nand sun.misc.Unsafe not found.nEither write a custom type adapter, or make fields accessible, or include sun.misc.Unsafe.\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|throw new com.google.gson.JsonIOException(r2.toString(), r0)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void com.google.gson.internal.reflect.UnsafeReflectionAccessor.makeAccessible((r4v0 'this' com.google.gson.internal.reflect.UnsafeReflectionAccessor A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.reflect.AccessibleObject A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

