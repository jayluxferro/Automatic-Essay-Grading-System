digraph "CFG forcom.google.gson.internal.LinkedHashTreeMap.\<init\>(Ljava\/util\/Comparator;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.util.AbstractMap) java.util.AbstractMap.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:int)\l  (r1 I:com.google.gson.internal.LinkedHashTreeMap)\l com.google.gson.internal.LinkedHashTreeMap.size int \l0x0006: IPUT  \l  (r0 I:int)\l  (r1 I:com.google.gson.internal.LinkedHashTreeMap)\l com.google.gson.internal.LinkedHashTreeMap.modCount int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: SGET  (r2 I:java.util.Comparator\<java.lang.Comparable\>) =  com.google.gson.internal.LinkedHashTreeMap.NATURAL_ORDER java.util.Comparator \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IPUT  \l  (r2 I:java.util.Comparator\<? super K\>)\l  (r1 I:com.google.gson.internal.LinkedHashTreeMap)\l com.google.gson.internal.LinkedHashTreeMap.comparator java.util.Comparator \l0x000f: NEW_INSTANCE  (r2 I:com.google.gson.internal.LinkedHashTreeMap$Node) =  com.google.gson.internal.LinkedHashTreeMap$Node \l0x0011: INVOKE  (r2 I:com.google.gson.internal.LinkedHashTreeMap$Node) com.google.gson.internal.LinkedHashTreeMap.Node.\<init\>():void type: DIRECT \l0x0014: IPUT  \l  (r2 I:com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>)\l  (r1 I:com.google.gson.internal.LinkedHashTreeMap)\l com.google.gson.internal.LinkedHashTreeMap.header com.google.gson.internal.LinkedHashTreeMap$Node \l0x0016: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0018: NEW_ARRAY  (r2 I:com.google.gson.internal.LinkedHashTreeMap$Node[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: com.google.gson.internal.LinkedHashTreeMap$Node[] \l0x001a: IPUT  \l  (r2 I:com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>[])\l  (r1 I:com.google.gson.internal.LinkedHashTreeMap)\l com.google.gson.internal.LinkedHashTreeMap.table com.google.gson.internal.LinkedHashTreeMap$Node[] \l0x001c: IGET  (r2 I:com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>[]) = (r1 I:com.google.gson.internal.LinkedHashTreeMap) com.google.gson.internal.LinkedHashTreeMap.table com.google.gson.internal.LinkedHashTreeMap$Node[] \l0x001e: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x001f: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x0021: IGET  (r0 I:com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>[]) = (r1 I:com.google.gson.internal.LinkedHashTreeMap) com.google.gson.internal.LinkedHashTreeMap.table com.google.gson.internal.LinkedHashTreeMap$Node[] \l0x0023: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0024: ARITH  (r0 I:int) = (r0 I:int) \/ (4 int) \l0x0026: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) \l0x0027: IPUT  \l  (r2 I:int)\l  (r1 I:com.google.gson.internal.LinkedHashTreeMap)\l com.google.gson.internal.LinkedHashTreeMap.threshold int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.gson.internal.LinkedHashTreeMap.\<init\>((r1 'this' I:com.google.gson.internal.LinkedHashTreeMap A[IMMUTABLE_TYPE, THIS]), (r2 I:java.util.Comparator\<? super K\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Comparator\<, \-TK;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
}

