digraph "CFG forcom.google.gson.internal.LinkedHashTreeMap.doubleCapacity([Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node;)[Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r11 I:?[]) \l0x0001: ARITH  (r1 I:int) = (r0 I:int) * (2 int) \l0x0003: NEW_ARRAY  (r1 I:com.google.gson.internal.LinkedHashTreeMap$Node[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: com.google.gson.internal.LinkedHashTreeMap$Node[] \l0x0005: NEW_INSTANCE  (r2 I:com.google.gson.internal.LinkedHashTreeMap$AvlIterator) =  com.google.gson.internal.LinkedHashTreeMap$AvlIterator \l0x0007: INVOKE  \l  (r2 I:com.google.gson.internal.LinkedHashTreeMap$AvlIterator)\l com.google.gson.internal.LinkedHashTreeMap.AvlIterator.\<init\>():void type: DIRECT \l0x000a: NEW_INSTANCE  (r3 I:com.google.gson.internal.LinkedHashTreeMap$AvlBuilder) =  com.google.gson.internal.LinkedHashTreeMap$AvlBuilder \l0x000c: INVOKE  \l  (r3 I:com.google.gson.internal.LinkedHashTreeMap$AvlBuilder)\l com.google.gson.internal.LinkedHashTreeMap.AvlBuilder.\<init\>():void type: DIRECT \l0x000f: NEW_INSTANCE  (r4 I:com.google.gson.internal.LinkedHashTreeMap$AvlBuilder) =  com.google.gson.internal.LinkedHashTreeMap$AvlBuilder \l0x0011: INVOKE  \l  (r4 I:com.google.gson.internal.LinkedHashTreeMap$AvlBuilder)\l com.google.gson.internal.LinkedHashTreeMap.AvlBuilder.\<init\>():void type: DIRECT \l0x0014: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: IF  (r6 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:28:0x0067 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: AGET  (r7 I:?[OBJECT, ARRAY]) = \l  (r11 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: INVOKE  \l  (r2 I:com.google.gson.internal.LinkedHashTreeMap$AvlIterator)\l  (r7 I:com.google.gson.internal.LinkedHashTreeMap$Node)\l com.google.gson.internal.LinkedHashTreeMap.AvlIterator.reset(com.google.gson.internal.LinkedHashTreeMap$Node):void type: VIRTUAL \l0x0020: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0021: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: INVOKE  (r10 I:com.google.gson.internal.LinkedHashTreeMap$Node) = \l  (r2 I:com.google.gson.internal.LinkedHashTreeMap$AvlIterator)\l com.google.gson.internal.LinkedHashTreeMap.AvlIterator.next():com.google.gson.internal.LinkedHashTreeMap$Node type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0033 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IGET  (r10 I:int) = (r10 I:com.google.gson.internal.LinkedHashTreeMap$Node) com.google.gson.internal.LinkedHashTreeMap.Node.hash int \l0x002a: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) & (r0 I:?[int, boolean, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0030 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: INVOKE  \l  (r3 I:com.google.gson.internal.LinkedHashTreeMap$AvlBuilder)\l  (r8 I:int)\l com.google.gson.internal.LinkedHashTreeMap.AvlBuilder.reset(int):void type: VIRTUAL \l0x0036: INVOKE  \l  (r4 I:com.google.gson.internal.LinkedHashTreeMap$AvlBuilder)\l  (r9 I:int)\l com.google.gson.internal.LinkedHashTreeMap.AvlBuilder.reset(int):void type: VIRTUAL \l0x0039: INVOKE  \l  (r2 I:com.google.gson.internal.LinkedHashTreeMap$AvlIterator)\l  (r7 I:com.google.gson.internal.LinkedHashTreeMap$Node)\l com.google.gson.internal.LinkedHashTreeMap.AvlIterator.reset(com.google.gson.internal.LinkedHashTreeMap$Node):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: INVOKE  (r7 I:com.google.gson.internal.LinkedHashTreeMap$Node) = \l  (r2 I:com.google.gson.internal.LinkedHashTreeMap$AvlIterator)\l com.google.gson.internal.LinkedHashTreeMap.AvlIterator.next():com.google.gson.internal.LinkedHashTreeMap$Node type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|0x0040: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004f \l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|0x0042: IGET  (r10 I:int) = (r7 I:com.google.gson.internal.LinkedHashTreeMap$Node) com.google.gson.internal.LinkedHashTreeMap.Node.hash int \l0x0044: ARITH  (r10 I:?[int, boolean, short, byte, char]) = (r10 I:?[int, boolean, short, byte, char]) & (r0 I:?[int, boolean, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|0x0045: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004b \l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|0x0047: INVOKE  \l  (r3 I:com.google.gson.internal.LinkedHashTreeMap$AvlBuilder)\l  (r7 I:com.google.gson.internal.LinkedHashTreeMap$Node)\l com.google.gson.internal.LinkedHashTreeMap.AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|0x004b: INVOKE  \l  (r4 I:com.google.gson.internal.LinkedHashTreeMap$AvlBuilder)\l  (r7 I:com.google.gson.internal.LinkedHashTreeMap$Node)\l com.google.gson.internal.LinkedHashTreeMap.AvlBuilder.add(com.google.gson.internal.LinkedHashTreeMap$Node):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x004f|0x004f: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0050|0x0050: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:22:0x0057 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0052|0x0052: INVOKE  (r8 I:com.google.gson.internal.LinkedHashTreeMap$Node) = \l  (r3 I:com.google.gson.internal.LinkedHashTreeMap$AvlBuilder)\l com.google.gson.internal.LinkedHashTreeMap.AvlBuilder.root():com.google.gson.internal.LinkedHashTreeMap$Node type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0057|0x0057: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0058|0x0058: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r6 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x005a: ARITH  (r8 I:int) = (r6 I:int) + (r0 I:int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x005c|0x005c: IF  (r9 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:26:0x0062 \l}"];
Node_25 [shape=record,label="{25\:\ 0x005e|0x005e: INVOKE  (r7 I:com.google.gson.internal.LinkedHashTreeMap$Node) = \l  (r4 I:com.google.gson.internal.LinkedHashTreeMap$AvlBuilder)\l com.google.gson.internal.LinkedHashTreeMap.AvlBuilder.root():com.google.gson.internal.LinkedHashTreeMap$Node type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0062|0x0062: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l \l}"];
Node_27 [shape=record,label="{27\:\ 0x0064|0x0064: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0067|0x0067: RETURN  \l  (r1 I:com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>[])\l \l}"];
MethodNode[shape=record,label="{static com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>[] com.google.gson.internal.LinkedHashTreeMap.doubleCapacity((r11 I:com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>([, Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node\<, TK;TV;\>;)[, Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_27[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_6;
Node_11 -> Node_6;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_13;
Node_18 -> Node_13;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_1;
}

