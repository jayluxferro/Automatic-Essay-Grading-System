digraph "CFG forcom.google.gson.internal.LinkedHashTreeMap.doubleCapacity([Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node;)[Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node;" {
subgraph cluster_Region_333523339 {
label = "R(3:0|(3:2|(8:4|(2:5|(1:32)(1:(1:9)(1:10)))|11|(2:12|(1:36)(1:(1:16)(1:17)))|18|22|(1:24)|25)(0)|26)|27)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r11.length\lcom.google.gson.internal.LinkedHashTreeMap$Node[] com.google.gson.internal.LinkedHashTreeMap.Node\<K, V\>[] r1 = new com.google.gson.internal.LinkedHashTreeMap.Node[(r0 * 2)]\lcom.google.gson.internal.LinkedHashTreeMap$AvlIterator com.google.gson.internal.LinkedHashTreeMap.AvlIterator r2 = new com.google.gson.internal.LinkedHashTreeMap.AvlIterator()\lcom.google.gson.internal.LinkedHashTreeMap$AvlBuilder com.google.gson.internal.LinkedHashTreeMap.AvlBuilder r3 = new com.google.gson.internal.LinkedHashTreeMap.AvlBuilder()\lcom.google.gson.internal.LinkedHashTreeMap$AvlBuilder com.google.gson.internal.LinkedHashTreeMap.AvlBuilder r4 = new com.google.gson.internal.LinkedHashTreeMap.AvlBuilder()\lint r6 = 0\l}"];
subgraph cluster_LoopRegion_26426726 {
label = "LOOP:0: (3:2|(8:4|(2:5|(1:32)(1:(1:9)(1:10)))|11|(2:12|(1:36)(1:(1:16)(1:17)))|18|22|(1:24)|25)(0)|26)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0016|LOOP_START\lPHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:0:0x0000, B:26:0x0064] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0016\-\>B:26:0x0064\l|if (r6 \< r0) goto L_0x0018\l}"];
subgraph cluster_Region_1539144796 {
label = "R(3:2|(8:4|(2:5|(1:32)(1:(1:9)(1:10)))|11|(2:12|(1:36)(1:(1:16)(1:17)))|18|22|(1:24)|25)(0)|26)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0018|com.google.gson.internal.LinkedHashTreeMap.Node\<K, V\> r7 = r11[r6]\l}"];
subgraph cluster_IfRegion_197010360 {
label = "IF [B:3:0x001a] THEN: R(8:4|(2:5|(1:32)(1:(1:9)(1:10)))|11|(2:12|(1:36)(1:(1:16)(1:17)))|18|22|(1:24)|25) ELSE: R(0)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001a|if (r7 != null) goto L_0x001d\l}"];
subgraph cluster_Region_846606677 {
label = "R(8:4|(2:5|(1:32)(1:(1:9)(1:10)))|11|(2:12|(1:36)(1:(1:16)(1:17)))|18|22|(1:24)|25)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001d|r2.reset(r7)\lint r8 = 0\lint r9 = 0\l}"];
subgraph cluster_LoopRegion_765972465 {
label = "LOOP:1: (2:5|(1:32)(1:(1:9)(1:10)))";
node [shape=record,color=blue];
subgraph cluster_Region_714494576 {
label = "R(2:5|(1:32)(1:(1:9)(1:10)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0022|LOOP_START\lPHI: r8 r9 \l  PHI: (r8v1 int) = (r8v0 int), (r8v6 int) binds: [B:4:0x001d, B:31:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 int) = (r9v0 int), (r9v2 int) binds: [B:4:0x001d, B:31:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:5:0x0022\-\>B:31:0x0022\l|com.google.gson.internal.LinkedHashTreeMap$Node com.google.gson.internal.LinkedHashTreeMap.Node r10 = r2.next()\l}"];
subgraph cluster_IfRegion_930152220 {
label = "IF [B:6:0x0026] THEN: R(1:32) ELSE: R(1:(1:9)(1:10))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0026|if (r10 == null) goto L_0x0033\l}"];
subgraph cluster_Region_677955055 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0033|SYNTHETIC\lEDGE_INSN: B:32:0x0033\-\>B:11:0x0033 ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_1255366793 {
label = "R(1:(1:9)(1:10)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_599811911 {
label = "IF [B:8:0x002b] THEN: R(1:9) ELSE: R(1:10) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002b|if ((r10.hash & r0) == 0) goto L_0x002d\l}"];
subgraph cluster_Region_599384661 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002d|r8++\l}"];
}
subgraph cluster_Region_2110155418 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0030|r9++\l}"];
}
}
}
}
}
}
Node_11 [shape=record,label="{11\:\ 0x0033|EDGE_INSN: B:32:0x0033\-\>B:11:0x0033 ?: BREAK  \l|r3.reset(r8)\lr4.reset(r9)\lr2.reset(r7)\l}"];
subgraph cluster_LoopRegion_878823151 {
label = "LOOP:2: (2:12|(1:36)(1:(1:16)(1:17)))";
node [shape=record,color=blue];
subgraph cluster_Region_181203514 {
label = "R(2:12|(1:36)(1:(1:16)(1:17)))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003c|LOOP_START\lLOOP:2: B:12:0x003c\-\>B:35:0x003c\l|com.google.gson.internal.LinkedHashTreeMap$Node com.google.gson.internal.LinkedHashTreeMap.Node r7 = r2.next()\l}"];
subgraph cluster_IfRegion_1538726125 {
label = "IF [B:13:0x0040] THEN: R(1:36) ELSE: R(1:(1:16)(1:17))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0040|if (r7 == null) goto L_0x004f\l}"];
subgraph cluster_Region_657088469 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x004f|SYNTHETIC\lEDGE_INSN: B:36:0x004f\-\>B:18:0x004f ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_1233367394 {
label = "R(1:(1:16)(1:17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_683800759 {
label = "IF [B:15:0x0045] THEN: R(1:16) ELSE: R(1:17) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0045|if ((r7.hash & r0) == 0) goto L_0x0047\l}"];
subgraph cluster_Region_762292116 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0047|r3.add(r7)\l}"];
}
subgraph cluster_Region_781240309 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x004b|r4.add(r7)\l}"];
}
}
}
}
}
}
Node_18 [shape=record,label="{18\:\ 0x004f|EDGE_INSN: B:36:0x004f\-\>B:18:0x004f ?: BREAK  \l|com.google.gson.internal.LinkedHashTreeMap.Node\<K, V\> r7 = null\l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|PHI: r8 \l  PHI: (r8v2 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r1[r6] = r8 \> 0 ? r3.root() : null\lint int r8 = r6 + r0\l}"];
subgraph cluster_IfRegion_1294575330 {
label = "IF [B:23:0x005c] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x005c|if (r9 \> 0) goto L_0x005e\l}"];
subgraph cluster_Region_906827141 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x005e|com.google.gson.internal.LinkedHashTreeMap$Node r7 = r4.root()\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x0062|PHI: r7 \l  PHI: (r7v3 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>) = (r7v2 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>), (r7v4 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>) binds: [B:23:0x005c, B:24:0x005e] A[DONT_GENERATE, DONT_INLINE]\l|r1[r8] = r7\l}"];
}
subgraph cluster_Region_402999283 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_26 [shape=record,label="{26\:\ 0x0064|LOOP_END\lLOOP:0: B:1:0x0016\-\>B:26:0x0064\l|r6++\l}"];
}
}
Node_27 [shape=record,label="{27\:\ 0x0067|RETURN\l|return r1\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ 0x0028}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0042}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0050}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0052}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0057}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0067|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0064|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0064|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0022|LOOP_END\lSYNTHETIC\lPHI: r8 r9 \l  PHI: (r8v6 int) = (r8v1 int), (r8v7 int) binds: [B:34:0x0022, B:33:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v2 int) = (r9v3 int), (r9v1 int) binds: [B:34:0x0022, B:33:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:5:0x0022\-\>B:31:0x0022\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0022|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0022|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x003c|LOOP_END\lSYNTHETIC\lLOOP:2: B:12:0x003c\-\>B:35:0x003c\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x003c|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x003c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>[] com.google.gson.internal.LinkedHashTreeMap.doubleCapacity((r11v0 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>([, Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node\<, TK;TV;\>;)[, Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_28[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_30[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_32;
Node_32 -> Node_11;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_33;
Node_10 -> Node_34;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_36;
Node_36 -> Node_18;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_37;
Node_17 -> Node_38;
Node_18 -> Node_19;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_29;
Node_26 -> Node_1;
Node_7 -> Node_8;
Node_14 -> Node_15;
Node_19 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_28 -> Node_27;
Node_29 -> Node_26;
Node_30 -> Node_26;
Node_31 -> Node_5;
Node_33 -> Node_31;
Node_34 -> Node_31;
Node_35 -> Node_12;
Node_37 -> Node_35;
Node_38 -> Node_35;
}

