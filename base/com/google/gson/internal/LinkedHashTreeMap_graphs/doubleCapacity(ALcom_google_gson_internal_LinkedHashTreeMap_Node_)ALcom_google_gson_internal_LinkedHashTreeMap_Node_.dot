digraph "CFG forcom.google.gson.internal.LinkedHashTreeMap.doubleCapacity([Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node;)[Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r11.length\lcom.google.gson.internal.LinkedHashTreeMap$Node[] r1 = new com.google.gson.internal.LinkedHashTreeMap.Node[(r0 * 2)]\lcom.google.gson.internal.LinkedHashTreeMap$AvlIterator r2 = new com.google.gson.internal.LinkedHashTreeMap.AvlIterator()\lcom.google.gson.internal.LinkedHashTreeMap$AvlBuilder r3 = new com.google.gson.internal.LinkedHashTreeMap.AvlBuilder()\lcom.google.gson.internal.LinkedHashTreeMap$AvlBuilder r4 = new com.google.gson.internal.LinkedHashTreeMap.AvlBuilder()\lr6 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|LOOP_START\lPHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:0:0x0000, B:26:0x0064] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0016\-\>B:26:0x0064\l|if (r6 \>= r0) goto L_0x0067\l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|r7 = r11[r6]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|if (r7 != null) goto L_0x001d\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|r2.reset(r7)\lr8 = 0\lr9 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|LOOP_START\lPHI: r8 r9 \l  PHI: (r8v1 int) = (r8v0 int), (r8v6 int) binds: [B:4:0x001d, B:31:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 int) = (r9v0 int), (r9v2 int) binds: [B:4:0x001d, B:31:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:5:0x0022\-\>B:31:0x0022\l|com.google.gson.internal.LinkedHashTreeMap$Node r10 = r2.next()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|if (r10 == null) goto L_0x0033\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028}"];
Node_8 [shape=record,label="{8\:\ 0x002b|if ((r10.hash & r0) != 0) goto L_0x0030\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|int r8 = r8 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|int r9 = r9 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|r3.reset(r8)\lr4.reset(r9)\lr2.reset(r7)\l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|LOOP_START\lLOOP:2: B:12:0x003c\-\>B:35:0x003c\l|com.google.gson.internal.LinkedHashTreeMap$Node r7 = r2.next()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|if (r7 == null) goto L_0x004f\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042}"];
Node_15 [shape=record,label="{15\:\ 0x0045|if ((r7.hash & r0) != 0) goto L_0x004b\l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|r3.add(r7)\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|r4.add(r7)\l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|r7 = null\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|if (r8 \<= 0) goto L_0x0057\l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|com.google.gson.internal.LinkedHashTreeMap$Node r8 = r3.root()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0057|r8 = null\l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|PHI: r8 \l  PHI: (r8v2 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>) = (r8v4 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>), (r8v5 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>) binds: [B:21:0x0057, B:20:0x0052] A[DONT_GENERATE, DONT_INLINE]\l|r1[r6] = r8\lint r8 = r6 + r0\l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|if (r9 \<= 0) goto L_0x0062\l}"];
Node_24 [shape=record,label="{24\:\ 0x005e|com.google.gson.internal.LinkedHashTreeMap$Node r7 = r4.root()\l}"];
Node_25 [shape=record,label="{25\:\ 0x0062|PHI: r7 \l  PHI: (r7v3 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>) = (r7v2 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>), (r7v4 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>) binds: [B:23:0x005c, B:24:0x005e] A[DONT_GENERATE, DONT_INLINE]\l|r1[r8] = r7\l}"];
Node_26 [shape=record,label="{26\:\ 0x0064|LOOP_END\lLOOP:0: B:1:0x0016\-\>B:26:0x0064\l|int r6 = r6 + 1\l}"];
Node_27 [shape=record,label="{27\:\ 0x0067|RETURN\l|return r1\l}"];
Node_28 [shape=record,label="{28\:\ 0x0067|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0064|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0064|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0022|LOOP_END\lSYNTHETIC\lPHI: r8 r9 \l  PHI: (r8v6 int) = (r8v1 int), (r8v7 int) binds: [B:34:0x0022, B:33:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v2 int) = (r9v3 int), (r9v1 int) binds: [B:34:0x0022, B:33:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:5:0x0022\-\>B:31:0x0022\l}"];
Node_32 [shape=record,label="{32\:\ 0x0033|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0022|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0022|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x003c|LOOP_END\lSYNTHETIC\lLOOP:2: B:12:0x003c\-\>B:35:0x003c\l}"];
Node_36 [shape=record,label="{36\:\ 0x004f|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x003c|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x003c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>[] com.google.gson.internal.LinkedHashTreeMap.doubleCapacity((r11v0 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>([, Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node\<, TK;TV;\>;)[, Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_30[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_32;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_33;
Node_10 -> Node_34;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_36;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_37;
Node_17 -> Node_38;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_29;
Node_26 -> Node_1;
Node_28 -> Node_27;
Node_29 -> Node_26;
Node_30 -> Node_26;
Node_31 -> Node_5;
Node_32 -> Node_11;
Node_33 -> Node_31;
Node_34 -> Node_31;
Node_35 -> Node_12;
Node_36 -> Node_18;
Node_37 -> Node_35;
Node_38 -> Node_35;
}

