digraph "CFG forcom.google.gson.internal.JavaVersion.extractBeginningInt(Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ NumberFormatException \-\> 0x0025 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r2 I:int) = (r4 I:java.lang.String) java.lang.String.length():int type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:7:0x001c A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: INVOKE  (r2 I:char) = (r4 I:java.lang.String), (r1 I:int) java.lang.String.charAt(int):char type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l0x0010: INVOKE  (r3 I:boolean) = (r2 I:char) java.lang.Character.isDigit(char):boolean type: STATIC A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001c A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l0x0019: ARITH  (r1 I:int) = (r1 I:int) + (1 int) A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l0x001b: GOTO  \-\> 0x0006 A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l0x0020: INVOKE  (r4 I:int) = (r4 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x0025 \}]\l0x0023: NOP   A[TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: RETURN  (r4 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:0:0x0000\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{private static int com.google.gson.internal.JavaVersion.extractBeginningInt((r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_2;
Node_7 -> Node_8;
Node_9 -> Node_11;
Node_10 -> Node_9;
}

