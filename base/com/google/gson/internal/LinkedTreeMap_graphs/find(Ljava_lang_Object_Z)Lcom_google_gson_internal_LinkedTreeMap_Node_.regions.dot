digraph "CFG forcom.google.gson.internal.LinkedTreeMap.find(Ljava\/lang\/Object;Z)Lcom\/google\/gson\/internal\/LinkedTreeMap$Node;" {
subgraph cluster_Region_319404956 {
label = "R(3:0|(2:3|(2:(1:7)(1:8)|(2:(1:10)|(2:(1:12)(1:13)|(2:(1:35)|(1:15))))))(1:16)|(2:(1:18)|(4:19|(3:28|(1:30)(1:31)|32)(1:(1:27)(2:25|26))|33|34))) | DECL_VAR: int null, com.google.gson.internal.LinkedTreeMap$Node\<K, V\> null, com.google.gson.internal.LinkedTreeMap$Node\<K, V\> null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Comparator\<? super K\> java.util.Comparator\<? super K\> r0 = r6.comparator\lcom.google.gson.internal.LinkedTreeMap$Node\<K, V\> com.google.gson.internal.LinkedTreeMap.Node\<K, V\> r1 = r6.root\l}"];
subgraph cluster_IfRegion_729444554 {
label = "IF [B:1:0x0005] THEN: R(2:3|(2:(1:7)(1:8)|(2:(1:10)|(2:(1:12)(1:13)|(2:(1:35)|(1:15)))))) ELSE: R(1:16)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r1 != null) goto L_0x0007\l}"];
subgraph cluster_Region_765684648 {
label = "R(2:3|(2:(1:7)(1:8)|(2:(1:10)|(2:(1:12)(1:13)|(2:(1:35)|(1:15))))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|java.lang.Comparable r3 = r0 == NATURAL_ORDER ? (java.lang.Comparable) r7 : null\l}"];
subgraph cluster_LoopRegion_591618563 {
label = "LOOP:0: (2:(1:7)(1:8)|(2:(1:10)|(2:(1:12)(1:13)|(2:(1:35)|(1:15)))))";
node [shape=record,color=blue];
subgraph cluster_Region_718098000 {
label = "R(2:(1:7)(1:8)|(2:(1:10)|(2:(1:12)(1:13)|(2:(1:35)|(1:15)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_984811708 {
label = "IF [B:6:0x0010] THEN: R(1:7) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0010|LOOP_START\lPHI: r1 \l  PHI: (r1v2 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>) = (r1v0 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>), (r1v3 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>) binds: [B:37:0x0010, B:15:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0010\-\>B:15:0x002c\l|if (r3 != null) goto L_0x0012\l}"];
subgraph cluster_Region_1673195395 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0012|int r4 = r3.compareTo(r1.key)\l}"];
}
subgraph cluster_Region_256313097 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0019|int r4 = r0.compare(r7, r1.key)\l}"];
}
}
subgraph cluster_Region_1195922771 {
label = "R(2:(1:10)|(2:(1:12)(1:13)|(2:(1:35)|(1:15))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1833382043 {
label = "IF [B:9:0x001f] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001f|PHI: r4 \l  PHI: (r4v2 int) = (r4v4 int), (r4v6 int) binds: [B:8:0x0019, B:7:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == 0) goto L_0x0021\l}"];
subgraph cluster_Region_238939411 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0021|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_1437336650 {
label = "R(2:(1:12)(1:13)|(2:(1:35)|(1:15)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_366182241 {
label = "IF [B:11:0x0022] THEN: R(1:12) ELSE: R(1:13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0022|if (r4 \< 0) goto L_0x0024\l}"];
subgraph cluster_Region_1025054751 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0024|com.google.gson.internal.LinkedTreeMap$Node\<K, V\> r5 = r1.left\l}"];
}
subgraph cluster_Region_450445100 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0027|com.google.gson.internal.LinkedTreeMap$Node\<K, V\> r5 = r1.right\l}"];
}
}
subgraph cluster_Region_271860293 {
label = "R(2:(1:35)|(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1143175984 {
label = "IF [B:14:0x0029] THEN: R(1:35) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0029|PHI: r5 \l  PHI: (r5v0 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>) = (r5v1 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>), (r5v2 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>) binds: [B:13:0x0027, B:12:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == null) goto L_0x002f\l}"];
subgraph cluster_Region_1905830314 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x002f|SYNTHETIC\lEDGE_INSN: B:35:0x002f\-\>B:17:0x002f ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_489858799 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002c|LOOP_END\lLOOP:0: B:6:0x0010\-\>B:15:0x002c\l|r1 = r5\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_782966019 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002e|r4 = 0\l}"];
}
}
subgraph cluster_Region_2143221903 {
label = "R(2:(1:18)|(4:19|(3:28|(1:30)(1:31)|32)(1:(1:27)(2:25|26))|33|34))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1303034711 {
label = "IF [B:17:0x002f] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x002f|EDGE_INSN: B:35:0x002f\-\>B:17:0x002f ?: BREAK  \lPHI: r1 r4 \l  PHI: (r1v1 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>) = (r1v0 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>), (r1v2 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>) binds: [B:16:0x002e, B:35:0x002f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v0 int) = (r4v1 int), (r4v2 int) binds: [B:16:0x002e, B:35:0x002f] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 == false) goto L_0x0031\l}"];
subgraph cluster_Region_303018793 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0031|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1335834800 {
label = "R(4:19|(3:28|(1:30)(1:31)|32)(1:(1:27)(2:25|26))|33|34)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0032|com.google.gson.internal.LinkedTreeMap$Node\<K, V\> com.google.gson.internal.LinkedTreeMap.Node\<K, V\> r8 = r6.header\l}"];
subgraph cluster_IfRegion_481449443 {
label = "IF [B:20:0x0035] THEN: R(3:28|(1:30)(1:31)|32) ELSE: R(1:(1:27)(2:25|26))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0035|if (r1 != null) goto L_0x0069\l}"];
subgraph cluster_Region_369337714 {
label = "R(3:28|(1:30)(1:31)|32)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0069|com.google.gson.internal.LinkedTreeMap$Node r0 = new com.google.gson.internal.LinkedTreeMap.Node\<\>(r1, r7, r8, r8.prev)\l}"];
subgraph cluster_IfRegion_644783419 {
label = "IF [B:29:0x0070] THEN: R(1:30) ELSE: R(1:31)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0070|if (r4 \< 0) goto L_0x0072\l}"];
subgraph cluster_Region_512654467 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0072|r1.left = r0\l}"];
}
subgraph cluster_Region_1711977400 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0075|r1.right = r0\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x0077|rebalance(r1, true)\l}"];
}
subgraph cluster_Region_782005241 {
label = "R(1:(1:27)(2:25|26)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1127821391 {
label = "IF [B:22:0x0039, B:24:0x003d] THEN: R(1:27) ELSE: R(2:25|26) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0039|if (r0 != NATURAL_ORDER) goto L_0x005f\l}"];
Node_24 [shape=record,label="{24\:\ 0x003d|ADDED_TO_REGION\l|if ((r7 instanceof java.lang.Comparable) == true) goto L_0x005f\l}"];
subgraph cluster_Region_1754922967 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x005f|com.google.gson.internal.LinkedTreeMap$Node r0 = new com.google.gson.internal.LinkedTreeMap.Node\<\>(r1, r7, r8, r8.prev)\lr6.root = r0\l}"];
}
subgraph cluster_Region_921961854 {
label = "R(2:25|26)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0040}"];
Node_26 [shape=record,label="{26\:\ 0x005e|throw new java.lang.ClassCastException(r7.getClass().getName() + \" is not Comparable\")\l}"];
}
}
}
}
Node_33 [shape=record,label="{33\:\ 0x007a|PHI: r0 \l  PHI: (r0v1 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>) = (r0v2 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>), (r0v3 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>) binds: [B:32:0x0077, B:27:0x005f] A[DONT_GENERATE, DONT_INLINE]\l|r6.size++\lr6.modCount++\l}"];
Node_34 [shape=record,label="{34\:\ 0x0084|RETURN\l|return r0\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0007}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000f}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0037}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x003b}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0021|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0010|SYNTHETIC\lPHI: r3 \l  PHI: (r3v4 java.lang.Comparable) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{com.google.gson.internal.LinkedTreeMap$Node\<K, V\> com.google.gson.internal.LinkedTreeMap.find((r6v0 'this' com.google.gson.internal.LinkedTreeMap A[IMMUTABLE_TYPE, THIS]), (r7v0 K A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TK;Z), Lcom\/google\/gson\/internal\/LinkedTreeMap$Node\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_16[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_11[style=dashed];
Node_9 -> Node_36;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_35;
Node_35 -> Node_17;
Node_15 -> Node_6;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_27 -> Node_33;
Node_25 -> Node_26;
Node_33 -> Node_34;
Node_2 -> Node_3;
Node_4 -> Node_37;
Node_5 -> Node_37;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_36 -> Node_10;
Node_37 -> Node_6;
}

