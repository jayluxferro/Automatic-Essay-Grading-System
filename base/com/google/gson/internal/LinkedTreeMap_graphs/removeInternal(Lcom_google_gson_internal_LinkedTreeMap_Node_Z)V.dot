digraph "CFG forcom.google.gson.internal.LinkedTreeMap.removeInternal(Lcom\/google\/gson\/internal\/LinkedTreeMap$Node;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r7 == false) goto L_0x000e\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|com.google.gson.internal.LinkedTreeMap$Node\<K, V\> r7 = r6.prev\lr7.next = r6.next\lcom.google.gson.internal.LinkedTreeMap$Node\<K, V\> r7 = r6.next\lr7.prev = r6.prev\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|com.google.gson.internal.LinkedTreeMap$Node\<K, V\> r7 = r6.left\lcom.google.gson.internal.LinkedTreeMap$Node\<K, V\> r0 = r6.right\lcom.google.gson.internal.LinkedTreeMap$Node\<K, V\> r1 = r6.parent\lr2 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r7 == null) goto L_0x0052\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|if (r0 == null) goto L_0x0052\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a}"];
Node_6 [shape=record,label="{6\:\ 0x001e|if (r7.height \<= r0.height) goto L_0x0025\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|com.google.gson.internal.LinkedTreeMap$Node r7 = r7.last()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|com.google.gson.internal.LinkedTreeMap$Node r7 = r0.first()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|PHI: r7 \l  PHI: (r7v2 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>) = (r7v3 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>), (r7v4 com.google.gson.internal.LinkedTreeMap$Node\<K, V\>) binds: [B:8:0x0025, B:7:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|removeInternal(r7, false)\lcom.google.gson.internal.LinkedTreeMap$Node\<K, V\> r0 = r6.left\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|if (r0 == null) goto L_0x0039\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|int r1 = r0.height\lr7.left = r0\lr0.parent = r7\lr6.left = null\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|r1 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|PHI: r1 \l  PHI: (r1v2 int) = (r1v3 int), (r1v4 int) binds: [B:12:0x0039, B:11:0x0030] A[DONT_GENERATE, DONT_INLINE]\l|com.google.gson.internal.LinkedTreeMap$Node\<K, V\> r0 = r6.right\l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|if (r0 == null) goto L_0x0046\l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|int r2 = r0.height\lr7.right = r0\lr0.parent = r7\lr6.right = null\l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:14:0x003c, B:15:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|r7.height = java.lang.Math.max(r1, r2) + 1\lreplaceInParent(r6, r7)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0051|RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|if (r7 == null) goto L_0x005a\l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|replaceInParent(r6, r7)\lr6.left = null\l}"];
Node_20 [shape=record,label="{20\:\ 0x005a|if (r0 == null) goto L_0x0062\l}"];
Node_21 [shape=record,label="{21\:\ 0x005c|replaceInParent(r6, r0)\lr6.right = null\l}"];
Node_22 [shape=record,label="{22\:\ 0x0062|replaceInParent(r6, (com.google.gson.internal.LinkedTreeMap.Node\<K, V\>) null)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0065|rebalance(r1, false)\lr5.size = r5.size + \-1\lr5.modCount = r5.modCount + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0074|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void com.google.gson.internal.LinkedTreeMap.removeInternal((r5v0 'this' com.google.gson.internal.LinkedTreeMap A[IMMUTABLE_TYPE, THIS]), (r6v0 com.google.gson.internal.LinkedTreeMap$Node\<K, V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/internal\/LinkedTreeMap$Node\<, TK;TV;\>;Z)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_23;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

