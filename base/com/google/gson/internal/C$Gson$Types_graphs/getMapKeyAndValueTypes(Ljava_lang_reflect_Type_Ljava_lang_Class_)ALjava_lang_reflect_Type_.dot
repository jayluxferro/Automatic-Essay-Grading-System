digraph "CFG forcom.google.gson.internal.$Gson$Types.getMapKeyAndValueTypes(Ljava\/lang\/reflect\/Type;Ljava\/lang\/Class;)[Ljava\/lang\/reflect\/Type;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r4 != java.util.Properties.class) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|java.lang.reflect.Type[] r4 = new java.lang.reflect.Type[]\{java.lang.String.class, java.lang.String.class\}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|RETURN\l|return r4\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|java.lang.reflect.Type r4 = getSupertype(r4, r5, java.util.Map.class)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|if ((r4 instanceof java.lang.reflect.ParameterizedType) == false) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c}"];
Node_7 [shape=record,label="{7\:\ 0x0022|RETURN\l|return ((java.lang.reflect.ParameterizedType) r4).getActualTypeArguments()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|java.lang.reflect.Type[] r4 = new java.lang.reflect.Type[]\{java.lang.Object.class, java.lang.Object.class\}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|RETURN\l|return r4\l}"];
MethodNode[shape=record,label="{public static java.lang.reflect.Type[] com.google.gson.internal.$Gson$Types.getMapKeyAndValueTypes((r4v0 java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Type;, Ljava\/lang\/Class\<, *\>;)[, Ljava\/lang\/reflect\/Type;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

