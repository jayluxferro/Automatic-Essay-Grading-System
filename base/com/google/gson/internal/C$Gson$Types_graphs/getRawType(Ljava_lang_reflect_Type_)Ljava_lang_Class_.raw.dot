digraph "CFG forcom.google.gson.internal.$Gson$Types.getRawType(Ljava\/lang\/reflect\/Type;)Ljava\/lang\/Class;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.Class \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CHECK_CAST  (r4 I:java.lang.Class) = (java.lang.Class) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r4 I:java.lang.Class\<?\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.ParameterizedType \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0019 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: CHECK_CAST  (r4 I:java.lang.reflect.ParameterizedType) = (java.lang.reflect.ParameterizedType) (r4 I:?[OBJECT, ARRAY]) \l0x000d: INVOKE  (r4 I:java.lang.reflect.Type) = (r4 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getRawType():java.lang.reflect.Type type: INTERFACE \l0x0011: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.Class \l0x0013: INVOKE  (r0 I:boolean) com.google.gson.internal.$Gson$Preconditions.checkArgument(boolean):void type: STATIC \l0x0016: CHECK_CAST  (r4 I:java.lang.Class) = (java.lang.Class) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: RETURN  (r4 I:java.lang.Class\<?\>) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.GenericArrayType \l0x001b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0031 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: CHECK_CAST  (r4 I:java.lang.reflect.GenericArrayType) = (java.lang.reflect.GenericArrayType) (r4 I:?[OBJECT, ARRAY]) \l0x0020: INVOKE  (r4 I:java.lang.reflect.Type) = (r4 I:java.lang.reflect.GenericArrayType) java.lang.reflect.GenericArrayType.getGenericComponentType():java.lang.reflect.Type type: INTERFACE \l0x0024: INVOKE  (r4 I:java.lang.Class) = (r4 I:java.lang.reflect.Type) com.google.gson.internal.$Gson$Types.getRawType(java.lang.reflect.Type):java.lang.Class type: STATIC \l0x0028: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.lang.Class), (r1 I:int) java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object type: STATIC \l0x002c: INVOKE  (r4 I:java.lang.Class) = (r4 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: RETURN  (r4 I:java.lang.Class\<?\>) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.TypeVariable \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0038 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|0x0035: CONST_CLASS  (r4 I:java.lang.Class\<java.lang.Object\>) =  java.lang.Object.class \l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: RETURN  (r4 I:java.lang.Class\<?\>) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.WildcardType \l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|0x003a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0049 \l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|0x003c: CHECK_CAST  (r4 I:java.lang.reflect.WildcardType) = (java.lang.reflect.WildcardType) (r4 I:?[OBJECT, ARRAY]) \l0x003e: INVOKE  (r4 I:java.lang.reflect.Type[]) = (r4 I:java.lang.reflect.WildcardType) java.lang.reflect.WildcardType.getUpperBounds():java.lang.reflect.Type[] type: INTERFACE \l0x0042: AGET  (r4 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0044: INVOKE  (r4 I:java.lang.Class) = (r4 I:java.lang.reflect.Type) com.google.gson.internal.$Gson$Types.getRawType(java.lang.reflect.Type):java.lang.Class type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0048|0x0048: RETURN  (r4 I:java.lang.Class\<?\>) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|0x0049: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x004e \l}"];
Node_21 [shape=record,label="{21\:\ 0x004b|0x004b: CONST_STR  (r0 I:java.lang.String) =  \"null\" \l}"];
Node_22 [shape=record,label="{22\:\ 0x004e|0x004e: INVOKE  (r0 I:java.lang.Class) = (r4 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0052: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0056|0x0056: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0058: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x005a: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005d: CONST_STR  (r3 I:java.lang.String) =  \"Expected a Class, ParameterizedType, or GenericArrayType, but \<\" \l0x005f: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0062: INVOKE  (r2 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0065: CONST_STR  (r4 I:java.lang.String) =  \"\> is of type \" \l0x0067: INVOKE  (r2 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006a: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006d: INVOKE  (r4 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0071: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x0074|0x0074: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static java.lang.Class\<?\> com.google.gson.internal.$Gson$Types.getRawType((r4 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Type;, ), Ljava\/lang\/Class\<, *\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

