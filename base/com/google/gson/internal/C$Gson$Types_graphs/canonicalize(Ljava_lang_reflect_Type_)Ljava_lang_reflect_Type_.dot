digraph "CFG forcom.google.gson.internal.$Gson$Types.canonicalize(Ljava\/lang\/reflect\/Type;)Ljava\/lang\/reflect\/Type;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r3 instanceof java.lang.Class) == false) goto L_0x001d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|java.lang.Class r3 = (java.lang.Class) r3\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r3.isArray() == false) goto L_0x001a\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|r3 = new com.google.gson.internal.C$Gson$Types.GenericArrayTypeImpl(canonicalize(r3.getComponentType()))\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|PHI: r3 \l  PHI: (r3v8 java.lang.Class) = (r3v7 java.lang.Class), (r3v12 java.lang.Class) binds: [B:3:0x000a, B:4:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|RETURN\l|return r3\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d}"];
Node_8 [shape=record,label="{8\:\ 0x001f|if ((r3 instanceof java.lang.reflect.ParameterizedType) == false) goto L_0x0035\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|java.lang.reflect.ParameterizedType r3 = (java.lang.reflect.ParameterizedType) r3\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|RETURN\l|return new com.google.gson.internal.C$Gson$Types.ParameterizedTypeImpl(r3.getOwnerType(), r3.getRawType(), r3.getActualTypeArguments())\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035}"];
Node_12 [shape=record,label="{12\:\ 0x0037|if ((r3 instanceof java.lang.reflect.GenericArrayType) == false) goto L_0x0045\l}"];
Node_13 [shape=record,label="{13\:\ 0x0039}"];
Node_14 [shape=record,label="{14\:\ 0x0044|RETURN\l|return new com.google.gson.internal.C$Gson$Types.GenericArrayTypeImpl(((java.lang.reflect.GenericArrayType) r3).getGenericComponentType())\l}"];
Node_15 [shape=record,label="{15\:\ 0x0045}"];
Node_16 [shape=record,label="{16\:\ 0x0047|if ((r3 instanceof java.lang.reflect.WildcardType) == false) goto L_0x0059\l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|java.lang.reflect.WildcardType r3 = (java.lang.reflect.WildcardType) r3\l}"];
Node_18 [shape=record,label="{18\:\ 0x0058|RETURN\l|return new com.google.gson.internal.C$Gson$Types.WildcardTypeImpl(r3.getUpperBounds(), r3.getLowerBounds())\l}"];
Node_19 [shape=record,label="{19\:\ 0x0059|RETURN\l|return r3\l}"];
MethodNode[shape=record,label="{public static java.lang.reflect.Type com.google.gson.internal.$Gson$Types.canonicalize((r3v0 java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lJADX WARNING: type inference failed for: r0v8, types: [com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl]\lMulti\-variable type inference failed\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
}

