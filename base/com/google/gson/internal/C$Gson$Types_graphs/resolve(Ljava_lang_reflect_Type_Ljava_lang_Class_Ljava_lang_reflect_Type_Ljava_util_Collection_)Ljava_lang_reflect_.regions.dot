digraph "CFG forcom.google.gson.internal.$Gson$Types.resolve(Ljava\/lang\/reflect\/Type;Ljava\/lang\/Class;Ljava\/lang\/reflect\/Type;Ljava\/util\/Collection;)Ljava\/lang\/reflect\/Type;" {
subgraph cluster_Region_1534978590 {
label = "R(3:(2:2|(2:(1:4)|(2:5|(1:7))))|(2:10|(2:12|13))|(2:(2:17|18)|(2:20|(5:22|23|26|(3:28|(2:(1:31)|32)(0)|33)|34)(1:(1:54)(3:38|(2:40|(1:43))(1:(2:48|(1:52)))|53)))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_2136939883 {
label = "LOOP:0: (2:2|(2:(1:4)|(2:5|(1:7))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r10 instanceof java.lang.reflect.TypeVariable) != false) goto L_0x0004\l}"];
subgraph cluster_Region_1915725195 {
label = "R(2:2|(2:(1:4)|(2:5|(1:7))))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|java.lang.reflect.TypeVariable java.lang.reflect.TypeVariable r0 = (java.lang.reflect.TypeVariable) r10\l}"];
subgraph cluster_Region_1339146586 {
label = "R(2:(1:4)|(2:5|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1910563795 {
label = "IF [B:3:0x000b] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r11.contains(r0) == true) goto L_0x000d\l}"];
subgraph cluster_Region_1952339052 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|RETURN\l|return r10\l}"];
}
}
subgraph cluster_Region_543591192 {
label = "R(2:5|(1:7))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|r11.add(r0)\ljava.lang.reflect.Type r10 = resolveTypeVariable(r8, r9, r0)\l}"];
subgraph cluster_IfRegion_786032632 {
label = "IF [B:6:0x0015] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:6:0x0015\l|if (r10 == r0) goto L_0x0017\l}"];
subgraph cluster_Region_1078427107 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\l|return r10\l}"];
}
}
}
}
}
}
subgraph cluster_IfRegion_1207211205 {
label = "IF [B:9:0x001a] THEN: R(2:10|(2:12|13)) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001a|if ((r10 instanceof java.lang.Class) == true) goto L_0x001c\l}"];
subgraph cluster_Region_1638685705 {
label = "R(2:10|(2:12|13))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001c|java.lang.Class java.lang.Class r0 = (java.lang.Class) r10\l}"];
subgraph cluster_IfRegion_425263558 {
label = "IF [B:11:0x0023] THEN: R(2:12|13) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0023|if (r0.isArray() == true) goto L_0x0025\l}"];
subgraph cluster_Region_1236853029 {
label = "R(2:12|13)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0025|java.lang.Class java.lang.reflect.Type r10 = r0.getComponentType()\ljava.lang.reflect.Type java.lang.reflect.Type r8 = resolve(r8, r9, r10, r11)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|RETURN\l|return r10 == r8 ? r0 : arrayOf(r8)\l}"];
}
}
}
}
subgraph cluster_Region_107890288 {
label = "R(2:(2:17|18)|(2:20|(5:22|23|26|(3:28|(2:(1:31)|32)(0)|33)|34)(1:(1:54)(3:38|(2:40|(1:43))(1:(2:48|(1:52)))|53))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_9805797 {
label = "IF [B:16:0x0037] THEN: R(2:17|18) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0037|if ((r10 instanceof java.lang.reflect.GenericArrayType) == true) goto L_0x0039\l}"];
subgraph cluster_Region_103264616 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0039|java.lang.reflect.GenericArrayType java.lang.reflect.GenericArrayType r10 = (java.lang.reflect.GenericArrayType) r10\ljava.lang.reflect.Type java.lang.reflect.Type r0 = r10.getGenericComponentType()\ljava.lang.reflect.Type java.lang.reflect.Type r8 = resolve(r8, r9, r0, r11)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|RETURN\l|return r0 == r8 ? r10 : arrayOf(r8)\l}"];
}
}
subgraph cluster_Region_1425650542 {
label = "R(2:20|(5:22|23|26|(3:28|(2:(1:31)|32)(0)|33)|34)(1:(1:54)(3:38|(2:40|(1:43))(1:(2:48|(1:52)))|53)))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x004b|int r2 = 0\l}"];
subgraph cluster_IfRegion_2076590705 {
label = "IF [B:21:0x004f] THEN: R(5:22|23|26|(3:28|(2:(1:31)|32)(0)|33)|34) ELSE: R(1:(1:54)(3:38|(2:40|(1:43))(1:(2:48|(1:52)))|53))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x004f|if ((r10 instanceof java.lang.reflect.ParameterizedType) == true) goto L_0x0051\l}"];
subgraph cluster_Region_1248174372 {
label = "R(5:22|23|26|(3:28|(2:(1:31)|32)(0)|33)|34)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0051|java.lang.reflect.ParameterizedType java.lang.reflect.ParameterizedType r10 = (java.lang.reflect.ParameterizedType) r10\ljava.lang.reflect.Type java.lang.reflect.Type r0 = r10.getOwnerType()\ljava.lang.reflect.Type java.lang.reflect.Type r3 = resolve(r8, r9, r0, r11)\l}"];
Node_23 [shape=record,label="{23\:\ 0x005b|boolean r0 = r3 != r0\l}"];
Node_26 [shape=record,label="{26\:\ 0x0060|PHI: r0 \l  PHI: (r0v9 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.reflect.Type[] java.lang.reflect.Type[] r4 = r10.getActualTypeArguments()\lint int r5 = r4.length\l}"];
subgraph cluster_LoopRegion_292625926 {
label = "LOOP:1: (3:28|(2:(1:31)|32)(0)|33)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0065|LOOP_START\lPHI: r0 r2 r4 \l  PHI: (r0v10 boolean) = (r0v9 boolean), (r0v11 boolean) binds: [B:26:0x0060, B:33:0x007d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:26:0x0060, B:33:0x007d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 java.lang.reflect.Type[]) = (r4v1 java.lang.reflect.Type[]), (r4v3 java.lang.reflect.Type[]) binds: [B:26:0x0060, B:33:0x007d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:27:0x0065\-\>B:33:0x007d\l|if (r2 \< r5) goto L_0x0067\l}"];
subgraph cluster_Region_557547699 {
label = "R(3:28|(2:(1:31)|32)(0)|33)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0067|java.lang.reflect.Type java.lang.reflect.Type r6 = resolve(r8, r9, r4[r2], r11)\l}"];
subgraph cluster_IfRegion_463664534 {
label = "IF [B:29:0x006f] THEN: R(2:(1:31)|32) ELSE: R(0)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x006f|if (r6 != r4[r2]) goto L_0x0071\l}"];
subgraph cluster_Region_47793999 {
label = "R(2:(1:31)|32)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1478558234 {
label = "IF [B:30:0x0071] THEN: R(1:31) ELSE: null";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0071|if (r0 == false) goto L_0x0073\l}"];
subgraph cluster_Region_1072233654 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0073|java.lang.reflect.Type[] r4 = r4.clone()\lr0 = true\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x007b|PHI: r0 r4 \l  PHI: (r0v12 boolean) = (r0v10 boolean), (r0v14 boolean) binds: [B:30:0x0071, B:31:0x0073] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 java.lang.reflect.Type[]) = (r4v2 java.lang.reflect.Type[]), (r4v6 java.lang.reflect.Type[]) binds: [B:30:0x0071, B:31:0x0073] A[DONT_GENERATE, DONT_INLINE]\l|r4[r2] = r6\l}"];
}
subgraph cluster_Region_418882416 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_33 [shape=record,label="{33\:\ 0x007d|LOOP_END\lPHI: r0 r4 \l  PHI: (r0v11 boolean) = (r0v10 boolean), (r0v12 boolean) binds: [B:62:0x007d, B:61:0x007d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 java.lang.reflect.Type[]) = (r4v2 java.lang.reflect.Type[]), (r4v4 java.lang.reflect.Type[]) binds: [B:62:0x007d, B:61:0x007d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:27:0x0065\-\>B:33:0x007d\l|r2++\l}"];
}
}
Node_34 [shape=record,label="{34\:\ 0x0080|RETURN\l|return r0 ? newParameterizedTypeWithOwner(r3, r10.getRawType(), r4) : r10\l}"];
}
subgraph cluster_Region_1818115032 {
label = "R(1:(1:54)(3:38|(2:40|(1:43))(1:(2:48|(1:52)))|53)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1075378945 {
label = "IF [B:37:0x008d] THEN: R(1:54) ELSE: R(3:38|(2:40|(1:43))(1:(2:48|(1:52)))|53) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x008d|if ((r10 instanceof java.lang.reflect.WildcardType) != true) goto L_0x00be\l}"];
subgraph cluster_Region_159710393 {
label = "R(1:54)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x00be|RETURN\l|return r10\l}"];
}
subgraph cluster_Region_465696828 {
label = "R(3:38|(2:40|(1:43))(1:(2:48|(1:52)))|53)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x008f|java.lang.reflect.WildcardType java.lang.reflect.WildcardType r10 = (java.lang.reflect.WildcardType) r10\ljava.lang.reflect.Type[] java.lang.reflect.Type[] r0 = r10.getLowerBounds()\ljava.lang.reflect.Type[] java.lang.reflect.Type[] r3 = r10.getUpperBounds()\l}"];
subgraph cluster_IfRegion_1711463919 {
label = "IF [B:39:0x009a] THEN: R(2:40|(1:43)) ELSE: R(1:(2:48|(1:52)))";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x009a|if (r0.length == 1) goto L_0x009c\l}"];
subgraph cluster_Region_1786809084 {
label = "R(2:40|(1:43))";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x009c|java.lang.reflect.Type java.lang.reflect.Type r8 = resolve(r8, r9, r0[0], r11)\l}"];
subgraph cluster_IfRegion_573266908 {
label = "IF [B:41:0x00a4] THEN: R(1:43) ELSE: null";
node [shape=record,color=blue];
Node_41 [shape=record,label="{41\:\ 0x00a4|if (r8 != r0[0]) goto L_0x00a6\l}"];
subgraph cluster_Region_483934214 {
label = "R(1:43)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x00aa|RETURN\l|return supertypeOf(r8)\l}"];
}
}
}
subgraph cluster_Region_751641306 {
label = "R(1:(2:48|(1:52))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_910116797 {
label = "IF [B:45:0x00ac] THEN: R(2:48|(1:52)) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x00ac|if (r3.length == 1) goto L_0x00ae\l}"];
subgraph cluster_Region_1176635696 {
label = "R(2:48|(1:52))";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ ?|java.lang.reflect.Type java.lang.reflect.Type r8 = resolve(r8, r9, r3[0], r11)\l}"];
subgraph cluster_IfRegion_681290850 {
label = "IF [B:50:0x00b6] THEN: R(1:52) ELSE: null";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x00b6|if (r8 != r3[0]) goto L_0x00b8\l}"];
subgraph cluster_Region_1343682326 {
label = "R(1:52)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x00bc|RETURN\l|return subtypeOf(r8)\l}"];
}
}
}
}
}
}
Node_53 [shape=record,label="{53\:\ 0x00bd|RETURN\l|return r10\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r10 \l  PHI: (r10v1 java.lang.reflect.Type) = (r10v0 java.lang.reflect.Type), (r10v8 java.lang.reflect.Type) binds: [B:0:0x0000, B:6:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:6:0x0015\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0018}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0030}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0035}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0046}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x005d}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x005f}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0082}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x008b}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00a6}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x00ab}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x00ae}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x00b0|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x00b4}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x00b8}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x00bf|REMOVE\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x00c0|REMOVE\l|throw r8\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x0018|SYNTHETIC\l}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x0017|SYNTHETIC\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x000d|SYNTHETIC\l}"];
Node_60 [shape=record,color=red,label="{60\:\ 0x0080|SYNTHETIC\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x007d|SYNTHETIC\l}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x007d|SYNTHETIC\l}"];
Node_63 [shape=record,color=red,label="{63\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_64 [shape=record,color=red,label="{64\:\ ?|SYNTHETIC\l}"];
Node_65 [shape=record,color=red,label="{65\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_66 [shape=record,color=red,label="{66\:\ ?|SYNTHETIC\l}"];
Node_67 [shape=record,color=red,label="{67\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_68 [shape=record,color=red,label="{68\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static java.lang.reflect.Type com.google.gson.internal.$Gson$Types.resolve((r8v0 java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.util.Collection\<java.lang.reflect.TypeVariable\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r0v13, resolved type: java.lang.Object\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r4v5, resolved type: java.lang.reflect.Type[]\}\lMulti\-variable type inference failed\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Type;, Ljava\/lang\/Class\<, *\>;, Ljava\/lang\/reflect\/Type;, Ljava\/util\/Collection\<, Ljava\/lang\/reflect\/TypeVariable;, \>;), Ljava\/lang\/reflect\/Type;]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_57[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_5[style=dashed];
Node_3 -> Node_59;
Node_5 -> Node_6;
Node_6 -> Node_0[style=dashed];
Node_6 -> Node_58;
Node_9 -> Node_10;
Node_9 -> Node_15[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_15[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_64;
Node_16 -> Node_17;
Node_16 -> Node_20[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_66;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_36[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_60[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_62[style=dashed];
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_61;
Node_33 -> Node_27;
Node_34 -> Node_35;
Node_34 -> Node_68;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_54;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_39 -> Node_44[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_53[style=dashed];
Node_45 -> Node_46;
Node_45 -> Node_53[style=dashed];
Node_48 -> Node_49;
Node_50 -> Node_51;
Node_50 -> Node_53[style=dashed];
Node_0 -> Node_1;
Node_8 -> Node_9;
Node_14 -> Node_63;
Node_15 -> Node_16;
Node_19 -> Node_65;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_35 -> Node_67;
Node_36 -> Node_37;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_47 -> Node_55;
Node_49 -> Node_50;
Node_51 -> Node_52;
Node_55 -> Node_56;
Node_57 -> Node_8;
Node_58 -> Node_7;
Node_59 -> Node_4;
Node_60 -> Node_34;
Node_61 -> Node_33;
Node_62 -> Node_33;
}

