digraph "CFG forcom.google.gson.internal.$Gson$Types.getSupertype(Ljava\/lang\/reflect\/Type;Ljava\/lang\/Class;Ljava\/lang\/Class;)Ljava\/lang\/reflect\/Type;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r1 instanceof java.lang.reflect.WildcardType) == false) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r1 = ((java.lang.reflect.WildcardType) r1).getUpperBounds()[0]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|PHI: r1 \l  PHI: (r1v1 java.lang.reflect.Type) = (r1v0 java.lang.reflect.Type), (r1v5 java.lang.reflect.Type) binds: [B:1:0x0002, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l|com.google.gson.internal.C$Gson$Preconditions.checkArgument(r3.isAssignableFrom(r2))\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|RETURN\l|return resolve(r1, r2, getGenericSupertype(r1, r2, r3))\l}"];
MethodNode[shape=record,label="{static java.lang.reflect.Type com.google.gson.internal.$Gson$Types.getSupertype((r1v0 java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Type;, Ljava\/lang\/Class\<, *\>;, Ljava\/lang\/Class\<, *\>;), Ljava\/lang\/reflect\/Type;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

