digraph "CFG forcom.google.gson.internal.$Gson$Types.equals(Ljava\/lang\/reflect\/Type;Ljava\/lang\/reflect\/Type;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.Class \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Object), (r5 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: RETURN  (r4 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.ParameterizedType \l0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0048 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.lang.reflect.ParameterizedType \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0017 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|0x0016: RETURN  (r2 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|0x0017: CHECK_CAST  (r4 I:java.lang.reflect.ParameterizedType) = (java.lang.reflect.ParameterizedType) (r4 I:?[OBJECT, ARRAY]) \l0x0019: CHECK_CAST  (r5 I:java.lang.reflect.ParameterizedType) = (java.lang.reflect.ParameterizedType) (r5 I:?[OBJECT, ARRAY]) \l0x001b: INVOKE  (r1 I:java.lang.reflect.Type) = (r4 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getOwnerType():java.lang.reflect.Type type: INTERFACE \l0x001f: INVOKE  (r3 I:java.lang.reflect.Type) = (r5 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getOwnerType():java.lang.reflect.Type type: INTERFACE \l0x0023: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object), (r3 I:java.lang.Object) com.google.gson.internal.$Gson$Types.equal(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0046 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|0x0029: INVOKE  (r1 I:java.lang.reflect.Type) = (r4 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getRawType():java.lang.reflect.Type type: INTERFACE \l0x002d: INVOKE  (r3 I:java.lang.reflect.Type) = (r5 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getRawType():java.lang.reflect.Type type: INTERFACE \l0x0031: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object), (r3 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|0x0035: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0046 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: INVOKE  (r4 I:java.lang.reflect.Type[]) = (r4 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getActualTypeArguments():java.lang.reflect.Type[] type: INTERFACE \l0x003b: INVOKE  (r5 I:java.lang.reflect.Type[]) = (r5 I:java.lang.reflect.ParameterizedType) java.lang.reflect.ParameterizedType.getActualTypeArguments():java.lang.reflect.Type[] type: INTERFACE \l0x003f: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Object[]), (r5 I:java.lang.Object[]) java.util.Arrays.equals(java.lang.Object[], java.lang.Object[]):boolean type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x0043|0x0043: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0046 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0046|0x0046: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: RETURN  (r0 I:boolean) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0048|0x0048: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.GenericArrayType \l}"];
Node_22 [shape=record,label="{22\:\ 0x004a|0x004a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0062 \l}"];
Node_23 [shape=record,label="{23\:\ 0x004c|0x004c: INSTANCE_OF  (r0 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.lang.reflect.GenericArrayType \l}"];
Node_24 [shape=record,label="{24\:\ 0x004e|0x004e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0051 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0050|0x0050: RETURN  (r2 I:boolean) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0051|0x0051: CHECK_CAST  (r4 I:java.lang.reflect.GenericArrayType) = (java.lang.reflect.GenericArrayType) (r4 I:?[OBJECT, ARRAY]) \l0x0053: CHECK_CAST  (r5 I:java.lang.reflect.GenericArrayType) = (java.lang.reflect.GenericArrayType) (r5 I:?[OBJECT, ARRAY]) \l0x0055: INVOKE  (r4 I:java.lang.reflect.Type) = (r4 I:java.lang.reflect.GenericArrayType) java.lang.reflect.GenericArrayType.getGenericComponentType():java.lang.reflect.Type type: INTERFACE \l0x0059: INVOKE  (r5 I:java.lang.reflect.Type) = (r5 I:java.lang.reflect.GenericArrayType) java.lang.reflect.GenericArrayType.getGenericComponentType():java.lang.reflect.Type type: INTERFACE \l0x005d: INVOKE  (r4 I:boolean) = \l  (r4 I:java.lang.reflect.Type)\l  (r5 I:java.lang.reflect.Type)\l com.google.gson.internal.$Gson$Types.equals(java.lang.reflect.Type, java.lang.reflect.Type):boolean type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x0061|0x0061: RETURN  (r4 I:boolean) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0062|0x0062: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.WildcardType \l}"];
Node_29 [shape=record,label="{29\:\ 0x0064|0x0064: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x008e \l}"];
Node_30 [shape=record,label="{30\:\ 0x0066|0x0066: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.lang.reflect.WildcardType \l}"];
Node_31 [shape=record,label="{31\:\ 0x0068|0x0068: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x006b \l}"];
Node_32 [shape=record,label="{32\:\ 0x006a|0x006a: RETURN  (r2 I:boolean) \l}"];
Node_33 [shape=record,label="{33\:\ 0x006b|0x006b: CHECK_CAST  (r4 I:java.lang.reflect.WildcardType) = (java.lang.reflect.WildcardType) (r4 I:?[OBJECT, ARRAY]) \l0x006d: CHECK_CAST  (r5 I:java.lang.reflect.WildcardType) = (java.lang.reflect.WildcardType) (r5 I:?[OBJECT, ARRAY]) \l0x006f: INVOKE  (r1 I:java.lang.reflect.Type[]) = (r4 I:java.lang.reflect.WildcardType) java.lang.reflect.WildcardType.getUpperBounds():java.lang.reflect.Type[] type: INTERFACE \l0x0073: INVOKE  (r3 I:java.lang.reflect.Type[]) = (r5 I:java.lang.reflect.WildcardType) java.lang.reflect.WildcardType.getUpperBounds():java.lang.reflect.Type[] type: INTERFACE \l0x0077: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Object[]), (r3 I:java.lang.Object[]) java.util.Arrays.equals(java.lang.Object[], java.lang.Object[]):boolean type: STATIC \l}"];
Node_34 [shape=record,label="{34\:\ 0x007b|0x007b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x008c \l}"];
Node_35 [shape=record,label="{35\:\ 0x007d|0x007d: INVOKE  (r4 I:java.lang.reflect.Type[]) = (r4 I:java.lang.reflect.WildcardType) java.lang.reflect.WildcardType.getLowerBounds():java.lang.reflect.Type[] type: INTERFACE \l0x0081: INVOKE  (r5 I:java.lang.reflect.Type[]) = (r5 I:java.lang.reflect.WildcardType) java.lang.reflect.WildcardType.getLowerBounds():java.lang.reflect.Type[] type: INTERFACE \l0x0085: INVOKE  (r4 I:boolean) = (r4 I:java.lang.Object[]), (r5 I:java.lang.Object[]) java.util.Arrays.equals(java.lang.Object[], java.lang.Object[]):boolean type: STATIC \l}"];
Node_36 [shape=record,label="{36\:\ 0x0089|0x0089: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x008c \l}"];
Node_38 [shape=record,label="{38\:\ 0x008c|0x008c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x008d|0x008d: RETURN  (r0 I:boolean) \l}"];
Node_40 [shape=record,label="{40\:\ 0x008e|0x008e: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.lang.reflect.TypeVariable \l}"];
Node_41 [shape=record,label="{41\:\ 0x0090|0x0090: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x00b6 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0092|0x0092: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) java.lang.reflect.TypeVariable \l}"];
Node_43 [shape=record,label="{43\:\ 0x0094|0x0094: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0097 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0096|0x0096: RETURN  (r2 I:boolean) \l}"];
Node_45 [shape=record,label="{45\:\ 0x0097|0x0097: CHECK_CAST  (r4 I:java.lang.reflect.TypeVariable) = (java.lang.reflect.TypeVariable) (r4 I:?[OBJECT, ARRAY]) \l0x0099: CHECK_CAST  (r5 I:java.lang.reflect.TypeVariable) = (java.lang.reflect.TypeVariable) (r5 I:?[OBJECT, ARRAY]) \l0x009b: INVOKE  (r1 I:java.lang.reflect.GenericDeclaration) = (r4 I:java.lang.reflect.TypeVariable) java.lang.reflect.TypeVariable.getGenericDeclaration():java.lang.reflect.GenericDeclaration type: INTERFACE \l0x009f: INVOKE  (r3 I:java.lang.reflect.GenericDeclaration) = (r5 I:java.lang.reflect.TypeVariable) java.lang.reflect.TypeVariable.getGenericDeclaration():java.lang.reflect.GenericDeclaration type: INTERFACE \l}"];
Node_46 [shape=record,label="{46\:\ 0x00a3|0x00a3: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00b4 \l}"];
Node_47 [shape=record,label="{47\:\ 0x00a5|0x00a5: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.reflect.TypeVariable) java.lang.reflect.TypeVariable.getName():java.lang.String type: INTERFACE \l0x00a9: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.reflect.TypeVariable) java.lang.reflect.TypeVariable.getName():java.lang.String type: INTERFACE \l0x00ad: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_48 [shape=record,label="{48\:\ 0x00b1|0x00b1: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:50:0x00b4 \l}"];
Node_50 [shape=record,label="{50\:\ 0x00b4|0x00b4: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_51 [shape=record,label="{51\:\ 0x00b5|0x00b5: RETURN  (r0 I:boolean) \l}"];
Node_52 [shape=record,label="{52\:\ 0x00b6|0x00b6: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean com.google.gson.internal.$Gson$Types.equals((r4 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_21;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_40;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_36 -> Node_39[style=dashed];
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_52;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_50;
Node_47 -> Node_48;
Node_48 -> Node_50;
Node_48 -> Node_51[style=dashed];
Node_50 -> Node_51;
}

