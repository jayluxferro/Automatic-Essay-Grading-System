digraph "CFG forcom.google.gson.internal.LinkedHashTreeMap.Node.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.util.Map$Entry \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0037 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CHECK_CAST  (r4 I:java.util.Map$Entry) = (java.util.Map$Entry) (r4 I:?[OBJECT, ARRAY]) \l0x0007: IGET  (r0 I:K) = (r3 I:com.google.gson.internal.LinkedHashTreeMap$Node) com.google.gson.internal.LinkedHashTreeMap.Node.key java.lang.Object \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0036 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: IGET  (r0 I:K) = (r3 I:com.google.gson.internal.LinkedHashTreeMap$Node) com.google.gson.internal.LinkedHashTreeMap.Node.key java.lang.Object \l0x0014: INVOKE  (r2 I:java.lang.Object) = (r4 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0018: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r2 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0036 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: IGET  (r0 I:V) = (r3 I:com.google.gson.internal.LinkedHashTreeMap$Node) com.google.gson.internal.LinkedHashTreeMap.Node.value java.lang.Object \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0029 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0036 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|0x0029: IGET  (r0 I:V) = (r3 I:com.google.gson.internal.LinkedHashTreeMap$Node) com.google.gson.internal.LinkedHashTreeMap.Node.value java.lang.Object \l0x002b: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x002f: INVOKE  (r4 I:boolean) = (r0 I:java.lang.Object), (r4 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0036 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|0x0035: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0036|0x0036: RETURN  (r1 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|0x0037: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.google.gson.internal.LinkedHashTreeMap.Node.equals((r3 'this' I:com.google.gson.internal.LinkedHashTreeMap$Node A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_17;
Node_5 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_17;
Node_12 -> Node_16[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
}

