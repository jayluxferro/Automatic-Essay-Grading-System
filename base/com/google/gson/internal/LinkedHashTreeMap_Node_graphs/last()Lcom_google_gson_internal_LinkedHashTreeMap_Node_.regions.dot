digraph "CFG forcom.google.gson.internal.LinkedHashTreeMap.Node.last()Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node;" {
subgraph cluster_Region_596204844 {
label = "R(3:0|(1:2)|3)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\> com.google.gson.internal.LinkedHashTreeMap.Node\<K, V\> r0 = r3.right\lcom.google.gson.internal.LinkedHashTreeMap.Node\<K, V\> r1 = r3\l}"];
subgraph cluster_LoopRegion_255523957 {
label = "LOOP:0: (1:2)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v1 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>) = (r0v0 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>), (r0v2 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>) binds: [B:0:0x0000, B:2:0x0005] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 com.google.gson.internal.LinkedHashTreeMap$Node) = (r1v0 com.google.gson.internal.LinkedHashTreeMap$Node), (r1v3 com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\>) binds: [B:0:0x0000, B:2:0x0005] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0003\-\>B:2:0x0005\l|if (r0 != null) goto L_0x0005\l}"];
subgraph cluster_Region_1004452219 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|LOOP_END\lLOOP:0: B:1:0x0003\-\>B:2:0x0005\l|r1 = r0\lr0 = r0.right\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x000b|RETURN\l|return r1\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x000b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public com.google.gson.internal.LinkedHashTreeMap$Node\<K, V\> com.google.gson.internal.LinkedHashTreeMap.Node.last((r3v0 'this' com.google.gson.internal.LinkedHashTreeMap$Node A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Lcom\/google\/gson\/internal\/LinkedHashTreeMap$Node\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_1;
Node_4 -> Node_3;
}

