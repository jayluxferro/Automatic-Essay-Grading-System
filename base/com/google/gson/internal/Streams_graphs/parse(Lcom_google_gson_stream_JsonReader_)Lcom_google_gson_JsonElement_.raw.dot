digraph "CFG forcom.google.gson.internal.Streams.parse(Lcom\/google\/gson\/stream\/JsonReader;)Lcom\/google\/gson\/JsonElement;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r2 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL A[Catch:\{ EOFException \-\> 0x0024, MalformedJsonException \-\> 0x001d, IOException \-\> 0x0016, NumberFormatException \-\> 0x000f \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|SYNTHETIC\lSplitter:B:3:0x0004\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0004\l|0x0004: SGET  (r1 I:com.google.gson.TypeAdapter\<com.google.gson.JsonElement\>) =  com.google.gson.internal.bind.TypeAdapters.JSON_ELEMENT com.google.gson.TypeAdapter A[Catch:\{ EOFException \-\> 0x000d, MalformedJsonException \-\> 0x001d, IOException \-\> 0x0016, NumberFormatException \-\> 0x000f \}, TRY_ENTER]\l0x0006: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:com.google.gson.TypeAdapter)\l  (r2 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL A[Catch:\{ EOFException \-\> 0x000d, MalformedJsonException \-\> 0x001d, IOException \-\> 0x0016, NumberFormatException \-\> 0x000f \}]\l0x000a: CHECK_CAST  (r2 I:com.google.gson.JsonElement) = (com.google.gson.JsonElement) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ EOFException \-\> 0x000d, MalformedJsonException \-\> 0x001d, IOException \-\> 0x0016, NumberFormatException \-\> 0x000f \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: RETURN  (r2 I:com.google.gson.JsonElement) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|ExcHandler: EOFException null\lSplitter:B:3:0x0004\l|0x000d: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|ExcHandler: NumberFormatException null\lSplitter:B:0:0x0000\l|0x000f: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException \l0x0012: INVOKE  \l  (r0 I:com.google.gson.JsonSyntaxException)\l  (r2 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x0016: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|0x0017: NEW_INSTANCE  (r0 I:com.google.gson.JsonIOException) =  com.google.gson.JsonIOException \l0x0019: INVOKE  \l  (r0 I:com.google.gson.JsonIOException)\l  (r2 I:java.lang.Throwable)\l com.google.gson.JsonIOException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|ExcHandler: MalformedJsonException null\lSplitter:B:0:0x0000\l|0x001d: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x001e|0x001e: NEW_INSTANCE  (r0 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException \l0x0020: INVOKE  \l  (r0 I:com.google.gson.JsonSyntaxException)\l  (r2 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0023|0x0023: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0024|ExcHandler: EOFException null\lSplitter:B:0:0x0000\l|0x0024: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0025|0x0025: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0026|0x0026: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x002b \l}"];
Node_20 [shape=record,label="{20\:\ 0x0028|0x0028: SGET  (r2 I:com.google.gson.JsonNull) =  com.google.gson.JsonNull.INSTANCE com.google.gson.JsonNull \l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|0x002a: RETURN  (r2 I:com.google.gson.JsonElement) \l}"];
Node_22 [shape=record,label="{22\:\ 0x002b|0x002b: NEW_INSTANCE  (r0 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException \l0x002d: INVOKE  \l  (r0 I:com.google.gson.JsonSyntaxException)\l  (r2 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x0030|0x0030: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static com.google.gson.JsonElement com.google.gson.internal.Streams.parse((r2 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.gson.JsonParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_17;
Node_0 -> Node_14;
Node_0 -> Node_11;
Node_0 -> Node_8;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_1 -> Node_14;
Node_1 -> Node_11;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_3 -> Node_14;
Node_3 -> Node_11;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_4 -> Node_14;
Node_4 -> Node_11;
Node_4 -> Node_8;
Node_6 -> Node_19;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_22 -> Node_23;
}

