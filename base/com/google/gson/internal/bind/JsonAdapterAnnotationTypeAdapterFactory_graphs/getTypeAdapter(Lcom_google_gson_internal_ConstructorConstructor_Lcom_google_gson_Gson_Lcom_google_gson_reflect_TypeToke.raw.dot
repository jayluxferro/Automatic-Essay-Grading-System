digraph "CFG forcom.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(Lcom\/google\/gson\/internal\/ConstructorConstructor;Lcom\/google\/gson\/Gson;Lcom\/google\/gson\/reflect\/TypeToken;Lcom\/google\/gson\/annotations\/JsonAdapter;)Lcom\/google\/gson\/TypeAdapter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Class) = (r12 I:com.google.gson.annotations.JsonAdapter) com.google.gson.annotations.JsonAdapter.value():java.lang.Class type: INTERFACE \l0x0004: INVOKE  (r0 I:com.google.gson.reflect.TypeToken) = (r0 I:java.lang.Class) com.google.gson.reflect.TypeToken.get(java.lang.Class):com.google.gson.reflect.TypeToken type: STATIC \l0x0008: INVOKE  (r9 I:com.google.gson.internal.ObjectConstructor) = \l  (r9 I:com.google.gson.internal.ConstructorConstructor)\l  (r0 I:com.google.gson.reflect.TypeToken)\l com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken):com.google.gson.internal.ObjectConstructor type: VIRTUAL \l0x000c: INVOKE  (r9 I:java.lang.Object) = (r9 I:com.google.gson.internal.ObjectConstructor) com.google.gson.internal.ObjectConstructor.construct():java.lang.Object type: INTERFACE \l0x0010: INSTANCE_OF  (r0 I:boolean) = (r9 I:?[OBJECT, ARRAY]) com.google.gson.TypeAdapter \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: CHECK_CAST  (r9 I:com.google.gson.TypeAdapter) = (com.google.gson.TypeAdapter) (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: INSTANCE_OF  (r0 I:boolean) = (r9 I:?[OBJECT, ARRAY]) com.google.gson.TypeAdapterFactory \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: CHECK_CAST  (r9 I:com.google.gson.TypeAdapterFactory) = (com.google.gson.TypeAdapterFactory) (r9 I:?[OBJECT, ARRAY]) \l0x001d: INVOKE  (r9 I:com.google.gson.TypeAdapter) = \l  (r9 I:com.google.gson.TypeAdapterFactory)\l  (r10 I:com.google.gson.Gson)\l  (r11 I:com.google.gson.reflect.TypeToken)\l com.google.gson.TypeAdapterFactory.create(com.google.gson.Gson, com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: INSTANCE_OF  (r0 I:boolean) = (r9 I:?[OBJECT, ARRAY]) com.google.gson.JsonSerializer \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x005b \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: INSTANCE_OF  (r1 I:boolean) = (r9 I:?[OBJECT, ARRAY]) com.google.gson.JsonDeserializer \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002b \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: NEW_INSTANCE  (r10 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x002d: NEW_INSTANCE  (r12 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002f: INVOKE  (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0032: CONST_STR  (r0 I:java.lang.String) =  \"Invalid attempt to bind an instance of \" \l0x0034: INVOKE  (r12 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: INVOKE  (r9 I:java.lang.Class) = (r9 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x003b: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l0x003f: INVOKE  (r12 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0042: CONST_STR  (r9 I:java.lang.String) =  \" as a @JsonAdapter for \" \l0x0044: INVOKE  (r12 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0047: INVOKE  (r9 I:java.lang.String) = (r11 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.toString():java.lang.String type: VIRTUAL \l0x004b: INVOKE  (r12 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004e: CONST_STR  (r9 I:java.lang.String) =  \". @JsonAdapter value must be a TypeAdapter, TypeAdapterFactory, JsonSerializer or JsonDeserializer.\" \l0x0050: INVOKE  (r12 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0053: INVOKE  (r9 I:java.lang.String) = (r12 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0057: INVOKE  \l  (r10 I:java.lang.IllegalArgumentException)\l  (r9 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x005a|0x005a: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x005b|0x005b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x005c|0x005c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0063 \l}"];
Node_15 [shape=record,label="{15\:\ 0x005e|0x005e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x005f: CHECK_CAST  (r0 I:com.google.gson.JsonSerializer) = (com.google.gson.JsonSerializer) (r0 I:?[OBJECT, ARRAY]) \l0x0061: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0063|0x0063: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0064|0x0064: INSTANCE_OF  (r0 I:boolean) = (r9 I:?[OBJECT, ARRAY]) com.google.gson.JsonDeserializer \l}"];
Node_18 [shape=record,label="{18\:\ 0x0066|0x0066: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x006b \l}"];
Node_19 [shape=record,label="{19\:\ 0x0068|0x0068: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0069: CHECK_CAST  (r1 I:com.google.gson.JsonDeserializer) = (com.google.gson.JsonDeserializer) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x006b|0x006b: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x006c: NEW_INSTANCE  (r9 I:com.google.gson.internal.bind.TreeTypeAdapter) =  com.google.gson.internal.bind.TreeTypeAdapter \l0x006e: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006f: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0070: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0071: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0072: INVOKE  \l  (r2 I:com.google.gson.internal.bind.TreeTypeAdapter)\l  (r3 I:com.google.gson.JsonSerializer)\l  (r4 I:com.google.gson.JsonDeserializer)\l  (r5 I:com.google.gson.Gson)\l  (r6 I:com.google.gson.reflect.TypeToken)\l  (r7 I:com.google.gson.TypeAdapterFactory)\l com.google.gson.internal.bind.TreeTypeAdapter.\<init\>(com.google.gson.JsonSerializer, com.google.gson.JsonDeserializer, com.google.gson.Gson, com.google.gson.reflect.TypeToken, com.google.gson.TypeAdapterFactory):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0075|0x0075: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0081 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0077|0x0077: INVOKE  (r10 I:boolean) = (r12 I:com.google.gson.annotations.JsonAdapter) com.google.gson.annotations.JsonAdapter.nullSafe():boolean type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x007b|0x007b: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0081 \l}"];
Node_24 [shape=record,label="{24\:\ 0x007d|0x007d: INVOKE  (r9 I:com.google.gson.TypeAdapter) = (r9 I:com.google.gson.TypeAdapter) com.google.gson.TypeAdapter.nullSafe():com.google.gson.TypeAdapter type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0081|0x0081: RETURN  (r9 I:com.google.gson.TypeAdapter\<?\>) \l}"];
MethodNode[shape=record,label="{com.google.gson.TypeAdapter\<?\> com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter((r8 'this' I:com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory A[IMMUTABLE_TYPE, THIS]), (r9 I:com.google.gson.internal.ConstructorConstructor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:com.google.gson.Gson A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:com.google.gson.reflect.TypeToken\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:com.google.gson.annotations.JsonAdapter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/internal\/ConstructorConstructor;, Lcom\/google\/gson\/Gson;, Lcom\/google\/gson\/reflect\/TypeToken\<, *\>;, Lcom\/google\/gson\/annotations\/JsonAdapter;, ), Lcom\/google\/gson\/TypeAdapter\<, *\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_21;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_21;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
}

