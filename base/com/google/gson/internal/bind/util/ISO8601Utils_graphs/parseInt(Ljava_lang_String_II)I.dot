digraph "CFG forcom.google.gson.internal.bind.util.ISO8601Utils.parseInt(Ljava\/lang\/String;II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 \< 0) goto L_0x006a\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r6 \> r4.length()) goto L_0x006a\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r5 \> r6) goto L_0x006a\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if (r5 \>= r6) goto L_0x0038\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|int r0 = r5 + 1\lint r2 = java.lang.Character.digit(r4.charAt(r5), 10)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|if (r2 \< 0) goto L_0x001d\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|int r2 = \-r2\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Invalid number: \")\lr1.append(r4.substring(r5, r6))\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|throw new java.lang.NumberFormatException(r1.toString())\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|r0 = r5\lr2 = 0\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v3 int) = (r0v2 int), (r0v7 int) binds: [B:24:0x003a, B:15:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v4 int) binds: [B:24:0x003a, B:15:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:12:0x003a\-\>B:15:0x0048\l|if (r0 \>= r6) goto L_0x0068\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|int r3 = r0 + 1\lint r0 = java.lang.Character.digit(r4.charAt(r0), 10)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|if (r0 \< 0) goto L_0x004d\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|LOOP_END\lLOOP:0: B:12:0x003a\-\>B:15:0x0048\l|int r2 = (r2 * 10) \- r0\lr0 = r3\l}"];
Node_16 [shape=record,label="{16\:\ 0x004d|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Invalid number: \")\lr1.append(r4.substring(r5, r6))\l}"];
Node_17 [shape=record,label="{17\:\ 0x0067|throw new java.lang.NumberFormatException(r1.toString())\l}"];
Node_18 [shape=record,label="{18\:\ 0x0068}"];
Node_19 [shape=record,label="{19\:\ 0x0069|RETURN\l|return \-r2\l}"];
Node_20 [shape=record,label="{20\:\ 0x006a}"];
Node_21 [shape=record,label="{21\:\ 0x006f|throw new java.lang.NumberFormatException(r4)\l}"];
Node_22 [shape=record,label="{22\:\ 0x004d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0068|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x003a|SYNTHETIC\lPHI: r0 r2 \l  PHI: (r0v2 int) = (r0v8 int), (r0v9 int) binds: [B:11:0x0038, B:8:0x001b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v0 int) = (r2v5 int), (r2v9 int) binds: [B:11:0x0038, B:8:0x001b] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{private static int com.google.gson.internal.bind.util.ISO8601Utils.parseInt((r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.NumberFormatException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_20;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_20;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_20;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_24;
Node_9 -> Node_10;
Node_11 -> Node_24;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_23;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_16;
Node_23 -> Node_18;
Node_24 -> Node_12;
}

