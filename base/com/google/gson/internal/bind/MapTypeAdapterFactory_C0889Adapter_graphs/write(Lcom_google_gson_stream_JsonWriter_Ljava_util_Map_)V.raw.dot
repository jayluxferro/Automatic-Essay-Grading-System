digraph "CFG forcom.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.write(Lcom\/google\/gson\/stream\/JsonWriter;Ljava\/util\/Map;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.nullValue():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r0 I:com.google.gson.internal.bind.MapTypeAdapterFactory) = \l  (r7 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.this$0 com.google.gson.internal.bind.MapTypeAdapterFactory \l0x0008: IGET  (r0 I:boolean) = (r0 I:com.google.gson.internal.bind.MapTypeAdapterFactory) com.google.gson.internal.bind.MapTypeAdapterFactory.complexMapKeySerialization boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: INVOKE  (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.beginObject():com.google.gson.stream.JsonWriter type: VIRTUAL \l0x000f: INVOKE  (r9 I:java.util.Set) = (r9 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0013: INVOKE  (r9 I:java.util.Iterator) = (r9 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: INVOKE  (r0 I:boolean) = (r9 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0038 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: INVOKE  (r0 I:java.lang.Object) = (r9 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0021: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) \l0x0023: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0027: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l0x002b: INVOKE  \l  (r8 I:com.google.gson.stream.JsonWriter)\l  (r1 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x002e: IGET  (r1 I:com.google.gson.TypeAdapter\<V\>) = \l  (r7 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.valueTypeAdapter com.google.gson.TypeAdapter \l0x0030: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0034: INVOKE  \l  (r1 I:com.google.gson.TypeAdapter)\l  (r8 I:com.google.gson.stream.JsonWriter)\l  (r0 I:java.lang.Object)\l com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter, java.lang.Object):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: INVOKE  (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.endObject():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x003e: INVOKE  (r1 I:int) = (r9 I:java.util.Map) java.util.Map.size():int type: INTERFACE \l0x0042: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0045: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0047: INVOKE  (r2 I:int) = (r9 I:java.util.Map) java.util.Map.size():int type: INTERFACE \l0x004b: INVOKE  (r1 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x004e: INVOKE  (r9 I:java.util.Set) = (r9 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0052: INVOKE  (r9 I:java.util.Iterator) = (r9 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l0x0056: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0058|0x0058: INVOKE  (r4 I:boolean) = (r9 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x005c|0x005c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x008a \l}"];
Node_14 [shape=record,label="{14\:\ 0x005e|0x005e: INVOKE  (r4 I:java.lang.Object) = (r9 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0062: CHECK_CAST  (r4 I:java.util.Map$Entry) = (java.util.Map$Entry) (r4 I:?[OBJECT, ARRAY]) \l0x0064: IGET  (r5 I:com.google.gson.TypeAdapter\<K\>) = \l  (r7 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.keyTypeAdapter com.google.gson.TypeAdapter \l0x0066: INVOKE  (r6 I:java.lang.Object) = (r4 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x006a: INVOKE  (r5 I:com.google.gson.JsonElement) = (r5 I:com.google.gson.TypeAdapter), (r6 I:java.lang.Object) com.google.gson.TypeAdapter.toJsonTree(java.lang.Object):com.google.gson.JsonElement type: VIRTUAL \l0x006e: INVOKE  (r0 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0071: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0075: INVOKE  (r1 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0078: INVOKE  (r4 I:boolean) = (r5 I:com.google.gson.JsonElement) com.google.gson.JsonElement.isJsonArray():boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x007c|0x007c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0087 \l}"];
Node_16 [shape=record,label="{16\:\ 0x007e|0x007e: INVOKE  (r4 I:boolean) = (r5 I:com.google.gson.JsonElement) com.google.gson.JsonElement.isJsonObject():boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0082|0x0082: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0085 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0085|0x0085: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x0087|0x0087: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0088|0x0088: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) \| (r4 I:?[int, boolean, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x008a|0x008a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00b4 \l}"];
Node_23 [shape=record,label="{23\:\ 0x008c|0x008c: INVOKE  (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.beginArray():com.google.gson.stream.JsonWriter type: VIRTUAL \l0x008f: INVOKE  (r9 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_24 [shape=record,label="{24\:\ 0x0093|0x0093: IF  (r2 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:26:0x00b0 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0095|0x0095: INVOKE  (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.beginArray():com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0098: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x009c: CHECK_CAST  (r3 I:com.google.gson.JsonElement) = (com.google.gson.JsonElement) (r3 I:?[OBJECT, ARRAY]) \l0x009e: INVOKE  \l  (r3 I:com.google.gson.JsonElement)\l  (r8 I:com.google.gson.stream.JsonWriter)\l com.google.gson.internal.Streams.write(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter):void type: STATIC \l0x00a1: IGET  (r3 I:com.google.gson.TypeAdapter\<V\>) = \l  (r7 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.valueTypeAdapter com.google.gson.TypeAdapter \l0x00a3: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x00a7: INVOKE  \l  (r3 I:com.google.gson.TypeAdapter)\l  (r8 I:com.google.gson.stream.JsonWriter)\l  (r4 I:java.lang.Object)\l com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter, java.lang.Object):void type: VIRTUAL \l0x00aa: INVOKE  (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.endArray():com.google.gson.stream.JsonWriter type: VIRTUAL \l0x00ad: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b0|0x00b0: INVOKE  (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.endArray():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b4|0x00b4: INVOKE  (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.beginObject():com.google.gson.stream.JsonWriter type: VIRTUAL \l0x00b7: INVOKE  (r9 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_28 [shape=record,label="{28\:\ 0x00bb|0x00bb: IF  (r2 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:30:0x00d6 \l}"];
Node_29 [shape=record,label="{29\:\ 0x00bd|0x00bd: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x00c1: CHECK_CAST  (r3 I:com.google.gson.JsonElement) = (com.google.gson.JsonElement) (r3 I:?[OBJECT, ARRAY]) \l0x00c3: INVOKE  (r3 I:java.lang.String) = \l  (r7 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l  (r3 I:com.google.gson.JsonElement)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.keyToString(com.google.gson.JsonElement):java.lang.String type: DIRECT \l0x00c7: INVOKE  \l  (r8 I:com.google.gson.stream.JsonWriter)\l  (r3 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x00ca: IGET  (r3 I:com.google.gson.TypeAdapter\<V\>) = \l  (r7 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.valueTypeAdapter com.google.gson.TypeAdapter \l0x00cc: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x00d0: INVOKE  \l  (r3 I:com.google.gson.TypeAdapter)\l  (r8 I:com.google.gson.stream.JsonWriter)\l  (r4 I:java.lang.Object)\l com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter, java.lang.Object):void type: VIRTUAL \l0x00d3: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00d6|0x00d6: INVOKE  (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.endObject():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x00d9|0x00d9: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.write((r7 'this' I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter A[IMMUTABLE_TYPE, THIS]), (r8 I:com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.Map\<K, V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/stream\/JsonWriter;, Ljava\/util\/Map\<, TK;TV;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_6;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_22;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_12;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_24;
Node_26 -> Node_31;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_28;
Node_30 -> Node_31;
}

