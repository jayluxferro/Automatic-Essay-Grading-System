digraph "CFG forcom.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.keyToString(Lcom\/google\/gson\/JsonElement;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r2 I:com.google.gson.JsonElement) com.google.gson.JsonElement.isJsonPrimitive():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0039 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r2 I:com.google.gson.JsonPrimitive) = (r2 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsJsonPrimitive():com.google.gson.JsonPrimitive type: VIRTUAL \l0x000a: INVOKE  (r0 I:boolean) = (r2 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.isNumber():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: INVOKE  (r2 I:java.lang.Number) = (r2 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.getAsNumber():java.lang.Number type: VIRTUAL \l0x0014: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN  (r2 I:java.lang.String) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: INVOKE  (r0 I:boolean) = (r2 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.isBoolean():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: INVOKE  (r2 I:boolean) = (r2 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.getAsBoolean():boolean type: VIRTUAL \l0x0023: INVOKE  (r2 I:java.lang.String) = (r2 I:boolean) java.lang.Boolean.toString(boolean):java.lang.String type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: RETURN  (r2 I:java.lang.String) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: INVOKE  (r0 I:boolean) = (r2 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.isString():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0033 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: INVOKE  (r2 I:java.lang.String) = (r2 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.getAsString():java.lang.String type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: RETURN  (r2 I:java.lang.String) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: NEW_INSTANCE  (r2 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0035: INVOKE  (r2 I:java.lang.AssertionError) java.lang.AssertionError.\<init\>():void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: INVOKE  (r2 I:boolean) = (r2 I:com.google.gson.JsonElement) com.google.gson.JsonElement.isJsonNull():boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|0x003d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0042 \l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|0x003f: CONST_STR  (r2 I:java.lang.String) =  \"null\" \l}"];
Node_19 [shape=record,label="{19\:\ 0x0041|0x0041: RETURN  (r2 I:java.lang.String) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0042|0x0042: NEW_INSTANCE  (r2 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0044: INVOKE  (r2 I:java.lang.AssertionError) java.lang.AssertionError.\<init\>():void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0047|0x0047: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private java.lang.String com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.keyToString((r1 'this' I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.gson.JsonElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

