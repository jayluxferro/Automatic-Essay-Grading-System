digraph "CFG forcom.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l0x000b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r4 I:java.util.Map\<K, V\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r1 I:com.google.gson.internal.ObjectConstructor\<? extends java.util.Map\<K, V\>\>) = \l  (r3 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.constructor com.google.gson.internal.ObjectConstructor \l0x000f: INVOKE  (r1 I:java.lang.Object) = (r1 I:com.google.gson.internal.ObjectConstructor) com.google.gson.internal.ObjectConstructor.construct():java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r1 I:java.util.Map) = (java.util.Map) (r1 I:?[OBJECT, ARRAY]) \l0x0015: SGET  (r2 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.BEGIN_ARRAY com.google.gson.stream.JsonToken \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0056 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginArray():void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: INVOKE  (r0 I:boolean) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0052 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginArray():void type: VIRTUAL \l0x0025: IGET  (r0 I:com.google.gson.TypeAdapter\<K\>) = \l  (r3 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.keyTypeAdapter com.google.gson.TypeAdapter \l0x0027: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r4 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x002b: IGET  (r2 I:com.google.gson.TypeAdapter\<V\>) = \l  (r3 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.valueTypeAdapter com.google.gson.TypeAdapter \l0x002d: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r4 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0031: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:java.util.Map)\l  (r0 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003b \l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endArray():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: NEW_INSTANCE  (r4 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException \l0x003d: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003f: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0042: CONST_STR  (r2 I:java.lang.String) =  \"duplicate key: \" \l0x0044: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0047: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x004a: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004e: INVOKE  \l  (r4 I:com.google.gson.JsonSyntaxException)\l  (r0 I:java.lang.String)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|0x0051: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|0x0052: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endArray():void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|0x0056: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginObject():void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|0x0059: INVOKE  (r0 I:boolean) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|0x005d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x008e \l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|0x005f: SGET  (r0 I:com.google.gson.internal.JsonReaderInternalAccess) =  com.google.gson.internal.JsonReaderInternalAccess.INSTANCE com.google.gson.internal.JsonReaderInternalAccess \l0x0061: INVOKE  \l  (r0 I:com.google.gson.internal.JsonReaderInternalAccess)\l  (r4 I:com.google.gson.stream.JsonReader)\l com.google.gson.internal.JsonReaderInternalAccess.promoteNameToValue(com.google.gson.stream.JsonReader):void type: VIRTUAL \l0x0064: IGET  (r0 I:com.google.gson.TypeAdapter\<K\>) = \l  (r3 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.keyTypeAdapter com.google.gson.TypeAdapter \l0x0066: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:com.google.gson.TypeAdapter)\l  (r4 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x006a: IGET  (r2 I:com.google.gson.TypeAdapter\<V\>) = \l  (r3 I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.valueTypeAdapter com.google.gson.TypeAdapter \l0x006c: INVOKE  (r2 I:java.lang.Object) = \l  (r2 I:com.google.gson.TypeAdapter)\l  (r4 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0070: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:java.util.Map)\l  (r0 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x0074|0x0074: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0077 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0077|0x0077: NEW_INSTANCE  (r4 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException \l0x0079: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x007b: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x007e: CONST_STR  (r2 I:java.lang.String) =  \"duplicate key: \" \l0x0080: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0083: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0086: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008a: INVOKE  \l  (r4 I:com.google.gson.JsonSyntaxException)\l  (r0 I:java.lang.String)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x008d|0x008d: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_23 [shape=record,label="{23\:\ 0x008e|0x008e: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endObject():void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0091|0x0091: RETURN  (r1 I:java.util.Map\<K, V\>) \l}"];
MethodNode[shape=record,label="{public java.util.Map\<K, V\> com.google.gson.internal.bind.MapTypeAdapterFactory.Adapter.read((r3 'this' I:com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/stream\/JsonReader;, ), Ljava\/util\/Map\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_7;
Node_12 -> Node_13;
Node_14 -> Node_24;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_23;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_16[style=dashed];
Node_21 -> Node_22;
Node_23 -> Node_24;
}

