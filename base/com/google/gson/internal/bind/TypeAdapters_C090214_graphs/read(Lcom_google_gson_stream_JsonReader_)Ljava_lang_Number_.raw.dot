digraph "CFG forcom.google.gson.internal.bind.TypeAdapters.14.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/lang\/Number;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:int[]) =  com.google.gson.internal.bind.TypeAdapters.36.$SwitchMap$com$google$gson$stream$JsonToken int[] \l0x0006: INVOKE  (r2 I:int) = (r0 I:com.google.gson.stream.JsonToken) com.google.gson.stream.JsonToken.ordinal():int type: VIRTUAL \l0x000a: AGET  (r1 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[3, 4] t:[0x002e, 0x0029] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: NEW_INSTANCE  (r4 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException \l0x0014: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0016: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0019: CONST_STR  (r2 I:java.lang.String) =  \"Expecting number, got: \" \l0x001b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0021: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0025: INVOKE  \l  (r4 I:com.google.gson.JsonSyntaxException)\l  (r0 I:java.lang.String)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l0x002c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: RETURN  (r4 I:java.lang.Number) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: NEW_INSTANCE  (r0 I:com.google.gson.internal.LazilyParsedNumber) =  com.google.gson.internal.LazilyParsedNumber \l0x0030: INVOKE  (r4 I:java.lang.String) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextString():java.lang.String type: VIRTUAL \l0x0034: INVOKE  \l  (r0 I:com.google.gson.internal.LazilyParsedNumber)\l  (r4 I:java.lang.String)\l com.google.gson.internal.LazilyParsedNumber.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|0x0037: RETURN  (r0 I:java.lang.Number) \l}"];
MethodNode[shape=record,label="{public java.lang.Number com.google.gson.internal.bind.TypeAdapters.14.read((r3 'this' I:com.google.gson.internal.bind.TypeAdapters$14 A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

