digraph "CFG forcom.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/lang\/Object;" {
subgraph cluster_Region_481832945 {
label = "R(1:(2:(2:2|3)|(2:4|(4:6|(3:9|(1:(1:14)(0))|15)|16|17))))";
node [shape=record,color=blue];
subgraph cluster_Region_1307577619 {
label = "R(2:(2:2|3)|(2:4|(4:6|(3:9|(1:(1:14)(0))|15)|16|17)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_805470256 {
label = "IF [B:1:0x0006] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.peek() == com.google.gson.stream.JsonToken.NULL) goto L_0x0008\l}"];
subgraph cluster_Region_688253296 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|r4.nextNull()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_843493893 {
label = "R(2:4|(4:6|(3:9|(1:(1:14)(0))|15)|16|17))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|java.lang.Object T r0 = r3.constructor.construct()\l}"];
subgraph cluster_TryCatchRegion_1948224518 {
label = "Try: R(4:6|(3:9|(1:(1:14)(0))|15)|16|17) catches: R(2:21|23), R(2:18|20)";
node [shape=record,color=blue];
subgraph cluster_Region_2049281209 {
label = "R(4:6|(3:9|(1:(1:14)(0))|15)|16|17)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\lSplitter:B:5:0x0013\l|r4.beginObject()     \/\/ Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l}"];
subgraph cluster_LoopRegion_961191683 {
label = "LOOP:0: (3:9|(1:(1:14)(0))|15)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001a|Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l|if (r4.hasNext() != false) goto L_0x001c     \/\/ Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l}"];
subgraph cluster_Region_1273323066 {
label = "R(3:9|(1:(1:14)(0))|15)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001c|Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l|com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField r1 = r3.boundFields.get(r4.nextName())     \/\/ Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l}"];
subgraph cluster_IfRegion_1278479321 {
label = "IF [B:10:0x0028] THEN: R(1:(1:14)(0)) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0028|Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l|if (r1 != null) goto L_0x002a     \/\/ Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l}"];
subgraph cluster_Region_502111002 {
label = "R(1:(1:14)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_607552110 {
label = "IF [B:12:0x002c] THEN: R(1:14) ELSE: R(0)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002c|Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l|if (r1.deserialized != false) goto L_0x002f     \/\/ Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l}"];
subgraph cluster_Region_704127563 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002f|Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l|r1.read(r4, r0)     \/\/ Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l}"];
}
subgraph cluster_Region_463843262 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_15 [shape=record,label="{15\:\ 0x0033|Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l|r4.skipValue()     \/\/ Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x0037|r4.endObject()\l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|RETURN\l|return r0\l}"];
}
subgraph cluster_Region_332562288 {
label = "R(2:21|23) | ExcHandler: IllegalStateException (r4v1 'e' java.lang.IllegalStateException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0042|ExcHandler: IllegalStateException (r4v1 'e' java.lang.IllegalStateException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0013\l}"];
Node_23 [shape=record,label="{23\:\ 0x0048|throw new com.google.gson.JsonSyntaxException((java.lang.Throwable) r4)\l}"];
}
subgraph cluster_Region_2114803854 {
label = "R(2:18|20) | ExcHandler: IllegalAccessException (r4v2 'e' java.lang.IllegalAccessException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x003b|ExcHandler: IllegalAccessException (r4v2 'e' java.lang.IllegalAccessException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0013\l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|throw new java.lang.AssertionError(r4)\l}"];
}
}
}
}
}
subgraph cluster_Region_332562288 {
label = "R(2:21|23) | ExcHandler: IllegalStateException (r4v1 'e' java.lang.IllegalStateException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0042|ExcHandler: IllegalStateException (r4v1 'e' java.lang.IllegalStateException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0013\l}"];
Node_23 [shape=record,label="{23\:\ 0x0048|throw new com.google.gson.JsonSyntaxException((java.lang.Throwable) r4)\l}"];
}
subgraph cluster_Region_2114803854 {
label = "R(2:18|20) | ExcHandler: IllegalAccessException (r4v2 'e' java.lang.IllegalAccessException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x003b|ExcHandler: IllegalAccessException (r4v2 'e' java.lang.IllegalAccessException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0013\l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|throw new java.lang.AssertionError(r4)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0013|SYNTHETIC\lSplitter:B:5:0x0013\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0016|LOOP_START\lCatch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\lLOOP:0: B:7:0x0016\-\>B:24:0x0016\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002a|Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002e|Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x003c}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0043}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0016|LOOP_END\lSYNTHETIC\lLOOP:0: B:7:0x0016\-\>B:24:0x0016\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0037|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0016|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0016|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public T com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter.read((r3v0 'this' com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter A[IMMUTABLE_TYPE, THIS]), (r4v0 com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/stream\/JsonReader;, )TT;]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_25[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_15[style=dashed];
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_26;
Node_15 -> Node_27;
Node_16 -> Node_17;
Node_21 -> Node_22;
Node_18 -> Node_19;
Node_21 -> Node_22;
Node_18 -> Node_19;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_5 -> Node_21;
Node_5 -> Node_18;
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_13 -> Node_15;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_24 -> Node_7;
Node_25 -> Node_16;
Node_26 -> Node_24;
Node_27 -> Node_24;
}

