digraph "CFG forcom.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l0x000b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r4 I:T) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r0 I:com.google.gson.internal.ObjectConstructor\<T\>) = \l  (r3 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter.constructor com.google.gson.internal.ObjectConstructor \l0x000f: INVOKE  (r0 I:java.lang.Object) = (r0 I:com.google.gson.internal.ObjectConstructor) com.google.gson.internal.ObjectConstructor.construct():java.lang.Object type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|SYNTHETIC\lSplitter:B:5:0x0013\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0013\l|0x0013: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginObject():void type: VIRTUAL A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}, TRY_ENTER]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: INVOKE  (r1 I:boolean) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0037 A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: INVOKE  (r1 I:java.lang.String) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextName():java.lang.String type: VIRTUAL A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l0x0020: IGET  (r2 I:java.util.Map\<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField\>) = \l  (r3 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter.boundFields java.util.Map A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l0x0022: INVOKE  (r1 I:java.lang.Object) = (r2 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l0x0026: CHECK_CAST  (r1 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) = (com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0033 A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: IGET  (r2 I:boolean) = \l  (r1 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField.deserialized boolean A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|0x002c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002f A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|0x002e: GOTO  \-\> 0x0033 A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x002f|0x002f: INVOKE  \l  (r1 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField)\l  (r4 I:com.google.gson.stream.JsonReader)\l  (r0 I:java.lang.Object)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField.read(com.google.gson.stream.JsonReader, java.lang.Object):void type: VIRTUAL A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l0x0032: GOTO  \-\> 0x0016 A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|0x0033: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.skipValue():void type: VIRTUAL A[Catch:\{ IllegalStateException \-\> 0x0042, IllegalAccessException \-\> 0x003b \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|0x0037: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endObject():void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x003a|0x003a: RETURN  (r0 I:T) \l}"];
Node_19 [shape=record,label="{19\:\ 0x003b|ExcHandler: IllegalAccessException null\lSplitter:B:5:0x0013\l|0x003b: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x003c|0x003c: NEW_INSTANCE  (r0 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x003e: INVOKE  (r0 I:java.lang.AssertionError), (r4 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0041|0x0041: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0042|ExcHandler: IllegalStateException null\lSplitter:B:5:0x0013\l|0x0042: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x0043|0x0043: NEW_INSTANCE  (r0 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException \l0x0045: INVOKE  \l  (r0 I:com.google.gson.JsonSyntaxException)\l  (r4 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x0048|0x0048: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public T com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter.read((r3 'this' I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/stream\/JsonReader;, )TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_22;
Node_5 -> Node_19;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_7;
Node_15 -> Node_7;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

