digraph "CFG forcom.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter.write(Lcom\/google\/gson\/stream\/JsonWriter;Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 != null) goto L_0x0006\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|r4.nullValue()\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|r4.beginObject()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|SYNTHETIC\lSplitter:B:4:0x0009\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ IllegalAccessException \-\> 0x0032 \}\lSplitter:B:4:0x0009\l|java.util.Iterator r0 = r3.boundFields.values().iterator()     \/\/ Catch:\{ IllegalAccessException \-\> 0x0032 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|LOOP_START\lCatch:\{ IllegalAccessException \-\> 0x0032 \}\lLOOP:0: B:6:0x0013\-\>B:16:0x0013\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|Catch:\{ IllegalAccessException \-\> 0x0032 \}\l|if (r0.hasNext() == false) goto L_0x002e     \/\/ Catch:\{ IllegalAccessException \-\> 0x0032 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|Catch:\{ IllegalAccessException \-\> 0x0032 \}\l|com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField r1 = r0.next()     \/\/ Catch:\{ IllegalAccessException \-\> 0x0032 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|Catch:\{ IllegalAccessException \-\> 0x0032 \}\l|if (r1.writeField(r5) == false) goto L_0x0013     \/\/ Catch:\{ IllegalAccessException \-\> 0x0032 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|Catch:\{ IllegalAccessException \-\> 0x0032 \}\l|r4.name(r1.name)     \/\/ Catch:\{ IllegalAccessException \-\> 0x0032 \}\lr1.write(r4, r5)     \/\/ Catch:\{ IllegalAccessException \-\> 0x0032 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|r4.endObject()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|ExcHandler: IllegalAccessException (r4v1 'e' java.lang.IllegalAccessException A[CUSTOM_DECLARE])\lSplitter:B:4:0x0009\l|java.lang.IllegalAccessException r4 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033}"];
Node_15 [shape=record,label="{15\:\ 0x0038|throw new java.lang.AssertionError(r4)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0013|LOOP_END\lSYNTHETIC\lLOOP:0: B:6:0x0013\-\>B:16:0x0013\l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0013|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0013|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.Adapter.write((r3v0 'this' com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter A[IMMUTABLE_TYPE, THIS]), (r4v0 com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/stream\/JsonWriter;, TT;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_6;
Node_17 -> Node_11;
Node_18 -> Node_16;
Node_19 -> Node_16;
}

