digraph "CFG forcom.google.gson.internal.bind.TimeTypeAdapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/sql\/Time;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL A[Catch:\{ all \-\> 0x002b \}, TRY_ENTER]\l0x0005: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000f A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL A[Catch:\{ all \-\> 0x002b \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: RETURN  (r4 I:java.sql.Time) \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|SYNTHETIC\lSplitter:B:8:0x000f\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x000f\l|0x000f: IGET  (r0 I:java.text.DateFormat) = (r3 I:com.google.gson.internal.bind.TimeTypeAdapter) com.google.gson.internal.bind.TimeTypeAdapter.format java.text.DateFormat A[Catch:\{ ParseException \-\> 0x0024 \}, TRY_ENTER]\l0x0011: INVOKE  (r4 I:java.lang.String) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextString():java.lang.String type: VIRTUAL A[Catch:\{ ParseException \-\> 0x0024 \}]\l0x0015: INVOKE  (r4 I:java.util.Date) = (r0 I:java.text.DateFormat), (r4 I:java.lang.String) java.text.DateFormat.parse(java.lang.String):java.util.Date type: VIRTUAL A[Catch:\{ ParseException \-\> 0x0024 \}]\l0x0019: NEW_INSTANCE  (r0 I:java.sql.Time) =  java.sql.Time A[Catch:\{ ParseException \-\> 0x0024 \}]\l0x001b: INVOKE  (r1 I:long) = (r4 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL A[Catch:\{ ParseException \-\> 0x0024 \}]\l0x001f: INVOKE  (r0 I:java.sql.Time), (r1 I:long) java.sql.Time.\<init\>(long):void type: DIRECT A[Catch:\{ ParseException \-\> 0x0024 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: RETURN  (r0 I:java.sql.Time) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|ExcHandler: ParseException null\lSplitter:B:8:0x000f\l|0x0024: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|SYNTHETIC\lSplitter:B:13:0x0025\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0025\l|0x0025: NEW_INSTANCE  (r0 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException A[Catch:\{ all \-\> 0x002b \}, TRY_ENTER]\l0x0027: INVOKE  \l  (r0 I:com.google.gson.JsonSyntaxException)\l  (r4 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x002b \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|0x002a: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x002b \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x002b|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x002b: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x002c|0x002c: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|0x002d: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized java.sql.Time com.google.gson.internal.bind.TimeTypeAdapter.read((r3 'this' I:com.google.gson.internal.bind.TimeTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

