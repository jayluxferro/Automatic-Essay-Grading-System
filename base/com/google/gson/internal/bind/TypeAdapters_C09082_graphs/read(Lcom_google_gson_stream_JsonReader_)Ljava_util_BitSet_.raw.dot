digraph "CFG forcom.google.gson.internal.bind.TypeAdapters.2.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/util\/BitSet;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.BitSet) =  java.util.BitSet \l0x0002: INVOKE  (r0 I:java.util.BitSet) java.util.BitSet.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginArray():void type: VIRTUAL \l0x0008: INVOKE  (r1 I:com.google.gson.stream.JsonToken) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: SGET  (r4 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.END_ARRAY com.google.gson.stream.JsonToken \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0070 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: SGET  (r4 I:int[]) =  com.google.gson.internal.bind.TypeAdapters.36.$SwitchMap$com$google$gson$stream$JsonToken int[] \l0x0014: INVOKE  (r5 I:int) = (r1 I:com.google.gson.stream.JsonToken) com.google.gson.stream.JsonToken.ordinal():int type: VIRTUAL \l0x0018: AGET  (r4 I:?[int, float]) = (r4 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l0x001a: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3] t:[0x005e, 0x0059, 0x0035] \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: NEW_INSTANCE  (r7 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException \l0x0020: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0022: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0025: CONST_STR  (r2 I:java.lang.String) =  \"Invalid bitset value type: \" \l0x0027: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x002d: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0031: INVOKE  \l  (r7 I:com.google.gson.JsonSyntaxException)\l  (r0 I:java.lang.String)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|0x0034: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: INVOKE  (r1 I:java.lang.String) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextString():java.lang.String type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|SYNTHETIC\lSplitter:B:8:0x0039\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0039\l|0x0039: INVOKE  (r4 I:int) = (r1 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x0042 \}, TRY_ENTER]\l0x003c: NOP   A[TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|0x003d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0040 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: NEW_INSTANCE  (r7 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException \l0x0044: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0046: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0049: CONST_STR  (r2 I:java.lang.String) =  \"Error: Expecting: bitset number value (1, 0), Found: \" \l0x004b: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0051: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0055: INVOKE  \l  (r7 I:com.google.gson.JsonSyntaxException)\l  (r0 I:java.lang.String)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:8:0x0039\l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|0x0058: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|0x0059: INVOKE  (r5 I:boolean) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextBoolean():boolean type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x005e|0x005e: INVOKE  (r1 I:int) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextInt():int type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0062|0x0062: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0040 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0064|0x0064: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0069 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|0x0066: INVOKE  (r0 I:java.util.BitSet), (r3 I:int) java.util.BitSet.set(int):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0069|0x0069: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x006b: INVOKE  (r1 I:com.google.gson.stream.JsonToken) = (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0070|0x0070: INVOKE  (r7 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endArray():void type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0073|0x0073: RETURN  (r0 I:java.util.BitSet) \l}"];
MethodNode[shape=record,label="{public java.util.BitSet com.google.gson.internal.bind.TypeAdapters.2.read((r6 'this' I:com.google.gson.internal.bind.TypeAdapters$2 A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_22;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_4 -> Node_16;
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_19[style=dashed];
Node_12 -> Node_19;
Node_13 -> Node_15;
Node_14 -> Node_13;
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_12;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_1;
Node_22 -> Node_23;
}

