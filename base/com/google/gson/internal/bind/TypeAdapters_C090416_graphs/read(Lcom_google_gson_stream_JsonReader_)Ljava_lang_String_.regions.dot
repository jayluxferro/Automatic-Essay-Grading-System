digraph "CFG forcom.google.gson.internal.bind.TypeAdapters.16.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/lang\/String;" {
subgraph cluster_Region_1453586702 {
label = "R(2:0|(2:2|3)(1:(1:7)(1:9)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.google.gson.stream.JsonToken com.google.gson.stream.JsonToken r0 = r3.peek()\l}"];
subgraph cluster_IfRegion_849617278 {
label = "IF [B:1:0x0006] THEN: R(2:2|3) ELSE: R(1:(1:7)(1:9))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r0 == com.google.gson.stream.JsonToken.NULL) goto L_0x0008\l}"];
subgraph cluster_Region_797794048 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|r3.nextNull()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|return null\l}"];
}
subgraph cluster_Region_2061286796 {
label = "R(1:(1:7)(1:9)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_188325117 {
label = "IF [B:5:0x000f] THEN: R(1:7) ELSE: R(1:9) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|if (r0 == com.google.gson.stream.JsonToken.BOOLEAN) goto L_0x0011\l}"];
subgraph cluster_Region_2102375631 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|RETURN\l|return java.lang.Boolean.toString(r3.nextBoolean())\l}"];
}
subgraph cluster_Region_484351001 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001e|RETURN\l|return r3.nextString()\l}"];
}
}
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x000d}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0011}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001a}"];
MethodNode[shape=record,label="{public java.lang.String com.google.gson.internal.bind.TypeAdapters.16.read((r2v0 'this' com.google.gson.internal.bind.TypeAdapters$16 A[IMMUTABLE_TYPE, THIS]), (r3v0 com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

