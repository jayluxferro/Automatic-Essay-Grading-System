digraph "CFG forcom.google.gson.internal.bind.CollectionTypeAdapterFactory.create(Lcom\/google\/gson\/Gson;Lcom\/google\/gson\/reflect\/TypeToken;)Lcom\/google\/gson\/TypeAdapter;" {
subgraph cluster_Region_1271701497 {
label = "R(2:0|(2:(1:2)|(2:3|4)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.reflect.Type java.lang.reflect.Type r0 = r5.getType()\ljava.lang.Class java.lang.Class\<? super T\> r1 = r5.getRawType()\l}"];
subgraph cluster_Region_455499278 {
label = "R(2:(1:2)|(2:3|4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_934552324 {
label = "IF [B:1:0x000e] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000e|if (java.util.Collection.class.isAssignableFrom(r1) == false) goto L_0x0010\l}"];
subgraph cluster_Region_1720511801 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0010|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_150881581 {
label = "R(2:3|4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0012|java.lang.reflect.Type java.lang.reflect.Type r0 = com.google.gson.internal.C$Gson$Types.getCollectionElementType(r0, r1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|RETURN\l|return new com.google.gson.internal.bind.CollectionTypeAdapterFactory.C0885Adapter(r4, r0, r4.getAdapter(com.google.gson.reflect.TypeToken.get(r0)), r3.constructorConstructor.get(r5))\l}"];
}
}
}
MethodNode[shape=record,label="{public com.google.gson.TypeAdapter\<T\> com.google.gson.internal.bind.CollectionTypeAdapterFactory.create((r3v0 'this' com.google.gson.internal.bind.CollectionTypeAdapterFactory A[IMMUTABLE_TYPE, THIS]), (r4v0 com.google.gson.Gson A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.google.gson.reflect.TypeToken\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/google\/gson\/Gson;, Lcom\/google\/gson\/reflect\/TypeToken\<, TT;\>;), Lcom\/google\/gson\/TypeAdapter\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
}

