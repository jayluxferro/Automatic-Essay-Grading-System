digraph "CFG forcom.google.gson.internal.bind.CollectionTypeAdapterFactory.create(Lcom\/google\/gson\/Gson;Lcom\/google\/gson\/reflect\/TypeToken;)Lcom\/google\/gson\/TypeAdapter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.reflect.Type) = (r5 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.getType():java.lang.reflect.Type type: VIRTUAL \l0x0004: INVOKE  (r1 I:java.lang.Class) = (r5 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.getRawType():java.lang.Class type: VIRTUAL \l0x0008: CONST_CLASS  (r2 I:java.lang.Class\<java.util.Collection\>) =  java.util.Collection.class \l0x000a: INVOKE  (r2 I:boolean) = (r2 I:java.lang.Class), (r1 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: RETURN  (r4 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: INVOKE  (r0 I:java.lang.reflect.Type) = (r0 I:java.lang.reflect.Type), (r1 I:java.lang.Class) com.google.gson.internal.$Gson$Types.getCollectionElementType(java.lang.reflect.Type, java.lang.Class):java.lang.reflect.Type type: STATIC \l0x0016: INVOKE  (r1 I:com.google.gson.reflect.TypeToken) = (r0 I:java.lang.reflect.Type) com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type):com.google.gson.reflect.TypeToken type: STATIC \l0x001a: INVOKE  (r1 I:com.google.gson.TypeAdapter) = \l  (r4 I:com.google.gson.Gson)\l  (r1 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l0x001e: IGET  (r2 I:com.google.gson.internal.ConstructorConstructor) = \l  (r3 I:com.google.gson.internal.bind.CollectionTypeAdapterFactory)\l com.google.gson.internal.bind.CollectionTypeAdapterFactory.constructorConstructor com.google.gson.internal.ConstructorConstructor \l0x0020: INVOKE  (r5 I:com.google.gson.internal.ObjectConstructor) = \l  (r2 I:com.google.gson.internal.ConstructorConstructor)\l  (r5 I:com.google.gson.reflect.TypeToken)\l com.google.gson.internal.ConstructorConstructor.get(com.google.gson.reflect.TypeToken):com.google.gson.internal.ObjectConstructor type: VIRTUAL \l0x0024: NEW_INSTANCE  (r2 I:com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter) =  com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter \l0x0026: INVOKE  \l  (r2 I:com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter)\l  (r4 I:com.google.gson.Gson)\l  (r0 I:java.lang.reflect.Type)\l  (r1 I:com.google.gson.TypeAdapter)\l  (r5 I:com.google.gson.internal.ObjectConstructor)\l com.google.gson.internal.bind.CollectionTypeAdapterFactory.Adapter.\<init\>(com.google.gson.Gson, java.lang.reflect.Type, com.google.gson.TypeAdapter, com.google.gson.internal.ObjectConstructor):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
MethodNode[shape=record,label="{public com.google.gson.TypeAdapter\<T\> com.google.gson.internal.bind.CollectionTypeAdapterFactory.create((r3 'this' I:com.google.gson.internal.bind.CollectionTypeAdapterFactory A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.gson.Gson A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.google.gson.reflect.TypeToken\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/google\/gson\/Gson;, Lcom\/google\/gson\/reflect\/TypeToken\<, TT;\>;), Lcom\/google\/gson\/TypeAdapter\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

