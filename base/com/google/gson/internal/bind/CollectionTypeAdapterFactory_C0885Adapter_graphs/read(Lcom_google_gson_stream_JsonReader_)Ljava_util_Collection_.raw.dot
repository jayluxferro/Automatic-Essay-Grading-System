digraph "CFG forcom.google.gson.internal.bind.CollectionTypeAdapterFactory.Adapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/util\/Collection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r3 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r3 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r3 I:java.util.Collection\<E\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r0 I:com.google.gson.internal.ObjectConstructor\<? extends java.util.Collection\<E\>\>) = \l  (r2 I:com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.CollectionTypeAdapterFactory.Adapter.constructor com.google.gson.internal.ObjectConstructor \l0x000f: INVOKE  (r0 I:java.lang.Object) = (r0 I:com.google.gson.internal.ObjectConstructor) com.google.gson.internal.ObjectConstructor.construct():java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  (r3 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginArray():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: INVOKE  (r1 I:boolean) = (r3 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0028 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: IGET  (r1 I:com.google.gson.TypeAdapter\<E\>) = \l  (r2 I:com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter)\l com.google.gson.internal.bind.CollectionTypeAdapterFactory.Adapter.elementTypeAdapter com.google.gson.TypeAdapter \l0x0020: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:com.google.gson.TypeAdapter)\l  (r3 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0024: INVOKE  (r0 I:java.util.Collection), (r1 I:java.lang.Object) java.util.Collection.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: INVOKE  (r3 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endArray():void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: RETURN  (r0 I:java.util.Collection\<E\>) \l}"];
MethodNode[shape=record,label="{public java.util.Collection\<E\> com.google.gson.internal.bind.CollectionTypeAdapterFactory.Adapter.read((r2 'this' I:com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/stream\/JsonReader;, ), Ljava\/util\/Collection\<, TE;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
}

