digraph "CFG forcom.google.gson.internal.bind.TypeAdapters.29.write(Lcom\/google\/gson\/stream\/JsonWriter;Lcom\/google\/gson\/JsonElement;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00b3 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:boolean) = (r4 I:com.google.gson.JsonElement) com.google.gson.JsonElement.isJsonNull():boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r0 I:boolean) = (r4 I:com.google.gson.JsonElement) com.google.gson.JsonElement.isJsonPrimitive():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r4 I:com.google.gson.JsonPrimitive) = (r4 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsJsonPrimitive():com.google.gson.JsonPrimitive type: VIRTUAL \l0x0014: INVOKE  (r0 I:boolean) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.isNumber():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0023 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: INVOKE  (r4 I:java.lang.Number) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.getAsNumber():java.lang.Number type: VIRTUAL \l0x001e: INVOKE  \l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r4 I:java.lang.Number)\l com.google.gson.stream.JsonWriter.value(java.lang.Number):com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: INVOKE  (r0 I:boolean) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.isBoolean():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0032 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: INVOKE  (r4 I:boolean) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.getAsBoolean():boolean type: VIRTUAL \l0x002d: INVOKE  (r3 I:com.google.gson.stream.JsonWriter), (r4 I:boolean) com.google.gson.stream.JsonWriter.value(boolean):com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|0x0032: INVOKE  (r4 I:java.lang.String) = (r4 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.getAsString():java.lang.String type: VIRTUAL \l0x0036: INVOKE  \l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r4 I:java.lang.String)\l com.google.gson.stream.JsonWriter.value(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: INVOKE  (r0 I:boolean) = (r4 I:com.google.gson.JsonElement) com.google.gson.JsonElement.isJsonArray():boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0060 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|0x0041: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.beginArray():com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0044: INVOKE  (r4 I:com.google.gson.JsonArray) = (r4 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsJsonArray():com.google.gson.JsonArray type: VIRTUAL \l0x0048: INVOKE  (r4 I:java.util.Iterator) = (r4 I:com.google.gson.JsonArray) com.google.gson.JsonArray.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|0x004c: INVOKE  (r0 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x0050|0x0050: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x005c \l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|0x0052: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0056: CHECK_CAST  (r0 I:com.google.gson.JsonElement) = (com.google.gson.JsonElement) (r0 I:?[OBJECT, ARRAY]) \l0x0058: INVOKE  \l  (r2 I:com.google.gson.internal.bind.TypeAdapters$29)\l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r0 I:com.google.gson.JsonElement)\l com.google.gson.internal.bind.TypeAdapters.29.write(com.google.gson.stream.JsonWriter, com.google.gson.JsonElement):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x005c|0x005c: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.endArray():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0060|0x0060: INVOKE  (r0 I:boolean) = (r4 I:com.google.gson.JsonElement) com.google.gson.JsonElement.isJsonObject():boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0064|0x0064: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0098 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0066|0x0066: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.beginObject():com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0069: INVOKE  (r4 I:com.google.gson.JsonObject) = (r4 I:com.google.gson.JsonElement) com.google.gson.JsonElement.getAsJsonObject():com.google.gson.JsonObject type: VIRTUAL \l0x006d: INVOKE  (r4 I:java.util.Set) = (r4 I:com.google.gson.JsonObject) com.google.gson.JsonObject.entrySet():java.util.Set type: VIRTUAL \l0x0071: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x0075|0x0075: INVOKE  (r0 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_24 [shape=record,label="{24\:\ 0x0079|0x0079: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0094 \l}"];
Node_25 [shape=record,label="{25\:\ 0x007b|0x007b: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x007f: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) \l0x0081: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0085: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l0x0087: INVOKE  \l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r1 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x008a: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x008e: CHECK_CAST  (r0 I:com.google.gson.JsonElement) = (com.google.gson.JsonElement) (r0 I:?[OBJECT, ARRAY]) \l0x0090: INVOKE  \l  (r2 I:com.google.gson.internal.bind.TypeAdapters$29)\l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r0 I:com.google.gson.JsonElement)\l com.google.gson.internal.bind.TypeAdapters.29.write(com.google.gson.stream.JsonWriter, com.google.gson.JsonElement):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0094|0x0094: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.endObject():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x0098|0x0098: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x009a: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x009c: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x009f: CONST_STR  (r1 I:java.lang.String) =  \"Couldn't write \" \l0x00a1: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a4: INVOKE  (r4 I:java.lang.Class) = (r4 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x00a8: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00ab: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00af: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b2|0x00b2: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b3|0x00b3: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.nullValue():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b6|0x00b6: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.gson.internal.bind.TypeAdapters.29.write((r2 'this' I:com.google.gson.internal.bind.TypeAdapters$29 A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.google.gson.JsonElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_29;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_2 -> Node_29[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_30;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_30;
Node_12 -> Node_30;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_16;
Node_19 -> Node_30;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_23;
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_29 -> Node_30;
}

