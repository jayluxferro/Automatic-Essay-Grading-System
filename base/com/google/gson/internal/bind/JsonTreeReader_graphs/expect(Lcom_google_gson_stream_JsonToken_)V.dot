digraph "CFG forcom.google.gson.internal.bind.JsonTreeReader.expect(Lcom\/google\/gson\/stream\/JsonToken;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (peek() != r4) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Expected \")\lr1.append(r4)\lr1.append(\" but was \")\lr1.append(peek())\lr1.append(locationString())\l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|throw new java.lang.IllegalStateException(r1.toString())\l}"];
MethodNode[shape=record,label="{private void com.google.gson.internal.bind.JsonTreeReader.expect((r3v0 'this' com.google.gson.internal.bind.JsonTreeReader A[IMMUTABLE_TYPE, THIS]), (r4v0 com.google.gson.stream.JsonToken A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

