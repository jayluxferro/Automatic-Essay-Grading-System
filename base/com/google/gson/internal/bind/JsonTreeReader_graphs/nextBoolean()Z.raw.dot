digraph "CFG forcom.google.gson.internal.bind.JsonTreeReader.nextBoolean()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.BOOLEAN com.google.gson.stream.JsonToken \l0x0002: INVOKE  \l  (r4 I:com.google.gson.internal.bind.JsonTreeReader)\l  (r0 I:com.google.gson.stream.JsonToken)\l com.google.gson.internal.bind.JsonTreeReader.expect(com.google.gson.stream.JsonToken):void type: DIRECT \l0x0005: INVOKE  (r0 I:java.lang.Object) = (r4 I:com.google.gson.internal.bind.JsonTreeReader) com.google.gson.internal.bind.JsonTreeReader.popStack():java.lang.Object type: DIRECT \l0x0009: CHECK_CAST  (r0 I:com.google.gson.JsonPrimitive) = (com.google.gson.JsonPrimitive) (r0 I:?[OBJECT, ARRAY]) \l0x000b: INVOKE  (r0 I:boolean) = (r0 I:com.google.gson.JsonPrimitive) com.google.gson.JsonPrimitive.getAsBoolean():boolean type: VIRTUAL \l0x000f: IGET  (r1 I:int) = (r4 I:com.google.gson.internal.bind.JsonTreeReader) com.google.gson.internal.bind.JsonTreeReader.stackSize int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IGET  (r1 I:int[]) = (r4 I:com.google.gson.internal.bind.JsonTreeReader) com.google.gson.internal.bind.JsonTreeReader.pathIndices int[] \l0x0015: IGET  (r2 I:int) = (r4 I:com.google.gson.internal.bind.JsonTreeReader) com.google.gson.internal.bind.JsonTreeReader.stackSize int \l0x0017: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l0x0019: AGET  (r3 I:?[int, float]) = (r1 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x001b: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x001d: APUT  \l  (r1 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean com.google.gson.internal.bind.JsonTreeReader.nextBoolean((r4 'this' I:com.google.gson.internal.bind.JsonTreeReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

