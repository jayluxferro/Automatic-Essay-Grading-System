digraph "CFG forcom.google.gson.internal.bind.JsonTreeWriter.value(Ljava\/lang\/Number;)Lcom\/google\/gson\/stream\/JsonWriter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 != null) goto L_0x0007\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return nullValue()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (isLenient() != false) goto L_0x0035\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|double r0 = r4.doubleValue()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|if (java.lang.Double.isNaN(r0) != false) goto L_0x001e\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017}"];
Node_8 [shape=record,label="{8\:\ 0x001b|if (java.lang.Double.isInfinite(r0) != false) goto L_0x001e\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"JSON forbids NaN and infinities: \")\lr1.append(r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|put(new com.google.gson.JsonPrimitive(r4))\l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|RETURN\l|return r3\l}"];
MethodNode[shape=record,label="{public com.google.gson.stream.JsonWriter com.google.gson.internal.bind.JsonTreeWriter.value((r3v0 'this' com.google.gson.internal.bind.JsonTreeWriter A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.Number A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_12;
}

