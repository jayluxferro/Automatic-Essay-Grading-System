digraph "CFG forcom.google.gson.internal.bind.JsonTreeWriter.endObject()Lcom\/google\/gson\/stream\/JsonWriter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.google.gson.JsonElement\>) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.stack java.util.List \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:java.lang.String) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.pendingName java.lang.String \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: INVOKE  (r0 I:com.google.gson.JsonElement) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.peek():com.google.gson.JsonElement type: DIRECT \l0x0010: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) com.google.gson.JsonObject \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0022 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IGET  (r0 I:java.util.List\<com.google.gson.JsonElement\>) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.stack java.util.List \l0x0016: IGET  (r1 I:java.util.List\<com.google.gson.JsonElement\>) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.stack java.util.List \l0x0018: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x001c: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x001e: INVOKE  (r0 I:java.util.List), (r1 I:int) java.util.List.remove(int):java.lang.Object type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: RETURN  (r2 I:com.google.gson.stream.JsonWriter) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0024: INVOKE  (r0 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x002a: INVOKE  (r0 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.google.gson.stream.JsonWriter com.google.gson.internal.bind.JsonTreeWriter.endObject((r2 'this' I:com.google.gson.internal.bind.JsonTreeWriter A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

