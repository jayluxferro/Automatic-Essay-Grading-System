digraph "CFG forcom.google.gson.internal.bind.JsonTreeWriter.put(Lcom\/google\/gson\/JsonElement;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.String) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.pendingName java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = (r3 I:com.google.gson.JsonElement) com.google.gson.JsonElement.isJsonNull():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r0 I:boolean) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.getSerializeNulls():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r0 I:com.google.gson.JsonElement) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.peek():com.google.gson.JsonElement type: DIRECT \l0x0014: CHECK_CAST  (r0 I:com.google.gson.JsonObject) = (com.google.gson.JsonObject) (r0 I:?[OBJECT, ARRAY]) \l0x0016: IGET  (r1 I:java.lang.String) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.pendingName java.lang.String \l0x0018: INVOKE  \l  (r0 I:com.google.gson.JsonObject)\l  (r1 I:java.lang.String)\l  (r3 I:com.google.gson.JsonElement)\l com.google.gson.JsonObject.add(java.lang.String, com.google.gson.JsonElement):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: IPUT  \l  (r3 I:java.lang.String)\l  (r2 I:com.google.gson.internal.bind.JsonTreeWriter)\l com.google.gson.internal.bind.JsonTreeWriter.pendingName java.lang.String \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IGET  (r0 I:java.util.List\<com.google.gson.JsonElement\>) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.stack java.util.List \l0x0021: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: IPUT  \l  (r3 I:com.google.gson.JsonElement)\l  (r2 I:com.google.gson.internal.bind.JsonTreeWriter)\l com.google.gson.internal.bind.JsonTreeWriter.product com.google.gson.JsonElement \l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|0x002a: INVOKE  (r0 I:com.google.gson.JsonElement) = (r2 I:com.google.gson.internal.bind.JsonTreeWriter) com.google.gson.internal.bind.JsonTreeWriter.peek():com.google.gson.JsonElement type: DIRECT \l0x002e: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) com.google.gson.JsonArray \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0038 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: CHECK_CAST  (r0 I:com.google.gson.JsonArray) = (com.google.gson.JsonArray) (r0 I:?[OBJECT, ARRAY]) \l0x0034: INVOKE  \l  (r0 I:com.google.gson.JsonArray)\l  (r3 I:com.google.gson.JsonElement)\l com.google.gson.JsonArray.add(com.google.gson.JsonElement):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: RETURN   \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: NEW_INSTANCE  (r3 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x003a: INVOKE  (r3 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void com.google.gson.internal.bind.JsonTreeWriter.put((r2 'this' I:com.google.gson.internal.bind.JsonTreeWriter A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.gson.JsonElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

