digraph "CFG forcom.google.gson.internal.bind.TypeAdapters.27.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/util\/Calendar;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r10.peek() != com.google.gson.stream.JsonToken.NULL) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|r10.nextNull()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|return null\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|r10.beginObject()\lr2 = 0\lr3 = 0\lr4 = 0\lr5 = 0\lr6 = 0\lr7 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|LOOP_START\lPHI: r2 r3 r4 r5 r6 r7 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:4:0x000d, B:27:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:4:0x000d, B:27:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:4:0x000d, B:27:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:4:0x000d, B:27:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:4:0x000d, B:27:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:4:0x000d, B:27:0x0017] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0017\-\>B:27:0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if (r10.peek() == com.google.gson.stream.JsonToken.END_OBJECT) goto L_0x0063\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|java.lang.String r0 = r10.nextName()\lint r1 = r10.nextInt()\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|if (YEAR.equals(r0) == false) goto L_0x0031\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|r2 = r1\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031}"];
Node_11 [shape=record,label="{11\:\ 0x0037|if (MONTH.equals(r0) == false) goto L_0x003b\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|r3 = r1\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b}"];
Node_14 [shape=record,label="{14\:\ 0x0041|if (DAY_OF_MONTH.equals(r0) == false) goto L_0x0045\l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|r4 = r1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0045}"];
Node_17 [shape=record,label="{17\:\ 0x004b|if (HOUR_OF_DAY.equals(r0) == false) goto L_0x004f\l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|r5 = r1\l}"];
Node_19 [shape=record,label="{19\:\ 0x004f}"];
Node_20 [shape=record,label="{20\:\ 0x0055|if (MINUTE.equals(r0) == false) goto L_0x0059\l}"];
Node_21 [shape=record,label="{21\:\ 0x0057|r6 = r1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0059}"];
Node_23 [shape=record,label="{23\:\ 0x005f|if (SECOND.equals(r0) == false) goto L_0x0017\l}"];
Node_24 [shape=record,label="{24\:\ 0x0061|r7 = r1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0063|r10.endObject()\l}"];
Node_26 [shape=record,label="{26\:\ 0x006c|RETURN\l|return new java.util.GregorianCalendar(r2, r3, r4, r5, r6, r7)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0017|LOOP_END\lSYNTHETIC\lPHI: r2 r3 r4 r5 r6 r7 \l  PHI: (r2v2 int) = (r2v1 int), (r2v1 int), (r2v1 int), (r2v1 int), (r2v1 int), (r2v1 int), (r2v3 int) binds: [B:34:0x0017, B:35:0x0017, B:33:0x0017, B:32:0x0017, B:31:0x0017, B:30:0x0017, B:29:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 int) = (r3v1 int), (r3v1 int), (r3v1 int), (r3v1 int), (r3v1 int), (r3v3 int), (r3v1 int) binds: [B:34:0x0017, B:35:0x0017, B:33:0x0017, B:32:0x0017, B:31:0x0017, B:30:0x0017, B:29:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 int) = (r4v1 int), (r4v1 int), (r4v1 int), (r4v1 int), (r4v3 int), (r4v1 int), (r4v1 int) binds: [B:34:0x0017, B:35:0x0017, B:33:0x0017, B:32:0x0017, B:31:0x0017, B:30:0x0017, B:29:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 int) = (r5v1 int), (r5v1 int), (r5v1 int), (r5v3 int), (r5v1 int), (r5v1 int), (r5v1 int) binds: [B:34:0x0017, B:35:0x0017, B:33:0x0017, B:32:0x0017, B:31:0x0017, B:30:0x0017, B:29:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 int) = (r6v1 int), (r6v1 int), (r6v3 int), (r6v1 int), (r6v1 int), (r6v1 int), (r6v1 int) binds: [B:34:0x0017, B:35:0x0017, B:33:0x0017, B:32:0x0017, B:31:0x0017, B:30:0x0017, B:29:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 int) = (r7v1 int), (r7v3 int), (r7v1 int), (r7v1 int), (r7v1 int), (r7v1 int), (r7v1 int) binds: [B:34:0x0017, B:35:0x0017, B:33:0x0017, B:32:0x0017, B:31:0x0017, B:30:0x0017, B:29:0x0017] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0017\-\>B:27:0x0017\l}"];
Node_28 [shape=record,label="{28\:\ 0x0063|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x0017|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0017|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x0017|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0017|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0017|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0017|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0017|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public java.util.Calendar com.google.gson.internal.bind.TypeAdapters.27.read((r9v0 'this' com.google.gson.internal.bind.TypeAdapters$27 A[IMMUTABLE_TYPE, THIS]), (r10v0 com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_28;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_29;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_30;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_31;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_32;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_33;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_34;
Node_24 -> Node_35;
Node_25 -> Node_26;
Node_27 -> Node_5;
Node_28 -> Node_25;
Node_29 -> Node_27;
Node_30 -> Node_27;
Node_31 -> Node_27;
Node_32 -> Node_27;
Node_33 -> Node_27;
Node_34 -> Node_27;
Node_35 -> Node_27;
}

