digraph "CFG forcom.google.gson.internal.bind.TypeAdapters.27.write(Lcom\/google\/gson\/stream\/JsonWriter;Ljava\/util\/Calendar;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.nullValue():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.beginObject():com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0009: CONST_STR  (r0 I:java.lang.String) =  \"year\" \l0x000b: INVOKE  \l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r0 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x000e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000f: INVOKE  (r0 I:int) = (r4 I:java.util.Calendar), (r0 I:int) java.util.Calendar.get(int):int type: VIRTUAL \l0x0013: CAST  (r0 I:long) = (long) (r0 I:int) \l0x0014: INVOKE  (r3 I:com.google.gson.stream.JsonWriter), (r0 I:long) com.google.gson.stream.JsonWriter.value(long):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0017: CONST_STR  (r0 I:java.lang.String) =  \"month\" \l0x0019: INVOKE  \l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r0 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x001c: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001d: INVOKE  (r0 I:int) = (r4 I:java.util.Calendar), (r0 I:int) java.util.Calendar.get(int):int type: VIRTUAL \l0x0021: CAST  (r0 I:long) = (long) (r0 I:int) \l0x0022: INVOKE  (r3 I:com.google.gson.stream.JsonWriter), (r0 I:long) com.google.gson.stream.JsonWriter.value(long):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0025: CONST_STR  (r0 I:java.lang.String) =  \"dayOfMonth\" \l0x0027: INVOKE  \l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r0 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x002a: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x002b: INVOKE  (r0 I:int) = (r4 I:java.util.Calendar), (r0 I:int) java.util.Calendar.get(int):int type: VIRTUAL \l0x002f: CAST  (r0 I:long) = (long) (r0 I:int) \l0x0030: INVOKE  (r3 I:com.google.gson.stream.JsonWriter), (r0 I:long) com.google.gson.stream.JsonWriter.value(long):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0033: CONST_STR  (r0 I:java.lang.String) =  \"hourOfDay\" \l0x0035: INVOKE  \l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r0 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0038: CONST  (r0 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l0x003a: INVOKE  (r0 I:int) = (r4 I:java.util.Calendar), (r0 I:int) java.util.Calendar.get(int):int type: VIRTUAL \l0x003e: CAST  (r0 I:long) = (long) (r0 I:int) \l0x003f: INVOKE  (r3 I:com.google.gson.stream.JsonWriter), (r0 I:long) com.google.gson.stream.JsonWriter.value(long):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0042: CONST_STR  (r0 I:java.lang.String) =  \"minute\" \l0x0044: INVOKE  \l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r0 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0047: CONST  (r0 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x0049: INVOKE  (r0 I:int) = (r4 I:java.util.Calendar), (r0 I:int) java.util.Calendar.get(int):int type: VIRTUAL \l0x004d: CAST  (r0 I:long) = (long) (r0 I:int) \l0x004e: INVOKE  (r3 I:com.google.gson.stream.JsonWriter), (r0 I:long) com.google.gson.stream.JsonWriter.value(long):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0051: CONST_STR  (r0 I:java.lang.String) =  \"second\" \l0x0053: INVOKE  \l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r0 I:java.lang.String)\l com.google.gson.stream.JsonWriter.name(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0056: CONST  (r0 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x0058: INVOKE  (r4 I:int) = (r4 I:java.util.Calendar), (r0 I:int) java.util.Calendar.get(int):int type: VIRTUAL \l0x005c: CAST  (r0 I:long) = (long) (r4 I:int) \l0x005d: INVOKE  (r3 I:com.google.gson.stream.JsonWriter), (r0 I:long) com.google.gson.stream.JsonWriter.value(long):com.google.gson.stream.JsonWriter type: VIRTUAL \l0x0060: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.endObject():com.google.gson.stream.JsonWriter type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0063|0x0063: RETURN   \l}"];
MethodNode[shape=record,label="{public void com.google.gson.internal.bind.TypeAdapters.27.write((r2 'this' I:com.google.gson.internal.bind.TypeAdapters$27 A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.util.Calendar A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

