digraph "CFG forcom.google.gson.internal.bind.ArrayTypeAdapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l0x000b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r5 I:java.lang.Object) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000f: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0012: INVOKE  (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginArray():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: INVOKE  (r1 I:boolean) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0025 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IGET  (r1 I:com.google.gson.TypeAdapter\<E\>) = (r4 I:com.google.gson.internal.bind.ArrayTypeAdapter) com.google.gson.internal.bind.ArrayTypeAdapter.componentTypeAdapter com.google.gson.TypeAdapter \l0x001d: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:com.google.gson.TypeAdapter)\l  (r5 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0021: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: INVOKE  (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endArray():void type: VIRTUAL \l0x0028: INVOKE  (r5 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x002c: IGET  (r1 I:java.lang.Class\<E\>) = (r4 I:com.google.gson.internal.bind.ArrayTypeAdapter) com.google.gson.internal.bind.ArrayTypeAdapter.componentType java.lang.Class \l0x002e: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Class), (r5 I:int) java.lang.reflect.Array.newInstance(java.lang.Class, int):java.lang.Object type: STATIC \l0x0032: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: IF  (r2 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:11:0x003f \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0039: INVOKE  \l  (r1 I:java.lang.Object)\l  (r2 I:int)\l  (r3 I:java.lang.Object)\l java.lang.reflect.Array.set(java.lang.Object, int, java.lang.Object):void type: STATIC \l0x003c: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|0x003f: RETURN  (r1 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object com.google.gson.internal.bind.ArrayTypeAdapter.read((r4 'this' I:com.google.gson.internal.bind.ArrayTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_9;
}

