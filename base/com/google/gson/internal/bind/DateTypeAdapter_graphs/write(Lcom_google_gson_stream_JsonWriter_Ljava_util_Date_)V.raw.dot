digraph "CFG forcom.google.gson.internal.bind.DateTypeAdapter.write(Lcom\/google\/gson\/stream\/JsonWriter;Ljava\/util\/Date;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.nullValue():com.google.gson.stream.JsonWriter type: VIRTUAL A[Catch:\{ all \-\> 0x0008 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0008: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|SYNTHETIC\lSplitter:B:8:0x000a\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x000a\l|0x000a: IGET  (r0 I:java.util.List\<java.text.DateFormat\>) = (r2 I:com.google.gson.internal.bind.DateTypeAdapter) com.google.gson.internal.bind.DateTypeAdapter.dateFormats java.util.List A[Catch:\{ all \-\> 0x0008 \}, TRY_ENTER]\l0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0008 \}]\l0x000d: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0008 \}]\l0x0011: CHECK_CAST  (r0 I:java.text.DateFormat) = (java.text.DateFormat) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0008 \}]\l0x0013: INVOKE  (r4 I:java.lang.String) = (r0 I:java.text.DateFormat), (r4 I:java.util.Date) java.text.DateFormat.format(java.util.Date):java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0008 \}]\l0x0017: INVOKE  \l  (r3 I:com.google.gson.stream.JsonWriter)\l  (r4 I:java.lang.String)\l com.google.gson.stream.JsonWriter.value(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL A[Catch:\{ all \-\> 0x0008 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: RETURN   \l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|0x001c: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|0x001d: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void com.google.gson.internal.bind.DateTypeAdapter.write((r2 'this' I:com.google.gson.internal.bind.DateTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r3 I:com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.util.Date A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_12;
Node_8 -> Node_9;
Node_8 -> Node_6;
Node_9 -> Node_10;
Node_9 -> Node_6;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

