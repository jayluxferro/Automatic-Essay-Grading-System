digraph "CFG forcom.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Lcom\/google\/gson\/Gson;Lcom\/google\/gson\/reflect\/TypeToken;Ljava\/lang\/Class;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0002: NEW_INSTANCE  (r8 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x0004: INVOKE  (r8 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x0007: INVOKE  (r0 I:boolean) = (r27 I:java.lang.Class) java.lang.Class.isInterface():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: RETURN  \l  (r8 I:java.util.Map\<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField\>)\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r9 I:java.lang.reflect.Type) = (r26 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.getType():java.lang.reflect.Type type: VIRTUAL \l0x0012: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0014: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: CONST_CLASS  (r0 I:java.lang.Class\<java.lang.Object\>) =  java.lang.Object.class \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00d1 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: INVOKE  (r12 I:java.lang.reflect.Field[]) = (r10 I:java.lang.Class) java.lang.Class.getDeclaredFields():java.lang.reflect.Field[] type: VIRTUAL \l0x001e: ARRAY_LENGTH  (r13 I:int) = (r12 I:?[]) \l0x001f: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IF  (r15 I:?[int, byte, short, char]) \>= (r13 I:?[int, byte, short, char])  \-\> B:28:0x00bb \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: AGET  (r6 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY][])\l  (r15 I:?[int, short, byte, char])\l \l0x0025: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0026: INVOKE  (r0 I:boolean) = \l  (r7 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory)\l  (r6 I:java.lang.reflect.Field)\l  (r0 I:boolean)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(java.lang.reflect.Field, boolean):boolean type: VIRTUAL \l0x002a: INVOKE  (r16 I:boolean) = \l  (r7 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory)\l  (r6 I:java.lang.reflect.Field)\l  (r14 I:boolean)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.excludeField(java.lang.reflect.Field, boolean):boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0034 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0034 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: IGET  (r1 I:com.google.gson.internal.reflect.ReflectionAccessor) = \l  (r7 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.accessor com.google.gson.internal.reflect.ReflectionAccessor \l0x0036: INVOKE  \l  (r1 I:com.google.gson.internal.reflect.ReflectionAccessor)\l  (r6 I:java.lang.reflect.AccessibleObject)\l com.google.gson.internal.reflect.ReflectionAccessor.makeAccessible(java.lang.reflect.AccessibleObject):void type: VIRTUAL \l0x0039: INVOKE  (r1 I:java.lang.reflect.Type) = (r11 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.getType():java.lang.reflect.Type type: VIRTUAL \l0x003d: INVOKE  (r2 I:java.lang.reflect.Type) = (r6 I:java.lang.reflect.Field) java.lang.reflect.Field.getGenericType():java.lang.reflect.Type type: VIRTUAL \l0x0041: INVOKE  (r17 I:java.lang.reflect.Type) = \l  (r1 I:java.lang.reflect.Type)\l  (r10 I:java.lang.Class)\l  (r2 I:java.lang.reflect.Type)\l com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type):java.lang.reflect.Type type: STATIC \l0x0045: INVOKE  (r5 I:java.util.List) = \l  (r7 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory)\l  (r6 I:java.lang.reflect.Field)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(java.lang.reflect.Field):java.util.List type: DIRECT \l0x0049: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004a: INVOKE  (r4 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x004e: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x004f: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0050|0x0050: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:23:0x0098 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0052|0x0052: INVOKE  (r1 I:java.lang.Object) = (r5 I:java.util.List), (r3 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0056: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|0x0058: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x005d \l}"];
Node_16 [shape=record,label="{16\:\ 0x005a|0x005a: CONST  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x005d|0x005d: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|0x005f: INVOKE  (r19 I:com.google.gson.reflect.TypeToken) = (r17 I:java.lang.reflect.Type) com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type):com.google.gson.reflect.TypeToken type: STATIC \l0x0063: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0065: MOVE  (r20 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0067: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0069: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x006a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x006b: MOVE  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006d: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x006f: MOVE  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0071: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0073: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0075: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0077: MOVE  (r23 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0079: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007b: INVOKE  (r0 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) = \l  (r0 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory)\l  (r1 I:com.google.gson.Gson)\l  (r2 I:java.lang.reflect.Field)\l  (r3 I:java.lang.String)\l  (r4 I:com.google.gson.reflect.TypeToken)\l  (r5 I:boolean)\l  (r6 I:boolean)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(com.google.gson.Gson, java.lang.reflect.Field, java.lang.String, com.google.gson.reflect.TypeToken, boolean, boolean):com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField type: DIRECT \l0x007f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0081: INVOKE  (r0 I:java.lang.Object) = \l  (r8 I:java.util.Map)\l  (r1 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0085: CHECK_CAST  (r0 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) = (com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0087|0x0087: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x008b \l}"];
Node_20 [shape=record,label="{20\:\ 0x0089|0x0089: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x008b|0x008b: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x008c|0x008c: ARITH  (r3 I:int) = (r21 I:int) + (1 int) \l0x008e: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0090: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0092: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0094: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0096: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x0098|0x0098: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0099|0x0099: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x009f \l}"];
Node_25 [shape=record,label="{25\:\ 0x009b|0x009b: ARITH  (r15 I:int) = (r15 I:int) + (1 int) \l0x009d: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_26 [shape=record,label="{26\:\ 0x009f|0x009f: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x00a1: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00a3: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00a6: INVOKE  (r1 I:java.lang.StringBuilder), (r9 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x00a9: CONST_STR  (r2 I:java.lang.String) =  \" declares multiple JSON fields named \" \l0x00ab: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ae: IGET  (r2 I:java.lang.String) = \l  (r14 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField.name java.lang.String \l0x00b0: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b3: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b7: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r1 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x00ba|0x00ba: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00bb|0x00bb: INVOKE  (r0 I:java.lang.reflect.Type) = (r11 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.getType():java.lang.reflect.Type type: VIRTUAL \l0x00bf: INVOKE  (r1 I:java.lang.reflect.Type) = (r10 I:java.lang.Class) java.lang.Class.getGenericSuperclass():java.lang.reflect.Type type: VIRTUAL \l0x00c3: INVOKE  (r0 I:java.lang.reflect.Type) = \l  (r0 I:java.lang.reflect.Type)\l  (r10 I:java.lang.Class)\l  (r1 I:java.lang.reflect.Type)\l com.google.gson.internal.$Gson$Types.resolve(java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Type):java.lang.reflect.Type type: STATIC \l0x00c7: INVOKE  (r11 I:com.google.gson.reflect.TypeToken) = (r0 I:java.lang.reflect.Type) com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type):com.google.gson.reflect.TypeToken type: STATIC \l0x00cb: INVOKE  (r10 I:java.lang.Class) = (r11 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.getRawType():java.lang.Class type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00d1|0x00d1: RETURN  \l  (r8 I:java.util.Map\<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField\>)\l \l}"];
MethodNode[shape=record,label="{private java.util.Map\<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField\> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields((r24 'this' I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory A[IMMUTABLE_TYPE, THIS]), (r25 I:com.google.gson.Gson A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:com.google.gson.reflect.TypeToken\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/Gson;, Lcom\/google\/gson\/reflect\/TypeToken\<, *\>;, Ljava\/lang\/Class\<, *\>;), Ljava\/util\/Map\<, Ljava\/lang\/String;, Lcom\/google\/gson\/internal\/bind\/ReflectiveTypeAdapterFactory$BoundField;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_29;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_28;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_12;
Node_10 -> Node_25[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_23;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_13;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_7;
Node_26 -> Node_27;
Node_28 -> Node_4;
}

