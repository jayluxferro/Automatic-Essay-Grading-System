digraph "CFG forcom.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames(Ljava\/lang\/reflect\/Field;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<com.google.gson.annotations.SerializedName\>) =  com.google.gson.annotations.SerializedName.class \l0x0002: INVOKE  (r0 I:java.lang.annotation.Annotation) = (r5 I:java.lang.reflect.Field), (r0 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:com.google.gson.annotations.SerializedName) = (com.google.gson.annotations.SerializedName) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r0 I:com.google.gson.FieldNamingStrategy) = \l  (r4 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.fieldNamingPolicy com.google.gson.FieldNamingStrategy \l0x000c: INVOKE  (r5 I:java.lang.String) = \l  (r0 I:com.google.gson.FieldNamingStrategy)\l  (r5 I:java.lang.reflect.Field)\l com.google.gson.FieldNamingStrategy.translateName(java.lang.reflect.Field):java.lang.String type: INTERFACE \l0x0010: INVOKE  (r5 I:java.util.List) = (r5 I:java.lang.Object) java.util.Collections.singletonList(java.lang.Object):java.util.List type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: RETURN  (r5 I:java.util.List\<java.lang.String\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: INVOKE  (r5 I:java.lang.String) = (r0 I:com.google.gson.annotations.SerializedName) com.google.gson.annotations.SerializedName.value():java.lang.String type: INTERFACE \l0x0019: INVOKE  (r0 I:java.lang.String[]) = (r0 I:com.google.gson.annotations.SerializedName) com.google.gson.annotations.SerializedName.alternate():java.lang.String[] type: INTERFACE \l0x001d: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: INVOKE  (r5 I:java.util.List) = (r5 I:java.lang.Object) java.util.Collections.singletonList(java.lang.Object):java.util.List type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: RETURN  (r5 I:java.util.List\<java.lang.String\>) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0027: ARRAY_LENGTH  (r2 I:int) = (r0 I:?[]) \l0x0028: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x002a: INVOKE  (r1 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x002d: INVOKE  (r1 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0030: ARRAY_LENGTH  (r5 I:int) = (r0 I:?[]) \l0x0031: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: IF  (r2 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:11:0x003c \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0036: INVOKE  (r1 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0039: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: RETURN  (r1 I:java.util.List\<java.lang.String\>) \l}"];
MethodNode[shape=record,label="{private java.util.List\<java.lang.String\> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getFieldNames((r4 'this' I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.reflect.Field A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Field;, ), Ljava\/util\/List\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_9;
}

