digraph "CFG forcom.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField(Lcom\/google\/gson\/Gson;Ljava\/lang\/reflect\/Field;Ljava\/lang\/String;Lcom\/google\/gson\/reflect\/TypeToken;ZZ)Lcom\/google\/gson\/internal\/bind\/ReflectiveTypeAdapterFactory$BoundField;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0004: INVOKE  (r0 I:java.lang.Class) = (r17 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.getRawType():java.lang.Class type: VIRTUAL \l0x0008: INVOKE  (r10 I:boolean) = (r0 I:java.lang.reflect.Type) com.google.gson.internal.Primitives.isPrimitive(java.lang.reflect.Type):boolean type: STATIC \l0x000c: CONST_CLASS  (r0 I:java.lang.Class\<com.google.gson.annotations.JsonAdapter\>) =  com.google.gson.annotations.JsonAdapter.class \l0x000e: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x000f: INVOKE  (r0 I:java.lang.annotation.Annotation) = (r15 I:java.lang.reflect.Field), (r0 I:java.lang.Class) java.lang.reflect.Field.getAnnotation(java.lang.Class):java.lang.annotation.Annotation type: VIRTUAL \l0x0013: CHECK_CAST  (r0 I:com.google.gson.annotations.JsonAdapter) = (com.google.gson.annotations.JsonAdapter) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: IGET  (r1 I:com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory) = \l  (r11 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.jsonAdapterFactory com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory \l0x0019: IGET  (r2 I:com.google.gson.internal.ConstructorConstructor) = \l  (r11 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.constructorConstructor com.google.gson.internal.ConstructorConstructor \l0x001b: INVOKE  (r0 I:com.google.gson.TypeAdapter) = \l  (r1 I:com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory)\l  (r2 I:com.google.gson.internal.ConstructorConstructor)\l  (r14 I:com.google.gson.Gson)\l  (r9 I:com.google.gson.reflect.TypeToken)\l  (r0 I:com.google.gson.annotations.JsonAdapter)\l com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory.getTypeAdapter(com.google.gson.internal.ConstructorConstructor, com.google.gson.Gson, com.google.gson.reflect.TypeToken, com.google.gson.annotations.JsonAdapter):com.google.gson.TypeAdapter type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0026 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0024: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002e \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: INVOKE  (r0 I:com.google.gson.TypeAdapter) = \l  (r14 I:com.google.gson.Gson)\l  (r9 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x002f: NEW_INSTANCE  (r12 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1) =  com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1 \l0x0031: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0032: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0033: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0035: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0037: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0039: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x003a: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x003b: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x003d: INVOKE  \l  (r0 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1)\l  (r1 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory)\l  (r2 I:java.lang.String)\l  (r3 I:boolean)\l  (r4 I:boolean)\l  (r5 I:java.lang.reflect.Field)\l  (r6 I:boolean)\l  (r7 I:com.google.gson.TypeAdapter)\l  (r8 I:com.google.gson.Gson)\l  (r9 I:com.google.gson.reflect.TypeToken)\l  (r10 I:boolean)\l com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.1.\<init\>(com.google.gson.internal.bind.ReflectiveTypeAdapterFactory, java.lang.String, boolean, boolean, java.lang.reflect.Field, boolean, com.google.gson.TypeAdapter, com.google.gson.Gson, com.google.gson.reflect.TypeToken, boolean):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: RETURN  \l  (r12 I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField)\l \l}"];
MethodNode[shape=record,label="{private com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.createBoundField((r13 'this' I:com.google.gson.internal.bind.ReflectiveTypeAdapterFactory A[IMMUTABLE_TYPE, THIS]), (r14 I:com.google.gson.Gson A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:java.lang.reflect.Field A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:com.google.gson.reflect.TypeToken\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/Gson;, Ljava\/lang\/reflect\/Field;, Ljava\/lang\/String;, Lcom\/google\/gson\/reflect\/TypeToken\<, *\>;ZZ), Lcom\/google\/gson\/internal\/bind\/ReflectiveTypeAdapterFactory$BoundField;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

