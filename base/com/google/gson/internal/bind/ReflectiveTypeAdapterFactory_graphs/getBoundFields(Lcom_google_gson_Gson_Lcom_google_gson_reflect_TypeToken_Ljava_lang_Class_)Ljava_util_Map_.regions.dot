digraph "CFG forcom.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields(Lcom\/google\/gson\/Gson;Lcom\/google\/gson\/reflect\/TypeToken;Ljava\/lang\/Class;)Ljava\/util\/Map;" {
subgraph cluster_Region_623507499 {
label = "R(2:0|(2:(1:2)|(3:3|(3:6|(3:8|(4:11|(5:13|14|17|18|21)|22|(1:(2:25|26)))(0)|24)|27)|28)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7 = r24\ljava.util.LinkedHashMap java.util.LinkedHashMap r8 = new java.util.LinkedHashMap()\l}"];
subgraph cluster_Region_156191817 {
label = "R(2:(1:2)|(3:3|(3:6|(3:8|(4:11|(5:13|14|17|18|21)|22|(1:(2:25|26)))(0)|24)|27)|28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_243757975 {
label = "IF [B:1:0x000b] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r27.isInterface() == true) goto L_0x000d\l}"];
subgraph cluster_Region_1154662064 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|RETURN\l|return r8\l}"];
}
}
subgraph cluster_Region_1966448684 {
label = "R(3:3|(3:6|(3:8|(4:11|(5:13|14|17|18|21)|22|(1:(2:25|26)))(0)|24)|27)|28)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|java.lang.reflect.Type java.lang.reflect.Type r9 = r26.getType()\lcom.google.gson.reflect.TypeToken\<?\> r11 = r26\ljava.lang.Class\<? super java.lang.Object\> r10 = r27\l}"];
subgraph cluster_LoopRegion_403203541 {
label = "LOOP:0: (3:6|(3:8|(4:11|(5:13|14|17|18|21)|22|(1:(2:25|26)))(0)|24)|27)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r10 != java.lang.Object.class) goto L_0x001a\l}"];
subgraph cluster_Region_1312947321 {
label = "R(3:6|(3:8|(4:11|(5:13|14|17|18|21)|22|(1:(2:25|26)))(0)|24)|27)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|java.lang.reflect.Field[] java.lang.reflect.Field[] r12 = r10.getDeclaredFields()\lint int r13 = r12.length\lboolean r14 = false\lint r15 = 0\l}"];
subgraph cluster_LoopRegion_2035060339 {
label = "LOOP:1: (3:8|(4:11|(5:13|14|17|18|21)|22|(1:(2:25|26)))(0)|24)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|LOOP_START\lPHI: r14 r15 \l  PHI: (r14v1 boolean) = (r14v0 boolean), (r14v2 boolean) binds: [B:6:0x001a, B:24:0x009b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v1 int) = (r15v0 int), (r15v2 int) binds: [B:6:0x001a, B:24:0x009b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x0021\-\>B:24:0x009b\l|if (r15 \< r13) goto L_0x0023\l}"];
subgraph cluster_Region_942612283 {
label = "R(3:8|(4:11|(5:13|14|17|18|21)|22|(1:(2:25|26)))(0)|24)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0023|java.lang.reflect.Field r6 = r12[r15]\lboolean boolean r0 = excludeField(r6, true)\lboolean boolean r16 = excludeField(r6, r14)\l}"];
subgraph cluster_IfRegion_486870478 {
label = "IF [B:9:0x002e, B:10:0x0030] THEN: R(4:11|(5:13|14|17|18|21)|22|(1:(2:25|26))) ELSE: R(0)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002e|if (r0 == true) goto L_0x0034\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|ADDED_TO_REGION\l|if (r16 == true) goto L_0x0034\l}"];
subgraph cluster_Region_1088723237 {
label = "R(4:11|(5:13|14|17|18|21)|22|(1:(2:25|26)))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0034|r7.accessor.makeAccessible(r6)\ljava.lang.reflect.Type java.lang.reflect.Type r17 = com.google.gson.internal.C$Gson$Types.resolve(r11.getType(), r10, r6.getGenericType())\ljava.util.List java.util.List\<java.lang.String\> r5 = getFieldNames(r6)\lint int r4 = r5.size()\lcom.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField r2 = null\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_1190720886 {
label = "LOOP:2: (5:13|14|17|18|21)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0050|LOOP_START\lPHI: r0 r2 r3 r4 r5 r6 \l  PHI: (r0v6 boolean) = (r0v5 boolean), (r0v12 boolean) binds: [B:11:0x0034, B:21:0x008c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) = (r2v1 com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField), (r2v6 com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) binds: [B:11:0x0034, B:21:0x008c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v3 int) binds: [B:11:0x0034, B:21:0x008c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v3 int) binds: [B:11:0x0034, B:21:0x008c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 java.util.List\<java.lang.String\>) = (r5v0 java.util.List\<java.lang.String\>), (r5v3 java.util.List\<java.lang.String\>) binds: [B:11:0x0034, B:21:0x008c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 java.lang.reflect.Field) = (r6v0 java.lang.reflect.Field), (r6v3 java.lang.reflect.Field) binds: [B:11:0x0034, B:21:0x008c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:12:0x0050\-\>B:21:0x008c\l|if (r3 \< r4) goto L_0x0052\l}"];
subgraph cluster_Region_609570755 {
label = "R(5:13|14|17|18|21)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0052|java.lang.String java.lang.String r1 = r5.get(r3)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0058|boolean r18 = r3 != 0 ? false : r0\l}"];
Node_17 [shape=record,label="{17\:\ 0x005f|PHI: r18 \l  PHI: (r18v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String r20 = r1\lcom.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField r14 = r2\lint r21 = r3\lint r22 = r4\ljava.util.List\<java.lang.String\> r19 = r5\ljava.lang.reflect.Field r23 = r6\l}"];
Node_18 [shape=record,label="{18\:\ 0x0087|r2 = r14 == null ? (com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField) r8.put(r20, createBoundField(r25, r6, r20, com.google.gson.reflect.TypeToken.get(r17), r18, r16)) : r14\l}"];
Node_21 [shape=record,label="{21\:\ 0x008c|LOOP_END\lPHI: r2 \l  PHI: (r2v6 com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:12:0x0050\-\>B:21:0x008c\l|int r3 = r21 + 1\lr0 = r18\lr5 = r19\lr4 = r22\lr6 = r23\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x0098|com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.BoundField r14 = r2\l}"];
subgraph cluster_Region_1873029658 {
label = "R(1:(2:25|26))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_107932757 {
label = "IF [B:23:0x0099] THEN: R(2:25|26) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0099|if (r14 != null) goto L_0x009f\l}"];
subgraph cluster_Region_532145665 {
label = "R(2:25|26)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x009f}"];
Node_26 [shape=record,label="{26\:\ 0x00ba|throw new java.lang.IllegalArgumentException(r9 + \" declares multiple JSON fields named \" + r14.name)\l}"];
}
}
}
}
subgraph cluster_Region_1209796243 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_24 [shape=record,label="{24\:\ 0x009b|LOOP_END\lLOOP:1: B:7:0x0021\-\>B:24:0x009b\l|r15++\lr14 = false\l}"];
}
}
Node_27 [shape=record,label="{27\:\ 0x00bb|LOOP_END\lLOOP:0: B:4:0x0016\-\>B:27:0x00bb\l|com.google.gson.reflect.TypeToken r11 = com.google.gson.reflect.TypeToken.get(com.google.gson.internal.C$Gson$Types.resolve(r11.getType(), r10, r10.getGenericSuperclass()))\ljava.lang.Class r10 = r11.getRawType()\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x00d1|RETURN\l|return r8\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0016|LOOP_START\lPHI: r10 r11 \l  PHI: (r10v1 java.lang.Class\<? super ?\>) = (r10v0 java.lang.Class\<? super ?\>), (r10v2 java.lang.Class\<? super ?\>) binds: [B:3:0x000e, B:27:0x00bb] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 com.google.gson.reflect.TypeToken\<?\>) = (r11v0 com.google.gson.reflect.TypeToken\<?\>), (r11v2 com.google.gson.reflect.TypeToken\<?\>) binds: [B:3:0x000e, B:27:0x00bb] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0016\-\>B:27:0x00bb\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x005a}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x005d}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0089}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x008b}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x00d1|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x009f|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x00bb|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x009b|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x009b|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0098|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x008c|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x008c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private java.util.Map\<java.lang.String, com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField\> com.google.gson.internal.bind.ReflectiveTypeAdapterFactory.getBoundFields((r24v0 'this' com.google.gson.internal.bind.ReflectiveTypeAdapterFactory A[IMMUTABLE_TYPE, THIS]), (r25v0 com.google.gson.Gson A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 com.google.gson.reflect.TypeToken\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lcom\/google\/gson\/Gson;, Lcom\/google\/gson\/reflect\/TypeToken\<, *\>;, Ljava\/lang\/Class\<, *\>;), Ljava\/util\/Map\<, Ljava\/lang\/String;, Lcom\/google\/gson\/internal\/bind\/ReflectiveTypeAdapterFactory$BoundField;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_29[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_31[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_10 -> Node_33[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_34[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20;
Node_21 -> Node_12;
Node_22 -> Node_23;
Node_23 -> Node_30;
Node_23 -> Node_32[style=dashed];
Node_25 -> Node_26;
Node_24 -> Node_7;
Node_27 -> Node_4;
Node_4 -> Node_5;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_19 -> Node_36;
Node_20 -> Node_35;
Node_29 -> Node_28;
Node_30 -> Node_25;
Node_31 -> Node_27;
Node_32 -> Node_24;
Node_33 -> Node_24;
Node_34 -> Node_22;
Node_35 -> Node_21;
Node_36 -> Node_21;
}

