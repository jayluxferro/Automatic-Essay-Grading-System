digraph "CFG forcom.google.gson.internal.bind.ObjectTypeAdapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:int[]) =  com.google.gson.internal.bind.ObjectTypeAdapter.2.$SwitchMap$com$google$gson$stream$JsonToken int[] \l0x0006: INVOKE  (r0 I:int) = (r0 I:com.google.gson.stream.JsonToken) com.google.gson.stream.JsonToken.ordinal():int type: VIRTUAL \l0x000a: AGET  (r0 I:?[int, float]) = (r1 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6] t:[0x004f, 0x0031, 0x002c, 0x0023, 0x001a, 0x0015] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0011: INVOKE  (r4 I:java.lang.IllegalStateException) java.lang.IllegalStateException.\<init\>():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l0x0018: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: RETURN  (r4 I:java.lang.Object) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: INVOKE  (r4 I:boolean) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextBoolean():boolean type: VIRTUAL \l0x001e: INVOKE  (r4 I:java.lang.Boolean) = (r4 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: RETURN  (r4 I:java.lang.Object) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: INVOKE  (r0 I:double) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextDouble():double type: VIRTUAL \l0x0027: INVOKE  (r4 I:java.lang.Double) = (r0 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: RETURN  (r4 I:java.lang.Object) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: INVOKE  (r4 I:java.lang.String) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextString():java.lang.String type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: RETURN  (r4 I:java.lang.Object) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: NEW_INSTANCE  (r0 I:com.google.gson.internal.LinkedTreeMap) =  com.google.gson.internal.LinkedTreeMap \l0x0033: INVOKE  (r0 I:com.google.gson.internal.LinkedTreeMap) com.google.gson.internal.LinkedTreeMap.\<init\>():void type: DIRECT \l0x0036: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginObject():void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0039|0x0039: INVOKE  (r1 I:boolean) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004b \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: INVOKE  (r1 I:java.lang.String) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextName():java.lang.String type: VIRTUAL \l0x0043: INVOKE  (r2 I:java.lang.Object) = \l  (r3 I:com.google.gson.internal.bind.ObjectTypeAdapter)\l  (r4 I:com.google.gson.stream.JsonReader)\l com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0047: INVOKE  \l  (r0 I:java.util.Map)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|0x004b: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endObject():void type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x004e|0x004e: RETURN  (r0 I:java.lang.Object) \l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|0x004f: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0051: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0054: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.beginArray():void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|0x0057: INVOKE  (r1 I:boolean) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.hasNext():boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x005b|0x005b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0065 \l}"];
Node_21 [shape=record,label="{21\:\ 0x005d|0x005d: INVOKE  (r1 I:java.lang.Object) = \l  (r3 I:com.google.gson.internal.bind.ObjectTypeAdapter)\l  (r4 I:com.google.gson.stream.JsonReader)\l com.google.gson.internal.bind.ObjectTypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL \l0x0061: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0065|0x0065: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.endArray():void type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0068|0x0068: RETURN  (r0 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object com.google.gson.internal.bind.ObjectTypeAdapter.read((r3 'this' I:com.google.gson.internal.bind.ObjectTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_1 -> Node_8;
Node_1 -> Node_10;
Node_1 -> Node_12;
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_13;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_19;
Node_22 -> Node_23;
}

