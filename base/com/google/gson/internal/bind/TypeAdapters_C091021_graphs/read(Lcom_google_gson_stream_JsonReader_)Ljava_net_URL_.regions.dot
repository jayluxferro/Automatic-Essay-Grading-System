digraph "CFG forcom.google.gson.internal.bind.TypeAdapters.21.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/net\/URL;" {
subgraph cluster_Region_416922182 {
label = "R(1:(2:(2:2|3)|(2:4|(2:(1:8)|(1:7)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1561032107 {
label = "R(2:(2:2|3)|(2:4|(2:(1:8)|(1:7))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_573563608 {
label = "IF [B:1:0x0007] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r4.peek() == com.google.gson.stream.JsonToken.NULL) goto L_0x0009\l}"];
subgraph cluster_Region_1318684513 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|r4.nextNull()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1515005525 {
label = "R(2:4|(2:(1:8)|(1:7)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|java.lang.String java.lang.String r4 = r4.nextString()\l}"];
subgraph cluster_Region_466030462 {
label = "R(2:(1:8)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_949386630 {
label = "IF [B:5:0x0017] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|if (\"null\".equals(r4) == true) goto L_?\l}"];
subgraph cluster_Region_493324160 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
}
}
subgraph cluster_Region_2051295391 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return new java.net.URL(r4)\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001a}"];
MethodNode[shape=record,label="{public java.net.URL com.google.gson.internal.bind.TypeAdapters.21.read((r3v0 'this' com.google.gson.internal.bind.TypeAdapters$21 A[IMMUTABLE_TYPE, THIS]), (r4v0 com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_0 -> Node_1;
Node_6 -> Node_7;
}

