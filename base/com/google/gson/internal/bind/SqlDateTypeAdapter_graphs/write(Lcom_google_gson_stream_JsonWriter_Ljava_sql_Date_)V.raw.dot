digraph "CFG forcom.google.gson.internal.bind.SqlDateTypeAdapter.write(Lcom\/google\/gson\/stream\/JsonWriter;Ljava\/sql\/Date;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: IGET  (r0 I:java.text.DateFormat) = (r1 I:com.google.gson.internal.bind.SqlDateTypeAdapter) com.google.gson.internal.bind.SqlDateTypeAdapter.format java.text.DateFormat A[Catch:\{ all \-\> 0x0010 \}, TRY_ENTER]\l0x0007: INVOKE  (r3 I:java.lang.String) = (r0 I:java.text.DateFormat), (r3 I:java.util.Date) java.text.DateFormat.format(java.util.Date):java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: INVOKE  \l  (r2 I:com.google.gson.stream.JsonWriter)\l  (r3 I:java.lang.String)\l com.google.gson.stream.JsonWriter.value(java.lang.String):com.google.gson.stream.JsonWriter type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|ExcHandler: all null\lSplitter:B:3:0x0005\l|0x0010: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|0x0012: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void com.google.gson.internal.bind.SqlDateTypeAdapter.write((r1 'this' I:com.google.gson.internal.bind.SqlDateTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.sql.Date A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

