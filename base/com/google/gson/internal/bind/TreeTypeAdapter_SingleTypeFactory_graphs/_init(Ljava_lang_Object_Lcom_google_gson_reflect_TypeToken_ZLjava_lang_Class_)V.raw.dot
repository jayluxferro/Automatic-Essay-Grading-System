digraph "CFG forcom.google.gson.internal.bind.TreeTypeAdapter.SingleTypeFactory.\<init\>(Ljava\/lang\/Object;Lcom\/google\/gson\/reflect\/TypeToken;ZLjava\/lang\/Class;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INSTANCE_OF  (r0 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.google.gson.JsonSerializer \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0009: CHECK_CAST  (r0 I:com.google.gson.JsonSerializer) = (com.google.gson.JsonSerializer) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IPUT  \l  (r0 I:com.google.gson.JsonSerializer\<?\>)\l  (r2 I:com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory)\l com.google.gson.internal.bind.TreeTypeAdapter.SingleTypeFactory.serializer com.google.gson.JsonSerializer \l0x000f: INSTANCE_OF  (r0 I:boolean) = (r3 I:?[OBJECT, ARRAY]) com.google.gson.JsonDeserializer \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0014: CHECK_CAST  (r1 I:com.google.gson.JsonDeserializer) = (com.google.gson.JsonDeserializer) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IPUT  \l  (r1 I:com.google.gson.JsonDeserializer\<?\>)\l  (r2 I:com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory)\l com.google.gson.internal.bind.TreeTypeAdapter.SingleTypeFactory.deserializer com.google.gson.JsonDeserializer \l0x0018: IGET  (r3 I:com.google.gson.JsonSerializer\<?\>) = \l  (r2 I:com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory)\l com.google.gson.internal.bind.TreeTypeAdapter.SingleTypeFactory.serializer com.google.gson.JsonSerializer \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0023 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IGET  (r3 I:com.google.gson.JsonDeserializer\<?\>) = \l  (r2 I:com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory)\l com.google.gson.internal.bind.TreeTypeAdapter.SingleTypeFactory.deserializer com.google.gson.JsonDeserializer \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0021 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|0x0021: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: INVOKE  (r3 I:boolean) com.google.gson.internal.$Gson$Preconditions.checkArgument(boolean):void type: STATIC \l0x0027: IPUT  \l  (r4 I:com.google.gson.reflect.TypeToken\<?\>)\l  (r2 I:com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory)\l com.google.gson.internal.bind.TreeTypeAdapter.SingleTypeFactory.exactType com.google.gson.reflect.TypeToken \l0x0029: IPUT  \l  (r5 I:boolean)\l  (r2 I:com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory)\l com.google.gson.internal.bind.TreeTypeAdapter.SingleTypeFactory.matchRawType boolean \l0x002b: IPUT  \l  (r6 I:java.lang.Class\<?\>)\l  (r2 I:com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory)\l com.google.gson.internal.bind.TreeTypeAdapter.SingleTypeFactory.hierarchyType java.lang.Class \l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|0x002d: RETURN   \l}"];
MethodNode[shape=record,label="{void com.google.gson.internal.bind.TreeTypeAdapter.SingleTypeFactory.\<init\>((r2 'this' I:com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:com.google.gson.reflect.TypeToken\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Class\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Object;, Lcom\/google\/gson\/reflect\/TypeToken\<, *\>;Z, Ljava\/lang\/Class\<, *\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
}

