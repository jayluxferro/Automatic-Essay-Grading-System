digraph "CFG forcom.google.gson.JsonParser.parse(Lcom\/google\/gson\/stream\/JsonReader;)Lcom\/google\/gson\/JsonElement;" {
subgraph cluster_Region_2127255249 {
label = "R(2:0|(3:2|3|4))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean boolean r0 = r6.isLenient()\lr6.setLenient(true)\l}"];
subgraph cluster_TryCatchRegion_1384338990 {
label = "Try: R(3:2|3|4) catches: R(3:10|11|12), R(3:6|8|9), R(3:5|13|14)";
node [shape=record,color=blue];
subgraph cluster_Region_1003963302 {
label = "R(3:2|3|4)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\lSplitter:B:1:0x0008\l|com.google.gson.JsonElement com.google.gson.JsonElement r1 = com.google.gson.internal.Streams.parse(r6)     \/\/ Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|r6.setLenient(r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|RETURN\l|return r1\l}"];
}
subgraph cluster_Region_1337761556 {
label = "R(3:10|11|12) | ExcHandler: StackOverflowError (r1v1 'e' java.lang.StackOverflowError A[CUSTOM_DECLARE, Catch:\{  \}])\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002f|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\lExcHandler: StackOverflowError (r1v1 'e' java.lang.StackOverflowError A[CUSTOM_DECLARE, Catch:\{  \}])\lSplitter:B:1:0x0008\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l|throw new com.google.gson.JsonParseException(\"Failed parsing JSON source: \" + r6 + \" to Json\", r1)     \/\/ Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l}"];
}
subgraph cluster_Region_1111013802 {
label = "R(3:6|8|9) | ExcHandler: OutOfMemoryError (r1v2 'e' java.lang.OutOfMemoryError A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|ExcHandler: OutOfMemoryError (r1v2 'e' java.lang.OutOfMemoryError A[CUSTOM_DECLARE])\lSplitter:B:1:0x0008\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\lSplitter:B:7:0x0013\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l|throw new com.google.gson.JsonParseException(\"Failed parsing JSON source: \" + r6 + \" to Json\", r1)     \/\/ Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l}"];
}
subgraph cluster_Region_637761499 {
label = "R(3:5|13|14) | ExcHandler: all (r1v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|ExcHandler: all (r1v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:7:0x0013\l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|r6.setLenient(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|throw r1\l}"];
}
}
}
subgraph cluster_Region_1337761556 {
label = "R(3:10|11|12) | ExcHandler: StackOverflowError (r1v1 'e' java.lang.StackOverflowError A[CUSTOM_DECLARE, Catch:\{  \}])\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002f|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\lExcHandler: StackOverflowError (r1v1 'e' java.lang.StackOverflowError A[CUSTOM_DECLARE, Catch:\{  \}])\lSplitter:B:1:0x0008\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l|throw new com.google.gson.JsonParseException(\"Failed parsing JSON source: \" + r6 + \" to Json\", r1)     \/\/ Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l}"];
}
subgraph cluster_Region_1111013802 {
label = "R(3:6|8|9) | ExcHandler: OutOfMemoryError (r1v2 'e' java.lang.OutOfMemoryError A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|ExcHandler: OutOfMemoryError (r1v2 'e' java.lang.OutOfMemoryError A[CUSTOM_DECLARE])\lSplitter:B:1:0x0008\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\lSplitter:B:7:0x0013\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l|throw new com.google.gson.JsonParseException(\"Failed parsing JSON source: \" + r6 + \" to Json\", r1)     \/\/ Catch:\{ StackOverflowError \-\> 0x002f, OutOfMemoryError \-\> 0x0012, all \-\> 0x0010 \}\l}"];
}
subgraph cluster_Region_637761499 {
label = "R(3:5|13|14) | ExcHandler: all (r1v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|ExcHandler: all (r1v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:7:0x0013\l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|r6.setLenient(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|throw r1\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0013|SYNTHETIC\lSplitter:B:7:0x0013\l}"];
MethodNode[shape=record,label="{public com.google.gson.JsonElement com.google.gson.JsonParser.parse((r5v0 'this' com.google.gson.JsonParser A[IMMUTABLE_TYPE, THIS]), (r6v0 com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_5 -> Node_13;
Node_13 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_5 -> Node_13;
Node_13 -> Node_14;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_1 -> Node_6;
Node_1 -> Node_5;
Node_7 -> Node_8;
Node_7 -> Node_5;
}

