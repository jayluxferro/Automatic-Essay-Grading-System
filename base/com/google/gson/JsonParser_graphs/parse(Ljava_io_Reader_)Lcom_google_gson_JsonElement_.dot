digraph "CFG forcom.google.gson.JsonParser.parse(Ljava\/io\/Reader;)Lcom\/google\/gson\/JsonElement;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\lSplitter:B:0:0x0000\l|com.google.gson.stream.JsonReader r0 = new com.google.gson.stream.JsonReader(r3)     \/\/ Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\lcom.google.gson.JsonElement r3 = parse(r0)     \/\/ Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\l|if (r3.isJsonNull() != false) goto L_0x0020     \/\/ Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\l|if (r0.peek() != com.google.gson.stream.JsonToken.END_DOCUMENT) goto L_0x0018     \/\/ Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\l|throw new com.google.gson.JsonSyntaxException(\"Did not consume the entire document.\")     \/\/ Catch:\{ MalformedJsonException \-\> 0x002f, IOException \-\> 0x0028, NumberFormatException \-\> 0x0021 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|RETURN\l|return r3\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|ExcHandler: NumberFormatException (r3v3 'e' java.lang.NumberFormatException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.NumberFormatException r3 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022}"];
Node_11 [shape=record,label="{11\:\ 0x0027|throw new com.google.gson.JsonSyntaxException((java.lang.Throwable) r3)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|ExcHandler: IOException (r3v2 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.io.IOException r3 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029}"];
Node_14 [shape=record,label="{14\:\ 0x002e|throw new com.google.gson.JsonIOException((java.lang.Throwable) r3)\l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|ExcHandler: MalformedJsonException (r3v1 'e' com.google.gson.stream.MalformedJsonException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|com.google.gson.stream.MalformedJsonException r3 = move\-exception\l}"];
Node_16 [shape=record,label="{16\:\ 0x0030}"];
Node_17 [shape=record,label="{17\:\ 0x0035|throw new com.google.gson.JsonSyntaxException((java.lang.Throwable) r3)\l}"];
MethodNode[shape=record,label="{public com.google.gson.JsonElement com.google.gson.JsonParser.parse((r2v0 'this' com.google.gson.JsonParser A[IMMUTABLE_TYPE, THIS]), (r3v0 java.io.Reader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_15;
Node_0 -> Node_12;
Node_0 -> Node_9;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

