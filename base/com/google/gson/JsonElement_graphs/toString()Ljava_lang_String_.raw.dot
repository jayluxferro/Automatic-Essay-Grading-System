digraph "CFG forcom.google.gson.JsonElement.toString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: NEW_INSTANCE  (r0 I:java.io.StringWriter) =  java.io.StringWriter A[Catch:\{ IOException \-\> 0x0016 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:java.io.StringWriter) java.io.StringWriter.\<init\>():void type: DIRECT A[Catch:\{ IOException \-\> 0x0016 \}]\l0x0005: NEW_INSTANCE  (r1 I:com.google.gson.stream.JsonWriter) =  com.google.gson.stream.JsonWriter A[Catch:\{ IOException \-\> 0x0016 \}]\l0x0007: INVOKE  \l  (r1 I:com.google.gson.stream.JsonWriter)\l  (r0 I:java.io.Writer)\l com.google.gson.stream.JsonWriter.\<init\>(java.io.Writer):void type: DIRECT A[Catch:\{ IOException \-\> 0x0016 \}]\l0x000a: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ IOException \-\> 0x0016 \}]\l0x000b: INVOKE  (r1 I:com.google.gson.stream.JsonWriter), (r2 I:boolean) com.google.gson.stream.JsonWriter.setLenient(boolean):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0016 \}]\l0x000e: INVOKE  \l  (r3 I:com.google.gson.JsonElement)\l  (r1 I:com.google.gson.stream.JsonWriter)\l com.google.gson.internal.Streams.write(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter):void type: STATIC A[Catch:\{ IOException \-\> 0x0016 \}]\l0x0011: INVOKE  (r0 I:java.lang.String) = (r0 I:java.io.StringWriter) java.io.StringWriter.toString():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x0016 \}]\l0x0014: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: RETURN  (r0 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x0016: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: NEW_INSTANCE  (r1 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0019: INVOKE  (r1 I:java.lang.AssertionError), (r0 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.String com.google.gson.JsonElement.toString((r3 'this' I:com.google.gson.JsonElement A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

