digraph "CFG forcom.google.gson.Gson.getDelegateAdapter(Lcom\/google\/gson\/TypeAdapterFactory;Lcom\/google\/gson\/reflect\/TypeToken;)Lcom\/google\/gson\/TypeAdapter;" {
subgraph cluster_Region_416551876 {
label = "R(5:(1:2)|3|(2:6|(2:10|(1:(1:12)))(1:(1:9)(0)))|13|14)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_840264798 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3.factories.contains(r4) == false) goto L_0x0008\l}"];
subgraph cluster_Region_1383484315 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory r4 = r3.jsonAdapterFactory\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x000a|PHI: r4 \l  PHI: (r4v1 com.google.gson.TypeAdapterFactory) = (r4v0 com.google.gson.TypeAdapterFactory), (r4v3 com.google.gson.TypeAdapterFactory) binds: [B:1:0x0006, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|boolean r0 = false\ljava.util.Iterator r1 = r3.factories.iterator()\l}"];
subgraph cluster_LoopRegion_1625491271 {
label = "LOOP:0: (2:6|(2:10|(1:(1:12)))(1:(1:9)(0)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0015|if (r1.hasNext() != false) goto L_0x0017\l}"];
subgraph cluster_Region_1895545737 {
label = "R(2:6|(2:10|(1:(1:12)))(1:(1:9)(0)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|com.google.gson.TypeAdapterFactory r2 = r1.next()\l}"];
subgraph cluster_IfRegion_1065696283 {
label = "IF [B:7:0x001d] THEN: R(2:10|(1:(1:12))) ELSE: R(1:(1:9)(0))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001d|if (r0 != false) goto L_0x0023\l}"];
subgraph cluster_Region_218562752 {
label = "R(2:10|(1:(1:12)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0023|com.google.gson.TypeAdapter com.google.gson.TypeAdapter\<T\> r2 = r2.create(r3, r5)\l}"];
subgraph cluster_Region_1771392596 {
label = "R(1:(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_905279639 {
label = "IF [B:11:0x0027] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0027|if (r2 != null) goto L_0x0029\l}"];
subgraph cluster_Region_1344063769 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0029|RETURN\l|return r2\l}"];
}
}
}
}
subgraph cluster_Region_157280878 {
label = "R(1:(1:9)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1904086333 {
label = "IF [B:8:0x001f] THEN: R(1:9) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|if (r2 == r4) goto L_0x0021\l}"];
subgraph cluster_Region_1720742811 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0021|r0 = true\l}"];
}
subgraph cluster_Region_1551157096 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x002a}"];
Node_14 [shape=record,label="{14\:\ 0x0040|throw new java.lang.IllegalArgumentException(\"GSON cannot serialize \" + r5)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0011|LOOP_START\lPHI: r0 \l  PHI: (r0v3 boolean) = (r0v2 boolean), (r0v5 boolean) binds: [B:3:0x000a, B:15:0x0011] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0011\-\>B:15:0x0011\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0011|LOOP_END\lSYNTHETIC\lPHI: r0 \l  PHI: (r0v5 boolean) = (r0v3 boolean), (r0v3 boolean), (r0v6 boolean) binds: [B:20:0x0011, B:18:0x0011, B:19:0x0011] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0011\-\>B:15:0x0011\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002a|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0029|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0011|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0011|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0011|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public com.google.gson.TypeAdapter\<T\> com.google.gson.Gson.getDelegateAdapter((r3v0 'this' com.google.gson.Gson A[IMMUTABLE_TYPE, THIS]), (r4v0 com.google.gson.TypeAdapterFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 com.google.gson.reflect.TypeToken\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/google\/gson\/TypeAdapterFactory;, Lcom\/google\/gson\/reflect\/TypeToken\<, TT;\>;), Lcom\/google\/gson\/TypeAdapter\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_16[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_17;
Node_11 -> Node_20[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_18[style=dashed];
Node_9 -> Node_19;
Node_13 -> Node_14;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_15 -> Node_4;
Node_16 -> Node_13;
Node_17 -> Node_12;
Node_18 -> Node_15;
Node_19 -> Node_15;
Node_20 -> Node_15;
}

