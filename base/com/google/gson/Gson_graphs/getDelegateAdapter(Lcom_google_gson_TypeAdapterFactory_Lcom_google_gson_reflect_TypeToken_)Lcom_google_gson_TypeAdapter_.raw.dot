digraph "CFG forcom.google.gson.Gson.getDelegateAdapter(Lcom\/google\/gson\/TypeAdapterFactory;Lcom\/google\/gson\/reflect\/TypeToken;)Lcom\/google\/gson\/TypeAdapter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<com.google.gson.TypeAdapterFactory\>) = (r3 I:com.google.gson.Gson) com.google.gson.Gson.factories java.util.List \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.List), (r4 I:java.lang.Object) java.util.List.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r4 I:com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory) = (r3 I:com.google.gson.Gson) com.google.gson.Gson.jsonAdapterFactory com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: IGET  (r1 I:java.util.List\<com.google.gson.TypeAdapterFactory\>) = (r3 I:com.google.gson.Gson) com.google.gson.Gson.factories java.util.List \l0x000d: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001b: CHECK_CAST  (r2 I:com.google.gson.TypeAdapterFactory) = (com.google.gson.TypeAdapterFactory) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0023 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: INVOKE  (r2 I:com.google.gson.TypeAdapter) = \l  (r2 I:com.google.gson.TypeAdapterFactory)\l  (r3 I:com.google.gson.Gson)\l  (r5 I:com.google.gson.reflect.TypeToken)\l com.google.gson.TypeAdapterFactory.create(com.google.gson.Gson, com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x002c: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002e: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0031: CONST_STR  (r1 I:java.lang.String) =  \"GSON cannot serialize \" \l0x0033: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0039: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003d: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|0x0040: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.google.gson.TypeAdapter\<T\> com.google.gson.Gson.getDelegateAdapter((r3 'this' I:com.google.gson.Gson A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.gson.TypeAdapterFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:com.google.gson.reflect.TypeToken\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/google\/gson\/TypeAdapterFactory;, Lcom\/google\/gson\/reflect\/TypeToken\<, TT;\>;), Lcom\/google\/gson\/TypeAdapter\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_4;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_4;
Node_10 -> Node_11;
Node_11 -> Node_4;
Node_11 -> Node_12[style=dashed];
Node_13 -> Node_14;
}

