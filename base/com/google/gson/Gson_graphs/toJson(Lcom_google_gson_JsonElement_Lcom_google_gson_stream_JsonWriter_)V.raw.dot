digraph "CFG forcom.google.gson.Gson.toJson(Lcom\/google\/gson\/JsonElement;Lcom\/google\/gson\/stream\/JsonWriter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.isLenient():boolean type: VIRTUAL \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r1 I:boolean) com.google.gson.stream.JsonWriter.setLenient(boolean):void type: VIRTUAL \l0x0008: INVOKE  (r1 I:boolean) = (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.isHtmlSafe():boolean type: VIRTUAL \l0x000c: IGET  (r2 I:boolean) = (r6 I:com.google.gson.Gson) com.google.gson.Gson.htmlSafe boolean \l0x000e: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r2 I:boolean) com.google.gson.stream.JsonWriter.setHtmlSafe(boolean):void type: VIRTUAL \l0x0011: INVOKE  (r2 I:boolean) = (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.getSerializeNulls():boolean type: VIRTUAL \l0x0015: IGET  (r3 I:boolean) = (r6 I:com.google.gson.Gson) com.google.gson.Gson.serializeNulls boolean \l0x0017: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r3 I:boolean) com.google.gson.stream.JsonWriter.setSerializeNulls(boolean):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|SYNTHETIC\lSplitter:B:1:0x001a\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x001a\l|0x001a: INVOKE  \l  (r7 I:com.google.gson.JsonElement)\l  (r8 I:com.google.gson.stream.JsonWriter)\l com.google.gson.internal.Streams.write(com.google.gson.JsonElement, com.google.gson.stream.JsonWriter):void type: STATIC A[Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r0 I:boolean) com.google.gson.stream.JsonWriter.setLenient(boolean):void type: VIRTUAL \l0x0020: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r1 I:boolean) com.google.gson.stream.JsonWriter.setHtmlSafe(boolean):void type: VIRTUAL \l0x0023: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r2 I:boolean) com.google.gson.stream.JsonWriter.setSerializeNulls(boolean):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|ExcHandler: all null\lSplitter:B:8:0x002a\l|0x0027: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|ExcHandler: AssertionError null\lSplitter:B:1:0x001a\l|0x0029: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|SYNTHETIC\lSplitter:B:8:0x002a\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x002a\l|0x002a: NEW_INSTANCE  (r3 I:java.lang.AssertionError) =  java.lang.AssertionError A[Catch:\{ all \-\> 0x0027 \}, TRY_ENTER]\l0x002c: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0027 \}]\l0x002e: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0027 \}]\l0x0031: CONST_STR  (r5 I:java.lang.String) =  \"AssertionError (GSON 2.8.5): \" A[Catch:\{ all \-\> 0x0027 \}]\l0x0033: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0027 \}]\l0x0036: INVOKE  (r5 I:java.lang.String) = (r7 I:java.lang.AssertionError) java.lang.AssertionError.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0027 \}]\l0x003a: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0027 \}]\l0x003d: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0027 \}]\l0x0041: INVOKE  \l  (r3 I:java.lang.AssertionError)\l  (r4 I:java.lang.String)\l  (r7 I:java.lang.Throwable)\l java.lang.AssertionError.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0027 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0027 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|ExcHandler: IOException null\lSplitter:B:1:0x001a\l|0x0045: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0027 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|0x0046: NEW_INSTANCE  (r3 I:com.google.gson.JsonIOException) =  com.google.gson.JsonIOException A[Catch:\{ all \-\> 0x0027 \}]\l0x0048: INVOKE  \l  (r3 I:com.google.gson.JsonIOException)\l  (r7 I:java.lang.Throwable)\l com.google.gson.JsonIOException.\<init\>(java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0027 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|0x004b: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0027 \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r0 I:boolean) com.google.gson.stream.JsonWriter.setLenient(boolean):void type: VIRTUAL \l0x004f: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r1 I:boolean) com.google.gson.stream.JsonWriter.setHtmlSafe(boolean):void type: VIRTUAL \l0x0052: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r2 I:boolean) com.google.gson.stream.JsonWriter.setSerializeNulls(boolean):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|0x0055: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.google.gson.Gson.toJson((r6 'this' I:com.google.gson.Gson A[IMMUTABLE_TYPE, THIS]), (r7 I:com.google.gson.JsonElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.gson.JsonIOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_1 -> Node_7;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_11;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_5 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

