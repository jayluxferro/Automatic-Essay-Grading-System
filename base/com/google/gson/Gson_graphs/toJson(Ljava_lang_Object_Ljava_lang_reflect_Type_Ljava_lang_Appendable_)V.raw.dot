digraph "CFG forcom.google.gson.Gson.toJson(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Type;Ljava\/lang\/Appendable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r3 I:java.io.Writer) = (r3 I:java.lang.Appendable) com.google.gson.internal.Streams.writerForAppendable(java.lang.Appendable):java.io.Writer type: STATIC A[Catch:\{ IOException \-\> 0x000c \}, TRY_ENTER]\l0x0004: INVOKE  (r3 I:com.google.gson.stream.JsonWriter) = (r0 I:com.google.gson.Gson), (r3 I:java.io.Writer) com.google.gson.Gson.newJsonWriter(java.io.Writer):com.google.gson.stream.JsonWriter type: VIRTUAL A[Catch:\{ IOException \-\> 0x000c \}]\l0x0008: INVOKE  \l  (r0 I:com.google.gson.Gson)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.reflect.Type)\l  (r3 I:com.google.gson.stream.JsonWriter)\l com.google.gson.Gson.toJson(java.lang.Object, java.lang.reflect.Type, com.google.gson.stream.JsonWriter):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x000c \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x000c: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: NEW_INSTANCE  (r2 I:com.google.gson.JsonIOException) =  com.google.gson.JsonIOException \l0x000f: INVOKE  \l  (r2 I:com.google.gson.JsonIOException)\l  (r1 I:java.lang.Throwable)\l com.google.gson.JsonIOException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.google.gson.Gson.toJson((r0 'this' I:com.google.gson.Gson A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Appendable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.gson.JsonIOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

