digraph "CFG forcom.google.gson.Gson.getAdapter(Lcom\/google\/gson\/reflect\/TypeToken;)Lcom\/google\/gson\/TypeAdapter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Map\<com.google.gson.reflect.TypeToken\<?\>, com.google.gson.TypeAdapter\<?\>\>) = (r5 I:com.google.gson.Gson) com.google.gson.Gson.typeTokenCache java.util.Map \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: SGET  (r1 I:com.google.gson.reflect.TypeToken\<?\>) =  com.google.gson.Gson.NULL_KEY_SURROGATE com.google.gson.reflect.TypeToken \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x000c: CHECK_CAST  (r0 I:com.google.gson.TypeAdapter) = (com.google.gson.TypeAdapter) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: RETURN  (r0 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IGET  (r0 I:java.lang.ThreadLocal\<java.util.Map\<com.google.gson.reflect.TypeToken\<?\>, com.google.gson.Gson$FutureTypeAdapter\<?\>\>\>) = (r5 I:com.google.gson.Gson) com.google.gson.Gson.calls java.lang.ThreadLocal \l0x0013: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ThreadLocal) java.lang.ThreadLocal.get():java.lang.Object type: VIRTUAL \l0x0017: CHECK_CAST  (r0 I:java.util.Map) = (java.util.Map) (r0 I:?[OBJECT, ARRAY]) \l0x0019: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0027 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x001e: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0021: IGET  (r1 I:java.lang.ThreadLocal\<java.util.Map\<com.google.gson.reflect.TypeToken\<?\>, com.google.gson.Gson$FutureTypeAdapter\<?\>\>\>) = (r5 I:com.google.gson.Gson) com.google.gson.Gson.calls java.lang.ThreadLocal \l0x0023: INVOKE  (r1 I:java.lang.ThreadLocal), (r0 I:java.lang.Object) java.lang.ThreadLocal.set(java.lang.Object):void type: VIRTUAL \l0x0026: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Map), (r6 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x002b: CHECK_CAST  (r2 I:com.google.gson.Gson$FutureTypeAdapter) = (com.google.gson.Gson$FutureTypeAdapter) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0030 \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: RETURN  (r2 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|SYNTHETIC\lSplitter:B:13:0x0030\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0030\l|0x0030: NEW_INSTANCE  (r2 I:com.google.gson.Gson$FutureTypeAdapter) =  com.google.gson.Gson$FutureTypeAdapter A[Catch:\{ all \-\> 0x007a \}, TRY_ENTER]\l0x0032: INVOKE  (r2 I:com.google.gson.Gson$FutureTypeAdapter) com.google.gson.Gson.FutureTypeAdapter.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x007a \}]\l0x0035: INVOKE  \l  (r0 I:java.util.Map)\l  (r6 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x007a \}]\l0x0038: IGET  (r3 I:java.util.List\<com.google.gson.TypeAdapterFactory\>) = (r5 I:com.google.gson.Gson) com.google.gson.Gson.factories java.util.List A[Catch:\{ all \-\> 0x007a \}]\l0x003a: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x007a \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|0x003e: INVOKE  (r4 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x007a \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|0x0042: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0063 A[Catch:\{ all \-\> 0x007a \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|0x0044: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x007a \}]\l0x0048: CHECK_CAST  (r4 I:com.google.gson.TypeAdapterFactory) = (com.google.gson.TypeAdapterFactory) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x007a \}]\l0x004a: INVOKE  (r4 I:com.google.gson.TypeAdapter) = \l  (r4 I:com.google.gson.TypeAdapterFactory)\l  (r5 I:com.google.gson.Gson)\l  (r6 I:com.google.gson.reflect.TypeToken)\l com.google.gson.TypeAdapterFactory.create(com.google.gson.Gson, com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: INTERFACE A[Catch:\{ all \-\> 0x007a \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x004e|0x004e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003e A[Catch:\{ all \-\> 0x007a \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|0x0050: INVOKE  \l  (r2 I:com.google.gson.Gson$FutureTypeAdapter)\l  (r4 I:com.google.gson.TypeAdapter)\l com.google.gson.Gson.FutureTypeAdapter.setDelegate(com.google.gson.TypeAdapter):void type: VIRTUAL A[Catch:\{ all \-\> 0x007a \}]\l0x0053: IGET  (r2 I:java.util.Map\<com.google.gson.reflect.TypeToken\<?\>, com.google.gson.TypeAdapter\<?\>\>) = (r5 I:com.google.gson.Gson) com.google.gson.Gson.typeTokenCache java.util.Map A[Catch:\{ all \-\> 0x007a \}]\l0x0055: INVOKE  \l  (r2 I:java.util.Map)\l  (r6 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x007a \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0058|0x0058: INVOKE  (r0 I:java.util.Map), (r6 I:java.lang.Object) java.util.Map.remove(java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x005b|0x005b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0062 \l}"];
Node_22 [shape=record,label="{22\:\ 0x005d|0x005d: IGET  (r6 I:java.lang.ThreadLocal\<java.util.Map\<com.google.gson.reflect.TypeToken\<?\>, com.google.gson.Gson$FutureTypeAdapter\<?\>\>\>) = (r5 I:com.google.gson.Gson) com.google.gson.Gson.calls java.lang.ThreadLocal \l0x005f: INVOKE  (r6 I:java.lang.ThreadLocal) java.lang.ThreadLocal.remove():void type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0062|0x0062: RETURN  (r4 I:com.google.gson.TypeAdapter\<T\>) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0063|SYNTHETIC\lSplitter:B:24:0x0063\l}"];
Node_25 [shape=record,label="{25\:\ ?|Splitter:B:24:0x0063\l|0x0063: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException A[Catch:\{ all \-\> 0x007a \}, TRY_ENTER]\l0x0065: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x007a \}]\l0x0067: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x007a \}]\l0x006a: CONST_STR  (r4 I:java.lang.String) =  \"GSON (2.8.5) cannot handle \" A[Catch:\{ all \-\> 0x007a \}]\l0x006c: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x007a \}]\l0x006f: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x007a \}]\l0x0072: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x007a \}]\l0x0076: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x007a \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0079|0x0079: THROW  (r2 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x007a \}, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x007a|ExcHandler: all null\lSplitter:B:13:0x0030\l|0x007a: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_28 [shape=record,label="{28\:\ 0x007b|0x007b: INVOKE  (r0 I:java.util.Map), (r6 I:java.lang.Object) java.util.Map.remove(java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_29 [shape=record,label="{29\:\ 0x007e|0x007e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0085 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0080|0x0080: IGET  (r6 I:java.lang.ThreadLocal\<java.util.Map\<com.google.gson.reflect.TypeToken\<?\>, com.google.gson.Gson$FutureTypeAdapter\<?\>\>\>) = (r5 I:com.google.gson.Gson) com.google.gson.Gson.calls java.lang.ThreadLocal \l0x0082: INVOKE  (r6 I:java.lang.ThreadLocal) java.lang.ThreadLocal.remove():void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x0085|0x0085: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.google.gson.TypeAdapter\<T\> com.google.gson.Gson.getAdapter((r5 'this' I:com.google.gson.Gson A[IMMUTABLE_TYPE, THIS]), (r6 I:com.google.gson.reflect.TypeToken\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/google\/gson\/reflect\/TypeToken\<, TT;\>;), Lcom\/google\/gson\/TypeAdapter\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_27;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_15;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
}

