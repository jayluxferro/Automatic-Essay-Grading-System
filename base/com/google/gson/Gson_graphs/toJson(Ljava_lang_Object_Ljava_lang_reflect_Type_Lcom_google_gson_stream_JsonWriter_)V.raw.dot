digraph "CFG forcom.google.gson.Gson.toJson(Ljava\/lang\/Object;Ljava\/lang\/reflect\/Type;Lcom\/google\/gson\/stream\/JsonWriter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:com.google.gson.reflect.TypeToken) = (r7 I:java.lang.reflect.Type) com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type):com.google.gson.reflect.TypeToken type: STATIC \l0x0004: INVOKE  (r7 I:com.google.gson.TypeAdapter) = \l  (r5 I:com.google.gson.Gson)\l  (r7 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL \l0x0008: INVOKE  (r0 I:boolean) = (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.isLenient():boolean type: VIRTUAL \l0x000c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r1 I:boolean) com.google.gson.stream.JsonWriter.setLenient(boolean):void type: VIRTUAL \l0x0010: INVOKE  (r1 I:boolean) = (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.isHtmlSafe():boolean type: VIRTUAL \l0x0014: IGET  (r2 I:boolean) = (r5 I:com.google.gson.Gson) com.google.gson.Gson.htmlSafe boolean \l0x0016: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r2 I:boolean) com.google.gson.stream.JsonWriter.setHtmlSafe(boolean):void type: VIRTUAL \l0x0019: INVOKE  (r2 I:boolean) = (r8 I:com.google.gson.stream.JsonWriter) com.google.gson.stream.JsonWriter.getSerializeNulls():boolean type: VIRTUAL \l0x001d: IGET  (r3 I:boolean) = (r5 I:com.google.gson.Gson) com.google.gson.Gson.serializeNulls boolean \l0x001f: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r3 I:boolean) com.google.gson.stream.JsonWriter.setSerializeNulls(boolean):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|SYNTHETIC\lSplitter:B:1:0x0022\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0022\l|0x0022: INVOKE  \l  (r7 I:com.google.gson.TypeAdapter)\l  (r8 I:com.google.gson.stream.JsonWriter)\l  (r6 I:java.lang.Object)\l com.google.gson.TypeAdapter.write(com.google.gson.stream.JsonWriter, java.lang.Object):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x004d, AssertionError \-\> 0x0031 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|0x0025: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r0 I:boolean) com.google.gson.stream.JsonWriter.setLenient(boolean):void type: VIRTUAL \l0x0028: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r1 I:boolean) com.google.gson.stream.JsonWriter.setHtmlSafe(boolean):void type: VIRTUAL \l0x002b: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r2 I:boolean) com.google.gson.stream.JsonWriter.setSerializeNulls(boolean):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|0x002e: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|ExcHandler: all null\lSplitter:B:8:0x0032\l|0x002f: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|ExcHandler: AssertionError null\lSplitter:B:1:0x0022\l|0x0031: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|SYNTHETIC\lSplitter:B:8:0x0032\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0032\l|0x0032: NEW_INSTANCE  (r7 I:java.lang.AssertionError) =  java.lang.AssertionError A[Catch:\{ all \-\> 0x002f \}, TRY_ENTER]\l0x0034: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x002f \}]\l0x0036: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x002f \}]\l0x0039: CONST_STR  (r4 I:java.lang.String) =  \"AssertionError (GSON 2.8.5): \" A[Catch:\{ all \-\> 0x002f \}]\l0x003b: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x002f \}]\l0x003e: INVOKE  (r4 I:java.lang.String) = (r6 I:java.lang.AssertionError) java.lang.AssertionError.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x002f \}]\l0x0042: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x002f \}]\l0x0045: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x002f \}]\l0x0049: INVOKE  \l  (r7 I:java.lang.AssertionError)\l  (r3 I:java.lang.String)\l  (r6 I:java.lang.Throwable)\l java.lang.AssertionError.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|0x004c: THROW  (r7 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x004d|ExcHandler: IOException null\lSplitter:B:1:0x0022\l|0x004d: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|0x004e: NEW_INSTANCE  (r7 I:com.google.gson.JsonIOException) =  com.google.gson.JsonIOException A[Catch:\{ all \-\> 0x002f \}]\l0x0050: INVOKE  \l  (r7 I:com.google.gson.JsonIOException)\l  (r6 I:java.lang.Throwable)\l com.google.gson.JsonIOException.\<init\>(java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x002f \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0053|0x0053: THROW  (r7 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x002f \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|0x0054: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r0 I:boolean) com.google.gson.stream.JsonWriter.setLenient(boolean):void type: VIRTUAL \l0x0057: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r1 I:boolean) com.google.gson.stream.JsonWriter.setHtmlSafe(boolean):void type: VIRTUAL \l0x005a: INVOKE  (r8 I:com.google.gson.stream.JsonWriter), (r2 I:boolean) com.google.gson.stream.JsonWriter.setSerializeNulls(boolean):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x005d|0x005d: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void com.google.gson.Gson.toJson((r5 'this' I:com.google.gson.Gson A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.gson.JsonIOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_1 -> Node_7;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_11;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_5 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

