digraph "CFG forcom.google.gson.Gson.fromJson(Lcom\/google\/gson\/stream\/JsonReader;Ljava\/lang\/reflect\/Type;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.isLenient():boolean type: VIRTUAL \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  (r5 I:com.google.gson.stream.JsonReader), (r1 I:boolean) com.google.gson.stream.JsonReader.setLenient(boolean):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0008\l|0x0008: INVOKE  (r5 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL A[Catch:\{ EOFException \-\> 0x0048, IllegalStateException \-\> 0x0041, IOException \-\> 0x003a, AssertionError \-\> 0x001e \}, TRY_ENTER]\l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ EOFException \-\> 0x0048, IllegalStateException \-\> 0x0041, IOException \-\> 0x003a, AssertionError \-\> 0x001e \}]\l0x000c: INVOKE  (r6 I:com.google.gson.reflect.TypeToken) = (r6 I:java.lang.reflect.Type) com.google.gson.reflect.TypeToken.get(java.lang.reflect.Type):com.google.gson.reflect.TypeToken type: STATIC A[Catch:\{ EOFException \-\> 0x0048, IllegalStateException \-\> 0x0041, IOException \-\> 0x003a, AssertionError \-\> 0x001e \}]\l0x0010: INVOKE  (r6 I:com.google.gson.TypeAdapter) = \l  (r4 I:com.google.gson.Gson)\l  (r6 I:com.google.gson.reflect.TypeToken)\l com.google.gson.Gson.getAdapter(com.google.gson.reflect.TypeToken):com.google.gson.TypeAdapter type: VIRTUAL A[Catch:\{ EOFException \-\> 0x0048, IllegalStateException \-\> 0x0041, IOException \-\> 0x003a, AssertionError \-\> 0x001e \}]\l0x0014: INVOKE  (r6 I:java.lang.Object) = \l  (r6 I:com.google.gson.TypeAdapter)\l  (r5 I:com.google.gson.stream.JsonReader)\l com.google.gson.TypeAdapter.read(com.google.gson.stream.JsonReader):java.lang.Object type: VIRTUAL A[Catch:\{ EOFException \-\> 0x0048, IllegalStateException \-\> 0x0041, IOException \-\> 0x003a, AssertionError \-\> 0x001e \}]\l0x0017: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: INVOKE  (r5 I:com.google.gson.stream.JsonReader), (r0 I:boolean) com.google.gson.stream.JsonReader.setLenient(boolean):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: RETURN  (r6 I:T) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|ExcHandler: all null\lSplitter:B:8:0x001f\l|0x001c: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|ExcHandler: AssertionError null\lSplitter:B:1:0x0008\l|0x001e: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|SYNTHETIC\lSplitter:B:8:0x001f\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x001f\l|0x001f: NEW_INSTANCE  (r1 I:java.lang.AssertionError) =  java.lang.AssertionError A[Catch:\{ all \-\> 0x001c \}, TRY_ENTER]\l0x0021: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x001c \}]\l0x0023: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x001c \}]\l0x0026: CONST_STR  (r3 I:java.lang.String) =  \"AssertionError (GSON 2.8.5): \" A[Catch:\{ all \-\> 0x001c \}]\l0x0028: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x001c \}]\l0x002b: INVOKE  (r3 I:java.lang.String) = (r6 I:java.lang.AssertionError) java.lang.AssertionError.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x001c \}]\l0x002f: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x001c \}]\l0x0032: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x001c \}]\l0x0036: INVOKE  \l  (r1 I:java.lang.AssertionError)\l  (r2 I:java.lang.String)\l  (r6 I:java.lang.Throwable)\l java.lang.AssertionError.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|ExcHandler: IOException null\lSplitter:B:1:0x0008\l|0x003a: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: NEW_INSTANCE  (r1 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException A[Catch:\{ all \-\> 0x001c \}]\l0x003d: INVOKE  \l  (r1 I:com.google.gson.JsonSyntaxException)\l  (r6 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|0x0040: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|ExcHandler: IllegalStateException null\lSplitter:B:1:0x0008\l|0x0041: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|0x0042: NEW_INSTANCE  (r1 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException A[Catch:\{ all \-\> 0x001c \}]\l0x0044: INVOKE  \l  (r1 I:com.google.gson.JsonSyntaxException)\l  (r6 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|0x0047: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001c \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|ExcHandler: EOFException null\lSplitter:B:1:0x0008\l|0x0048: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0049|0x0049: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0050 \l}"];
Node_19 [shape=record,label="{19\:\ 0x004b|0x004b: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004c: INVOKE  (r5 I:com.google.gson.stream.JsonReader), (r0 I:boolean) com.google.gson.stream.JsonReader.setLenient(boolean):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x004f|0x004f: RETURN  (r6 I:T) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0050|SYNTHETIC\lSplitter:B:21:0x0050\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x0050\l|0x0050: NEW_INSTANCE  (r1 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException A[Catch:\{ all \-\> 0x001c \}, TRY_ENTER]\l0x0052: INVOKE  \l  (r1 I:com.google.gson.JsonSyntaxException)\l  (r6 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0055|0x0055: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x001c \}, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0056|0x0056: INVOKE  (r5 I:com.google.gson.stream.JsonReader), (r0 I:boolean) com.google.gson.stream.JsonReader.setLenient(boolean):void type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0059|0x0059: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public T com.google.gson.Gson.fromJson((r4 'this' I:com.google.gson.Gson A[IMMUTABLE_TYPE, THIS]), (r5 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/google\/gson\/stream\/JsonReader;, Ljava\/lang\/reflect\/Type;, )TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_1 -> Node_14;
Node_1 -> Node_11;
Node_1 -> Node_7;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_24;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_21 -> Node_5;
Node_22 -> Node_23;
Node_24 -> Node_25;
}

