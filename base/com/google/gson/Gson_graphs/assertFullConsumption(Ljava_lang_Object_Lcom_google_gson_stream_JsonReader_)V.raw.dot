digraph "CFG forcom.google.gson.Gson.assertFullConsumption(Ljava\/lang\/Object;Lcom\/google\/gson\/stream\/JsonReader;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0021 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0002\l|0x0002: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r1 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL A[Catch:\{ MalformedJsonException \-\> 0x001a, IOException \-\> 0x0013 \}, TRY_ENTER]\l0x0006: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.END_DOCUMENT com.google.gson.stream.JsonToken A[Catch:\{ MalformedJsonException \-\> 0x001a, IOException \-\> 0x0013 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000b A[Catch:\{ MalformedJsonException \-\> 0x001a, IOException \-\> 0x0013 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: GOTO  \-\> 0x0021 A[Catch:\{ MalformedJsonException \-\> 0x001a, IOException \-\> 0x0013 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:com.google.gson.JsonIOException) =  com.google.gson.JsonIOException A[Catch:\{ MalformedJsonException \-\> 0x001a, IOException \-\> 0x0013 \}]\l0x000d: CONST_STR  (r1 I:java.lang.String) =  \"JSON document was not fully consumed.\" A[Catch:\{ MalformedJsonException \-\> 0x001a, IOException \-\> 0x0013 \}]\l0x000f: INVOKE  \l  (r0 I:com.google.gson.JsonIOException)\l  (r1 I:java.lang.String)\l com.google.gson.JsonIOException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ MalformedJsonException \-\> 0x001a, IOException \-\> 0x0013 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ MalformedJsonException \-\> 0x001a, IOException \-\> 0x0013 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|ExcHandler: IOException null\lSplitter:B:1:0x0002\l|0x0013: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: NEW_INSTANCE  (r1 I:com.google.gson.JsonIOException) =  com.google.gson.JsonIOException \l0x0016: INVOKE  \l  (r1 I:com.google.gson.JsonIOException)\l  (r0 I:java.lang.Throwable)\l com.google.gson.JsonIOException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|ExcHandler: MalformedJsonException null\lSplitter:B:1:0x0002\l|0x001a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: NEW_INSTANCE  (r1 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException \l0x001d: INVOKE  \l  (r1 I:com.google.gson.JsonSyntaxException)\l  (r0 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|0x0021: RETURN   \l}"];
MethodNode[shape=record,label="{private static void com.google.gson.Gson.assertFullConsumption((r0 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_13;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

