digraph "CFG forcom.google.gson.Gson.toJson(Lcom\/google\/gson\/JsonElement;Lcom\/google\/gson\/stream\/JsonWriter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r0 = r8.isLenient()\lr8.setLenient(true)\lboolean r1 = r8.isHtmlSafe()\lr8.setHtmlSafe(r6.htmlSafe)\lboolean r2 = r8.getSerializeNulls()\lr8.setSerializeNulls(r6.serializeNulls)\l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|SYNTHETIC\lSplitter:B:1:0x001a\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\lSplitter:B:1:0x001a\l|com.google.gson.internal.Streams.write(r7, r8)     \/\/ Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|r8.setLenient(r0)\lr8.setHtmlSafe(r1)\lr8.setSerializeNulls(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|ExcHandler: all (r7v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:7:0x002a\l|java.lang.Throwable r7 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|ExcHandler: AssertionError (r7v2 'e' java.lang.AssertionError A[CUSTOM_DECLARE])\lSplitter:B:1:0x001a\l|java.lang.AssertionError r7 = move\-exception\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|SYNTHETIC\lSplitter:B:7:0x002a\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\lSplitter:B:7:0x002a\l|java.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\lr4.append(\"AssertionError (GSON 2.8.5): \")     \/\/ Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\lr4.append(r7.getMessage())     \/\/ Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\l|throw new java.lang.AssertionError(r4.toString(), r7)     \/\/ Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\lExcHandler: IOException (r7v1 'e' java.io.IOException A[CUSTOM_DECLARE, Catch:\{  \}])\lSplitter:B:1:0x001a\l|java.io.IOException r7 = move\-exception     \/\/ Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\l|throw new com.google.gson.JsonIOException((java.lang.Throwable) r7)     \/\/ Catch:\{ IOException \-\> 0x0045, AssertionError \-\> 0x0029, all \-\> 0x0027 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|r8.setLenient(r0)\lr8.setHtmlSafe(r1)\lr8.setSerializeNulls(r2)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0055|throw r7\l}"];
MethodNode[shape=record,label="{public void com.google.gson.Gson.toJson((r6v0 'this' com.google.gson.Gson A[IMMUTABLE_TYPE, THIS]), (r7v0 com.google.gson.JsonElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 com.google.gson.stream.JsonWriter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.gson.JsonIOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_1 -> Node_6;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

