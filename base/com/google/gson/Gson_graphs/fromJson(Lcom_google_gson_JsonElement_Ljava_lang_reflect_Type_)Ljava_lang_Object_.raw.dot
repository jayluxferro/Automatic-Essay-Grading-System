digraph "CFG forcom.google.gson.Gson.fromJson(Lcom\/google\/gson\/JsonElement;Ljava\/lang\/reflect\/Type;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r2 I:T) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:com.google.gson.internal.bind.JsonTreeReader) =  com.google.gson.internal.bind.JsonTreeReader \l0x0006: INVOKE  \l  (r0 I:com.google.gson.internal.bind.JsonTreeReader)\l  (r2 I:com.google.gson.JsonElement)\l com.google.gson.internal.bind.JsonTreeReader.\<init\>(com.google.gson.JsonElement):void type: DIRECT \l0x0009: INVOKE  (r2 I:java.lang.Object) = \l  (r1 I:com.google.gson.Gson)\l  (r0 I:com.google.gson.stream.JsonReader)\l  (r3 I:java.lang.reflect.Type)\l com.google.gson.Gson.fromJson(com.google.gson.stream.JsonReader, java.lang.reflect.Type):java.lang.Object type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: RETURN  (r2 I:T) \l}"];
MethodNode[shape=record,label="{public T com.google.gson.Gson.fromJson((r1 'this' I:com.google.gson.Gson A[IMMUTABLE_TYPE, THIS]), (r2 I:com.google.gson.JsonElement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.gson.JsonSyntaxException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lcom\/google\/gson\/JsonElement;, Ljava\/lang\/reflect\/Type;, )TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

