digraph "CFG forcom.google.gson.DefaultDateTypeAdapter.\<init\>(Ljava\/lang\/Class;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:com.google.gson.TypeAdapter) com.google.gson.TypeAdapter.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0005: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.util.List\<java.text.DateFormat\>)\l  (r2 I:com.google.gson.DefaultDateTypeAdapter)\l com.google.gson.DefaultDateTypeAdapter.dateFormats java.util.List \l0x000a: INVOKE  (r3 I:java.lang.Class) = (r3 I:java.lang.Class) com.google.gson.DefaultDateTypeAdapter.verifyDateType(java.lang.Class):java.lang.Class type: STATIC \l0x000e: IPUT  \l  (r3 I:java.lang.Class\<? extends java.util.Date\>)\l  (r2 I:com.google.gson.DefaultDateTypeAdapter)\l com.google.gson.DefaultDateTypeAdapter.dateType java.lang.Class \l0x0010: IGET  (r3 I:java.util.List\<java.text.DateFormat\>) = (r2 I:com.google.gson.DefaultDateTypeAdapter) com.google.gson.DefaultDateTypeAdapter.dateFormats java.util.List \l0x0012: SGET  (r0 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x0014: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0015: INVOKE  (r0 I:java.text.DateFormat) = (r1 I:int), (r1 I:int), (r0 I:java.util.Locale) java.text.DateFormat.getDateTimeInstance(int, int, java.util.Locale):java.text.DateFormat type: STATIC \l0x0019: INVOKE  (r3 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x001c: INVOKE  (r3 I:java.util.Locale) =  java.util.Locale.getDefault():java.util.Locale type: STATIC \l0x0020: SGET  (r0 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x0022: INVOKE  (r3 I:boolean) = (r3 I:java.util.Locale), (r0 I:java.lang.Object) java.util.Locale.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|0x0026: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0028|0x0028: IGET  (r3 I:java.util.List\<java.text.DateFormat\>) = (r2 I:com.google.gson.DefaultDateTypeAdapter) com.google.gson.DefaultDateTypeAdapter.dateFormats java.util.List \l0x002a: INVOKE  (r0 I:java.text.DateFormat) = (r1 I:int), (r1 I:int) java.text.DateFormat.getDateTimeInstance(int, int):java.text.DateFormat type: STATIC \l0x002e: INVOKE  (r3 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0031|0x0031: INVOKE  (r3 I:boolean) =  com.google.gson.internal.JavaVersion.isJava9OrLater():boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0035|0x0035: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0040 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|0x0037: IGET  (r3 I:java.util.List\<java.text.DateFormat\>) = (r2 I:com.google.gson.DefaultDateTypeAdapter) com.google.gson.DefaultDateTypeAdapter.dateFormats java.util.List \l0x0039: INVOKE  (r0 I:java.text.DateFormat) = (r1 I:int), (r1 I:int) com.google.gson.internal.PreJava9DateFormatProvider.getUSDateTimeFormat(int, int):java.text.DateFormat type: STATIC \l0x003d: INVOKE  (r3 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0040|0x0040: RETURN   \l}"];
MethodNode[shape=record,label="{void com.google.gson.DefaultDateTypeAdapter.\<init\>((r2 'this' I:com.google.gson.DefaultDateTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Class\<? extends java.util.Date\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Class\<, +, Ljava\/util\/Date;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

