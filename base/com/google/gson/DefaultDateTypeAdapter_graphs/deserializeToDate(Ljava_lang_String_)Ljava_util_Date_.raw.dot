digraph "CFG forcom.google.gson.DefaultDateTypeAdapter.deserializeToDate(Ljava\/lang\/String;)Ljava\/util\/Date;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<java.text.DateFormat\>) = (r3 I:com.google.gson.DefaultDateTypeAdapter) com.google.gson.DefaultDateTypeAdapter.dateFormats java.util.List \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:java.util.List\<java.text.DateFormat\>) = (r3 I:com.google.gson.DefaultDateTypeAdapter) com.google.gson.DefaultDateTypeAdapter.dateFormats java.util.List A[Catch:\{ all \-\> 0x002e \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: ParseException null\lSplitter:B:8:0x0015\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001b A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x002e \}]\l0x0013: CHECK_CAST  (r2 I:java.text.DateFormat) = (java.text.DateFormat) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002e \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|SYNTHETIC\lSplitter:B:8:0x0015\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0015\l|0x0015: INVOKE  (r2 I:java.util.Date) = (r2 I:java.text.DateFormat), (r4 I:java.lang.String) java.text.DateFormat.parse(java.lang.String):java.util.Date type: VIRTUAL A[Catch:\{ ParseException \-\> 0x0009 \}, TRY_ENTER]\l0x0018: NOP   A[TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|SYNTHETIC\lSplitter:B:10:0x0019\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0019\l|0x0019: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|0x001a: RETURN  (r2 I:java.util.Date) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001b|SYNTHETIC\lSplitter:B:13:0x001b\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x001b\l|0x001b: NEW_INSTANCE  (r1 I:java.text.ParsePosition) =  java.text.ParsePosition A[Catch:\{ ParseException \-\> 0x0027 \}, TRY_ENTER]\l0x001d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ ParseException \-\> 0x0027 \}]\l0x001e: INVOKE  (r1 I:java.text.ParsePosition), (r2 I:int) java.text.ParsePosition.\<init\>(int):void type: DIRECT A[Catch:\{ ParseException \-\> 0x0027 \}]\l0x0021: INVOKE  (r1 I:java.util.Date) = (r4 I:java.lang.String), (r1 I:java.text.ParsePosition) com.google.gson.internal.bind.util.ISO8601Utils.parse(java.lang.String, java.text.ParsePosition):java.util.Date type: STATIC A[Catch:\{ ParseException \-\> 0x0027 \}]\l0x0024: NOP   A[TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0025|SYNTHETIC\lSplitter:B:15:0x0025\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x0025\l|0x0025: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002e \}, TRY_ENTER]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|0x0026: RETURN  (r1 I:java.util.Date) A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0027|ExcHandler: ParseException null\lSplitter:B:13:0x001b\l|0x0027: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0028|0x0028: NEW_INSTANCE  (r2 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException A[Catch:\{ all \-\> 0x002e \}]\l0x002a: INVOKE  \l  (r2 I:com.google.gson.JsonSyntaxException)\l  (r4 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x002d|0x002d: THROW  (r2 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002e|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x002e: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x002f|0x002f: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002e \}, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0030|0x0030: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private java.util.Date com.google.gson.DefaultDateTypeAdapter.deserializeToDate((r3 'this' I:com.google.gson.DefaultDateTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_21;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_5 -> Node_4;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_21;
Node_11 -> Node_12;
Node_11 -> Node_21;
Node_13 -> Node_14;
Node_13 -> Node_18;
Node_13 -> Node_21;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
}

