digraph "CFG forcom.google.gson.DefaultDateTypeAdapter.read(Lcom\/google\/gson\/stream\/JsonReader;)Ljava\/util\/Date;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.google.gson.stream.JsonToken) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL \l0x0004: SGET  (r1 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.NULL com.google.gson.stream.JsonToken \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextNull():void type: VIRTUAL \l0x000b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: RETURN  (r4 I:java.util.Date) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r4 I:java.lang.String) = (r4 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.nextString():java.lang.String type: VIRTUAL \l0x0011: INVOKE  (r4 I:java.util.Date) = \l  (r3 I:com.google.gson.DefaultDateTypeAdapter)\l  (r4 I:java.lang.String)\l com.google.gson.DefaultDateTypeAdapter.deserializeToDate(java.lang.String):java.util.Date type: DIRECT \l0x0015: IGET  (r0 I:java.lang.Class\<? extends java.util.Date\>) = (r3 I:com.google.gson.DefaultDateTypeAdapter) com.google.gson.DefaultDateTypeAdapter.dateType java.lang.Class \l0x0017: CONST_CLASS  (r1 I:java.lang.Class\<java.util.Date\>) =  java.util.Date.class \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001c \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: RETURN  (r4 I:java.util.Date) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IGET  (r0 I:java.lang.Class\<? extends java.util.Date\>) = (r3 I:com.google.gson.DefaultDateTypeAdapter) com.google.gson.DefaultDateTypeAdapter.dateType java.lang.Class \l0x001e: CONST_CLASS  (r1 I:java.lang.Class\<java.sql.Timestamp\>) =  java.sql.Timestamp.class \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: NEW_INSTANCE  (r0 I:java.sql.Timestamp) =  java.sql.Timestamp \l0x0024: INVOKE  (r1 I:long) = (r4 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL \l0x0028: INVOKE  (r0 I:java.sql.Timestamp), (r1 I:long) java.sql.Timestamp.\<init\>(long):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: RETURN  (r0 I:java.util.Date) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: IGET  (r0 I:java.lang.Class\<? extends java.util.Date\>) = (r3 I:com.google.gson.DefaultDateTypeAdapter) com.google.gson.DefaultDateTypeAdapter.dateType java.lang.Class \l0x002e: CONST_CLASS  (r1 I:java.lang.Class\<java.sql.Date\>) =  java.sql.Date.class \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003c \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: NEW_INSTANCE  (r0 I:java.sql.Date) =  java.sql.Date \l0x0034: INVOKE  (r1 I:long) = (r4 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL \l0x0038: INVOKE  (r0 I:java.sql.Date), (r1 I:long) java.sql.Date.\<init\>(long):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|0x003b: RETURN  (r0 I:java.util.Date) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|0x003c: NEW_INSTANCE  (r4 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x003e: INVOKE  (r4 I:java.lang.AssertionError) java.lang.AssertionError.\<init\>():void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|0x0041: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.util.Date com.google.gson.DefaultDateTypeAdapter.read((r3 'this' I:com.google.gson.DefaultDateTypeAdapter A[IMMUTABLE_TYPE, THIS]), (r4 I:com.google.gson.stream.JsonReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

