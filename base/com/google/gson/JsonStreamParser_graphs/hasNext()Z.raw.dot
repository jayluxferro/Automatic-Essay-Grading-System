digraph "CFG forcom.google.gson.JsonStreamParser.hasNext()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r3 I:com.google.gson.JsonStreamParser) com.google.gson.JsonStreamParser.lock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:com.google.gson.stream.JsonReader) = (r3 I:com.google.gson.JsonStreamParser) com.google.gson.JsonStreamParser.parser com.google.gson.stream.JsonReader A[Catch:\{ MalformedJsonException \-\> 0x001b, IOException \-\> 0x0014 \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:com.google.gson.stream.JsonToken) = (r1 I:com.google.gson.stream.JsonReader) com.google.gson.stream.JsonReader.peek():com.google.gson.stream.JsonToken type: VIRTUAL A[Catch:\{ MalformedJsonException \-\> 0x001b, IOException \-\> 0x0014 \}]\l0x0009: SGET  (r2 I:com.google.gson.stream.JsonToken) =  com.google.gson.stream.JsonToken.END_DOCUMENT com.google.gson.stream.JsonToken A[Catch:\{ MalformedJsonException \-\> 0x001b, IOException \-\> 0x0014 \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|SYNTHETIC\lSplitter:B:7:0x0010\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0010\l|0x0010: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0012 \}, TRY_ENTER]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: RETURN  (r1 I:boolean) A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|ExcHandler: all null\lSplitter:B:7:0x0010\l|0x0012: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|0x0013: GOTO  \-\> 0x0022 A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|ExcHandler: IOException null\lSplitter:B:2:0x0003\l|0x0014: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0015|0x0015: NEW_INSTANCE  (r2 I:com.google.gson.JsonIOException) =  com.google.gson.JsonIOException A[Catch:\{ all \-\> 0x0012 \}]\l0x0017: INVOKE  \l  (r2 I:com.google.gson.JsonIOException)\l  (r1 I:java.lang.Throwable)\l com.google.gson.JsonIOException.\<init\>(java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|0x001a: THROW  (r2 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|ExcHandler: MalformedJsonException null\lSplitter:B:2:0x0003\l|0x001b: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x001c|0x001c: NEW_INSTANCE  (r2 I:com.google.gson.JsonSyntaxException) =  com.google.gson.JsonSyntaxException A[Catch:\{ all \-\> 0x0012 \}]\l0x001e: INVOKE  \l  (r2 I:com.google.gson.JsonSyntaxException)\l  (r1 I:java.lang.Throwable)\l com.google.gson.JsonSyntaxException.\<init\>(java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0021|0x0021: THROW  (r2 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0012 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0022|0x0022: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0012 \}, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0023|0x0023: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean com.google.gson.JsonStreamParser.hasNext((r3 'this' I:com.google.gson.JsonStreamParser A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_15;
Node_2 -> Node_12;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_3 -> Node_15;
Node_3 -> Node_12;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

