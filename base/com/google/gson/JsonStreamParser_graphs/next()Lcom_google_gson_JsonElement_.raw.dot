digraph "CFG forcom.google.gson.JsonStreamParser.next()Lcom\/google\/gson\/JsonElement;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r3 I:com.google.gson.JsonStreamParser) com.google.gson.JsonStreamParser.hasNext():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|SYNTHETIC\lSplitter:B:2:0x0006\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0006\l|0x0006: IGET  (r0 I:com.google.gson.stream.JsonReader) = (r3 I:com.google.gson.JsonStreamParser) com.google.gson.JsonStreamParser.parser com.google.gson.stream.JsonReader A[Catch:\{ StackOverflowError \-\> 0x0025, OutOfMemoryError \-\> 0x001c, JsonParseException \-\> 0x000d \}, TRY_ENTER]\l0x0008: INVOKE  (r0 I:com.google.gson.JsonElement) = (r0 I:com.google.gson.stream.JsonReader) com.google.gson.internal.Streams.parse(com.google.gson.stream.JsonReader):com.google.gson.JsonElement type: STATIC A[Catch:\{ StackOverflowError \-\> 0x0025, OutOfMemoryError \-\> 0x001c, JsonParseException \-\> 0x000d \}]\l0x000b: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: RETURN  (r0 I:com.google.gson.JsonElement) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|ExcHandler: JsonParseException null\lSplitter:B:2:0x0006\l|0x000d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: INVOKE  (r1 I:java.lang.Throwable) = (r0 I:com.google.gson.JsonParseException) com.google.gson.JsonParseException.getCause():java.lang.Throwable type: VIRTUAL \l0x0012: INSTANCE_OF  (r1 I:boolean) = (r1 I:?[OBJECT, ARRAY]) java.io.EOFException \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001b \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException \l0x0018: INVOKE  (r0 I:java.util.NoSuchElementException) java.util.NoSuchElementException.\<init\>():void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|ExcHandler: OutOfMemoryError null\lSplitter:B:2:0x0006\l|0x001c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|0x001d: NEW_INSTANCE  (r1 I:com.google.gson.JsonParseException) =  com.google.gson.JsonParseException \l0x001f: CONST_STR  (r2 I:java.lang.String) =  \"Failed parsing JSON source to Json\" \l0x0021: INVOKE  \l  (r1 I:com.google.gson.JsonParseException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l com.google.gson.JsonParseException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|ExcHandler: StackOverflowError null\lSplitter:B:2:0x0006\l|0x0025: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: NEW_INSTANCE  (r1 I:com.google.gson.JsonParseException) =  com.google.gson.JsonParseException \l0x0028: CONST_STR  (r2 I:java.lang.String) =  \"Failed parsing JSON source to Json\" \l0x002a: INVOKE  \l  (r1 I:com.google.gson.JsonParseException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l com.google.gson.JsonParseException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x002d|0x002d: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|0x002e: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException \l0x0030: INVOKE  (r0 I:java.util.NoSuchElementException) java.util.NoSuchElementException.\<init\>():void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|0x0033: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public com.google.gson.JsonElement com.google.gson.JsonStreamParser.next((r3 'this' I:com.google.gson.JsonStreamParser A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[com.google.gson.JsonParseException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_2 -> Node_13;
Node_2 -> Node_10;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

