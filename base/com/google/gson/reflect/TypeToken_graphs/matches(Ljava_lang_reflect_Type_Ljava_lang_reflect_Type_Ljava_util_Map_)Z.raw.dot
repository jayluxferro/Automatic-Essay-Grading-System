digraph "CFG forcom.google.gson.reflect.TypeToken.matches(Ljava\/lang\/reflect\/Type;Ljava\/lang\/reflect\/Type;Ljava\/util\/Map;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r2 I:java.lang.Object), (r1 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INSTANCE_OF  (r0 I:boolean) = (r1 I:?[OBJECT, ARRAY]) java.lang.reflect.TypeVariable \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001b \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: CHECK_CAST  (r1 I:java.lang.reflect.TypeVariable) = (java.lang.reflect.TypeVariable) (r1 I:?[OBJECT, ARRAY]) \l0x000c: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.reflect.TypeVariable) java.lang.reflect.TypeVariable.getName():java.lang.String type: INTERFACE \l0x0010: INVOKE  (r1 I:java.lang.Object) = (r3 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0014: INVOKE  (r1 I:boolean) = (r2 I:java.lang.Object), (r1 I:java.lang.Object) java.lang.Object.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001b \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean com.google.gson.reflect.TypeToken.matches((r1 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.Map\<java.lang.String, java.lang.reflect.Type\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/Type;, Ljava\/lang\/reflect\/Type;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/reflect\/Type;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

