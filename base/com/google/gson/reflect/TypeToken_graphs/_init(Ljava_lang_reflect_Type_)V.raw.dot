digraph "CFG forcom.google.gson.reflect.TypeToken.\<init\>(Ljava\/lang\/reflect\/Type;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Object) com.google.gson.internal.$Gson$Preconditions.checkNotNull(java.lang.Object):java.lang.Object type: STATIC \l0x0007: CHECK_CAST  (r1 I:java.lang.reflect.Type) = (java.lang.reflect.Type) (r1 I:?[OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:java.lang.reflect.Type) = (r1 I:java.lang.reflect.Type) com.google.gson.internal.$Gson$Types.canonicalize(java.lang.reflect.Type):java.lang.reflect.Type type: STATIC \l0x000d: IPUT  \l  (r1 I:java.lang.reflect.Type)\l  (r0 I:com.google.gson.reflect.TypeToken)\l com.google.gson.reflect.TypeToken.type java.lang.reflect.Type \l0x000f: IGET  (r1 I:java.lang.reflect.Type) = (r0 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.type java.lang.reflect.Type \l0x0011: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.reflect.Type) com.google.gson.internal.$Gson$Types.getRawType(java.lang.reflect.Type):java.lang.Class type: STATIC \l0x0015: IPUT  \l  (r1 I:java.lang.Class\<? super T\>)\l  (r0 I:com.google.gson.reflect.TypeToken)\l com.google.gson.reflect.TypeToken.rawType java.lang.Class \l0x0017: IGET  (r1 I:java.lang.reflect.Type) = (r0 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.type java.lang.reflect.Type \l0x0019: INVOKE  (r1 I:int) = (r1 I:java.lang.Object) java.lang.Object.hashCode():int type: VIRTUAL \l0x001d: IPUT  (r1 I:int), (r0 I:com.google.gson.reflect.TypeToken) com.google.gson.reflect.TypeToken.hashCode int \l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|0x001f: RETURN   \l}"];
MethodNode[shape=record,label="{void com.google.gson.reflect.TypeToken.\<init\>((r0 'this' I:com.google.gson.reflect.TypeToken A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.reflect.Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

