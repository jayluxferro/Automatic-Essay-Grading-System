digraph "CFG forcom.google.gson.reflect.TypeToken.typeEquals(Ljava\/lang\/reflect\/ParameterizedType;Ljava\/lang\/reflect\/ParameterizedType;Ljava\/util\/Map;)Z" {
subgraph cluster_Region_1956884760 {
label = "R(1:(2:(1:10)|(3:2|(1:(2:(1:7)|(1:8)))|9)))";
node [shape=record,color=blue];
subgraph cluster_Region_1711566625 {
label = "R(2:(1:10)|(3:2|(1:(2:(1:7)|(1:8)))|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1307078894 {
label = "IF [B:1:0x000d] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r4.getRawType().equals(r5.getRawType()) != true) goto L_0x002b\l}"];
subgraph cluster_Region_14462247 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002b|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_257992766 {
label = "R(3:2|(1:(2:(1:7)|(1:8)))|9)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000f|java.lang.reflect.Type[] java.lang.reflect.Type[] r4 = r4.getActualTypeArguments()\ljava.lang.reflect.Type[] java.lang.reflect.Type[] r5 = r5.getActualTypeArguments()\lint r0 = 0\l}"];
subgraph cluster_LoopRegion_1064556723 {
label = "LOOP:0: (1:(2:(1:7)|(1:8)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|if (r0 \< r4.length) goto L_0x001b\l}"];
subgraph cluster_Region_1772025685 {
label = "R(1:(2:(1:7)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_740745248 {
label = "R(2:(1:7)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1271684211 {
label = "IF [B:6:0x0023] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0023|if (matches(r4[r0], r5[r0], r6) == false) goto L_0x0025\l}"];
subgraph cluster_Region_583506506 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0025|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_845786823 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0026|LOOP_END\lLOOP:0: B:3:0x0018\-\>B:8:0x0026\l|r0++\l}"];
}
}
}
}
Node_9 [shape=record,label="{9\:\ 0x0029|RETURN\l|return true\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0018|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:2:0x000f, B:8:0x0026] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0018\-\>B:8:0x0026\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001b}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0025|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static boolean com.google.gson.reflect.TypeToken.typeEquals((r4v0 java.lang.reflect.ParameterizedType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.reflect.ParameterizedType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.util.Map\<java.lang.String, java.lang.reflect.Type\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/reflect\/ParameterizedType;, Ljava\/lang\/reflect\/ParameterizedType;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/reflect\/Type;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_12[style=dashed];
Node_6 -> Node_8[style=dashed];
Node_6 -> Node_11;
Node_8 -> Node_3;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_11 -> Node_7;
Node_12 -> Node_9;
}

