digraph "CFG forcn.pedant.SweetAlert.OptAnimationLoader.createAnimationFromXml(Landroid\/content\/Context;Lorg\/xmlpull\/v1\/XmlPullParser;Landroid\/view\/animation\/AnimationSet;Landroid\/util\/AttributeSet;)Landroid\/view\/animation\/Animation;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r10 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0001: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r1 I:int) = \l  (r12 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: INVOKE  (r4 I:int) = \l  (r12 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.next():int type: INTERFACE \l0x000b: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0014 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r5 I:int) = \l  (r12 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.getDepth():int type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r5 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char] A[D('depth' int)])  \-\> B:30:0x00be \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00be \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('type' int)]) != (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0007 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: INVOKE  (r2 I:java.lang.String) = \l  (r12 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x001c: CONST_STR  (r5 I:java.lang.String) =  \"set\" \l0x001e: INVOKE  (r5 I:boolean) = \l  (r2 I:java.lang.String A[D('name' java.lang.String)])\l  (r5 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0035 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: NEW_INSTANCE  (r0 I:android.view.animation.AnimationSet A[D('anim' android.view.animation.Animation)]) =  android.view.animation.AnimationSet \l0x0026: INVOKE  \l  (r0 I:android.view.animation.AnimationSet A[D('anim' android.view.animation.Animation)])\l  (r11 I:android.content.Context A[D('c' android.content.Context)])\l  (r14 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l android.view.animation.AnimationSet.\<init\>(android.content.Context, android.util.AttributeSet):void type: DIRECT \l0x0029: MOVE  (r5 I:?[OBJECT, ARRAY]) = \l  (r0 I:?[OBJECT, ARRAY] A[D('anim' android.view.animation.Animation)])\l \l0x002a: CHECK_CAST  (r5 I:android.view.animation.AnimationSet) = (android.view.animation.AnimationSet) (r5 I:?[OBJECT, ARRAY]) \l0x002c: INVOKE  \l  (r11 I:android.content.Context A[D('c' android.content.Context)])\l  (r12 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l  (r5 I:android.view.animation.AnimationSet)\l  (r14 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l cn.pedant.SweetAlert.OptAnimationLoader.createAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser, android.view.animation.AnimationSet, android.util.AttributeSet):android.view.animation.Animation type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char] A[D('parent' android.view.animation.AnimationSet)]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0007 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|0x0031: INVOKE  \l  (r13 I:android.view.animation.AnimationSet A[D('parent' android.view.animation.AnimationSet)])\l  (r0 I:android.view.animation.Animation A[D('anim' android.view.animation.Animation)])\l android.view.animation.AnimationSet.addAnimation(android.view.animation.Animation):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: CONST_STR  (r5 I:java.lang.String) =  \"alpha\" \l0x0037: INVOKE  (r5 I:boolean) = \l  (r2 I:java.lang.String A[D('name' java.lang.String)])\l  (r5 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0043 \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: NEW_INSTANCE  (r0 I:android.view.animation.AlphaAnimation A[D('anim' android.view.animation.Animation)]) =  android.view.animation.AlphaAnimation \l0x003f: INVOKE  \l  (r0 I:android.view.animation.AlphaAnimation A[D('anim' android.view.animation.Animation)])\l  (r11 I:android.content.Context A[D('c' android.content.Context)])\l  (r14 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l android.view.animation.AlphaAnimation.\<init\>(android.content.Context, android.util.AttributeSet):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|0x0043: CONST_STR  (r5 I:java.lang.String) =  \"scale\" \l0x0045: INVOKE  (r5 I:boolean) = \l  (r2 I:java.lang.String A[D('name' java.lang.String)])\l  (r5 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0051 \l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|0x004b: NEW_INSTANCE  (r0 I:android.view.animation.ScaleAnimation A[D('anim' android.view.animation.Animation)]) =  android.view.animation.ScaleAnimation \l0x004d: INVOKE  \l  (r0 I:android.view.animation.ScaleAnimation A[D('anim' android.view.animation.Animation)])\l  (r11 I:android.content.Context A[D('c' android.content.Context)])\l  (r14 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l android.view.animation.ScaleAnimation.\<init\>(android.content.Context, android.util.AttributeSet):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|0x0051: CONST_STR  (r5 I:java.lang.String) =  \"rotate\" \l0x0053: INVOKE  (r5 I:boolean) = \l  (r2 I:java.lang.String A[D('name' java.lang.String)])\l  (r5 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0057|0x0057: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x005f \l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|0x0059: NEW_INSTANCE  (r0 I:android.view.animation.RotateAnimation A[D('anim' android.view.animation.Animation)]) =  android.view.animation.RotateAnimation \l0x005b: INVOKE  \l  (r0 I:android.view.animation.RotateAnimation A[D('anim' android.view.animation.Animation)])\l  (r11 I:android.content.Context A[D('c' android.content.Context)])\l  (r14 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l android.view.animation.RotateAnimation.\<init\>(android.content.Context, android.util.AttributeSet):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x005f|0x005f: CONST_STR  (r5 I:java.lang.String) =  \"translate\" \l0x0061: INVOKE  (r5 I:boolean) = \l  (r2 I:java.lang.String A[D('name' java.lang.String)])\l  (r5 I:java.lang.Object)\l java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0065|0x0065: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x006d \l}"];
Node_23 [shape=record,label="{23\:\ 0x0067|0x0067: NEW_INSTANCE  (r0 I:android.view.animation.TranslateAnimation A[D('anim' android.view.animation.Animation)]) =  android.view.animation.TranslateAnimation \l0x0069: INVOKE  \l  (r0 I:android.view.animation.TranslateAnimation A[D('anim' android.view.animation.Animation)])\l  (r11 I:android.content.Context A[D('c' android.content.Context)])\l  (r14 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet)])\l android.view.animation.TranslateAnimation.\<init\>(android.content.Context, android.util.AttributeSet):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x006d|SYNTHETIC\lSplitter:B:24:0x006d\l}"];
Node_25 [shape=record,label="{25\:\ ?|Splitter:B:24:0x006d\l|0x006d: INVOKE  (r5 I:java.lang.Class) = (r2 I:java.lang.String A[D('name' java.lang.String)]) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ Exception \-\> 0x0092 \}, TRY_ENTER]\l0x0071: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0072: NEW_ARRAY  (r6 I:java.lang.Class[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: java.lang.Class[] A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0074: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0075: CONST_CLASS  (r8 I:java.lang.Class\<android.content.Context\>) =  android.content.Context.class A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0077: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0079: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0092 \}]\l0x007a: CONST_CLASS  (r8 I:java.lang.Class\<android.util.AttributeSet\>) =  android.util.AttributeSet.class A[Catch:\{ Exception \-\> 0x0092 \}]\l0x007c: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0092 \}]\l0x007e: INVOKE  (r5 I:java.lang.reflect.Constructor) = (r5 I:java.lang.Class), (r6 I:java.lang.Class[]) java.lang.Class.getConstructor(java.lang.Class[]):java.lang.reflect.Constructor type: VIRTUAL A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0082: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0083: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0085: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0086: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r11 I:?[OBJECT, ARRAY] A[D('c' android.content.Context)])\l A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0088: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0092 \}]\l0x0089: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r14 I:?[OBJECT, ARRAY] A[D('attrs' android.util.AttributeSet)])\l A[Catch:\{ Exception \-\> 0x0092 \}]\l0x008b: INVOKE  (r0 I:java.lang.Object A[D('anim' android.view.animation.Animation)]) = \l  (r5 I:java.lang.reflect.Constructor)\l  (r6 I:java.lang.Object[])\l java.lang.reflect.Constructor.newInstance(java.lang.Object[]):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x0092 \}]\l0x008f: CHECK_CAST  (r0 I:android.view.animation.Animation A[D('anim' android.view.animation.Animation)]) = (android.view.animation.Animation) (r0 I:?[OBJECT, ARRAY] A[D('anim' android.view.animation.Animation)]) A[Catch:\{ Exception \-\> 0x0092 \}, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0092|ExcHandler: Exception null\lSplitter:B:24:0x006d\l|0x0092: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_28 [shape=record,label="{28\:\ 0x0093|0x0093: NEW_INSTANCE  (r5 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0095: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0097: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x009a: CONST_STR  (r7 I:java.lang.String) =  \"Unknown animation name: \" \l0x009c: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a0: INVOKE  (r7 I:java.lang.String) = \l  (r12 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser)])\l org.xmlpull.v1.XmlPullParser.getName():java.lang.String type: INTERFACE \l0x00a4: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a8: CONST_STR  (r7 I:java.lang.String) =  \" error:\" \l0x00aa: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ae: INVOKE  (r7 I:java.lang.String) = (r3 I:java.lang.Exception A[D('te' java.lang.Exception)]) java.lang.Exception.getMessage():java.lang.String type: VIRTUAL \l0x00b2: INVOKE  (r6 I:java.lang.StringBuilder) = (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b6: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00ba: INVOKE  (r5 I:java.lang.RuntimeException), (r6 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x00bd|0x00bd: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00be|0x00be: RETURN  \l  (r0 I:android.view.animation.Animation A[D('anim' android.view.animation.Animation)])\l \l}"];
MethodNode[shape=record,label="{private static android.view.animation.Animation cn.pedant.SweetAlert.OptAnimationLoader.createAnimationFromXml((r11 I:android.content.Context A[D('c' android.content.Context), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:org.xmlpull.v1.XmlPullParser A[D('parser' org.xmlpull.v1.XmlPullParser), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.view.animation.AnimationSet A[D('parent' android.view.animation.AnimationSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:android.util.AttributeSet A[D('attrs' android.util.AttributeSet), IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Debug Info:\l  0x0003\-0x0026: r0 'anim' android.view.animation.Animation\l  0x0029\-0x003f: r0 'anim' android.view.animation.Animation\l  0x0042\-0x004d: r0 'anim' android.view.animation.Animation\l  0x0050\-0x005b: r0 'anim' android.view.animation.Animation\l  0x005e\-0x0069: r0 'anim' android.view.animation.Animation\l  0x006c\-0x008f: r0 'anim' android.view.animation.Animation\l  0x0091\-0x0092: r0 'anim' android.view.animation.Animation\l  0x001c\-0x00be: r2 'name' java.lang.String\l  0x0093\-0x00be: r3 'te' java.lang.Exception\l  0x00be\-0x00be: r0 'anim' android.view.animation.Animation\l  0x0007\-0x00be: r1 'depth' int\l  0x000b\-0x00be: r4 'type' int\l  ?\-0x00be: r11 'c' android.content.Context\l  ?\-0x00be: r12 'parser' org.xmlpull.v1.XmlPullParser\l  ?\-0x00be: r13 'parent' android.view.animation.AnimationSet\l  ?\-0x00be: r14 'attrs' android.util.AttributeSet\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_30;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_30;
Node_6 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_10;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_10;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_10;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_10;
Node_24 -> Node_25;
Node_24 -> Node_27;
Node_25 -> Node_27;
Node_25 -> Node_10;
Node_27 -> Node_28;
Node_28 -> Node_29;
}

