digraph "CFG forcn.pedant.SweetAlert.ProgressHelper.updatePropsIfNeed()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.mProgressWheel == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r2.mToSpin != false) goto L_0x0095\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r2.mProgressWheel.isSpinning() == false) goto L_0x0095\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|r2.mProgressWheel.stopSpinning()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015}"];
Node_8 [shape=record,label="{8\:\ 0x001f|if ((r2.mSpinSpeed \> r2.mProgressWheel.getSpinSpeed() ? 1 : (r2.mSpinSpeed == r2.mProgressWheel.getSpinSpeed() ? 0 : \-1)) == 0) goto L_0x0028\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|r2.mProgressWheel.setSpinSpeed(r2.mSpinSpeed)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028}"];
Node_11 [shape=record,label="{11\:\ 0x0030|if (r2.mBarWidth == r2.mProgressWheel.getBarWidth()) goto L_0x0039\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|r2.mProgressWheel.setBarWidth(r2.mBarWidth)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0039}"];
Node_14 [shape=record,label="{14\:\ 0x0041|if (r2.mBarColor == r2.mProgressWheel.getBarColor()) goto L_0x004a\l}"];
Node_15 [shape=record,label="{15\:\ 0x0043|r2.mProgressWheel.setBarColor(r2.mBarColor)\l}"];
Node_16 [shape=record,label="{16\:\ 0x004a}"];
Node_17 [shape=record,label="{17\:\ 0x0052|if (r2.mRimWidth == r2.mProgressWheel.getRimWidth()) goto L_0x005b\l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|r2.mProgressWheel.setRimWidth(r2.mRimWidth)\l}"];
Node_19 [shape=record,label="{19\:\ 0x005b}"];
Node_20 [shape=record,label="{20\:\ 0x0063|if (r2.mRimColor == r2.mProgressWheel.getRimColor()) goto L_0x006c\l}"];
Node_21 [shape=record,label="{21\:\ 0x0065|r2.mProgressWheel.setRimColor(r2.mRimColor)\l}"];
Node_22 [shape=record,label="{22\:\ 0x006c}"];
Node_23 [shape=record,label="{23\:\ 0x0076|if ((r2.mProgressVal \> r2.mProgressWheel.getProgress() ? 1 : (r2.mProgressVal == r2.mProgressWheel.getProgress() ? 0 : \-1)) == 0) goto L_0x0083\l}"];
Node_24 [shape=record,label="{24\:\ 0x0078}"];
Node_25 [shape=record,label="{25\:\ 0x007a|if (r2.mIsInstantProgress == false) goto L_0x00a8\l}"];
Node_26 [shape=record,label="{26\:\ 0x007c|r2.mProgressWheel.setInstantProgress(r2.mProgressVal)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0083}"];
Node_28 [shape=record,label="{28\:\ 0x008b|if (r2.mCircleRadius == r2.mProgressWheel.getCircleRadius()) goto L_?\l}"];
Node_29 [shape=record,label="{29\:\ 0x008d|r2.mProgressWheel.setCircleRadius(r2.mCircleRadius)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0095}"];
Node_31 [shape=record,label="{31\:\ 0x0097|if (r2.mToSpin == false) goto L_0x0015\l}"];
Node_32 [shape=record,label="{32\:\ 0x0099}"];
Node_33 [shape=record,label="{33\:\ 0x009f|if (r2.mProgressWheel.isSpinning() != false) goto L_0x0015\l}"];
Node_34 [shape=record,label="{34\:\ 0x00a1|r2.mProgressWheel.spin()\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a8|r2.mProgressWheel.setProgress(r2.mProgressVal)\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void cn.pedant.SweetAlert.ProgressHelper.updatePropsIfNeed((r2v0 'this' cn.pedant.SweetAlert.ProgressHelper A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_37;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_30;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_30;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_35;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_38;
Node_29 -> Node_36;
Node_30 -> Node_31;
Node_31 -> Node_7;
Node_31 -> Node_32[style=dashed];
Node_32 -> Node_33;
Node_33 -> Node_7;
Node_33 -> Node_34[style=dashed];
Node_34 -> Node_7;
Node_35 -> Node_27;
}

