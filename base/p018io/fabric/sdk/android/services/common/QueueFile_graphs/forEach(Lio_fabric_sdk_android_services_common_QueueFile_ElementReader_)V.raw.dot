digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.forEach(Lio\/fabric\/sdk\/android\/services\/common\/QueueFile$ElementReader;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:io.fabric.sdk.android.services.common.QueueFile$Element) = (r4 I:io.fabric.sdk.android.services.common.QueueFile) io.fabric.sdk.android.services.common.QueueFile.first io.fabric.sdk.android.services.common.QueueFile$Element A[Catch:\{ all \-\> 0x0029 \}, TRY_ENTER]\l0x0003: IGET  (r0 I:int) = \l  (r0 I:io.fabric.sdk.android.services.common.QueueFile$Element)\l io.fabric.sdk.android.services.common.QueueFile.Element.position int A[Catch:\{ all \-\> 0x0029 \}]\l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r2 I:int) = (r4 I:io.fabric.sdk.android.services.common.QueueFile) io.fabric.sdk.android.services.common.QueueFile.elementCount int A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:7:0x0027 A[Catch:\{ all \-\> 0x0029 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: INVOKE  (r0 I:io.fabric.sdk.android.services.common.QueueFile$Element) = \l  (r4 I:io.fabric.sdk.android.services.common.QueueFile)\l  (r0 I:int)\l io.fabric.sdk.android.services.common.QueueFile.readElement(int):io.fabric.sdk.android.services.common.QueueFile$Element type: DIRECT A[Catch:\{ all \-\> 0x0029 \}]\l0x000e: NEW_INSTANCE  (r2 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream) =  io.fabric.sdk.android.services.common.QueueFile$ElementInputStream A[Catch:\{ all \-\> 0x0029 \}]\l0x0010: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0029 \}]\l0x0011: INVOKE  \l  (r2 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream)\l  (r4 I:io.fabric.sdk.android.services.common.QueueFile)\l  (r0 I:io.fabric.sdk.android.services.common.QueueFile$Element)\l  (r3 I:io.fabric.sdk.android.services.common.QueueFile$1)\l io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.\<init\>(io.fabric.sdk.android.services.common.QueueFile, io.fabric.sdk.android.services.common.QueueFile$Element, io.fabric.sdk.android.services.common.QueueFile$1):void type: DIRECT A[Catch:\{ all \-\> 0x0029 \}]\l0x0014: IGET  (r3 I:int) = \l  (r0 I:io.fabric.sdk.android.services.common.QueueFile$Element)\l io.fabric.sdk.android.services.common.QueueFile.Element.length int A[Catch:\{ all \-\> 0x0029 \}]\l0x0016: INVOKE  \l  (r5 I:io.fabric.sdk.android.services.common.QueueFile$ElementReader)\l  (r2 I:java.io.InputStream)\l  (r3 I:int)\l io.fabric.sdk.android.services.common.QueueFile.ElementReader.read(java.io.InputStream, int):void type: INTERFACE A[Catch:\{ all \-\> 0x0029 \}]\l0x0019: IGET  (r2 I:int) = \l  (r0 I:io.fabric.sdk.android.services.common.QueueFile$Element)\l io.fabric.sdk.android.services.common.QueueFile.Element.position int A[Catch:\{ all \-\> 0x0029 \}]\l0x001b: ARITH  (r2 I:int) = (r2 I:int) + (4 int) A[Catch:\{ all \-\> 0x0029 \}]\l0x001d: IGET  (r0 I:int) = \l  (r0 I:io.fabric.sdk.android.services.common.QueueFile$Element)\l io.fabric.sdk.android.services.common.QueueFile.Element.length int A[Catch:\{ all \-\> 0x0029 \}]\l0x001f: ARITH  (r2 I:int) = (r2 I:int) + (r0 I:int) A[Catch:\{ all \-\> 0x0029 \}]\l0x0020: INVOKE  (r0 I:int) = \l  (r4 I:io.fabric.sdk.android.services.common.QueueFile)\l  (r2 I:int)\l io.fabric.sdk.android.services.common.QueueFile.wrapPosition(int):int type: DIRECT A[Catch:\{ all \-\> 0x0029 \}]\l0x0023: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0029: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void io.fabric.sdk.android.services.common.QueueFile.forEach((r4 'this' I:io.fabric.sdk.android.services.common.QueueFile A[IMMUTABLE_TYPE, THIS]), (r5 I:io.fabric.sdk.android.services.common.QueueFile$ElementReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

