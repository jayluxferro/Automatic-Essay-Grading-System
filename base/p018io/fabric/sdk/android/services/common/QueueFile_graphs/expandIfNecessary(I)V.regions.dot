digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.expandIfNecessary(I)V" {
subgraph cluster_Region_1389468140 {
label = "R(2:0|(1:(6:3|(1:4)|6|(2:8|(1:11))|(1:14)(1:15)|16)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r11 = r11 + 4\lint int r0 = remainingBytes()\l}"];
subgraph cluster_Region_644614774 {
label = "R(1:(6:3|(1:4)|6|(2:8|(1:11))|(1:14)(1:15)|16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1800699709 {
label = "IF [B:1:0x0006] THEN: R(6:3|(1:4)|6|(2:8|(1:11))|(1:14)(1:15)|16) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r0 \< r11) goto L_0x0009\l}"];
subgraph cluster_Region_1832769524 {
label = "R(6:3|(1:4)|6|(2:8|(1:11))|(1:14)(1:15)|16)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|int int r1 = r10.fileLength\l}"];
subgraph cluster_LoopRegion_2063123647 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|LOOP_END\lLOOP:0: B:4:0x000b\-\>B:5:0x000e\l|if (r0 \< r11) goto L_0x000b\l}"];
subgraph cluster_Region_863843982 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:3:0x0009, B:5:0x000e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:3:0x0009, B:5:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000b\-\>B:5:0x000e\l|r0 += r1\lr1 \<\<= 1\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0010|setLength(r1)\lint int r11 = wrapPosition(r10.last.position + 4 + r10.last.length)\l}"];
subgraph cluster_IfRegion_1126865214 {
label = "IF [B:7:0x0026] THEN: R(2:8|(1:11)) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0026|if (r11 \< r10.first.position) goto L_0x0028\l}"];
subgraph cluster_Region_1076589784 {
label = "R(2:8|(1:11))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0028|java.nio.channels.FileChannel java.nio.channels.FileChannel r7 = r10.raf.getChannel()\lr7.position((long) r10.fileLength)\llong long r8 = (long) (r11 \- 4)\l}"];
subgraph cluster_IfRegion_571869964 {
label = "IF [B:9:0x0041] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0041|if (r7.transferTo(16, r8, r7) != r8) goto L_0x0044\l}"];
subgraph cluster_Region_184051855 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x004b|throw new java.lang.AssertionError(\"Copied insufficient number of bytes!\")\l}"];
}
}
}
}
subgraph cluster_IfRegion_272838348 {
label = "IF [B:13:0x0054] THEN: R(1:14) ELSE: R(1:15)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0054|if (r10.last.position \< r10.first.position) goto L_0x0056\l}"];
subgraph cluster_Region_626581753 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0056|int int r11 = (r10.fileLength + r10.last.position) \- 16\lwriteHeader(r1, r10.elementCount, r10.first.position, r11)\lr10.last = new p018io.fabric.sdk.android.services.common.QueueFile.Element(r11, r10.last.length)\l}"];
}
subgraph cluster_Region_423171537 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0074|writeHeader(r1, r10.elementCount, r10.first.position, r10.last.position)\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x0081|r10.fileLength = r1\l}"];
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0044}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x004c}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0083}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0010|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void io.fabric.sdk.android.services.common.QueueFile.expandIfNecessary((r10v0 'this' io.fabric.sdk.android.services.common.QueueFile A[IMMUTABLE_TYPE, THIS]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_4;
Node_5 -> Node_18[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_12[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_18 -> Node_6;
}

