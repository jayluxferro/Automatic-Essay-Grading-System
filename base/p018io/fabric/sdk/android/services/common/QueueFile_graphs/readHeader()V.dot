digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.readHeader()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.raf.seek(0)\lr4.raf.readFully(r4.buffer)\lr4.fileLength = readInt(r4.buffer, 0)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|if ((((long) r4.fileLength) \> r4.raf.length() ? 1 : (((long) r4.fileLength) == r4.raf.length() ? 0 : \-1)) \> 0) goto L_0x004a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0024|r4.elementCount = readInt(r4.buffer, 4)\lint r0 = readInt(r4.buffer, 8)\lint r1 = readInt(r4.buffer, 12)\lr4.first = readElement(r0)\lr4.last = readElement(r1)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0049|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x004a|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"File is truncated. Expected length: \")\lr1.append(r4.fileLength)\lr1.append(\", Actual length: \")\lr1.append(r4.raf.length())\l}"];
Node_5 [shape=record,label="{5\:\ 0x0070|throw new java.io.IOException(r1.toString())\l}"];
MethodNode[shape=record,label="{private void io.fabric.sdk.android.services.common.QueueFile.readHeader((r4v0 'this' io.fabric.sdk.android.services.common.QueueFile A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

