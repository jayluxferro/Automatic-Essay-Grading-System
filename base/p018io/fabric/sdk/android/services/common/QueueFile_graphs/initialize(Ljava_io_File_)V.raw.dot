digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.initialize(Ljava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File \l0x0002: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0004: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0007: INVOKE  (r2 I:java.lang.String) = (r4 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x000b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000e: CONST_STR  (r2 I:java.lang.String) =  \".tmp\" \l0x0010: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0013: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0017: INVOKE  (r0 I:java.io.File), (r1 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l0x001a: INVOKE  (r1 I:java.io.RandomAccessFile) = (r0 I:java.io.File) io.fabric.sdk.android.services.common.QueueFile.open(java.io.File):java.io.RandomAccessFile type: STATIC \l0x001e: CONST  (r2 I:?[long, double]) = (4096(0x1000, double:2.0237E\-320) ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|SYNTHETIC\lSplitter:B:1:0x0020\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0020\l|0x0020: INVOKE  (r1 I:java.io.RandomAccessFile), (r2 I:long) java.io.RandomAccessFile.setLength(long):void type: VIRTUAL A[Catch:\{ all \-\> 0x004a \}, TRY_ENTER]\l0x0023: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ all \-\> 0x004a \}]\l0x0025: INVOKE  (r1 I:java.io.RandomAccessFile), (r2 I:long) java.io.RandomAccessFile.seek(long):void type: VIRTUAL A[Catch:\{ all \-\> 0x004a \}]\l0x0028: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x004a \}]\l0x002a: NEW_ARRAY  (r2 I:byte[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ all \-\> 0x004a \}]\l0x002c: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x004a \}]\l0x002d: NEW_ARRAY  (r3 I:int[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: int[] A[Catch:\{ all \-\> 0x004a \}]\l0x002f: FILL_ARRAY  (r3 I:?[int, float][]), data: [4096, 0, 0, 0] A[Catch:\{ all \-\> 0x004a \}]\l0x0032: INVOKE  (r2 I:byte[]), (r3 I:int[]) io.fabric.sdk.android.services.common.QueueFile.writeInts(byte[], int[]):void type: STATIC A[Catch:\{ all \-\> 0x004a \}]\l0x0035: INVOKE  (r1 I:java.io.RandomAccessFile), (r2 I:byte[]) java.io.RandomAccessFile.write(byte[]):void type: VIRTUAL A[Catch:\{ all \-\> 0x004a \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0038|0x0038: INVOKE  (r1 I:java.io.RandomAccessFile) java.io.RandomAccessFile.close():void type: VIRTUAL \l0x003b: INVOKE  (r4 I:boolean) = (r0 I:java.io.File), (r4 I:java.io.File) java.io.File.renameTo(java.io.File):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x003f|0x003f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0042 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|0x0041: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0042|0x0042: NEW_INSTANCE  (r4 I:java.io.IOException) =  java.io.IOException \l0x0044: CONST_STR  (r0 I:java.lang.String) =  \"Rename failed!\" \l0x0046: INVOKE  (r4 I:java.io.IOException), (r0 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0049|0x0049: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x004a|ExcHandler: all null\lSplitter:B:1:0x0020\l|0x004a: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|0x004b: INVOKE  (r1 I:java.io.RandomAccessFile) java.io.RandomAccessFile.close():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|0x004e: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static void io.fabric.sdk.android.services.common.QueueFile.initialize((r4 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

