digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.setLength(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.io.RandomAccessFile) = (r3 I:io.fabric.sdk.android.services.common.QueueFile) io.fabric.sdk.android.services.common.QueueFile.raf java.io.RandomAccessFile \l0x0002: CAST  (r1 I:long) = (long) (r4 I:int) \l0x0003: INVOKE  (r0 I:java.io.RandomAccessFile), (r1 I:long) java.io.RandomAccessFile.setLength(long):void type: VIRTUAL \l0x0006: IGET  (r4 I:java.io.RandomAccessFile) = (r3 I:io.fabric.sdk.android.services.common.QueueFile) io.fabric.sdk.android.services.common.QueueFile.raf java.io.RandomAccessFile \l0x0008: INVOKE  (r4 I:java.nio.channels.FileChannel) = (r4 I:java.io.RandomAccessFile) java.io.RandomAccessFile.getChannel():java.nio.channels.FileChannel type: VIRTUAL \l0x000c: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: INVOKE  (r4 I:java.nio.channels.FileChannel), (r0 I:boolean) java.nio.channels.FileChannel.force(boolean):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN   \l}"];
MethodNode[shape=record,label="{private void io.fabric.sdk.android.services.common.QueueFile.setLength((r3 'this' I:io.fabric.sdk.android.services.common.QueueFile A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

