digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.writeHeader(IIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:byte[]) = (r3 I:io.fabric.sdk.android.services.common.QueueFile) io.fabric.sdk.android.services.common.QueueFile.buffer byte[] \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0003: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: APUT  \l  (r1 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0008: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0009: APUT  \l  (r1 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x000b: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000c: APUT  \l  (r1 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r6 I:?[int, float])\l \l0x000e: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x000f: APUT  \l  (r1 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r7 I:?[int, float])\l \l0x0011: INVOKE  (r0 I:byte[]), (r1 I:int[]) io.fabric.sdk.android.services.common.QueueFile.writeInts(byte[], int[]):void type: STATIC \l0x0014: IGET  (r4 I:java.io.RandomAccessFile) = (r3 I:io.fabric.sdk.android.services.common.QueueFile) io.fabric.sdk.android.services.common.QueueFile.raf java.io.RandomAccessFile \l0x0016: CONST  (r5 I:?[long, double]) = (0 ?[long, double]) \l0x0018: INVOKE  (r4 I:java.io.RandomAccessFile), (r5 I:long) java.io.RandomAccessFile.seek(long):void type: VIRTUAL \l0x001b: IGET  (r4 I:java.io.RandomAccessFile) = (r3 I:io.fabric.sdk.android.services.common.QueueFile) io.fabric.sdk.android.services.common.QueueFile.raf java.io.RandomAccessFile \l0x001d: IGET  (r5 I:byte[]) = (r3 I:io.fabric.sdk.android.services.common.QueueFile) io.fabric.sdk.android.services.common.QueueFile.buffer byte[] \l0x001f: INVOKE  (r4 I:java.io.RandomAccessFile), (r5 I:byte[]) java.io.RandomAccessFile.write(byte[]):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{private void io.fabric.sdk.android.services.common.QueueFile.writeHeader((r3 'this' I:io.fabric.sdk.android.services.common.QueueFile A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

