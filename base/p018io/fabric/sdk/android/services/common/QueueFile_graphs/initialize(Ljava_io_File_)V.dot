digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.initialize(Ljava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(r4.getPath())\lr1.append(\".tmp\")\ljava.io.File r0 = new java.io.File(r1.toString())\ljava.io.RandomAccessFile r1 = open(r0)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|SYNTHETIC\lSplitter:B:1:0x0020\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x004a \}\lSplitter:B:1:0x0020\l|r1.setLength(android.support.p000v4.media.session.PlaybackStateCompat.ACTION_SKIP_TO_QUEUE_ITEM)     \/\/ Catch:\{ all \-\> 0x004a \}\lr1.seek(0)     \/\/ Catch:\{ all \-\> 0x004a \}\lbyte[] r2 = new byte[16]     \/\/ Catch:\{ all \-\> 0x004a \}\lwriteInts(r2, 4096, 0, 0, 0)     \/\/ Catch:\{ all \-\> 0x004a \}\lr1.write(r2)     \/\/ Catch:\{ all \-\> 0x004a \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0038|r1.close()\l}"];
Node_4 [shape=record,label="{4\:\ 0x003f|if (r0.renameTo(r4) == false) goto L_0x0042\l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x0042}"];
Node_7 [shape=record,label="{7\:\ 0x0049|throw new java.io.IOException(\"Rename failed!\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x004a|ExcHandler: all (r4v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0020\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|r1.close()\l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|throw r4\l}"];
MethodNode[shape=record,label="{private static void io.fabric.sdk.android.services.common.QueueFile.initialize((r4v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | JADX INFO: finally extract failed\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

