digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.clear()V" {
subgraph cluster_Region_1868038670 {
label = "R(1:(1:(3:3|(1:5)|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_555872774 {
label = "R(1:(3:3|(1:5)|6))";
node [shape=record,color=blue];
subgraph cluster_Region_446072776 {
label = "R(3:3|(1:5)|6)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|writeHeader(4096, 0, 0, 0)\lr2.elementCount = 0\lr2.first = p018io.fabric.sdk.android.services.common.QueueFile.Element.NULL\lr2.last = p018io.fabric.sdk.android.services.common.QueueFile.Element.NULL\l}"];
subgraph cluster_IfRegion_2029165842 {
label = "IF [B:4:0x0013] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0013|if (r2.fileLength \> 4096) goto L_0x0015\l}"];
subgraph cluster_Region_1461041264 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0015|setLength(4096)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0018|r2.fileLength = 4096\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001a|DONT_GENERATE\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001b}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001c|REMOVE\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001d|REMOVE\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001e|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public synchronized void io.fabric.sdk.android.services.common.QueueFile.clear((r2v0 'this' io.fabric.sdk.android.services.common.QueueFile A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

