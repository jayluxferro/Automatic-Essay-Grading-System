digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.ElementInputStream.read([BII)I" {
subgraph cluster_Region_423273606 {
label = "R(2:0|(1:13)(1:(1:11)(3:(1:8)|9|10)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Object unused = p018io.fabric.sdk.android.services.common.QueueFile.nonNull(r3, \"buffer\")\l}"];
subgraph cluster_IfRegion_607128264 {
label = "IF [B:1:0x0007, B:3:0x000b] THEN: R(1:13) ELSE: R(1:(1:11)(3:(1:8)|9|10))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if ((r4 \| r5) \< 0) goto L_0x0031\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|ADDED_TO_REGION\l|if (r5 \> (r3.length \- r4)) goto L_0x0031\l}"];
subgraph cluster_Region_84821858 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0036|throw new java.lang.ArrayIndexOutOfBoundsException()\l}"];
}
subgraph cluster_Region_1221269152 {
label = "R(1:(1:11)(3:(1:8)|9|10)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_77174187 {
label = "IF [B:5:0x000f] THEN: R(1:11) ELSE: R(3:(1:8)|9|10) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|if (r2.remaining \<= 0) goto L_0x002f\l}"];
subgraph cluster_Region_542882234 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002f|RETURN\l|return \-1\l}"];
}
subgraph cluster_Region_1461309316 {
label = "R(3:(1:8)|9|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1199029713 {
label = "IF [B:7:0x0013] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013|if (r5 \> r2.remaining) goto L_0x0015\l}"];
subgraph cluster_Region_260791385 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0015|int r5 = r2.remaining\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x0017|PHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:7:0x0013, B:8:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|p018io.fabric.sdk.android.services.common.QueueFile.this.ringRead(r2.position, r3, r4, r5)\lr2.position = p018io.fabric.sdk.android.services.common.QueueFile.this.wrapPosition(r2.position + r5)\lr2.remaining \-= r5\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|RETURN\l|return r5\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000d}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0011}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0031}"];
MethodNode[shape=record,label="{public int io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.read((r2v0 'this' io.fabric.sdk.android.services.common.QueueFile$ElementInputStream A[IMMUTABLE_TYPE, THIS]), (r3v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_12 -> Node_13;
}

