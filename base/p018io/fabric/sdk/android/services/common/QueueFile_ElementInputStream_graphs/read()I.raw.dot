digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.ElementInputStream.read()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r3 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream)\l io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.remaining int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r0 I:io.fabric.sdk.android.services.common.QueueFile) = \l  (r3 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream)\l io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.this$0 io.fabric.sdk.android.services.common.QueueFile \l0x0008: INVOKE  (r0 I:java.io.RandomAccessFile) = (r0 I:io.fabric.sdk.android.services.common.QueueFile) io.fabric.sdk.android.services.common.QueueFile.access$400(io.fabric.sdk.android.services.common.QueueFile):java.io.RandomAccessFile type: STATIC \l0x000c: IGET  (r1 I:int) = \l  (r3 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream)\l io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.position int \l0x000e: CAST  (r1 I:long) = (long) (r1 I:int) \l0x000f: INVOKE  (r0 I:java.io.RandomAccessFile), (r1 I:long) java.io.RandomAccessFile.seek(long):void type: VIRTUAL \l0x0012: IGET  (r0 I:io.fabric.sdk.android.services.common.QueueFile) = \l  (r3 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream)\l io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.this$0 io.fabric.sdk.android.services.common.QueueFile \l0x0014: INVOKE  (r0 I:java.io.RandomAccessFile) = (r0 I:io.fabric.sdk.android.services.common.QueueFile) io.fabric.sdk.android.services.common.QueueFile.access$400(io.fabric.sdk.android.services.common.QueueFile):java.io.RandomAccessFile type: STATIC \l0x0018: INVOKE  (r0 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.read():int type: VIRTUAL \l0x001c: IGET  (r1 I:io.fabric.sdk.android.services.common.QueueFile) = \l  (r3 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream)\l io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.this$0 io.fabric.sdk.android.services.common.QueueFile \l0x001e: IGET  (r2 I:int) = \l  (r3 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream)\l io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.position int \l0x0020: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0022: INVOKE  (r1 I:int) = \l  (r1 I:io.fabric.sdk.android.services.common.QueueFile)\l  (r2 I:int)\l io.fabric.sdk.android.services.common.QueueFile.access$100(io.fabric.sdk.android.services.common.QueueFile, int):int type: STATIC \l0x0026: IPUT  \l  (r1 I:int)\l  (r3 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream)\l io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.position int \l0x0028: IGET  (r1 I:int) = \l  (r3 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream)\l io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.remaining int \l0x002a: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x002c: IPUT  \l  (r1 I:int)\l  (r3 I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream)\l io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.remaining int \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int io.fabric.sdk.android.services.common.QueueFile.ElementInputStream.read((r3 'this' I:io.fabric.sdk.android.services.common.QueueFile$ElementInputStream A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

