digraph "CFG forio.fabric.sdk.android.services.common.DeliveryMechanism.determineFrom(Ljava\/lang\/String;)Lio\/fabric\/sdk\/android\/services\/common\/DeliveryMechanism;" {
subgraph cluster_Region_1793483490 {
label = "R(1:(2:(1:3)|(1:(2:(1:6)|(1:8)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1636451400 {
label = "R(2:(1:3)|(1:(2:(1:6)|(1:8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_54798000 {
label = "IF [B:1:0x0006] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (BETA_APP_PACKAGE_NAME.equals(r1) == true) goto L_0x0008\l}"];
subgraph cluster_Region_551019330 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return TEST_DISTRIBUTION\l}"];
}
}
subgraph cluster_Region_2038396104 {
label = "R(1:(2:(1:6)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1256507307 {
label = "R(2:(1:6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1756826081 {
label = "IF [B:4:0x000b] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r1 != null) goto L_0x000d\l}"];
subgraph cluster_Region_2003118662 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|RETURN\l|return APP_STORE\l}"];
}
}
subgraph cluster_Region_1975441750 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0012|RETURN\l|return DEVELOPER\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000d}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0010}"];
MethodNode[shape=record,label="{public static io.fabric.sdk.android.services.common.DeliveryMechanism io.fabric.sdk.android.services.common.DeliveryMechanism.determineFrom((r1v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

