digraph "CFG forio.fabric.sdk.android.services.common.AdvertisingInfoServiceStrategy.AdvertisingInterface.isLimitAdTrackingEnabled()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.os.Parcel) =  android.os.Parcel.obtain():android.os.Parcel type: STATIC \l0x0004: INVOKE  (r1 I:android.os.Parcel) =  android.os.Parcel.obtain():android.os.Parcel type: STATIC \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST_STR  (r3 I:java.lang.String) =  \"com.google.android.gms.ads.identifier.internal.IAdvertisingIdService\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|SYNTHETIC\lSplitter:B:1:0x000b\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000b\l|0x000b: INVOKE  (r0 I:android.os.Parcel), (r3 I:java.lang.String) android.os.Parcel.writeInterfaceToken(java.lang.String):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0025 \}, TRY_ENTER]\l0x000e: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0025 \}]\l0x000f: INVOKE  (r0 I:android.os.Parcel), (r3 I:int) android.os.Parcel.writeInt(int):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0025 \}]\l0x0012: IGET  (r4 I:android.os.IBinder) = \l  (r6 I:io.fabric.sdk.android.services.common.AdvertisingInfoServiceStrategy$AdvertisingInterface)\l io.fabric.sdk.android.services.common.AdvertisingInfoServiceStrategy.AdvertisingInterface.binder android.os.IBinder A[Catch:\{ Exception \-\> 0x0025 \}]\l0x0014: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x0025 \}]\l0x0015: INVOKE  \l  (r4 I:android.os.IBinder)\l  (r5 I:int)\l  (r0 I:android.os.Parcel)\l  (r1 I:android.os.Parcel)\l  (r2 I:int)\l android.os.IBinder.transact(int, android.os.Parcel, android.os.Parcel, int):boolean type: INTERFACE A[Catch:\{ Exception \-\> 0x0025 \}]\l0x0018: INVOKE  (r1 I:android.os.Parcel) android.os.Parcel.readException():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0025 \}]\l0x001b: INVOKE  (r4 I:int) = (r1 I:android.os.Parcel) android.os.Parcel.readInt():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x0025 \}]\l0x001e: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0030 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|ExcHandler: all null\lSplitter:B:7:0x0025\l|0x0023: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|SYNTHETIC\lSplitter:B:7:0x0025\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0025\l|0x0025: INVOKE  (r3 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC A[Catch:\{ all \-\> 0x0023 \}, ExcHandler: Exception null, TRY_ENTER]\l0x0029: CONST_STR  (r4 I:java.lang.String) =  \"Fabric\" A[Catch:\{ all \-\> 0x0023 \}]\l0x002b: CONST_STR  (r5 I:java.lang.String) =  \"Could not get parcel from Google Play Service to capture Advertising limitAdTracking\" A[Catch:\{ all \-\> 0x0023 \}]\l0x002d: INVOKE  \l  (r3 I:io.fabric.sdk.android.Logger)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l io.fabric.sdk.android.Logger.d(java.lang.String, java.lang.String):void type: INTERFACE A[Catch:\{ all \-\> 0x0023 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: INVOKE  (r1 I:android.os.Parcel) android.os.Parcel.recycle():void type: VIRTUAL \l0x0033: INVOKE  (r0 I:android.os.Parcel) android.os.Parcel.recycle():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: RETURN  (r2 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: INVOKE  (r1 I:android.os.Parcel) android.os.Parcel.recycle():void type: VIRTUAL \l0x003a: INVOKE  (r0 I:android.os.Parcel) android.os.Parcel.recycle():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|0x003d: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean io.fabric.sdk.android.services.common.AdvertisingInfoServiceStrategy.AdvertisingInterface.isLimitAdTrackingEnabled((r6 'this' I:io.fabric.sdk.android.services.common.AdvertisingInfoServiceStrategy$AdvertisingInterface A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.os.RemoteException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_9;
Node_5 -> Node_11;
Node_7 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

