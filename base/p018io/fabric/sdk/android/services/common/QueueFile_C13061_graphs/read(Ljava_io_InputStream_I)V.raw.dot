digraph "CFG forio.fabric.sdk.android.services.common.QueueFile.1.read(Ljava\/io\/InputStream;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:boolean) = (r1 I:io.fabric.sdk.android.services.common.QueueFile$1) io.fabric.sdk.android.services.common.QueueFile.1.first boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: IPUT  \l  (r2 I:boolean)\l  (r1 I:io.fabric.sdk.android.services.common.QueueFile$1)\l io.fabric.sdk.android.services.common.QueueFile.1.first boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r2 I:java.lang.StringBuilder) = (r1 I:io.fabric.sdk.android.services.common.QueueFile$1) io.fabric.sdk.android.services.common.QueueFile.1.val$builder java.lang.StringBuilder \l0x000a: CONST_STR  (r0 I:java.lang.String) =  \", \" \l0x000c: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IGET  (r2 I:java.lang.StringBuilder) = (r1 I:io.fabric.sdk.android.services.common.QueueFile$1) io.fabric.sdk.android.services.common.QueueFile.1.val$builder java.lang.StringBuilder \l0x0011: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{public void io.fabric.sdk.android.services.common.QueueFile.1.read((r1 'this' I:io.fabric.sdk.android.services.common.QueueFile$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

