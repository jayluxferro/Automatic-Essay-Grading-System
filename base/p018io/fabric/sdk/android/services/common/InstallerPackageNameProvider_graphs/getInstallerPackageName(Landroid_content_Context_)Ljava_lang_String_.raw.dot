digraph "CFG forio.fabric.sdk.android.services.common.InstallerPackageNameProvider.getInstallerPackageName(Landroid\/content\/Context;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r1 I:io.fabric.sdk.android.services.cache.MemoryValueCache\<java.lang.String\>) = \l  (r4 I:io.fabric.sdk.android.services.common.InstallerPackageNameProvider)\l io.fabric.sdk.android.services.common.InstallerPackageNameProvider.installerPackageNameCache io.fabric.sdk.android.services.cache.MemoryValueCache A[Catch:\{ Exception \-\> 0x0015 \}, TRY_ENTER]\l0x0003: IGET  (r2 I:io.fabric.sdk.android.services.cache.ValueLoader\<java.lang.String\>) = \l  (r4 I:io.fabric.sdk.android.services.common.InstallerPackageNameProvider)\l io.fabric.sdk.android.services.common.InstallerPackageNameProvider.installerPackageNameLoader io.fabric.sdk.android.services.cache.ValueLoader A[Catch:\{ Exception \-\> 0x0015 \}]\l0x0005: INVOKE  (r5 I:java.lang.Object) = \l  (r1 I:io.fabric.sdk.android.services.cache.MemoryValueCache)\l  (r5 I:android.content.Context)\l  (r2 I:io.fabric.sdk.android.services.cache.ValueLoader)\l io.fabric.sdk.android.services.cache.MemoryValueCache.get(android.content.Context, io.fabric.sdk.android.services.cache.ValueLoader):java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x0015 \}]\l0x0009: CHECK_CAST  (r5 I:java.lang.String) = (java.lang.String) (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x0015 \}]\l0x000b: CONST_STR  (r1 I:java.lang.String) =  \"\" A[Catch:\{ Exception \-\> 0x0015 \}]\l0x000d: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x0015 \}]\l0x0010: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: RETURN  (r5 I:java.lang.String) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|ExcHandler: Exception null\lSplitter:B:1:0x0001\l|0x0015: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: INVOKE  (r1 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x001a: CONST_STR  (r2 I:java.lang.String) =  \"Fabric\" \l0x001c: CONST_STR  (r3 I:java.lang.String) =  \"Failed to determine installer package name\" \l0x001e: INVOKE  \l  (r1 I:io.fabric.sdk.android.Logger)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r5 I:java.lang.Throwable)\l io.fabric.sdk.android.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String io.fabric.sdk.android.services.common.InstallerPackageNameProvider.getInstallerPackageName((r4 'this' I:io.fabric.sdk.android.services.common.InstallerPackageNameProvider A[IMMUTABLE_TYPE, THIS]), (r5 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

