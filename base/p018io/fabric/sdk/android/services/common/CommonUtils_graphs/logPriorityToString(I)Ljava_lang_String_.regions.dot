digraph "CFG forio.fabric.sdk.android.services.common.CommonUtils.logPriorityToString(I)Ljava\/lang\/String;" {
subgraph cluster_Region_1689863222 {
label = "R(1:0)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1203716350 {
label = "Switch: 6, default: R(1:1)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|switch(r0) \{\l    case 2: goto L_0x0015;\l    case 3: goto L_0x0012;\l    case 4: goto L_0x000f;\l    case 5: goto L_0x000c;\l    case 6: goto L_0x0009;\l    case 7: goto L_0x0006;\l    default: goto L_0x0003;\l\}\l}"];
subgraph cluster_Region_1662636728 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|RETURN\l|return \"V\"\l}"];
}
subgraph cluster_Region_293658729 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|RETURN\l|return LOG_PRIORITY_NAME_DEBUG\l}"];
}
subgraph cluster_Region_1060540059 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|RETURN\l|return LOG_PRIORITY_NAME_INFO\l}"];
}
subgraph cluster_Region_36929843 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|RETURN\l|return \"W\"\l}"];
}
subgraph cluster_Region_798101471 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|RETURN\l|return \"E\"\l}"];
}
subgraph cluster_Region_956772844 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return \"A\"\l}"];
}
subgraph cluster_Region_852374017 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|RETURN\l|return LOG_PRIORITY_NAME_UNKNOWN\l}"];
}
}
}
MethodNode[shape=record,label="{public static java.lang.String io.fabric.sdk.android.services.common.CommonUtils.logPriorityToString((r0v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2;
Node_0 -> Node_3;
Node_0 -> Node_4;
Node_0 -> Node_5;
Node_0 -> Node_6;
Node_0 -> Node_7;
}

