digraph "CFG forio.fabric.sdk.android.services.common.CommonUtils.createInstanceIdFrom([Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0053 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: ARRAY_LENGTH  (r1 I:int) = (r7 I:?[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0007 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0009: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000c: ARRAY_LENGTH  (r2 I:int) = (r7 I:?[]) \l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:11:0x0028 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: AGET  (r4 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: CONST_STR  (r5 I:java.lang.String) =  \"\-\" \l0x0016: CONST_STR  (r6 I:java.lang.String) =  \"\" \l0x0018: INVOKE  (r4 I:java.lang.String) = \l  (r4 I:java.lang.String)\l  (r5 I:java.lang.CharSequence)\l  (r6 I:java.lang.CharSequence)\l java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String type: VIRTUAL \l0x001c: SGET  (r5 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x001e: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r5 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL \l0x0022: INVOKE  (r1 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: INVOKE  (r1 I:java.util.List) java.util.Collections.sort(java.util.List):void type: STATIC \l0x002b: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002d: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0030: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|0x0038: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0044 \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x003e: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x0040: INVOKE  (r7 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0048: INVOKE  (r1 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|0x004c: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:18:0x0052 \l}"];
Node_17 [shape=record,label="{17\:\ 0x004e|0x004e: INVOKE  (r0 I:java.lang.String) = (r7 I:java.lang.String) io.fabric.sdk.android.services.common.CommonUtils.sha1(java.lang.String):java.lang.String type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x0052|0x0052: RETURN  (r0 I:java.lang.String) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|0x0053: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String io.fabric.sdk.android.services.common.CommonUtils.createInstanceIdFrom((r7 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_19[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_6;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_12;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
}

