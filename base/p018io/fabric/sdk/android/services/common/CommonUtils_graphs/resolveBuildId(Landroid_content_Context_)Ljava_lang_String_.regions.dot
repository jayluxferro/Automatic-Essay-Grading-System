digraph "CFG forio.fabric.sdk.android.services.common.CommonUtils.resolveBuildId(Landroid\/content\/Context;)Ljava\/lang\/String;" {
subgraph cluster_Region_1097905199 {
label = "R(3:0|(1:2)|(2:(1:5)|(2:4|6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = getResourcesIdentifier(r4, FABRIC_BUILD_ID, \"string\")\l}"];
subgraph cluster_IfRegion_902872912 {
label = "IF [B:1:0x0008] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 == 0) goto L_0x000a\l}"];
subgraph cluster_Region_1557663834 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|int r0 = getResourcesIdentifier(r4, CRASHLYTICS_BUILD_ID, \"string\")\l}"];
}
}
subgraph cluster_Region_1779543572 {
label = "R(2:(1:5)|(2:4|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_515778523 {
label = "IF [B:3:0x0012] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0012|PHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v5 int) binds: [B:1:0x0008, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == 0) goto L_0x0037\l}"];
subgraph cluster_Region_1604979122 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0037|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1521166831 {
label = "R(2:4|6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0014|java.lang.String java.lang.String r4 = r4.getResources().getString(r0)\lio.fabric.sdk.android.Logger p018io.fabric.sdk.android.Logger r0 = p018io.fabric.sdk.android.Fabric.getLogger()\lr0.mo22221d(p018io.fabric.sdk.android.Fabric.TAG, \"Build ID is: \" + r4)\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return r4\l}"];
}
}
}
MethodNode[shape=record,label="{public static java.lang.String io.fabric.sdk.android.services.common.CommonUtils.resolveBuildId((r4v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
}

