digraph "CFG forio.fabric.sdk.android.services.common.TimingMetric.startMeasuring()V" {
subgraph cluster_Region_403090133 {
label = "R(1:(1:(1:(1:(1:7)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1199401454 {
label = "R(1:(1:(1:(1:7))))";
node [shape=record,color=blue];
subgraph cluster_Region_1469452568 {
label = "R(1:(1:(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1675632098 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1310544713 {
label = "IF [B:3:0x0003] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r2.disabled != true) goto L_0x0007\l}"];
subgraph cluster_Region_1652781437 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0007\l|r2.start = android.os.SystemClock.elapsedRealtime()\lr2.duration = 0\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0005|DONT_GENERATE\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0006}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0007|SYNTHETIC\lSplitter:B:6:0x0007\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0011|DONT_GENERATE\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0012}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0013|REMOVE\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0014|REMOVE\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0015|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{public synchronized void io.fabric.sdk.android.services.common.TimingMetric.startMeasuring((r2v0 'this' io.fabric.sdk.android.services.common.TimingMetric A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

