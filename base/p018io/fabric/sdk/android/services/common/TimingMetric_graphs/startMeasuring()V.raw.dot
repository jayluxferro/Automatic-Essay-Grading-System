digraph "CFG forio.fabric.sdk.android.services.common.TimingMetric.startMeasuring()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:boolean) = (r2 I:io.fabric.sdk.android.services.common.TimingMetric) io.fabric.sdk.android.services.common.TimingMetric.disabled boolean A[Catch:\{ all \-\> 0x0013 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|SYNTHETIC\lSplitter:B:6:0x0007\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0007\l|0x0007: INVOKE  (r0 I:long) =  android.os.SystemClock.elapsedRealtime():long type: STATIC A[Catch:\{ all \-\> 0x0013 \}, TRY_ENTER]\l0x000b: IPUT  \l  (r0 I:long)\l  (r2 I:io.fabric.sdk.android.services.common.TimingMetric)\l io.fabric.sdk.android.services.common.TimingMetric.start long A[Catch:\{ all \-\> 0x0013 \}]\l0x000d: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ all \-\> 0x0013 \}]\l0x000f: IPUT  \l  (r0 I:long)\l  (r2 I:io.fabric.sdk.android.services.common.TimingMetric)\l io.fabric.sdk.android.services.common.TimingMetric.duration long A[Catch:\{ all \-\> 0x0013 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0013: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|0x0014: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0015|0x0015: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void io.fabric.sdk.android.services.common.TimingMetric.startMeasuring((r2 'this' I:io.fabric.sdk.android.services.common.TimingMetric A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

