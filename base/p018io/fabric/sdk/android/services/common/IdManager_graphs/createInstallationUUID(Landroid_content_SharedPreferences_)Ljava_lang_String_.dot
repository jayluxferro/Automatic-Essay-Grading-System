digraph "CFG forio.fabric.sdk.android.services.common.IdManager.createInstallationUUID(Landroid\/content\/SharedPreferences;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.installationIdLock.lock()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x002d \}\lSplitter:B:1:0x0008\l|java.lang.String r0 = r3.getString(PREFKEY_INSTALLATION_UUID, (java.lang.String) null)     \/\/ Catch:\{ all \-\> 0x002d \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|Catch:\{ all \-\> 0x002d \}\l|if (r0 != null) goto L_0x0027     \/\/ Catch:\{ all \-\> 0x002d \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|Catch:\{ all \-\> 0x002d \}\l|java.lang.String r0 = formatId(java.util.UUID.randomUUID().toString())     \/\/ Catch:\{ all \-\> 0x002d \}\lr3.edit().putString(PREFKEY_INSTALLATION_UUID, r0).commit()     \/\/ Catch:\{ all \-\> 0x002d \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|DONT_GENERATE\lPHI: r0 \l  PHI: (r0v4 java.lang.String) = (r0v3 java.lang.String), (r0v7 java.lang.String) binds: [B:3:0x000c, B:4:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|java.util.concurrent.locks.ReentrantLock r3 = r2.installationIdLock\lr3.unlock()\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|RETURN\l|return r0\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|ExcHandler:  FINALLY\lSplitter:B:1:0x0008\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|FINALLY_INSNS\l|r2.installationIdLock.unlock()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|throw r3\l}"];
MethodNode[shape=record,label="{private java.lang.String io.fabric.sdk.android.services.common.IdManager.createInstallationUUID((r2v0 'this' io.fabric.sdk.android.services.common.IdManager A[IMMUTABLE_TYPE, THIS]), (r3v0 android.content.SharedPreferences A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.SuppressLint, \{value=[CommitPrefEdits]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

