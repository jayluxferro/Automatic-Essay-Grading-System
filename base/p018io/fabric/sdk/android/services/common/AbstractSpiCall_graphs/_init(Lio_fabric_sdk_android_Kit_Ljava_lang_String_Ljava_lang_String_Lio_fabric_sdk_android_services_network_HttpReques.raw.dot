digraph "CFG forio.fabric.sdk.android.services.common.AbstractSpiCall.\<init\>(Lio\/fabric\/sdk\/android\/Kit;Ljava\/lang\/String;Ljava\/lang\/String;Lio\/fabric\/sdk\/android\/services\/network\/HttpRequestFactory;Lio\/fabric\/sdk\/android\/services\/network\/HttpMethod;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0016 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IPUT  \l  (r1 I:io.fabric.sdk.android.Kit)\l  (r0 I:io.fabric.sdk.android.services.common.AbstractSpiCall)\l io.fabric.sdk.android.services.common.AbstractSpiCall.kit io.fabric.sdk.android.Kit \l0x0009: IPUT  \l  (r2 I:java.lang.String)\l  (r0 I:io.fabric.sdk.android.services.common.AbstractSpiCall)\l io.fabric.sdk.android.services.common.AbstractSpiCall.protocolAndHostOverride java.lang.String \l0x000b: INVOKE  (r1 I:java.lang.String) = \l  (r0 I:io.fabric.sdk.android.services.common.AbstractSpiCall)\l  (r3 I:java.lang.String)\l io.fabric.sdk.android.services.common.AbstractSpiCall.overrideProtocolAndHost(java.lang.String):java.lang.String type: DIRECT \l0x000f: IPUT  \l  (r1 I:java.lang.String)\l  (r0 I:io.fabric.sdk.android.services.common.AbstractSpiCall)\l io.fabric.sdk.android.services.common.AbstractSpiCall.url java.lang.String \l0x0011: IPUT  \l  (r4 I:io.fabric.sdk.android.services.network.HttpRequestFactory)\l  (r0 I:io.fabric.sdk.android.services.common.AbstractSpiCall)\l io.fabric.sdk.android.services.common.AbstractSpiCall.requestFactory io.fabric.sdk.android.services.network.HttpRequestFactory \l0x0013: IPUT  \l  (r5 I:io.fabric.sdk.android.services.network.HttpMethod)\l  (r0 I:io.fabric.sdk.android.services.common.AbstractSpiCall)\l io.fabric.sdk.android.services.common.AbstractSpiCall.method io.fabric.sdk.android.services.network.HttpMethod \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0018: CONST_STR  (r2 I:java.lang.String) =  \"requestFactory must not be null.\" \l0x001a: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0020: CONST_STR  (r2 I:java.lang.String) =  \"url must not be null.\" \l0x0022: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void io.fabric.sdk.android.services.common.AbstractSpiCall.\<init\>((r0 'this' I:io.fabric.sdk.android.services.common.AbstractSpiCall A[IMMUTABLE_TYPE, THIS]), (r1 I:io.fabric.sdk.android.Kit A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:io.fabric.sdk.android.services.network.HttpRequestFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:io.fabric.sdk.android.services.network.HttpMethod A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

