digraph "CFG forio.fabric.sdk.android.services.common.AbstractSpiCall.overrideProtocolAndHost(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.String) = \l  (r1 I:io.fabric.sdk.android.services.common.AbstractSpiCall)\l io.fabric.sdk.android.services.common.AbstractSpiCall.protocolAndHostOverride java.lang.String \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String) io.fabric.sdk.android.services.common.CommonUtils.isNullOrEmpty(java.lang.String):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: SGET  (r0 I:java.util.regex.Pattern) =  io.fabric.sdk.android.services.common.AbstractSpiCall.PROTOCOL_AND_HOST_PATTERN java.util.regex.Pattern \l0x000a: INVOKE  (r2 I:java.util.regex.Matcher) = \l  (r0 I:java.util.regex.Pattern)\l  (r2 I:java.lang.CharSequence)\l java.util.regex.Pattern.matcher(java.lang.CharSequence):java.util.regex.Matcher type: VIRTUAL \l0x000e: IGET  (r0 I:java.lang.String) = \l  (r1 I:io.fabric.sdk.android.services.common.AbstractSpiCall)\l io.fabric.sdk.android.services.common.AbstractSpiCall.protocolAndHostOverride java.lang.String \l0x0010: INVOKE  (r2 I:java.lang.String) = (r2 I:java.util.regex.Matcher), (r0 I:java.lang.String) java.util.regex.Matcher.replaceFirst(java.lang.String):java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: RETURN  (r2 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private java.lang.String io.fabric.sdk.android.services.common.AbstractSpiCall.overrideProtocolAndHost((r1 'this' I:io.fabric.sdk.android.services.common.AbstractSpiCall A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

