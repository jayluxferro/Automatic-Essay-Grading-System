digraph "CFG forio.fabric.sdk.android.services.common.AbstractSpiCall.overrideProtocolAndHost(Ljava\/lang\/String;)Ljava\/lang\/String;" {
subgraph cluster_Region_1846201164 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|RETURN\l|return !p018io.fabric.sdk.android.services.common.CommonUtils.isNullOrEmpty(r1.protocolAndHostOverride) ? PROTOCOL_AND_HOST_PATTERN.matcher(r2).replaceFirst(r1.protocolAndHostOverride) : r2\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_3 [shape=record,color=red,label="{3\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private java.lang.String io.fabric.sdk.android.services.common.AbstractSpiCall.overrideProtocolAndHost((r1v0 'this' io.fabric.sdk.android.services.common.AbstractSpiCall A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_0 -> Node_1;
Node_2 -> Node_3;
}

