digraph "CFG forio.fabric.sdk.android.services.common.AbstractSpiCall.getHttpRequest(Ljava\/util\/Map;)Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|io.fabric.sdk.android.services.network.HttpRequest r4 = r3.requestFactory.buildHttpRequest(r3.method, getUrl(), r4).useCaches(false).connectTimeout(10000)\ljava.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(CRASHLYTICS_USER_AGENT)\lr1.append(r3.kit.getVersion())\l}"];
Node_1 [shape=record,label="{1\:\ 0x003c|RETURN\l|return r4.header(\"User\-Agent\", r1.toString()).header(HEADER_DEVELOPER_TOKEN, \"470fa2b4ae81cd56ecbcda9735803434cec591fa\")\l}"];
MethodNode[shape=record,label="{protected io.fabric.sdk.android.services.network.HttpRequest io.fabric.sdk.android.services.common.AbstractSpiCall.getHttpRequest((r3v0 'this' io.fabric.sdk.android.services.common.AbstractSpiCall A[IMMUTABLE_TYPE, THIS]), (r4v0 java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;), Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

