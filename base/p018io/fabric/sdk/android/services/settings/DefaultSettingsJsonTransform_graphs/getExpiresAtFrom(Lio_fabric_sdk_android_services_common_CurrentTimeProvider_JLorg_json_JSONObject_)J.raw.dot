digraph "CFG forio.fabric.sdk.android.services.settings.DefaultSettingsJsonTransform.getExpiresAtFrom(Lio\/fabric\/sdk\/android\/services\/common\/CurrentTimeProvider;JLorg\/json\/JSONObject;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"expires_at\" \l0x0002: INVOKE  (r0 I:boolean) = (r8 I:org.json.JSONObject), (r0 I:java.lang.String) org.json.JSONObject.has(java.lang.String):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST_STR  (r5 I:java.lang.String) =  \"expires_at\" \l0x000a: INVOKE  (r5 I:long) = (r8 I:org.json.JSONObject), (r5 I:java.lang.String) org.json.JSONObject.getLong(java.lang.String):long type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r0 I:long) = \l  (r5 I:io.fabric.sdk.android.services.common.CurrentTimeProvider)\l io.fabric.sdk.android.services.common.CurrentTimeProvider.getCurrentTimeMillis():long type: INTERFACE \l0x0013: CONST  (r2 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x0015: ARITH  (r6 I:long) = (r6 I:long) * (r2 I:long) \l0x0017: ARITH  (r5 I:long) = (r0 I:long) + (r6 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: RETURN  (r5 I:long) \l}"];
MethodNode[shape=record,label="{private long io.fabric.sdk.android.services.settings.DefaultSettingsJsonTransform.getExpiresAtFrom((r4 'this' I:io.fabric.sdk.android.services.settings.DefaultSettingsJsonTransform A[IMMUTABLE_TYPE, THIS]), (r5 I:io.fabric.sdk.android.services.common.CurrentTimeProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.json.JSONObject A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.json.JSONException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

