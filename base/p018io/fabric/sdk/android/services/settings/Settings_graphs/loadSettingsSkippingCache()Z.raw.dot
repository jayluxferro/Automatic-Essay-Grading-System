digraph "CFG forio.fabric.sdk.android.services.settings.Settings.loadSettingsSkippingCache()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:io.fabric.sdk.android.services.settings.SettingsController) = (r5 I:io.fabric.sdk.android.services.settings.Settings) io.fabric.sdk.android.services.settings.Settings.settingsController io.fabric.sdk.android.services.settings.SettingsController A[Catch:\{ all \-\> 0x0021 \}, TRY_ENTER]\l0x0003: SGET  (r1 I:io.fabric.sdk.android.services.settings.SettingsCacheBehavior) =  io.fabric.sdk.android.services.settings.SettingsCacheBehavior.SKIP_CACHE_LOOKUP io.fabric.sdk.android.services.settings.SettingsCacheBehavior A[Catch:\{ all \-\> 0x0021 \}]\l0x0005: INVOKE  (r0 I:io.fabric.sdk.android.services.settings.SettingsData) = \l  (r0 I:io.fabric.sdk.android.services.settings.SettingsController)\l  (r1 I:io.fabric.sdk.android.services.settings.SettingsCacheBehavior)\l io.fabric.sdk.android.services.settings.SettingsController.loadSettingsData(io.fabric.sdk.android.services.settings.SettingsCacheBehavior):io.fabric.sdk.android.services.settings.SettingsData type: INTERFACE A[Catch:\{ all \-\> 0x0021 \}]\l0x0009: INVOKE  \l  (r5 I:io.fabric.sdk.android.services.settings.Settings)\l  (r0 I:io.fabric.sdk.android.services.settings.SettingsData)\l io.fabric.sdk.android.services.settings.Settings.setSettingsData(io.fabric.sdk.android.services.settings.SettingsData):void type: DIRECT A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001a A[Catch:\{ all \-\> 0x0021 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: INVOKE  (r1 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC A[Catch:\{ all \-\> 0x0021 \}]\l0x0012: CONST_STR  (r2 I:java.lang.String) =  \"Fabric\" A[Catch:\{ all \-\> 0x0021 \}]\l0x0014: CONST_STR  (r3 I:java.lang.String) =  \"Failed to force reload of settings from Crashlytics.\" A[Catch:\{ all \-\> 0x0021 \}]\l0x0016: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0021 \}]\l0x0017: INVOKE  \l  (r1 I:io.fabric.sdk.android.Logger)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.Throwable)\l io.fabric.sdk.android.Logger.e(java.lang.String, java.lang.String, java.lang.Throwable):void type: INTERFACE A[Catch:\{ all \-\> 0x0021 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: RETURN  (r0 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0021: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: MONITOR_EXIT  (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0023|0x0023: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized boolean io.fabric.sdk.android.services.settings.Settings.loadSettingsSkippingCache((r5 'this' I:io.fabric.sdk.android.services.settings.Settings A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

