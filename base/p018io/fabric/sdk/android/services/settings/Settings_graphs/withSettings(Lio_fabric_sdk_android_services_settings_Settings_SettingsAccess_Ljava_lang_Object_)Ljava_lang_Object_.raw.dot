digraph "CFG forio.fabric.sdk.android.services.settings.Settings.withSettings(Lio\/fabric\/sdk\/android\/services\/settings\/Settings$SettingsAccess;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicReference\<io.fabric.sdk.android.services.settings.SettingsData\>) = (r1 I:io.fabric.sdk.android.services.settings.Settings) io.fabric.sdk.android.services.settings.Settings.settingsData java.util.concurrent.atomic.AtomicReference \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.concurrent.atomic.AtomicReference) java.util.concurrent.atomic.AtomicReference.get():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:io.fabric.sdk.android.services.settings.SettingsData) = (io.fabric.sdk.android.services.settings.SettingsData) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r3 I:java.lang.Object) = \l  (r2 I:io.fabric.sdk.android.services.settings.Settings$SettingsAccess)\l  (r0 I:io.fabric.sdk.android.services.settings.SettingsData)\l io.fabric.sdk.android.services.settings.Settings.SettingsAccess.usingSettings(io.fabric.sdk.android.services.settings.SettingsData):java.lang.Object type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: RETURN  (r3 I:T) \l}"];
MethodNode[shape=record,label="{public T io.fabric.sdk.android.services.settings.Settings.withSettings((r1 'this' I:io.fabric.sdk.android.services.settings.Settings A[IMMUTABLE_TYPE, THIS]), (r2 I:io.fabric.sdk.android.services.settings.Settings$SettingsAccess\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lio\/fabric\/sdk\/android\/services\/settings\/Settings$SettingsAccess\<, TT;\>;TT;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4;
}

