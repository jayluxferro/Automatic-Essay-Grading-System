digraph "CFG forio.fabric.sdk.android.services.persistence.FileStoreImpl.isExternalStorageAvailable()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.String) =  android.os.Environment.getExternalStorageState():java.lang.String type: STATIC \l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"mounted\" \l0x0006: INVOKE  (r0 I:boolean) = (r1 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r0 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x0010: CONST_STR  (r1 I:java.lang.String) =  \"Fabric\" \l0x0012: CONST_STR  (r2 I:java.lang.String) =  \"External Storage is not mounted and\/or writable\lHave you declared android.permission.WRITE_EXTERNAL_STORAGE in the manifest?\" \l0x0014: INVOKE  \l  (r0 I:io.fabric.sdk.android.Logger)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l io.fabric.sdk.android.Logger.w(java.lang.String, java.lang.String):void type: INTERFACE \l0x0017: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: RETURN  (r0 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{boolean io.fabric.sdk.android.services.persistence.FileStoreImpl.isExternalStorageAvailable((r3 'this' I:io.fabric.sdk.android.services.persistence.FileStoreImpl A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

