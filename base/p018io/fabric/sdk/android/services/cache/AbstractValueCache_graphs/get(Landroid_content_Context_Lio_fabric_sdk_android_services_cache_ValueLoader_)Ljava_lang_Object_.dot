digraph "CFG forio.fabric.sdk.android.services.cache.AbstractValueCache.get(Landroid\/content\/Context;Lio\/fabric\/sdk\/android\/services\/cache\/ValueLoader;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|java.lang.Object r0 = getCached(r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r0 != null) goto L_0x001a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x0009|if (r1.childCache == null) goto L_0x0012\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|java.lang.Object r3 = r1.childCache.get(r2, r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|java.lang.Object r3 = r3.load(r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|PHI: r3 \l  PHI: (r3v1 T) = (r3v2 T), (r3v3 T) binds: [B:7:0x0012, B:6:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|r0 = r3\lcache(r2, r0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|PHI: r0 \l  PHI: (r0v1 T) = (r0v0 T), (r0v3 T) binds: [B:3:0x0005, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|RETURN\l|return r0\l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|REMOVE\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|REMOVE\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|REMOVE\l|throw r2\l}"];
MethodNode[shape=record,label="{public final synchronized T io.fabric.sdk.android.services.cache.AbstractValueCache.get((r1v0 'this' io.fabric.sdk.android.services.cache.AbstractValueCache A[IMMUTABLE_TYPE, THIS]), (r2v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 io.fabric.sdk.android.services.cache.ValueLoader\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/content\/Context;, Lio\/fabric\/sdk\/android\/services\/cache\/ValueLoader\<, TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

