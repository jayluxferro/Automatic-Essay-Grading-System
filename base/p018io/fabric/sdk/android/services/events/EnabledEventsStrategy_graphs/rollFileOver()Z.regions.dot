digraph "CFG forio.fabric.sdk.android.services.events.EnabledEventsStrategy.rollFileOver()Z" {
subgraph cluster_Region_242372924 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_878427093 {
label = "Try: R(1:2) catches: R(3:3|4|5)";
node [shape=record,color=blue];
subgraph cluster_Region_287119915 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return r3.filesManager.rollFileOver()\l}"];
}
subgraph cluster_Region_213265428 {
label = "R(3:3|4|5) | ExcHandler: IOException (r0v0 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|ExcHandler: IOException (r0v0 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|p018io.fabric.sdk.android.services.common.CommonUtils.logControlledError(r3.context, \"Failed to roll file over.\", r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|RETURN\l|return false\l}"];
}
}
}
subgraph cluster_Region_213265428 {
label = "R(3:3|4|5) | ExcHandler: IOException (r0v0 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|ExcHandler: IOException (r0v0 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|p018io.fabric.sdk.android.services.common.CommonUtils.logControlledError(r3.context, \"Failed to roll file over.\", r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|RETURN\l|return false\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|Catch:\{ IOException \-\> 0x0007 \}\lSplitter:B:0:0x0000\l}"];
MethodNode[shape=record,label="{public boolean io.fabric.sdk.android.services.events.EnabledEventsStrategy.rollFileOver((r3v0 'this' io.fabric.sdk.android.services.events.EnabledEventsStrategy A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
}

