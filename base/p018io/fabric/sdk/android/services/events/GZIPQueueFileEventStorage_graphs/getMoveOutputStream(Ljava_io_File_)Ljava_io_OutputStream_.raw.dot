digraph "CFG forio.fabric.sdk.android.services.events.GZIPQueueFileEventStorage.getMoveOutputStream(Ljava\/io\/File;)Ljava\/io\/OutputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.zip.GZIPOutputStream) =  java.util.zip.GZIPOutputStream \l0x0002: NEW_INSTANCE  (r1 I:java.io.FileOutputStream) =  java.io.FileOutputStream \l0x0004: INVOKE  (r1 I:java.io.FileOutputStream), (r3 I:java.io.File) java.io.FileOutputStream.\<init\>(java.io.File):void type: DIRECT \l0x0007: INVOKE  \l  (r0 I:java.util.zip.GZIPOutputStream)\l  (r1 I:java.io.OutputStream)\l java.util.zip.GZIPOutputStream.\<init\>(java.io.OutputStream):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN  (r0 I:java.io.OutputStream) \l}"];
MethodNode[shape=record,label="{public java.io.OutputStream io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage.getMoveOutputStream((r2 'this' I:io.fabric.sdk.android.services.events.GZIPQueueFileEventStorage A[IMMUTABLE_TYPE, THIS]), (r3 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

