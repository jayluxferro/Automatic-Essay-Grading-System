digraph "CFG forio.fabric.sdk.android.services.events.EventsFilesManager.rollFileOver()Z" {
subgraph cluster_Region_1020636240 {
label = "R(4:0|(1:2)(1:3)|4|5) | DECL_VAR: java.lang.String null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|boolean r1 = true\l}"];
subgraph cluster_IfRegion_493973185 {
label = "IF [B:1:0x0008] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r9.eventStorage.isWorkingFileEmpty() == false) goto L_0x000a\l}"];
subgraph cluster_Region_512513917 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|java.lang.String r0 = generateUniqueRollOverFileName()\lr9.eventStorage.rollOver(r0)\lp018io.fabric.sdk.android.services.common.CommonUtils.logControlled(r9.context, 4, p018io.fabric.sdk.android.Fabric.TAG, java.lang.String.format(java.util.Locale.US, \"generated new file %s\", new java.lang.Object[]\{r0\}))\lr9.lastRollOverTime = r9.currentTimeProvider.getCurrentTimeMillis()\l}"];
}
subgraph cluster_Region_1071619895 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0030|r0 = null\lr1 = false\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x0032|PHI: r0 r1 \l  PHI: (r0v2 java.lang.String) = (r0v3 java.lang.String), (r0v4 java.lang.String) binds: [B:3:0x0030, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 boolean) = (r1v2 boolean), (r1v0 boolean) binds: [B:3:0x0030, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\l|triggerRollOverOnListeners(r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|RETURN\l|return r1\l}"];
}
MethodNode[shape=record,label="{public boolean io.fabric.sdk.android.services.events.EventsFilesManager.rollFileOver((r9v0 'this' io.fabric.sdk.android.services.events.EventsFilesManager A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

