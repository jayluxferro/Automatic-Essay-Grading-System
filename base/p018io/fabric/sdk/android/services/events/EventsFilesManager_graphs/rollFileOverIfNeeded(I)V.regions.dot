digraph "CFG forio.fabric.sdk.android.services.events.EventsFilesManager.rollFileOverIfNeeded(I)V" {
subgraph cluster_Region_226831542 {
label = "R(1:(1:(1:2)))";
node [shape=record,color=blue];
subgraph cluster_Region_1804597950 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_364458941 {
label = "IF [B:1:0x000a] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r5.eventStorage.canWorkingFileStore(r6, getMaxByteSizePerFile()) == false) goto L_0x000c\l}"];
subgraph cluster_Region_1316734889 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|p018io.fabric.sdk.android.services.common.CommonUtils.logControlled(r5.context, 4, p018io.fabric.sdk.android.Fabric.TAG, java.lang.String.format(java.util.Locale.US, \"session analytics events file is %d bytes, new event is %d bytes, this is over flush limit of %d, rolling it over\", new java.lang.Object[]\{java.lang.Integer.valueOf(r5.eventStorage.getWorkingFileUsedSizeInBytes()), java.lang.Integer.valueOf(r6), java.lang.Integer.valueOf(getMaxByteSizePerFile())\}))\lrollFileOver()\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void io.fabric.sdk.android.services.events.EventsFilesManager.rollFileOverIfNeeded((r5v0 'this' io.fabric.sdk.android.services.events.EventsFilesManager A[IMMUTABLE_TYPE, THIS]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_0 -> Node_1;
}

