digraph "CFG forio.fabric.sdk.android.services.network.DefaultHttpRequestFactory.buildHttpRequest(Lio\/fabric\/sdk\/android\/services\/network\/HttpMethod;Ljava\/lang\/String;Ljava\/util\/Map;)Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|switch(r2) \{\l    case io.fabric.sdk.android.services.network.HttpMethod.GET :io.fabric.sdk.android.services.network.HttpMethod: goto L_0x0023;\l    case io.fabric.sdk.android.services.network.HttpMethod.POST :io.fabric.sdk.android.services.network.HttpMethod: goto L_0x001e;\l    case io.fabric.sdk.android.services.network.HttpMethod.PUT :io.fabric.sdk.android.services.network.HttpMethod: goto L_0x0019;\l    case io.fabric.sdk.android.services.network.HttpMethod.DELETE :io.fabric.sdk.android.services.network.HttpMethod: goto L_0x0014;\l    default: goto L_0x000c;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c}"];
Node_3 [shape=record,label="{3\:\ 0x0013|throw new java.lang.IllegalArgumentException(\"Unsupported HTTP method!\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|io.fabric.sdk.android.services.network.HttpRequest r2 = p018io.fabric.sdk.android.services.network.HttpRequest.delete((java.lang.CharSequence) r3)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|io.fabric.sdk.android.services.network.HttpRequest r2 = p018io.fabric.sdk.android.services.network.HttpRequest.put((java.lang.CharSequence) r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|io.fabric.sdk.android.services.network.HttpRequest r2 = p018io.fabric.sdk.android.services.network.HttpRequest.post((java.lang.CharSequence) r3, (java.util.Map\<?, ?\>) r4, true)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|io.fabric.sdk.android.services.network.HttpRequest r2 = p018io.fabric.sdk.android.services.network.HttpRequest.get((java.lang.CharSequence) r3, (java.util.Map\<?, ?\>) r4, true)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|PHI: r2 \l  PHI: (r2v3 io.fabric.sdk.android.services.network.HttpRequest) = (r2v4 io.fabric.sdk.android.services.network.HttpRequest), (r2v5 io.fabric.sdk.android.services.network.HttpRequest), (r2v6 io.fabric.sdk.android.services.network.HttpRequest), (r2v7 io.fabric.sdk.android.services.network.HttpRequest) binds: [B:7:0x0023, B:6:0x001e, B:5:0x0019, B:4:0x0014] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|if (isHttps(r3) == false) goto L_0x0040\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d}"];
Node_11 [shape=record,label="{11\:\ 0x002f|if (r1.pinningInfo == null) goto L_0x0040\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|javax.net.ssl.SSLSocketFactory r3 = getSSLSocketFactory()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|if (r3 == null) goto L_0x0040\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|((javax.net.ssl.HttpsURLConnection) r2.getConnection()).setSSLSocketFactory(r3)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|RETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public io.fabric.sdk.android.services.network.HttpRequest io.fabric.sdk.android.services.network.DefaultHttpRequestFactory.buildHttpRequest((r1v0 'this' io.fabric.sdk.android.services.network.DefaultHttpRequestFactory A[IMMUTABLE_TYPE, THIS]), (r2v0 io.fabric.sdk.android.services.network.HttpMethod A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.util.Map\<java.lang.String, java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lio\/fabric\/sdk\/android\/services\/network\/HttpMethod;, Ljava\/lang\/String;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;), Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_1 -> Node_6;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_4 -> Node_8;
Node_5 -> Node_8;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
}

