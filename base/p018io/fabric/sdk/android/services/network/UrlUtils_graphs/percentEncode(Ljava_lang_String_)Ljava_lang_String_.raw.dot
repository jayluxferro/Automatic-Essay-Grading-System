digraph "CFG forio.fabric.sdk.android.services.network.UrlUtils.percentEncode(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST_STR  (r7 I:java.lang.String) =  \"\" \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r7 I:java.lang.String) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0007: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000a: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.String) io.fabric.sdk.android.services.network.UrlUtils.urlEncode(java.lang.String):java.lang.String type: STATIC \l0x000e: INVOKE  (r1 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0012: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:22:0x0054 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: INVOKE  (r3 I:char) = (r7 I:java.lang.String), (r2 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0019: CONST  (r4 I:?[int, float, short, byte, char]) = (42 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0023 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: CONST_STR  (r3 I:java.lang.String) =  \"%2A\" \l0x001f: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: CONST  (r4 I:?[int, float, short, byte, char]) = (43 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002d \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: CONST_STR  (r3 I:java.lang.String) =  \"%20\" \l0x0029: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: CONST  (r4 I:?[int, float, short, byte, char]) = (37 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004e \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: ARITH  (r4 I:int) = (r2 I:int) + (2 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: IF  (r4 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:20:0x004e \l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|0x0035: ARITH  (r5 I:int) = (r2 I:int) + (1 int) \l0x0037: INVOKE  (r5 I:char) = (r7 I:java.lang.String), (r5 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x003b: CONST  (r6 I:?[int, float, short, byte, char]) = (55 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004e \l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|0x003f: INVOKE  (r5 I:char) = (r7 I:java.lang.String), (r4 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0043: CONST  (r6 I:?[int, float, short, byte, char]) = (69 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0045|0x0045: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x004e \l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|0x0047: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (126(0x7e, float:1.77E\-43) ?[int, float, short, byte, char])\l \l0x0049: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x004c: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|0x004e: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0054|0x0054: INVOKE  (r7 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0058|0x0058: RETURN  (r7 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static java.lang.String io.fabric.sdk.android.services.network.UrlUtils.percentEncode((r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_22;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_21;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_20;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_4;
Node_22 -> Node_23;
}

