digraph "CFG forio.fabric.sdk.android.services.network.PinningTrustManager.checkPinTrust([Ljava\/security\/cert\/X509Certificate;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = \l  (r8 I:io.fabric.sdk.android.services.network.PinningTrustManager)\l io.fabric.sdk.android.services.network.PinningTrustManager.pinCreationTimeMillis long \l0x0002: CONST  (r2 I:?[long, double]) = (\-1 ?[long, double]) \l0x0004: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0047 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r0 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC \l0x000c: IGET  (r2 I:long) = \l  (r8 I:io.fabric.sdk.android.services.network.PinningTrustManager)\l io.fabric.sdk.android.services.network.PinningTrustManager.pinCreationTimeMillis long \l0x000e: ARITH  (r0 I:long) = (r0 I:long) \- (r2 I:long) \l0x000f: CONST  (r2 I:?[long, double]) = \l  (15552000000(0x39ef8b000, double:7.683708924E\-314) ?[long, double])\l \l0x0014: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x0047 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: INVOKE  (r9 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x001c: CONST_STR  (r0 I:java.lang.String) =  \"Fabric\" \l0x001e: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0020: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0023: CONST_STR  (r4 I:java.lang.String) =  \"Certificate pins are stale, (\" \l0x0025: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0028: INVOKE  (r4 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC \l0x002c: IGET  (r6 I:long) = \l  (r8 I:io.fabric.sdk.android.services.network.PinningTrustManager)\l io.fabric.sdk.android.services.network.PinningTrustManager.pinCreationTimeMillis long \l0x002e: ARITH  (r4 I:long) = (r4 I:long) \- (r6 I:long) \l0x002f: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x0032: CONST_STR  (r4 I:java.lang.String) =  \" millis vs \" \l0x0034: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x003a: CONST_STR  (r2 I:java.lang.String) =  \" millis) falling back to system trust.\" \l0x003c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0043: INVOKE  \l  (r9 I:io.fabric.sdk.android.Logger)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l io.fabric.sdk.android.Logger.w(java.lang.String, java.lang.String):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0046|0x0046: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0047|0x0047: IGET  (r0 I:io.fabric.sdk.android.services.network.SystemKeyStore) = \l  (r8 I:io.fabric.sdk.android.services.network.PinningTrustManager)\l io.fabric.sdk.android.services.network.PinningTrustManager.systemKeyStore io.fabric.sdk.android.services.network.SystemKeyStore \l0x0049: INVOKE  (r9 I:java.security.cert.X509Certificate[]) = \l  (r9 I:java.security.cert.X509Certificate[])\l  (r0 I:io.fabric.sdk.android.services.network.SystemKeyStore)\l io.fabric.sdk.android.services.network.CertificateChainCleaner.getCleanChain(java.security.cert.X509Certificate[], io.fabric.sdk.android.services.network.SystemKeyStore):java.security.cert.X509Certificate[] type: STATIC \l0x004d: ARRAY_LENGTH  (r0 I:int) = (r9 I:?[]) \l0x004e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x004f|0x004f: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:12:0x005d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0051|0x0051: AGET  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0053: INVOKE  (r2 I:boolean) = \l  (r8 I:io.fabric.sdk.android.services.network.PinningTrustManager)\l  (r2 I:java.security.cert.X509Certificate)\l io.fabric.sdk.android.services.network.PinningTrustManager.isValidPin(java.security.cert.X509Certificate):boolean type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0057|0x0057: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x005a \l}"];
Node_10 [shape=record,label="{10\:\ 0x0059|0x0059: RETURN   \l}"];
Node_11 [shape=record,label="{11\:\ 0x005a|0x005a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x005d|0x005d: NEW_INSTANCE  (r9 I:java.security.cert.CertificateException) =  java.security.cert.CertificateException \l0x005f: CONST_STR  (r0 I:java.lang.String) =  \"No valid pins found in chain!\" \l0x0061: INVOKE  \l  (r9 I:java.security.cert.CertificateException)\l  (r0 I:java.lang.String)\l java.security.cert.CertificateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|0x0064: THROW  (r9 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void io.fabric.sdk.android.services.network.PinningTrustManager.checkPinTrust((r8 'this' I:io.fabric.sdk.android.services.network.PinningTrustManager A[IMMUTABLE_TYPE, THIS]), (r9 I:java.security.cert.X509Certificate[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.cert.CertificateException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_7;
Node_12 -> Node_13;
}

