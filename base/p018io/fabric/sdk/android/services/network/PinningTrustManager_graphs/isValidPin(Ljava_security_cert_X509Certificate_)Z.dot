digraph "CFG forio.fabric.sdk.android.services.network.PinningTrustManager.isValidPin(Ljava\/security\/cert\/X509Certificate;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ NoSuchAlgorithmException \-\> 0x002e \}\lSplitter:B:1:0x0002\l|byte[] r3 = java.security.MessageDigest.getInstance(\"SHA1\").digest(r3.getPublicKey().getEncoded())     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x002e \}\ljava.util.Iterator r0 = r2.pins.iterator()     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x002e \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|LOOP_START\lCatch:\{ NoSuchAlgorithmException \-\> 0x002e \}\lLOOP:0: B:3:0x0018\-\>B:6:0x0028\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|Catch:\{ NoSuchAlgorithmException \-\> 0x002e \}\l|if (r0.hasNext() == false) goto L_0x002c     \/\/ Catch:\{ NoSuchAlgorithmException \-\> 0x002e \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|Catch:\{ NoSuchAlgorithmException \-\> 0x002e \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|LOOP_END\lLOOP:0: B:3:0x0018\-\>B:6:0x0028\l|if (java.util.Arrays.equals(r0.next(), r3) == false) goto L_0x0018\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|RETURN\l|return true\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|RETURN\l|return false\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|ExcHandler: NoSuchAlgorithmException (r3v1 'e' java.security.NoSuchAlgorithmException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0002\l|java.security.NoSuchAlgorithmException r3 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f}"];
Node_11 [shape=record,label="{11\:\ 0x0034|throw new java.security.cert.CertificateException(r3)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean io.fabric.sdk.android.services.network.PinningTrustManager.isValidPin((r2v0 'this' io.fabric.sdk.android.services.network.PinningTrustManager A[IMMUTABLE_TYPE, THIS]), (r3v0 java.security.cert.X509Certificate A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.cert.CertificateException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_3;
Node_6 -> Node_12[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_7;
Node_13 -> Node_8;
}

