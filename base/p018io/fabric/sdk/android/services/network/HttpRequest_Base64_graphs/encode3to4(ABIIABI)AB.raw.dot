digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.Base64.encode3to4([BII[BI)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:byte[]) =  io.fabric.sdk.android.services.network.HttpRequest.Base64._STANDARD_ALPHABET byte[] \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0007: ARITH  (r2 I:int) = (r2 I:int) \<\< (24 int) \l0x0009: ARITH  (r2 I:int) = (r2 I:int) \>\>\> (8 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r6 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: ARITH  (r3 I:int) = (r5 I:int) + (1 int) \l0x0012: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0014: ARITH  (r3 I:int) = (r3 I:int) \<\< (24 int) \l0x0016: ARITH  (r3 I:int) = (r3 I:int) \>\>\> (16 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) \| (r3 I:?[int, boolean, short, byte, char]) \l0x001b: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r6 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:11:0x0025 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: ARITH  (r5 I:int) = (r5 I:int) + (r3 I:int) \l0x001f: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0021: ARITH  (r4 I:int) = (r4 I:int) \<\< (24 int) \l0x0023: ARITH  (r1 I:int) = (r4 I:int) \>\>\> (24 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l0x0027: CONST  (r5 I:?[int, float, short, byte, char]) = (61 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: SWITCH  \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3] t:[0x006f, 0x0050, 0x002d] \l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|0x002c: RETURN  (r7 I:byte[]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|0x002d: ARITH  (r5 I:int) = (r4 I:int) \>\>\> (18 int) \l0x002f: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0031: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x0033: ARITH  (r5 I:int) = (r8 I:int) + (1 int) \l0x0035: ARITH  (r6 I:int) = (r4 I:int) \>\>\> (12 int) \l0x0037: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x0039: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x003b: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l  (r6 I:byte A[IMMUTABLE_TYPE])\l \l0x003d: ARITH  (r5 I:int) = (r8 I:int) + (2 int) \l0x003f: ARITH  (r6 I:int) = (r4 I:int) \>\>\> (6 int) \l0x0041: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x0043: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x0045: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l  (r6 I:byte A[IMMUTABLE_TYPE])\l \l0x0047: ARITH  (r8 I:int) = (r8 I:int) + (3 int) \l0x0049: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x004b: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x004d: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l  (r4 I:byte A[IMMUTABLE_TYPE])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: RETURN  (r7 I:byte[]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0050|0x0050: ARITH  (r6 I:int) = (r4 I:int) \>\>\> (18 int) \l0x0052: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x0054: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l  (r6 I:byte A[IMMUTABLE_TYPE])\l \l0x0056: ARITH  (r6 I:int) = (r8 I:int) + (1 int) \l0x0058: ARITH  (r1 I:int) = (r4 I:int) \>\>\> (12 int) \l0x005a: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x005c: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x005e: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l  (r1 I:byte A[IMMUTABLE_TYPE])\l \l0x0060: ARITH  (r6 I:int) = (r8 I:int) + (2 int) \l0x0062: ARITH  (r4 I:int) = (r4 I:int) \>\>\> (6 int) \l0x0064: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x0066: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x0068: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l  (r4 I:byte A[IMMUTABLE_TYPE])\l \l0x006a: ARITH  (r8 I:int) = (r8 I:int) + (3 int) \l0x006c: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x006e|0x006e: RETURN  (r7 I:byte[]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x006f|0x006f: ARITH  (r6 I:int) = (r4 I:int) \>\>\> (18 int) \l0x0071: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x0073: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l  (r6 I:byte A[IMMUTABLE_TYPE])\l \l0x0075: ARITH  (r6 I:int) = (r8 I:int) + (1 int) \l0x0077: ARITH  (r4 I:int) = (r4 I:int) \>\>\> (12 int) \l0x0079: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x007b: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r0 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x007d: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l  (r4 I:byte A[IMMUTABLE_TYPE])\l \l0x007f: ARITH  (r4 I:int) = (r8 I:int) + (2 int) \l0x0081: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x0083: ARITH  (r8 I:int) = (r8 I:int) + (3 int) \l0x0085: APUT  \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0087|0x0087: RETURN  (r7 I:byte[]) \l}"];
MethodNode[shape=record,label="{private static byte[] io.fabric.sdk.android.services.network.HttpRequest.Base64.encode3to4((r4 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_12 -> Node_16;
Node_12 -> Node_18;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

