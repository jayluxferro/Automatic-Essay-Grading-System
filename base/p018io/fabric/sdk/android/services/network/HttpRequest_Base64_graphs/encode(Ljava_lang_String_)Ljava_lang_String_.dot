digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.Base64.encode(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ UnsupportedEncodingException \-\> 0x0007 \}\lSplitter:B:1:0x0002\l|byte[] r0 = r1.getBytes(PREFERRED_ENCODING)     \/\/ Catch:\{ UnsupportedEncodingException \-\> 0x0007 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|byte[] r0 = r1.getBytes()\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lExcHandler: UnsupportedEncodingException (unused java.io.UnsupportedEncodingException)\lSplitter:B:1:0x0002\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|PHI: r0 \l  PHI: (r0v1 byte[]) = (r0v2 byte[]), (r0v3 byte[]) binds: [B:3:0x0007, B:2:?] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|RETURN\l|return encodeBytes(r0)\l}"];
MethodNode[shape=record,label="{public static java.lang.String io.fabric.sdk.android.services.network.HttpRequest.Base64.encode((r1v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_5;
Node_3 -> Node_5;
Node_4 -> Node_3;
Node_5 -> Node_6;
}

