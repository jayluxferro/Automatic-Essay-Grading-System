digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.Base64.encodeBytesToBytes([BII)[B" {
subgraph cluster_Region_1859846003 {
label = "R(1:(1:25)(1:(2:22|23)(1:(2:20|21)(1:(6:5|(1:7)|8|(1:10)|(1:12)|(2:(1:17)|(2:15|16)))(2:18|19)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1102722876 {
label = "IF [B:0:0x0000] THEN: R(1:25) ELSE: R(1:(2:22|23)(1:(2:20|21)(1:(6:5|(1:7)|8|(1:10)|(1:12)|(2:(1:17)|(2:15|16)))(2:18|19))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r8 == null) goto L_0x0092\l}"];
subgraph cluster_Region_851974606 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0099|throw new java.lang.NullPointerException(\"Cannot serialize a null array.\")\l}"];
}
subgraph cluster_Region_1178155312 {
label = "R(1:(2:22|23)(1:(2:20|21)(1:(6:5|(1:7)|8|(1:10)|(1:12)|(2:(1:17)|(2:15|16)))(2:18|19)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2141288419 {
label = "IF [B:1:0x0002] THEN: R(2:22|23) ELSE: R(1:(2:20|21)(1:(6:5|(1:7)|8|(1:10)|(1:12)|(2:(1:17)|(2:15|16)))(2:18|19))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r9 \< 0) goto L_0x007b\l}"];
subgraph cluster_Region_1865596156 {
label = "R(2:22|23)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x007b}"];
Node_23 [shape=record,label="{23\:\ 0x0091|throw new java.lang.IllegalArgumentException(\"Cannot have negative offset: \" + r9)\l}"];
}
subgraph cluster_Region_491183805 {
label = "R(1:(2:20|21)(1:(6:5|(1:7)|8|(1:10)|(1:12)|(2:(1:17)|(2:15|16)))(2:18|19))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_305763484 {
label = "IF [B:2:0x0004] THEN: R(2:20|21) ELSE: R(1:(6:5|(1:7)|8|(1:10)|(1:12)|(2:(1:17)|(2:15|16)))(2:18|19)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r10 \< 0) goto L_0x0064\l}"];
subgraph cluster_Region_1725167447 {
label = "R(2:20|21)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0064}"];
Node_21 [shape=record,label="{21\:\ 0x007a|throw new java.lang.IllegalArgumentException(\"Cannot have length offset: \" + r10)\l}"];
}
subgraph cluster_Region_486306349 {
label = "R(1:(6:5|(1:7)|8|(1:10)|(1:12)|(2:(1:17)|(2:15|16)))(2:18|19)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_929358905 {
label = "IF [B:4:0x000c] THEN: R(6:5|(1:7)|8|(1:10)|(1:12)|(2:(1:17)|(2:15|16))) ELSE: R(2:18|19) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|if ((r9 + r10) \<= r8.length) goto L_0x000e\l}"];
subgraph cluster_Region_708652153 {
label = "R(6:5|(1:7)|8|(1:10)|(1:12)|(2:(1:17)|(2:15|16)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|int r1 = 4\lint int r0 = (r10 \/ 3) * 4\l}"];
subgraph cluster_IfRegion_1772559165 {
label = "IF [B:6:0x0015] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|if ((r10 % 3) \<= 0) goto L_0x0018\l}"];
subgraph cluster_Region_290063096 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0018|r1 = 0\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0019|PHI: r1 \l  PHI: (r1v3 int) = (r1v2 int), (r1v5 int) binds: [B:6:0x0015, B:7:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|byte[] byte[] r0 = new byte[(r0 + r1)]\lint int r1 = r10 \- 2\lint r5 = 0\lint r6 = 0\l}"];
subgraph cluster_LoopRegion_1093864733 {
label = "LOOP:0: (1:10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0020|LOOP_START\lPHI: r5 r6 \l  PHI: (r5v2 int) = (r5v1 int), (r5v3 int) binds: [B:8:0x0019, B:10:0x0022] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 int) = (r6v0 int), (r6v4 int) binds: [B:8:0x0019, B:10:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:9:0x0020\-\>B:10:0x0022\l|if (r5 \< r1) goto L_0x0022\l}"];
subgraph cluster_Region_2070883997 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0022|LOOP_END\lLOOP:0: B:9:0x0020\-\>B:10:0x0022\l|encode3to4(r8, r5 + r9, 3, r0, r6)\lr5 += 3\lr6 += 4\l}"];
}
}
subgraph cluster_IfRegion_152052143 {
label = "IF [B:11:0x002c] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002c|if (r5 \< r10) goto L_0x002e\l}"];
subgraph cluster_Region_667433407 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002e|encode3to4(r8, r9 + r5, r10 \- r5, r0, r6)\lr6 += 4\l}"];
}
}
subgraph cluster_Region_272048145 {
label = "R(2:(1:17)|(2:15|16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1691719643 {
label = "IF [B:14:0x0037] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0037|if (r6 \> (r0.length \- 1)) goto L_0x003f\l}"];
subgraph cluster_Region_633934971 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003f|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_667999641 {
label = "R(2:15|16)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0039|byte[] byte[] r8 = new byte[r6]\ljava.lang.System.arraycopy(r0, 0, r8, 0, r6)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|RETURN\l|return r8\l}"];
}
}
}
subgraph cluster_Region_1864717600 {
label = "R(2:18|19)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0040}"];
Node_19 [shape=record,label="{19\:\ 0x0063|throw new java.lang.IllegalArgumentException(java.lang.String.format(java.util.Locale.ENGLISH, \"Cannot have offset of %d and length of %d with array of length %d\", new java.lang.Object[]\{java.lang.Integer.valueOf(r9), java.lang.Integer.valueOf(r10), java.lang.Integer.valueOf(r8.length)\}))\l}"];
}
}
}
}
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0006}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0035|PHI: r6 \l  PHI: (r6v2 int) = (r6v1 int), (r6v3 int) binds: [B:11:0x002c, B:12:0x002e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0092}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static byte[] io.fabric.sdk.android.services.network.HttpRequest.Base64.encodeBytesToBytes((r8v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_24;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_22;
Node_22 -> Node_23;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_20;
Node_20 -> Node_21;
Node_4 -> Node_5;
Node_4 -> Node_18[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_26[style=dashed];
Node_10 -> Node_9;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_3 -> Node_4;
Node_13 -> Node_14;
Node_24 -> Node_25;
Node_26 -> Node_11;
}

