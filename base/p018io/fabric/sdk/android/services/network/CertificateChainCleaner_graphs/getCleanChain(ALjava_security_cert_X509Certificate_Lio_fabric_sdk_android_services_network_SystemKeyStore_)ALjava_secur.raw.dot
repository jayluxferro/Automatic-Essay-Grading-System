digraph "CFG forio.fabric.sdk.android.services.network.CertificateChainCleaner.getCleanChain([Ljava\/security\/cert\/X509Certificate;Lio\/fabric\/sdk\/android\/services\/network\/SystemKeyStore;)[Ljava\/security\/cert\/X509Certificate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.LinkedList) =  java.util.LinkedList \l0x0002: INVOKE  (r0 I:java.util.LinkedList) java.util.LinkedList.\<init\>():void type: DIRECT \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: AGET  (r2 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0008: INVOKE  (r2 I:boolean) = \l  (r7 I:io.fabric.sdk.android.services.network.SystemKeyStore)\l  (r2 I:java.security.cert.X509Certificate)\l io.fabric.sdk.android.services.network.SystemKeyStore.isTrustRoot(java.security.cert.X509Certificate):boolean type: VIRTUAL \l0x000c: AGET  (r1 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x000e: INVOKE  (r0 I:java.util.LinkedList), (r1 I:java.lang.Object) java.util.LinkedList.add(java.lang.Object):boolean type: VIRTUAL \l0x0011: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0012: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: ARRAY_LENGTH  (r4 I:int) = (r6 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: IF  (r2 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:9:0x0034 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: AGET  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0019: INVOKE  (r4 I:boolean) = \l  (r7 I:io.fabric.sdk.android.services.network.SystemKeyStore)\l  (r4 I:java.security.cert.X509Certificate)\l io.fabric.sdk.android.services.network.SystemKeyStore.isTrustRoot(java.security.cert.X509Certificate):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0020 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: AGET  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0022: ARITH  (r5 I:int) = (r2 I:int) + (\-1 int) \l0x0024: AGET  (r5 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x0026: INVOKE  (r4 I:boolean) = \l  (r4 I:java.security.cert.X509Certificate)\l  (r5 I:java.security.cert.X509Certificate)\l io.fabric.sdk.android.services.network.CertificateChainCleaner.isValidLink(java.security.cert.X509Certificate, java.security.cert.X509Certificate):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0034 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|0x002c: AGET  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x002e: INVOKE  (r0 I:java.util.LinkedList), (r4 I:java.lang.Object) java.util.LinkedList.add(java.lang.Object):boolean type: VIRTUAL \l0x0031: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: ARITH  (r2 I:int) = (r2 I:int) \- (r1 I:int) \l0x0035: AGET  (r6 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0037: INVOKE  (r6 I:java.security.cert.X509Certificate) = \l  (r7 I:io.fabric.sdk.android.services.network.SystemKeyStore)\l  (r6 I:java.security.cert.X509Certificate)\l io.fabric.sdk.android.services.network.SystemKeyStore.getTrustRootFor(java.security.cert.X509Certificate):java.security.cert.X509Certificate type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0041 \l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|0x003d: INVOKE  (r0 I:java.util.LinkedList), (r6 I:java.lang.Object) java.util.LinkedList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0051 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|0x0044: INVOKE  (r6 I:int) = (r0 I:java.util.LinkedList) java.util.LinkedList.size():int type: VIRTUAL \l0x0048: NEW_ARRAY  (r6 I:java.security.cert.X509Certificate[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: java.security.cert.X509Certificate[] \l0x004a: INVOKE  (r6 I:java.lang.Object[]) = (r0 I:java.util.LinkedList), (r6 I:java.lang.Object[]) java.util.LinkedList.toArray(java.lang.Object[]):java.lang.Object[] type: VIRTUAL \l0x004e: CHECK_CAST  (r6 I:java.security.cert.X509Certificate[]) = (java.security.cert.X509Certificate[]) (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|0x0050: RETURN  (r6 I:java.security.cert.X509Certificate[]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|0x0051: NEW_INSTANCE  (r6 I:java.security.cert.CertificateException) =  java.security.cert.CertificateException \l0x0053: CONST_STR  (r7 I:java.lang.String) =  \"Didn't find a trust anchor in chain cleanup!\" \l0x0055: INVOKE  \l  (r6 I:java.security.cert.CertificateException)\l  (r7 I:java.lang.String)\l java.security.cert.CertificateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0058|0x0058: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static java.security.cert.X509Certificate[] io.fabric.sdk.android.services.network.CertificateChainCleaner.getCleanChain((r6 I:java.security.cert.X509Certificate[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:io.fabric.sdk.android.services.network.SystemKeyStore A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.security.cert.CertificateException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

