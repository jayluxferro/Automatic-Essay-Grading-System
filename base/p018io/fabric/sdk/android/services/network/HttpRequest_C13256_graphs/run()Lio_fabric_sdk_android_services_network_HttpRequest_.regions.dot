digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.6.run()Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;" {
subgraph cluster_Region_1181186578 {
label = "R(2:0|(2:1|(2:(1:5)|(1:3))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|byte[] byte[] r0 = new byte[p018io.fabric.sdk.android.services.network.HttpRequest.this.bufferSize]\l}"];
subgraph cluster_LoopRegion_341879451 {
label = "LOOP:0: (2:1|(2:(1:5)|(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_1493916437 {
label = "R(2:1|(2:(1:5)|(1:3)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lLOOP:0: B:1:0x0008\-\>B:3:0x0011\l|int int r1 = r4.read(r0)\l}"];
subgraph cluster_Region_1450500100 {
label = "R(2:(1:5)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_87596464 {
label = "IF [B:2:0x000f] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000f|if (r1 == \-1) goto L_0x0018\l}"];
subgraph cluster_Region_187964285 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|RETURN\l|return p018io.fabric.sdk.android.services.network.HttpRequest.this\l}"];
}
}
subgraph cluster_Region_120174567 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0011|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:3:0x0011\l|r5.write(r0, 0, r1)\l}"];
}
}
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0018}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0018|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public io.fabric.sdk.android.services.network.HttpRequest io.fabric.sdk.android.services.network.HttpRequest.6.run((r4v0 'this' io.fabric.sdk.android.services.network.HttpRequest$6 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

