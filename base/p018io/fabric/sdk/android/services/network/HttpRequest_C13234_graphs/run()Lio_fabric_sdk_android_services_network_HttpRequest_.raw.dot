digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.4.run()Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:io.fabric.sdk.android.services.network.HttpRequest) = (r4 I:io.fabric.sdk.android.services.network.HttpRequest$4) io.fabric.sdk.android.services.network.HttpRequest.4.this$0 io.fabric.sdk.android.services.network.HttpRequest \l0x0002: INVOKE  (r0 I:int) = (r0 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.access$100(io.fabric.sdk.android.services.network.HttpRequest):int type: STATIC \l0x0006: INVOKE  (r0 I:java.nio.CharBuffer) = (r0 I:int) java.nio.CharBuffer.allocate(int):java.nio.CharBuffer type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IGET  (r1 I:java.io.BufferedReader) = (r4 I:io.fabric.sdk.android.services.network.HttpRequest$4) io.fabric.sdk.android.services.network.HttpRequest.4.val$reader java.io.BufferedReader \l0x000c: INVOKE  (r1 I:int) = (r1 I:java.io.BufferedReader), (r0 I:java.nio.CharBuffer) java.io.BufferedReader.read(java.nio.CharBuffer):int type: VIRTUAL \l0x0010: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0020 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: INVOKE  (r0 I:java.nio.CharBuffer) java.nio.CharBuffer.rewind():java.nio.Buffer type: VIRTUAL \l0x0016: IGET  (r2 I:java.lang.Appendable) = (r4 I:io.fabric.sdk.android.services.network.HttpRequest$4) io.fabric.sdk.android.services.network.HttpRequest.4.val$appendable java.lang.Appendable \l0x0018: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: INVOKE  \l  (r2 I:java.lang.Appendable)\l  (r0 I:java.lang.CharSequence)\l  (r3 I:int)\l  (r1 I:int)\l java.lang.Appendable.append(java.lang.CharSequence, int, int):java.lang.Appendable type: INTERFACE \l0x001c: INVOKE  (r0 I:java.nio.CharBuffer) java.nio.CharBuffer.rewind():java.nio.Buffer type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: IGET  (r0 I:io.fabric.sdk.android.services.network.HttpRequest) = (r4 I:io.fabric.sdk.android.services.network.HttpRequest$4) io.fabric.sdk.android.services.network.HttpRequest.4.this$0 io.fabric.sdk.android.services.network.HttpRequest \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: RETURN  (r0 I:io.fabric.sdk.android.services.network.HttpRequest) \l}"];
MethodNode[shape=record,label="{public io.fabric.sdk.android.services.network.HttpRequest io.fabric.sdk.android.services.network.HttpRequest.4.run((r4 'this' I:io.fabric.sdk.android.services.network.HttpRequest$4 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

