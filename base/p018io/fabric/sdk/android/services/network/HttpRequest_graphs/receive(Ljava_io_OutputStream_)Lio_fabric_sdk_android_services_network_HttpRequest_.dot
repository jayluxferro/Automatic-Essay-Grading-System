digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.receive(Ljava\/io\/OutputStream;)Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ IOException \-\> 0x0009 \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|RETURN\l|return copy((java.io.InputStream) buffer(), r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|ExcHandler: IOException (r2v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.io.IOException r2 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
Node_5 [shape=record,label="{5\:\ 0x000f|throw new p018io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException(r2)\l}"];
MethodNode[shape=record,label="{public io.fabric.sdk.android.services.network.HttpRequest io.fabric.sdk.android.services.network.HttpRequest.receive((r1v0 'this' io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]), (r2v0 java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

