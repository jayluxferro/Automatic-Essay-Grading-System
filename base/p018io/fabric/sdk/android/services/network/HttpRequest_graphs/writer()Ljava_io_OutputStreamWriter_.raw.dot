digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.writer()Ljava\/io\/OutputStreamWriter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r3 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.openOutput():io.fabric.sdk.android.services.network.HttpRequest type: VIRTUAL A[Catch:\{ IOException \-\> 0x0015 \}, TRY_ENTER]\l0x0003: NEW_INSTANCE  (r0 I:java.io.OutputStreamWriter) =  java.io.OutputStreamWriter A[Catch:\{ IOException \-\> 0x0015 \}]\l0x0005: IGET  (r1 I:io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream) = (r3 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.output io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream A[Catch:\{ IOException \-\> 0x0015 \}]\l0x0007: IGET  (r2 I:io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream) = (r3 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.output io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream A[Catch:\{ IOException \-\> 0x0015 \}]\l0x0009: INVOKE  (r2 I:java.nio.charset.CharsetEncoder) = \l  (r2 I:io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream)\l io.fabric.sdk.android.services.network.HttpRequest.RequestOutputStream.access$200(io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream):java.nio.charset.CharsetEncoder type: STATIC A[Catch:\{ IOException \-\> 0x0015 \}]\l0x000d: INVOKE  (r2 I:java.nio.charset.Charset) = (r2 I:java.nio.charset.CharsetEncoder) java.nio.charset.CharsetEncoder.charset():java.nio.charset.Charset type: VIRTUAL A[Catch:\{ IOException \-\> 0x0015 \}]\l0x0011: INVOKE  \l  (r0 I:java.io.OutputStreamWriter)\l  (r1 I:java.io.OutputStream)\l  (r2 I:java.nio.charset.Charset)\l java.io.OutputStreamWriter.\<init\>(java.io.OutputStream, java.nio.charset.Charset):void type: DIRECT A[Catch:\{ IOException \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: RETURN  (r0 I:java.io.OutputStreamWriter) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x0015: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: NEW_INSTANCE  (r1 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException) =  io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException \l0x0018: INVOKE  \l  (r1 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException)\l  (r0 I:java.io.IOException)\l io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.io.OutputStreamWriter io.fabric.sdk.android.services.network.HttpRequest.writer((r3 'this' I:io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

