digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.encode(Ljava\/lang\/CharSequence;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ IOException \-\> 0x0086 \}\lSplitter:B:0:0x0000\l|java.net.URL r0 = new java.net.URL(r7.toString())     \/\/ Catch:\{ IOException \-\> 0x0086 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|java.lang.String r7 = r0.getHost()\lint r1 = r0.getPort()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if (r1 == \-1) goto L_0x002c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(r7)\lr2.append(':')\lr2.append(java.lang.Integer.toString(r1))\ljava.lang.String r7 = r2.toString()\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|PHI: r7 \l  PHI: (r7v4 java.lang.String) = (r7v3 java.lang.String), (r7v14 java.lang.String) binds: [B:3:0x0012, B:4:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|r3 = r7\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|SYNTHETIC\lSplitter:B:6:0x002d\l}"];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ URISyntaxException \-\> 0x0075 \}\lSplitter:B:6:0x002d\l|java.lang.String r7 = new java.net.URI(r0.getProtocol(), r3, r0.getPath(), r0.getQuery(), (java.lang.String) null).toASCIIString()     \/\/ Catch:\{ URISyntaxException \-\> 0x0075 \}\lint r0 = r7.indexOf(63)     \/\/ Catch:\{ URISyntaxException \-\> 0x0075 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x004a|Catch:\{ URISyntaxException \-\> 0x0075 \}\l|if (r0 \<= 0) goto L_?     \/\/ Catch:\{ URISyntaxException \-\> 0x0075 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x004c|Catch:\{ URISyntaxException \-\> 0x0075 \}\l|int r0 = r0 + 1     \/\/ Catch:\{ URISyntaxException \-\> 0x0075 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0052|Catch:\{ URISyntaxException \-\> 0x0075 \}\l|if (r0 \>= r7.length()) goto L_?     \/\/ Catch:\{ URISyntaxException \-\> 0x0075 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0054|Catch:\{ URISyntaxException \-\> 0x0075 \}\l|java.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{ URISyntaxException \-\> 0x0075 \}\lr1.append(r7.substring(0, r0))     \/\/ Catch:\{ URISyntaxException \-\> 0x0075 \}\lr1.append(r7.substring(r0).replace(\"+\", \"%2B\"))     \/\/ Catch:\{ URISyntaxException \-\> 0x0075 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0075|ExcHandler: URISyntaxException (r7v5 'e' java.net.URISyntaxException A[CUSTOM_DECLARE])\lSplitter:B:6:0x002d\l|java.net.URISyntaxException r7 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x0076|java.io.IOException r0 = new java.io.IOException(\"Parsing URI failed\")\lr0.initCause(r7)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0085|throw new p018io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException(r0)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0086|ExcHandler: IOException (r7v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.io.IOException r7 = move\-exception\l}"];
Node_16 [shape=record,label="{16\:\ 0x0087}"];
Node_17 [shape=record,label="{17\:\ 0x008c|throw new p018io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException(r7)\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r1.toString()\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return r7\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return r7\l}"];
MethodNode[shape=record,label="{public static java.lang.String io.fabric.sdk.android.services.network.HttpRequest.encode((r7v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_15;
Node_1 -> Node_2;
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_20;
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

