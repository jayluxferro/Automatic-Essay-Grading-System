digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.openOutput()Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4.output == null) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return r4\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|getConnection().setDoOutput(true)\ljava.lang.String r0 = getParam(getConnection().getRequestProperty(HEADER_CONTENT_TYPE), PARAM_CHARSET)\lr4.output = new p018io.fabric.sdk.android.services.network.HttpRequest.RequestOutputStream(getConnection().getOutputStream(), r0, r4.bufferSize)\l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|RETURN\l|return r4\l}"];
MethodNode[shape=record,label="{protected io.fabric.sdk.android.services.network.HttpRequest io.fabric.sdk.android.services.network.HttpRequest.openOutput((r4v0 'this' io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

