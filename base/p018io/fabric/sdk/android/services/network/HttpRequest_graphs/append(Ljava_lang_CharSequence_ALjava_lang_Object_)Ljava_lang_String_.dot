digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.append(Ljava\/lang\/CharSequence;[Ljava\/lang\/Object;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r3 = r3.toString()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r4 == null) goto L_0x0056\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r4.length != 0) goto L_0x000a\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|r1 = 2\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|if ((r4.length % 2) != 0) goto L_0x004e\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|java.lang.StringBuilder r0 = new java.lang.StringBuilder(r3)\laddPathSeparator(r3, r0)\laddParamPrefix(r3, r0)\lr0.append(r4[0])\lr0.append(org.mapsforge.core.model.Tag.KEY_VALUE_SEPARATOR)\lr2 = r4[1]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|if (r2 == null) goto L_0x002d\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|r0.append(r2)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:23:0x002d, B:14:0x0046] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:9:0x002d\-\>B:14:0x0046\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|if (r1 \>= r4.length) goto L_0x0049\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|r0.append(kotlin.text.Typography.amp)\lr0.append(r4[r1])\lr0.append(org.mapsforge.core.model.Tag.KEY_VALUE_SEPARATOR)\lr2 = r4[r1 + 1]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|if (r2 == null) goto L_0x0046\l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|r0.append(r2)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|LOOP_END\lLOOP:0: B:9:0x002d\-\>B:14:0x0046\l|int r1 = r1 + 2\l}"];
Node_15 [shape=record,label="{15\:\ 0x0049}"];
Node_16 [shape=record,label="{16\:\ 0x004d|RETURN\l|return r0.toString()\l}"];
Node_17 [shape=record,label="{17\:\ 0x004e}"];
Node_18 [shape=record,label="{18\:\ 0x0055|throw new java.lang.IllegalArgumentException(\"Must specify an even number of parameter names\/values\")\l}"];
Node_19 [shape=record,label="{19\:\ 0x0056|RETURN\l|return r3\l}"];
Node_20 [shape=record,label="{20\:\ 0x0049|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0046|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0046|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x002d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static java.lang.String io.fabric.sdk.android.services.network.HttpRequest.append((r3v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_19[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_23;
Node_8 -> Node_23;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_20;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_21;
Node_14 -> Node_9;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_20 -> Node_15;
Node_21 -> Node_14;
Node_22 -> Node_14;
Node_23 -> Node_9;
}

