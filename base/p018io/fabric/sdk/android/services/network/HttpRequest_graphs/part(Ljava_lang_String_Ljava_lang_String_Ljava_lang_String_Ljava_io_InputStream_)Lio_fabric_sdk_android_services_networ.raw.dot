digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.part(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/io\/InputStream;)Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.startPart():io.fabric.sdk.android.services.network.HttpRequest type: VIRTUAL A[Catch:\{ IOException \-\> 0x000c \}, TRY_ENTER]\l0x0003: INVOKE  \l  (r0 I:io.fabric.sdk.android.services.network.HttpRequest)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l io.fabric.sdk.android.services.network.HttpRequest.writePartHeader(java.lang.String, java.lang.String, java.lang.String):io.fabric.sdk.android.services.network.HttpRequest type: VIRTUAL A[Catch:\{ IOException \-\> 0x000c \}]\l0x0006: IGET  (r1 I:io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream) = (r0 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.output io.fabric.sdk.android.services.network.HttpRequest$RequestOutputStream A[Catch:\{ IOException \-\> 0x000c \}]\l0x0008: INVOKE  \l  (r0 I:io.fabric.sdk.android.services.network.HttpRequest)\l  (r4 I:java.io.InputStream)\l  (r1 I:java.io.OutputStream)\l io.fabric.sdk.android.services.network.HttpRequest.copy(java.io.InputStream, java.io.OutputStream):io.fabric.sdk.android.services.network.HttpRequest type: VIRTUAL A[Catch:\{ IOException \-\> 0x000c \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: RETURN  (r0 I:io.fabric.sdk.android.services.network.HttpRequest) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x000c: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: NEW_INSTANCE  (r2 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException) =  io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException \l0x000f: INVOKE  \l  (r2 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException)\l  (r1 I:java.io.IOException)\l io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public io.fabric.sdk.android.services.network.HttpRequest io.fabric.sdk.android.services.network.HttpRequest.part((r0 'this' I:io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

