digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.writer()Ljava\/io\/OutputStreamWriter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ IOException \-\> 0x0015 \}\lSplitter:B:0:0x0000\l|openOutput()     \/\/ Catch:\{ IOException \-\> 0x0015 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|RETURN\l|return new java.io.OutputStreamWriter(r3.output, p018io.fabric.sdk.android.services.network.HttpRequest.RequestOutputStream.access$200(r3.output).charset())\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|ExcHandler: IOException (r0v0 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.io.IOException r0 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016}"];
Node_5 [shape=record,label="{5\:\ 0x001b|throw new p018io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException(r0)\l}"];
MethodNode[shape=record,label="{public java.io.OutputStreamWriter io.fabric.sdk.android.services.network.HttpRequest.writer((r3v0 'this' io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

