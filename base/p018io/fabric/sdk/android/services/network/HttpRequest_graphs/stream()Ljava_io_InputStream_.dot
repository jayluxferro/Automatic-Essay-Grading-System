digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.stream()Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (code() \>= 400) goto L_0x0018\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|SYNTHETIC\lSplitter:B:2:0x0008\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ IOException \-\> 0x0011 \}\lSplitter:B:2:0x0008\l|java.io.InputStream r0 = getConnection().getInputStream()     \/\/ Catch:\{ IOException \-\> 0x0011 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|ExcHandler: IOException (r0v8 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:2:0x0008\l|java.io.IOException r0 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012}"];
Node_6 [shape=record,label="{6\:\ 0x0017|throw new p018io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|java.io.InputStream r0 = getConnection().getErrorStream()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|if (r0 != null) goto L_0x0032\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|SYNTHETIC\lSplitter:B:9:0x0022\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ IOException \-\> 0x002b \}\lSplitter:B:9:0x0022\l|java.io.InputStream r0 = getConnection().getInputStream()     \/\/ Catch:\{ IOException \-\> 0x002b \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|ExcHandler: IOException (r0v5 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:9:0x0022\l|java.io.IOException r0 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c}"];
Node_13 [shape=record,label="{13\:\ 0x0031|throw new p018io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|PHI: r0 \l  PHI: (r0v1 java.io.InputStream) = (r0v4 java.io.InputStream), (r0v7 java.io.InputStream), (r0v10 java.io.InputStream) binds: [B:8:0x0020, B:10:?, B:3:?] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|if (r3.uncompress == false) goto L_0x0050\l}"];
Node_16 [shape=record,label="{16\:\ 0x0036}"];
Node_17 [shape=record,label="{17\:\ 0x0040|if (ENCODING_GZIP.equals(contentEncoding()) != false) goto L_0x0043\l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|SYNTHETIC\lSplitter:B:18:0x0043\l}"];
Node_19 [shape=record,label="{19\:\ ?|Catch:\{ IOException \-\> 0x0049 \}\lSplitter:B:18:0x0043\l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|RETURN\l|return new java.util.zip.GZIPInputStream(r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|ExcHandler: IOException (r0v2 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:18:0x0043\l|java.io.IOException r0 = move\-exception\l}"];
Node_22 [shape=record,label="{22\:\ 0x004a}"];
Node_23 [shape=record,label="{23\:\ 0x004f|throw new p018io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException(r0)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0050|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public java.io.InputStream io.fabric.sdk.android.services.network.HttpRequest.stream((r3v0 'this' io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_24[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
}

