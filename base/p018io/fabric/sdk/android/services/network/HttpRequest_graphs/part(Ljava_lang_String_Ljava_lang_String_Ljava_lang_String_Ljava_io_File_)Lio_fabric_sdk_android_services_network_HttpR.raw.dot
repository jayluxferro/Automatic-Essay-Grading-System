digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.part(Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/io\/File;)Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: NEW_INSTANCE  (r1 I:java.io.BufferedInputStream) =  java.io.BufferedInputStream A[Catch:\{ IOException \-\> 0x001b \}, TRY_ENTER]\l0x0003: NEW_INSTANCE  (r2 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ IOException \-\> 0x001b \}]\l0x0005: INVOKE  (r2 I:java.io.FileInputStream), (r7 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ IOException \-\> 0x001b \}]\l0x0008: INVOKE  \l  (r1 I:java.io.BufferedInputStream)\l  (r2 I:java.io.InputStream)\l java.io.BufferedInputStream.\<init\>(java.io.InputStream):void type: DIRECT A[Catch:\{ IOException \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|SYNTHETIC\lSplitter:B:3:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000b\l|0x000b: INVOKE  (r4 I:io.fabric.sdk.android.services.network.HttpRequest) = \l  (r3 I:io.fabric.sdk.android.services.network.HttpRequest)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r1 I:java.io.InputStream)\l io.fabric.sdk.android.services.network.HttpRequest.part(java.lang.String, java.lang.String, java.lang.String, java.io.InputStream):io.fabric.sdk.android.services.network.HttpRequest type: VIRTUAL A[Catch:\{ IOException \-\> 0x0016, all \-\> 0x0013 \}, TRY_ENTER]\l0x000e: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|SYNTHETIC\lSplitter:B:5:0x000f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000f\l|0x000f: INVOKE  (r1 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0012 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: RETURN  (r4 I:io.fabric.sdk.android.services.network.HttpRequest) \l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:5:0x000f\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|ExcHandler: all null\lSplitter:B:3:0x000b\l|0x0013: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|ExcHandler: IOException null\lSplitter:B:3:0x000b\l|0x0016: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|0x0017: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0019|ExcHandler: all null\lSplitter:B:16:0x001c\l|0x0019: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x001b|ExcHandler: IOException null\lSplitter:B:1:0x0001\l|0x001b: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x001c|SYNTHETIC\lSplitter:B:16:0x001c\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x001c\l|0x001c: NEW_INSTANCE  (r5 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException) =  io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException A[Catch:\{ all \-\> 0x0019 \}, TRY_ENTER]\l0x001e: INVOKE  \l  (r5 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException)\l  (r4 I:java.io.IOException)\l io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException.\<init\>(java.io.IOException):void type: DIRECT A[Catch:\{ all \-\> 0x0019 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0021|0x0021: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0019 \}, TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0027 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0024|SYNTHETIC\lSplitter:B:20:0x0024\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x0024\l|0x0024: INVOKE  (r0 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0027 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0027|0x0027: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:20:0x0024\l}"];
MethodNode[shape=record,label="{public io.fabric.sdk.android.services.network.HttpRequest io.fabric.sdk.android.services.network.HttpRequest.part((r3 'this' I:io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_3 -> Node_11;
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_7;
Node_9 -> Node_10;
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_16;
Node_13 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_18;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_23 -> Node_22;
}

