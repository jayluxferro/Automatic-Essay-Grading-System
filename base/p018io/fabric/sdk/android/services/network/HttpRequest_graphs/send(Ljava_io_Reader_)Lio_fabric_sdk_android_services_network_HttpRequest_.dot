digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.send(Ljava\/io\/Reader;)Lio\/fabric\/sdk\/android\/services\/network\/HttpRequest;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ IOException \-\> 0x0020 \}\lSplitter:B:0:0x0000\l|openOutput()     \/\/ Catch:\{ IOException \-\> 0x0020 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|java.io.OutputStreamWriter r0 = new java.io.OutputStreamWriter(r3.output, p018io.fabric.sdk.android.services.network.HttpRequest.RequestOutputStream.access$200(r3.output).charset())\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|RETURN\l|return (p018io.fabric.sdk.android.services.network.HttpRequest) new p018io.fabric.sdk.android.services.network.HttpRequest.C13278(r3, r0).call()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|ExcHandler: IOException (r4v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.io.IOException r4 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021}"];
Node_6 [shape=record,label="{6\:\ 0x0026|throw new p018io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException(r4)\l}"];
MethodNode[shape=record,label="{public io.fabric.sdk.android.services.network.HttpRequest io.fabric.sdk.android.services.network.HttpRequest.send((r3v0 'this' io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]), (r4v0 java.io.Reader A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

