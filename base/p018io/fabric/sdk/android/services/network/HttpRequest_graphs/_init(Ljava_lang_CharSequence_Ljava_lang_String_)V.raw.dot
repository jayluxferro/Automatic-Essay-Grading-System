digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.\<init\>(Ljava\/lang\/CharSequence;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:java.net.HttpURLConnection)\l  (r1 I:io.fabric.sdk.android.services.network.HttpRequest)\l io.fabric.sdk.android.services.network.HttpRequest.connection java.net.HttpURLConnection \l0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: IPUT  \l  (r0 I:boolean)\l  (r1 I:io.fabric.sdk.android.services.network.HttpRequest)\l io.fabric.sdk.android.services.network.HttpRequest.ignoreCloseExceptions boolean \l0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: IPUT  \l  (r0 I:boolean)\l  (r1 I:io.fabric.sdk.android.services.network.HttpRequest)\l io.fabric.sdk.android.services.network.HttpRequest.uncompress boolean \l0x000c: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l \l0x000e: IPUT  \l  (r0 I:int)\l  (r1 I:io.fabric.sdk.android.services.network.HttpRequest)\l io.fabric.sdk.android.services.network.HttpRequest.bufferSize int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|SYNTHETIC\lSplitter:B:1:0x0010\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0010\l|0x0010: NEW_INSTANCE  (r0 I:java.net.URL) =  java.net.URL A[Catch:\{ MalformedURLException \-\> 0x001e \}, TRY_ENTER]\l0x0012: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.CharSequence) java.lang.CharSequence.toString():java.lang.String type: INTERFACE A[Catch:\{ MalformedURLException \-\> 0x001e \}]\l0x0016: INVOKE  (r0 I:java.net.URL), (r2 I:java.lang.String) java.net.URL.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ MalformedURLException \-\> 0x001e \}]\l0x0019: IPUT  \l  (r0 I:java.net.URL)\l  (r1 I:io.fabric.sdk.android.services.network.HttpRequest)\l io.fabric.sdk.android.services.network.HttpRequest.url java.net.URL A[Catch:\{ MalformedURLException \-\> 0x001e \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: IPUT  \l  (r3 I:java.lang.String)\l  (r1 I:io.fabric.sdk.android.services.network.HttpRequest)\l io.fabric.sdk.android.services.network.HttpRequest.requestMethod java.lang.String \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|ExcHandler: MalformedURLException null\lSplitter:B:1:0x0010\l|0x001e: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: NEW_INSTANCE  (r3 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException) =  io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException \l0x0021: INVOKE  \l  (r3 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException)\l  (r2 I:java.io.IOException)\l io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void io.fabric.sdk.android.services.network.HttpRequest.\<init\>((r1 'this' I:io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

