digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.stream()Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r3 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.code():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (400(0x190, float:5.6E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|SYNTHETIC\lSplitter:B:2:0x0008\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0008\l|0x0008: INVOKE  (r0 I:java.net.HttpURLConnection) = (r3 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.getConnection():java.net.HttpURLConnection type: VIRTUAL A[Catch:\{ IOException \-\> 0x0011 \}, TRY_ENTER]\l0x000c: INVOKE  (r0 I:java.io.InputStream) = (r0 I:java.net.HttpURLConnection) java.net.HttpURLConnection.getInputStream():java.io.InputStream type: VIRTUAL A[Catch:\{ IOException \-\> 0x0011 \}]\l0x000f: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|ExcHandler: IOException null\lSplitter:B:2:0x0008\l|0x0011: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: NEW_INSTANCE  (r1 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException) =  io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException \l0x0014: INVOKE  \l  (r1 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException)\l  (r0 I:java.io.IOException)\l io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: INVOKE  (r0 I:java.net.HttpURLConnection) = (r3 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.getConnection():java.net.HttpURLConnection type: VIRTUAL \l0x001c: INVOKE  (r0 I:java.io.InputStream) = (r0 I:java.net.HttpURLConnection) java.net.HttpURLConnection.getErrorStream():java.io.InputStream type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0032 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|SYNTHETIC\lSplitter:B:10:0x0022\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0022\l|0x0022: INVOKE  (r0 I:java.net.HttpURLConnection) = (r3 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.getConnection():java.net.HttpURLConnection type: VIRTUAL A[Catch:\{ IOException \-\> 0x002b \}, TRY_ENTER]\l0x0026: INVOKE  (r0 I:java.io.InputStream) = (r0 I:java.net.HttpURLConnection) java.net.HttpURLConnection.getInputStream():java.io.InputStream type: VIRTUAL A[Catch:\{ IOException \-\> 0x002b \}]\l0x0029: NOP   A[TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|ExcHandler: IOException null\lSplitter:B:10:0x0022\l|0x002b: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: NEW_INSTANCE  (r1 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException) =  io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException \l0x002e: INVOKE  \l  (r1 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException)\l  (r0 I:java.io.IOException)\l io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: IGET  (r1 I:boolean) = (r3 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.uncompress boolean \l}"];
Node_17 [shape=record,label="{17\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0050 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|0x0036: CONST_STR  (r1 I:java.lang.String) =  \"gzip\" \l0x0038: INVOKE  (r2 I:java.lang.String) = (r3 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.contentEncoding():java.lang.String type: VIRTUAL \l0x003c: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|0x0040: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0043 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0043|SYNTHETIC\lSplitter:B:21:0x0043\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x0043\l|0x0043: NEW_INSTANCE  (r1 I:java.util.zip.GZIPInputStream) =  java.util.zip.GZIPInputStream A[Catch:\{ IOException \-\> 0x0049 \}, TRY_ENTER]\l0x0045: INVOKE  \l  (r1 I:java.util.zip.GZIPInputStream)\l  (r0 I:java.io.InputStream)\l java.util.zip.GZIPInputStream.\<init\>(java.io.InputStream):void type: DIRECT A[Catch:\{ IOException \-\> 0x0049 \}, TRY_LEAVE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0048|0x0048: RETURN  (r1 I:java.io.InputStream) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0049|ExcHandler: IOException null\lSplitter:B:21:0x0043\l|0x0049: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x004a|0x004a: NEW_INSTANCE  (r1 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException) =  io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException \l0x004c: INVOKE  \l  (r1 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException)\l  (r0 I:java.io.IOException)\l io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x004f|0x004f: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0050|0x0050: RETURN  (r0 I:java.io.InputStream) \l}"];
MethodNode[shape=record,label="{public java.io.InputStream io.fabric.sdk.android.services.network.HttpRequest.stream((r3 'this' I:io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_16;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_11 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_27[style=dashed];
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
}

