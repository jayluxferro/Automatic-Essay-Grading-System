digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.encode(Ljava\/lang\/CharSequence;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: NEW_INSTANCE  (r0 I:java.net.URL) =  java.net.URL A[Catch:\{ IOException \-\> 0x0086 \}, TRY_ENTER]\l0x0002: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.CharSequence) java.lang.CharSequence.toString():java.lang.String type: INTERFACE A[Catch:\{ IOException \-\> 0x0086 \}]\l0x0006: INVOKE  (r0 I:java.net.URL), (r7 I:java.lang.String) java.net.URL.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ IOException \-\> 0x0086 \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r7 I:java.lang.String) = (r0 I:java.net.URL) java.net.URL.getHost():java.lang.String type: VIRTUAL \l0x000d: INVOKE  (r1 I:int) = (r0 I:java.net.URL) java.net.URL.getPort():int type: VIRTUAL \l0x0011: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0016: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0019: INVOKE  (r2 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001c: CONST  (r7 I:?[int, float, short, byte, char]) = (58 ?[int, float, short, byte, char]) \l0x001e: INVOKE  (r2 I:java.lang.StringBuilder), (r7 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0021: INVOKE  (r7 I:java.lang.String) = (r1 I:int) java.lang.Integer.toString(int):java.lang.String type: STATIC \l0x0025: INVOKE  (r2 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0028: INVOKE  (r7 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|SYNTHETIC\lSplitter:B:6:0x002d\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x002d\l|0x002d: NEW_INSTANCE  (r7 I:java.net.URI) =  java.net.URI A[Catch:\{ URISyntaxException \-\> 0x0075 \}, TRY_ENTER]\l0x002f: INVOKE  (r2 I:java.lang.String) = (r0 I:java.net.URL) java.net.URL.getProtocol():java.lang.String type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0033: INVOKE  (r4 I:java.lang.String) = (r0 I:java.net.URL) java.net.URL.getPath():java.lang.String type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0037: INVOKE  (r5 I:java.lang.String) = (r0 I:java.net.URL) java.net.URL.getQuery():java.lang.String type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x003b: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x003c: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x003d: INVOKE  \l  (r1 I:java.net.URI)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l java.net.URI.\<init\>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String):void type: DIRECT A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0040: INVOKE  (r7 I:java.lang.String) = (r7 I:java.net.URI) java.net.URI.toASCIIString():java.lang.String type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0044: CONST  (r0 I:?[int, float, short, byte, char]) = (63 ?[int, float, short, byte, char]) A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0046: INVOKE  (r0 I:int) = (r7 I:java.lang.String), (r0 I:int) java.lang.String.indexOf(int):int type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x004a|0x004a: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0074 A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x004c|0x004c: ARITH  (r0 I:int) = (r0 I:int) + (1 int) A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x004e: INVOKE  (r1 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0052|0x0052: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:12:0x0074 A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0054|0x0054: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0056: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0059: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x005a: INVOKE  (r2 I:java.lang.String) = (r7 I:java.lang.String), (r2 I:int), (r0 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x005e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0061: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.String), (r0 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0065: CONST_STR  (r0 I:java.lang.String) =  \"+\" A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0067: CONST_STR  (r2 I:java.lang.String) =  \"%2B\" A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0069: INVOKE  (r7 I:java.lang.String) = \l  (r7 I:java.lang.String)\l  (r0 I:java.lang.CharSequence)\l  (r2 I:java.lang.CharSequence)\l java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x006d: INVOKE  (r1 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0070: INVOKE  (r7 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ URISyntaxException \-\> 0x0075 \}]\l0x0073: NOP   A[TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0074|0x0074: RETURN  (r7 I:java.lang.String) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0075|ExcHandler: URISyntaxException null\lSplitter:B:6:0x002d\l|0x0075: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0076|0x0076: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException \l0x0078: CONST_STR  (r1 I:java.lang.String) =  \"Parsing URI failed\" \l0x007a: INVOKE  (r0 I:java.io.IOException), (r1 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l0x007d: INVOKE  (r0 I:java.io.IOException), (r7 I:java.lang.Throwable) java.io.IOException.initCause(java.lang.Throwable):java.lang.Throwable type: VIRTUAL \l0x0080: NEW_INSTANCE  (r7 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException) =  io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException \l0x0082: INVOKE  \l  (r7 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException)\l  (r0 I:java.io.IOException)\l io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0085|0x0085: THROW  (r7 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0086|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x0086: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0087|0x0087: NEW_INSTANCE  (r0 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException) =  io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException \l0x0089: INVOKE  \l  (r0 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException)\l  (r7 I:java.io.IOException)\l io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x008c|0x008c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static java.lang.String io.fabric.sdk.android.services.network.HttpRequest.encode((r7 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_16;
Node_1 -> Node_2;
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

