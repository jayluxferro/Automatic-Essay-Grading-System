digraph "CFG forio.fabric.sdk.android.services.network.HttpRequest.reader(Ljava\/lang\/String;)Ljava\/io\/InputStreamReader;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: NEW_INSTANCE  (r0 I:java.io.InputStreamReader) =  java.io.InputStreamReader A[Catch:\{ UnsupportedEncodingException \-\> 0x000e \}, TRY_ENTER]\l0x0002: INVOKE  (r1 I:java.io.InputStream) = (r2 I:io.fabric.sdk.android.services.network.HttpRequest) io.fabric.sdk.android.services.network.HttpRequest.stream():java.io.InputStream type: VIRTUAL A[Catch:\{ UnsupportedEncodingException \-\> 0x000e \}]\l0x0006: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String) io.fabric.sdk.android.services.network.HttpRequest.getValidCharset(java.lang.String):java.lang.String type: STATIC A[Catch:\{ UnsupportedEncodingException \-\> 0x000e \}]\l0x000a: INVOKE  \l  (r0 I:java.io.InputStreamReader)\l  (r1 I:java.io.InputStream)\l  (r3 I:java.lang.String)\l java.io.InputStreamReader.\<init\>(java.io.InputStream, java.lang.String):void type: DIRECT A[Catch:\{ UnsupportedEncodingException \-\> 0x000e \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: RETURN  (r0 I:java.io.InputStreamReader) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|ExcHandler: UnsupportedEncodingException null\lSplitter:B:0:0x0000\l|0x000e: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException) =  io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException \l0x0011: INVOKE  \l  (r0 I:io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException)\l  (r3 I:java.io.IOException)\l io.fabric.sdk.android.services.network.HttpRequest.HttpRequestException.\<init\>(java.io.IOException):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.io.InputStreamReader io.fabric.sdk.android.services.network.HttpRequest.reader((r2 'this' I:io.fabric.sdk.android.services.network.HttpRequest A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[io.fabric.sdk.android.services.network.HttpRequest$HttpRequestException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

