digraph "CFG forio.fabric.sdk.android.services.concurrency.Priority.compareTo(Lio\/fabric\/sdk\/android\/services\/concurrency\/PriorityProvider;Ljava\/lang\/Object;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) io.fabric.sdk.android.services.concurrency.PriorityProvider \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CHECK_CAST  (r2 I:io.fabric.sdk.android.services.concurrency.PriorityProvider) = (io.fabric.sdk.android.services.concurrency.PriorityProvider) (r2 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  (r2 I:io.fabric.sdk.android.services.concurrency.Priority) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.PriorityProvider)\l io.fabric.sdk.android.services.concurrency.PriorityProvider.getPriority():io.fabric.sdk.android.services.concurrency.Priority type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: SGET  (r2 I:io.fabric.sdk.android.services.concurrency.Priority) =  io.fabric.sdk.android.services.concurrency.Priority.NORMAL io.fabric.sdk.android.services.concurrency.Priority \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: INVOKE  (r2 I:int) = (r2 I:io.fabric.sdk.android.services.concurrency.Priority) io.fabric.sdk.android.services.concurrency.Priority.ordinal():int type: VIRTUAL \l0x0011: INVOKE  (r1 I:io.fabric.sdk.android.services.concurrency.Priority) = \l  (r1 I:io.fabric.sdk.android.services.concurrency.PriorityProvider)\l io.fabric.sdk.android.services.concurrency.PriorityProvider.getPriority():io.fabric.sdk.android.services.concurrency.Priority type: INTERFACE \l0x0015: INVOKE  (r1 I:int) = (r1 I:io.fabric.sdk.android.services.concurrency.Priority) io.fabric.sdk.android.services.concurrency.Priority.ordinal():int type: VIRTUAL \l0x0019: ARITH  (r2 I:int) = (r2 I:int) \- (r1 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{static int io.fabric.sdk.android.services.concurrency.Priority.compareTo((r1 I:io.fabric.sdk.android.services.concurrency.PriorityProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:Y A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<Y:, Ljava\/lang\/Object;, \>(, Lio\/fabric\/sdk\/android\/services\/concurrency\/PriorityProvider;, TY;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

