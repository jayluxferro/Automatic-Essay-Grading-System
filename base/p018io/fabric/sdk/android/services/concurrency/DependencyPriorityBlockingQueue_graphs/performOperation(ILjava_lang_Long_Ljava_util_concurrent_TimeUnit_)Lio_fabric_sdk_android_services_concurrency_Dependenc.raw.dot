digraph "CFG forio.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.performOperation(ILjava\/lang\/Long;Ljava\/util\/concurrent\/TimeUnit;)Lio\/fabric\/sdk\/android\/services\/concurrency\/Dependency;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3] t:[0x001e, 0x0017, 0x0010, 0x0005] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r1 I:E) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r1 I:long) = (r2 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x0009: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:java.util.concurrent.PriorityBlockingQueue)\l  (r1 I:long)\l  (r3 I:java.util.concurrent.TimeUnit)\l java.util.concurrent.PriorityBlockingQueue.poll(long, java.util.concurrent.TimeUnit):java.lang.Object type: SUPER \l0x000d: CHECK_CAST  (r1 I:io.fabric.sdk.android.services.concurrency.Dependency) = (io.fabric.sdk.android.services.concurrency.Dependency) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.concurrent.PriorityBlockingQueue) java.util.concurrent.PriorityBlockingQueue.poll():java.lang.Object type: SUPER \l0x0014: CHECK_CAST  (r1 I:io.fabric.sdk.android.services.concurrency.Dependency) = (io.fabric.sdk.android.services.concurrency.Dependency) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.concurrent.PriorityBlockingQueue) java.util.concurrent.PriorityBlockingQueue.peek():java.lang.Object type: SUPER \l0x001b: CHECK_CAST  (r1 I:io.fabric.sdk.android.services.concurrency.Dependency) = (io.fabric.sdk.android.services.concurrency.Dependency) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.concurrent.PriorityBlockingQueue) java.util.concurrent.PriorityBlockingQueue.take():java.lang.Object type: SUPER \l0x0022: CHECK_CAST  (r1 I:io.fabric.sdk.android.services.concurrency.Dependency) = (io.fabric.sdk.android.services.concurrency.Dependency) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: RETURN  (r1 I:E) \l}"];
MethodNode[shape=record,label="{E io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.performOperation((r0 'this' I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.Long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.concurrent.TimeUnit A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I, Ljava\/lang\/Long;, Ljava\/util\/concurrent\/TimeUnit;, )TE;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_0 -> Node_4;
Node_0 -> Node_5;
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_3 -> Node_7;
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

