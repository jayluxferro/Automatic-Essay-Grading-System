digraph "CFG forio.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.size()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.lock java.util.concurrent.locks.ReentrantLock A[Catch:\{ all \-\> 0x0016 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.lock():void type: VIRTUAL A[Catch:\{ all \-\> 0x0016 \}]\l0x0005: IGET  (r0 I:java.util.Queue\<E\>) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.blockedQueue java.util.Queue A[Catch:\{ all \-\> 0x0016 \}]\l0x0007: INVOKE  (r0 I:int) = (r0 I:java.util.Queue) java.util.Queue.size():int type: INTERFACE A[Catch:\{ all \-\> 0x0016 \}]\l0x000b: INVOKE  (r1 I:int) = (r2 I:java.util.concurrent.PriorityBlockingQueue) java.util.concurrent.PriorityBlockingQueue.size():int type: SUPER A[Catch:\{ all \-\> 0x0016 \}]\l0x000e: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0010: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.lock java.util.concurrent.locks.ReentrantLock \l0x0012: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.unlock():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: RETURN  (r0 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|ExcHandler: all null\lSplitter:B:0:0x0000\l|0x0016: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.lock java.util.concurrent.locks.ReentrantLock \l0x0019: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.unlock():void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.size((r2 'this' I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

