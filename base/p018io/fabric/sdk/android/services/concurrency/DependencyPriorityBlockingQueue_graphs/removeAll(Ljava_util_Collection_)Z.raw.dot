digraph "CFG forio.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.removeAll(Ljava\/util\/Collection;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.lock java.util.concurrent.locks.ReentrantLock A[Catch:\{ all \-\> 0x0016 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.lock():void type: VIRTUAL A[Catch:\{ all \-\> 0x0016 \}]\l0x0005: INVOKE  (r0 I:boolean) = \l  (r2 I:java.util.concurrent.PriorityBlockingQueue)\l  (r3 I:java.util.Collection)\l java.util.concurrent.PriorityBlockingQueue.removeAll(java.util.Collection):boolean type: SUPER A[Catch:\{ all \-\> 0x0016 \}]\l0x0009: IGET  (r1 I:java.util.Queue\<E\>) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.blockedQueue java.util.Queue A[Catch:\{ all \-\> 0x0016 \}]\l0x000b: INVOKE  (r3 I:boolean) = (r1 I:java.util.Queue), (r3 I:java.util.Collection) java.util.Queue.removeAll(java.util.Collection):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0016 \}]\l0x000e: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) \| (r0 I:?[int, boolean, short, byte, char]) \l0x0010: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.lock java.util.concurrent.locks.ReentrantLock \l0x0012: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.unlock():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: RETURN  (r3 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|ExcHandler: all null\lSplitter:B:0:0x0000\l|0x0016: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.lock java.util.concurrent.locks.ReentrantLock \l0x0019: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.unlock():void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.removeAll((r2 'this' I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue A[IMMUTABLE_TYPE, THIS]), (r3 I:java.util.Collection\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, *\>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

