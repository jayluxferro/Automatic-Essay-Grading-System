digraph "CFG forio.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.drainTo(Ljava\/util\/Collection;I)I" {
subgraph cluster_Region_1528237275 {
label = "R(1:(3:1|(2:5|6)|8))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_81758404 {
label = "Try: R(3:1|(2:5|6)|8) finally: R(3:9|10|11)";
node [shape=record,color=blue];
subgraph cluster_Region_1657906868 {
label = "R(3:1|(2:5|6)|8)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ all \-\> 0x0025 \}\lSplitter:B:0:0x0000\l|r2.lock.lock()     \/\/ Catch:\{ all \-\> 0x0025 \}\lint int r0 = super.drainTo(r3, r4)     \/\/ Catch:\{ all \-\> 0x0025 \}\l}"];
subgraph cluster_LoopRegion_982558358 {
label = "LOOP:0: (2:5|6)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|Catch:\{ all \-\> 0x0025 \}\l|if (r2.blockedQueue.isEmpty() == false) goto L_0x0011     \/\/ Catch:\{ all \-\> 0x0025 \}\l}"];
subgraph cluster_Region_1187565379 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013|Catch:\{ all \-\> 0x0025 \}\l|r3.add(r2.blockedQueue.poll())     \/\/ Catch:\{ all \-\> 0x0025 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|LOOP_END\lLOOP:0: B:2:0x0009\-\>B:6:0x001c\l|r0++\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0024|RETURN\l|return r0\l}"];
}
subgraph cluster_Region_1111892406 {
label = "R(3:9|10|11) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0025|ExcHandler:  FINALLY\lSplitter:B:0:0x0000\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|FINALLY_INSNS\l|r2.lock.unlock()\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|throw r3\l}"];
}
}
}
subgraph cluster_Region_1111892406 {
label = "R(3:9|10|11) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0025|ExcHandler:  FINALLY\lSplitter:B:0:0x0000\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|FINALLY_INSNS\l|r2.lock.unlock()\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|throw r3\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0009|LOOP_START\lCatch:\{ all \-\> 0x0025 \}\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:1:?, B:6:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:2:0x0009\-\>B:6:0x001c\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0011|ADDED_TO_REGION\lCatch:\{ all \-\> 0x0025 \}\l|if (r0 \<= r4) goto L_0x0013     \/\/ Catch:\{ all \-\> 0x0025 \}\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f|DONT_GENERATE\l|java.util.concurrent.locks.ReentrantLock r3 = r2.lock\lr3.unlock()\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001f|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x001f|SYNTHETIC\lADDED_TO_REGION\l}"];
MethodNode[shape=record,label="{public int io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.drainTo((r2v0 'this' io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue A[IMMUTABLE_TYPE, THIS]), (r3v0 java.util.Collection\<? super E\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, \-TE;\>;I)I]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_13[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_2;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_0 -> Node_1;
Node_0 -> Node_9;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_12[style=dashed];
Node_7 -> Node_8;
Node_12 -> Node_7;
Node_13 -> Node_7;
}

