digraph "CFG forio.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.recycleBlockedQueue()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = \l  (r3 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.lock java.util.concurrent.locks.ReentrantLock A[Catch:\{ all \-\> 0x002a \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.lock():void type: VIRTUAL A[Catch:\{ all \-\> 0x002a \}]\l0x0005: IGET  (r0 I:java.util.Queue\<E\>) = \l  (r3 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.blockedQueue java.util.Queue A[Catch:\{ all \-\> 0x002a \}]\l0x0007: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Queue) java.util.Queue.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0024 A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x002a \}]\l0x0015: CHECK_CAST  (r1 I:io.fabric.sdk.android.services.concurrency.Dependency) = (io.fabric.sdk.android.services.concurrency.Dependency) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002a \}]\l0x0017: INVOKE  (r2 I:boolean) = \l  (r3 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l  (r1 I:io.fabric.sdk.android.services.concurrency.Dependency)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.canProcess(io.fabric.sdk.android.services.concurrency.Dependency):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000b A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: INVOKE  \l  (r3 I:java.util.concurrent.PriorityBlockingQueue)\l  (r1 I:java.lang.Object)\l java.util.concurrent.PriorityBlockingQueue.offer(java.lang.Object):boolean type: SUPER A[Catch:\{ all \-\> 0x002a \}]\l0x0020: INVOKE  (r0 I:java.util.Iterator) java.util.Iterator.remove():void type: INTERFACE A[Catch:\{ all \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: IGET  (r0 I:java.util.concurrent.locks.ReentrantLock) = \l  (r3 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.lock java.util.concurrent.locks.ReentrantLock \l0x0026: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.unlock():void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|ExcHandler: all null\lSplitter:B:0:0x0000\l|0x002a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: IGET  (r1 I:java.util.concurrent.locks.ReentrantLock) = \l  (r3 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.lock java.util.concurrent.locks.ReentrantLock \l0x002d: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantLock) java.util.concurrent.locks.ReentrantLock.unlock():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.recycleBlockedQueue((r3 'this' I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_2;
Node_5 -> Node_6[style=dashed];
Node_6 -> Node_2;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

