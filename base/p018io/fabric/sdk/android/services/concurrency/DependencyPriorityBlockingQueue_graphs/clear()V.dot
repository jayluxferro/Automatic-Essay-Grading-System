digraph "CFG forio.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.clear()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ all \-\> 0x0013 \}\lSplitter:B:0:0x0000\l|r2.lock.lock()     \/\/ Catch:\{ all \-\> 0x0013 \}\lr2.blockedQueue.clear()     \/\/ Catch:\{ all \-\> 0x0013 \}\lsuper.clear()     \/\/ Catch:\{ all \-\> 0x0013 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|DONT_GENERATE\l|java.util.concurrent.locks.ReentrantLock r0 = r2.lock\lr0.unlock()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|ExcHandler:  FINALLY\lSplitter:B:0:0x0000\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|FINALLY_INSNS\l|r2.lock.unlock()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|throw r0\l}"];
MethodNode[shape=record,label="{public void io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.clear((r2v0 'this' io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

