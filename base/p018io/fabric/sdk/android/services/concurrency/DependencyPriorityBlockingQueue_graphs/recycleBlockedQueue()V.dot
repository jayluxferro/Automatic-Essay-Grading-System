digraph "CFG forio.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.recycleBlockedQueue()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ all \-\> 0x002a \}\lSplitter:B:0:0x0000\l|r3.lock.lock()     \/\/ Catch:\{ all \-\> 0x002a \}\ljava.util.Iterator r0 = r3.blockedQueue.iterator()     \/\/ Catch:\{ all \-\> 0x002a \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|LOOP_START\lCatch:\{ all \-\> 0x002a \}\lLOOP:0: B:2:0x000b\-\>B:12:0x000b\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|Catch:\{ all \-\> 0x002a \}\l|if (r0.hasNext() == false) goto L_0x0024     \/\/ Catch:\{ all \-\> 0x002a \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|Catch:\{ all \-\> 0x002a \}\l|io.fabric.sdk.android.services.concurrency.Dependency r1 = (p018io.fabric.sdk.android.services.concurrency.Dependency) r0.next()     \/\/ Catch:\{ all \-\> 0x002a \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|Catch:\{ all \-\> 0x002a \}\l|if (canProcess(r1) == false) goto L_0x000b     \/\/ Catch:\{ all \-\> 0x002a \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|Catch:\{ all \-\> 0x002a \}\l|super.offer(r1)     \/\/ Catch:\{ all \-\> 0x002a \}\lr0.remove()     \/\/ Catch:\{ all \-\> 0x002a \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|DONT_GENERATE\l|java.util.concurrent.locks.ReentrantLock r0 = r3.lock\lr0.unlock()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|ExcHandler:  FINALLY\lSplitter:B:0:0x0000\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|FINALLY_INSNS\l|r3.lock.unlock()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|throw r0\l}"];
Node_12 [shape=record,label="{12\:\ 0x000b|LOOP_END\lSYNTHETIC\lLOOP:0: B:2:0x000b\-\>B:12:0x000b\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x000b|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x000b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.recycleBlockedQueue((r3v0 'this' io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_9;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_2;
Node_13 -> Node_7;
Node_14 -> Node_12;
Node_15 -> Node_12;
}

