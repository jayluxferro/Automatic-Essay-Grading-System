digraph "CFG forio.fabric.sdk.android.services.concurrency.PriorityAsyncTask.addDependency(Lio\/fabric\/sdk\/android\/services\/concurrency\/Task;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:io.fabric.sdk.android.services.concurrency.AsyncTask$Status) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.PriorityAsyncTask)\l io.fabric.sdk.android.services.concurrency.PriorityAsyncTask.getStatus():io.fabric.sdk.android.services.concurrency.AsyncTask$Status type: VIRTUAL \l0x0004: SGET  (r1 I:io.fabric.sdk.android.services.concurrency.AsyncTask$Status) =  io.fabric.sdk.android.services.concurrency.AsyncTask.Status.PENDING io.fabric.sdk.android.services.concurrency.AsyncTask$Status \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r0 I:io.fabric.sdk.android.services.concurrency.Dependency) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.PriorityAsyncTask)\l io.fabric.sdk.android.services.concurrency.PriorityAsyncTask.getDelegate():io.fabric.sdk.android.services.concurrency.Dependency type: VIRTUAL \l0x000c: CHECK_CAST  (r0 I:io.fabric.sdk.android.services.concurrency.PriorityProvider) = (io.fabric.sdk.android.services.concurrency.PriorityProvider) (r0 I:?[OBJECT, ARRAY]) \l0x000e: CHECK_CAST  (r0 I:io.fabric.sdk.android.services.concurrency.Dependency) = (io.fabric.sdk.android.services.concurrency.Dependency) (r0 I:?[OBJECT, ARRAY]) \l0x0010: INVOKE  \l  (r0 I:io.fabric.sdk.android.services.concurrency.Dependency)\l  (r3 I:java.lang.Object)\l io.fabric.sdk.android.services.concurrency.Dependency.addDependency(java.lang.Object):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: NEW_INSTANCE  (r3 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0016: CONST_STR  (r0 I:java.lang.String) =  \"Must not add Dependency after task is running\" \l0x0018: INVOKE  \l  (r3 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void io.fabric.sdk.android.services.concurrency.PriorityAsyncTask.addDependency((r2 'this' I:io.fabric.sdk.android.services.concurrency.PriorityAsyncTask A[IMMUTABLE_TYPE, THIS]), (r3 I:io.fabric.sdk.android.services.concurrency.Task A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

