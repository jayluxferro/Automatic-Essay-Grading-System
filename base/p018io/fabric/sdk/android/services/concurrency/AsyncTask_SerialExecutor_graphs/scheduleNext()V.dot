digraph "CFG forio.fabric.sdk.android.services.concurrency.AsyncTask.SerialExecutor.scheduleNext()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|java.lang.Runnable r0 = r2.tasks.poll()\lr2.active = r0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r0 == null) goto L_0x0014\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|p018io.fabric.sdk.android.services.concurrency.AsyncTask.THREAD_POOL_EXECUTOR.execute(r2.active)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|monitor\-exit(r2)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|REMOVE\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|REMOVE\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|REMOVE\l|throw r0\l}"];
MethodNode[shape=record,label="{protected synchronized void io.fabric.sdk.android.services.concurrency.AsyncTask.SerialExecutor.scheduleNext((r2v0 'this' io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

