digraph "CFG forio.fabric.sdk.android.services.concurrency.AsyncTask.SerialExecutor.scheduleNext()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.LinkedList\<java.lang.Runnable\>) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor)\l io.fabric.sdk.android.services.concurrency.AsyncTask.SerialExecutor.tasks java.util.LinkedList A[Catch:\{ all \-\> 0x0016 \}, TRY_ENTER]\l0x0003: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.LinkedList) java.util.LinkedList.poll():java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0016 \}]\l0x0007: CHECK_CAST  (r0 I:java.lang.Runnable) = (java.lang.Runnable) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0016 \}]\l0x0009: IPUT  \l  (r0 I:java.lang.Runnable)\l  (r2 I:io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor)\l io.fabric.sdk.android.services.concurrency.AsyncTask.SerialExecutor.active java.lang.Runnable A[Catch:\{ all \-\> 0x0016 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0014 A[Catch:\{ all \-\> 0x0016 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: SGET  (r0 I:java.util.concurrent.Executor) =  io.fabric.sdk.android.services.concurrency.AsyncTask.THREAD_POOL_EXECUTOR java.util.concurrent.Executor A[Catch:\{ all \-\> 0x0016 \}]\l0x000f: IGET  (r1 I:java.lang.Runnable) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor)\l io.fabric.sdk.android.services.concurrency.AsyncTask.SerialExecutor.active java.lang.Runnable A[Catch:\{ all \-\> 0x0016 \}]\l0x0011: INVOKE  \l  (r0 I:java.util.concurrent.Executor)\l  (r1 I:java.lang.Runnable)\l java.util.concurrent.Executor.execute(java.lang.Runnable):void type: INTERFACE A[Catch:\{ all \-\> 0x0016 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0016: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected synchronized void io.fabric.sdk.android.services.concurrency.AsyncTask.SerialExecutor.scheduleNext((r2 'this' I:io.fabric.sdk.android.services.concurrency.AsyncTask$SerialExecutor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

