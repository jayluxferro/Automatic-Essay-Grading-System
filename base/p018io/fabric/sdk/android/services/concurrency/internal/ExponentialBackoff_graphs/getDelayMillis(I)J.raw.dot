digraph "CFG forio.fabric.sdk.android.services.concurrency.internal.ExponentialBackoff.getDelayMillis(I)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = \l  (r6 I:io.fabric.sdk.android.services.concurrency.internal.ExponentialBackoff)\l io.fabric.sdk.android.services.concurrency.internal.ExponentialBackoff.baseTimeMillis long \l0x0002: CAST  (r0 I:double) = (double) (r0 I:long) \l0x0003: IGET  (r2 I:int) = \l  (r6 I:io.fabric.sdk.android.services.concurrency.internal.ExponentialBackoff)\l io.fabric.sdk.android.services.concurrency.internal.ExponentialBackoff.power int \l0x0005: CAST  (r2 I:double) = (double) (r2 I:int) \l0x0006: CAST  (r4 I:double) = (double) (r7 I:int) \l0x0007: INVOKE  (r2 I:double) = (r2 I:double), (r4 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x000b: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x000d: CAST  (r0 I:long) = (long) (r0 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{public long io.fabric.sdk.android.services.concurrency.internal.ExponentialBackoff.getDelayMillis((r6 'this' I:io.fabric.sdk.android.services.concurrency.internal.ExponentialBackoff A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

