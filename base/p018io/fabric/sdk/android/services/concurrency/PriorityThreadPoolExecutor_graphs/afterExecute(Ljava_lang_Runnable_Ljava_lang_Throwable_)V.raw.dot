digraph "CFG forio.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor.afterExecute(Ljava\/lang\/Runnable;Ljava\/lang\/Throwable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0001: CHECK_CAST  (r0 I:io.fabric.sdk.android.services.concurrency.Task) = (io.fabric.sdk.android.services.concurrency.Task) (r0 I:?[OBJECT, ARRAY]) \l0x0003: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0004: INVOKE  \l  (r0 I:io.fabric.sdk.android.services.concurrency.Task)\l  (r1 I:boolean)\l io.fabric.sdk.android.services.concurrency.Task.setFinished(boolean):void type: INTERFACE \l0x0007: INVOKE  \l  (r0 I:io.fabric.sdk.android.services.concurrency.Task)\l  (r4 I:java.lang.Throwable)\l io.fabric.sdk.android.services.concurrency.Task.setError(java.lang.Throwable):void type: INTERFACE \l0x000a: INVOKE  (r0 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue) = \l  (r2 I:io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor)\l io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor.getQueue():io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue type: VIRTUAL \l0x000e: INVOKE  \l  (r0 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.recycleBlockedQueue():void type: VIRTUAL \l0x0011: INVOKE  \l  (r2 I:java.util.concurrent.ThreadPoolExecutor)\l  (r3 I:java.lang.Runnable)\l  (r4 I:java.lang.Throwable)\l java.util.concurrent.ThreadPoolExecutor.afterExecute(java.lang.Runnable, java.lang.Throwable):void type: SUPER \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{protected void io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor.afterExecute((r2 'this' I:io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Runnable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Throwable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

