digraph "CFG forio.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor.getQueue()Lio\/fabric\/sdk\/android\/services\/concurrency\/DependencyPriorityBlockingQueue;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.concurrent.BlockingQueue) = (r1 I:java.util.concurrent.ThreadPoolExecutor) java.util.concurrent.ThreadPoolExecutor.getQueue():java.util.concurrent.BlockingQueue type: SUPER \l0x0004: CHECK_CAST  (r0 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue) = (io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  \l  (r0 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l \l}"];
MethodNode[shape=record,label="{public io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor.getQueue((r1 'this' I:io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

