digraph "CFG forio.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor.create(II)Lio\/fabric\/sdk\/android\/services\/concurrency\/PriorityThreadPoolExecutor;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r8 I:io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor) =  io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor \l0x0002: SGET  (r5 I:java.util.concurrent.TimeUnit) =  java.util.concurrent.TimeUnit.SECONDS java.util.concurrent.TimeUnit \l0x0004: NEW_INSTANCE  (r6 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue) =  io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue \l0x0006: INVOKE  \l  (r6 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue.\<init\>():void type: DIRECT \l0x0009: NEW_INSTANCE  (r7 I:io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor$PriorityThreadFactory) =  io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor$PriorityThreadFactory \l0x000b: CONST  (r0 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x000d: INVOKE  \l  (r7 I:io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor$PriorityThreadFactory)\l  (r0 I:int)\l io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor.PriorityThreadFactory.\<init\>(int):void type: DIRECT \l0x0010: CONST  (r3 I:?[long, double]) = (1 ?[long, double]) \l0x0012: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0013: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: INVOKE  \l  (r0 I:io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:long)\l  (r5 I:java.util.concurrent.TimeUnit)\l  (r6 I:io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue)\l  (r7 I:java.util.concurrent.ThreadFactory)\l io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor.\<init\>(int, int, long, java.util.concurrent.TimeUnit, io.fabric.sdk.android.services.concurrency.DependencyPriorityBlockingQueue, java.util.concurrent.ThreadFactory):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN  \l  (r8 I:io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor)\l \l}"];
MethodNode[shape=record,label="{public static io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor io.fabric.sdk.android.services.concurrency.PriorityThreadPoolExecutor.create((r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Ljava\/lang\/Runnable;, :, Lio\/fabric\/sdk\/android\/services\/concurrency\/Dependency;, :, Lio\/fabric\/sdk\/android\/services\/concurrency\/Task;, :, Lio\/fabric\/sdk\/android\/services\/concurrency\/PriorityProvider;, \>(II), Lio\/fabric\/sdk\/android\/services\/concurrency\/PriorityThreadPoolExecutor;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

