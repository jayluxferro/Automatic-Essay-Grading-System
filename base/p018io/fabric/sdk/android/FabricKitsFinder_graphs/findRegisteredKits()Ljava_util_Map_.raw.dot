digraph "CFG forio.fabric.sdk.android.FabricKitsFinder.findRegisteredKits()Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0002: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r1 I:java.util.zip.ZipFile) = (r10 I:io.fabric.sdk.android.FabricKitsFinder) io.fabric.sdk.android.FabricKitsFinder.loadApkFile():java.util.zip.ZipFile type: VIRTUAL \l0x0009: INVOKE  (r2 I:java.util.Enumeration) = (r1 I:java.util.zip.ZipFile) java.util.zip.ZipFile.entries():java.util.Enumeration type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: INVOKE  (r3 I:boolean) = (r2 I:java.util.Enumeration) java.util.Enumeration.hasMoreElements():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0063 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Enumeration) java.util.Enumeration.nextElement():java.lang.Object type: INTERFACE \l0x0017: CHECK_CAST  (r3 I:java.util.zip.ZipEntry) = (java.util.zip.ZipEntry) (r3 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  (r4 I:java.lang.String) = (r3 I:java.util.zip.ZipEntry) java.util.zip.ZipEntry.getName():java.lang.String type: VIRTUAL \l0x001d: CONST_STR  (r5 I:java.lang.String) =  \"fabric\/\" \l0x001f: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String), (r5 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x000d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: INVOKE  (r4 I:java.lang.String) = (r3 I:java.util.zip.ZipEntry) java.util.zip.ZipEntry.getName():java.lang.String type: VIRTUAL \l0x0029: INVOKE  (r4 I:int) = (r4 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x002d: CONST_STR  (r5 I:java.lang.String) =  \"fabric\/\" \l0x002f: INVOKE  (r5 I:int) = (r5 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|0x0033: IF  (r4 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:1:0x000d \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: INVOKE  (r3 I:io.fabric.sdk.android.KitInfo) = \l  (r10 I:io.fabric.sdk.android.FabricKitsFinder)\l  (r3 I:java.util.zip.ZipEntry)\l  (r1 I:java.util.zip.ZipFile)\l io.fabric.sdk.android.FabricKitsFinder.loadKitInfo(java.util.zip.ZipEntry, java.util.zip.ZipFile):io.fabric.sdk.android.KitInfo type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x000d \l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|0x003b: INVOKE  (r4 I:java.lang.String) = (r3 I:io.fabric.sdk.android.KitInfo) io.fabric.sdk.android.KitInfo.getIdentifier():java.lang.String type: VIRTUAL \l0x003f: INVOKE  \l  (r0 I:java.util.Map)\l  (r4 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0042: INVOKE  (r4 I:io.fabric.sdk.android.Logger) =  io.fabric.sdk.android.Fabric.getLogger():io.fabric.sdk.android.Logger type: STATIC \l0x0046: CONST_STR  (r5 I:java.lang.String) =  \"Fabric\" \l0x0048: CONST_STR  (r6 I:java.lang.String) =  \"Found kit:[%s] version:[%s]\" \l0x004a: CONST  (r7 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x004b: NEW_ARRAY  (r7 I:java.lang.Object[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x004d: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004e: INVOKE  (r9 I:java.lang.String) = (r3 I:io.fabric.sdk.android.KitInfo) io.fabric.sdk.android.KitInfo.getIdentifier():java.lang.String type: VIRTUAL \l0x0052: APUT  \l  (r7 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r9 I:?[OBJECT, ARRAY])\l \l0x0054: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0055: INVOKE  (r3 I:java.lang.String) = (r3 I:io.fabric.sdk.android.KitInfo) io.fabric.sdk.android.KitInfo.getVersion():java.lang.String type: VIRTUAL \l0x0059: APUT  \l  (r7 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x005b: INVOKE  (r3 I:java.lang.String) = (r6 I:java.lang.String), (r7 I:java.lang.Object[]) java.lang.String.format(java.lang.String, java.lang.Object[]):java.lang.String type: STATIC \l0x005f: INVOKE  \l  (r4 I:io.fabric.sdk.android.Logger)\l  (r5 I:java.lang.String)\l  (r3 I:java.lang.String)\l io.fabric.sdk.android.Logger.v(java.lang.String, java.lang.String):void type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0063|0x0063: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0068 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0065|SYNTHETIC\lSplitter:B:11:0x0065\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x0065\l|0x0065: INVOKE  (r1 I:java.util.zip.ZipFile) java.util.zip.ZipFile.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0068 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0068|0x0068: RETURN  \l  (r0 I:java.util.Map\<java.lang.String, io.fabric.sdk.android.KitInfo\>)\l \l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:11:0x0065\l}"];
MethodNode[shape=record,label="{private java.util.Map\<java.lang.String, io.fabric.sdk.android.KitInfo\> io.fabric.sdk.android.FabricKitsFinder.findRegisteredKits((r10 'this' I:io.fabric.sdk.android.FabricKitsFinder A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/Map\<, Ljava\/lang\/String;, Lio\/fabric\/sdk\/android\/KitInfo;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_13;
}

