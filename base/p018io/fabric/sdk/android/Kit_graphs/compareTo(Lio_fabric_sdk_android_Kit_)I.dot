digraph "CFG forio.fabric.sdk.android.Kit.compareTo(Lio\/fabric\/sdk\/android\/Kit;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (containsAnnotatedDependency(r4) == false) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r4.containsAnnotatedDependency(r3) == false) goto L_0x0010\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|RETURN\l|return \-1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if (hasAnnotatedDependency() == false) goto L_0x001d\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016}"];
Node_9 [shape=record,label="{9\:\ 0x001a|if (r4.hasAnnotatedDependency() != false) goto L_0x001d\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|RETURN\l|return 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d}"];
Node_12 [shape=record,label="{12\:\ 0x0021|if (hasAnnotatedDependency() != false) goto L_?\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023}"];
Node_14 [shape=record,label="{14\:\ 0x0027|if (r4.hasAnnotatedDependency() == false) goto L_?\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|RETURN\l|return \-1\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return 0\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
MethodNode[shape=record,label="{public int io.fabric.sdk.android.Kit.compareTo((r3v0 'this' io.fabric.sdk.android.Kit A[IMMUTABLE_TYPE, THIS]), (r4v0 io.fabric.sdk.android.Kit A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
}

