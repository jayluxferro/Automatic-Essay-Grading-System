digraph "CFG forio.fabric.sdk.android.Onboarding.\<init\>(Ljava\/util\/concurrent\/Future;Ljava\/util\/Collection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:io.fabric.sdk.android.Kit) io.fabric.sdk.android.Kit.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:io.fabric.sdk.android.services.network.DefaultHttpRequestFactory) =  io.fabric.sdk.android.services.network.DefaultHttpRequestFactory \l0x0005: INVOKE  \l  (r0 I:io.fabric.sdk.android.services.network.DefaultHttpRequestFactory)\l io.fabric.sdk.android.services.network.DefaultHttpRequestFactory.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:io.fabric.sdk.android.services.network.HttpRequestFactory)\l  (r1 I:io.fabric.sdk.android.Onboarding)\l io.fabric.sdk.android.Onboarding.requestFactory io.fabric.sdk.android.services.network.HttpRequestFactory \l0x000a: IPUT  \l  (r2 I:java.util.concurrent.Future\<java.util.Map\<java.lang.String, io.fabric.sdk.android.KitInfo\>\>)\l  (r1 I:io.fabric.sdk.android.Onboarding)\l io.fabric.sdk.android.Onboarding.kitsFinder java.util.concurrent.Future \l0x000c: IPUT  \l  (r3 I:java.util.Collection\<io.fabric.sdk.android.Kit\>)\l  (r1 I:io.fabric.sdk.android.Onboarding)\l io.fabric.sdk.android.Onboarding.providedKits java.util.Collection \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN   \l}"];
MethodNode[shape=record,label="{public void io.fabric.sdk.android.Onboarding.\<init\>((r1 'this' I:io.fabric.sdk.android.Onboarding A[IMMUTABLE_TYPE, THIS]), (r2 I:java.util.concurrent.Future\<java.util.Map\<java.lang.String, io.fabric.sdk.android.KitInfo\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.Collection\<io.fabric.sdk.android.Kit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/concurrent\/Future\<, Ljava\/util\/Map\<, Ljava\/lang\/String;, Lio\/fabric\/sdk\/android\/KitInfo;, \>;\>;, Ljava\/util\/Collection\<, Lio\/fabric\/sdk\/android\/Kit;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

