digraph "CFG forio.fabric.sdk.android.Fabric.addAnnotatedDependencies(Ljava\/util\/Map;Lio\/fabric\/sdk\/android\/Kit;)V" {
subgraph cluster_Region_1960700919 {
label = "R(2:0|(1:(2:2|(3:4|(2:6|(2:9|(1:11)(0)))(1:(1:14)(1:17))|15))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|io.fabric.sdk.android.services.concurrency.DependsOn p018io.fabric.sdk.android.services.concurrency.DependsOn r0 = r9.dependsOnAnnotation\l}"];
subgraph cluster_Region_894444711 {
label = "R(1:(2:2|(3:4|(2:6|(2:9|(1:11)(0)))(1:(1:14)(1:17))|15)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1410291449 {
label = "IF [B:1:0x0002] THEN: R(2:2|(3:4|(2:6|(2:9|(1:11)(0)))(1:(1:14)(1:17))|15)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r0 != null) goto L_0x0004\l}"];
subgraph cluster_Region_282431168 {
label = "R(2:2|(3:4|(2:6|(2:9|(1:11)(0)))(1:(1:14)(1:17))|15))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|int int r1 = r0.value().length\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_454127082 {
label = "LOOP:0: (3:4|(2:6|(2:9|(1:11)(0)))(1:(1:14)(1:17))|15)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:2:0x0004, B:15:0x004f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x000a\-\>B:15:0x004f\l|if (r2 \< r1) goto L_0x000c\l}"];
subgraph cluster_Region_2087766516 {
label = "R(3:4|(2:6|(2:9|(1:11)(0)))(1:(1:14)(1:17))|15)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|r3 = r0[r2]\l}"];
subgraph cluster_IfRegion_1855188994 {
label = "IF [B:5:0x0012] THEN: R(2:6|(2:9|(1:11)(0))) ELSE: R(1:(1:14)(1:17))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r3.isInterface() == true) goto L_0x0014\l}"];
subgraph cluster_Region_1062465205 {
label = "R(2:6|(2:9|(1:11)(0)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0014|java.util.Iterator r4 = r8.values().iterator()\l}"];
subgraph cluster_LoopRegion_185762020 {
label = "LOOP:1: (2:9|(1:11)(0))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0020|if (r4.hasNext() != false) goto L_0x0022\l}"];
subgraph cluster_Region_469549649 {
label = "R(2:9|(1:11)(0))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0022|io.fabric.sdk.android.Kit r5 = r4.next()\l}"];
subgraph cluster_IfRegion_1788748492 {
label = "IF [B:10:0x0030] THEN: R(1:11) ELSE: R(0)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0030|if (r3.isAssignableFrom(r5.getClass()) == true) goto L_0x0032\l}"];
subgraph cluster_Region_1243111276 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0032|r9.initializationTask.addDependency((p018io.fabric.sdk.android.services.concurrency.Task) r5.initializationTask)\l}"];
}
subgraph cluster_Region_1435689835 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
subgraph cluster_Region_671178178 {
label = "R(1:(1:14)(1:17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_865239628 {
label = "IF [B:13:0x0040] THEN: R(1:14) ELSE: R(1:17) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0040|if (r8.get(r3) != null) goto L_0x0042\l}"];
subgraph cluster_Region_1006192749 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0042|r9.initializationTask.addDependency((p018io.fabric.sdk.android.services.concurrency.Task) r8.get(r3).initializationTask)\l}"];
}
subgraph cluster_Region_2033352130 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0059|throw new p018io.fabric.sdk.android.services.concurrency.UnmetDependencyException(\"Referenced Kit was null, does the kit exist?\")\l}"];
}
}
}
}
Node_15 [shape=record,label="{15\:\ 0x004f|LOOP_END\lLOOP:0: B:3:0x000a\-\>B:15:0x004f\l|r2++\l}"];
}
}
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ 0x001c|LOOP_START\lLOOP:1: B:7:0x001c\-\>B:22:0x001c\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x003a}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0052}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0052|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x005a|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x004f|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x004f|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x001c|LOOP_END\lSYNTHETIC\lLOOP:1: B:7:0x001c\-\>B:22:0x001c\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x001c|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x001c|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_26 [shape=record,color=red,label="{26\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void io.fabric.sdk.android.Fabric.addAnnotatedDependencies((r7v0 'this' io.fabric.sdk.android.Fabric A[IMMUTABLE_TYPE, THIS]), (r8v0 java.util.Map\<java.lang.Class\<? extends io.fabric.sdk.android.Kit\>, io.fabric.sdk.android.Kit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 io.fabric.sdk.android.Kit A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map\<, Ljava\/lang\/Class\<, +, Lio\/fabric\/sdk\/android\/Kit;, \>;, Lio\/fabric\/sdk\/android\/Kit;, \>;, Lio\/fabric\/sdk\/android\/Kit;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_25[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_19[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_12[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_21[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_23[style=dashed];
Node_11 -> Node_24;
Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_3;
Node_7 -> Node_8;
Node_12 -> Node_13;
Node_16 -> Node_17;
Node_18 -> Node_16;
Node_19 -> Node_26;
Node_20 -> Node_15;
Node_21 -> Node_15;
Node_22 -> Node_7;
Node_23 -> Node_22;
Node_24 -> Node_22;
}

