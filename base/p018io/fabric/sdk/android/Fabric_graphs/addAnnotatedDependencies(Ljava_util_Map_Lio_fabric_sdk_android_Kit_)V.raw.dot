digraph "CFG forio.fabric.sdk.android.Fabric.addAnnotatedDependencies(Ljava\/util\/Map;Lio\/fabric\/sdk\/android\/Kit;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:io.fabric.sdk.android.services.concurrency.DependsOn) = (r9 I:io.fabric.sdk.android.Kit) io.fabric.sdk.android.Kit.dependsOnAnnotation io.fabric.sdk.android.services.concurrency.DependsOn \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x005a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:java.lang.Class[]) = (r0 I:io.fabric.sdk.android.services.concurrency.DependsOn) io.fabric.sdk.android.services.concurrency.DependsOn.value():java.lang.Class[] type: INTERFACE \l0x0008: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:18:0x005a \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x000e: INVOKE  (r4 I:boolean) = (r3 I:java.lang.Class) java.lang.Class.isInterface():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r4 I:java.util.Collection) = (r8 I:java.util.Map) java.util.Map.values():java.util.Collection type: INTERFACE \l0x0018: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004f \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0026: CHECK_CAST  (r5 I:io.fabric.sdk.android.Kit) = (io.fabric.sdk.android.Kit) (r5 I:?[OBJECT, ARRAY]) \l0x0028: INVOKE  (r6 I:java.lang.Class) = (r5 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x002c: INVOKE  (r6 I:boolean) = (r3 I:java.lang.Class), (r6 I:java.lang.Class) java.lang.Class.isAssignableFrom(java.lang.Class):boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001c \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: IGET  (r6 I:io.fabric.sdk.android.InitializationTask\<Result\>) = (r9 I:io.fabric.sdk.android.Kit) io.fabric.sdk.android.Kit.initializationTask io.fabric.sdk.android.InitializationTask \l0x0034: IGET  (r5 I:io.fabric.sdk.android.InitializationTask\<Result\>) = (r5 I:io.fabric.sdk.android.Kit) io.fabric.sdk.android.Kit.initializationTask io.fabric.sdk.android.InitializationTask \l0x0036: INVOKE  \l  (r6 I:io.fabric.sdk.android.InitializationTask)\l  (r5 I:io.fabric.sdk.android.services.concurrency.Task)\l io.fabric.sdk.android.InitializationTask.addDependency(io.fabric.sdk.android.services.concurrency.Task):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: INVOKE  (r4 I:java.lang.Object) = (r8 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x003e: CHECK_CAST  (r4 I:io.fabric.sdk.android.Kit) = (io.fabric.sdk.android.Kit) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|0x0040: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0052 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|0x0042: IGET  (r4 I:io.fabric.sdk.android.InitializationTask\<Result\>) = (r9 I:io.fabric.sdk.android.Kit) io.fabric.sdk.android.Kit.initializationTask io.fabric.sdk.android.InitializationTask \l0x0044: INVOKE  (r3 I:java.lang.Object) = (r8 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0048: CHECK_CAST  (r3 I:io.fabric.sdk.android.Kit) = (io.fabric.sdk.android.Kit) (r3 I:?[OBJECT, ARRAY]) \l0x004a: IGET  (r3 I:io.fabric.sdk.android.InitializationTask\<Result\>) = (r3 I:io.fabric.sdk.android.Kit) io.fabric.sdk.android.Kit.initializationTask io.fabric.sdk.android.InitializationTask \l0x004c: INVOKE  \l  (r4 I:io.fabric.sdk.android.InitializationTask)\l  (r3 I:io.fabric.sdk.android.services.concurrency.Task)\l io.fabric.sdk.android.InitializationTask.addDependency(io.fabric.sdk.android.services.concurrency.Task):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|0x0052: NEW_INSTANCE  (r8 I:io.fabric.sdk.android.services.concurrency.UnmetDependencyException) =  io.fabric.sdk.android.services.concurrency.UnmetDependencyException \l0x0054: CONST_STR  (r9 I:java.lang.String) =  \"Referenced Kit was null, does the kit exist?\" \l0x0056: INVOKE  \l  (r8 I:io.fabric.sdk.android.services.concurrency.UnmetDependencyException)\l  (r9 I:java.lang.String)\l io.fabric.sdk.android.services.concurrency.UnmetDependencyException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0059|0x0059: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x005a|0x005a: RETURN   \l}"];
MethodNode[shape=record,label="{void io.fabric.sdk.android.Fabric.addAnnotatedDependencies((r7 'this' I:io.fabric.sdk.android.Fabric A[IMMUTABLE_TYPE, THIS]), (r8 I:java.util.Map\<java.lang.Class\<? extends io.fabric.sdk.android.Kit\>, io.fabric.sdk.android.Kit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:io.fabric.sdk.android.Kit A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map\<, Ljava\/lang\/Class\<, +, Lio\/fabric\/sdk\/android\/Kit;, \>;, Lio\/fabric\/sdk\/android\/Kit;, \>;, Lio\/fabric\/sdk\/android\/Kit;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_7;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_7;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_3;
Node_16 -> Node_17;
}

