digraph "CFG forkotlin.text.DelimitedRangesSequence$iterator$1.calcNext()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r6.nextSearchIndex \>= 0) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|r6.nextState = 0\lr6.nextItem = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e}"];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r6.this$0.limit \<= 0) goto L_0x0027\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|r6.counter = r6.counter + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|if (r6.counter \>= r6.this$0.limit) goto L_0x0035\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027}"];
Node_8 [shape=record,label="{8\:\ 0x0033|if (r6.nextSearchIndex \<= r6.this$0.input.length()) goto L_0x004b\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|r6.nextItem = new kotlin.ranges.IntRange(r6.currentStartIndex, kotlin.text.StringsKt.getLastIndex(r6.this$0.input))\lr6.nextSearchIndex = \-1\l}"];
Node_10 [shape=record,label="{10\:\ 0x004b|kotlin.Pair r0 = (kotlin.Pair) r6.this$0.getNextMatch.invoke(r6.this$0.input, java.lang.Integer.valueOf(r6.nextSearchIndex))\l}"];
Node_11 [shape=record,label="{11\:\ 0x0063|if (r0 != null) goto L_0x007b\l}"];
Node_12 [shape=record,label="{12\:\ 0x0065|r6.nextItem = new kotlin.ranges.IntRange(r6.currentStartIndex, kotlin.text.StringsKt.getLastIndex(r6.this$0.input))\lr6.nextSearchIndex = \-1\l}"];
Node_13 [shape=record,label="{13\:\ 0x007b|int r2 = ((java.lang.Number) r0.component1()).intValue()\lint r0 = ((java.lang.Number) r0.component2()).intValue()\lr6.nextItem = kotlin.ranges.RangesKt.until(r6.currentStartIndex, r2)\lr6.currentStartIndex = r2 + r0\lint r2 = r6.currentStartIndex\l}"];
Node_14 [shape=record,label="{14\:\ 0x009c|if (r0 != 0) goto L_0x009f\l}"];
Node_15 [shape=record,label="{15\:\ 0x009e|r1 = 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x009f|PHI: r1 \l  PHI: (r1v2 int) = (r1v0 int), (r1v3 int) binds: [B:14:0x009c, B:15:0x009e] A[DONT_GENERATE, DONT_INLINE]\l|r6.nextSearchIndex = r2 + r1\l}"];
Node_17 [shape=record,label="{17\:\ 0x00a2|r6.nextState = 1\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private final void kotlin.text.DelimitedRangesSequence$iterator$1.calcNext((r6v0 'this' kotlin.text.DelimitedRangesSequence$iterator$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

