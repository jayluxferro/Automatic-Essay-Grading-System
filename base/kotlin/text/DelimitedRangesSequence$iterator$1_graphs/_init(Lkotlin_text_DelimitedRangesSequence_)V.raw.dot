digraph "CFG forkotlin.text.DelimitedRangesSequence$iterator$1.\<init\>(Lkotlin\/text\/DelimitedRangesSequence;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r3 I:kotlin.text.DelimitedRangesSequence)\l  (r2 I:kotlin.text.DelimitedRangesSequence$iterator$1)\l kotlin.text.DelimitedRangesSequence$iterator$1.this$0 kotlin.text.DelimitedRangesSequence \l0x0002: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0006: IPUT  \l  (r0 I:int)\l  (r2 I:kotlin.text.DelimitedRangesSequence$iterator$1)\l kotlin.text.DelimitedRangesSequence$iterator$1.nextState int \l0x0008: INVOKE  (r0 I:int) = (r3 I:kotlin.text.DelimitedRangesSequence) kotlin.text.DelimitedRangesSequence.access$getStartIndex$p(kotlin.text.DelimitedRangesSequence):int type: STATIC \l0x000c: INVOKE  (r3 I:java.lang.CharSequence) = (r3 I:kotlin.text.DelimitedRangesSequence) kotlin.text.DelimitedRangesSequence.access$getInput$p(kotlin.text.DelimitedRangesSequence):java.lang.CharSequence type: STATIC \l0x0010: INVOKE  (r3 I:int) = (r3 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l0x0014: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: INVOKE  (r3 I:int) = (r0 I:int), (r1 I:int), (r3 I:int) kotlin.ranges.RangesKt.coerceIn(int, int, int):int type: STATIC \l0x0019: IPUT  \l  (r3 I:int)\l  (r2 I:kotlin.text.DelimitedRangesSequence$iterator$1)\l kotlin.text.DelimitedRangesSequence$iterator$1.currentStartIndex int \l0x001b: IGET  (r3 I:int) = (r2 I:kotlin.text.DelimitedRangesSequence$iterator$1) kotlin.text.DelimitedRangesSequence$iterator$1.currentStartIndex int \l0x001d: IPUT  \l  (r3 I:int)\l  (r2 I:kotlin.text.DelimitedRangesSequence$iterator$1)\l kotlin.text.DelimitedRangesSequence$iterator$1.nextSearchIndex int \l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|0x001f: RETURN   \l}"];
MethodNode[shape=record,label="{void kotlin.text.DelimitedRangesSequence$iterator$1.\<init\>((r2 'this' I:kotlin.text.DelimitedRangesSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlin.text.DelimitedRangesSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

