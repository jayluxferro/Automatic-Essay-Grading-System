digraph "CFG forkotlin.text.DelimitedRangesSequence$iterator$1.next()Lkotlin\/ranges\/IntRange;" {
subgraph cluster_Region_1008341021 {
label = "R(2:(1:2)|(2:(2:5|(2:(2:7|8)|(1:10)))|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1891329243 {
label = "IF [B:1:0x0003] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r3.nextState == \-1) goto L_0x0005\l}"];
subgraph cluster_Region_1769326591 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|calcNext()\l}"];
}
}
subgraph cluster_Region_610071194 {
label = "R(2:(2:5|(2:(2:7|8)|(1:10)))|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1210750196 {
label = "IF [B:4:0x000a] THEN: R(2:5|(2:(2:7|8)|(1:10))) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r3.nextState != 0) goto L_0x000c\l}"];
subgraph cluster_Region_121826680 {
label = "R(2:5|(2:(2:7|8)|(1:10)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|kotlin.ranges.IntRange kotlin.ranges.IntRange r0 = r3.nextItem\l}"];
subgraph cluster_Region_1671212182 {
label = "R(2:(2:7|8)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1794749883 {
label = "IF [B:6:0x000e] THEN: R(2:7|8) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000e|if (r0 != null) goto L_0x0010\l}"];
subgraph cluster_Region_807302398 {
label = "R(2:7|8)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0010|r3.nextItem = null\lr3.nextState = \-1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_613532965 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001f|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.ranges.IntRange\")\l}"];
}
}
}
}
subgraph cluster_Region_1738160911 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0027|throw new java.util.NoSuchElementException()\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0008}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0018}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0020}"];
MethodNode[shape=record,label="{public kotlin.ranges.IntRange kotlin.text.DelimitedRangesSequence$iterator$1.next((r3v0 'this' kotlin.text.DelimitedRangesSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_11[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

