digraph "CFG forkotlin.text.DelimitedRangesSequence$iterator$1.next()Lkotlin\/ranges\/IntRange;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r3.nextState != \-1) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|calcNext()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r3.nextState == 0) goto L_0x0020\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|kotlin.ranges.IntRange r0 = r3.nextItem\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|if (r0 == null) goto L_0x0018\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|r3.nextItem = null\lr3.nextState = \-1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|RETURN\l|return r0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018}"];
Node_10 [shape=record,label="{10\:\ 0x001f|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.ranges.IntRange\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020}"];
Node_12 [shape=record,label="{12\:\ 0x0027|throw new java.util.NoSuchElementException()\l}"];
MethodNode[shape=record,label="{public kotlin.ranges.IntRange kotlin.text.DelimitedRangesSequence$iterator$1.next((r3v0 'this' kotlin.text.DelimitedRangesSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

