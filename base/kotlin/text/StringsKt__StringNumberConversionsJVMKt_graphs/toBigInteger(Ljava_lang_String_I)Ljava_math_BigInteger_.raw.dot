digraph "CFG forkotlin.text.StringsKt__StringNumberConversionsJVMKt.toBigInteger(Ljava\/lang\/String;I)Ljava\/math\/BigInteger;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.math.BigInteger) =  java.math.BigInteger \l0x0002: INVOKE  (r2 I:int) = (r2 I:int) kotlin.text.CharsKt.checkRadix(int):int type: STATIC \l0x0006: INVOKE  \l  (r0 I:java.math.BigInteger)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l java.math.BigInteger.\<init\>(java.lang.String, int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN  (r0 I:java.math.BigInteger) \l}"];
MethodNode[shape=record,label="{private static final java.math.BigInteger kotlin.text.StringsKt__StringNumberConversionsJVMKt.toBigInteger((r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}], Annotation[BUILD, kotlin.internal.InlineOnly, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

