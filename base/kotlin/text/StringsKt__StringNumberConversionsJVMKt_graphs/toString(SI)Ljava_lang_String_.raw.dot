digraph "CFG forkotlin.text.StringsKt__StringNumberConversionsJVMKt.toString(SI)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:int) = (r1 I:int) kotlin.text.CharsKt.checkRadix(int):int type: STATIC \l0x0004: INVOKE  (r1 I:int) = (r1 I:int) kotlin.text.CharsKt.checkRadix(int):int type: STATIC \l0x0008: INVOKE  (r0 I:java.lang.String) = (r0 I:int), (r1 I:int) java.lang.Integer.toString(int, int):java.lang.String type: STATIC \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"java.lang.Integer.toStriâ€¦(this, checkRadix(radix))\" \l0x000e: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{private static final java.lang.String kotlin.text.StringsKt__StringNumberConversionsJVMKt.toString((r0 I:short A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[BUILD, kotlin.internal.InlineOnly, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

