digraph "CFG forkotlin.text.Regex$findAll$1.\<init\>(Lkotlin\/text\/Regex;Ljava\/lang\/CharSequence;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r1 I:kotlin.text.Regex)\l  (r0 I:kotlin.text.Regex$findAll$1)\l kotlin.text.Regex$findAll$1.this$0 kotlin.text.Regex \l0x0002: IPUT  \l  (r2 I:java.lang.CharSequence)\l  (r0 I:kotlin.text.Regex$findAll$1)\l kotlin.text.Regex$findAll$1.$input java.lang.CharSequence \l0x0004: IPUT  (r3 I:int), (r0 I:kotlin.text.Regex$findAll$1) kotlin.text.Regex$findAll$1.$startIndex int \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: INVOKE  (r0 I:kotlin.jvm.internal.Lambda), (r1 I:int) kotlin.jvm.internal.Lambda.\<init\>(int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN   \l}"];
MethodNode[shape=record,label="{void kotlin.text.Regex$findAll$1.\<init\>((r0 'this' I:kotlin.text.Regex$findAll$1 A[IMMUTABLE_TYPE, THIS]), (r1 I:kotlin.text.Regex A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

