digraph "CFG forkotlin.text.RegexKt.findNext(Ljava\/util\/regex\/Matcher;ILjava\/lang\/CharSequence;)Lkotlin\/text\/MatchResult;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0.find(r1) != false) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|SYNTHETIC\lRETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return new kotlin.text.MatcherMatchResult(r0, r2)\l}"];
MethodNode[shape=record,label="{private static final kotlin.text.MatchResult kotlin.text.RegexKt.findNext((r0v0 java.util.regex.Matcher A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

