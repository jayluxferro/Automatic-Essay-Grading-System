digraph "CFG forkotlin.text.CharDirectionality.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (20 ?[int, float, short, byte, char]) \l0x0002: NEW_ARRAY  (r0 I:kotlin.text.CharDirectionality[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: kotlin.text.CharDirectionality[] \l0x0004: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x0006: CONST_STR  (r2 I:java.lang.String) =  \"UNDEFINED\" \l0x0008: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000a: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x000d: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.UNDEFINED kotlin.text.CharDirectionality \l0x000f: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0011: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x0013: CONST_STR  (r2 I:java.lang.String) =  \"LEFT_TO_RIGHT\" \l0x0015: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0016: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r4 I:int)\l  (r3 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0019: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.LEFT_TO_RIGHT kotlin.text.CharDirectionality \l0x001b: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x001d: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x001f: CONST_STR  (r2 I:java.lang.String) =  \"RIGHT_TO_LEFT\" \l0x0021: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0022: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0025: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.RIGHT_TO_LEFT kotlin.text.CharDirectionality \l0x0027: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0029: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x002b: CONST_STR  (r2 I:java.lang.String) =  \"RIGHT_TO_LEFT_ARABIC\" \l0x002d: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x002e: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r4 I:int)\l  (r3 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0031: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.RIGHT_TO_LEFT_ARABIC kotlin.text.CharDirectionality \l0x0033: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0035: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x0037: CONST_STR  (r2 I:java.lang.String) =  \"EUROPEAN_NUMBER\" \l0x0039: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x003a: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x003d: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.EUROPEAN_NUMBER kotlin.text.CharDirectionality \l0x003f: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0041: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x0043: CONST_STR  (r2 I:java.lang.String) =  \"EUROPEAN_NUMBER_SEPARATOR\" \l0x0045: CONST  (r4 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0046: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r4 I:int)\l  (r3 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0049: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.EUROPEAN_NUMBER_SEPARATOR kotlin.text.CharDirectionality \l0x004b: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x004d: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x004f: CONST_STR  (r2 I:java.lang.String) =  \"EUROPEAN_NUMBER_TERMINATOR\" \l0x0051: CONST  (r3 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0052: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0055: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.EUROPEAN_NUMBER_TERMINATOR kotlin.text.CharDirectionality \l0x0057: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0059: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x005b: CONST_STR  (r2 I:java.lang.String) =  \"ARABIC_NUMBER\" \l0x005d: CONST  (r4 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x005e: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r4 I:int)\l  (r3 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0061: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.ARABIC_NUMBER kotlin.text.CharDirectionality \l0x0063: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0065: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x0067: CONST_STR  (r2 I:java.lang.String) =  \"COMMON_NUMBER_SEPARATOR\" \l0x0069: CONST  (r3 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x006b: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x006e: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.COMMON_NUMBER_SEPARATOR kotlin.text.CharDirectionality \l0x0070: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0072: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x0074: CONST_STR  (r2 I:java.lang.String) =  \"NONSPACING_MARK\" \l0x0076: CONST  (r4 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0078: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r4 I:int)\l  (r3 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x007b: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.NONSPACING_MARK kotlin.text.CharDirectionality \l0x007d: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x007f: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x0081: CONST_STR  (r2 I:java.lang.String) =  \"BOUNDARY_NEUTRAL\" \l0x0083: CONST  (r3 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0085: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0088: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.BOUNDARY_NEUTRAL kotlin.text.CharDirectionality \l0x008a: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x008c: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x008e: CONST_STR  (r2 I:java.lang.String) =  \"PARAGRAPH_SEPARATOR\" \l0x0090: CONST  (r4 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l0x0092: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r4 I:int)\l  (r3 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x0095: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.PARAGRAPH_SEPARATOR kotlin.text.CharDirectionality \l0x0097: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0099: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x009b: CONST_STR  (r2 I:java.lang.String) =  \"SEGMENT_SEPARATOR\" \l0x009d: CONST  (r3 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l0x009f: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x00a2: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.SEGMENT_SEPARATOR kotlin.text.CharDirectionality \l0x00a4: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00a6: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x00a8: CONST_STR  (r2 I:java.lang.String) =  \"WHITESPACE\" \l0x00aa: CONST  (r4 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l0x00ac: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r4 I:int)\l  (r3 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x00af: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.WHITESPACE kotlin.text.CharDirectionality \l0x00b1: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00b3: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x00b5: CONST_STR  (r2 I:java.lang.String) =  \"OTHER_NEUTRALS\" \l0x00b7: CONST  (r3 I:?[int, float, short, byte, char]) = (14 ?[int, float, short, byte, char]) \l0x00b9: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x00bc: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.OTHER_NEUTRALS kotlin.text.CharDirectionality \l0x00be: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00c0: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x00c2: CONST_STR  (r2 I:java.lang.String) =  \"LEFT_TO_RIGHT_EMBEDDING\" \l0x00c4: CONST  (r4 I:?[int, float, short, byte, char]) = (15 ?[int, float, short, byte, char]) \l0x00c6: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r4 I:int)\l  (r3 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x00c9: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.LEFT_TO_RIGHT_EMBEDDING kotlin.text.CharDirectionality \l0x00cb: CONST  (r2 I:?[int, float, short, byte, char]) = (15 ?[int, float, short, byte, char]) \l0x00cd: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00cf: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x00d1: CONST_STR  (r2 I:java.lang.String) =  \"LEFT_TO_RIGHT_OVERRIDE\" \l0x00d3: CONST  (r3 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x00d5: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x00d8: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.LEFT_TO_RIGHT_OVERRIDE kotlin.text.CharDirectionality \l0x00da: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x00dc: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00de: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x00e0: CONST_STR  (r2 I:java.lang.String) =  \"RIGHT_TO_LEFT_EMBEDDING\" \l0x00e2: CONST  (r3 I:?[int, float, short, byte, char]) = (17 ?[int, float, short, byte, char]) \l0x00e4: CONST  (r4 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x00e6: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x00e9: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.RIGHT_TO_LEFT_EMBEDDING kotlin.text.CharDirectionality \l0x00eb: CONST  (r2 I:?[int, float, short, byte, char]) = (17 ?[int, float, short, byte, char]) \l0x00ed: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x00ef: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x00f1: CONST_STR  (r2 I:java.lang.String) =  \"RIGHT_TO_LEFT_OVERRIDE\" \l0x00f3: CONST  (r3 I:?[int, float, short, byte, char]) = (18 ?[int, float, short, byte, char]) \l0x00f5: CONST  (r4 I:?[int, float, short, byte, char]) = (17 ?[int, float, short, byte, char]) \l0x00f7: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x00fa: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.RIGHT_TO_LEFT_OVERRIDE kotlin.text.CharDirectionality \l0x00fc: CONST  (r2 I:?[int, float, short, byte, char]) = (18 ?[int, float, short, byte, char]) \l0x00fe: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0100: NEW_INSTANCE  (r1 I:kotlin.text.CharDirectionality) =  kotlin.text.CharDirectionality \l0x0102: CONST_STR  (r2 I:java.lang.String) =  \"POP_DIRECTIONAL_FORMAT\" \l0x0104: CONST  (r3 I:?[int, float, short, byte, char]) = (19 ?[int, float, short, byte, char]) \l0x0106: CONST  (r4 I:?[int, float, short, byte, char]) = (18 ?[int, float, short, byte, char]) \l0x0108: INVOKE  \l  (r1 I:kotlin.text.CharDirectionality)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l kotlin.text.CharDirectionality.\<init\>(java.lang.String, int, int):void type: DIRECT \l0x010b: SPUT  (r1 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.POP_DIRECTIONAL_FORMAT kotlin.text.CharDirectionality \l0x010d: CONST  (r2 I:?[int, float, short, byte, char]) = (19 ?[int, float, short, byte, char]) \l0x010f: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0111: SPUT  (r0 I:kotlin.text.CharDirectionality[]) kotlin.text.CharDirectionality.$VALUES kotlin.text.CharDirectionality[] \l0x0113: NEW_INSTANCE  (r0 I:kotlin.text.CharDirectionality$Companion) =  kotlin.text.CharDirectionality$Companion \l0x0115: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0116: INVOKE  \l  (r0 I:kotlin.text.CharDirectionality$Companion)\l  (r1 I:kotlin.jvm.internal.DefaultConstructorMarker)\l kotlin.text.CharDirectionality.Companion.\<init\>(kotlin.jvm.internal.DefaultConstructorMarker):void type: DIRECT \l0x0119: SPUT  (r0 I:kotlin.text.CharDirectionality$Companion) kotlin.text.CharDirectionality.Companion kotlin.text.CharDirectionality$Companion \l0x011b: SGET  (r0 I:kotlin.text.CharDirectionality$Companion$directionalityMap$2) =  kotlin.text.CharDirectionality$Companion$directionalityMap$2.INSTANCE kotlin.text.CharDirectionality$Companion$directionalityMap$2 \l0x011d: CHECK_CAST  (r0 I:kotlin.jvm.functions.Function0) = (kotlin.jvm.functions.Function0) (r0 I:?[OBJECT, ARRAY]) \l0x011f: INVOKE  (r0 I:kotlin.Lazy) = (r0 I:kotlin.jvm.functions.Function0) kotlin.LazyKt.lazy(kotlin.jvm.functions.Function0):kotlin.Lazy type: STATIC \l0x0123: SPUT  (r0 I:kotlin.Lazy) kotlin.text.CharDirectionality.directionalityMap$delegate kotlin.Lazy \l}"];
Node_1 [shape=record,label="{1\:\ 0x0125|0x0125: RETURN   \l}"];
MethodNode[shape=record,label="{static void kotlin.text.CharDirectionality.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

