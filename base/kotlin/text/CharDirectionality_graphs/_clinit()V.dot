digraph "CFG forkotlin.text.CharDirectionality.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"UNDEFINED\", 0, \-1)\lUNDEFINED = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"LEFT_TO_RIGHT\", 1, 0)\lLEFT_TO_RIGHT = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"RIGHT_TO_LEFT\", 2, 1)\lRIGHT_TO_LEFT = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"RIGHT_TO_LEFT_ARABIC\", 3, 2)\lRIGHT_TO_LEFT_ARABIC = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"EUROPEAN_NUMBER\", 4, 3)\lEUROPEAN_NUMBER = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"EUROPEAN_NUMBER_SEPARATOR\", 5, 4)\lEUROPEAN_NUMBER_SEPARATOR = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"EUROPEAN_NUMBER_TERMINATOR\", 6, 5)\lEUROPEAN_NUMBER_TERMINATOR = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"ARABIC_NUMBER\", 7, 6)\lARABIC_NUMBER = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"COMMON_NUMBER_SEPARATOR\", 8, 7)\lCOMMON_NUMBER_SEPARATOR = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"NONSPACING_MARK\", 9, 8)\lNONSPACING_MARK = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"BOUNDARY_NEUTRAL\", 10, 9)\lBOUNDARY_NEUTRAL = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"PARAGRAPH_SEPARATOR\", 11, 10)\lPARAGRAPH_SEPARATOR = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"SEGMENT_SEPARATOR\", 12, 11)\lSEGMENT_SEPARATOR = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"WHITESPACE\", 13, 12)\lWHITESPACE = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"OTHER_NEUTRALS\", 14, 13)\lOTHER_NEUTRALS = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"LEFT_TO_RIGHT_EMBEDDING\", 15, 14)\lLEFT_TO_RIGHT_EMBEDDING = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"LEFT_TO_RIGHT_OVERRIDE\", 16, 15)\lLEFT_TO_RIGHT_OVERRIDE = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"RIGHT_TO_LEFT_EMBEDDING\", 17, 16)\lRIGHT_TO_LEFT_EMBEDDING = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"RIGHT_TO_LEFT_OVERRIDE\", 18, 17)\lRIGHT_TO_LEFT_OVERRIDE = r1\lkotlin.text.CharDirectionality r1 = new kotlin.text.CharDirectionality(\"POP_DIRECTIONAL_FORMAT\", 19, 18)\lPOP_DIRECTIONAL_FORMAT = r1\lkotlin.text.CharDirectionality[] r0 = new kotlin.text.CharDirectionality[]\{r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1\}\l$VALUES = r0\lCompanion = new kotlin.text.CharDirectionality.Companion((kotlin.jvm.internal.DefaultConstructorMarker) null)\ldirectionalityMap$delegate = kotlin.LazyKt.lazy(kotlin.text.CharDirectionality$Companion$directionalityMap$2.INSTANCE)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0125|RETURN\l|return\l}"];
MethodNode[shape=record,label="{static void kotlin.text.CharDirectionality.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

