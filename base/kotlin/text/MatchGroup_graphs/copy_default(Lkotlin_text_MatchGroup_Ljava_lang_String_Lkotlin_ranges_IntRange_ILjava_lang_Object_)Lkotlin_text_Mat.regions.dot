digraph "CFG forkotlin.text.MatchGroup.copy$default(Lkotlin\/text\/MatchGroup;Ljava\/lang\/String;Lkotlin\/ranges\/IntRange;ILjava\/lang\/Object;)Lkotlin\/text\/MatchGroup;" {
subgraph cluster_Region_1719159256 {
label = "R(3:(1:2)|(1:5)|7)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_881590419 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r3 & 1) != 0) goto L_0x0004\l}"];
subgraph cluster_Region_1405137475 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|java.lang.String r1 = r0.value\l}"];
}
}
subgraph cluster_IfRegion_145027454 {
label = "IF [B:4:0x0008] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0008|if ((r3 & 2) != 0) goto L_0x000a\l}"];
subgraph cluster_Region_750149435 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000a|kotlin.ranges.IntRange r2 = r0.range\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\l|return r0.copy(r1, r2)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 java.lang.String) = (r1v0 java.lang.String), (r1v2 java.lang.String) binds: [B:1:0x0002, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000c|PHI: r2 \l  PHI: (r2v1 kotlin.ranges.IntRange) = (r2v0 kotlin.ranges.IntRange), (r2v2 kotlin.ranges.IntRange) binds: [B:4:0x0008, B:5:0x000a] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public static \/* bridge *\/ \/* synthetic *\/ kotlin.text.MatchGroup kotlin.text.MatchGroup.copy$default((r0v0 kotlin.text.MatchGroup A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 kotlin.ranges.IntRange A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_6 -> Node_7;
}

