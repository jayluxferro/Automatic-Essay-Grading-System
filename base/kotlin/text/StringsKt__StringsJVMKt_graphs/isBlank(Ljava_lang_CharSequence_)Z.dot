digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.isBlank(Ljava\/lang\/CharSequence;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r4.length() == 0) goto L_0x0040\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|java.lang.Iterable r0 = kotlin.text.StringsKt.getIndices(r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if ((r0 instanceof java.util.Collection) == false) goto L_0x0022\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017}"];
Node_5 [shape=record,label="{5\:\ 0x001e|if (((java.util.Collection) r0).isEmpty() == false) goto L_0x0022\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|r4 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|java.util.Iterator r0 = r0.iterator()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|LOOP_START\lLOOP:0: B:8:0x0026\-\>B:11:0x003b\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|if (r0.hasNext() == false) goto L_0x0020\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c}"];
Node_11 [shape=record,label="{11\:\ 0x003b|LOOP_END\lLOOP:0: B:8:0x0026\-\>B:11:0x003b\l|if (kotlin.text.CharsKt.isWhitespace(r4.charAt(((kotlin.collections.IntIterator) r0).nextInt())) != false) goto L_0x0026\l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|r4 = false\l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v2 boolean), (r4v3 boolean) binds: [B:12:0x003d, B:6:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L_?\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.StringsKt__StringsJVMKt.isBlank((r4v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_8;
Node_11 -> Node_16[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_15 -> Node_6;
Node_16 -> Node_12;
}

