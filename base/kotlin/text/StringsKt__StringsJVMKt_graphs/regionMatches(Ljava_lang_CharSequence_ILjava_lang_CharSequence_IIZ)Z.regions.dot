digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.regionMatches(Ljava\/lang\/CharSequence;ILjava\/lang\/CharSequence;IIZ)Z" {
subgraph cluster_Region_552908926 {
label = "R(2:0|(2:(1:7)|(2:4|5)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r9, \"other\")\l}"];
subgraph cluster_Region_1350862426 {
label = "R(2:(1:7)|(2:4|5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1432212691 {
label = "IF [B:1:0x000c, B:3:0x0010] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000c|if ((r7 instanceof java.lang.String) == false) goto L_0x0021\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|ADDED_TO_REGION\l|if ((r9 instanceof java.lang.String) == false) goto L_0x0021\l}"];
subgraph cluster_Region_809598241 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0025|RETURN\l|return kotlin.text.StringsKt.regionMatchesImpl(r7, r8, r9, r10, r11, r12)\l}"];
}
}
subgraph cluster_Region_905122847 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012}"];
Node_5 [shape=record,label="{5\:\ 0x0020|RETURN\l|return kotlin.text.StringsKt.regionMatches((java.lang.String) r7, r8, (java.lang.String) r9, r10, r11, r12)\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0021}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.StringsKt__StringsJVMKt.regionMatches((r7v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_2 -> Node_3;
Node_6 -> Node_7;
}

