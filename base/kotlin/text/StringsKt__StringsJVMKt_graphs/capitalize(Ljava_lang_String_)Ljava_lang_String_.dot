digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.capitalize(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r4.length() \<= 0) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|r0 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|PHI: r0 \l  PHI: (r0v4 boolean) = (r0v9 boolean), (r0v10 boolean) binds: [B:3:0x0012, B:2:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_?\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if (java.lang.Character.isLowerCase(r4.charAt(0)) == false) goto L_?\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\ljava.lang.String r1 = r4.substring(0, 1)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, \"(this as java.lang.Strinâ€¦ing(startIndex, endIndex)\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|if (r1 == null) goto L_0x004c\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|java.lang.String r1 = r1.toUpperCase()\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, \"(this as java.lang.String).toUpperCase()\")\lr0.append(r1)\ljava.lang.String r4 = r4.substring(1)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r4, \"(this as java.lang.String).substring(startIndex)\")\lr0.append(r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x004c}"];
Node_11 [shape=record,label="{11\:\ 0x0053|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type java.lang.String\")\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r4\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return r4\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return r0.toString()\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsJVMKt.capitalize((r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_14;
Node_10 -> Node_11;
}

