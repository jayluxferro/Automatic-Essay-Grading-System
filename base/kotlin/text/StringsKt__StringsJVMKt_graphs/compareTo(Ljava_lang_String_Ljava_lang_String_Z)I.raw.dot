digraph "CFG forkotlin.text.StringsKt__StringsJVMKt.compareTo(Ljava\/lang\/String;Ljava\/lang\/String;Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0007: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r1 I:int) = (r1 I:java.lang.String), (r2 I:java.lang.String) java.lang.String.compareToIgnoreCase(java.lang.String):int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: RETURN  (r1 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r1 I:int) = (r1 I:java.lang.String), (r2 I:java.lang.String) java.lang.String.compareTo(java.lang.String):int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.StringsKt__StringsJVMKt.compareTo((r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

