digraph "CFG forkotlin.text.Regex.\<init\>(Ljava\/lang\/String;Ljava\/util\/Set;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"pattern\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"options\")\ljava.util.regex.Pattern r2 = java.util.regex.Pattern.compile(r2, kotlin.text.Regex.Companion.access$ensureUnicodeCase(Companion, kotlin.text.RegexKt.access$toInt(r3)))\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r2, \"Pattern.compile(pattern,â€¦odeCase(options.toInt()))\")\lthis(r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void kotlin.text.Regex.\<init\>((r1v0 'this' kotlin.text.Regex A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.util.Set\<? extends kotlin.text.RegexOption\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/util\/Set\<, +, Lkotlin\/text\/RegexOption;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

