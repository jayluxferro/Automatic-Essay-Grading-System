digraph "CFG forkotlin.text.Regex.\<init\>(Ljava\/lang\/String;Lkotlin\/text\/RegexOption;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"pattern\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"option\")\ljava.util.regex.Pattern r2 = java.util.regex.Pattern.compile(r2, kotlin.text.Regex.Companion.access$ensureUnicodeCase(Companion, r3.getValue()))\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r2, \"Pattern.compile(pattern,â€¦nicodeCase(option.value))\")\lthis(r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void kotlin.text.Regex.\<init\>((r1v0 'this' kotlin.text.Regex A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.text.RegexOption A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

