digraph "CFG forkotlin.text.Regex.replace(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/String;" {
subgraph cluster_Region_758843567 {
label = "R(2:0|(2:(1:13)|(5:2|(3:(1:4)|5|(1:(1:14)))|(1:9)|10|11)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"input\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"transform\")\lint r0 = 0\lkotlin.text.MatchResult kotlin.text.MatchResult r1 = find$default(r5, r6, 0, 2, (java.lang.Object) null)\l}"];
subgraph cluster_Region_1838505293 {
label = "R(2:(1:13)|(5:2|(3:(1:4)|5|(1:(1:14)))|(1:9)|10|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1843993854 {
label = "IF [B:1:0x0011] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0011|if (r1 == null) goto L_0x005e\l}"];
subgraph cluster_Region_1400903754 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0062|RETURN\l|return r6.toString()\l}"];
}
}
subgraph cluster_Region_1216896636 {
label = "R(5:2|(3:(1:4)|5|(1:(1:14)))|(1:9)|10|11)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0013|int int r2 = r6.length()\ljava.lang.StringBuilder java.lang.StringBuilder r3 = new java.lang.StringBuilder(r2)\l}"];
subgraph cluster_LoopRegion_361549771 {
label = "LOOP:0: (3:(1:4)|5|(1:(1:14)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x004d|LOOP_END\lLOOP:0: B:3:0x001c\-\>B:7:0x004d\l|if (r1 != null) goto L_0x001c\l}"];
subgraph cluster_Region_1447520538 {
label = "R(3:(1:4)|5|(1:(1:14)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1705877615 {
label = "IF [B:3:0x001c] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001c|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v3 int) = (r0v2 int), (r0v9 int) binds: [B:2:0x0013, B:7:0x004d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 kotlin.text.MatchResult) = (r1v1 kotlin.text.MatchResult), (r1v3 kotlin.text.MatchResult) binds: [B:2:0x0013, B:7:0x004d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x001c\-\>B:7:0x004d\l|if (r1 == null) goto L_0x001e\l}"];
subgraph cluster_Region_72187566 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001e|kotlin.jvm.internal.Intrinsics.throwNpe()\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0021|r3.append(r6, r0, r1.getRange().getStart().intValue())\lr3.append((java.lang.CharSequence) r7.invoke(r1))\lint r0 = r1.getRange().getEndInclusive().intValue() + 1\lkotlin.text.MatchResult r1 = r1.next()\l}"];
subgraph cluster_Region_262561838 {
label = "R(1:(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1063712081 {
label = "IF [B:6:0x004b] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x004b|if (r0 \>= r2) goto L_0x004f\l}"];
subgraph cluster_Region_1209940898 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004f|SYNTHETIC\lEDGE_INSN: B:14:0x004f\-\>B:8:0x004f ?: BREAK  \l|break\l}"];
}
}
}
}
}
subgraph cluster_IfRegion_1971370547 {
label = "IF [B:8:0x004f] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x004f|EDGE_INSN: B:14:0x004f\-\>B:8:0x004f ?: BREAK  \l|if (r0 \< r2) goto L_0x0051\l}"];
subgraph cluster_Region_768604 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0051|r3.append(r6, r0, r2)\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0054|java.lang.String java.lang.String r6 = r3.toString()\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r6, \"sb.toString()\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x005d|RETURN\l|return r6\l}"];
}
}
}
Node_12 [shape=record,color=red,label="{12\:\ 0x005e}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x004f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final java.lang.String kotlin.text.Regex.replace((r5v0 'this' kotlin.text.Regex A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function1\<? super kotlin.text.MatchResult, ? extends java.lang.CharSequence\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, Lkotlin\/jvm\/functions\/Function1\<, \-, Lkotlin\/text\/MatchResult;, +, Ljava\/lang\/CharSequence;, \>;), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_7 -> Node_3;
Node_7 -> Node_15[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_14 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_15 -> Node_8;
}

