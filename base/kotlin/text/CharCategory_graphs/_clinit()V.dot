digraph "CFG forkotlin.text.CharCategory.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"UNASSIGNED\", 0, 0, \"Cn\")\lUNASSIGNED = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"UPPERCASE_LETTER\", 1, 1, \"Lu\")\lUPPERCASE_LETTER = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"LOWERCASE_LETTER\", 2, 2, \"Ll\")\lLOWERCASE_LETTER = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"TITLECASE_LETTER\", 3, 3, \"Lt\")\lTITLECASE_LETTER = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"MODIFIER_LETTER\", 4, 4, \"Lm\")\lMODIFIER_LETTER = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"OTHER_LETTER\", 5, 5, \"Lo\")\lOTHER_LETTER = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"NON_SPACING_MARK\", 6, 6, \"Mn\")\lNON_SPACING_MARK = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"ENCLOSING_MARK\", 7, 7, \"Me\")\lENCLOSING_MARK = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"COMBINING_SPACING_MARK\", 8, 8, \"Mc\")\lCOMBINING_SPACING_MARK = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"DECIMAL_DIGIT_NUMBER\", 9, 9, \"Nd\")\lDECIMAL_DIGIT_NUMBER = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"LETTER_NUMBER\", 10, 10, \"Nl\")\lLETTER_NUMBER = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"OTHER_NUMBER\", 11, 11, \"No\")\lOTHER_NUMBER = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"SPACE_SEPARATOR\", 12, 12, \"Zs\")\lSPACE_SEPARATOR = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"LINE_SEPARATOR\", 13, 13, \"Zl\")\lLINE_SEPARATOR = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"PARAGRAPH_SEPARATOR\", 14, 14, \"Zp\")\lPARAGRAPH_SEPARATOR = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"CONTROL\", 15, 15, \"Cc\")\lCONTROL = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"FORMAT\", 16, 16, \"Cf\")\lFORMAT = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"PRIVATE_USE\", 17, 18, \"Co\")\lPRIVATE_USE = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"SURROGATE\", 18, 19, \"Cs\")\lSURROGATE = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"DASH_PUNCTUATION\", 19, 20, \"Pd\")\lDASH_PUNCTUATION = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"START_PUNCTUATION\", 20, 21, \"Ps\")\lSTART_PUNCTUATION = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"END_PUNCTUATION\", 21, 22, \"Pe\")\lEND_PUNCTUATION = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"CONNECTOR_PUNCTUATION\", 22, 23, \"Pc\")\lCONNECTOR_PUNCTUATION = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"OTHER_PUNCTUATION\", 23, 24, \"Po\")\lOTHER_PUNCTUATION = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"MATH_SYMBOL\", 24, 25, \"Sm\")\lMATH_SYMBOL = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"CURRENCY_SYMBOL\", 25, 26, \"Sc\")\lCURRENCY_SYMBOL = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"MODIFIER_SYMBOL\", 26, 27, \"Sk\")\lMODIFIER_SYMBOL = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"OTHER_SYMBOL\", 27, 28, \"So\")\lOTHER_SYMBOL = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"INITIAL_QUOTE_PUNCTUATION\", 28, 29, \"Pi\")\lINITIAL_QUOTE_PUNCTUATION = r1\lkotlin.text.CharCategory r1 = new kotlin.text.CharCategory(\"FINAL_QUOTE_PUNCTUATION\", 29, 30, \"Pf\")\lFINAL_QUOTE_PUNCTUATION = r1\lkotlin.text.CharCategory[] r0 = new kotlin.text.CharCategory[]\{r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1, r1\}\l$VALUES = r0\lCompanion = new kotlin.text.CharCategory.Companion((kotlin.jvm.internal.DefaultConstructorMarker) null)\lcategoryMap$delegate = kotlin.LazyKt.lazy(kotlin.text.CharCategory$Companion$categoryMap$2.INSTANCE)\l}"];
Node_1 [shape=record,label="{1\:\ 0x020e|RETURN\l|return\l}"];
MethodNode[shape=record,label="{static void kotlin.text.CharCategory.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

