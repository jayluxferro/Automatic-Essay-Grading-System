digraph "CFG forkotlin.text.CharCategory.Companion.valueOf(I)Lkotlin\/text\/CharCategory;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0001: CHECK_CAST  (r0 I:kotlin.text.CharCategory$Companion) = (kotlin.text.CharCategory$Companion) (r0 I:?[OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:java.util.Map) = (r0 I:kotlin.text.CharCategory$Companion) kotlin.text.CharCategory.Companion.getCategoryMap():java.util.Map type: DIRECT \l0x0007: INVOKE  (r1 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x000b: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x000f: CHECK_CAST  (r0 I:kotlin.text.CharCategory) = (kotlin.text.CharCategory) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: RETURN  (r0 I:kotlin.text.CharCategory) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0016: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0018: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001b: CONST_STR  (r2 I:java.lang.String) =  \"Category #\" \l0x001d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0020: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0023: CONST_STR  (r4 I:java.lang.String) =  \" is not defined.\" \l0x0025: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0028: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002c: INVOKE  \l  (r0 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l0x002f: CHECK_CAST  (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final kotlin.text.CharCategory kotlin.text.CharCategory.Companion.valueOf((r3 'this' I:kotlin.text.CharCategory$Companion A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

