digraph "CFG forkotlin.text.StringsKt___StringsKt.partition(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Lkotlin\/Pair;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"predicate\")\ljava.lang.StringBuilder r0 = new java.lang.StringBuilder()\ljava.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:7:0x0036] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0015\-\>B:7:0x0036\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|if (r2 \>= r5.length()) goto L_0x0039\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|char r3 = r5.charAt(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|if (r6.invoke(java.lang.Character.valueOf(r3)).booleanValue() == false) goto L_0x0033\l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|r0.append(r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|r1.append(r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|LOOP_END\lLOOP:0: B:1:0x0015\-\>B:7:0x0036\l|int r2 = r2 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039}"];
Node_9 [shape=record,label="{9\:\ 0x003e|RETURN\l|return new kotlin.Pair\<\>(r0, r1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final kotlin.Pair\<java.lang.CharSequence, java.lang.CharSequence\> kotlin.text.StringsKt___StringsKt.partition((r5v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Character;, Ljava\/lang\/Boolean;, \>;), Lkotlin\/Pair\<, Ljava\/lang\/CharSequence;, Ljava\/lang\/CharSequence;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_12;
Node_6 -> Node_11;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_10 -> Node_8;
Node_11 -> Node_7;
Node_12 -> Node_7;
}

