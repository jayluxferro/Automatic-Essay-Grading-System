digraph "CFG forkotlin.text.StringsKt___StringsKt.reduce(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function2;)C" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"operation\")\lr2 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r4.length() != 0) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|r0 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|PHI: r0 \l  PHI: (r0v3 boolean) = (r0v11 boolean), (r0v12 boolean) binds: [B:3:0x0014, B:2:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != false) goto L_0x003d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|char r0 = r4.charAt(0)\lint r1 = kotlin.text.StringsKt.getLastIndex(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|if (1 \> r1) goto L_0x003c\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v6 char) = (r0v4 char), (r0v10 char) binds: [B:6:0x001f, B:9:0x0039] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:6:0x001f, B:9:0x0039] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x0021\-\>B:9:0x0039\l|char r0 = r5.invoke(java.lang.Character.valueOf(r0), java.lang.Character.valueOf(r4.charAt(r2))).charValue()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|if (r2 == r1) goto L_0x003c\l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|LOOP_END\lLOOP:0: B:7:0x0021\-\>B:9:0x0039\l|int r2 = r2 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|RETURN\lPHI: r0 \l  PHI: (r0v5 char) = (r0v4 char), (r0v10 char) binds: [B:6:0x001f, B:13:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|return r0\l}"];
Node_11 [shape=record,label="{11\:\ 0x003d}"];
Node_12 [shape=record,label="{12\:\ 0x0046|throw new java.lang.UnsupportedOperationException(\"Empty char sequence can't be reduced.\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final char kotlin.text.StringsKt___StringsKt.reduce((r4v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function2\<? super java.lang.Character, ? super java.lang.Character, java.lang.Character\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Character;, \-, Ljava\/lang\/Character;, Ljava\/lang\/Character;, \>;)C]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_7;
Node_11 -> Node_12;
Node_13 -> Node_10;
}

