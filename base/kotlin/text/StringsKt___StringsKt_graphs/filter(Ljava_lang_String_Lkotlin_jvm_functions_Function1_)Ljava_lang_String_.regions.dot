digraph "CFG forkotlin.text.StringsKt___StringsKt.filter(Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/String;" {
subgraph cluster_Region_1579175250 {
label = "R(4:0|(3:2|(1:4)(0)|5)|6|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"predicate\")\ljava.lang.CharSequence java.lang.CharSequence r5 = r5\ljava.lang.Appendable java.lang.Appendable r0 = new java.lang.StringBuilder()\lint int r1 = r5.length()\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_20213391 {
label = "LOOP:0: (3:2|(1:4)(0)|5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0018|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:5:0x0031] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0018\-\>B:5:0x0031\l|if (r2 \< r1) goto L_0x001a\l}"];
subgraph cluster_Region_1794142813 {
label = "R(3:2|(1:4)(0)|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x001a|char char r3 = r5.charAt(r2)\l}"];
subgraph cluster_IfRegion_1562568998 {
label = "IF [B:3:0x002c] THEN: R(1:4) ELSE: R(0)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x002c|if (r6.invoke(java.lang.Character.valueOf(r3)).booleanValue() == true) goto L_0x002e\l}"];
subgraph cluster_Region_391973624 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x002e|r0.append(r3)\l}"];
}
subgraph cluster_Region_2088113868 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_5 [shape=record,label="{5\:\ 0x0031|LOOP_END\lLOOP:0: B:1:0x0018\-\>B:5:0x0031\l|r2++\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0034|java.lang.String java.lang.String r5 = ((java.lang.StringBuilder) r0).toString()\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r5, \"filterTo(StringBuilder(), predicate).toString()\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x003f|RETURN\l|return r5\l}"];
}
Node_8 [shape=record,color=red,label="{8\:\ 0x0034|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0031|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0031|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt___StringsKt.filter((r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Character;, Ljava\/lang\/Boolean;, \>;), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_10[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_8 -> Node_6;
Node_9 -> Node_5;
Node_10 -> Node_5;
}

