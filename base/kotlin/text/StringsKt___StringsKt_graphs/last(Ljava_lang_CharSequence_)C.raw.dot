digraph "CFG forkotlin.text.StringsKt___StringsKt.last(Ljava\/lang\/CharSequence;)C" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r0 I:int) = (r1 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r0 I:int) = (r1 I:java.lang.CharSequence) kotlin.text.StringsKt.getLastIndex(java.lang.CharSequence):int type: STATIC \l0x0014: INVOKE  (r1 I:char) = (r1 I:java.lang.CharSequence), (r0 I:int) java.lang.CharSequence.charAt(int):char type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: RETURN  (r1 I:char) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: NEW_INSTANCE  (r1 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException \l0x001b: CONST_STR  (r0 I:java.lang.String) =  \"Char sequence is empty.\" \l0x001d: INVOKE  \l  (r1 I:java.util.NoSuchElementException)\l  (r0 I:java.lang.String)\l java.util.NoSuchElementException.\<init\>(java.lang.String):void type: DIRECT \l0x0020: CHECK_CAST  (r1 I:java.lang.Throwable) = (java.lang.Throwable) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final char kotlin.text.StringsKt___StringsKt.last((r1 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

