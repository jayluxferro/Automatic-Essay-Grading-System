digraph "CFG forkotlin.text.StringsKt___StringsKt.asSequence(Ljava\/lang\/CharSequence;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if ((r1 instanceof java.lang.String) == false) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r1.length() != 0) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|r0 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|r0 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|PHI: r0 \l  PHI: (r0v5 boolean) = (r0v6 boolean), (r0v7 boolean) binds: [B:5:0x0011, B:4:0x000f] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0019\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014}"];
Node_8 [shape=record,label="{8\:\ 0x0018|RETURN\l|return kotlin.sequences.SequencesKt.emptySequence()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019}"];
Node_10 [shape=record,label="{10\:\ 0x0020|RETURN\l|return new kotlin.text.StringsKt___StringsKt$asSequence$$inlined$Sequence$1(r1)\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.lang.Character\> kotlin.text.StringsKt___StringsKt.asSequence((r1v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, ), Lkotlin\/sequences\/Sequence\<, Ljava\/lang\/Character;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

