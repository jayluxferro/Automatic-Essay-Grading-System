digraph "CFG forkotlin.text.StringsKt___StringsKt.filterIndexed(Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function2;)Ljava\/lang\/String;" {
subgraph cluster_Region_1855178694 {
label = "R(4:0|(3:3|(1:5)(0)|6)|7|8)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"predicate\")\ljava.lang.CharSequence java.lang.CharSequence r6 = r6\ljava.lang.Appendable java.lang.Appendable r0 = new java.lang.StringBuilder()\lint r1 = 0\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1788989252 {
label = "LOOP:0: (3:3|(1:5)(0)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0019|if (r1 \< r6.length()) goto L_0x001b\l}"];
subgraph cluster_Region_680324047 {
label = "R(3:3|(1:5)(0)|6)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001b|char char r3 = r6.charAt(r1)\lint int r4 = r2 + 1\l}"];
subgraph cluster_IfRegion_1289630789 {
label = "IF [B:4:0x0033] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0033|if (r7.invoke(java.lang.Integer.valueOf(r2), java.lang.Character.valueOf(r3)).booleanValue() == true) goto L_0x0035\l}"];
subgraph cluster_Region_1015245284 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0035|r0.append(r3)\l}"];
}
subgraph cluster_Region_383561699 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_6 [shape=record,label="{6\:\ 0x0038|LOOP_END\lLOOP:0: B:1:0x0015\-\>B:6:0x0038\l|r1++\lr2 = r4\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x003c|java.lang.String java.lang.String r6 = ((java.lang.StringBuilder) r0).toString()\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r6, \"filterIndexedTo(StringBuâ€¦(), predicate).toString()\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x0047|RETURN\l|return r6\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0015|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:6:0x0038] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v6 int) binds: [B:0:0x0000, B:6:0x0038] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0015\-\>B:6:0x0038\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x003c|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0038|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0038|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt___StringsKt.filterIndexed((r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super java.lang.Character, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Integer;, \-, Ljava\/lang\/Character;, Ljava\/lang\/Boolean;, \>;), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_11[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_1;
Node_7 -> Node_8;
Node_1 -> Node_2;
Node_9 -> Node_7;
Node_10 -> Node_6;
Node_11 -> Node_6;
}

