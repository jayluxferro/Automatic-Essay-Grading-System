digraph "CFG forkotlin.text.StringsKt___StringsKt.toList(Ljava\/lang\/CharSequence;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r0 I:int) = (r1 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1] t:[0x001f, 0x0011] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r1 I:java.util.List) = (r1 I:java.lang.CharSequence) kotlin.text.StringsKt.toMutableList(java.lang.CharSequence):java.util.List type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: INVOKE  (r1 I:char) = (r1 I:java.lang.CharSequence), (r0 I:int) java.lang.CharSequence.charAt(int):char type: INTERFACE \l0x0016: INVOKE  (r1 I:java.lang.Character) = (r1 I:char) java.lang.Character.valueOf(char):java.lang.Character type: STATIC \l0x001a: INVOKE  (r1 I:java.util.List) = (r1 I:java.lang.Object) kotlin.collections.CollectionsKt.listOf(java.lang.Object):java.util.List type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: INVOKE  (r1 I:java.util.List) =  kotlin.collections.CollectionsKt.emptyList():java.util.List type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: RETURN  (r1 I:java.util.List\<java.lang.Character\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.lang.Character\> kotlin.text.StringsKt___StringsKt.toList((r1 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, ), Ljava\/util\/List\<, Ljava\/lang\/Character;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_4;
Node_2 -> Node_5;
Node_3 -> Node_5;
Node_4 -> Node_5;
}

