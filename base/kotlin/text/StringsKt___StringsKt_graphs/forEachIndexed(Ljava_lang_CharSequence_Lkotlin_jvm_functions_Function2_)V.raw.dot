digraph "CFG forkotlin.text.StringsKt___StringsKt.forEachIndexed(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function2;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"action\" \l0x0007: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: INVOKE  (r2 I:int) = (r4 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:4:0x0026 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r2 I:char) = (r4 I:java.lang.CharSequence), (r0 I:int) java.lang.CharSequence.charAt(int):char type: INTERFACE \l0x0016: INVOKE  (r3 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x001a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x001c: INVOKE  (r2 I:java.lang.Character) = (r2 I:char) java.lang.Character.valueOf(char):java.lang.Character type: STATIC \l0x0020: INVOKE  \l  (r5 I:kotlin.jvm.functions.Function2)\l  (r3 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0023: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: RETURN   \l}"];
MethodNode[shape=record,label="{public static final void kotlin.text.StringsKt___StringsKt.forEachIndexed((r4 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super java.lang.Character, kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Integer;, \-, Ljava\/lang\/Character;, Lkotlin\/Unit;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

