digraph "CFG forkotlin.text.StringsKt___StringsKt.drop(Ljava\/lang\/CharSequence;I)Ljava\/lang\/CharSequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r2 \< 0) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|r0 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v5 boolean), (r0v6 boolean) binds: [B:3:0x0009, B:2:0x0007] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x001d\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c}"];
Node_6 [shape=record,label="{6\:\ 0x001c|RETURN\l|return r1.subSequence(kotlin.ranges.RangesKt.coerceAtMost(r2, r1.length()), r1.length())\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Requested character count \")\lr1.append(r2)\lr1.append(\" is less than zero.\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|throw new java.lang.IllegalArgumentException(r1.toString().toString())\l}"];
MethodNode[shape=record,label="{public static final java.lang.CharSequence kotlin.text.StringsKt___StringsKt.drop((r1v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

