digraph "CFG forkotlin.text.StringsKt___StringsKt.reduceRight(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function2;)C" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"operation\")\lint r0 = kotlin.text.StringsKt.getLastIndex(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r0 \< 0) goto L_0x0033\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|int r1 = r0 + \-1\lchar r0 = r3.charAt(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v4 char) = (r0v3 char), (r0v8 char) binds: [B:2:0x0010, B:4:0x0018] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v4 int) binds: [B:2:0x0010, B:4:0x0018] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0016\-\>B:4:0x0018\l|if (r1 \< 0) goto L_0x0032\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|LOOP_END\lLOOP:0: B:3:0x0016\-\>B:4:0x0018\l|int r2 = r1 + \-1\lchar r0 = r4.invoke(java.lang.Character.valueOf(r3.charAt(r1)), java.lang.Character.valueOf(r0)).charValue()\lr1 = r2\l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|RETURN\l|return r0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0033}"];
Node_7 [shape=record,label="{7\:\ 0x003c|throw new java.lang.UnsupportedOperationException(\"Empty char sequence can't be reduced.\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final char kotlin.text.StringsKt___StringsKt.reduceRight((r3v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function2\<? super java.lang.Character, ? super java.lang.Character, java.lang.Character\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Character;, \-, Ljava\/lang\/Character;, Ljava\/lang\/Character;, \>;)C]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_3;
Node_6 -> Node_7;
Node_8 -> Node_5;
}

