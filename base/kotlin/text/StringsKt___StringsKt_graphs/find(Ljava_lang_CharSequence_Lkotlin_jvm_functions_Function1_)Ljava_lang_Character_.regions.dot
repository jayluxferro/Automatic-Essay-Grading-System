digraph "CFG forkotlin.text.StringsKt___StringsKt.find(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Character;" {
subgraph cluster_Region_370875293 {
label = "R(3:0|(2:3|(2:(1:10)|(1:6)))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
subgraph cluster_LoopRegion_730703395 {
label = "LOOP:0: (2:3|(2:(1:10)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r0 \< r3.length()) goto L_0x0007\l}"];
subgraph cluster_Region_1356186637 {
label = "R(2:3|(2:(1:10)|(1:6)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|char char r1 = r3.charAt(r0)\l}"];
subgraph cluster_Region_464316852 {
label = "R(2:(1:10)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_517798521 {
label = "IF [B:4:0x0019] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|if (r4.invoke(java.lang.Character.valueOf(r1)).booleanValue() == true) goto L_0x001b\l}"];
subgraph cluster_Region_1487334207 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Character.valueOf(r1)\l}"];
}
}
subgraph cluster_Region_1274080525 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0020|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:6:0x0020\l|r0++\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0023|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:6:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:6:0x0020\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0023|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static final java.lang.Character kotlin.text.StringsKt___StringsKt.find((r3v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Character;, Ljava\/lang\/Boolean;, \>;), Ljava\/lang\/Character;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_9;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_5 -> Node_10;
Node_8 -> Node_7;
Node_9 -> Node_5;
}

