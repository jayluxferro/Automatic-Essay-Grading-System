digraph "CFG forkotlin.text.StringsKt___StringsKt.min(Ljava\/lang\/CharSequence;)Ljava\/lang\/Character;" {
subgraph cluster_Region_875091000 {
label = "R(2:0|(2:(1:5)|(3:6|(1:(3:8|(1:10)|(2:(1:15)|(1:12))))(0)|14)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lint r2 = 1\l}"];
subgraph cluster_Region_1923376235 {
label = "R(2:(1:5)|(3:6|(1:(3:8|(1:10)|(2:(1:15)|(1:12))))(0)|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1705085601 {
label = "IF [B:4:0x0010] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|PHI: r0 \l  PHI: (r0v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r4.length() == 0) == true) goto L_0x0012\l}"];
subgraph cluster_Region_926964933 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_2105681885 {
label = "R(3:6|(1:(3:8|(1:10)|(2:(1:15)|(1:12))))(0)|14)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0014|char char r0 = r4.charAt(0)\lint int r1 = kotlin.text.StringsKt.getLastIndex(r4)\l}"];
subgraph cluster_IfRegion_1989944358 {
label = "IF [B:7:0x001c] THEN: R(1:(3:8|(1:10)|(2:(1:15)|(1:12)))) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001c|if (1 \<= r1) goto L_0x001e\l}"];
subgraph cluster_Region_1605811190 {
label = "R(1:(3:8|(1:10)|(2:(1:15)|(1:12))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_249563991 {
label = "LOOP:0: (3:8|(1:10)|(2:(1:15)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_240127322 {
label = "R(3:8|(1:10)|(2:(1:15)|(1:12)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v5 char) = (r0v3 char), (r0v6 char) binds: [B:7:0x001c, B:12:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:7:0x001c, B:12:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x001e\-\>B:12:0x0027\l|char char r3 = r4.charAt(r2)\l}"];
subgraph cluster_IfRegion_889182444 {
label = "IF [B:9:0x0022] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0022|if (r0 \> r3) goto L_0x0024\l}"];
subgraph cluster_Region_986392626 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0024|r0 = r3\l}"];
}
}
subgraph cluster_Region_1744661672 {
label = "R(2:(1:15)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_259635998 {
label = "IF [B:11:0x0025] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0025|PHI: r0 \l  PHI: (r0v6 char) = (r0v5 char), (r0v7 char) binds: [B:9:0x0022, B:10:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == r1) goto L_0x002a\l}"];
subgraph cluster_Region_1391375078 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002a|SYNTHETIC\lEDGE_INSN: B:15:0x002a\-\>B:13:0x002a ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_129500881 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0027|LOOP_END\lLOOP:0: B:8:0x001e\-\>B:12:0x0027\l|r2++\l}"];
}
}
}
}
}
subgraph cluster_Region_946719302 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_14 [shape=record,label="{14\:\ 0x002e|RETURN\l|return java.lang.Character.valueOf(r0)\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000b}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000d}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000f}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002a|EDGE_INSN: B:15:0x002a\-\>B:13:0x002a ?: BREAK  \lPHI: r0 \l  PHI: (r0v4 char) = (r0v3 char), (r0v6 char) binds: [B:7:0x001c, B:15:0x002a] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Character kotlin.text.StringsKt___StringsKt.min((r4v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_15 -> Node_13;
Node_12 -> Node_8;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_13 -> Node_14;
}

