digraph "CFG forkotlin.text.StringsKt___StringsKt.takeWhile(Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/String;" {
subgraph cluster_Region_807385081 {
label = "R(3:0|(1:(2:(2:4|5)|(1:6)))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"predicate\")\lint int r0 = r4.length()\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_314778364 {
label = "LOOP:0: (1:(2:(2:4|5)|(1:6)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0010|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:6:0x0030] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0010\-\>B:6:0x0030\l|if (r2 \< r0) goto L_0x0012\l}"];
subgraph cluster_Region_1858172084 {
label = "R(1:(2:(2:4|5)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1392434758 {
label = "R(2:(2:4|5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1183750363 {
label = "IF [B:3:0x0024] THEN: R(2:4|5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0024|if (r5.invoke(java.lang.Character.valueOf(r4.charAt(r2))).booleanValue() == false) goto L_0x0026\l}"];
subgraph cluster_Region_191057804 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0026|java.lang.String java.lang.String r4 = r4.substring(0, r2)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r4, \"(this as java.lang.Strinâ€¦ing(startIndex, endIndex)\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|RETURN\l|return r4\l}"];
}
}
subgraph cluster_Region_441537941 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0030|LOOP_END\lLOOP:0: B:1:0x0010\-\>B:6:0x0030\l|r2++\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0033|RETURN\l|return r4\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0012}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0033|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0026|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt___StringsKt.takeWhile((r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Character;, Ljava\/lang\/Boolean;, \>;), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_3 -> Node_6[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_6 -> Node_1;
Node_2 -> Node_3;
Node_8 -> Node_7;
Node_9 -> Node_4;
}

