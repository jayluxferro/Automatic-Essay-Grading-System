digraph "CFG forkotlin.text.StringsKt___StringsKt.map(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
subgraph cluster_Region_770738676 {
label = "R(3:0|(1:3)|5)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"transform\")\ljava.util.Collection java.util.Collection r0 = new java.util.ArrayList(r3.length())\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_174911292 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x001a|if (r1 \< r3.length()) goto L_0x001c\l}"];
subgraph cluster_Region_2110621447 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001c|LOOP_END\lLOOP:0: B:1:0x0016\-\>B:3:0x001c\l|r0.add(r4.invoke(java.lang.Character.valueOf(r3.charAt(r1))))\lr1++\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0030|RETURN\l|return (java.util.List) r0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0016|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:0:0x0000, B:3:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0016\-\>B:3:0x001c\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x002e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.text.StringsKt___StringsKt.map((r3v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<R:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/CharSequence;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Character;, +TR;\>;), Ljava\/util\/List\<, TR;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_6[style=dashed];
Node_3 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

