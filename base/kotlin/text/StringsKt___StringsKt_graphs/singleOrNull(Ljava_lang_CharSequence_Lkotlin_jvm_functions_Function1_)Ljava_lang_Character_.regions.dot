digraph "CFG forkotlin.text.StringsKt___StringsKt.singleOrNull(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Character;" {
subgraph cluster_Region_627737413 {
label = "R(3:0|(3:3|(1:(2:(1:6)|(1:7)))(0)|8)|(2:(1:10)|(1:11)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"predicate\")\lint r2 = 0\ljava.lang.Character r3 = null\lboolean r1 = false\l}"];
subgraph cluster_LoopRegion_1151252482 {
label = "LOOP:0: (3:3|(1:(2:(1:6)|(1:7)))(0)|8)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0015|if (r2 \< r6.length()) goto L_0x0017\l}"];
subgraph cluster_Region_781648542 {
label = "R(3:3|(1:(2:(1:6)|(1:7)))(0)|8)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|char char r4 = r6.charAt(r2)\l}"];
subgraph cluster_IfRegion_1067859202 {
label = "IF [B:4:0x0029] THEN: R(1:(2:(1:6)|(1:7))) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0029|if (r7.invoke(java.lang.Character.valueOf(r4)).booleanValue() != false) goto L_0x002b\l}"];
subgraph cluster_Region_58426846 {
label = "R(1:(2:(1:6)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_824315533 {
label = "R(2:(1:6)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_883104632 {
label = "IF [B:5:0x002b] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002b|if (r1 == true) goto L_0x002d\l}"];
subgraph cluster_Region_355850438 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002d|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1951217692 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002e|r3 = java.lang.Character.valueOf(r4)\lr1 = true\l}"];
}
}
}
subgraph cluster_Region_1199829776 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_8 [shape=record,label="{8\:\ 0x0035|LOOP_END\lPHI: r1 r3 \l  PHI: (r1v4 boolean) = (r1v3 boolean), (r1v6 boolean) binds: [B:15:0x0035, B:14:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 java.lang.Character) = (r3v1 java.lang.Character), (r3v4 java.lang.Character) binds: [B:15:0x0035, B:14:0x0035] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:8:0x0035\l|r2++\l}"];
}
}
subgraph cluster_Region_411683659 {
label = "R(2:(1:10)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_573996160 {
label = "IF [B:9:0x0038] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0038|if (r1 == false) goto L_0x003a\l}"];
subgraph cluster_Region_964618417 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x003a|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_88927611 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003b|RETURN\l|return r3\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0011|LOOP_START\lPHI: r1 r2 r3 \l  PHI: (r1v3 boolean) = (r1v2 boolean), (r1v4 boolean) binds: [B:0:0x0000, B:8:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:8:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 java.lang.Character) = (r3v0 java.lang.Character), (r3v2 java.lang.Character) binds: [B:0:0x0000, B:8:0x0035] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:8:0x0035\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0038|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002d|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0035|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0035|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.Character kotlin.text.StringsKt___StringsKt.singleOrNull((r6v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Character;, Ljava\/lang\/Boolean;, \>;), Ljava\/lang\/Character;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_12[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_15[style=dashed];
Node_5 -> Node_7[style=dashed];
Node_5 -> Node_13;
Node_7 -> Node_14;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_1 -> Node_2;
Node_12 -> Node_9;
Node_13 -> Node_6;
Node_14 -> Node_8;
Node_15 -> Node_8;
}

