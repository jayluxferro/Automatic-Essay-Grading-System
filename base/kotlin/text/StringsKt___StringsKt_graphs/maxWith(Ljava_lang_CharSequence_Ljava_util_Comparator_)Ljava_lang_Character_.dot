digraph "CFG forkotlin.text.StringsKt___StringsKt.maxWith(Ljava\/lang\/CharSequence;Ljava\/util\/Comparator;)Ljava\/lang\/Character;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"comparator\")\lr2 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|if (r6.length() != 0) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|r0 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|PHI: r0 \l  PHI: (r0v3 boolean) = (r0v9 boolean), (r0v10 boolean) binds: [B:3:0x0014, B:2:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0019\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|RETURN\l|return null\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|char r0 = r6.charAt(0)\lint r1 = kotlin.text.StringsKt.getLastIndex(r6)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|if (1 \> r1) goto L_0x003b\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v6 char) = (r0v4 char), (r0v7 char) binds: [B:7:0x0021, B:12:0x0038] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:7:0x0021, B:12:0x0038] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0023\-\>B:12:0x0038\l|char r3 = r6.charAt(r2)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|if (r7.compare(java.lang.Character.valueOf(r0), java.lang.Character.valueOf(r3)) \>= 0) goto L_0x0036\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|r0 = r3\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|PHI: r0 \l  PHI: (r0v7 char) = (r0v6 char), (r0v8 char) binds: [B:9:0x0033, B:10:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == r1) goto L_0x003b\l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|LOOP_END\lLOOP:0: B:8:0x0023\-\>B:12:0x0038\l|int r2 = r2 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|PHI: r0 \l  PHI: (r0v5 char) = (r0v4 char), (r0v7 char) binds: [B:7:0x0021, B:15:0x003b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|RETURN\l|return java.lang.Character.valueOf(r0)\l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.Character kotlin.text.StringsKt___StringsKt.maxWith((r6v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.Comparator\<? super java.lang.Character\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, Ljava\/util\/Comparator\<, \-, Ljava\/lang\/Character;, \>;), Ljava\/lang\/Character;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_8;
Node_13 -> Node_14;
Node_15 -> Node_13;
}

