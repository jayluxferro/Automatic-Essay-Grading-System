digraph "CFG forkotlin.text.StringsKt___StringsKt.mapIndexed(Ljava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000c: INVOKE  (r1 I:int) = (r5 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l0x0010: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0013: CHECK_CAST  (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:?[OBJECT, ARRAY]) \l0x0015: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: INVOKE  (r3 I:int) = (r5 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|0x001b: IF  (r1 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:4:0x0035 \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: INVOKE  (r3 I:char) = (r5 I:java.lang.CharSequence), (r1 I:int) java.lang.CharSequence.charAt(int):char type: INTERFACE \l0x0021: INVOKE  (r4 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0025: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0027: INVOKE  (r3 I:java.lang.Character) = (r3 I:char) java.lang.Character.valueOf(char):java.lang.Character type: STATIC \l0x002b: INVOKE  (r3 I:java.lang.Object) = \l  (r6 I:kotlin.jvm.functions.Function2)\l  (r4 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x002f: INVOKE  (r0 I:java.util.Collection), (r3 I:java.lang.Object) java.util.Collection.add(java.lang.Object):boolean type: INTERFACE \l0x0032: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0035|0x0035: CHECK_CAST  (r0 I:java.util.List) = (java.util.List) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|0x0037: RETURN  (r0 I:java.util.List\<R\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.text.StringsKt___StringsKt.mapIndexed((r5 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super java.lang.Character, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<R:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/CharSequence;, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Integer;, \-, Ljava\/lang\/Character;, +TR;\>;), Ljava\/util\/List\<, TR;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

