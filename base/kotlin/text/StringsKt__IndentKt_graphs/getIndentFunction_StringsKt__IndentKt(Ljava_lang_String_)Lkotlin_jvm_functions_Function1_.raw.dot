digraph "CFG forkotlin.text.StringsKt__IndentKt.getIndentFunction$StringsKt__IndentKt(Ljava\/lang\/String;)Lkotlin\/jvm\/functions\/Function1;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0001: CHECK_CAST  (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:?[OBJECT, ARRAY]) \l0x0003: INVOKE  (r0 I:int) = (r0 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: SGET  (r1 I:kotlin.text.StringsKt__IndentKt$getIndentFunction$1) =  kotlin.text.StringsKt__IndentKt$getIndentFunction$1.INSTANCE kotlin.text.StringsKt__IndentKt$getIndentFunction$1 \l0x0010: CHECK_CAST  (r1 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: NEW_INSTANCE  (r0 I:kotlin.text.StringsKt__IndentKt$getIndentFunction$2) =  kotlin.text.StringsKt__IndentKt$getIndentFunction$2 \l0x0015: INVOKE  \l  (r0 I:kotlin.text.StringsKt__IndentKt$getIndentFunction$2)\l  (r1 I:java.lang.String)\l kotlin.text.StringsKt__IndentKt$getIndentFunction$2.\<init\>(java.lang.String):void type: DIRECT \l0x0018: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0019: CHECK_CAST  (r1 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: RETURN  \l  (r1 I:kotlin.jvm.functions.Function1\<java.lang.String, java.lang.String\>)\l \l}"];
MethodNode[shape=record,label="{private static final kotlin.jvm.functions.Function1\<java.lang.String, java.lang.String\> kotlin.text.StringsKt__IndentKt.getIndentFunction$StringsKt__IndentKt((r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, ), Lkotlin\/jvm\/functions\/Function1\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

