digraph "CFG forkotlin.text.StringsKt__IndentKt.prependIndent(Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r10 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"indent\" \l0x0007: INVOKE  (r11 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CHECK_CAST  (r10 I:java.lang.CharSequence) = (java.lang.CharSequence) (r10 I:?[OBJECT, ARRAY]) \l0x000c: INVOKE  (r10 I:kotlin.sequences.Sequence) = (r10 I:java.lang.CharSequence) kotlin.text.StringsKt.lineSequence(java.lang.CharSequence):kotlin.sequences.Sequence type: STATIC \l0x0010: NEW_INSTANCE  (r0 I:kotlin.text.StringsKt__IndentKt$prependIndent$1) =  kotlin.text.StringsKt__IndentKt$prependIndent$1 \l0x0012: INVOKE  \l  (r0 I:kotlin.text.StringsKt__IndentKt$prependIndent$1)\l  (r11 I:java.lang.String)\l kotlin.text.StringsKt__IndentKt$prependIndent$1.\<init\>(java.lang.String):void type: DIRECT \l0x0015: CHECK_CAST  (r0 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r0 I:?[OBJECT, ARRAY]) \l0x0017: INVOKE  (r1 I:kotlin.sequences.Sequence) = \l  (r10 I:kotlin.sequences.Sequence)\l  (r0 I:kotlin.jvm.functions.Function1)\l kotlin.sequences.SequencesKt.map(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1):kotlin.sequences.Sequence type: STATIC \l0x001b: CONST_STR  (r10 I:java.lang.String) =  \"\l\" \l0x001d: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x001e: CHECK_CAST  (r2 I:java.lang.CharSequence) = (java.lang.CharSequence) (r2 I:?[OBJECT, ARRAY]) \l0x0020: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0021: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0022: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0024: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0025: CONST  (r8 I:?[int, float, short, byte, char]) = (62 ?[int, float, short, byte, char]) \l0x0027: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0028: INVOKE  (r10 I:java.lang.String) = \l  (r1 I:kotlin.sequences.Sequence)\l  (r2 I:java.lang.CharSequence)\l  (r3 I:java.lang.CharSequence)\l  (r4 I:java.lang.CharSequence)\l  (r5 I:int)\l  (r6 I:java.lang.CharSequence)\l  (r7 I:kotlin.jvm.functions.Function1)\l  (r8 I:int)\l  (r9 I:java.lang.Object)\l kotlin.sequences.SequencesKt.joinToString$default(kotlin.sequences.Sequence, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object):java.lang.String type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x002c|0x002c: RETURN  (r10 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__IndentKt.prependIndent((r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

