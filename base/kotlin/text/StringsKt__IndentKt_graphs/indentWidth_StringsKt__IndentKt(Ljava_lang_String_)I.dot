digraph "CFG forkotlin.text.StringsKt__IndentKt.indentWidth$StringsKt__IndentKt(Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.CharSequence r0 = r5\lint r1 = r0.length()\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v5 int) binds: [B:0:0x0000, B:5:0x0018] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:5:0x0018\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|if (r2 \>= r1) goto L_0x001b\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b}"];
Node_4 [shape=record,label="{4\:\ 0x0015|if ((kotlin.text.CharsKt.isWhitespace(r0.charAt(r2)) ^ true) == false) goto L_0x0018\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:5:0x0018\l|int r2 = r2 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|r2 = \-1\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|PHI: r2 \l  PHI: (r2v3 int) = (r2v2 int), (r2v1 int) binds: [B:6:0x001b, B:9:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != \-1) goto L_?\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e}"];
Node_9 [shape=record,label="{9\:\ 0x001c|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r5.length()\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
MethodNode[shape=record,label="{private static final int kotlin.text.StringsKt__IndentKt.indentWidth$StringsKt__IndentKt((r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_11;
Node_9 -> Node_7;
Node_10 -> Node_6;
}

