digraph "CFG forkotlin.text.StringsKt__IndentKt.replaceIndent(Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r17\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r0, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r18, \"newIndent\")\ljava.util.List r1 = kotlin.text.StringsKt.lines(r0)\ljava.lang.Iterable r3 = r1\ljava.util.Collection r4 = new java.util.ArrayList()\ljava.util.Iterator r5 = r3.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0023|LOOP_START\lLOOP:0: B:1:0x0023\-\>B:33:0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x0027|if (r5.hasNext() == false) goto L_0x003e\l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|java.lang.Object r6 = r5.next()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0038|if ((kotlin.text.StringsKt.isBlank((java.lang.String) r6) ^ true) == false) goto L_0x0023\l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|r4.add(r6)\l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|java.lang.Iterable r4 = (java.util.List) r4\ljava.util.Collection r5 = new java.util.ArrayList(kotlin.collections.CollectionsKt.collectionSizeOrDefault(r4, 10))\ljava.util.Iterator r4 = r4.iterator()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0053|LOOP_START\lLOOP:1: B:7:0x0053\-\>B:9:0x0059\l}"];
Node_8 [shape=record,label="{8\:\ 0x0057|if (r4.hasNext() == false) goto L_0x006b\l}"];
Node_9 [shape=record,label="{9\:\ 0x0059|LOOP_END\lLOOP:1: B:7:0x0053\-\>B:9:0x0059\l|r5.add(java.lang.Integer.valueOf(indentWidth$StringsKt__IndentKt((java.lang.String) r4.next())))\l}"];
Node_10 [shape=record,label="{10\:\ 0x006b|java.lang.Integer r4 = (java.lang.Integer) kotlin.collections.CollectionsKt.min((java.util.List) r5)\lr5 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0076|if (r4 == null) goto L_0x007d\l}"];
Node_12 [shape=record,label="{12\:\ 0x0078|int r4 = r4.intValue()\l}"];
Node_13 [shape=record,label="{13\:\ 0x007d|r4 = 0\l}"];
Node_14 [shape=record,label="{14\:\ 0x007e|PHI: r4 \l  PHI: (r4v7 int) = (r4v8 int), (r4v9 int) binds: [B:13:0x007d, B:12:0x0078] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r17.length() + (r18.length() * r1.size())\lkotlin.jvm.functions.Function1 r2 = getIndentFunction$StringsKt__IndentKt(r18)\lint r1 = kotlin.collections.CollectionsKt.getLastIndex(r1)\ljava.util.Collection r6 = new java.util.ArrayList()\ljava.util.Iterator r3 = r3.iterator()\l}"];
Node_15 [shape=record,label="{15\:\ 0x00a0|LOOP_START\lPHI: r5 \l  PHI: (r5v6 int) = (r5v5 int), (r5v7 int) binds: [B:14:0x007e, B:30:0x00d1] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:15:0x00a0\-\>B:30:0x00d1\l}"];
Node_16 [shape=record,label="{16\:\ 0x00a4|if (r3.hasNext() == false) goto L_0x00d3\l}"];
Node_17 [shape=record,label="{17\:\ 0x00a6|int r8 = r5 + 1\ljava.lang.String r7 = (java.lang.String) r3.next()\l}"];
Node_18 [shape=record,label="{18\:\ 0x00ae|if (r5 == 0) goto L_0x00b2\l}"];
Node_19 [shape=record,label="{19\:\ 0x00b0|if (r5 != r1) goto L_0x00bd\l}"];
Node_20 [shape=record,label="{20\:\ 0x00b2}"];
Node_21 [shape=record,label="{21\:\ 0x00b9|if (kotlin.text.StringsKt.isBlank(r7) == false) goto L_0x00bd\l}"];
Node_22 [shape=record,label="{22\:\ 0x00bb|r7 = null\l}"];
Node_23 [shape=record,label="{23\:\ 0x00bd|java.lang.String r5 = kotlin.text.StringsKt.drop(r7, r4)\l}"];
Node_24 [shape=record,label="{24\:\ 0x00c1|if (r5 == null) goto L_0x00cc\l}"];
Node_25 [shape=record,label="{25\:\ 0x00c3|java.lang.String r5 = r2.invoke(r5)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00c9|if (r5 == null) goto L_0x00cc\l}"];
Node_27 [shape=record,label="{27\:\ 0x00cb|r7 = r5\l}"];
Node_28 [shape=record,label="{28\:\ 0x00cc|PHI: r7 \l  PHI: (r7v6 java.lang.String) = (r7v5 java.lang.String), (r7v5 java.lang.String), (r7v7 java.lang.String), (r7v8 java.lang.String) binds: [B:24:0x00c1, B:26:0x00c9, B:27:0x00cb, B:22:0x00bb] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == null) goto L_0x00d1\l}"];
Node_29 [shape=record,label="{29\:\ 0x00ce|r6.add(r7)\l}"];
Node_30 [shape=record,label="{30\:\ 0x00d1|LOOP_END\lLOOP:2: B:15:0x00a0\-\>B:30:0x00d1\l|r5 = r8\l}"];
Node_31 [shape=record,label="{31\:\ 0x00d3|java.lang.String r0 = ((java.lang.StringBuilder) kotlin.collections.CollectionsKt.joinTo$default((java.util.List) r6, new java.lang.StringBuilder(r0), \"n\", (java.lang.CharSequence) null, (java.lang.CharSequence) null, 0, (java.lang.CharSequence) null, (kotlin.jvm.functions.Function1) null, 124, (java.lang.Object) null)).toString()\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r0, \"mapIndexedNotNull \{ indeâ€¦\"n\")n        .toString()\")\l}"];
Node_32 [shape=record,label="{32\:\ 0x00fd|RETURN\l|return r0\l}"];
Node_33 [shape=record,label="{33\:\ 0x0023|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0023\-\>B:33:0x0023\l}"];
Node_34 [shape=record,label="{34\:\ 0x003e|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x0023|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x0023|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x006b|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x00d3|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x00d1|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x00d1|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__IndentKt.replaceIndent((r17v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_34;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_35;
Node_5 -> Node_36;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_37;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_38;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_28;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_40;
Node_29 -> Node_39;
Node_30 -> Node_15;
Node_31 -> Node_32;
Node_33 -> Node_1;
Node_34 -> Node_6;
Node_35 -> Node_33;
Node_36 -> Node_33;
Node_37 -> Node_10;
Node_38 -> Node_31;
Node_39 -> Node_30;
Node_40 -> Node_30;
}

