digraph "CFG forkotlin.text.RegexOption.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x0001: NEW_ARRAY  (r0 I:kotlin.text.RegexOption[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: kotlin.text.RegexOption[] \l0x0003: NEW_INSTANCE  (r8 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption \l0x0005: CONST_STR  (r2 I:java.lang.String) =  \"IGNORE_CASE\" \l0x0007: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0009: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: CONST  (r6 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000b: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x000d: INVOKE  \l  (r1 I:kotlin.text.RegexOption)\l  (r2 I:java.lang.String)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:kotlin.jvm.internal.DefaultConstructorMarker)\l kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void type: DIRECT \l0x0010: SPUT  (r8 I:kotlin.text.RegexOption) kotlin.text.RegexOption.IGNORE_CASE kotlin.text.RegexOption \l0x0012: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x0015: NEW_INSTANCE  (r1 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption \l0x0017: CONST_STR  (r10 I:java.lang.String) =  \"MULTILINE\" \l0x0019: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001a: CONST  (r12 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x001c: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001d: CONST  (r14 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001e: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0020: INVOKE  \l  (r9 I:kotlin.text.RegexOption)\l  (r10 I:java.lang.String)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:int)\l  (r15 I:kotlin.jvm.internal.DefaultConstructorMarker)\l kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void type: DIRECT \l0x0023: SPUT  (r1 I:kotlin.text.RegexOption) kotlin.text.RegexOption.MULTILINE kotlin.text.RegexOption \l0x0025: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0026: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0028: NEW_INSTANCE  (r1 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption \l0x002a: CONST_STR  (r4 I:java.lang.String) =  \"LITERAL\" \l0x002c: CONST  (r5 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x002d: CONST  (r6 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x002f: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0030: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0031: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0032: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0033: INVOKE  \l  (r3 I:kotlin.text.RegexOption)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:kotlin.jvm.internal.DefaultConstructorMarker)\l kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void type: DIRECT \l0x0036: SPUT  (r1 I:kotlin.text.RegexOption) kotlin.text.RegexOption.LITERAL kotlin.text.RegexOption \l0x0038: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0039: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x003b: NEW_INSTANCE  (r1 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption \l0x003d: CONST_STR  (r4 I:java.lang.String) =  \"UNIX_LINES\" \l0x003f: CONST  (r5 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0040: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0041: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0042: INVOKE  \l  (r3 I:kotlin.text.RegexOption)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:kotlin.jvm.internal.DefaultConstructorMarker)\l kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void type: DIRECT \l0x0045: SPUT  (r1 I:kotlin.text.RegexOption) kotlin.text.RegexOption.UNIX_LINES kotlin.text.RegexOption \l0x0047: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0048: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x004a: NEW_INSTANCE  (r1 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption \l0x004c: CONST_STR  (r4 I:java.lang.String) =  \"COMMENTS\" \l0x004e: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x004f: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0050: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0051: INVOKE  \l  (r3 I:kotlin.text.RegexOption)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:kotlin.jvm.internal.DefaultConstructorMarker)\l kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void type: DIRECT \l0x0054: SPUT  (r1 I:kotlin.text.RegexOption) kotlin.text.RegexOption.COMMENTS kotlin.text.RegexOption \l0x0056: CONST  (r2 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0057: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0059: NEW_INSTANCE  (r1 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption \l0x005b: CONST_STR  (r4 I:java.lang.String) =  \"DOT_MATCHES_ALL\" \l0x005d: CONST  (r5 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x005e: CONST  (r6 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0060: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0061: INVOKE  \l  (r3 I:kotlin.text.RegexOption)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:kotlin.jvm.internal.DefaultConstructorMarker)\l kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void type: DIRECT \l0x0064: SPUT  (r1 I:kotlin.text.RegexOption) kotlin.text.RegexOption.DOT_MATCHES_ALL kotlin.text.RegexOption \l0x0066: CONST  (r2 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0067: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0069: NEW_INSTANCE  (r1 I:kotlin.text.RegexOption) =  kotlin.text.RegexOption \l0x006b: CONST_STR  (r4 I:java.lang.String) =  \"CANON_EQ\" \l0x006d: CONST  (r5 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x006e: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char])\l \l0x0070: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0071: INVOKE  \l  (r3 I:kotlin.text.RegexOption)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:kotlin.jvm.internal.DefaultConstructorMarker)\l kotlin.text.RegexOption.\<init\>(java.lang.String, int, int, int, int, kotlin.jvm.internal.DefaultConstructorMarker):void type: DIRECT \l0x0074: SPUT  (r1 I:kotlin.text.RegexOption) kotlin.text.RegexOption.CANON_EQ kotlin.text.RegexOption \l0x0076: CONST  (r2 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0077: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l \l0x0079: SPUT  (r0 I:kotlin.text.RegexOption[]) kotlin.text.RegexOption.$VALUES kotlin.text.RegexOption[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x007b|0x007b: RETURN   \l}"];
MethodNode[shape=record,label="{static void kotlin.text.RegexOption.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

