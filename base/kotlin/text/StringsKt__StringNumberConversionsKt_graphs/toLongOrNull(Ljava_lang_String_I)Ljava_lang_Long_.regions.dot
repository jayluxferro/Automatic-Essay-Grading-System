digraph "CFG forkotlin.text.StringsKt__StringNumberConversionsKt.toLongOrNull(Ljava\/lang\/String;I)Ljava\/lang\/Long;" {
subgraph cluster_Region_1230757140 {
label = "R(2:0|(2:(1:2)|(6:3|(1:(2:(1:6)|(1:(4:9|15|(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22)))(0)|29)(1:(1:13)(1:12)))))|14|15|(0)(0)|(0)(0)))) | DECL_VAR: boolean null, int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = r19\lint r1 = r20\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r0, \"$receiver\")\lkotlin.text.CharsKt.checkRadix(r20)\lint int r2 = r19.length()\ljava.lang.Long r3 = null\l}"];
subgraph cluster_Region_1931075665 {
label = "R(2:(1:2)|(6:3|(1:(2:(1:6)|(1:(4:9|15|(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22)))(0)|29)(1:(1:13)(1:12)))))|14|15|(0)(0)|(0)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1236937599 {
label = "IF [B:1:0x0011] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0011|if (r2 == 0) goto L_0x0013\l}"];
subgraph cluster_Region_2102122886 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0013|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_28226554 {
label = "R(6:3|(1:(2:(1:6)|(1:(4:9|15|(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22)))(0)|29)(1:(1:13)(1:12)))))|14|15|(0)(0)|(0)(0))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0014|int r4 = 0\lchar char r5 = r0.charAt(0)\llong r7 = \-9223372036854775807L\l}"];
subgraph cluster_IfRegion_1830720677 {
label = "IF [B:4:0x0021] THEN: R(1:(2:(1:6)|(1:(4:9|15|(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22)))(0)|29)(1:(1:13)(1:12))))) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0021|if (r5 \< '0') goto L_0x0023\l}"];
subgraph cluster_Region_392439457 {
label = "R(1:(2:(1:6)|(1:(4:9|15|(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22)))(0)|29)(1:(1:13)(1:12)))))";
node [shape=record,color=blue];
subgraph cluster_Region_478344009 {
label = "R(2:(1:6)|(1:(4:9|15|(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22)))(0)|29)(1:(1:13)(1:12))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1040150737 {
label = "IF [B:5:0x0023] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0023|if (r2 == 1) goto L_0x0025\l}"];
subgraph cluster_Region_547718112 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0025|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_50456987 {
label = "R(1:(4:9|15|(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22)))(0)|29)(1:(1:13)(1:12)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1237720895 {
label = "IF [B:8:0x0028] THEN: R(4:9|15|(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22)))(0)|29) ELSE: R(1:(1:13)(1:12))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0028|if (r5 == '\-') goto L_0x002a\l}"];
subgraph cluster_Region_1579085525 {
label = "R(4:9|15|(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22)))(0)|29)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002a|r7 = Long.MIN_VALUE\lr4 = 1\lr5 = true\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|PHI: r4 r5 r7 \l  PHI: (r4v1 int) = (r4v5 int), (r4v7 int) binds: [B:14:0x0036, B:9:0x002a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 boolean) = (r5v2 boolean), (r5v3 boolean) binds: [B:14:0x0036, B:9:0x002a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 long) = (r7v0 long), (r7v2 long) binds: [B:14:0x0036, B:9:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|long long r10 = (long) r1\llong long r12 = r7 \/ r10\llong r14 = 0\lint r2 = r2 \- 1\l}"];
subgraph cluster_IfRegion_1399779923 {
label = "IF [B:16:0x003d] THEN: R(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22))) ELSE: R(0)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003d|if (r4 \<= r2) goto L_0x003f\l}"];
subgraph cluster_Region_904304244 {
label = "R(1:(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22)))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1056252730 {
label = "LOOP:0: (2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22))";
node [shape=record,color=blue];
subgraph cluster_Region_1338693817 {
label = "R(2:17|(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))(1:22))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003f|LOOP_START\lPHI: r3 r4 r14 \l  PHI: (r3v1 java.lang.Long) = (r3v0 java.lang.Long), (r3v3 java.lang.Long) binds: [B:16:0x003d, B:28:0x0063] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 int) = (r4v1 int), (r4v4 int) binds: [B:16:0x003d, B:28:0x0063] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v2 long) = (r14v0 long), (r14v4 long) binds: [B:16:0x003d, B:28:0x0063] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:17:0x003f\-\>B:28:0x0063\l|int int r6 = kotlin.text.CharsKt.digitOf(r0.charAt(r4), r1)\l}"];
subgraph cluster_IfRegion_306834565 {
label = "IF [B:18:0x0047, B:21:0x004c] THEN: R(2:23|(2:26|(2:(1:32)|(1:28)))(1:25)) ELSE: R(1:22)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0047|if (r6 \>= 0) goto L_0x004a\l}"];
Node_21 [shape=record,label="{21\:\ 0x004c|ADDED_TO_REGION\l|if (r14 \>= r12) goto L_0x004f\l}"];
subgraph cluster_Region_1944007807 {
label = "R(2:23|(2:26|(2:(1:32)|(1:28)))(1:25))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x004f|long long r14 = r14 * r10\lint r16 = r4\llong long r3 = (long) r6\l}"];
subgraph cluster_IfRegion_200010465 {
label = "IF [B:24:0x0058] THEN: R(2:26|(2:(1:32)|(1:28))) ELSE: R(1:25)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0058|if (r14 \>= (r7 + r3)) goto L_0x005c\l}"];
subgraph cluster_Region_1804547604 {
label = "R(2:26|(2:(1:32)|(1:28)))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x005c|long r14 = r14 \- r3\lint r4 = r16\l}"];
subgraph cluster_Region_843255175 {
label = "R(2:(1:32)|(1:28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1422027088 {
label = "IF [B:27:0x0061] THEN: R(1:32) ELSE: null";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0061|if (r4 == r2) goto L_0x0067\l}"];
subgraph cluster_Region_1040344933 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0067|SYNTHETIC\lEDGE_INSN: B:32:0x0067\-\>B:29:0x0067 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_610887879 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0063|LOOP_END\lLOOP:0: B:17:0x003f\-\>B:28:0x0063\l|int r4 = r4 + 1\lr3 = null\l}"];
}
}
}
subgraph cluster_Region_1070994407 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x005a|RETURN\l|return null\l}"];
}
}
}
subgraph cluster_Region_229135065 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x004e|RETURN\l|return r3\l}"];
}
}
}
}
}
subgraph cluster_Region_674040788 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_29 [shape=record,label="{29\:\ 0x0067|RETURN\lEDGE_INSN: B:32:0x0067\-\>B:29:0x0067 ?: BREAK  \lPHI: r14 \l  PHI: (r14v1 long) = (r14v0 long), (r14v4 long) binds: [B:16:0x003d, B:32:0x0067] A[DONT_GENERATE, DONT_INLINE]\l|return !r5 ? java.lang.Long.valueOf(r14) : java.lang.Long.valueOf(\-r14)\l}"];
}
subgraph cluster_Region_44569699 {
label = "R(1:(1:13)(1:12)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_27089505 {
label = "IF [B:11:0x0031] THEN: R(1:13) ELSE: R(1:12) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0031|if (r5 != '+') goto L_0x0035\l}"];
subgraph cluster_Region_792490524 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0035|RETURN\l|return null\l}"];
}
subgraph cluster_Region_366043584 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0033|r4 = 1\l}"];
}
}
}
}
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x0036|PHI: r4 \l  PHI: (r4v5 int) = (r4v0 int), (r4v6 int) binds: [B:4:0x0021, B:12:0x0033] A[DONT_GENERATE, DONT_INLINE]\l|r5 = false\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|PHI: r4 r5 r7 \l  PHI: (r4v1 int) = (r4v5 int), (r4v7 int) binds: [B:14:0x0036, B:9:0x002a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 boolean) = (r5v2 boolean), (r5v3 boolean) binds: [B:14:0x0036, B:9:0x002a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 long) = (r7v0 long), (r7v2 long) binds: [B:14:0x0036, B:9:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|long long r10 = (long) r1\llong long r12 = r7 \/ r10\llong r14 = 0\lint r2 = r2 \- 1\l}"];
subgraph cluster_IfRegion_1018070953 {
label = "IF [B:16:0x003d] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003d|if (r4 \<= r2) goto L_0x003f\l}"];
subgraph cluster_Region_553260343 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1623841111 {
label = "R(0)";
node [shape=record,color=blue];
}
}
subgraph cluster_IfRegion_2766678 {
label = "IF [B:29:0x0067] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0067|RETURN\lEDGE_INSN: B:32:0x0067\-\>B:29:0x0067 ?: BREAK  \lPHI: r14 \l  PHI: (r14v1 long) = (r14v0 long), (r14v4 long) binds: [B:16:0x003d, B:32:0x0067] A[DONT_GENERATE, DONT_INLINE]\l|return !r5 ? java.lang.Long.valueOf(r14) : java.lang.Long.valueOf(\-r14)\l}"];
subgraph cluster_Region_570475041 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1851848943 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_7 [shape=record,color=red,label="{7\:\ 0x0026}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002f}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0049|RETURN\lADDED_TO_REGION\l|return r3\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x004a}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0069}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x006e}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0049|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x005a|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x004e|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.Long kotlin.text.StringsKt__StringNumberConversionsKt.toLongOrNull((r19v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lRemoved duplicated region for block: B:17:0x003f A[LOOP:0: B:17:0x003f\-\>B:28:0x0063, LOOP_START, PHI: r3 r4 r14 \l  PHI: (r3v1 java.lang.Long) = (r3v0 java.lang.Long), (r3v3 java.lang.Long) binds: [B:16:0x003d, B:28:0x0063] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 int) = (r4v1 int), (r4v4 int) binds: [B:16:0x003d, B:28:0x0063] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v2 long) = (r14v0 long), (r14v4 long) binds: [B:16:0x003d, B:28:0x0063] A[DONT_GENERATE, DONT_INLINE]]\lRemoved duplicated region for block: B:31:0x006e \lRemoved duplicated region for block: B:30:0x0069 \lAnnotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_14[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_29[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_18 -> Node_33[style=dashed];
Node_21 -> Node_23;
Node_21 -> Node_35[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_34[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_32 -> Node_29;
Node_28 -> Node_17;
Node_29 -> Node_30;
Node_29 -> Node_31;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_29[style=dashed];
Node_29 -> Node_30;
Node_29 -> Node_31;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_20 -> Node_21;
Node_30 -> Node_37;
Node_31 -> Node_36;
Node_33 -> Node_19;
Node_34 -> Node_25;
Node_35 -> Node_22;
}

