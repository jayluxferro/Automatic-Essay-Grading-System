digraph "CFG forkotlin.text.StringsKt__StringNumberConversionsKt.toIntOrNull(Ljava\/lang\/String;I)Ljava\/lang\/Integer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r9 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r10 I:int) kotlin.text.CharsKt.checkRadix(int):int type: STATIC \l0x0008: INVOKE  (r0 I:int) = (r9 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: RETURN  (r1 I:java.lang.Integer) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: INVOKE  (r3 I:char) = (r9 I:java.lang.String), (r2 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x0015: CONST  (r4 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l0x0017: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (\-2147483647(0xffffffff80000001, float:\-1.4E\-45) ?[int, float, short, byte, char])\l \l0x001a: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:14:0x0030 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: RETURN  (r1 I:java.lang.Integer) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: CONST  (r4 I:?[int, float, short, byte, char]) = (45 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0029 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l0x0026: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0027: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0029|0x0029: CONST  (r4 I:?[int, float, short, byte, char]) = (43 ?[int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002f \l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|0x002d: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: RETURN  (r1 I:java.lang.Integer) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: ARITH  (r7 I:int) = (r5 I:int) \/ (r10 I:int) \l0x0034: ARITH  (r0 I:int) = (r0 I:int) \- (r6 I:int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|0x0035: IF  (r3 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:29:0x0052 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|0x0037: INVOKE  (r6 I:char) = (r9 I:java.lang.String), (r3 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l0x003b: INVOKE  (r6 I:int) = (r6 I:char), (r10 I:int) kotlin.text.CharsKt.digitOf(char, int):int type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x003f|0x003f: IF  (r6 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:21:0x0042 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0041|0x0041: RETURN  (r1 I:java.lang.Integer) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|0x0042: IF  (r2 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:23:0x0045 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0044|0x0044: RETURN  (r1 I:java.lang.Integer) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0045|0x0045: ARITH  (r2 I:int) = (r2 I:int) * (r10 I:int) \l0x0047: ARITH  (r8 I:int) = (r5 I:int) + (r6 I:int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0049|0x0049: IF  (r2 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:26:0x004c \l}"];
Node_25 [shape=record,label="{25\:\ 0x004b|0x004b: RETURN  (r1 I:java.lang.Integer) \l}"];
Node_26 [shape=record,label="{26\:\ 0x004c|0x004c: ARITH  (r2 I:int) = (r2 I:int) \- (r6 I:int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x004d|0x004d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0052 \l}"];
Node_28 [shape=record,label="{28\:\ 0x004f|0x004f: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_29 [shape=record,label="{29\:\ 0x0052|0x0052: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0059 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0054|0x0054: INVOKE  (r9 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l}"];
Node_31 [shape=record,label="{31\:\ 0x0059|0x0059: NEG  (r9 I:int) = (r2 I:int) \l0x005a: INVOKE  (r9 I:java.lang.Integer) = (r9 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l}"];
Node_32 [shape=record,label="{32\:\ 0x005e|0x005e: RETURN  (r9 I:java.lang.Integer) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Integer kotlin.text.StringsKt__StringNumberConversionsKt.toIntOrNull((r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_29;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_18;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
}

