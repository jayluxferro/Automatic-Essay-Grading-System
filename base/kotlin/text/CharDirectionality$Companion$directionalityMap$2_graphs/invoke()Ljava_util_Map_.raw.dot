digraph "CFG forkotlin.text.CharDirectionality$Companion$directionalityMap$2.invoke()Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:kotlin.text.CharDirectionality[]) =  kotlin.text.CharDirectionality.values():kotlin.text.CharDirectionality[] type: STATIC \l0x0004: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x0005: INVOKE  (r1 I:int) = (r1 I:int) kotlin.collections.MapsKt.mapCapacity(int):int type: STATIC \l0x0009: CONST  (r2 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x000b: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int) kotlin.ranges.RangesKt.coerceAtLeast(int, int):int type: STATIC \l0x000f: NEW_INSTANCE  (r2 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x0011: INVOKE  (r2 I:java.util.LinkedHashMap), (r1 I:int) java.util.LinkedHashMap.\<init\>(int):void type: DIRECT \l0x0014: CHECK_CAST  (r2 I:java.util.Map) = (java.util.Map) (r2 I:?[OBJECT, ARRAY]) \l0x0016: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x0017: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: IF  (r3 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x002a \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: AGET  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x001c: INVOKE  (r5 I:int) = (r4 I:kotlin.text.CharDirectionality) kotlin.text.CharDirectionality.getValue():int type: VIRTUAL \l0x0020: INVOKE  (r5 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0024: INVOKE  \l  (r2 I:java.util.Map)\l  (r5 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0027: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: RETURN  \l  (r2 I:java.util.Map\<java.lang.Integer, kotlin.text.CharDirectionality\>)\l \l}"];
MethodNode[shape=record,label="{public final java.util.Map\<java.lang.Integer, kotlin.text.CharDirectionality\> kotlin.text.CharDirectionality$Companion$directionalityMap$2.invoke((r6 'this' I:kotlin.text.CharDirectionality$Companion$directionalityMap$2 A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/Map\<, Ljava\/lang\/Integer;, Lkotlin\/text\/CharDirectionality;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

