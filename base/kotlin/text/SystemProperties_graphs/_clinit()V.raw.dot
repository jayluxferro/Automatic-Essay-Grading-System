digraph "CFG forkotlin.text.SystemProperties.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:kotlin.text.SystemProperties) =  kotlin.text.SystemProperties \l0x0002: INVOKE  (r0 I:kotlin.text.SystemProperties) kotlin.text.SystemProperties.\<init\>():void type: DIRECT \l0x0005: SPUT  (r0 I:kotlin.text.SystemProperties) kotlin.text.SystemProperties.INSTANCE kotlin.text.SystemProperties \l0x0007: CONST_STR  (r0 I:java.lang.String) =  \"line.separator\" \l0x0009: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String) java.lang.System.getProperty(java.lang.String):java.lang.String type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: INVOKE   kotlin.jvm.internal.Intrinsics.throwNpe():void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: SPUT  (r0 I:java.lang.String) kotlin.text.SystemProperties.LINE_SEPARATOR java.lang.String \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{static void kotlin.text.SystemProperties.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

