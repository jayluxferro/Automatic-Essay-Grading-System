digraph "CFG forkotlin.text.StringsKt__StringsKt.indexOf(Ljava\/lang\/CharSequence;Ljava\/lang\/String;IZ)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r8 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"string\" \l0x0007: INVOKE  (r9 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INSTANCE_OF  (r0 I:boolean) = (r8 I:?[OBJECT, ARRAY]) java.lang.String \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: CHECK_CAST  (r8 I:java.lang.String) = (java.lang.String) (r8 I:?[OBJECT, ARRAY]) \l0x0013: INVOKE  (r8 I:int) = \l  (r8 I:java.lang.String)\l  (r9 I:java.lang.String)\l  (r10 I:int)\l java.lang.String.indexOf(java.lang.String, int):int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0019: CHECK_CAST  (r1 I:java.lang.CharSequence) = (java.lang.CharSequence) (r1 I:?[OBJECT, ARRAY]) \l0x001b: INVOKE  (r3 I:int) = (r8 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l0x001f: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: CONST  (r6 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0022: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0024: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0025: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0026: INVOKE  (r8 I:int) = \l  (r0 I:java.lang.CharSequence)\l  (r1 I:java.lang.CharSequence)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:boolean)\l  (r5 I:boolean)\l  (r6 I:int)\l  (r7 I:java.lang.Object)\l kotlin.text.StringsKt__StringsKt.indexOf$StringsKt__StringsKt$default(java.lang.CharSequence, java.lang.CharSequence, int, int, boolean, boolean, int, java.lang.Object):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: RETURN  (r8 I:int) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.StringsKt__StringsKt.indexOf((r8 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
}

