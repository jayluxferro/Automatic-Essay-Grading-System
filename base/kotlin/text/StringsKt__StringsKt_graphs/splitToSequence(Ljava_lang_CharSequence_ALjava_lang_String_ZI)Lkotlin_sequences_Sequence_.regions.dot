digraph "CFG forkotlin.text.StringsKt__StringsKt.splitToSequence(Ljava\/lang\/CharSequence;[Ljava\/lang\/String;ZI)Lkotlin\/sequences\/Sequence;" {
subgraph cluster_Region_161877291 {
label = "R(2:0|1)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r9, \"delimiters\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|RETURN\l|return kotlin.sequences.SequencesKt.map(rangesDelimitedBy$StringsKt__StringsKt$default(r8, r9, 0, r10, r11, 2, (java.lang.Object) null), new kotlin.text.StringsKt__StringsKt$splitToSequence$1(r8))\l}"];
}
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.lang.String\> kotlin.text.StringsKt__StringsKt.splitToSequence((r8v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, [, Ljava\/lang\/String;, ZI), Lkotlin\/sequences\/Sequence\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

