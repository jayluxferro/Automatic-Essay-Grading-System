digraph "CFG forkotlin.text.StringsKt__StringsKt.lineSequence(Ljava\/lang\/CharSequence;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r9 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"\l\" \l0x0007: CONST_STR  (r1 I:java.lang.String) =  \"\l\" \l0x0009: CONST_STR  (r2 I:java.lang.String) =  \"\" \l0x000b: FILLED_NEW_ARRAY  (r4 I:java.lang.String[]) = \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l elemType: java.lang.String \l0x000f: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: CONST  (r7 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0012: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  (r9 I:kotlin.sequences.Sequence) = \l  (r3 I:java.lang.CharSequence)\l  (r4 I:java.lang.String[])\l  (r5 I:boolean)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:java.lang.Object)\l kotlin.text.StringsKt.splitToSequence$default(java.lang.CharSequence, java.lang.String[], boolean, int, int, java.lang.Object):kotlin.sequences.Sequence type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN  (r9 I:kotlin.sequences.Sequence\<java.lang.String\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.lang.String\> kotlin.text.StringsKt__StringsKt.lineSequence((r9 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, ), Lkotlin\/sequences\/Sequence\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

