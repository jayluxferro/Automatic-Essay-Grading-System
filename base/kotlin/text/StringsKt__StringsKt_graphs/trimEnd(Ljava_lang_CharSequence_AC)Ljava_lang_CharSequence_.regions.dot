digraph "CFG forkotlin.text.StringsKt__StringsKt.trimEnd(Ljava\/lang\/CharSequence;[C)Ljava\/lang\/CharSequence;" {
subgraph cluster_Region_708391619 {
label = "R(3:0|(2:1|(1:(1:9)))|10)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"chars\")\lint int r0 = r2.length()\l}"];
subgraph cluster_LoopRegion_830599691 {
label = "LOOP:0: (2:1|(1:(1:9)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001a|LOOP_END\lLOOP:0: B:1:0x000e\-\>B:4:0x001a\l|if (kotlin.collections.ArraysKt.contains(r3, r2.charAt(r0)) != false) goto L_0x000e\l}"];
subgraph cluster_Region_824297606 {
label = "R(2:1|(1:(1:9)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000e|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:0:0x0000, B:4:0x001a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:4:0x001a\l|r0\-\-\l}"];
subgraph cluster_Region_1804485772 {
label = "R(1:(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_863740921 {
label = "IF [B:2:0x0010] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0010|if (r0 \< 0) goto L_0x0024\l}"];
subgraph cluster_Region_431418627 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return \"\"\l}"];
}
}
}
}
}
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return r2.subSequence(0, r0 + 1)\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0012}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001c}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0024}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0024|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.CharSequence kotlin.text.StringsKt__StringsKt.trimEnd((r2v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 char[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_1;
Node_4 -> Node_8[style=dashed];
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_5 -> Node_10;
Node_6 -> Node_9;
Node_7 -> Node_6;
Node_8 -> Node_5;
}

