digraph "CFG forkotlin.text.StringsKt__StringsKt.regionMatchesImpl(Ljava\/lang\/CharSequence;ILjava\/lang\/CharSequence;IIZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"other\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r7 \< 0) goto L_0x0039\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|if (r5 \< 0) goto L_0x0039\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f}"];
Node_4 [shape=record,label="{4\:\ 0x0014|if (r5 \> (r4.length() \- r8)) goto L_0x0039\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016}"];
Node_6 [shape=record,label="{6\:\ 0x001b|if (r7 \<= (r6.length() \- r8)) goto L_0x001e\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|r1 = 0\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|LOOP_START\lPHI: r1 \l  PHI: (r1v5 int) = (r1v4 int), (r1v6 int) binds: [B:7:0x001e, B:12:0x0034] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x001f\-\>B:12:0x0034\l|if (r1 \>= r8) goto L_0x0037\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021}"];
Node_10 [shape=record,label="{10\:\ 0x0031|if (kotlin.text.CharsKt.equals(r4.charAt(r5 + r1), r6.charAt(r7 + r1), r9) != false) goto L_0x0034\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|LOOP_END\lLOOP:0: B:8:0x001f\-\>B:12:0x0034\l|int r1 = r1 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|RETURN\l|return true\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|RETURN\l|return false\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.StringsKt__StringsKt.regionMatchesImpl((r4v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_14[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_15[style=dashed];
Node_12 -> Node_8;
Node_15 -> Node_11;
Node_16 -> Node_13;
}

