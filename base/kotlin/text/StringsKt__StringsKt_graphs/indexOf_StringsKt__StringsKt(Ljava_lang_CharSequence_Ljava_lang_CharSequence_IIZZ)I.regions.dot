digraph "CFG forkotlin.text.StringsKt__StringsKt.indexOf$StringsKt__StringsKt(Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;IIZZ)I" {
subgraph cluster_Region_1927420721 {
label = "R(2:(1:2)(1:3)|(3:17|(1:(1:34))(1:(1:35))|(2:21|(2:(1:23)|(1:(2:(1:37)|(1:25))))))(3:8|(1:(1:32))(1:(1:33))|(2:12|(2:(1:14)|(1:(2:(1:36)|(1:16))))))) | DECL_VAR: kotlin.ranges.IntProgression null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1662000883 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r11 == false) goto L_0x0003\l}"];
subgraph cluster_Region_1009804836 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|kotlin.ranges.IntProgression r11 = new kotlin.ranges.IntRange(kotlin.ranges.RangesKt.coerceAtLeast(r8, 0), kotlin.ranges.RangesKt.coerceAtMost(r9, r6.length()))\l}"];
}
subgraph cluster_Region_1059155355 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|kotlin.ranges.IntProgression r11 = kotlin.ranges.RangesKt.downTo(kotlin.ranges.RangesKt.coerceAtMost(r8, kotlin.text.StringsKt.getLastIndex(r6)), kotlin.ranges.RangesKt.coerceAtLeast(r9, 0))\l}"];
}
}
subgraph cluster_IfRegion_19907764 {
label = "IF [B:5:0x0029, B:7:0x002d] THEN: R(3:17|(1:(1:34))(1:(1:35))|(2:21|(2:(1:23)|(1:(2:(1:37)|(1:25)))))) ELSE: R(3:8|(1:(1:32))(1:(1:33))|(2:12|(2:(1:14)|(1:(2:(1:36)|(1:16))))))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0029|if ((r6 instanceof java.lang.String) == false) goto L_0x005a\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|ADDED_TO_REGION\l|if ((r7 instanceof java.lang.String) == false) goto L_0x005a\l}"];
subgraph cluster_Region_716555154 {
label = "R(3:17|(1:(1:34))(1:(1:35))|(2:21|(2:(1:23)|(1:(2:(1:37)|(1:25))))))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x005a|int int r8 = r11.getFirst()\lint int r9 = r11.getLast()\lint int r11 = r11.getStep()\l}"];
subgraph cluster_IfRegion_887502639 {
label = "IF [B:18:0x0066] THEN: R(1:(1:34)) ELSE: R(1:(1:35))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0066|if (r11 \> 0) goto L_0x0068\l}"];
subgraph cluster_Region_1464349373 {
label = "R(1:(1:34))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1640440396 {
label = "IF [B:19:0x0068] THEN: R(1:34) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0068|if (r8 \> r9) goto L_?\l}"];
subgraph cluster_Region_898728182 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
}
subgraph cluster_Region_1452664625 {
label = "R(1:(1:35)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1593403670 {
label = "IF [B:20:0x006b] THEN: R(1:35) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x006b|if (r8 \< r9) goto L_?\l}"];
subgraph cluster_Region_694194995 {
label = "R(1:35)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
}
}
subgraph cluster_LoopRegion_1059819896 {
label = "LOOP:1: (2:21|(2:(1:23)|(1:(2:(1:37)|(1:25)))))";
node [shape=record,color=blue];
subgraph cluster_Region_100933723 {
label = "R(2:21|(2:(1:23)|(1:(2:(1:37)|(1:25)))))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x006d|LOOP_START\lPHI: r8 \l  PHI: (r8v3 int) = (r8v2 int), (r8v4 int) binds: [B:31:0x006d, B:25:0x007f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:21:0x006d\-\>B:25:0x007f\l}"];
subgraph cluster_Region_2144461765 {
label = "R(2:(1:23)|(1:(2:(1:37)|(1:25))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1523881992 {
label = "IF [B:22:0x007a] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x007a|if (kotlin.text.StringsKt.regionMatchesImpl(r7, 0, r6, r8, r7.length(), r10) == true) goto L_0x007c\l}"];
subgraph cluster_Region_2035270655 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x007c|RETURN\l|return r8\l}"];
}
}
subgraph cluster_Region_1376067079 {
label = "R(1:(2:(1:37)|(1:25)))";
node [shape=record,color=blue];
subgraph cluster_Region_826729838 {
label = "R(2:(1:37)|(1:25))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_566385624 {
label = "IF [B:24:0x007d] THEN: R(1:37) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x007d|if (r8 == r9) goto L_0x0081\l}"];
subgraph cluster_Region_375852517 {
label = "R(1:37)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_1438568661 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x007f|LOOP_END\lLOOP:1: B:21:0x006d\-\>B:25:0x007f\l|r8 += r11\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_1250749795 {
label = "R(3:8|(1:(1:32))(1:(1:33))|(2:12|(2:(1:14)|(1:(2:(1:36)|(1:16))))))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002f|int int r8 = r11.getFirst()\lint int r9 = r11.getLast()\lint int r11 = r11.getStep()\l}"];
subgraph cluster_IfRegion_312693187 {
label = "IF [B:9:0x003b] THEN: R(1:(1:32)) ELSE: R(1:(1:33))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x003b|if (r11 \> 0) goto L_0x003d\l}"];
subgraph cluster_Region_1717050151 {
label = "R(1:(1:32))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2129920270 {
label = "IF [B:10:0x003d] THEN: R(1:32) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x003d|if (r8 \> r9) goto L_?\l}"];
subgraph cluster_Region_483902669 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return \-1\l}"];
}
}
}
subgraph cluster_Region_440156076 {
label = "R(1:(1:33)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2066615984 {
label = "IF [B:11:0x0040] THEN: R(1:33) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0040|if (r8 \< r9) goto L_?\l}"];
subgraph cluster_Region_882508075 {
label = "R(1:33)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
}
}
subgraph cluster_LoopRegion_314418620 {
label = "LOOP:0: (2:12|(2:(1:14)|(1:(2:(1:36)|(1:16)))))";
node [shape=record,color=blue];
subgraph cluster_Region_820963978 {
label = "R(2:12|(2:(1:14)|(1:(2:(1:36)|(1:16)))))";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0042|LOOP_START\lPHI: r8 \l  PHI: (r8v7 int) = (r8v6 int), (r8v8 int) binds: [B:28:0x0042, B:16:0x0058] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:12:0x0042\-\>B:16:0x0058\l}"];
subgraph cluster_Region_1263825508 {
label = "R(2:(1:14)|(1:(2:(1:36)|(1:16))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1449399107 {
label = "IF [B:13:0x0053] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0053|if (kotlin.text.StringsKt.regionMatches((java.lang.String) r7, 0, (java.lang.String) r6, r8, r7.length(), r10) == true) goto L_0x0055\l}"];
subgraph cluster_Region_1196491350 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0055|RETURN\l|return r8\l}"];
}
}
subgraph cluster_Region_790868348 {
label = "R(1:(2:(1:36)|(1:16)))";
node [shape=record,color=blue];
subgraph cluster_Region_1355575649 {
label = "R(2:(1:36)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_435394499 {
label = "IF [B:15:0x0056] THEN: R(1:36) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0056|if (r8 == r9) goto L_0x0081\l}"];
subgraph cluster_Region_389114696 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_1306238966 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0058|LOOP_END\lLOOP:0: B:12:0x0042\-\>B:16:0x0058\l|r8 += r11\l}"];
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0027|PHI: r11 \l  PHI: (r11v1 kotlin.ranges.IntProgression) = (r11v5 kotlin.ranges.IntProgression), (r11v7 kotlin.ranges.IntProgression) binds: [B:3:0x0017, B:2:0x0003] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002b}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0055|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0081|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0042|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x007c|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0081|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x006d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static final int kotlin.text.StringsKt__StringsKt.indexOf$StringsKt__StringsKt((r6v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , , , , \l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_20[style=dashed];
Node_19 -> Node_31[style=dashed];
Node_19 -> Node_34;
Node_20 -> Node_31[style=dashed];
Node_20 -> Node_35;
Node_21 -> Node_22;
Node_22 -> Node_24[style=dashed];
Node_22 -> Node_29;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_28[style=dashed];
Node_10 -> Node_32;
Node_11 -> Node_28[style=dashed];
Node_11 -> Node_33;
Node_12 -> Node_13;
Node_13 -> Node_15[style=dashed];
Node_13 -> Node_26;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_27;
Node_16 -> Node_12;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_26 -> Node_14;
Node_27 -> Node_36;
Node_28 -> Node_12;
Node_29 -> Node_23;
Node_30 -> Node_37;
Node_31 -> Node_21;
}

