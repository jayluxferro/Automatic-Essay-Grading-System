digraph "CFG forkotlin.text.StringsKt__StringsKt.indexOfAny(Ljava\/lang\/CharSequence;[CIZ)I" {
subgraph cluster_Region_698998581 {
label = "R(2:0|(2:8|(2:(1:25)|(1:(3:10|(1:(2:16|1)(1:(2:14|1)(1:15)))|(2:(1:18)|(1:(2:(1:26)|(1:20))))))))(2:6|7)) | DECL_VAR: boolean null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, \"chars\")\l}"];
subgraph cluster_IfRegion_794639609 {
label = "IF [B:1:0x000b, B:3:0x000e, B:5:0x0012] THEN: R(2:8|(2:(1:25)|(1:(3:10|(1:(2:16|1)(1:(2:14|1)(1:15)))|(2:(1:18)|(1:(2:(1:26)|(1:20)))))))) ELSE: R(2:6|7)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r10 == true) goto L_0x001f\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|ADDED_TO_REGION\l|if (r8.length != 1) goto L_0x001f\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|ADDED_TO_REGION\l|if ((r7 instanceof java.lang.String) == false) goto L_0x001f\l}"];
subgraph cluster_Region_205355668 {
label = "R(2:8|(2:(1:25)|(1:(3:10|(1:(2:16|1)(1:(2:14|1)(1:15)))|(2:(1:18)|(1:(2:(1:26)|(1:20))))))))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|int int r9 = kotlin.ranges.RangesKt.coerceAtLeast(r9, 0)\lint int r2 = kotlin.text.StringsKt.getLastIndex(r7)\l}"];
subgraph cluster_Region_1926670322 {
label = "R(2:(1:25)|(1:(3:10|(1:(2:16|1)(1:(2:14|1)(1:15)))|(2:(1:18)|(1:(2:(1:26)|(1:20)))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_643523614 {
label = "IF [B:9:0x0028] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0028|if (r9 \> r2) goto L_?\l}"];
subgraph cluster_Region_969697464 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_1585137859 {
label = "R(1:(3:10|(1:(2:16|1)(1:(2:14|1)(1:15)))|(2:(1:18)|(1:(2:(1:26)|(1:20))))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_411507969 {
label = "LOOP:0: (3:10|(1:(2:16|1)(1:(2:14|1)(1:15)))|(2:(1:18)|(1:(2:(1:26)|(1:20)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1611022058 {
label = "R(3:10|(1:(2:16|1)(1:(2:14|1)(1:15)))|(2:(1:18)|(1:(2:(1:26)|(1:20)))))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002a|LOOP_START\lPHI: r9 \l  PHI: (r9v2 int) = (r9v1 int), (r9v3 int) binds: [B:9:0x0028, B:20:0x0045] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x002a\-\>B:20:0x0045\l|char char r3 = r7.charAt(r9)\lint int r4 = r8.length\lint r5 = 0\l}"];
subgraph cluster_LoopRegion_1596575956 {
label = "LOOP:1: (1:(2:16|1)(1:(2:14|1)(1:15)))";
node [shape=record,color=blue];
subgraph cluster_Region_100330017 {
label = "R(1:(2:16|1)(1:(2:14|1)(1:15)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1768557597 {
label = "IF [B:11:0x0030] THEN: R(2:16|1) ELSE: R(1:(2:14|1)(1:15))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0030|LOOP_START\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:10:0x002a, B:15:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:11:0x0030\-\>B:15:0x003c\l|if (r5 \>= r4) goto L_0x003f\l}"];
subgraph cluster_Region_148867768 {
label = "R(2:16|1)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003f|EDGE_INSN: B:16:0x003f\-\>B:17:0x0040 ?: BREAK  \l|r3 = false\l}"];
Node_InsnContainer_29595405 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_554499361 {
label = "R(1:(2:14|1)(1:15)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_952796288 {
label = "IF [B:13:0x0038] THEN: R(2:14|1) ELSE: R(1:15) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0038|if (kotlin.text.CharsKt.equals(r8[r5], r3, r10) == true) goto L_0x003a\l}"];
subgraph cluster_Region_1692266919 {
label = "R(2:14|1)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x003a|EDGE_INSN: B:14:0x003a\-\>B:17:0x0040 ?: BREAK  \l|r3 = true\l}"];
Node_InsnContainer_808593060 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_782808501 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x003c|LOOP_END\lLOOP:1: B:11:0x0030\-\>B:15:0x003c\l|r5++\l}"];
}
}
}
}
}
}
subgraph cluster_Region_1657502049 {
label = "R(2:(1:18)|(1:(2:(1:26)|(1:20))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2133713354 {
label = "IF [B:17:0x0040] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0040|EDGE_INSN: B:16:0x003f\-\>B:17:0x0040 ?: BREAK  \lEDGE_INSN: B:14:0x003a\-\>B:17:0x0040 ?: BREAK  \lPHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v3 boolean) binds: [B:16:0x003f, B:14:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == true) goto L_0x0042\l}"];
subgraph cluster_Region_126353828 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0042|RETURN\l|return r9\l}"];
}
}
subgraph cluster_Region_965672699 {
label = "R(1:(2:(1:26)|(1:20)))";
node [shape=record,color=blue];
subgraph cluster_Region_413726824 {
label = "R(2:(1:26)|(1:20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1162634147 {
label = "IF [B:19:0x0043] THEN: R(1:26) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0043|if (r9 == r2) goto L_0x0048\l}"];
subgraph cluster_Region_554797677 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return \-1\l}"];
}
}
subgraph cluster_Region_1898345490 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0045|LOOP_END\lLOOP:0: B:10:0x002a\-\>B:20:0x0045\l|r9++\l}"];
}
}
}
}
}
}
}
}
}
subgraph cluster_Region_824314932 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0014}"];
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|return ((java.lang.String) r7).indexOf(kotlin.collections.ArraysKt.single(r8), r9)\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000d}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0032}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0042|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0048|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x003f|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x003a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final int kotlin.text.StringsKt__StringsKt.indexOfAny((r7v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 char[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_25;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_23;
Node_16 -> Node_17;
Node_13 -> Node_15[style=dashed];
Node_13 -> Node_24;
Node_14 -> Node_17;
Node_15 -> Node_11;
Node_17 -> Node_19[style=dashed];
Node_17 -> Node_21;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_10;
Node_6 -> Node_7;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_12 -> Node_13;
Node_21 -> Node_18;
Node_22 -> Node_26;
Node_23 -> Node_16;
Node_24 -> Node_14;
}

