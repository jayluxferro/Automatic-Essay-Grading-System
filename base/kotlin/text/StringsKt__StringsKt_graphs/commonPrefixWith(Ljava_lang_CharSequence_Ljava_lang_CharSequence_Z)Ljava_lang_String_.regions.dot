digraph "CFG forkotlin.text.StringsKt__StringsKt.commonPrefixWith(Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;Z)Ljava\/lang\/String;" {
subgraph cluster_Region_1122214439 {
label = "R(5:0|(1:4)|5|(1:9)|11)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"other\")\lint int r0 = java.lang.Math.min(r5.length(), r6.length())\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_358458515 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0018|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v4 int) binds: [B:0:0x0000, B:4:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0018\-\>B:4:0x0028\l|if (r2 \< r0) goto L_0x001a\l}"];
subgraph cluster_Region_1673514593 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0028|LOOP_END\lLOOP:0: B:1:0x0018\-\>B:4:0x0028\l|r2++\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x002b|int int r7 = r2 \- 1\l}"];
subgraph cluster_IfRegion_1016244907 {
label = "IF [B:6:0x0031, B:8:0x0037] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0031|ADDED_TO_REGION\l|if (kotlin.text.StringsKt.hasSurrogatePairAt(r5, r7) == true) goto L_0x0039\l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|ADDED_TO_REGION\l|if (kotlin.text.StringsKt.hasSurrogatePairAt(r6, r7) == true) goto L_0x0039\l}"];
subgraph cluster_Region_1922785585 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0039|r2\-\-\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x0043|RETURN\l|return r5.subSequence(0, r2).toString()\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x001a}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0026|ADDED_TO_REGION\l|if (kotlin.text.CharsKt.equals(r5.charAt(r2), r6.charAt(r2), r7) != false) goto L_0x0028\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0033}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003b|PHI: r2 \l  PHI: (r2v2 int) = (r2v3 int), (r2v1 int) binds: [B:9:0x0039, B:8:0x0037] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x002b|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x002b|SYNTHETIC\lADDED_TO_REGION\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsKt.commonPrefixWith((r5v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13[style=dashed];
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_12[style=dashed];
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_12 -> Node_5;
Node_13 -> Node_5;
}

