digraph "CFG forkotlin.text.StringsKt__StringsKt.trimStart(Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/String;" {
subgraph cluster_Region_1419139220 {
label = "R(3:0|(1:(2:6|1)(1:(2:4|1)(1:5)))|8) | DECL_VAR: java.lang.CharSequence null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"predicate\")\ljava.lang.CharSequence java.lang.CharSequence r3 = r3\lint int r0 = r3.length()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1221485790 {
label = "LOOP:0: (1:(2:6|1)(1:(2:4|1)(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_1087815554 {
label = "R(1:(2:6|1)(1:(2:4|1)(1:5)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1083912532 {
label = "IF [B:1:0x0011] THEN: R(2:6|1) ELSE: R(1:(2:4|1)(1:5))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0011|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:5:0x0030] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:5:0x0030\l|if (r1 \>= r0) goto L_0x0033\l}"];
subgraph cluster_Region_566525752 {
label = "R(2:6|1)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0033|EDGE_INSN: B:6:0x0033\-\>B:7:0x0037 ?: BREAK  \l|java.lang.CharSequence r3 = \"\"\l}"];
Node_InsnContainer_2138175291 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_736515882 {
label = "R(1:(2:4|1)(1:5)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1942918210 {
label = "IF [B:3:0x0025] THEN: R(2:4|1) ELSE: R(1:5) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0025|if (r4.invoke(java.lang.Character.valueOf(r3.charAt(r1))).booleanValue() == false) goto L_0x0027\l}"];
subgraph cluster_Region_2075342791 {
label = "R(2:4|1)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0027|EDGE_INSN: B:4:0x0027\-\>B:7:0x0037 ?: BREAK  \l|java.lang.CharSequence r3 = r3.subSequence(r1, r3.length())\l}"];
Node_InsnContainer_280313372 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_649036587 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0030|LOOP_END\lLOOP:0: B:1:0x0011\-\>B:5:0x0030\l|r1++\l}"];
}
}
}
}
}
}
Node_8 [shape=record,label="{8\:\ 0x003b|RETURN\l|return r3.toString()\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0013}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0037|EDGE_INSN: B:6:0x0033\-\>B:7:0x0037 ?: BREAK  \lEDGE_INSN: B:4:0x0027\-\>B:7:0x0037 ?: BREAK  \lPHI: r3 \l  PHI: (r3v4 java.lang.CharSequence) = (r3v3 java.lang.CharSequence), (r3v6 java.lang.CharSequence) binds: [B:6:0x0033, B:4:0x0027] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0033|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0027|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsKt.trimStart((r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Character;, Ljava\/lang\/Boolean;, \>;), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_6 -> Node_7;
Node_3 -> Node_5[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_7;
Node_5 -> Node_1;
Node_2 -> Node_3;
Node_7 -> Node_8;
Node_9 -> Node_6;
Node_10 -> Node_4;
}

