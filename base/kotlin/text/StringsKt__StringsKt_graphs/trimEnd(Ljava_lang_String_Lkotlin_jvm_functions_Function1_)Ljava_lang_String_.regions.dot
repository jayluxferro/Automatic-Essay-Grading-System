digraph "CFG forkotlin.text.StringsKt__StringsKt.trimEnd(Ljava\/lang\/String;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/String;" {
subgraph cluster_Region_437429686 {
label = "R(3:0|(2:1|(1:(2:5|1))(2:6|1))|8) | DECL_VAR: java.lang.CharSequence null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"predicate\")\ljava.lang.CharSequence java.lang.CharSequence r2 = r2\lint int r0 = r2.length()\l}"];
subgraph cluster_LoopRegion_1733346292 {
label = "LOOP:0: (2:1|(1:(2:5|1))(2:6|1))";
node [shape=record,color=blue];
subgraph cluster_Region_711756139 {
label = "R(2:1|(1:(2:5|1))(2:6|1))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0010|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:0:0x0000, B:4:0x0026] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0010\-\>B:4:0x0026\l|r0\-\-\l}"];
subgraph cluster_IfRegion_635217541 {
label = "IF [B:2:0x0012] THEN: R(1:(2:5|1)) ELSE: R(2:6|1)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0012|if (r0 \>= 0) goto L_0x0014\l}"];
subgraph cluster_Region_1485883046 {
label = "R(1:(2:5|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_777051602 {
label = "IF [B:4:0x0026] THEN: R(2:5|1) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0026|LOOP_END\lLOOP:0: B:1:0x0010\-\>B:4:0x0026\l|if (r3.invoke(java.lang.Character.valueOf(r2.charAt(r0))).booleanValue() == false) goto L_0x0028\l}"];
subgraph cluster_Region_1279446967 {
label = "R(2:5|1)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0028|EDGE_INSN: B:5:0x0028\-\>B:7:0x0034 ?: BREAK  \l|java.lang.CharSequence r2 = r2.subSequence(0, r0 + 1)\l}"];
Node_InsnContainer_1208444362 [shape=record,label="{|break\l}"];
}
}
}
subgraph cluster_Region_222970273 {
label = "R(2:6|1)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0030|EDGE_INSN: B:6:0x0030\-\>B:7:0x0034 ?: BREAK  \l|java.lang.CharSequence r2 = \"\"\l}"];
Node_InsnContainer_2115570339 [shape=record,label="{|break\l}"];
}
}
}
}
Node_8 [shape=record,label="{8\:\ 0x0038|RETURN\l|return r2.toString()\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0014}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0034|EDGE_INSN: B:6:0x0030\-\>B:7:0x0034 ?: BREAK  \lEDGE_INSN: B:5:0x0028\-\>B:7:0x0034 ?: BREAK  \lPHI: r2 \l  PHI: (r2v4 java.lang.CharSequence) = (r2v3 java.lang.CharSequence), (r2v6 java.lang.CharSequence) binds: [B:6:0x0030, B:5:0x0028] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0030|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0028|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.text.StringsKt__StringsKt.trimEnd((r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Character;, Ljava\/lang\/Boolean;, \>;), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_4 -> Node_1[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_6;
Node_10 -> Node_5;
}

