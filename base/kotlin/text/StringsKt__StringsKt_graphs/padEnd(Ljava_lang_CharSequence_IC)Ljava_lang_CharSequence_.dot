digraph "CFG forkotlin.text.StringsKt__StringsKt.padEnd(Ljava\/lang\/CharSequence;IC)Ljava\/lang\/CharSequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r2 \< 0) goto L_0x0032\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r2 \> r1.length()) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d}"];
Node_5 [shape=record,label="{5\:\ 0x0016|RETURN\l|return r1.subSequence(0, r1.length())\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|java.lang.StringBuilder r0 = new java.lang.StringBuilder(r2)\lr0.append(r1)\lint r2 = r2 \- r1.length()\lr1 = 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|if (1 \> r2) goto L_0x002f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|LOOP_START\lPHI: r1 \l  PHI: (r1v5 int) = (r1v4 int), (r1v6 int) binds: [B:7:0x0025, B:10:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0027\-\>B:10:0x002c\l|r0.append(r3)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|if (r1 == r2) goto L_0x002f\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|LOOP_END\lLOOP:0: B:8:0x0027\-\>B:10:0x002c\l|int r1 = r1 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f}"];
Node_12 [shape=record,label="{12\:\ 0x0031|RETURN\l|return r0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|java.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"Desired length \")\lr3.append(r2)\lr3.append(\" is less than zero.\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x004f|throw new java.lang.IllegalArgumentException(r3.toString())\l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.CharSequence kotlin.text.StringsKt__StringsKt.padEnd((r1v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 char A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_11;
}

