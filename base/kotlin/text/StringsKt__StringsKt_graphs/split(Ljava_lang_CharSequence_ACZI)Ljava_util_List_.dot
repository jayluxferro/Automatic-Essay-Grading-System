digraph "CFG forkotlin.text.StringsKt__StringsKt.split(Ljava\/lang\/CharSequence;[CZI)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, \"delimiters\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r8.length != 1) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e}"];
Node_3 [shape=record,label="{3\:\ 0x0019|RETURN\l|return split$StringsKt__StringsKt(r7, java.lang.String.valueOf(r8[0]), r9, r10)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|java.lang.Iterable r8 = kotlin.sequences.SequencesKt.asIterable(rangesDelimitedBy$StringsKt__StringsKt$default(r7, r8, 0, r9, r10, 2, (java.lang.Object) null))\ljava.util.Collection r9 = new java.util.ArrayList(kotlin.collections.CollectionsKt.collectionSizeOrDefault(r8, 10))\ljava.util.Iterator r8 = r8.iterator()\l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|LOOP_START\lLOOP:0: B:5:0x003a\-\>B:7:0x0040\l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|if (r8.hasNext() == false) goto L_0x004e\l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|LOOP_END\lLOOP:0: B:5:0x003a\-\>B:7:0x0040\l|r9.add(kotlin.text.StringsKt.substring(r7, (kotlin.ranges.IntRange) r8.next()))\l}"];
Node_8 [shape=record,label="{8\:\ 0x004e}"];
Node_9 [shape=record,label="{9\:\ 0x0050|RETURN\l|return (java.util.List) r9\l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.lang.String\> kotlin.text.StringsKt__StringsKt.split((r7v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 char[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/CharSequence;, [CZI), Ljava\/util\/List\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_8;
}

