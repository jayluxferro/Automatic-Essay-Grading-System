digraph "CFG forkotlin.text.StringsKt__StringsKt.hasSurrogatePairAt(Ljava\/lang\/CharSequence;I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r0 I:int) = (r2 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l0x0009: ARITH  (r0 I:int) = (r0 I:int) + (\-2 int) \l0x000b: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: INVOKE  (r0 I:char) = (r2 I:java.lang.CharSequence), (r3 I:int) java.lang.CharSequence.charAt(int):char type: INTERFACE \l0x0015: INVOKE  (r0 I:boolean) = (r0 I:char) java.lang.Character.isHighSurrogate(char):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: ARITH  (r3 I:int) = (r3 I:int) + (r1 I:int) \l0x001c: INVOKE  (r2 I:char) = (r2 I:java.lang.CharSequence), (r3 I:int) java.lang.CharSequence.charAt(int):char type: INTERFACE \l0x0020: INVOKE  (r2 I:boolean) = (r2 I:char) java.lang.Character.isLowSurrogate(char):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.text.StringsKt__StringsKt.hasSurrogatePairAt((r2 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_9[style=dashed];
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_10;
}

