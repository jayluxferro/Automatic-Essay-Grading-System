digraph "CFG forkotlin.MathKt__BigIntegersKt.or(Ljava\/math\/BigInteger;Ljava\/math\/BigInteger;)Ljava\/math\/BigInteger;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.math.BigInteger) = (r0 I:java.math.BigInteger), (r1 I:java.math.BigInteger) java.math.BigInteger.or(java.math.BigInteger):java.math.BigInteger type: VIRTUAL \l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"this.or(other)\" \l0x0006: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN  (r0 I:java.math.BigInteger) \l}"];
MethodNode[shape=record,label="{private static final java.math.BigInteger kotlin.MathKt__BigIntegersKt.or((r0 I:java.math.BigInteger A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.math.BigInteger A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}], Annotation[BUILD, kotlin.internal.InlineOnly, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

