digraph "CFG forkotlin.MathKt__BigIntegersKt.toBigDecimal$default(Ljava\/math\/BigInteger;ILjava\/math\/MathContext;ILjava\/lang\/Object;)Ljava\/math\/BigDecimal;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0010 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: SGET  (r2 I:java.math.MathContext) =  java.math.MathContext.UNLIMITED java.math.MathContext \l0x000b: CONST_STR  (r3 I:java.lang.String) =  \"MathContext.UNLIMITED\" \l0x000d: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: NEW_INSTANCE  (r3 I:java.math.BigDecimal) =  java.math.BigDecimal \l0x0012: INVOKE  \l  (r3 I:java.math.BigDecimal)\l  (r0 I:java.math.BigInteger)\l  (r1 I:int)\l  (r2 I:java.math.MathContext)\l java.math.BigDecimal.\<init\>(java.math.BigInteger, int, java.math.MathContext):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: RETURN  (r3 I:java.math.BigDecimal) \l}"];
MethodNode[shape=record,label="{static \/* bridge *\/ \/* synthetic *\/ java.math.BigDecimal kotlin.MathKt__BigIntegersKt.toBigDecimal$default((r0 I:java.math.BigInteger A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.math.MathContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}], Annotation[BUILD, kotlin.internal.InlineOnly, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

