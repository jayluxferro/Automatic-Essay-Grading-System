digraph "CFG forkotlin.Triple.copy(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Lkotlin\/Triple;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:kotlin.Triple) =  kotlin.Triple \l0x0002: INVOKE  \l  (r0 I:kotlin.Triple)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l kotlin.Triple.\<init\>(java.lang.Object, java.lang.Object, java.lang.Object):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r0 I:kotlin.Triple\<A, B, C\>) \l}"];
MethodNode[shape=record,label="{public final kotlin.Triple\<A, B, C\> kotlin.Triple.copy((r1 'this' I:kotlin.Triple A[IMMUTABLE_TYPE, THIS]), (r2 I:A A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:B A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:C A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TA;TB;TC;), Lkotlin\/Triple\<, TA;TB;TC;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

