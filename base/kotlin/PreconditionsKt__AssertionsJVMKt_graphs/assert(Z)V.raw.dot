digraph "CFG forkotlin.PreconditionsKt__AssertionsJVMKt.assert(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:boolean) =  kotlin._Assertions.ENABLED boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: NEW_INSTANCE  (r1 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0009: CONST_STR  (r0 I:java.lang.String) =  \"Assertion failed\" \l0x000b: INVOKE  (r1 I:java.lang.AssertionError), (r0 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l0x000e: CHECK_CAST  (r1 I:java.lang.Throwable) = (java.lang.Throwable) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{private static final void kotlin.PreconditionsKt__AssertionsJVMKt.assert((r1 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | RENAME_REASON:not valid java name\lAnnotation[BUILD, kotlin.internal.InlineOnly, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_4;
Node_2 -> Node_6[style=dashed];
Node_4 -> Node_5;
}

