digraph "CFG forkotlin.UnsafeLazyImpl.toString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r1 I:kotlin.UnsafeLazyImpl) kotlin.UnsafeLazyImpl.isInitialized():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r0 I:java.lang.Object) = (r1 I:kotlin.UnsafeLazyImpl) kotlin.UnsafeLazyImpl.getValue():java.lang.Object type: VIRTUAL \l0x000a: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) java.lang.String.valueOf(java.lang.Object):java.lang.String type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: CONST_STR  (r0 I:java.lang.String) =  \"Lazy value not initialized yet.\" \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.UnsafeLazyImpl.toString((r1 'this' I:kotlin.UnsafeLazyImpl A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

