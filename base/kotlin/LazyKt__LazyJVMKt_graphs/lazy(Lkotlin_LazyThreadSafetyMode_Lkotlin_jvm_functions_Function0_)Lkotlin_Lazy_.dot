digraph "CFG forkotlin.LazyKt__LazyJVMKt.lazy(Lkotlin\/LazyThreadSafetyMode;Lkotlin\/jvm\/functions\/Function0;)Lkotlin\/Lazy;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"mode\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"initializer\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|switch(r2) \{\l    case kotlin.LazyThreadSafetyMode.SYNCHRONIZED :kotlin.LazyThreadSafetyMode: goto L_0x002b;\l    case kotlin.LazyThreadSafetyMode.PUBLICATION :kotlin.LazyThreadSafetyMode: goto L_0x0023;\l    case kotlin.LazyThreadSafetyMode.NONE :kotlin.LazyThreadSafetyMode: goto L_0x001b;\l    default: goto L_0x0015;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015}"];
Node_3 [shape=record,label="{3\:\ 0x001a|throw new kotlin.NoWhenBranchMatchedException()\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b}"];
Node_5 [shape=record,label="{5\:\ 0x0023}"];
Node_6 [shape=record,label="{6\:\ 0x002b}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return new kotlin.SynchronizedLazyImpl\<\>(r3, (java.lang.Object) null, 2, (kotlin.jvm.internal.DefaultConstructorMarker) null)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return new kotlin.UnsafeLazyImpl\<\>(r3)\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return new kotlin.SafePublicationLazyImpl\<\>(r3)\l}"];
MethodNode[shape=record,label="{public static final kotlin.Lazy\<T\> kotlin.LazyKt__LazyJVMKt.lazy((r2v0 kotlin.LazyThreadSafetyMode A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.jvm.functions.Function0\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/LazyThreadSafetyMode;, Lkotlin\/jvm\/functions\/Function0\<, +TT;\>;), Lkotlin\/Lazy\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_4 -> Node_8;
Node_5 -> Node_9;
Node_6 -> Node_7;
}

