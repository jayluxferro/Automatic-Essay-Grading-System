digraph "CFG forkotlin.comparisons.ComparisonsKt__ComparisonsKt.compareValuesByImpl$ComparisonsKt__ComparisonsKt(Ljava\/lang\/Object;Ljava\/lang\/Object;[Lkotlin\/jvm\/functions\/Function1;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r7 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:6:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: AGET  (r3 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0007: INVOKE  (r4 I:java.lang.Object) = \l  (r3 I:kotlin.jvm.functions.Function1)\l  (r5 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x000b: CHECK_CAST  (r4 I:java.lang.Comparable) = (java.lang.Comparable) (r4 I:?[OBJECT, ARRAY]) \l0x000d: INVOKE  (r3 I:java.lang.Object) = \l  (r3 I:kotlin.jvm.functions.Function1)\l  (r6 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x0011: CHECK_CAST  (r3 I:java.lang.Comparable) = (java.lang.Comparable) (r3 I:?[OBJECT, ARRAY]) \l0x0013: INVOKE  (r3 I:int) = (r4 I:java.lang.Comparable), (r3 I:java.lang.Comparable) kotlin.comparisons.ComparisonsKt.compareValues(java.lang.Comparable, java.lang.Comparable):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: RETURN  (r3 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private static final int kotlin.comparisons.ComparisonsKt__ComparisonsKt.compareValuesByImpl$ComparisonsKt__ComparisonsKt((r5 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super T, ? extends java.lang.Comparable\<?\>\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(TT;TT;[, Lkotlin\/jvm\/functions\/Function1\<, \-TT;+, Ljava\/lang\/Comparable\<, *\>;\>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_1;
}

