digraph "CFG forkotlin.comparisons.ComparisonsKt__ComparisonsKt.reversed(Ljava\/util\/Comparator;)Ljava\/util\/Comparator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INSTANCE_OF  (r0 I:boolean) = (r1 I:?[OBJECT, ARRAY]) kotlin.comparisons.ReversedComparator \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CHECK_CAST  (r1 I:kotlin.comparisons.ReversedComparator) = (kotlin.comparisons.ReversedComparator) (r1 I:?[OBJECT, ARRAY]) \l0x000b: INVOKE  (r1 I:java.util.Comparator) = (r1 I:kotlin.comparisons.ReversedComparator) kotlin.comparisons.ReversedComparator.getComparator():java.util.Comparator type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: SGET  (r0 I:kotlin.comparisons.NaturalOrderComparator) =  kotlin.comparisons.NaturalOrderComparator.INSTANCE kotlin.comparisons.NaturalOrderComparator \l0x0012: INVOKE  (r0 I:boolean) = (r1 I:java.lang.Object), (r0 I:java.lang.Object) kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0027 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: SGET  (r1 I:kotlin.comparisons.ReverseOrderComparator) =  kotlin.comparisons.ReverseOrderComparator.INSTANCE kotlin.comparisons.ReverseOrderComparator \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: CHECK_CAST  (r1 I:java.util.Comparator) = (java.util.Comparator) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: NEW_INSTANCE  (r1 I:kotlin.TypeCastException) =  kotlin.TypeCastException \l0x0021: CONST_STR  (r0 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.Comparator\<T\> \/* = java.util.Comparator\<T\> *\/\" \l0x0023: INVOKE  (r1 I:kotlin.TypeCastException), (r0 I:java.lang.String) kotlin.TypeCastException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: SGET  (r0 I:kotlin.comparisons.ReverseOrderComparator) =  kotlin.comparisons.ReverseOrderComparator.INSTANCE kotlin.comparisons.ReverseOrderComparator \l0x0029: INVOKE  (r0 I:boolean) = (r1 I:java.lang.Object), (r0 I:java.lang.Object) kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x003e \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: SGET  (r1 I:kotlin.comparisons.NaturalOrderComparator) =  kotlin.comparisons.NaturalOrderComparator.INSTANCE kotlin.comparisons.NaturalOrderComparator \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0036 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: CHECK_CAST  (r1 I:java.util.Comparator) = (java.util.Comparator) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: NEW_INSTANCE  (r1 I:kotlin.TypeCastException) =  kotlin.TypeCastException \l0x0038: CONST_STR  (r0 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.Comparator\<T\> \/* = java.util.Comparator\<T\> *\/\" \l0x003a: INVOKE  (r1 I:kotlin.TypeCastException), (r0 I:java.lang.String) kotlin.TypeCastException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|0x003e: NEW_INSTANCE  (r0 I:kotlin.comparisons.ReversedComparator) =  kotlin.comparisons.ReversedComparator \l0x0040: INVOKE  \l  (r0 I:kotlin.comparisons.ReversedComparator)\l  (r1 I:java.util.Comparator)\l kotlin.comparisons.ReversedComparator.\<init\>(java.util.Comparator):void type: DIRECT \l0x0043: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0044: CHECK_CAST  (r1 I:java.util.Comparator) = (java.util.Comparator) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: RETURN  (r1 I:java.util.Comparator\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Comparator\<T\> kotlin.comparisons.ComparisonsKt__ComparisonsKt.reversed((r1 I:java.util.Comparator\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Comparator\<, TT;\>;), Ljava\/util\/Comparator\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

