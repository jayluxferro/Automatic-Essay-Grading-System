digraph "CFG forkotlin.internal.ProgressionUtilKt.getProgressionLastElement(JJJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0002: CMP_L  (r0 I:int) = (r11 I:long), (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CMP_L  (r0 I:int) = (r7 I:long), (r9 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:5:0x000b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: MOVE  (r0 I:?[long, double]) = (r9 I:?[long, double]) \l0x000c: MOVE  (r2 I:?[long, double]) = (r7 I:?[long, double]) \l0x000d: MOVE  (r4 I:?[long, double]) = (r11 I:?[long, double]) \l0x000e: INVOKE  (r7 I:long) = (r0 I:long), (r2 I:long), (r4 I:long) kotlin.internal.ProgressionUtilKt.differenceModulo(long, long, long):long type: STATIC \l0x0012: ARITH  (r9 I:long) = (r9 I:long) \- (r7 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:12:0x0024 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: CMP_L  (r0 I:int) = (r7 I:long), (r9 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:10:0x001b \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: NEG  (r5 I:long) = (r11 I:long) \l0x001c: MOVE  (r1 I:?[long, double]) = (r7 I:?[long, double]) \l0x001d: MOVE  (r3 I:?[long, double]) = (r9 I:?[long, double]) \l0x001e: INVOKE  (r7 I:long) = (r1 I:long), (r3 I:long), (r5 I:long) kotlin.internal.ProgressionUtilKt.differenceModulo(long, long, long):long type: STATIC \l0x0022: ARITH  (r9 I:long) = (r9 I:long) + (r7 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: RETURN  (r9 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: NEW_INSTANCE  (r7 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0026: CONST_STR  (r8 I:java.lang.String) =  \"Step is zero.\" \l0x0028: INVOKE  \l  (r7 I:java.lang.IllegalArgumentException)\l  (r8 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l0x002b: CHECK_CAST  (r7 I:java.lang.Throwable) = (java.lang.Throwable) (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final long kotlin.internal.ProgressionUtilKt.getProgressionLastElement((r7 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.PublishedApi, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_11[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
}

