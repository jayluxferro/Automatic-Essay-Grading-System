digraph "CFG forkotlin.internal.PlatformImplementationsKt.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = getJavaVersion()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r0 \< 65544) goto L_0x00b7\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x000b|SYNTHETIC\lSplitter:B:3:0x000b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\lSplitter:B:3:0x000b\l|java.lang.Object r1 = java.lang.Class.forName(\"kotlin.internal.jdk8.JDK8PlatformImplementations\").newInstance()     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, \"Class.forName(\"kotlin.in…entations\").newInstance()\")     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r1 == null) goto L_0x001f\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a}"];
Node_7 [shape=record,label="{7\:\ 0x001b|SYNTHETIC\lSplitter:B:7:0x001b\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\lSplitter:B:7:0x001b\l|kotlin.internal.PlatformImplementations r2 = (kotlin.internal.PlatformImplementations) r1     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\l|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.internal.PlatformImplementations\")     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|ExcHandler: ClassCastException (r2v22 'e' java.lang.ClassCastException A[CUSTOM_DECLARE])\lSplitter:B:7:0x001b\l|java.lang.ClassCastException r2 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|SYNTHETIC\lSplitter:B:12:0x0028\l}"];
Node_13 [shape=record,label="{13\:\ ?|Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\lSplitter:B:12:0x0028\l|java.lang.ClassLoader r1 = r1.getClass().getClassLoader()     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\ljava.lang.ClassLoader r3 = kotlin.internal.PlatformImplementations.class.getClassLoader()     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\ljava.lang.StringBuilder r5 = new java.lang.StringBuilder()     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\lr5.append(\"Instance classloader: \")     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\lr5.append(r1)     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\lr5.append(\", base type classloader: \")     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\lr5.append(r3)     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\ljava.lang.Throwable r1 = new java.lang.ClassCastException(r5.toString()).initCause(r2)     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, \"ClassCastException(\"Inst…baseTypeCL\").initCause(e)\")     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x005f|Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\l|throw r1     \/\/ Catch:\{ ClassCastException \-\> 0x0027, ClassNotFoundException \-\> 0x0060 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0060}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException (unused java.lang.ClassNotFoundException)\lSplitter:B:3:0x000b\l}"];
Node_17 [shape=record,label="{17\:\ 0x0062|SYNTHETIC\lSplitter:B:17:0x0062\l}"];
Node_18 [shape=record,label="{18\:\ ?|Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\lSplitter:B:17:0x0062\l|java.lang.Object r1 = java.lang.Class.forName(\"kotlin.internal.JRE8PlatformImplementations\").newInstance()     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, \"Class.forName(\"kotlin.in…entations\").newInstance()\")     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x006f|if (r1 == null) goto L_0x0076\l}"];
Node_20 [shape=record,label="{20\:\ 0x0071}"];
Node_21 [shape=record,label="{21\:\ 0x0072|SYNTHETIC\lSplitter:B:21:0x0072\l}"];
Node_22 [shape=record,label="{22\:\ ?|Catch:\{ ClassCastException \-\> 0x007e \}\lSplitter:B:21:0x0072\l|kotlin.internal.PlatformImplementations r2 = (kotlin.internal.PlatformImplementations) r1     \/\/ Catch:\{ ClassCastException \-\> 0x007e \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x0076|Catch:\{ ClassCastException \-\> 0x007e \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x007d|Catch:\{ ClassCastException \-\> 0x007e \}\l|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.internal.PlatformImplementations\")     \/\/ Catch:\{ ClassCastException \-\> 0x007e \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x007e|ExcHandler: ClassCastException (r2v15 'e' java.lang.ClassCastException A[CUSTOM_DECLARE])\lSplitter:B:21:0x0072\l|java.lang.ClassCastException r2 = move\-exception\l}"];
Node_26 [shape=record,label="{26\:\ 0x007f|SYNTHETIC\lSplitter:B:26:0x007f\l}"];
Node_27 [shape=record,label="{27\:\ ?|Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\lSplitter:B:26:0x007f\l|java.lang.ClassLoader r1 = r1.getClass().getClassLoader()     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\ljava.lang.ClassLoader r3 = kotlin.internal.PlatformImplementations.class.getClassLoader()     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\ljava.lang.StringBuilder r5 = new java.lang.StringBuilder()     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\lr5.append(\"Instance classloader: \")     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\lr5.append(r1)     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\lr5.append(\", base type classloader: \")     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\lr5.append(r3)     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\ljava.lang.Throwable r1 = new java.lang.ClassCastException(r5.toString()).initCause(r2)     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, \"ClassCastException(\"Inst…baseTypeCL\").initCause(e)\")     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x00b6|Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\l|throw r1     \/\/ Catch:\{ ClassNotFoundException \-\> 0x00b7 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x00b7}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException (unused java.lang.ClassNotFoundException)\lSplitter:B:17:0x0062\l}"];
Node_31 [shape=record,label="{31\:\ 0x00ba|if (r0 \< 65543) goto L_0x0169\l}"];
Node_32 [shape=record,label="{32\:\ 0x00bc}"];
Node_33 [shape=record,label="{33\:\ 0x00be|SYNTHETIC\lSplitter:B:33:0x00be\l}"];
Node_34 [shape=record,label="{34\:\ ?|Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\lSplitter:B:33:0x00be\l|java.lang.Object r0 = java.lang.Class.forName(\"kotlin.internal.jdk7.JDK7PlatformImplementations\").newInstance()     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r0, \"Class.forName(\"kotlin.in…entations\").newInstance()\")     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\l}"];
Node_35 [shape=record,label="{35\:\ 0x00cb|if (r0 == null) goto L_0x00d2\l}"];
Node_36 [shape=record,label="{36\:\ 0x00cd}"];
Node_37 [shape=record,label="{37\:\ 0x00ce|SYNTHETIC\lSplitter:B:37:0x00ce\l}"];
Node_38 [shape=record,label="{38\:\ ?|Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\lSplitter:B:37:0x00ce\l|kotlin.internal.PlatformImplementations r2 = (kotlin.internal.PlatformImplementations) r0     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\l}"];
Node_39 [shape=record,label="{39\:\ 0x00d2|Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\l}"];
Node_40 [shape=record,label="{40\:\ 0x00d9|Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\l|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.internal.PlatformImplementations\")     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\l}"];
Node_41 [shape=record,label="{41\:\ 0x00da|ExcHandler: ClassCastException (r1v9 'e' java.lang.ClassCastException A[CUSTOM_DECLARE])\lSplitter:B:37:0x00ce\l|java.lang.ClassCastException r1 = move\-exception\l}"];
Node_42 [shape=record,label="{42\:\ 0x00db|SYNTHETIC\lSplitter:B:42:0x00db\l}"];
Node_43 [shape=record,label="{43\:\ ?|Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\lSplitter:B:42:0x00db\l|java.lang.ClassLoader r0 = r0.getClass().getClassLoader()     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\ljava.lang.ClassLoader r2 = kotlin.internal.PlatformImplementations.class.getClassLoader()     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\ljava.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\lr4.append(\"Instance classloader: \")     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\lr4.append(r0)     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\lr4.append(\", base type classloader: \")     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\lr4.append(r2)     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\ljava.lang.Throwable r0 = new java.lang.ClassCastException(r4.toString()).initCause(r1)     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r0, \"ClassCastException(\"Inst…baseTypeCL\").initCause(e)\")     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\l}"];
Node_44 [shape=record,label="{44\:\ 0x0112|Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\l|throw r0     \/\/ Catch:\{ ClassCastException \-\> 0x00da, ClassNotFoundException \-\> 0x0113 \}\l}"];
Node_45 [shape=record,label="{45\:\ 0x0113}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException (unused java.lang.ClassNotFoundException)\lSplitter:B:33:0x00be\l}"];
Node_47 [shape=record,label="{47\:\ 0x0115|SYNTHETIC\lSplitter:B:47:0x0115\l}"];
Node_48 [shape=record,label="{48\:\ ?|Catch:\{ ClassNotFoundException \-\> 0x0169 \}\lSplitter:B:47:0x0115\l|java.lang.Object r0 = java.lang.Class.forName(\"kotlin.internal.JRE7PlatformImplementations\").newInstance()     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r0, \"Class.forName(\"kotlin.in…entations\").newInstance()\")     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\l}"];
Node_49 [shape=record,label="{49\:\ 0x0122|if (r0 == null) goto L_0x0128\l}"];
Node_50 [shape=record,label="{50\:\ 0x0124}"];
Node_51 [shape=record,label="{51\:\ 0x0125|SYNTHETIC\lSplitter:B:51:0x0125\l}"];
Node_52 [shape=record,label="{52\:\ ?|Catch:\{ ClassCastException \-\> 0x0130 \}\lSplitter:B:51:0x0125\l|kotlin.internal.PlatformImplementations r2 = (kotlin.internal.PlatformImplementations) r0     \/\/ Catch:\{ ClassCastException \-\> 0x0130 \}\l}"];
Node_53 [shape=record,label="{53\:\ 0x0128|Catch:\{ ClassCastException \-\> 0x0130 \}\l}"];
Node_54 [shape=record,label="{54\:\ 0x012f|Catch:\{ ClassCastException \-\> 0x0130 \}\l|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.internal.PlatformImplementations\")     \/\/ Catch:\{ ClassCastException \-\> 0x0130 \}\l}"];
Node_55 [shape=record,label="{55\:\ 0x0130|ExcHandler: ClassCastException (r1v4 'e' java.lang.ClassCastException A[CUSTOM_DECLARE])\lSplitter:B:51:0x0125\l|java.lang.ClassCastException r1 = move\-exception\l}"];
Node_56 [shape=record,label="{56\:\ 0x0131|SYNTHETIC\lSplitter:B:56:0x0131\l}"];
Node_57 [shape=record,label="{57\:\ ?|Catch:\{ ClassNotFoundException \-\> 0x0169 \}\lSplitter:B:56:0x0131\l|java.lang.ClassLoader r0 = r0.getClass().getClassLoader()     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\ljava.lang.ClassLoader r2 = kotlin.internal.PlatformImplementations.class.getClassLoader()     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\ljava.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\lr4.append(\"Instance classloader: \")     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\lr4.append(r0)     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\lr4.append(\", base type classloader: \")     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\lr4.append(r2)     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\ljava.lang.Throwable r0 = new java.lang.ClassCastException(r4.toString()).initCause(r1)     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r0, \"ClassCastException(\"Inst…baseTypeCL\").initCause(e)\")     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\l}"];
Node_58 [shape=record,label="{58\:\ 0x0168|Catch:\{ ClassNotFoundException \-\> 0x0169 \}\l|throw r0     \/\/ Catch:\{ ClassNotFoundException \-\> 0x0169 \}\l}"];
Node_59 [shape=record,label="{59\:\ 0x0169|kotlin.internal.PlatformImplementations r2 = new kotlin.internal.PlatformImplementations()\l}"];
Node_60 [shape=record,label="{60\:\ ?|SYNTHETIC\lExcHandler: ClassNotFoundException (unused java.lang.ClassNotFoundException)\lSplitter:B:47:0x0115\l}"];
Node_61 [shape=record,label="{61\:\ 0x016e|PHI: r2 \l  PHI: (r2v0 kotlin.internal.PlatformImplementations) = (r2v1 kotlin.internal.PlatformImplementations), (r2v6 kotlin.internal.PlatformImplementations), (r2v11 kotlin.internal.PlatformImplementations), (r2v18 kotlin.internal.PlatformImplementations), (r2v25 kotlin.internal.PlatformImplementations) binds: [B:59:0x0169, B:52:?, B:38:?, B:22:?, B:8:?] A[DONT_GENERATE, DONT_INLINE]\l|IMPLEMENTATIONS = r2\l}"];
Node_62 [shape=record,label="{62\:\ 0x0170|RETURN\l|return\l}"];
MethodNode[shape=record,label="{static void kotlin.internal.PlatformImplementationsKt.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_29;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_16;
Node_4 -> Node_5;
Node_4 -> Node_16;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_61;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_15 -> Node_17;
Node_16 -> Node_15;
Node_17 -> Node_18;
Node_17 -> Node_30;
Node_18 -> Node_19;
Node_18 -> Node_30;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_25;
Node_22 -> Node_61;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_29 -> Node_31;
Node_30 -> Node_29;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_59;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_46;
Node_34 -> Node_35;
Node_34 -> Node_46;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_39;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_37 -> Node_41;
Node_38 -> Node_61;
Node_39 -> Node_40;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_42 -> Node_46;
Node_43 -> Node_44;
Node_45 -> Node_47;
Node_46 -> Node_45;
Node_47 -> Node_48;
Node_47 -> Node_60;
Node_48 -> Node_49;
Node_48 -> Node_60;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_53;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_51 -> Node_55;
Node_52 -> Node_61;
Node_53 -> Node_54;
Node_55 -> Node_56;
Node_56 -> Node_57;
Node_56 -> Node_60;
Node_57 -> Node_58;
Node_59 -> Node_61;
Node_60 -> Node_59;
Node_61 -> Node_62;
}

