digraph "CFG forkotlin.internal.PlatformImplementationsKt.castToBaseType(Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0001: CONST_STR  (r1 I:java.lang.String) =  \"T\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: INVOKE  (r0 I:int), (r1 I:java.lang.String) kotlin.jvm.internal.Intrinsics.reifiedOperationMarker(int, java.lang.String):void type: STATIC A[Catch:\{ ClassCastException \-\> 0x000a \}, TRY_ENTER]\l0x0006: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassCastException \-\> 0x000a \}]\l0x0007: CHECK_CAST  (r0 I:java.lang.Object) = (java.lang.Object) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassCastException \-\> 0x000a \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN  (r0 I:T) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|ExcHandler: ClassCastException null\lSplitter:B:1:0x0003\l|0x000a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: INVOKE  (r5 I:java.lang.Class) = (r5 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x000f: INVOKE  (r5 I:java.lang.ClassLoader) = (r5 I:java.lang.Class) java.lang.Class.getClassLoader():java.lang.ClassLoader type: VIRTUAL \l0x0013: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0014: CONST_STR  (r2 I:java.lang.String) =  \"T\" \l0x0016: INVOKE  (r1 I:int), (r2 I:java.lang.String) kotlin.jvm.internal.Intrinsics.reifiedOperationMarker(int, java.lang.String):void type: STATIC \l0x0019: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Object\>) =  java.lang.Object.class \l0x001b: INVOKE  (r1 I:java.lang.ClassLoader) = (r1 I:java.lang.Class) java.lang.Class.getClassLoader():java.lang.ClassLoader type: VIRTUAL \l0x001f: NEW_INSTANCE  (r2 I:java.lang.ClassCastException) =  java.lang.ClassCastException \l0x0021: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0023: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0026: CONST_STR  (r4 I:java.lang.String) =  \"Instance classloader: \" \l0x0028: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002b: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x002e: CONST_STR  (r5 I:java.lang.String) =  \", base type classloader: \" \l0x0030: INVOKE  (r3 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0033: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0036: INVOKE  (r5 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003a: INVOKE  \l  (r2 I:java.lang.ClassCastException)\l  (r5 I:java.lang.String)\l java.lang.ClassCastException.\<init\>(java.lang.String):void type: DIRECT \l0x003d: CHECK_CAST  (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:?[OBJECT, ARRAY]) \l0x003f: INVOKE  (r5 I:java.lang.Throwable) = \l  (r2 I:java.lang.ClassCastException)\l  (r0 I:java.lang.Throwable)\l java.lang.ClassCastException.initCause(java.lang.Throwable):java.lang.Throwable type: VIRTUAL \l0x0043: CONST_STR  (r0 I:java.lang.String) =  \"ClassCastException(\"Instâ€¦baseTypeCL\").initCause(e)\" \l0x0045: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0048|0x0048: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final T kotlin.internal.PlatformImplementationsKt.castToBaseType((r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Object;, )TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

