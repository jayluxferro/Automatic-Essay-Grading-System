digraph "CFG forkotlin.internal.PlatformImplementationsKt.getJavaVersion()I" {
subgraph cluster_Region_704405140 {
label = "R(2:0|(2:(1:24)|(2:2|(1:(1:25))(3:8|(1:10)|(2:13|(2:15|(1:27))(1:21))(1:23)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String java.lang.String r0 = java.lang.System.getProperty(\"java.specification.version\")\l}"];
subgraph cluster_Region_1163143952 {
label = "R(2:(1:24)|(2:2|(1:(1:25))(3:8|(1:10)|(2:13|(2:15|(1:27))(1:21))(1:23))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1762358567 {
label = "IF [B:1:0x0009] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r0 == null) goto L_0x006b\l}"];
subgraph cluster_Region_1174893207 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x006b|RETURN\l|return 65542\l}"];
}
}
subgraph cluster_Region_1738494202 {
label = "R(2:2|(1:(1:25))(3:8|(1:10)|(2:13|(2:15|(1:27))(1:21))(1:23)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|java.lang.CharSequence java.lang.CharSequence r8 = r0\lint int r9 = kotlin.text.StringsKt.indexOf$default(r8, '.', 0, false, 6, (java.lang.Object) null)\l}"];
subgraph cluster_IfRegion_116007456 {
label = "IF [B:3:0x001b] THEN: R(1:(1:25)) ELSE: R(3:8|(1:10)|(2:13|(2:15|(1:27))(1:21))(1:23))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001b|if (r9 \< 0) goto L_0x001d\l}"];
subgraph cluster_Region_572858026 {
label = "R(1:(1:25))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1582745274 {
label = "Try: R(1:25) catches: R(1:26)";
node [shape=record,color=blue];
subgraph cluster_Region_127321927 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return java.lang.Integer.parseInt(r0) * 65536\l}"];
}
subgraph cluster_Region_977169099 {
label = "R(1:26) | ExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return 65542\l}"];
}
}
}
subgraph cluster_Region_1741669100 {
label = "R(3:8|(1:10)|(2:13|(2:15|(1:27))(1:21))(1:23))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0024|int int r11 = r9 + 1\lint int r2 = kotlin.text.StringsKt.indexOf$default(r8, '.', r11, false, 4, (java.lang.Object) null)\l}"];
subgraph cluster_IfRegion_1014493895 {
label = "IF [B:9:0x0031] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0031|if (r2 \< 0) goto L_0x0033\l}"];
subgraph cluster_Region_1280651743 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0033|int r2 = r0.length()\l}"];
}
}
subgraph cluster_IfRegion_2126890815 {
label = "IF [B:12:0x0038] THEN: R(2:13|(2:15|(1:27))(1:21)) ELSE: R(1:23)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0038|if (r0 != null) goto L_0x003a\l}"];
subgraph cluster_Region_1665155229 {
label = "R(2:13|(2:15|(1:27))(1:21))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x003a|java.lang.String java.lang.String r3 = r0.substring(0, r9)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r3, \"(this as java.lang.Strin…ing(startIndex, endIndex)\")\l}"];
subgraph cluster_IfRegion_1381834573 {
label = "IF [B:14:0x0043] THEN: R(2:15|(1:27)) ELSE: R(1:21)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0043|if (r0 != null) goto L_0x0045\l}"];
subgraph cluster_Region_937629456 {
label = "R(2:15|(1:27))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0045|java.lang.String java.lang.String r0 = r0.substring(r11, r2)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r0, \"(this as java.lang.Strin…ing(startIndex, endIndex)\")\l}"];
subgraph cluster_TryCatchRegion_1196438737 {
label = "Try: R(1:27) catches: R(1:28)";
node [shape=record,color=blue];
subgraph cluster_Region_327367118 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (java.lang.Integer.parseInt(r3) * 65536) + java.lang.Integer.parseInt(r0)\l}"];
}
subgraph cluster_Region_1300935391 {
label = "R(1:28) | ExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return 65542\l}"];
}
}
}
subgraph cluster_Region_620879554 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0062|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type java.lang.String\")\l}"];
}
}
}
subgraph cluster_Region_1822458011 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x006a|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type java.lang.String\")\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_977169099 {
label = "R(1:26) | ExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return 65542\l}"];
}
subgraph cluster_Region_1300935391 {
label = "R(1:28) | ExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return 65542\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x001d|SYNTHETIC\lSplitter:B:4:0x001d\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|Catch:\{ NumberFormatException \-\> 0x0023 \}\lSplitter:B:4:0x001d\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0021}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\lSplitter:B:4:0x001d\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0037|PHI: r2 \l  PHI: (r2v3 int) = (r2v2 int), (r2v7 int) binds: [B:9:0x0031, B:10:0x0033] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x004e|SYNTHETIC\lSplitter:B:16:0x004e\l}"];
Node_17 [shape=record,color=red,label="{17\:\ ?|Catch:\{ NumberFormatException \-\> 0x005a \}\lSplitter:B:16:0x004e\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0058}"];
Node_19 [shape=record,color=red,label="{19\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\lSplitter:B:16:0x004e\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x005b}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0063}"];
MethodNode[shape=record,label="{private static final int kotlin.internal.PlatformImplementationsKt.getJavaVersion() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_24;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_22[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_20[style=dashed];
Node_15 -> Node_16;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_25;
Node_7 -> Node_26;
Node_11 -> Node_12;
Node_16 -> Node_17;
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_27;
Node_19 -> Node_28;
Node_20 -> Node_21;
Node_22 -> Node_23;
}

