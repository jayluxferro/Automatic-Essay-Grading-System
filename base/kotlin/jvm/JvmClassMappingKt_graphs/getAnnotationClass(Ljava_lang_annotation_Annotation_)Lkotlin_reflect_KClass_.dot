digraph "CFG forkotlin.jvm.JvmClassMappingKt.getAnnotationClass(Ljava\/lang\/annotation\/Annotation;)Lkotlin\/reflect\/KClass;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\ljava.lang.Class r1 = r1.annotationType()\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r1, \"(this as java.lang.annotâ€¦otation).annotationType()\")\lkotlin.reflect.KClass r1 = getKotlinClass(r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|if (r1 == null) goto L_0x0015\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|RETURN\l|return r1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015}"];
Node_4 [shape=record,label="{4\:\ 0x001c|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.reflect.KClass\<out T\>\")\l}"];
MethodNode[shape=record,label="{public static final kotlin.reflect.KClass\<? extends T\> kotlin.jvm.JvmClassMappingKt.getAnnotationClass((r1v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Ljava\/lang\/annotation\/Annotation;, \>(TT;), Lkotlin\/reflect\/KClass\<, +TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

