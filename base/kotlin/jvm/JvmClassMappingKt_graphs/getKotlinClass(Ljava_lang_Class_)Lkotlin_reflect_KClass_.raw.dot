digraph "CFG forkotlin.jvm.JvmClassMappingKt.getKotlinClass(Ljava\/lang\/Class;)Lkotlin\/reflect\/KClass;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r1 I:kotlin.reflect.KClass) = (r1 I:java.lang.Class) kotlin.jvm.internal.Reflection.getOrCreateKotlinClass(java.lang.Class):kotlin.reflect.KClass type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN  (r1 I:kotlin.reflect.KClass\<T\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.reflect.KClass\<T\> kotlin.jvm.JvmClassMappingKt.getKotlinClass((r1 I:java.lang.Class\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Class\<, TT;\>;), Lkotlin\/reflect\/KClass\<, TT;\>;]\}], Annotation[BUILD, kotlin.jvm.JvmName, \{name=getKotlinClass\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

