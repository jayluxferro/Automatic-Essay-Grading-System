digraph "CFG forkotlin.jvm.JvmClassMappingKt.getJavaObjectType(Lkotlin\/reflect\/KClass;)Ljava\/lang\/Class;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\ljava.lang.Class r2 = ((kotlin.jvm.internal.ClassBasedDeclarationContainer) r2).getJClass()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|if (r2.isPrimitive() != false) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|if (r2 == null) goto L_0x0014\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|RETURN\l|return r2\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014}"];
Node_5 [shape=record,label="{5\:\ 0x001b|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type java.lang.Class\<T\>\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|java.lang.String r0 = r2.getName()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|if (r0 != null) goto L_0x0024\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024}"];
Node_9 [shape=record,label="{9\:\ 0x0028|switch(r0.hashCode()) \{\l    case \-1325958191: goto L_0x0084;\l    case 104431: goto L_0x0079;\l    case 3039496: goto L_0x006e;\l    case 3052374: goto L_0x0063;\l    case 3327612: goto L_0x0058;\l    case 3625364: goto L_0x004d;\l    case 64711720: goto L_0x0042;\l    case 97526364: goto L_0x0037;\l    case 109413500: goto L_0x002c;\l    default: goto L_0x002b;\l\}\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c}"];
Node_11 [shape=record,label="{11\:\ 0x0032|if (r0.equals(\"short\") == false) goto L_0x008e\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|java.lang.Class\<java.lang.Short\> r2 = java.lang.Short.class\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037}"];
Node_14 [shape=record,label="{14\:\ 0x003d|if (r0.equals(\"float\") == false) goto L_0x008e\l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|java.lang.Class\<java.lang.Float\> r2 = java.lang.Float.class\l}"];
Node_16 [shape=record,label="{16\:\ 0x0042}"];
Node_17 [shape=record,label="{17\:\ 0x0048|if (r0.equals(\"boolean\") == false) goto L_0x008e\l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|java.lang.Class\<java.lang.Boolean\> r2 = java.lang.Boolean.class\l}"];
Node_19 [shape=record,label="{19\:\ 0x004d}"];
Node_20 [shape=record,label="{20\:\ 0x0053|if (r0.equals(\"void\") == false) goto L_0x008e\l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|java.lang.Class\<java.lang.Void\> r2 = java.lang.Void.class\l}"];
Node_22 [shape=record,label="{22\:\ 0x0058}"];
Node_23 [shape=record,label="{23\:\ 0x005e|if (r0.equals(\"long\") == false) goto L_0x008e\l}"];
Node_24 [shape=record,label="{24\:\ 0x0060|java.lang.Class\<java.lang.Long\> r2 = java.lang.Long.class\l}"];
Node_25 [shape=record,label="{25\:\ 0x0063}"];
Node_26 [shape=record,label="{26\:\ 0x0069|if (r0.equals(\"char\") == false) goto L_0x008e\l}"];
Node_27 [shape=record,label="{27\:\ 0x006b|java.lang.Class\<java.lang.Character\> r2 = java.lang.Character.class\l}"];
Node_28 [shape=record,label="{28\:\ 0x006e}"];
Node_29 [shape=record,label="{29\:\ 0x0074|if (r0.equals(\"byte\") == false) goto L_0x008e\l}"];
Node_30 [shape=record,label="{30\:\ 0x0076|java.lang.Class\<java.lang.Byte\> r2 = java.lang.Byte.class\l}"];
Node_31 [shape=record,label="{31\:\ 0x0079}"];
Node_32 [shape=record,label="{32\:\ 0x007f|if (r0.equals(\"int\") == false) goto L_0x008e\l}"];
Node_33 [shape=record,label="{33\:\ 0x0081|java.lang.Class\<java.lang.Integer\> r2 = java.lang.Integer.class\l}"];
Node_34 [shape=record,label="{34\:\ 0x0084}"];
Node_35 [shape=record,label="{35\:\ 0x008a|if (r0.equals(\"double\") == false) goto L_0x008e\l}"];
Node_36 [shape=record,label="{36\:\ 0x008c|java.lang.Class\<java.lang.Double\> r2 = java.lang.Double.class\l}"];
Node_37 [shape=record,label="{37\:\ 0x008e|PHI: r2 \l  PHI: (r2v3 java.lang.Class) = (r2v2 java.lang.Class), (r2v2 java.lang.Class), (r2v2 java.lang.Class), (r2v5 java.lang.Class), (r2v2 java.lang.Class), (r2v6 java.lang.Class), (r2v2 java.lang.Class), (r2v7 java.lang.Class), (r2v2 java.lang.Class), (r2v8 java.lang.Class), (r2v2 java.lang.Class), (r2v9 java.lang.Class), (r2v2 java.lang.Class), (r2v10 java.lang.Class), (r2v2 java.lang.Class), (r2v11 java.lang.Class), (r2v2 java.lang.Class), (r2v12 java.lang.Class), (r2v2 java.lang.Class), (r2v13 java.lang.Class) binds: [B:7:0x0020, B:9:0x0028, B:35:0x008a, B:36:0x008c, B:32:0x007f, B:33:0x0081, B:29:0x0074, B:30:0x0076, B:26:0x0069, B:27:0x006b, B:23:0x005e, B:24:0x0060, B:20:0x0053, B:21:0x0055, B:17:0x0048, B:18:0x004a, B:14:0x003d, B:15:0x003f, B:11:0x0032, B:12:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == null) goto L_0x0091\l}"];
Node_38 [shape=record,label="{38\:\ 0x0090|RETURN\l|return r2\l}"];
Node_39 [shape=record,label="{39\:\ 0x0091}"];
Node_40 [shape=record,label="{40\:\ 0x0098|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type java.lang.Class\<T\>\")\l}"];
MethodNode[shape=record,label="{public static final java.lang.Class\<T\> kotlin.jvm.JvmClassMappingKt.getJavaObjectType((r2v0 kotlin.reflect.KClass\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/reflect\/KClass\<, TT;\>;), Ljava\/lang\/Class\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_37[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_13;
Node_9 -> Node_16;
Node_9 -> Node_19;
Node_9 -> Node_22;
Node_9 -> Node_25;
Node_9 -> Node_28;
Node_9 -> Node_31;
Node_9 -> Node_34;
Node_9 -> Node_37;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_37;
Node_12 -> Node_37;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_37;
Node_15 -> Node_37;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_37;
Node_18 -> Node_37;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_37;
Node_21 -> Node_37;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_37;
Node_24 -> Node_37;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_37;
Node_27 -> Node_37;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_37;
Node_30 -> Node_37;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_37;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_39 -> Node_40;
}

