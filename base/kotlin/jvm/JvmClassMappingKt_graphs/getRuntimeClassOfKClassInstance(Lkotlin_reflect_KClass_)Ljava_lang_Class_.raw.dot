digraph "CFG forkotlin.jvm.JvmClassMappingKt.getRuntimeClassOfKClassInstance(Lkotlin\/reflect\/KClass;)Ljava\/lang\/Class;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CHECK_CAST  (r1 I:java.lang.Object) = (java.lang.Object) (r1 I:?[OBJECT, ARRAY]) \l0x0007: INVOKE  (r1 I:java.lang.Class) = (r1 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: RETURN  (r1 I:java.lang.Class\<kotlin.reflect.KClass\<T\>\>) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: NEW_INSTANCE  (r1 I:kotlin.TypeCastException) =  kotlin.TypeCastException \l0x0010: CONST_STR  (r0 I:java.lang.String) =  \"null cannot be cast to non\-null type java.lang.Class\<kotlin.reflect.KClass\<T\>\>\" \l0x0012: INVOKE  (r1 I:kotlin.TypeCastException), (r0 I:java.lang.String) kotlin.TypeCastException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Class\<kotlin.reflect.KClass\<T\>\> kotlin.jvm.JvmClassMappingKt.getRuntimeClassOfKClassInstance((r1 I:kotlin.reflect.KClass\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/reflect\/KClass\<, TT;\>;), Ljava\/lang\/Class\<, Lkotlin\/reflect\/KClass\<, TT;\>;\>;]\}], Annotation[BUILD, kotlin.jvm.JvmName, \{name=getRuntimeClassOfKClassInstance\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

