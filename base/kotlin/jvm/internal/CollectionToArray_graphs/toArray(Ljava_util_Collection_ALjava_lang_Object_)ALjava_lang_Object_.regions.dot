digraph "CFG forkotlin.jvm.internal.CollectionToArray.toArray(Ljava\/util\/Collection;[Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
subgraph cluster_Region_1457181030 {
label = "R(2:0|(2:2|(2:7|(2:(1:14)(2:15|(1:17)(1:37))|(3:18|(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29)))(1:(1:(2:(2:33|52)|(2:34|46)))(0))|35))(1:(1:49)(2:11|50)))(1:(1:47)(2:6|48)))(1:39)) | DECL_VAR: java.lang.Object[] null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"collection\")\l}"];
subgraph cluster_IfRegion_2028869139 {
label = "IF [B:1:0x0005] THEN: R(2:2|(2:7|(2:(1:14)(2:15|(1:17)(1:37))|(3:18|(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29)))(1:(1:(2:(2:33|52)|(2:34|46)))(0))|35))(1:(1:49)(2:11|50)))(1:(1:47)(2:6|48))) ELSE: R(1:39)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r6 != null) goto L_0x0007\l}"];
subgraph cluster_Region_383627143 {
label = "R(2:2|(2:7|(2:(1:14)(2:15|(1:17)(1:37))|(3:18|(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29)))(1:(1:(2:(2:33|52)|(2:34|46)))(0))|35))(1:(1:49)(2:11|50)))(1:(1:47)(2:6|48)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|int int r0 = r5.size()\lint r2 = 0\l}"];
subgraph cluster_IfRegion_997434174 {
label = "IF [B:3:0x000d] THEN: R(2:7|(2:(1:14)(2:15|(1:17)(1:37))|(3:18|(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29)))(1:(1:(2:(2:33|52)|(2:34|46)))(0))|35))(1:(1:49)(2:11|50))) ELSE: R(1:(1:47)(2:6|48))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r0 != 0) goto L_0x0016\l}"];
subgraph cluster_Region_856904011 {
label = "R(2:7|(2:(1:14)(2:15|(1:17)(1:37))|(3:18|(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29)))(1:(1:(2:(2:33|52)|(2:34|46)))(0))|35))(1:(1:49)(2:11|50)))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0016|java.util.Iterator java.util.Iterator\<?\> r5 = r5.iterator()\l}"];
subgraph cluster_IfRegion_237286236 {
label = "IF [B:8:0x001e] THEN: R(2:(1:14)(2:15|(1:17)(1:37))|(3:18|(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29)))(1:(1:(2:(2:33|52)|(2:34|46)))(0))|35)) ELSE: R(1:(1:49)(2:11|50))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|if (r5.hasNext() != false) goto L_0x0026\l}"];
subgraph cluster_Region_84591984 {
label = "R(2:(1:14)(2:15|(1:17)(1:37))|(3:18|(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29)))(1:(1:(2:(2:33|52)|(2:34|46)))(0))|35))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1748678171 {
label = "IF [B:13:0x0027] THEN: R(1:14) ELSE: R(2:15|(1:17)(1:37))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0027|if (r0 \<= r6.length) goto L_0x0029\l}"];
subgraph cluster_Region_282186888 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0029|r0 = r6\l}"];
}
subgraph cluster_Region_1854230861 {
label = "R(2:15|(1:17)(1:37))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002b|java.lang.Object java.lang.Object r0 = java.lang.reflect.Array.newInstance(r6.getClass().getComponentType(), r0)\l}"];
subgraph cluster_IfRegion_930980738 {
label = "IF [B:16:0x0037] THEN: R(1:17) ELSE: R(1:37)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0037|if (r0 != null) goto L_0x0039\l}"];
subgraph cluster_Region_649063493 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0039|java.lang.Object[] r0 = (java.lang.Object[]) r0\l}"];
}
subgraph cluster_Region_1004816389 {
label = "R(1:37)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0090|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.Array\<kotlin.Any?\>\")\l}"];
}
}
}
}
subgraph cluster_LoopRegion_1001783294 {
label = "LOOP:0: (3:18|(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29)))(1:(1:(2:(2:33|52)|(2:34|46)))(0))|35)";
node [shape=record,color=blue];
subgraph cluster_Region_358574733 {
label = "R(3:18|(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29)))(1:(1:(2:(2:33|52)|(2:34|46)))(0))|35)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x003b|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v3 java.lang.Object[]) = (r0v2 java.lang.Object[]), (r0v4 java.lang.Object[]) binds: [B:45:0x003b, B:35:0x0087] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:45:0x003b, B:35:0x0087] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:18:0x003b\-\>B:35:0x0087\l|int int r3 = r2 + 1\lr0[r2] = r5.next()\l}"];
subgraph cluster_IfRegion_1611307336 {
label = "IF [B:19:0x0044] THEN: R(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29))) ELSE: R(1:(1:(2:(2:33|52)|(2:34|46)))(0))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0044|if (r3 \>= r0.length) goto L_0x0046\l}"];
subgraph cluster_Region_862136341 {
label = "R(1:(2:(1:51)|(3:23|(1:(1:26)(1:28))|29)))";
node [shape=record,color=blue];
subgraph cluster_Region_1611749964 {
label = "R(2:(1:51)|(3:23|(1:(1:26)(1:28))|29))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1248826604 {
label = "IF [B:21:0x004a] THEN: R(1:51) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x004a|if (r5.hasNext() == false) goto L_0x004c\l}"];
subgraph cluster_Region_2041348651 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_230297853 {
label = "R(3:23|(1:(1:26)(1:28))|29)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x004e|int int r2 = ((r3 * 3) + 1) \>\>\> 1\l}"];
subgraph cluster_IfRegion_1030373452 {
label = "IF [B:24:0x0057] THEN: R(1:(1:26)(1:28)) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0057|if (r2 \<= r3) goto L_0x0059\l}"];
subgraph cluster_Region_1836243183 {
label = "R(1:(1:26)(1:28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1694391904 {
label = "IF [B:25:0x0059] THEN: R(1:26) ELSE: R(1:28)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0059|if (r3 \< MAX_SIZE) goto L_0x005b\l}"];
subgraph cluster_Region_560391312 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x005b|r2 = MAX_SIZE\l}"];
}
subgraph cluster_Region_1207662292 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0066|throw new java.lang.OutOfMemoryError()\l}"];
}
}
}
}
Node_29 [shape=record,label="{29\:\ 0x0067|PHI: r2 \l  PHI: (r2v9 int) = (r2v8 int), (r2v11 int) binds: [B:24:0x0057, B:26:0x005b] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object[] r0 = java.util.Arrays.copyOf(r0, r2)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r0, \"Arrays.copyOf(result, newSize)\")\l}"];
}
}
}
subgraph cluster_Region_760387421 {
label = "R(1:(1:(2:(2:33|52)|(2:34|46)))(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_613057582 {
label = "IF [B:31:0x0075] THEN: R(1:(2:(2:33|52)|(2:34|46))) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0075|if (r5.hasNext() == false) goto L_0x0077\l}"];
subgraph cluster_Region_812836102 {
label = "R(1:(2:(2:33|52)|(2:34|46)))";
node [shape=record,color=blue];
subgraph cluster_Region_1262286407 {
label = "R(2:(2:33|52)|(2:34|46))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1466790946 {
label = "IF [B:32:0x0077] THEN: R(2:33|52) ELSE: null";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x0077|if (r0 == r6) goto L_0x0079\l}"];
subgraph cluster_Region_2056627171 {
label = "R(2:33|52)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0079|r6[r3] = null\l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|return r6\l}"];
}
}
subgraph cluster_Region_1323410720 {
label = "R(2:34|46)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x007c|java.lang.Object[] java.lang.Object[] r5 = java.util.Arrays.copyOf(r0, r3)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r5, \"Arrays.copyOf(result, size)\")\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r5\l}"];
}
}
}
subgraph cluster_Region_1857878509 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_35 [shape=record,label="{35\:\ 0x0087|LOOP_END\lPHI: r0 \l  PHI: (r0v4 java.lang.Object[]) = (r0v3 java.lang.Object[]), (r0v5 java.lang.Object[]) binds: [B:44:0x0087, B:43:0x0087] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:18:0x003b\-\>B:35:0x0087\l|r2 = r3\l}"];
}
}
}
subgraph cluster_Region_1229024233 {
label = "R(1:(1:49)(2:11|50)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1709384264 {
label = "IF [B:10:0x0021] THEN: R(1:49) ELSE: R(2:11|50) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0021|if (r6.length \<= 0) goto L_?\l}"];
subgraph cluster_Region_1502840498 {
label = "R(1:49)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return r6\l}"];
}
subgraph cluster_Region_1357479932 {
label = "R(2:11|50)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0023|r6[0] = null\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|return r6\l}"];
}
}
}
}
}
subgraph cluster_Region_313874475 {
label = "R(1:(1:47)(2:6|48)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1849219415 {
label = "IF [B:5:0x0010] THEN: R(1:47) ELSE: R(2:6|48) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r6.length \<= 0) goto L_?\l}"];
subgraph cluster_Region_735802420 {
label = "R(1:47)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return r6\l}"];
}
subgraph cluster_Region_811001900 {
label = "R(2:6|48)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|r6[0] = null\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\l|return r6\l}"];
}
}
}
}
}
subgraph cluster_Region_135961101 {
label = "R(1:39)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ 0x0098|throw new java.lang.NullPointerException()\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x000f}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0020}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0026}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0046}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x004c}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x005f}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0071}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0089}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0091}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x0077|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x005f|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x004c|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0087|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0087|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x003b|SYNTHETIC\lPHI: r0 \l  PHI: (r0v2 java.lang.Object[]) = (r0v7 java.lang.Object[]), (r0v8 java.lang.Object[]) binds: [B:17:0x0039, B:14:0x0029] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray((r5v0 java.util.Collection\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, *\>;[, Ljava\/lang\/Object;, )[, Ljava\/lang\/Object;]\}], Annotation[BUILD, kotlin.jvm.JvmName, \{name=toArray\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_38[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_45;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_36[style=dashed];
Node_17 -> Node_45;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_30[style=dashed];
Node_21 -> Node_23[style=dashed];
Node_21 -> Node_42;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_29[style=dashed];
Node_25 -> Node_26;
Node_25 -> Node_41[style=dashed];
Node_26 -> Node_29;
Node_29 -> Node_43;
Node_31 -> Node_40;
Node_31 -> Node_44[style=dashed];
Node_32 -> Node_33;
Node_32 -> Node_34[style=dashed];
Node_33 -> Node_52;
Node_34 -> Node_46;
Node_35 -> Node_18;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_49;
Node_11 -> Node_50;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_47;
Node_6 -> Node_48;
Node_4 -> Node_5;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_20 -> Node_21;
Node_22 -> Node_51;
Node_27 -> Node_28;
Node_30 -> Node_31;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_40 -> Node_32;
Node_41 -> Node_27;
Node_42 -> Node_22;
Node_43 -> Node_35;
Node_44 -> Node_35;
Node_45 -> Node_18;
}

