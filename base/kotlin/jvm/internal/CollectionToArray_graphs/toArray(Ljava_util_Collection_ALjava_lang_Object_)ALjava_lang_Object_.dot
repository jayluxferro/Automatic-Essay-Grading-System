digraph "CFG forkotlin.jvm.internal.CollectionToArray.toArray(Ljava\/util\/Collection;[Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"collection\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r6 == null) goto L_0x0091\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|int r0 = r5.size()\lr2 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r0 != 0) goto L_0x0016\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r6.length \<= 0) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|r6[0] = null\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|java.util.Iterator r5 = r5.iterator()\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|if (r5.hasNext() != false) goto L_0x0026\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020}"];
Node_10 [shape=record,label="{10\:\ 0x0021|if (r6.length \<= 0) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|r6[0] = null\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026}"];
Node_13 [shape=record,label="{13\:\ 0x0027|if (r0 \> r6.length) goto L_0x002b\l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|r0 = r6\l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|java.lang.Object r0 = java.lang.reflect.Array.newInstance(r6.getClass().getComponentType(), r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|if (r0 == null) goto L_0x0089\l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|java.lang.Object[] r0 = (java.lang.Object[]) r0\l}"];
Node_18 [shape=record,label="{18\:\ 0x003b|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v3 java.lang.Object[]) = (r0v2 java.lang.Object[]), (r0v4 java.lang.Object[]) binds: [B:45:0x003b, B:35:0x0087] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:45:0x003b, B:35:0x0087] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:18:0x003b\-\>B:35:0x0087\l|int r3 = r2 + 1\lr0[r2] = r5.next()\l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|if (r3 \< r0.length) goto L_0x0071\l}"];
Node_20 [shape=record,label="{20\:\ 0x0046}"];
Node_21 [shape=record,label="{21\:\ 0x004a|if (r5.hasNext() != false) goto L_0x004e\l}"];
Node_22 [shape=record,label="{22\:\ 0x004c}"];
Node_23 [shape=record,label="{23\:\ 0x004e|int r2 = ((r3 * 3) + 1) \>\>\> 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0057|if (r2 \> r3) goto L_0x0067\l}"];
Node_25 [shape=record,label="{25\:\ 0x0059|if (r3 \>= MAX_SIZE) goto L_0x005f\l}"];
Node_26 [shape=record,label="{26\:\ 0x005b|r2 = MAX_SIZE\l}"];
Node_27 [shape=record,label="{27\:\ 0x005f}"];
Node_28 [shape=record,label="{28\:\ 0x0066|throw new java.lang.OutOfMemoryError()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0067|PHI: r2 \l  PHI: (r2v9 int) = (r2v8 int), (r2v11 int) binds: [B:24:0x0057, B:26:0x005b] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object[] r0 = java.util.Arrays.copyOf(r0, r2)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r0, \"Arrays.copyOf(result, newSize)\")\l}"];
Node_30 [shape=record,label="{30\:\ 0x0071}"];
Node_31 [shape=record,label="{31\:\ 0x0075|if (r5.hasNext() != false) goto L_0x0087\l}"];
Node_32 [shape=record,label="{32\:\ 0x0077|if (r0 != r6) goto L_0x007c\l}"];
Node_33 [shape=record,label="{33\:\ 0x0079|r6[r3] = null\l}"];
Node_34 [shape=record,label="{34\:\ 0x007c|java.lang.Object[] r5 = java.util.Arrays.copyOf(r0, r3)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r5, \"Arrays.copyOf(result, size)\")\l}"];
Node_35 [shape=record,label="{35\:\ 0x0087|LOOP_END\lPHI: r0 \l  PHI: (r0v4 java.lang.Object[]) = (r0v3 java.lang.Object[]), (r0v5 java.lang.Object[]) binds: [B:44:0x0087, B:43:0x0087] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:18:0x003b\-\>B:35:0x0087\l|r2 = r3\l}"];
Node_36 [shape=record,label="{36\:\ 0x0089}"];
Node_37 [shape=record,label="{37\:\ 0x0090|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.Array\<kotlin.Any?\>\")\l}"];
Node_38 [shape=record,label="{38\:\ 0x0091}"];
Node_39 [shape=record,label="{39\:\ 0x0098|throw new java.lang.NullPointerException()\l}"];
Node_40 [shape=record,label="{40\:\ 0x0077|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x005f|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x004c|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0087|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0087|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x003b|SYNTHETIC\lPHI: r0 \l  PHI: (r0v2 java.lang.Object[]) = (r0v7 java.lang.Object[]), (r0v8 java.lang.Object[]) binds: [B:17:0x0039, B:14:0x0029] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r5\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return r6\l}"];
Node_48 [shape=record,label="{48\:\ ?|SYNTHETIC\lRETURN\l|return r6\l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lRETURN\l|return r6\l}"];
Node_50 [shape=record,label="{50\:\ ?|SYNTHETIC\lRETURN\l|return r6\l}"];
Node_51 [shape=record,label="{51\:\ ?|SYNTHETIC\lRETURN\l|return r0\l}"];
Node_52 [shape=record,label="{52\:\ ?|SYNTHETIC\lRETURN\l|return r6\l}"];
MethodNode[shape=record,label="{public static final java.lang.Object[] kotlin.jvm.internal.CollectionToArray.toArray((r5v0 java.util.Collection\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, *\>;[, Ljava\/lang\/Object;, )[, Ljava\/lang\/Object;]\}], Annotation[BUILD, kotlin.jvm.JvmName, \{name=toArray\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_38;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_47;
Node_6 -> Node_48;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_49;
Node_11 -> Node_50;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_45;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_36;
Node_17 -> Node_45;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_30;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_42[style=dashed];
Node_22 -> Node_51;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_29;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_41;
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_29 -> Node_43;
Node_30 -> Node_31;
Node_31 -> Node_40[style=dashed];
Node_31 -> Node_44;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_52;
Node_34 -> Node_46;
Node_35 -> Node_18;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_40 -> Node_32;
Node_41 -> Node_27;
Node_42 -> Node_22;
Node_43 -> Node_35;
Node_44 -> Node_35;
Node_45 -> Node_18;
}

