digraph "CFG forkotlin.jvm.internal.PrimitiveSpreadBuilder.size()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r5.size \- 1\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r0 \< 0) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r3 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v2 int) = (r2v0 int), (r2v3 int) binds: [B:2:0x0007, B:9:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:2:0x0007, B:9:0x0017] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0008\-\>B:9:0x0017\l|r4 = r5.spreads[r3]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r4 == null) goto L_0x0013\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|int r4 = getSize(r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|r4 = 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|PHI: r4 \l  PHI: (r4v2 int) = (r4v3 int), (r4v4 int) binds: [B:6:0x0013, B:5:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = r2 + r4\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|if (r3 == r0) goto L_0x001a\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|LOOP_END\lLOOP:0: B:3:0x0008\-\>B:9:0x0017\l|int r3 = r3 + 1\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|RETURN\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:1:0x0005, B:11:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|return r2\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected final int kotlin.jvm.internal.PrimitiveSpreadBuilder.size((r5v0 'this' kotlin.jvm.internal.PrimitiveSpreadBuilder A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_3;
Node_11 -> Node_10;
}

