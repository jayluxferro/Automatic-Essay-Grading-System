digraph "CFG forkotlin.jvm.internal.TypeIntrinsics.castToMapEntry(Ljava\/lang\/Object;)Ljava\/util\/Map$Entry;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ ClassCastException \-\> 0x0003 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|0x0002: RETURN  (r0 I:java.util.Map$Entry) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|ExcHandler: ClassCastException null\lSplitter:B:0:0x0000\l|0x0003: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_4 [shape=record,label="{4\:\ 0x0004|0x0004: INVOKE  (r0 I:java.lang.ClassCastException) = (r0 I:java.lang.ClassCastException) kotlin.jvm.internal.TypeIntrinsics.throwCce(java.lang.ClassCastException):java.lang.ClassCastException type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static java.util.Map$Entry kotlin.jvm.internal.TypeIntrinsics.castToMapEntry((r0 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

