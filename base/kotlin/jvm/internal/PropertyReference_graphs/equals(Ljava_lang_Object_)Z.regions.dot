digraph "CFG forkotlin.jvm.internal.PropertyReference.equals(Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_401959787 {
label = "R(1:(2:(1:2)|(1:(2:5|(2:(1:13)|(1:19)))(1:(1:17)(1:18)))))";
node [shape=record,color=blue];
subgraph cluster_Region_216144864 {
label = "R(2:(1:2)|(1:(2:5|(2:(1:13)|(1:19)))(1:(1:17)(1:18))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1043445202 {
label = "IF [B:1:0x0001] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r5 == r4) goto L_0x0003\l}"];
subgraph cluster_Region_522628157 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_599011969 {
label = "R(1:(2:5|(2:(1:13)|(1:19)))(1:(1:17)(1:18)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1066733580 {
label = "IF [B:4:0x0007] THEN: R(2:5|(2:(1:13)|(1:19))) ELSE: R(1:(1:17)(1:18))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0007|if ((r5 instanceof kotlin.jvm.internal.PropertyReference) == true) goto L_0x0009\l}"];
subgraph cluster_Region_546539622 {
label = "R(2:5|(2:(1:13)|(1:19)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|kotlin.jvm.internal.PropertyReference kotlin.jvm.internal.PropertyReference r5 = (kotlin.jvm.internal.PropertyReference) r5\l}"];
subgraph cluster_Region_213495049 {
label = "R(2:(1:13)|(1:19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_295143129 {
label = "IF [B:6:0x0017, B:8:0x0025, B:10:0x0033, B:12:0x0041] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|if (getOwner().equals(r5.getOwner()) == false) goto L_0x0044\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|ADDED_TO_REGION\l|if (getName().equals(r5.getName()) == false) goto L_0x0044\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|ADDED_TO_REGION\l|if (getSignature().equals(r5.getSignature()) == false) goto L_0x0044\l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|ADDED_TO_REGION\l|if (kotlin.jvm.internal.Intrinsics.areEqual(getBoundReceiver(), r5.getBoundReceiver()) == false) goto L_0x0044\l}"];
subgraph cluster_Region_651476967 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0044|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_611758470 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
subgraph cluster_Region_871682164 {
label = "R(1:(1:17)(1:18)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1919218406 {
label = "IF [B:15:0x0048] THEN: R(1:17) ELSE: R(1:18) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0048|if ((r5 instanceof kotlin.reflect.KProperty) == true) goto L_0x004a\l}"];
subgraph cluster_Region_1900822730 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0052|RETURN\l|return r5.equals(compute())\l}"];
}
subgraph cluster_Region_1613178340 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0053|RETURN\l|return false\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0004}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0027}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0035}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0046}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x004a}"];
MethodNode[shape=record,label="{public boolean kotlin.jvm.internal.PropertyReference.equals((r4v0 'this' kotlin.jvm.internal.PropertyReference A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_14[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_12 -> Node_13;
Node_12 -> Node_19[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_18[style=dashed];
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

