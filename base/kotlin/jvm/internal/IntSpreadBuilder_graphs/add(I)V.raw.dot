digraph "CFG forkotlin.jvm.internal.IntSpreadBuilder.add(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int[]) = (r3 I:kotlin.jvm.internal.IntSpreadBuilder) kotlin.jvm.internal.IntSpreadBuilder.values int[] \l0x0002: INVOKE  (r1 I:int) = (r3 I:kotlin.jvm.internal.IntSpreadBuilder) kotlin.jvm.internal.IntSpreadBuilder.getPosition():int type: VIRTUAL \l0x0006: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x0008: INVOKE  (r3 I:kotlin.jvm.internal.IntSpreadBuilder), (r2 I:int) kotlin.jvm.internal.IntSpreadBuilder.setPosition(int):void type: VIRTUAL \l0x000b: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{public final void kotlin.jvm.internal.IntSpreadBuilder.add((r3 'this' I:kotlin.jvm.internal.IntSpreadBuilder A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

