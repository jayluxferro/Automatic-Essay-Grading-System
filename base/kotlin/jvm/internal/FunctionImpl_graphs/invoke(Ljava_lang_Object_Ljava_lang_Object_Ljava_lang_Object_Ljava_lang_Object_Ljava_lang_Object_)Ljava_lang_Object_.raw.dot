digraph "CFG forkotlin.jvm.internal.FunctionImpl.invoke(Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0001: INVOKE  (r2 I:kotlin.jvm.internal.FunctionImpl), (r0 I:int) kotlin.jvm.internal.FunctionImpl.checkArity(int):void type: DIRECT \l0x0004: NEW_ARRAY  (r0 I:java.lang.Object[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0009: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x000c: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000d: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x000f: CONST  (r3 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0010: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r6 I:?[OBJECT, ARRAY])\l \l0x0012: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0013: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r7 I:?[OBJECT, ARRAY])\l \l0x0015: INVOKE  (r3 I:java.lang.Object) = \l  (r2 I:kotlin.jvm.internal.FunctionImpl)\l  (r0 I:java.lang.Object[])\l kotlin.jvm.internal.FunctionImpl.invokeVararg(java.lang.Object[]):java.lang.Object type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: RETURN  (r3 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlin.jvm.internal.FunctionImpl.invoke((r2 'this' I:kotlin.jvm.internal.FunctionImpl A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

