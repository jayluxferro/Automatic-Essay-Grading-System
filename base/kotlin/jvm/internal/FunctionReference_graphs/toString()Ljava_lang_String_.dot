digraph "CFG forkotlin.jvm.internal.FunctionReference.toString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.reflect.KCallable r0 = compute()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 == r2) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return r0.toString()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if (\"\<init\>\".equals(getName()) == false) goto L_0x001a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|SYNTHETIC\lRETURN\l|return \"constructor (Kotlin reflection is not available)\"\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"function \")\lr0.append(getName())\lr0.append(\" (Kotlin reflection is not available)\")\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0.toString()\l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.jvm.internal.FunctionReference.toString((r2v0 'this' kotlin.jvm.internal.FunctionReference A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
}

