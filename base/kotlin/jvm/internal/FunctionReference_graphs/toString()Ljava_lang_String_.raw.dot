digraph "CFG forkotlin.jvm.internal.FunctionReference.toString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:kotlin.reflect.KCallable) = (r2 I:kotlin.jvm.internal.FunctionReference) kotlin.jvm.internal.FunctionReference.compute():kotlin.reflect.KCallable type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Object) java.lang.Object.toString():java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r0 I:java.lang.String) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST_STR  (r0 I:java.lang.String) =  \"\<init\>\" \l0x000d: INVOKE  (r1 I:java.lang.String) = (r2 I:kotlin.jvm.internal.FunctionReference) kotlin.jvm.internal.FunctionReference.getName():java.lang.String type: VIRTUAL \l0x0011: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: CONST_STR  (r0 I:java.lang.String) =  \"constructor (Kotlin reflection is not available)\" \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001c: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001f: CONST_STR  (r1 I:java.lang.String) =  \"function \" \l0x0021: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0024: INVOKE  (r1 I:java.lang.String) = (r2 I:kotlin.jvm.internal.FunctionReference) kotlin.jvm.internal.FunctionReference.getName():java.lang.String type: VIRTUAL \l0x0028: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002b: CONST_STR  (r1 I:java.lang.String) =  \" (Kotlin reflection is not available)\" \l0x002d: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0030: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.jvm.internal.FunctionReference.toString((r2 'this' I:kotlin.jvm.internal.FunctionReference A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
}

