digraph "CFG forkotlin.jvm.internal.MagicApiIntrinsics.anyMagicApiCall(ILjava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;Ljava\/lang\/Object;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: RETURN  (r0 I:T) \l}"];
MethodNode[shape=record,label="{public static T kotlin.jvm.internal.MagicApiIntrinsics.anyMagicApiCall((r0 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(I, Ljava\/lang\/Object;, Ljava\/lang\/Object;, Ljava\/lang\/Object;, Ljava\/lang\/Object;, )TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

