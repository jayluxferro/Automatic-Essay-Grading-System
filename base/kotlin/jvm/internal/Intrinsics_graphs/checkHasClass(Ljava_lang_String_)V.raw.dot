digraph "CFG forkotlin.jvm.internal.Intrinsics.checkHasClass(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (47 ?[int, float, short, byte, char]) \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l0x0004: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r0 I:char), (r1 I:char) java.lang.String.replace(char, char):java.lang.String type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0008\l|0x0008: INVOKE  (r4 I:java.lang.String) java.lang.Class.forName(java.lang.String):java.lang.Class type: STATIC A[Catch:\{ ClassNotFoundException \-\> 0x000c \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|ExcHandler: ClassNotFoundException null\lSplitter:B:1:0x0008\l|0x000c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: NEW_INSTANCE  (r1 I:java.lang.ClassNotFoundException) =  java.lang.ClassNotFoundException \l0x000f: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0014: CONST_STR  (r3 I:java.lang.String) =  \"Class \" \l0x0016: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: INVOKE  (r2 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001c: CONST_STR  (r4 I:java.lang.String) =  \" is not found. Please update the Kotlin runtime to the latest version\" \l0x001e: INVOKE  (r2 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0021: INVOKE  (r4 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0025: INVOKE  \l  (r1 I:java.lang.ClassNotFoundException)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.lang.ClassNotFoundException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l0x0028: INVOKE  (r4 I:java.lang.Throwable) = (r1 I:java.lang.Throwable) kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable):java.lang.Throwable type: STATIC \l0x002c: CHECK_CAST  (r4 I:java.lang.ClassNotFoundException) = (java.lang.ClassNotFoundException) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void kotlin.jvm.internal.Intrinsics.checkHasClass((r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.ClassNotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

