digraph "CFG forkotlin.jvm.internal.Intrinsics.sanitizeStackTrace(Ljava\/lang\/Throwable;)Ljava\/lang\/Throwable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<kotlin.jvm.internal.Intrinsics\>) =  kotlin.jvm.internal.Intrinsics.class \l0x0002: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l0x0006: INVOKE  (r1 I:java.lang.Throwable) = (r1 I:java.lang.Throwable), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.sanitizeStackTrace(java.lang.Throwable, java.lang.String):java.lang.Throwable type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN  (r1 I:T) \l}"];
MethodNode[shape=record,label="{private static T kotlin.jvm.internal.Intrinsics.sanitizeStackTrace((r1 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Throwable;, \>(TT;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

