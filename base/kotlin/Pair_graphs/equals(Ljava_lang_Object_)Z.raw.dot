digraph "CFG forkotlin.Pair.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001f \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INSTANCE_OF  (r0 I:boolean) = (r3 I:?[OBJECT, ARRAY]) kotlin.Pair \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: CHECK_CAST  (r3 I:kotlin.Pair) = (kotlin.Pair) (r3 I:?[OBJECT, ARRAY]) \l0x0008: IGET  (r0 I:A) = (r2 I:kotlin.Pair) kotlin.Pair.first java.lang.Object \l0x000a: IGET  (r1 I:A) = (r3 I:kotlin.Pair) kotlin.Pair.first java.lang.Object \l0x000c: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Object), (r1 I:java.lang.Object) kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IGET  (r0 I:B) = (r2 I:kotlin.Pair) kotlin.Pair.second java.lang.Object \l0x0014: IGET  (r3 I:B) = (r3 I:kotlin.Pair) kotlin.Pair.second java.lang.Object \l0x0016: INVOKE  (r3 I:boolean) = (r0 I:java.lang.Object), (r3 I:java.lang.Object) kotlin.jvm.internal.Intrinsics.areEqual(java.lang.Object, java.lang.Object):boolean type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: RETURN  (r3 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlin.Pair.equals((r2 'this' I:kotlin.Pair A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
}

