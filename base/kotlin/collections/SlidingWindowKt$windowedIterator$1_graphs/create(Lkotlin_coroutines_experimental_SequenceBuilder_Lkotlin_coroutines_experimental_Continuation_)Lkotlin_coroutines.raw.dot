digraph "CFG forkotlin.collections.SlidingWindowKt$windowedIterator$1.create(Lkotlin\/coroutines\/experimental\/SequenceBuilder;Lkotlin\/coroutines\/experimental\/Continuation;)Lkotlin\/coroutines\/experimental\/Continuation;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r9 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"continuation\" \l0x0007: INVOKE  (r10 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: NEW_INSTANCE  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1) =  kotlin.collections.SlidingWindowKt$windowedIterator$1 \l0x000c: IGET  (r2 I:int) = \l  (r8 I:kotlin.collections.SlidingWindowKt$windowedIterator$1)\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$step int \l0x000e: IGET  (r3 I:int) = \l  (r8 I:kotlin.collections.SlidingWindowKt$windowedIterator$1)\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$size int \l0x0010: IGET  (r4 I:java.util.Iterator) = \l  (r8 I:kotlin.collections.SlidingWindowKt$windowedIterator$1)\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$iterator java.util.Iterator \l0x0012: IGET  (r5 I:boolean) = \l  (r8 I:kotlin.collections.SlidingWindowKt$windowedIterator$1)\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$reuseBuffer boolean \l0x0014: IGET  (r6 I:boolean) = \l  (r8 I:kotlin.collections.SlidingWindowKt$windowedIterator$1)\l kotlin.collections.SlidingWindowKt$windowedIterator$1.$partialWindows boolean \l0x0016: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0017: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  \l  (r1 I:kotlin.collections.SlidingWindowKt$windowedIterator$1)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:java.util.Iterator)\l  (r5 I:boolean)\l  (r6 I:boolean)\l  (r7 I:kotlin.coroutines.experimental.Continuation)\l kotlin.collections.SlidingWindowKt$windowedIterator$1.\<init\>(int, int, java.util.Iterator, boolean, boolean, kotlin.coroutines.experimental.Continuation):void type: DIRECT \l0x001b: IPUT  \l  (r9 I:kotlin.coroutines.experimental.SequenceBuilder)\l  (r0 I:kotlin.collections.SlidingWindowKt$windowedIterator$1)\l kotlin.collections.SlidingWindowKt$windowedIterator$1.p$ kotlin.coroutines.experimental.SequenceBuilder \l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|0x001d: RETURN  \l  (r0 I:kotlin.coroutines.experimental.Continuation\<kotlin.Unit\>)\l \l}"];
MethodNode[shape=record,label="{public final kotlin.coroutines.experimental.Continuation\<kotlin.Unit\> kotlin.collections.SlidingWindowKt$windowedIterator$1.create((r8 'this' I:kotlin.collections.SlidingWindowKt$windowedIterator$1 A[IMMUTABLE_TYPE, THIS]), (r9 I:kotlin.coroutines.experimental.SequenceBuilder\<? super java.util.List\<? extends T\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.coroutines.experimental.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lkotlin\/coroutines\/experimental\/SequenceBuilder\<, \-, Ljava\/util\/List\<, +TT;\>;\>;, Lkotlin\/coroutines\/experimental\/Continuation\<, \-, Lkotlin\/Unit;, \>;), Lkotlin\/coroutines\/experimental\/Continuation\<, Lkotlin\/Unit;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

