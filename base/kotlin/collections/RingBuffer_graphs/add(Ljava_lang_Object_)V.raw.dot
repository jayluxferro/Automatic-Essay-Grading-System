digraph "CFG forkotlin.collections.RingBuffer.add(Ljava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r3 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.isFull():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:java.lang.Object[]) = (r3 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.buffer java.lang.Object[] \l0x0008: IGET  (r1 I:int) = (r3 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.startIndex int \l0x000a: INVOKE  (r2 I:int) = (r3 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.size():int type: VIRTUAL \l0x000e: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x000f: INVOKE  (r2 I:int) = (r3 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.getCapacity():int type: VIRTUAL \l0x0013: ARITH  (r1 I:int) = (r1 I:int) % (r2 I:int) \l0x0014: APUT  \l  (r0 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l0x0016: INVOKE  (r4 I:int) = (r3 I:kotlin.collections.RingBuffer) kotlin.collections.RingBuffer.size():int type: VIRTUAL \l0x001a: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x001c: INVOKE  (r3 I:kotlin.collections.RingBuffer), (r4 I:int) kotlin.collections.RingBuffer.setSize(int):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: NEW_INSTANCE  (r4 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0022: CONST_STR  (r0 I:java.lang.String) =  \"ring buffer is full\" \l0x0024: INVOKE  \l  (r4 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l0x0027: CHECK_CAST  (r4 I:java.lang.Throwable) = (java.lang.Throwable) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final void kotlin.collections.RingBuffer.add((r3 'this' I:kotlin.collections.RingBuffer A[IMMUTABLE_TYPE, THIS]), (r4 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

