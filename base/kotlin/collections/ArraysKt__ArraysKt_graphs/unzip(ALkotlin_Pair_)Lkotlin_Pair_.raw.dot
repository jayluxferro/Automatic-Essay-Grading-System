digraph "CFG forkotlin.collections.ArraysKt__ArraysKt.unzip([Lkotlin\/Pair;)Lkotlin\/Pair;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0007: ARRAY_LENGTH  (r1 I:int) = (r6 I:?[]) \l0x0008: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x000b: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x000d: ARRAY_LENGTH  (r2 I:int) = (r6 I:?[]) \l0x000e: INVOKE  (r1 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0011: ARRAY_LENGTH  (r2 I:int) = (r6 I:?[]) \l0x0012: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:3:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: AGET  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0017: INVOKE  (r5 I:java.lang.Object) = (r4 I:kotlin.Pair) kotlin.Pair.getFirst():java.lang.Object type: VIRTUAL \l0x001b: INVOKE  (r0 I:java.util.ArrayList), (r5 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x001e: INVOKE  (r4 I:java.lang.Object) = (r4 I:kotlin.Pair) kotlin.Pair.getSecond():java.lang.Object type: VIRTUAL \l0x0022: INVOKE  (r1 I:java.util.ArrayList), (r4 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0025: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|0x0028: INVOKE  (r6 I:kotlin.Pair) = (r0 I:java.lang.Object), (r1 I:java.lang.Object) kotlin.TuplesKt.to(java.lang.Object, java.lang.Object):kotlin.Pair type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: RETURN  (r6 I:kotlin.Pair\<java.util.List\<T\>, java.util.List\<R\>\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.Pair\<java.util.List\<T\>, java.util.List\<R\>\> kotlin.collections.ArraysKt__ArraysKt.unzip((r6 I:kotlin.Pair\<? extends T, ? extends R\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, \>([, Lkotlin\/Pair\<, +TT;+TR;\>;), Lkotlin\/Pair\<, Ljava\/util\/List\<, TT;\>;, Ljava\/util\/List\<, TR;\>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
}

