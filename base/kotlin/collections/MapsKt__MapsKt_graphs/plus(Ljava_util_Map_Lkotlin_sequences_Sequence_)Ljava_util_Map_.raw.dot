digraph "CFG forkotlin.collections.MapsKt__MapsKt.plus(Ljava\/util\/Map;Lkotlin\/sequences\/Sequence;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"pairs\" \l0x0007: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: NEW_INSTANCE  (r0 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x000c: INVOKE  (r0 I:java.util.LinkedHashMap), (r1 I:java.util.Map) java.util.LinkedHashMap.\<init\>(java.util.Map):void type: DIRECT \l0x000f: CHECK_CAST  (r0 I:java.util.Map) = (java.util.Map) (r0 I:?[OBJECT, ARRAY]) \l0x0011: INVOKE  (r0 I:java.util.Map), (r2 I:kotlin.sequences.Sequence) kotlin.collections.MapsKt.putAll(java.util.Map, kotlin.sequences.Sequence):void type: STATIC \l0x0014: INVOKE  (r1 I:java.util.Map) = (r0 I:java.util.Map) kotlin.collections.MapsKt.optimizeReadOnlyMap(java.util.Map):java.util.Map type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN  (r1 I:java.util.Map\<K, V\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapsKt.plus((r1 I:java.util.Map\<? extends K, ? extends V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.sequences.Sequence\<? extends kotlin.Pair\<? extends K, ? extends V\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Map\<, +TK;+TV;\>;, Lkotlin\/sequences\/Sequence\<, +, Lkotlin\/Pair\<, +TK;+TV;\>;\>;), Ljava\/util\/Map\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

