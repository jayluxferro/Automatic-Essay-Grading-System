digraph "CFG forkotlin.collections.MapsKt__MapsKt.filterKeys(Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
subgraph cluster_Region_1649102060 {
label = "R(3:0|(2:3|(1:5)(0))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"predicate\")\ljava.util.LinkedHashMap java.util.LinkedHashMap r0 = new java.util.LinkedHashMap()\ljava.util.Iterator r3 = r3.entrySet().iterator()\l}"];
subgraph cluster_LoopRegion_1962641195 {
label = "LOOP:0: (2:3|(1:5)(0))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x001b|if (r3.hasNext() != false) goto L_0x001d\l}"];
subgraph cluster_Region_517067561 {
label = "R(2:3|(1:5)(0))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001d|java.util.Map$Entry r1 = r3.next()\l}"];
subgraph cluster_IfRegion_1252181213 {
label = "IF [B:4:0x0031] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0031|if (r4.invoke(r1.getKey()).booleanValue() == true) goto L_0x0033\l}"];
subgraph cluster_Region_922327115 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0033|r0.put(r1.getKey(), r1.getValue())\l}"];
}
subgraph cluster_Region_691837414 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0041|RETURN\l|return r0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0017|LOOP_START\lLOOP:0: B:1:0x0017\-\>B:8:0x0017\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x003f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0017|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0017\-\>B:8:0x0017\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x003f|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0017|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0017|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapsKt.filterKeys((r3v0 java.util.Map\<? extends K, ? extends V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function1\<? super K, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Map\<, +TK;+TV;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-TK;, Ljava\/lang\/Boolean;, \>;), Ljava\/util\/Map\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_5 -> Node_11;
Node_1 -> Node_2;
Node_6 -> Node_7;
Node_8 -> Node_1;
Node_9 -> Node_6;
Node_10 -> Node_8;
Node_11 -> Node_8;
}

