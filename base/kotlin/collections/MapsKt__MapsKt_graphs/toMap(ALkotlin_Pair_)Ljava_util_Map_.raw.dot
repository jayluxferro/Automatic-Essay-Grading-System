digraph "CFG forkotlin.collections.MapsKt__MapsKt.toMap([Lkotlin\/Pair;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: ARRAY_LENGTH  (r0 I:int) = (r2 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1] t:[0x0022, 0x001a] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x000b: ARRAY_LENGTH  (r1 I:int) = (r2 I:?[]) \l0x000c: INVOKE  (r1 I:int) = (r1 I:int) kotlin.collections.MapsKt.mapCapacity(int):int type: STATIC \l0x0010: INVOKE  (r0 I:java.util.LinkedHashMap), (r1 I:int) java.util.LinkedHashMap.\<init\>(int):void type: DIRECT \l0x0013: CHECK_CAST  (r0 I:java.util.Map) = (java.util.Map) (r0 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  (r2 I:java.util.Map) = (r2 I:kotlin.Pair[]), (r0 I:java.util.Map) kotlin.collections.MapsKt.toMap(kotlin.Pair[], java.util.Map):java.util.Map type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001b: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x001d: INVOKE  (r2 I:java.util.Map) = (r2 I:kotlin.Pair) kotlin.collections.MapsKt.mapOf(kotlin.Pair):java.util.Map type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: INVOKE  (r2 I:java.util.Map) =  kotlin.collections.MapsKt.emptyMap():java.util.Map type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: RETURN  (r2 I:java.util.Map\<K, V\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapsKt.toMap((r2 I:kotlin.Pair\<? extends K, ? extends V\>[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>([, Lkotlin\/Pair\<, +TK;+TV;\>;), Ljava\/util\/Map\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_4;
Node_2 -> Node_5;
Node_3 -> Node_5;
Node_4 -> Node_5;
}

