digraph "CFG forkotlin.collections.MapsKt__MapsKt.filter(Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
subgraph cluster_Region_861853766 {
label = "R(3:0|(2:3|(1:5)(0))|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"predicate\")\ljava.util.Map java.util.Map\<K, V\> r0 = new java.util.LinkedHashMap\<\>()\ljava.util.Iterator r3 = r3.entrySet().iterator()\l}"];
subgraph cluster_LoopRegion_774941433 {
label = "LOOP:0: (2:3|(1:5)(0))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x001d|if (r3.hasNext() != false) goto L_0x001f\l}"];
subgraph cluster_Region_1800417815 {
label = "R(2:3|(1:5)(0))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001f|java.util.Map$Entry r1 = r3.next()\l}"];
subgraph cluster_IfRegion_242965405 {
label = "IF [B:4:0x002f] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x002f|if (r4.invoke(r1).booleanValue() == true) goto L_0x0031\l}"];
subgraph cluster_Region_288178875 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0031|r0.put(r1.getKey(), r1.getValue())\l}"];
}
subgraph cluster_Region_1597475158 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x003d|RETURN\l|return r0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0019|LOOP_START\lLOOP:0: B:1:0x0019\-\>B:7:0x0019\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0019\-\>B:7:0x0019\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x003d|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0019|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0019|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.MapsKt__MapsKt.filter((r3v0 java.util.Map\<? extends K, ? extends V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function1\<? super java.util.Map$Entry\<? extends K, ? extends V\>, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Map\<, +TK;+TV;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/util\/Map$Entry\<, +TK;+TV;\>;, Ljava\/lang\/Boolean;, \>;), Ljava\/util\/Map\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_10;
Node_1 -> Node_2;
Node_7 -> Node_1;
Node_8 -> Node_6;
Node_9 -> Node_7;
Node_10 -> Node_7;
}

