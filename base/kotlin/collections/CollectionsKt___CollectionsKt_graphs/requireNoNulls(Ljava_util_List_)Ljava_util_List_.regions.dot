digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.requireNoNulls(Ljava\/util\/List;)Ljava\/util\/List;" {
subgraph cluster_Region_2113709399 {
label = "R(3:0|(1:(2:5|6))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\ljava.util.Iterator r0 = r3.iterator()\l}"];
subgraph cluster_LoopRegion_1752473602 {
label = "LOOP:0: (1:(2:5|6))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|if (r0.hasNext() != false) goto L_0x000f\l}"];
subgraph cluster_Region_1723156888 {
label = "R(1:(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_770823634 {
label = "IF [B:4:0x0013] THEN: R(2:5|6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0013|LOOP_END\lLOOP:0: B:1:0x0009\-\>B:4:0x0013\l|if (r1 == null) goto L_0x0016\l}"];
subgraph cluster_Region_901712678 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0016}"];
Node_6 [shape=record,label="{6\:\ 0x0033|throw new java.lang.IllegalArgumentException(\"null element found in \" + r3 + '.')\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0034|RETURN\l|return r3\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0009|LOOP_START\lLOOP:0: B:1:0x0009\-\>B:4:0x0013\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0034|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.requireNoNulls((r3v0 java.util.List\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/List\<, +TT;\>;), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_4 -> Node_1[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_8 -> Node_5;
Node_9 -> Node_7;
}

