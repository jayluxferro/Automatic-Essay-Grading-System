digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.toCharArray(Ljava\/util\/Collection;)[C" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r0 I:int) = (r4 I:java.util.Collection) java.util.Collection.size():int type: INTERFACE \l0x0009: NEW_ARRAY  (r0 I:char[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: char[] \l0x000b: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l0x000f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: INVOKE  (r2 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0026 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: INVOKE  (r2 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001a: CHECK_CAST  (r2 I:java.lang.Character) = (java.lang.Character) (r2 I:?[OBJECT, ARRAY]) \l0x001c: INVOKE  (r2 I:char) = (r2 I:java.lang.Character) java.lang.Character.charValue():char type: VIRTUAL \l0x0020: ARITH  (r3 I:int) = (r1 I:int) + (1 int) \l0x0022: APUT  \l  (r0 I:char[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:char A[IMMUTABLE_TYPE])\l \l0x0024: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: RETURN  (r0 I:char[]) \l}"];
MethodNode[shape=record,label="{public static final char[] kotlin.collections.CollectionsKt___CollectionsKt.toCharArray((r4 I:java.util.Collection\<java.lang.Character\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Collection\<, Ljava\/lang\/Character;, \>;)[C]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

