digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.singleOrNull(Ljava\/lang\/Iterable;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if ((r3 instanceof java.util.List) == false) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|java.util.List r3 = (java.util.List) r3\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|if (r3.size() != 1) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013}"];
Node_5 [shape=record,label="{5\:\ 0x0019|java.util.Iterator r3 = r3.iterator()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|if (r3.hasNext() != false) goto L_0x0024\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|RETURN\l|return null\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|java.lang.Object r0 = r3.next()\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|if (r3.hasNext() == false) goto L_0x002f\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|RETURN\l|return null\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|RETURN\l|return r0\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r3.get(0)\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.singleOrNull((r3v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
}

