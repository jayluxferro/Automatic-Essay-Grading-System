digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.count(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"predicate\")\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if ((r2 instanceof java.util.Collection) == false) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f}"];
Node_3 [shape=record,label="{3\:\ 0x0016|if (((java.util.Collection) r2).isEmpty() == false) goto L_0x0019\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|RETURN\l|return 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|java.util.Iterator r2 = r2.iterator()\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:5:0x0019, B:12:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x001d\-\>B:12:0x001d\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|if (r2.hasNext() == false) goto L_0x0036\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023}"];
Node_9 [shape=record,label="{9\:\ 0x0031|if (r3.invoke(r2.next()).booleanValue() == false) goto L_0x001d\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|int r1 = r1 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|RETURN\l|return r1\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|LOOP_END\lSYNTHETIC\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:14:0x001d, B:15:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x001d\-\>B:12:0x001d\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.CollectionsKt___CollectionsKt.count((r2v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;, Ljava\/lang\/Boolean;, \>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_15;
Node_12 -> Node_6;
Node_13 -> Node_11;
Node_14 -> Node_12;
Node_15 -> Node_12;
}

