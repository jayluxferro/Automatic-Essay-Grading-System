digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.minus(Ljava\/lang\/Iterable;Ljava\/lang\/Object;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\ljava.util.ArrayList r0 = new java.util.ArrayList(kotlin.collections.CollectionsKt.collectionSizeOrDefault(r6, 10))\ljava.util.Iterator r6 = r6.iterator()\lr2 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|LOOP_START\lPHI: r2 \l  PHI: (r2v1 boolean) = (r2v0 boolean), (r2v2 boolean) binds: [B:0:0x0000, B:12:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0016\-\>B:12:0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|if (r6.hasNext() == false) goto L_0x0034\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|java.lang.Object r3 = r6.next()\lr4 = true\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|if (r2 != false) goto L_0x002b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023}"];
Node_6 [shape=record,label="{6\:\ 0x0027|if (kotlin.jvm.internal.Intrinsics.areEqual((java.lang.Object) r3, (java.lang.Object) r7) == false) goto L_0x002b\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|r2 = true\lr4 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|PHI: r2 r4 \l  PHI: (r2v2 boolean) = (r2v1 boolean), (r2v1 boolean), (r2v3 boolean) binds: [B:4:0x0021, B:6:0x0027, B:7:0x0029] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 boolean) = (r4v0 boolean), (r4v0 boolean), (r4v4 boolean) binds: [B:4:0x0021, B:6:0x0027, B:7:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L_0x0016\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|r0.add(r3)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034}"];
Node_11 [shape=record,label="{11\:\ 0x0038|RETURN\l|return (java.util.List) r0\l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0016\-\>B:12:0x0016\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0016|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0016|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.minus((r6v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;TT;), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_12 -> Node_1;
Node_13 -> Node_10;
Node_14 -> Node_12;
Node_15 -> Node_12;
}

