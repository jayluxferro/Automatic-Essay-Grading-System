digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.fold(Ljava\/lang\/Iterable;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/lang\/Object;" {
subgraph cluster_Region_503359452 {
label = "R(3:0|(1:3)|4)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"operation\")\ljava.util.Iterator r1 = r1.iterator()\l}"];
subgraph cluster_LoopRegion_1842917023 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0012|if (r1.hasNext() != false) goto L_0x0014\l}"];
subgraph cluster_Region_604565691 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0014|LOOP_END\lLOOP:0: B:1:0x000e\-\>B:3:0x0014\l|java.lang.Object r2 = r3.invoke(r2, r0)\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x001d|RETURN\l|return r2\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000e|LOOP_START\lPHI: r2 \l  PHI: (r2v1 R) = (r2v0 R), (r2v2 R) binds: [B:0:0x0000, B:3:0x0014] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:3:0x0014\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final R kotlin.collections.CollectionsKt___CollectionsKt.fold((r1v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 R A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 ? I:kotlin.jvm.functions.Function2\<? super R, ? super T, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lJADX WARNING: type inference failed for: r3v0, types: [java.lang.Object, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2\<? super R, ? super T, ? extends R\>]\lUnknown variable types count: 1\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;TR;, Lkotlin\/jvm\/functions\/Function2\<, \-TR;\-TT;+TR;\>;)TR;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_1;
Node_1 -> Node_2;
Node_5 -> Node_4;
}

