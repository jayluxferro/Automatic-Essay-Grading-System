digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.drop(Ljava\/lang\/Iterable;I)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lr0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r5 \< 0) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|r2 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|r2 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|PHI: r2 \l  PHI: (r2v0 boolean) = (r2v10 boolean), (r2v11 boolean) binds: [B:3:0x000b, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == false) goto L_0x008e\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r5 != 0) goto L_0x0015\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010}"];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|return kotlin.collections.CollectionsKt.toList(r4)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015}"];
Node_9 [shape=record,label="{9\:\ 0x0017|if ((r4 instanceof java.util.Collection) == false) goto L_0x006b\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|int r2 = ((java.util.Collection) r4).size() \- r5\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|if (r2 \> 0) goto L_0x0028\l}"];
Node_12 [shape=record,label="{12\:\ 0x0023}"];
Node_13 [shape=record,label="{13\:\ 0x0027|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|if (r2 != 1) goto L_0x0033\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a}"];
Node_16 [shape=record,label="{16\:\ 0x0032|RETURN\l|return kotlin.collections.CollectionsKt.listOf(kotlin.collections.CollectionsKt.last(r4))\l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|java.util.ArrayList r1 = new java.util.ArrayList(r2)\l}"];
Node_18 [shape=record,label="{18\:\ 0x003a|if ((r4 instanceof java.util.List) == false) goto L_0x0070\l}"];
Node_19 [shape=record,label="{19\:\ 0x003c}"];
Node_20 [shape=record,label="{20\:\ 0x003e|if ((r4 instanceof java.util.RandomAccess) == false) goto L_0x0052\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|java.util.List r4 = (java.util.List) r4\lint r0 = r4.size()\l}"];
Node_22 [shape=record,label="{22\:\ 0x0046|LOOP_START\lPHI: r5 \l  PHI: (r5v6 int) = (r5v0 int), (r5v7 int) binds: [B:21:0x0040, B:23:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:22:0x0046\-\>B:23:0x0048\l|if (r5 \>= r0) goto L_0x0068\l}"];
Node_23 [shape=record,label="{23\:\ 0x0048|LOOP_END\lLOOP:0: B:22:0x0046\-\>B:23:0x0048\l|r1.add(r4.get(r5))\lint r5 = r5 + 1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0052|java.util.Iterator r4 = ((java.util.List) r4).listIterator(r5)\l}"];
Node_25 [shape=record,label="{25\:\ 0x005a|LOOP_START\lLOOP:1: B:25:0x005a\-\>B:27:0x0060\l}"];
Node_26 [shape=record,label="{26\:\ 0x005e|if (r4.hasNext() == false) goto L_0x0068\l}"];
Node_27 [shape=record,label="{27\:\ 0x0060|LOOP_END\lLOOP:1: B:25:0x005a\-\>B:27:0x0060\l|r1.add(r4.next())\l}"];
Node_28 [shape=record,label="{28\:\ 0x0068}"];
Node_29 [shape=record,label="{29\:\ 0x006a|RETURN\l|return r1\l}"];
Node_30 [shape=record,label="{30\:\ 0x006b|java.util.ArrayList r1 = new java.util.ArrayList()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0070|PHI: r1 \l  PHI: (r1v1 java.util.ArrayList) = (r1v3 java.util.ArrayList), (r1v4 java.util.ArrayList) binds: [B:30:0x006b, B:18:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|java.util.Iterator r4 = r4.iterator()\l}"];
Node_32 [shape=record,label="{32\:\ 0x0074|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v1 int), (r0v4 int) binds: [B:31:0x0070, B:37:0x0085] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:32:0x0074\-\>B:37:0x0085\l}"];
Node_33 [shape=record,label="{33\:\ 0x0078|if (r4.hasNext() == false) goto L_0x0087\l}"];
Node_34 [shape=record,label="{34\:\ 0x007a|java.lang.Object r2 = r4.next()\lint r3 = r0 + 1\l}"];
Node_35 [shape=record,label="{35\:\ 0x0080|if (r0 \< r5) goto L_0x0085\l}"];
Node_36 [shape=record,label="{36\:\ 0x0082|r1.add(r2)\l}"];
Node_37 [shape=record,label="{37\:\ 0x0085|LOOP_END\lLOOP:2: B:32:0x0074\-\>B:37:0x0085\l|r0 = r3\l}"];
Node_38 [shape=record,label="{38\:\ 0x0087}"];
Node_39 [shape=record,label="{39\:\ 0x008d|RETURN\l|return kotlin.collections.CollectionsKt.optimizeReadOnlyList(r1)\l}"];
Node_40 [shape=record,label="{40\:\ 0x008e|java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lr4.append(\"Requested element count \")\lr4.append(r5)\lr4.append(\" is less than zero.\")\l}"];
Node_41 [shape=record,label="{41\:\ 0x00af|throw new java.lang.IllegalArgumentException(r4.toString().toString())\l}"];
Node_42 [shape=record,label="{42\:\ 0x0068|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0068|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x0087|SYNTHETIC\l}"];
Node_45 [shape=record,label="{45\:\ 0x0085|SYNTHETIC\l}"];
Node_46 [shape=record,label="{46\:\ 0x0085|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.drop((r4v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;I), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_40;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_30;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_31;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_42;
Node_23 -> Node_22;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_43;
Node_27 -> Node_25;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_44;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_46;
Node_36 -> Node_45;
Node_37 -> Node_32;
Node_38 -> Node_39;
Node_40 -> Node_41;
Node_42 -> Node_28;
Node_43 -> Node_28;
Node_44 -> Node_38;
Node_45 -> Node_37;
Node_46 -> Node_37;
}

