digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.associateTo(Ljava\/lang\/Iterable;Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000f: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.lang.Iterable) java.lang.Iterable.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: INVOKE  (r0 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x002f \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001d: INVOKE  (r0 I:java.lang.Object) = \l  (r4 I:kotlin.jvm.functions.Function1)\l  (r0 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x0021: CHECK_CAST  (r0 I:kotlin.Pair) = (kotlin.Pair) (r0 I:?[OBJECT, ARRAY]) \l0x0023: INVOKE  (r1 I:java.lang.Object) = (r0 I:kotlin.Pair) kotlin.Pair.getFirst():java.lang.Object type: VIRTUAL \l0x0027: INVOKE  (r0 I:java.lang.Object) = (r0 I:kotlin.Pair) kotlin.Pair.getSecond():java.lang.Object type: VIRTUAL \l0x002b: INVOKE  \l  (r3 I:java.util.Map)\l  (r1 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x002f|0x002f: RETURN  (r3 I:M) \l}"];
MethodNode[shape=record,label="{public static final M kotlin.collections.CollectionsKt___CollectionsKt.associateTo((r2 I:java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:M A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function1\<? super T, ? extends kotlin.Pair\<? extends K, ? extends V\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, M::, Ljava\/util\/Map\<, \-TK;\-TV;\>;\>(, Ljava\/lang\/Iterable\<, +TT;\>;TM;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;+, Lkotlin\/Pair\<, +TK;+TV;\>;\>;)TM;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

