digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.takeWhile(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
subgraph cluster_Region_240792505 {
label = "R(3:0|(2:3|(2:(1:8)|(1:5)))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"predicate\")\ljava.util.ArrayList java.util.ArrayList r0 = new java.util.ArrayList()\ljava.util.Iterator r3 = r3.iterator()\l}"];
subgraph cluster_LoopRegion_1980416678 {
label = "LOOP:0: (2:3|(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0017|if (r3.hasNext() != false) goto L_0x0019\l}"];
subgraph cluster_Region_1483444266 {
label = "R(2:3|(2:(1:8)|(1:5)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0019|java.lang.Object r1 = r3.next()\l}"];
subgraph cluster_Region_1005855389 {
label = "R(2:(1:8)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_752574482 {
label = "IF [B:4:0x0027] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0027|if (r4.invoke(r1).booleanValue() == false) goto L_0x002e\l}"];
subgraph cluster_Region_216307933 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002e|SYNTHETIC\lEDGE_INSN: B:8:0x002e\-\>B:6:0x002e ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1739468203 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002a|LOOP_END\lLOOP:0: B:1:0x0013\-\>B:5:0x002a\l|r0.add(r1)\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0030|RETURN\l|return r0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0013|LOOP_START\lLOOP:0: B:1:0x0013\-\>B:5:0x002a\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002e|EDGE_INSN: B:8:0x002e\-\>B:6:0x002e ?: BREAK  \l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.takeWhile((r3v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;, Ljava\/lang\/Boolean;, \>;), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_8 -> Node_6;
Node_5 -> Node_1;
Node_1 -> Node_2;
Node_6 -> Node_7;
Node_9 -> Node_6;
}

