digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.sortedWith(Ljava\/lang\/Iterable;Ljava\/util\/Comparator;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"comparator\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if ((r3 instanceof java.util.Collection) == false) goto L_0x0040\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|java.util.Collection r0 = (java.util.Collection) r3\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|if (r0.size() \> 1) goto L_0x001d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018}"];
Node_5 [shape=record,label="{5\:\ 0x001c|RETURN\l|return kotlin.collections.CollectionsKt.toList(r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|java.lang.Object[] r3 = r0.toArray(new java.lang.Object[0])\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|if (r3 == null) goto L_0x0038\l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|if (r3 == null) goto L_0x0030\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|kotlin.collections.ArraysKt.sortWith(r3, r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|RETURN\l|return kotlin.collections.ArraysKt.asList((T[]) r3)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030}"];
Node_12 [shape=record,label="{12\:\ 0x0037|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.Array\<T\>\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038}"];
Node_14 [shape=record,label="{14\:\ 0x003f|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.Array\<T\>\")\l}"];
Node_15 [shape=record,label="{15\:\ 0x0040|java.util.List r3 = kotlin.collections.CollectionsKt.toMutableList(r3)\lkotlin.collections.CollectionsKt.sortWith(r3, r4)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|RETURN\l|return r3\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.sortedWith((r3v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.util.Comparator\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;, Ljava\/util\/Comparator\<, \-TT;\>;), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

