digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.plus(Ljava\/lang\/Iterable;Ljava\/lang\/Object;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.util.Collection \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CHECK_CAST  (r2 I:java.util.Collection) = (java.util.Collection) (r2 I:?[OBJECT, ARRAY]) \l0x000b: INVOKE  (r2 I:java.util.List) = (r2 I:java.util.Collection), (r3 I:java.lang.Object) kotlin.collections.CollectionsKt.plus(java.util.Collection, java.lang.Object):java.util.List type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: RETURN  (r2 I:java.util.List\<T\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0012: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0015: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0016: CHECK_CAST  (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  (r1 I:java.util.Collection), (r2 I:java.lang.Iterable) kotlin.collections.CollectionsKt.addAll(java.util.Collection, java.lang.Iterable):boolean type: STATIC \l0x001b: INVOKE  (r0 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x001e: CHECK_CAST  (r0 I:java.util.List) = (java.util.List) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: RETURN  (r0 I:java.util.List\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.plus((r2 I:java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;TT;), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

