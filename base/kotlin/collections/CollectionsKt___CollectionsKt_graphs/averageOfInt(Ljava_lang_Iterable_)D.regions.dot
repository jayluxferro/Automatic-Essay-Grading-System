digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.averageOfInt(Ljava\/lang\/Iterable;)D" {
subgraph cluster_Region_2028343415 {
label = "R(3:0|(1:3)|4)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"$receiver\")\ljava.util.Iterator r5 = r5.iterator()\ldouble r0 = 0.0d\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_6547960 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0010|if (r5.hasNext() != false) goto L_0x0012\l}"];
subgraph cluster_Region_1805606481 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0012|LOOP_END\lLOOP:0: B:1:0x000c\-\>B:3:0x0012\l|r0 += (double) r3.intValue()\lr2++\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x0021|RETURN\l|return r2 == 0 ? kotlin.jvm.internal.DoubleCompanionObject.INSTANCE.getNaN() : r0 \/ ((double) r2)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000c|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v2 double) = (r0v1 double), (r0v5 double) binds: [B:0:0x0000, B:3:0x0012] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:0:0x0000, B:3:0x0012] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:3:0x0012\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0023}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002a}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0021|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final double kotlin.collections.CollectionsKt___CollectionsKt.averageOfInt((r5v0 java.lang.Iterable\<java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/Iterable\<, Ljava\/lang\/Integer;, \>;)D]\}], Annotation[BUILD, kotlin.jvm.JvmName, \{name=averageOfInt\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_7[style=dashed];
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_1 -> Node_2;
Node_5 -> Node_9;
Node_6 -> Node_8;
Node_7 -> Node_4;
}

