digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.elementAtOrNull(Ljava\/lang\/Iterable;I)Ljava\/lang\/Object;" {
subgraph cluster_Region_1393840581 {
label = "R(2:0|(2:(1:3)|(1:(2:(1:6)|(3:7|(2:10|(2:(1:12)|(1:13)))|14)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\l}"];
subgraph cluster_Region_133942900 {
label = "R(2:(1:3)|(1:(2:(1:6)|(3:7|(2:10|(2:(1:12)|(1:13)))|14))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1345454522 {
label = "IF [B:1:0x0007] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|if ((r4 instanceof java.util.List) == true) goto L_0x0009\l}"];
subgraph cluster_Region_471837332 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|RETURN\l|return kotlin.collections.CollectionsKt.getOrNull((java.util.List) r4, r5)\l}"];
}
}
subgraph cluster_Region_1836337835 {
label = "R(1:(2:(1:6)|(3:7|(2:10|(2:(1:12)|(1:13)))|14)))";
node [shape=record,color=blue];
subgraph cluster_Region_883274015 {
label = "R(2:(1:6)|(3:7|(2:10|(2:(1:12)|(1:13)))|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1960462816 {
label = "IF [B:5:0x0011] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r5 \< 0) goto L_0x0013\l}"];
subgraph cluster_Region_359667429 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0013|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1489866475 {
label = "R(3:7|(2:10|(2:(1:12)|(1:13)))|14)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0014|java.util.Iterator r4 = r4.iterator()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1511925746 {
label = "LOOP:0: (2:10|(2:(1:12)|(1:13)))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001d|if (r4.hasNext() != false) goto L_0x001f\l}"];
subgraph cluster_Region_8371773 {
label = "R(2:10|(2:(1:12)|(1:13)))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001f|java.lang.Object r2 = r4.next()\lint int r3 = r1 + 1\l}"];
subgraph cluster_Region_1135233255 {
label = "R(2:(1:12)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1538147503 {
label = "IF [B:11:0x0025] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0025|if (r5 == r1) goto L_0x0027\l}"];
subgraph cluster_Region_1696173115 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0027|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_766639247 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0028|LOOP_END\lLOOP:0: B:8:0x0019\-\>B:13:0x0028\l|r1 = r3\l}"];
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x002a|RETURN\l|return null\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0019|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:7:0x0014, B:13:0x0028] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0019\-\>B:13:0x0028\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0027|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.CollectionsKt___CollectionsKt.elementAtOrNull((r4v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;I)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_16[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_13[style=dashed];
Node_11 -> Node_15;
Node_13 -> Node_8;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_15 -> Node_12;
Node_16 -> Node_14;
}

