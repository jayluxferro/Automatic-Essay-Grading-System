digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.toMutableSet(Ljava\/lang\/Iterable;)Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INSTANCE_OF  (r0 I:boolean) = (r1 I:?[OBJECT, ARRAY]) java.util.Collection \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet \l0x000b: CHECK_CAST  (r1 I:java.util.Collection) = (java.util.Collection) (r1 I:?[OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:java.util.LinkedHashSet), (r1 I:java.util.Collection) java.util.LinkedHashSet.\<init\>(java.util.Collection):void type: DIRECT \l0x0010: CHECK_CAST  (r0 I:java.util.Set) = (java.util.Set) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: NEW_INSTANCE  (r0 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet \l0x0015: INVOKE  (r0 I:java.util.LinkedHashSet) java.util.LinkedHashSet.\<init\>():void type: DIRECT \l0x0018: CHECK_CAST  (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:?[OBJECT, ARRAY]) \l0x001a: INVOKE  (r1 I:java.util.Collection) = (r1 I:java.lang.Iterable), (r0 I:java.util.Collection) kotlin.collections.CollectionsKt.toCollection(java.lang.Iterable, java.util.Collection):java.util.Collection type: STATIC \l0x001e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x001f: CHECK_CAST  (r0 I:java.util.Set) = (java.util.Set) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: RETURN  (r0 I:java.util.Set\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Set\<T\> kotlin.collections.CollectionsKt___CollectionsKt.toMutableSet((r1 I:java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;), Ljava\/util\/Set\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

