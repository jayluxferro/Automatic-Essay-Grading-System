digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.minus(Ljava\/lang\/Iterable;[Ljava\/lang\/Object;)Ljava\/util\/List;" {
subgraph cluster_Region_1124567910 {
label = "R(2:0|(2:(1:6)|(3:7|(2:10|(1:12)(0))|14)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"elements\")\l}"];
subgraph cluster_Region_1207458444 {
label = "R(2:(1:6)|(3:7|(2:10|(1:12)(0))|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1966979851 {
label = "IF [B:4:0x0010] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|PHI: r0 \l  PHI: (r0v3 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r4.length == 0) == true) goto L_0x0012\l}"];
subgraph cluster_Region_1746817934 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|RETURN\l|return kotlin.collections.CollectionsKt.toList(r3)\l}"];
}
}
subgraph cluster_Region_738608225 {
label = "R(3:7|(2:10|(1:12)(0))|14)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0017|java.util.HashSet java.util.HashSet r4 = kotlin.collections.ArraysKt.toHashSet(r4)\ljava.util.Collection java.util.Collection r0 = new java.util.ArrayList()\ljava.util.Iterator r3 = r3.iterator()\l}"];
subgraph cluster_LoopRegion_398309712 {
label = "LOOP:0: (2:10|(1:12)(0))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002a|if (r3.hasNext() != false) goto L_0x002c\l}"];
subgraph cluster_Region_311737617 {
label = "R(2:10|(1:12)(0))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002c|java.lang.Object r1 = r3.next()\l}"];
subgraph cluster_IfRegion_1101682501 {
label = "IF [B:11:0x0034] THEN: R(1:12) ELSE: R(0)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0034|if (r4.contains(r1) == false) goto L_0x0036\l}"];
subgraph cluster_Region_1981645007 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0036|r0.add(r1)\l}"];
}
subgraph cluster_Region_183085483 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x003c|RETURN\l|return (java.util.List) r0\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000b}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000d}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000f}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0012}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0026|LOOP_START\lLOOP:0: B:8:0x0026\-\>B:15:0x0026\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003a}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0026|LOOP_END\lSYNTHETIC\lLOOP:0: B:8:0x0026\-\>B:15:0x0026\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003a|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0026|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0026|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.minus((r3v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;[TT;), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_4 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_9 -> Node_16[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_17[style=dashed];
Node_12 -> Node_18;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_13 -> Node_14;
Node_15 -> Node_8;
Node_16 -> Node_13;
Node_17 -> Node_15;
Node_18 -> Node_15;
}

