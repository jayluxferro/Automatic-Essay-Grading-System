digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.windowed(Ljava\/lang\/Iterable;IIZ)Ljava\/util\/List;" {
subgraph cluster_Region_663187977 {
label = "R(2:0|(2:(3:15|(1:18)|20)|(3:4|(2:6|(2:(1:22)|(3:9|(1:11)|12)))|14)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, \"$receiver\")\lkotlin.collections.SlidingWindowKt.checkWindowSizeStep(r9, r10)\l}"];
subgraph cluster_Region_986403034 {
label = "R(2:(3:15|(1:18)|20)|(3:4|(2:6|(2:(1:22)|(3:9|(1:11)|12)))|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_179644308 {
label = "IF [B:1:0x000b, B:3:0x000f] THEN: R(3:15|(1:18)|20) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if ((r8 instanceof java.util.RandomAccess) == false) goto L_0x004d\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|ADDED_TO_REGION\l|if ((r8 instanceof java.util.List) == false) goto L_0x004d\l}"];
subgraph cluster_Region_1155907965 {
label = "R(3:15|(1:18)|20)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x004d|java.util.ArrayList java.util.ArrayList r0 = new java.util.ArrayList()\ljava.util.Iterator java.util.Iterator\<java.util.List\<T\>\> r8 = kotlin.collections.SlidingWindowKt.windowedIterator(r8.iterator(), r9, r10, r11, false)\l}"];
subgraph cluster_LoopRegion_841953285 {
label = "LOOP:2: (1:18)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x005e|if (r8.hasNext() != false) goto L_0x0060\l}"];
subgraph cluster_Region_839231184 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0060|LOOP_END\lLOOP:2: B:16:0x005a\-\>B:18:0x0060\l|r0.add(r8.next())\l}"];
}
}
Node_20 [shape=record,label="{20\:\ 0x006c|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_331021145 {
label = "R(3:4|(2:6|(2:(1:22)|(3:9|(1:11)|12)))|14)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|java.util.List java.util.List r8 = (java.util.List) r8\lint int r0 = r8.size()\ljava.util.ArrayList java.util.ArrayList r2 = new java.util.ArrayList(((r0 + r10) \- 1) \/ r10)\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_1720853675 {
label = "LOOP:0: (2:6|(2:(1:22)|(3:9|(1:11)|12)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0022|LOOP_START\lPHI: r3 \l  PHI: (r3v4 int) = (r3v3 int), (r3v5 int) binds: [B:4:0x0011, B:12:0x0043] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0022\-\>B:12:0x0043\l|if (r3 \< r0) goto L_0x0024\l}"];
subgraph cluster_Region_771137380 {
label = "R(2:6|(2:(1:22)|(3:9|(1:11)|12)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0024|int int r4 = kotlin.ranges.RangesKt.coerceAtMost(r9, r0 \- r3)\l}"];
subgraph cluster_Region_2087416252 {
label = "R(2:(1:22)|(3:9|(1:11)|12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1637316366 {
label = "IF [B:7:0x002a, B:8:0x002c] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002a|if (r4 \< r9) goto L_0x002c\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|ADDED_TO_REGION\l|if (r11 != true) goto L_0x004a\l}"];
subgraph cluster_Region_1625314050 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x004a|SYNTHETIC\lEDGE_INSN: B:22:0x004a\-\>B:13:0x004a ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1775425968 {
label = "R(3:9|(1:11)|12)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002f|java.util.ArrayList java.util.ArrayList r5 = new java.util.ArrayList(r4)\lint r6 = 0\l}"];
subgraph cluster_LoopRegion_383230187 {
label = "LOOP:1: (1:11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0035|LOOP_START\lPHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:9:0x002f, B:11:0x0037] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:10:0x0035\-\>B:11:0x0037\l|if (r6 \< r4) goto L_0x0037\l}"];
subgraph cluster_Region_2034118266 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0037|LOOP_END\lLOOP:1: B:10:0x0035\-\>B:11:0x0037\l|r5.add(r8.get(r6 + r3))\lr6++\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0043|LOOP_END\lLOOP:0: B:5:0x0022\-\>B:12:0x0043\l|r2.add(r5)\lr3 += r10\l}"];
}
}
}
}
Node_14 [shape=record,label="{14\:\ 0x004c|RETURN\l|return r2\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000d}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x004a|EDGE_INSN: B:22:0x004a\-\>B:13:0x004a ?: BREAK  \l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x005a|LOOP_START\lLOOP:2: B:16:0x005a\-\>B:18:0x0060\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x006a}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x004a|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0043|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x006a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.util.List\<T\>\> kotlin.collections.CollectionsKt___CollectionsKt.windowed((r8v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , , \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;IIZ), Ljava\/util\/List\<, Ljava\/util\/List\<, TT;\>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_24[style=dashed];
Node_18 -> Node_16;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_21[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_22;
Node_22 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_23[style=dashed];
Node_11 -> Node_10;
Node_12 -> Node_5;
Node_2 -> Node_3;
Node_13 -> Node_14;
Node_16 -> Node_17;
Node_19 -> Node_20;
Node_21 -> Node_13;
Node_23 -> Node_12;
Node_24 -> Node_19;
}

