digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.groupBy(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
subgraph cluster_Region_636393955 {
label = "R(3:0|(3:3|(1:5)(0)|6)|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"keySelector\")\ljava.util.Map java.util.Map\<K, java.util.List\<T\>\> r0 = new java.util.LinkedHashMap\<\>()\ljava.util.Iterator r4 = r4.iterator()\l}"];
subgraph cluster_LoopRegion_1840531358 {
label = "LOOP:0: (3:3|(1:5)(0)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0019|if (r4.hasNext() != false) goto L_0x001b\l}"];
subgraph cluster_Region_758976468 {
label = "R(3:3|(1:5)(0)|6)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001b|java.lang.Object r1 = r4.next()\ljava.lang.Object java.lang.Object r2 = r5.invoke(r1)\ljava.lang.Object java.util.List\<T\> r3 = r0.get(r2)\l}"];
subgraph cluster_IfRegion_1574879535 {
label = "IF [B:4:0x0027] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0027|if (r3 == null) goto L_0x0029\l}"];
subgraph cluster_Region_1965411925 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0029|java.util.ArrayList r3 = new java.util.ArrayList\<\>()\lr0.put(r2, r3)\l}"];
}
subgraph cluster_Region_535622794 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_6 [shape=record,label="{6\:\ 0x0031|LOOP_END\lPHI: r3 \l  PHI: (r3v1 java.util.List\<T\>) = (r3v0 java.util.List\<T\>), (r3v3 java.util.List\<T\>) binds: [B:10:0x0031, B:9:0x0031] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0015\-\>B:6:0x0031\l|r3.add(r1)\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0037|RETURN\l|return r0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0015|LOOP_START\lLOOP:0: B:1:0x0015\-\>B:6:0x0031\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0037|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0031|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0031|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, java.util.List\<T\>\> kotlin.collections.CollectionsKt___CollectionsKt.groupBy((r4v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function1\<? super T, ? extends K\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, K:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;+TK;\>;), Ljava\/util\/Map\<, TK;, Ljava\/util\/List\<, TT;\>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_8 -> Node_7;
Node_9 -> Node_6;
Node_10 -> Node_6;
}

