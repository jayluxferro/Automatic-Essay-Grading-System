digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.zipWithNext(Ljava\/lang\/Iterable;)Ljava\/util\/List;" {
subgraph cluster_Region_227468044 {
label = "R(2:0|(2:(1:10)|(3:3|(1:6)|9)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\ljava.util.Iterator java.util.Iterator\<? extends T\> r3 = r3.iterator()\l}"];
subgraph cluster_Region_489462705 {
label = "R(2:(1:10)|(3:3|(1:6)|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_904707697 {
label = "IF [B:1:0x000d] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r3.hasNext() == false) goto L_0x000f\l}"];
subgraph cluster_Region_1303717884 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
}
}
subgraph cluster_Region_779385842 {
label = "R(3:3|(1:6)|9)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0014|java.util.List java.util.List\<kotlin.Pair\<T, T\>\> r0 = new java.util.ArrayList\<\>()\ljava.lang.Object java.lang.Object r1 = r3.next()\l}"];
subgraph cluster_LoopRegion_1632745287 {
label = "LOOP:0: (1:6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0023|if (r3.hasNext() != false) goto L_0x0025\l}"];
subgraph cluster_Region_465415906 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0025|LOOP_END\lLOOP:0: B:4:0x001f\-\>B:6:0x0025\l|java.lang.Object java.lang.Object r2 = r3.next()\lr0.add(kotlin.TuplesKt.m174to(r1, r2))\lr1 = r2\l}"];
}
}
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r0\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000f}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001f|LOOP_START\lPHI: r1 \l  PHI: (r1v1 ? extends T) = (r1v0 ? extends T), (r1v3 ? extends T) binds: [B:3:0x0014, B:6:0x0025] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x001f\-\>B:6:0x0025\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0032}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0032|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<kotlin.Pair\<T, T\>\> kotlin.collections.CollectionsKt___CollectionsKt.zipWithNext((r3v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;), Ljava\/util\/List\<, Lkotlin\/Pair\<, TT;TT;\>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_4;
Node_2 -> Node_10;
Node_4 -> Node_5;
Node_7 -> Node_9;
Node_8 -> Node_7;
}

