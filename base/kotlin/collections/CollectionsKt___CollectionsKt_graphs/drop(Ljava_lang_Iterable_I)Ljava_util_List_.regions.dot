digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.drop(Ljava\/lang\/Iterable;I)Ljava\/util\/List;" {
subgraph cluster_Region_1141236243 {
label = "R(2:0|(2:40|41)(1:(1:7)(4:(2:10|(2:(1:13)|(1:(2:(1:16)|(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29))))))(1:30)|31|(3:34|(1:36)(0)|37)|39))) | DECL_VAR: java.util.ArrayList null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lint r0 = 0\l}"];
subgraph cluster_IfRegion_876656005 {
label = "IF [B:4:0x000c] THEN: R(2:40|41) ELSE: R(1:(1:7)(4:(2:10|(2:(1:13)|(1:(2:(1:16)|(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29))))))(1:30)|31|(3:34|(1:36)(0)|37)|39))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|PHI: r2 \l  PHI: (r2v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r5 \>= 0) != true) goto L_0x008e\l}"];
subgraph cluster_Region_784083490 {
label = "R(2:40|41)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x008e}"];
Node_41 [shape=record,label="{41\:\ 0x00af|throw new java.lang.IllegalArgumentException((\"Requested element count \" + r5 + \" is less than zero.\").toString())\l}"];
}
subgraph cluster_Region_1191311728 {
label = "R(1:(1:7)(4:(2:10|(2:(1:13)|(1:(2:(1:16)|(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29))))))(1:30)|31|(3:34|(1:36)(0)|37)|39)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_262030782 {
label = "IF [B:5:0x000e] THEN: R(1:7) ELSE: R(4:(2:10|(2:(1:13)|(1:(2:(1:16)|(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29))))))(1:30)|31|(3:34|(1:36)(0)|37)|39) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r5 == 0) goto L_0x0010\l}"];
subgraph cluster_Region_1044587861 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|return kotlin.collections.CollectionsKt.toList(r4)\l}"];
}
subgraph cluster_Region_1910629765 {
label = "R(4:(2:10|(2:(1:13)|(1:(2:(1:16)|(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29))))))(1:30)|31|(3:34|(1:36)(0)|37)|39)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_962807984 {
label = "IF [B:9:0x0017] THEN: R(2:10|(2:(1:13)|(1:(2:(1:16)|(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29)))))) ELSE: R(1:30)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0017|if ((r4 instanceof java.util.Collection) == true) goto L_0x0019\l}"];
subgraph cluster_Region_215816832 {
label = "R(2:10|(2:(1:13)|(1:(2:(1:16)|(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29))))))";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0019|int int r2 = ((java.util.Collection) r4).size() \- r5\l}"];
subgraph cluster_Region_1152211351 {
label = "R(2:(1:13)|(1:(2:(1:16)|(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1100879964 {
label = "IF [B:11:0x0021] THEN: R(1:13) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0021|if (r2 \<= 0) goto L_0x0023\l}"];
subgraph cluster_Region_1667474906 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0027|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
}
}
subgraph cluster_Region_491825662 {
label = "R(1:(2:(1:16)|(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29))))";
node [shape=record,color=blue];
subgraph cluster_Region_1054168108 {
label = "R(2:(1:16)|(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1669470916 {
label = "IF [B:14:0x0028] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0028|if (r2 == 1) goto L_0x002a\l}"];
subgraph cluster_Region_270193536 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0032|RETURN\l|return kotlin.collections.CollectionsKt.listOf(kotlin.collections.CollectionsKt.last(r4))\l}"];
}
}
subgraph cluster_Region_1000352109 {
label = "R(2:17|(2:(2:21|(1:23))(2:24|(1:27))|29))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0033|java.util.ArrayList r1 = new java.util.ArrayList(r2)\l}"];
subgraph cluster_IfRegion_1848244524 {
label = "IF [B:18:0x003a] THEN: R(2:(2:21|(1:23))(2:24|(1:27))|29) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x003a|if ((r4 instanceof java.util.List) == true) goto L_0x003c\l}"];
subgraph cluster_Region_1982767694 {
label = "R(2:(2:21|(1:23))(2:24|(1:27))|29)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1657732243 {
label = "IF [B:20:0x003e] THEN: R(2:21|(1:23)) ELSE: R(2:24|(1:27))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x003e|if ((r4 instanceof java.util.RandomAccess) == true) goto L_0x0040\l}"];
subgraph cluster_Region_2138339407 {
label = "R(2:21|(1:23))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0040|java.util.List java.util.List r4 = (java.util.List) r4\lint int r0 = r4.size()\l}"];
subgraph cluster_LoopRegion_1934676217 {
label = "LOOP:0: (1:23)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0046|LOOP_START\lPHI: r5 \l  PHI: (r5v6 int) = (r5v0 int), (r5v7 int) binds: [B:21:0x0040, B:23:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:22:0x0046\-\>B:23:0x0048\l|if (r5 \< r0) goto L_0x0048\l}"];
subgraph cluster_Region_990329941 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0048|LOOP_END\lLOOP:0: B:22:0x0046\-\>B:23:0x0048\l|r1.add(r4.get(r5))\lr5++\l}"];
}
}
}
subgraph cluster_Region_1498655896 {
label = "R(2:24|(1:27))";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0052|java.util.Iterator java.util.Iterator r4 = ((java.util.List) r4).listIterator(r5)\l}"];
subgraph cluster_LoopRegion_1027515432 {
label = "LOOP:1: (1:27)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x005e|if (r4.hasNext() != false) goto L_0x0060\l}"];
subgraph cluster_Region_215160619 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0060|LOOP_END\lLOOP:1: B:25:0x005a\-\>B:27:0x0060\l|r1.add(r4.next())\l}"];
}
}
}
}
Node_29 [shape=record,label="{29\:\ 0x006a|RETURN\l|return r1\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_1356745759 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x006b|java.util.ArrayList r1 = new java.util.ArrayList()\l}"];
}
}
Node_31 [shape=record,label="{31\:\ 0x0070|PHI: r1 \l  PHI: (r1v1 java.util.ArrayList) = (r1v3 java.util.ArrayList), (r1v4 java.util.ArrayList) binds: [B:30:0x006b, B:18:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|java.util.Iterator r4 = r4.iterator()\l}"];
subgraph cluster_LoopRegion_604939673 {
label = "LOOP:2: (3:34|(1:36)(0)|37)";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x0078|if (r4.hasNext() != false) goto L_0x007a\l}"];
subgraph cluster_Region_2046412391 {
label = "R(3:34|(1:36)(0)|37)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x007a|java.lang.Object r2 = r4.next()\lint int r3 = r0 + 1\l}"];
subgraph cluster_IfRegion_1340100058 {
label = "IF [B:35:0x0080] THEN: R(1:36) ELSE: R(0)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0080|if (r0 \>= r5) goto L_0x0082\l}"];
subgraph cluster_Region_89118893 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0082|r1.add(r2)\l}"];
}
subgraph cluster_Region_116401816 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_37 [shape=record,label="{37\:\ 0x0085|LOOP_END\lLOOP:2: B:32:0x0074\-\>B:37:0x0085\l|r0 = r3\l}"];
}
}
Node_39 [shape=record,label="{39\:\ 0x008d|RETURN\l|return kotlin.collections.CollectionsKt.optimizeReadOnlyList(r1)\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0007}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0010}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0015}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0023}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002a}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x003c}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x005a|LOOP_START\lLOOP:1: B:25:0x005a\-\>B:27:0x0060\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0068}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0074|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v1 int), (r0v4 int) binds: [B:31:0x0070, B:37:0x0085] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:32:0x0074\-\>B:37:0x0085\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0087}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0068|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x0068|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0087|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0085|SYNTHETIC\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x0085|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.drop((r4v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;I), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_40;
Node_40 -> Node_41;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_30[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_31[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_24[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_42[style=dashed];
Node_23 -> Node_22;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_26 -> Node_43[style=dashed];
Node_27 -> Node_25;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_33 -> Node_44[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_46[style=dashed];
Node_36 -> Node_45;
Node_37 -> Node_32;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_19 -> Node_20;
Node_25 -> Node_26;
Node_28 -> Node_29;
Node_32 -> Node_33;
Node_38 -> Node_39;
Node_42 -> Node_28;
Node_43 -> Node_28;
Node_44 -> Node_38;
Node_45 -> Node_37;
Node_46 -> Node_37;
}

