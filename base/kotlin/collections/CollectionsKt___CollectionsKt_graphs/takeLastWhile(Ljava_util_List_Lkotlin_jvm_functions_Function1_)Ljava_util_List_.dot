digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.takeLastWhile(Ljava\/util\/List;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"predicate\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r2.isEmpty() == false) goto L_0x0015\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010}"];
Node_3 [shape=record,label="{3\:\ 0x0014|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|java.util.ListIterator r0 = r2.listIterator(r2.size())\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|LOOP_START\lLOOP:0: B:5:0x001d\-\>B:8:0x0031\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|if (r0.hasPrevious() == false) goto L_0x005c\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023}"];
Node_8 [shape=record,label="{8\:\ 0x0031|LOOP_END\lLOOP:0: B:5:0x001d\-\>B:8:0x0031\l|if (r3.invoke(r0.previous()).booleanValue() != false) goto L_0x001d\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|r0.next()\lint r2 = r2.size() \- r0.nextIndex()\l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|if (r2 != 0) goto L_0x0046\l}"];
Node_11 [shape=record,label="{11\:\ 0x0041}"];
Node_12 [shape=record,label="{12\:\ 0x0045|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|java.util.ArrayList r3 = new java.util.ArrayList(r2)\l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|LOOP_START\lLOOP:1: B:14:0x004b\-\>B:16:0x0051\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|if (r0.hasNext() == false) goto L_0x0059\l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|LOOP_END\lLOOP:1: B:14:0x004b\-\>B:16:0x0051\l|r3.add(r0.next())\l}"];
Node_17 [shape=record,label="{17\:\ 0x0059}"];
Node_18 [shape=record,label="{18\:\ 0x005b|RETURN\l|return r3\l}"];
Node_19 [shape=record,label="{19\:\ 0x005c}"];
Node_20 [shape=record,label="{20\:\ 0x0062|RETURN\l|return kotlin.collections.CollectionsKt.toList(r2)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0033|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x005c|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.CollectionsKt___CollectionsKt.takeLastWhile((r2v0 java.util.List\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/List\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;, Ljava\/lang\/Boolean;, \>;), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_22;
Node_7 -> Node_8;
Node_8 -> Node_5;
Node_8 -> Node_21[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_23;
Node_16 -> Node_14;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_9;
Node_22 -> Node_19;
Node_23 -> Node_17;
}

