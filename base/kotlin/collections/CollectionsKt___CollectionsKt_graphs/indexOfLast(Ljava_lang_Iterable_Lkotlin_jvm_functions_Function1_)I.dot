digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.indexOfLast(Ljava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function1;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"predicate\")\ljava.util.Iterator r3 = r3.iterator()\lr0 = \-1\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:0:0x0000, B:6:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:6:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0010\-\>B:6:0x0027\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|if (r3.hasNext() == false) goto L_0x002a\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016}"];
Node_4 [shape=record,label="{4\:\ 0x0024|if (r4.invoke(r3.next()).booleanValue() == false) goto L_0x0027\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|r0 = r1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|LOOP_END\lPHI: r0 \l  PHI: (r0v4 int) = (r0v3 int), (r0v5 int) binds: [B:10:0x0027, B:9:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0010\-\>B:6:0x0027\l|int r1 = r1 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|RETURN\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.CollectionsKt___CollectionsKt.indexOfLast((r3v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;, Ljava\/lang\/Boolean;, \>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_9;
Node_6 -> Node_1;
Node_8 -> Node_7;
Node_9 -> Node_6;
Node_10 -> Node_6;
}

