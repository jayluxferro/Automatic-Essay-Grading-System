digraph "CFG forkotlin.collections.CollectionsKt___CollectionsKt.reduceRight(Ljava\/util\/List;Lkotlin\/jvm\/functions\/Function2;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1010434469 {
label = "R(2:0|(2:(3:2|(1:5)|6)|(1:8)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"operation\")\ljava.util.ListIterator java.util.ListIterator\<? extends T\> r2 = r2.listIterator(r2.size())\l}"];
subgraph cluster_Region_633392051 {
label = "R(2:(3:2|(1:5)|6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1684727590 {
label = "IF [B:1:0x0016] THEN: R(3:2|(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0016|if (r2.hasPrevious() == true) goto L_0x0018\l}"];
subgraph cluster_Region_1210501171 {
label = "R(3:2|(1:5)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0018|java.lang.Object S r0 = r2.previous()\l}"];
subgraph cluster_LoopRegion_986236568 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0020|if (r2.hasPrevious() != false) goto L_0x0022\l}"];
subgraph cluster_Region_1452527437 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0022|LOOP_END\lLOOP:0: B:3:0x001c\-\>B:5:0x0022\l|java.lang.Object r0 = r3.invoke(r2.previous(), r0)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x002b|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1760474895 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0035|throw new java.lang.UnsupportedOperationException(\"Empty list can't be reduced.\")\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x001c|LOOP_START\lPHI: r0 \l  PHI: (r0v5 S) = (r0v4 S), (r0v6 S) binds: [B:2:0x0018, B:5:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x001c\-\>B:5:0x0022\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002c}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final S kotlin.collections.CollectionsKt___CollectionsKt.reduceRight((r2v0 java.util.List\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 ? I:kotlin.jvm.functions.Function2\<? super T, ? super S, ? extends S\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lJADX WARNING: type inference failed for: r3v0, types: [java.lang.Object, kotlin.jvm.functions.Function2, kotlin.jvm.functions.Function2\<? super T, ? super S, ? extends S\>]\lUnknown variable types count: 1\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<S:, Ljava\/lang\/Object;, T::TS;\>(, Ljava\/util\/List\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function2\<, \-TT;\-TS;+TS;\>;)TS;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_3;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_6;
}

