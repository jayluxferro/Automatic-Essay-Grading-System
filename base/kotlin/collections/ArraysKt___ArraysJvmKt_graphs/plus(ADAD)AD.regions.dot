digraph "CFG forkotlin.collections.ArraysKt___ArraysJvmKt.plus([D[D)[D" {
subgraph cluster_Region_148724876 {
label = "R(2:0|1)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"elements\")\lint int r0 = r3.length\lint int r1 = r4.length\ldouble[] double[] r3 = java.util.Arrays.copyOf(r3, r0 + r1)\ljava.lang.System.arraycopy(r4, 0, r3, r0, r1)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r3, \"result\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|RETURN\l|return r3\l}"];
}
MethodNode[shape=record,label="{public static final double[] kotlin.collections.ArraysKt___ArraysJvmKt.plus((r3v0 double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

