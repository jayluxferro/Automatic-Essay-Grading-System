digraph "CFG forkotlin.collections.CollectionsKt__CollectionsJVMKt.copyToArrayImpl(Ljava\/util\/Collection;[Ljava\/lang\/Object;)[Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r1 == null) goto L_0x0011\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|java.lang.Object[] r0 = kotlin.jvm.internal.CollectionToArray.toArray(r0, r1)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r0 == null) goto L_0x0009\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|RETURN\l|return r0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009}"];
Node_5 [shape=record,label="{5\:\ 0x0010|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.Array\<T\>\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011}"];
Node_7 [shape=record,label="{7\:\ 0x0018|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.Array\<kotlin.Any?\>\")\l}"];
MethodNode[shape=record,label="{private static final T[] kotlin.collections.CollectionsKt__CollectionsJVMKt.copyToArrayImpl((r0v0 java.util.Collection\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Collection\<, *\>;[TT;)[TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

