digraph "CFG forkotlin.collections.AbstractMap.toString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.Set) = (r10 I:kotlin.collections.AbstractMap) kotlin.collections.AbstractMap.entrySet():java.util.Set type: VIRTUAL \l0x0004: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0005: CHECK_CAST  (r1 I:java.lang.Iterable) = (java.lang.Iterable) (r1 I:?[OBJECT, ARRAY]) \l0x0007: CONST_STR  (r0 I:java.lang.String) =  \", \" \l0x0009: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x000a: CHECK_CAST  (r2 I:java.lang.CharSequence) = (java.lang.CharSequence) (r2 I:?[OBJECT, ARRAY]) \l0x000c: CONST_STR  (r0 I:java.lang.String) =  \"\{\" \l0x000e: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x000f: CHECK_CAST  (r3 I:java.lang.CharSequence) = (java.lang.CharSequence) (r3 I:?[OBJECT, ARRAY]) \l0x0011: CONST_STR  (r0 I:java.lang.String) =  \"\}\" \l0x0013: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0014: CHECK_CAST  (r4 I:java.lang.CharSequence) = (java.lang.CharSequence) (r4 I:?[OBJECT, ARRAY]) \l0x0016: NEW_INSTANCE  (r0 I:kotlin.collections.AbstractMap$toString$1) =  kotlin.collections.AbstractMap$toString$1 \l0x0018: INVOKE  \l  (r0 I:kotlin.collections.AbstractMap$toString$1)\l  (r10 I:kotlin.collections.AbstractMap)\l kotlin.collections.AbstractMap$toString$1.\<init\>(kotlin.collections.AbstractMap):void type: DIRECT \l0x001b: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x001c: CHECK_CAST  (r7 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r7 I:?[OBJECT, ARRAY]) \l0x001e: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: CONST  (r8 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x0022: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: INVOKE  (r0 I:java.lang.String) = \l  (r1 I:java.lang.Iterable)\l  (r2 I:java.lang.CharSequence)\l  (r3 I:java.lang.CharSequence)\l  (r4 I:java.lang.CharSequence)\l  (r5 I:int)\l  (r6 I:java.lang.CharSequence)\l  (r7 I:kotlin.jvm.functions.Function1)\l  (r8 I:int)\l  (r9 I:java.lang.Object)\l kotlin.collections.CollectionsKt.joinToString$default(java.lang.Iterable, java.lang.CharSequence, java.lang.CharSequence, java.lang.CharSequence, int, java.lang.CharSequence, kotlin.jvm.functions.Function1, int, java.lang.Object):java.lang.String type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0027|0x0027: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.collections.AbstractMap.toString((r10 'this' I:kotlin.collections.AbstractMap A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

