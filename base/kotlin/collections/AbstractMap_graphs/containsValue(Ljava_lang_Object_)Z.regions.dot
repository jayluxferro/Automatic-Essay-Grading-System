digraph "CFG forkotlin.collections.AbstractMap.containsValue(Ljava\/lang\/Object;)Z" {
subgraph cluster_Region_549836619 {
label = "R(2:0|(2:(1:12)|(3:4|(1:(1:9))|13)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Iterable java.lang.Iterable\<java.util.Map.Entry\> r0 = entrySet()\l}"];
subgraph cluster_Region_1650422720 {
label = "R(2:(1:12)|(3:4|(1:(1:9))|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1845316876 {
label = "IF [B:1:0x0009, B:3:0x0012] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0009|if ((r0 instanceof java.util.Collection) != false) goto L_0x000b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|ADDED_TO_REGION\l|if (((java.util.Collection) r0).isEmpty() != false) goto L_?\l}"];
subgraph cluster_Region_645998725 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1141111221 {
label = "R(3:4|(1:(1:9))|13)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|java.util.Iterator r0 = r0.iterator()\l}"];
subgraph cluster_LoopRegion_1189143439 {
label = "LOOP:0: (1:(1:9))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|if (r0.hasNext() != false) goto L_0x001f\l}"];
subgraph cluster_Region_1007811063 {
label = "R(1:(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_633953478 {
label = "IF [B:8:0x002d] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002d|LOOP_END\lLOOP:0: B:5:0x0019\-\>B:8:0x002d\l|if (kotlin.jvm.internal.Intrinsics.areEqual(r1.getValue(), r4) == true) goto L_0x002f\l}"];
subgraph cluster_Region_170102266 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002f|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
}
}
}
}
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0019|LOOP_START\lLOOP:0: B:5:0x0019\-\>B:8:0x002d\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002f|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0030|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean kotlin.collections.AbstractMap.containsValue((r3v0 'this' kotlin.collections.AbstractMap A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_11[style=dashed];
Node_8 -> Node_5[style=dashed];
Node_8 -> Node_10;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_10 -> Node_9;
Node_11 -> Node_13;
}

