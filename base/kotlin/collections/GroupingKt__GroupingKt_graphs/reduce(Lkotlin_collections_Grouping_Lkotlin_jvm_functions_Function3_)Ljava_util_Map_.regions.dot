digraph "CFG forkotlin.collections.GroupingKt__GroupingKt.reduce(Lkotlin\/collections\/Grouping;Lkotlin\/jvm\/functions\/Function3;)Ljava\/util\/Map;" {
subgraph cluster_Region_783227562 {
label = "R(3:0|(3:3|(1:10)(0)|11)|12)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"operation\")\ljava.util.Map java.util.Map\<K, S\> r0 = new java.util.LinkedHashMap\<\>()\ljava.util.Iterator java.util.Iterator\<T\> r1 = r6.sourceIterator()\l}"];
subgraph cluster_LoopRegion_1428124068 {
label = "LOOP:0: (3:3|(1:10)(0)|11)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0019|if (r1.hasNext() != false) goto L_0x001b\l}"];
subgraph cluster_Region_1653906735 {
label = "R(3:3|(1:10)(0)|11)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001b|java.lang.Object T r2 = r1.next()\ljava.lang.Object java.lang.Object r3 = r6.keyOf(r2)\ljava.lang.Object S r4 = r0.get(r3)\l}"];
subgraph cluster_IfRegion_2018407479 {
label = "IF [B:9:0x0032] THEN: R(1:10) ELSE: R(0)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0032|PHI: r5 \l  PHI: (r5v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r4 == null && !r0.containsKey(r3)) != true) goto L_0x0035\l}"];
subgraph cluster_Region_62086119 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0035|java.lang.Object r2 = r7.invoke(r3, r4, r2)\l}"];
}
subgraph cluster_Region_1812487068 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_11 [shape=record,label="{11\:\ 0x0039|LOOP_END\lPHI: r2 \l  PHI: (r2v2 T) = (r2v1 T), (r2v3 T) binds: [B:15:0x0039, B:14:0x0039] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0015\-\>B:11:0x0039\l|r0.put(r3, r2)\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x003d|RETURN\l|return r0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0015|LOOP_START\lLOOP:0: B:1:0x0015\-\>B:11:0x0039\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0027}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0029}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002d|REMOVE\lADDED_TO_REGION\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0031}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003d|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0039|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0039|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, S\> kotlin.collections.GroupingKt__GroupingKt.reduce((r6v0 kotlin.collections.Grouping\<T, ? extends K\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 ? I:kotlin.jvm.functions.Function3\<? super K, ? super S, ? super T, ? extends S\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lJADX WARNING: type inference failed for: r7v0, types: [kotlin.jvm.functions.Function3\<? super K, ? super S, ? super T, ? extends S\>, kotlin.jvm.functions.Function3, java.lang.Object]\lUnknown variable types count: 1\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<S:, Ljava\/lang\/Object;, T::TS;K:, Ljava\/lang\/Object;, \>(, Lkotlin\/collections\/Grouping\<, TT;+TK;\>;, Lkotlin\/jvm\/functions\/Function3\<, \-TK;\-TS;\-TT;+TS;\>;), Ljava\/util\/Map\<, TK;TS;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_13[style=dashed];
Node_3 -> Node_4;
Node_9 -> Node_10;
Node_9 -> Node_15[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_13 -> Node_12;
Node_14 -> Node_11;
Node_15 -> Node_11;
}

