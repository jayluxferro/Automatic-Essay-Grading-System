digraph "CFG forkotlin.collections.GroupingKt__GroupingKt.eachCountTo(Lkotlin\/collections\/Grouping;Ljava\/util\/Map;)Ljava\/util\/Map;" {
subgraph cluster_Region_145177815 {
label = "R(3:0|(3:3|(1:10)(0)|11)|12)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, com.google.firebase.analytics.FirebaseAnalytics.Param.DESTINATION)\ljava.util.Iterator java.util.Iterator\<T\> r2 = r7.sourceIterator()\l}"];
subgraph cluster_LoopRegion_1868599693 {
label = "LOOP:0: (3:3|(1:10)(0)|11)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0017|if (r2.hasNext() != false) goto L_0x0019\l}"];
subgraph cluster_Region_628460795 {
label = "R(3:3|(1:10)(0)|11)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0019|java.lang.Object java.lang.Object r3 = r7.keyOf(r2.next())\ljava.lang.Object java.lang.Object r4 = r8.get(r3)\l}"];
subgraph cluster_IfRegion_261381555 {
label = "IF [B:9:0x0031] THEN: R(1:10) ELSE: R(0)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0031|PHI: r6 \l  PHI: (r6v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r4 == null && !r8.containsKey(r3)) == true) goto L_0x0033\l}"];
subgraph cluster_Region_1055168786 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0033|r4 = 0\l}"];
}
subgraph cluster_Region_2018721621 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_11 [shape=record,label="{11\:\ 0x0034|LOOP_END\lPHI: r4 \l  PHI: (r4v1 java.lang.Object) = (r4v0 java.lang.Object), (r4v6 java.lang.Object) binds: [B:15:0x0034, B:14:0x0034] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0013\-\>B:11:0x0034\l|r8.put(r3, java.lang.Integer.valueOf(((java.lang.Number) r4).intValue() + 1))\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0043|RETURN\l|return r8\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0013|LOOP_START\lLOOP:0: B:1:0x0013\-\>B:11:0x0034\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0026}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0028}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002c|REMOVE\lADDED_TO_REGION\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002e}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0030}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0043|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0034|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0034|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final M kotlin.collections.GroupingKt__GroupingKt.eachCountTo((r7v0 kotlin.collections.Grouping\<T, ? extends K\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 M A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, K:, Ljava\/lang\/Object;, M::, Ljava\/util\/Map\<, \-TK;, Ljava\/lang\/Integer;, \>;\>(, Lkotlin\/collections\/Grouping\<, TT;+TK;\>;TM;)TM;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_13[style=dashed];
Node_3 -> Node_4;
Node_9 -> Node_10;
Node_9 -> Node_15[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_1;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_13 -> Node_12;
Node_14 -> Node_11;
Node_15 -> Node_11;
}

