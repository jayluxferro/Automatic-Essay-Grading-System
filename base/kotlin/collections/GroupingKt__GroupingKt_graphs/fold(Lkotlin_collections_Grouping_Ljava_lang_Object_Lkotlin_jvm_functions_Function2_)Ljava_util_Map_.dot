digraph "CFG forkotlin.collections.GroupingKt__GroupingKt.fold(Lkotlin\/collections\/Grouping;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, \"operation\")\ljava.util.Map r0 = new java.util.LinkedHashMap\<\>()\ljava.util.Iterator r1 = r6.sourceIterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|LOOP_START\lLOOP:0: B:1:0x0015\-\>B:11:0x0035\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|if (r1.hasNext() == false) goto L_0x003d\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|java.lang.Object r2 = r1.next()\ljava.lang.Object r3 = r6.keyOf(r2)\ljava.lang.Object r4 = r0.get(r3)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0027|if (r4 != null) goto L_0x0031\l}"];
Node_5 [shape=record,label="{5\:\ 0x0029}"];
Node_6 [shape=record,label="{6\:\ 0x002d|if (r0.containsKey(r3) != false) goto L_0x0031\l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|r5 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|r5 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|PHI: r5 \l  PHI: (r5v0 boolean) = (r5v1 boolean), (r5v3 boolean) binds: [B:8:0x0031, B:7:0x002f] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == false) goto L_0x0035\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|r4 = r7\l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|LOOP_END\lPHI: r4 \l  PHI: (r4v1 R) = (r4v0 R), (r4v2 R) binds: [B:15:0x0035, B:14:0x0035] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0015\-\>B:11:0x0035\l|r0.put(r3, r8.invoke(r4, r2))\l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|RETURN\l|return r0\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, R\> kotlin.collections.GroupingKt__GroupingKt.fold((r6v0 kotlin.collections.Grouping\<T, ? extends K\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 R A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.jvm.functions.Function2\<? super R, ? super T, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, K:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, \>(, Lkotlin\/collections\/Grouping\<, TT;+TK;\>;TR;, Lkotlin\/jvm\/functions\/Function2\<, \-TR;\-TT;+TR;\>;), Ljava\/util\/Map\<, TK;TR;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_14;
Node_11 -> Node_1;
Node_13 -> Node_12;
Node_14 -> Node_11;
Node_15 -> Node_11;
}

