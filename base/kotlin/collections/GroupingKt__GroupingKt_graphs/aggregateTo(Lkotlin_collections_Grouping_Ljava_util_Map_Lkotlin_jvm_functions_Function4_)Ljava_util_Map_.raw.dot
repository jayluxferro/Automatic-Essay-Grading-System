digraph "CFG forkotlin.collections.GroupingKt__GroupingKt.aggregateTo(Lkotlin\/collections\/Grouping;Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function4;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x000c: INVOKE  (r7 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000f: INVOKE  (r0 I:java.util.Iterator) = (r5 I:kotlin.collections.Grouping) kotlin.collections.Grouping.sourceIterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003c \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001d: INVOKE  (r2 I:java.lang.Object) = (r5 I:kotlin.collections.Grouping), (r1 I:java.lang.Object) kotlin.collections.Grouping.keyOf(java.lang.Object):java.lang.Object type: INTERFACE \l0x0021: INVOKE  (r3 I:java.lang.Object) = (r6 I:java.util.Map), (r2 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: INVOKE  (r4 I:boolean) = (r6 I:java.util.Map), (r2 I:java.lang.Object) java.util.Map.containsKey(java.lang.Object):boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002f \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: INVOKE  (r4 I:java.lang.Boolean) = (r4 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x0034: INVOKE  (r1 I:java.lang.Object) = \l  (r7 I:kotlin.jvm.functions.Function4)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l kotlin.jvm.functions.Function4.invoke(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0038: INVOKE  \l  (r6 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|0x003c: RETURN  (r6 I:M) \l}"];
MethodNode[shape=record,label="{public static final M kotlin.collections.GroupingKt__GroupingKt.aggregateTo((r5 I:kotlin.collections.Grouping\<T, ? extends K\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:M A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function4\<? super K, ? super R, ? super T, ? super java.lang.Boolean, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, K:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, M::, Ljava\/util\/Map\<, \-TK;TR;\>;\>(, Lkotlin\/collections\/Grouping\<, TT;+TK;\>;TM;, Lkotlin\/jvm\/functions\/Function4\<, \-TK;\-TR;\-TT;\-, Ljava\/lang\/Boolean;, +TR;\>;)TM;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

