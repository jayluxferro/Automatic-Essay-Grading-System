digraph "CFG forkotlin.collections.GroupingKt__GroupingKt.foldTo(Lkotlin\/collections\/Grouping;Ljava\/util\/Map;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, com.google.firebase.analytics.FirebaseAnalytics.Param.DESTINATION)\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, \"operation\")\ljava.util.Iterator r0 = r5.sourceIterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|LOOP_START\lLOOP:0: B:1:0x0013\-\>B:11:0x0033\l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|if (r0.hasNext() == false) goto L_0x003b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|java.lang.Object r1 = r0.next()\ljava.lang.Object r2 = r5.keyOf(r1)\ljava.lang.Object r3 = r6.get(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|if (r3 != null) goto L_0x002f\l}"];
Node_5 [shape=record,label="{5\:\ 0x0027}"];
Node_6 [shape=record,label="{6\:\ 0x002b|if (r6.containsKey(r2) != false) goto L_0x002f\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|r4 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|r4 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|PHI: r4 \l  PHI: (r4v0 boolean) = (r4v1 boolean), (r4v3 boolean) binds: [B:8:0x002f, B:7:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L_0x0033\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|r3 = r7\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|LOOP_END\lPHI: r3 \l  PHI: (r3v1 R) = (r3v0 R), (r3v2 R) binds: [B:15:0x0033, B:14:0x0033] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0013\-\>B:11:0x0033\l|r6.put(r2, r8.invoke(r3, r1))\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|RETURN\l|return r6\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0033|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final M kotlin.collections.GroupingKt__GroupingKt.foldTo((r5v0 kotlin.collections.Grouping\<T, ? extends K\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 M A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 R A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.jvm.functions.Function2\<? super R, ? super T, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, K:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, M::, Ljava\/util\/Map\<, \-TK;TR;\>;\>(, Lkotlin\/collections\/Grouping\<, TT;+TK;\>;TM;TR;, Lkotlin\/jvm\/functions\/Function2\<, \-TR;\-TT;+TR;\>;)TM;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_14;
Node_11 -> Node_1;
Node_13 -> Node_12;
Node_14 -> Node_11;
Node_15 -> Node_11;
}

