digraph "CFG forkotlin.collections.MapsKt___MapsKt.flatMapTo(Ljava\/util\/Map;Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Collection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000f: INVOKE  (r1 I:java.util.Set) = (r1 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x0013: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: INVOKE  (r0 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x002d \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: INVOKE  (r0 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0021: CHECK_CAST  (r0 I:java.util.Map$Entry) = (java.util.Map$Entry) (r0 I:?[OBJECT, ARRAY]) \l0x0023: INVOKE  (r0 I:java.lang.Object) = \l  (r3 I:kotlin.jvm.functions.Function1)\l  (r0 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x0027: CHECK_CAST  (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:?[OBJECT, ARRAY]) \l0x0029: INVOKE  (r2 I:java.util.Collection), (r0 I:java.lang.Iterable) kotlin.collections.CollectionsKt.addAll(java.util.Collection, java.lang.Iterable):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|0x002d: RETURN  (r2 I:C) \l}"];
MethodNode[shape=record,label="{public static final C kotlin.collections.MapsKt___MapsKt.flatMapTo((r1 I:java.util.Map\<? extends K, ? extends V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:C A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.jvm.functions.Function1\<? super java.util.Map$Entry\<? extends K, ? extends V\>, ? extends java.lang.Iterable\<? extends R\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, C::, Ljava\/util\/Collection\<, \-TR;\>;\>(, Ljava\/util\/Map\<, +TK;+TV;\>;TC;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/util\/Map$Entry\<, +TK;+TV;\>;+, Ljava\/lang\/Iterable\<, +TR;\>;\>;)TC;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

