digraph "CFG forkotlin.collections.MapsKt___MapsKt.maxBy(Ljava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map$Entry;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r5 = r5.entrySet().iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r5.hasNext() != false) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|r5 = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|java.lang.Object r0 = r5.next()\ljava.lang.Comparable r1 = (java.lang.Comparable) r6.invoke(r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v2 java.lang.Object) = (r0v1 java.lang.Object), (r0v3 java.lang.Object) binds: [B:3:0x0012, B:12:0x001c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 java.lang.Comparable) = (r1v1 java.lang.Comparable), (r1v3 java.lang.Comparable) binds: [B:3:0x0012, B:12:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x001c\-\>B:12:0x001c\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|if (r5.hasNext() == false) goto L_0x0035\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|java.lang.Object r2 = r5.next()\ljava.lang.Comparable r3 = (java.lang.Comparable) r6.invoke(r2)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|if (r1.compareTo(r3) \>= 0) goto L_0x001c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|r0 = r2\lr1 = r3\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|r5 = r0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|PHI: r5 \l  PHI: (r5v4 java.lang.Object) = (r5v6 java.lang.Object), (r5v7 java.lang.Object) binds: [B:9:0x0035, B:2:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|RETURN\l|return (java.util.Map.Entry) r5\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|LOOP_END\lSYNTHETIC\lPHI: r0 r1 \l  PHI: (r0v3 java.lang.Object) = (r0v2 java.lang.Object), (r0v4 java.lang.Object) binds: [B:14:0x001c, B:15:0x001c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v3 java.lang.Comparable) = (r1v2 java.lang.Comparable), (r1v4 java.lang.Comparable) binds: [B:14:0x001c, B:15:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x001c\-\>B:12:0x001c\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x001c|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x001c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static final java.util.Map$Entry\<K, V\> kotlin.collections.MapsKt___MapsKt.maxBy((r5v0 java.util.Map\<? extends K, ? extends V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.jvm.functions.Function1\<? super java.util.Map$Entry\<? extends K, ? extends V\>, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, R::, Ljava\/lang\/Comparable\<, \-TR;\>;\>(, Ljava\/util\/Map\<, +TK;+TV;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/util\/Map$Entry\<, +TK;+TV;\>;+TR;\>;), Ljava\/util\/Map$Entry\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_4;
Node_13 -> Node_9;
Node_14 -> Node_12;
Node_15 -> Node_12;
}

