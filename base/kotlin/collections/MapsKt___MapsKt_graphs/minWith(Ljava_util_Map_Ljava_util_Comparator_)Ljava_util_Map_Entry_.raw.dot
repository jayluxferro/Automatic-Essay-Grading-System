digraph "CFG forkotlin.collections.MapsKt___MapsKt.minWith(Ljava\/util\/Map;Ljava\/util\/Comparator;)Ljava\/util\/Map$Entry;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"comparator\" \l0x0007: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: INVOKE  (r1 I:java.util.Set) = (r1 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x000e: CHECK_CAST  (r1 I:java.lang.Iterable) = (java.lang.Iterable) (r1 I:?[OBJECT, ARRAY]) \l0x0010: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Iterable), (r2 I:java.util.Comparator) kotlin.collections.CollectionsKt.minWith(java.lang.Iterable, java.util.Comparator):java.lang.Object type: STATIC \l0x0014: CHECK_CAST  (r1 I:java.util.Map$Entry) = (java.util.Map$Entry) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: RETURN  (r1 I:java.util.Map$Entry\<K, V\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Map$Entry\<K, V\> kotlin.collections.MapsKt___MapsKt.minWith((r1 I:java.util.Map\<? extends K, ? extends V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.util.Comparator\<? super java.util.Map$Entry\<? extends K, ? extends V\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Map\<, +TK;+TV;\>;, Ljava\/util\/Comparator\<, \-, Ljava\/util\/Map$Entry\<, +TK;+TV;\>;\>;), Ljava\/util\/Map$Entry\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

