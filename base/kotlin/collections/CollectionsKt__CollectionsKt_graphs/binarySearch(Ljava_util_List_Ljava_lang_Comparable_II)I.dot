digraph "CFG forkotlin.collections.CollectionsKt__CollectionsKt.binarySearch(Ljava\/util\/List;Ljava\/lang\/Comparable;II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\lrangeCheck$CollectionsKt__CollectionsKt(r2.size(), r4, r5)\lint r5 = r5 + \-1\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|LOOP_START\lPHI: r4 r5 \l  PHI: (r4v1 int) = (r4v0 int), (r4v3 int) binds: [B:0:0x0000, B:10:0x000e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 int) = (r5v1 int), (r5v3 int) binds: [B:0:0x0000, B:10:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:10:0x000e\l|if (r4 \> r5) goto L_0x002b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|int r0 = (r4 + r5) \>\>\> 1\lint r1 = kotlin.comparisons.ComparisonsKt.compareValues((java.lang.Comparable) r2.get(r0), r3)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|if (r1 \>= 0) goto L_0x0024\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|r4 = r0 + 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|if (r1 \<= 0) goto L_0x002a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|r5 = r0 + \-1\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|RETURN\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b}"];
Node_9 [shape=record,label="{9\:\ 0x002e|RETURN\l|return \-(r4 + 1)\l}"];
Node_10 [shape=record,label="{10\:\ 0x000e|LOOP_END\lSYNTHETIC\lPHI: r4 r5 \l  PHI: (r4v3 int) = (r4v1 int), (r4v4 int) binds: [B:14:0x000e, B:13:0x000e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 int) = (r5v4 int), (r5v2 int) binds: [B:14:0x000e, B:13:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:10:0x000e\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x000e|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x000e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.CollectionsKt__CollectionsKt.binarySearch((r2v0 java.util.List\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], , \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Ljava\/lang\/Comparable\<, \-TT;\>;\>(, Ljava\/util\/List\<, +TT;\>;TT;II)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_14;
Node_8 -> Node_9;
Node_10 -> Node_1;
Node_11 -> Node_7;
Node_12 -> Node_8;
Node_13 -> Node_10;
Node_14 -> Node_10;
}

