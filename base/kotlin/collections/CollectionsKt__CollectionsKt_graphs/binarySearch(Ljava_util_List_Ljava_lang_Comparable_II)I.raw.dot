digraph "CFG forkotlin.collections.CollectionsKt__CollectionsKt.binarySearch(Ljava\/util\/List;Ljava\/lang\/Comparable;II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r0 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0009: INVOKE  (r0 I:int), (r4 I:int), (r5 I:int) kotlin.collections.CollectionsKt__CollectionsKt.rangeCheck$CollectionsKt__CollectionsKt(int, int, int):void type: STATIC \l0x000c: ARITH  (r5 I:int) = (r5 I:int) + (\-1 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r4 I:?[int, byte, short, char]) \> (r5 I:?[int, byte, short, char])  \-\> B:8:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: ARITH  (r0 I:int) = (r4 I:int) + (r5 I:int) \l0x0012: ARITH  (r0 I:int) = (r0 I:int) \>\>\> (1 int) \l0x0014: INVOKE  (r1 I:java.lang.Object) = (r2 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0018: CHECK_CAST  (r1 I:java.lang.Comparable) = (java.lang.Comparable) (r1 I:?[OBJECT, ARRAY]) \l0x001a: INVOKE  (r1 I:int) = (r1 I:java.lang.Comparable), (r3 I:java.lang.Comparable) kotlin.comparisons.ComparisonsKt.compareValues(java.lang.Comparable, java.lang.Comparable):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: IF  (r1 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0022: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x002a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l0x0028: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: RETURN  (r0 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x002d: NEG  (r2 I:int) = (r4 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{public static final int kotlin.collections.CollectionsKt__CollectionsKt.binarySearch((r2 I:java.util.List\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], , \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Ljava\/lang\/Comparable\<, \-TT;\>;\>(, Ljava\/util\/List\<, +TT;\>;TT;II)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_1;
Node_8 -> Node_9;
}

