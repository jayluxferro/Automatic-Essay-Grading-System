digraph "CFG forkotlin.collections.CollectionsKt__MutableCollectionsKt.filterInPlace$CollectionsKt__MutableCollectionsKt(Ljava\/util\/List;Lkotlin\/jvm\/functions\/Function1;Z)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r6 instanceof java.util.RandomAccess) != false) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r6 == null) goto L_0x000f\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006}"];
Node_4 [shape=record,label="{4\:\ 0x000e|RETURN\l|return filterInPlace$CollectionsKt__MutableCollectionsKt(kotlin.jvm.internal.TypeIntrinsics.asMutableIterable(r6), r7, r8)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f}"];
Node_6 [shape=record,label="{6\:\ 0x0016|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.collections.MutableIterable\<T\>\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|int r0 = kotlin.collections.CollectionsKt.getLastIndex(r6)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|if (r0 \< 0) goto L_0x003d\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|r2 = 0\lr3 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:9:0x001e, B:16:0x003a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 int) = (r3v2 int), (r3v4 int) binds: [B:9:0x001e, B:16:0x003a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x0020\-\>B:16:0x003a\l|java.lang.Object r4 = r6.get(r2)\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|if (r7.invoke(r4).booleanValue() != r8) goto L_0x0031\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|if (r3 == r2) goto L_0x0036\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|r6.set(r3, r4)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|int r3 = r3 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|PHI: r3 \l  PHI: (r3v4 int) = (r3v3 int), (r3v5 int) binds: [B:11:0x002e, B:14:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == r0) goto L_0x003e\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|LOOP_END\lLOOP:0: B:10:0x0020\-\>B:16:0x003a\l|int r2 = r2 + 1\l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|r3 = 0\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|PHI: r3 \l  PHI: (r3v0 int) = (r3v1 int), (r3v4 int) binds: [B:17:0x003d, B:26:0x003e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|if (r3 \>= r6.size()) goto L_0x0054\l}"];
Node_20 [shape=record,label="{20\:\ 0x0044|int r7 = kotlin.collections.CollectionsKt.getLastIndex(r6)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0048|if (r7 \< r3) goto L_?\l}"];
Node_22 [shape=record,label="{22\:\ 0x004a|LOOP_START\lPHI: r7 \l  PHI: (r7v3 int) = (r7v2 int), (r7v4 int) binds: [B:21:0x0048, B:24:0x004f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:22:0x004a\-\>B:24:0x004f\l|r6.remove(r7)\l}"];
Node_23 [shape=record,label="{23\:\ 0x004d|if (r7 == r3) goto L_0x0052\l}"];
Node_24 [shape=record,label="{24\:\ 0x004f|LOOP_END\lLOOP:1: B:22:0x004a\-\>B:24:0x004f\l|int r7 = r7 + \-1\l}"];
Node_25 [shape=record,label="{25\:\ 0x0054|RETURN\l|return false\l}"];
Node_26 [shape=record,label="{26\:\ 0x003e|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0052|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{private static final boolean kotlin.collections.CollectionsKt__MutableCollectionsKt.filterInPlace$CollectionsKt__MutableCollectionsKt((r6v0 java.util.List\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/List\<, TT;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;, Ljava\/lang\/Boolean;, \>;Z)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_15[style=dashed];
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_26;
Node_16 -> Node_10;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_28;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_22;
Node_26 -> Node_18;
Node_27 -> Node_29;
}

