digraph "CFG forkotlin.collections.CollectionsKt__MutableCollectionsKt.retainAll(Ljava\/util\/Collection;[Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0007: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l0x000b: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r3 I:java.util.HashSet) = (r3 I:java.lang.Object[]) kotlin.collections.ArraysKt.toHashSet(java.lang.Object[]):java.util.HashSet type: STATIC \l0x0018: CHECK_CAST  (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:?[OBJECT, ARRAY]) \l0x001a: INVOKE  (r2 I:boolean) = (r2 I:java.util.Collection), (r3 I:java.util.Collection) java.util.Collection.retainAll(java.util.Collection):boolean type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN  (r2 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: INVOKE  (r2 I:boolean) = (r2 I:java.util.Collection) kotlin.collections.CollectionsKt__MutableCollectionsKt.retainNothing$CollectionsKt__MutableCollectionsKt(java.util.Collection):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.collections.CollectionsKt__MutableCollectionsKt.retainAll((r2 I:java.util.Collection\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Collection\<, \-TT;\>;[TT;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

