digraph "CFG forkotlin.collections.SetsKt___SetsKt.plus(Ljava\/util\/Set;Ljava\/lang\/Object;)Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: NEW_INSTANCE  (r0 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet \l0x0007: INVOKE  (r1 I:int) = (r2 I:java.util.Set) java.util.Set.size():int type: INTERFACE \l0x000b: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x000d: INVOKE  (r1 I:int) = (r1 I:int) kotlin.collections.MapsKt.mapCapacity(int):int type: STATIC \l0x0011: INVOKE  (r0 I:java.util.LinkedHashSet), (r1 I:int) java.util.LinkedHashSet.\<init\>(int):void type: DIRECT \l0x0014: CHECK_CAST  (r2 I:java.util.Collection) = (java.util.Collection) (r2 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r0 I:java.util.LinkedHashSet), (r2 I:java.util.Collection) java.util.LinkedHashSet.addAll(java.util.Collection):boolean type: VIRTUAL \l0x0019: INVOKE  (r0 I:java.util.LinkedHashSet), (r3 I:java.lang.Object) java.util.LinkedHashSet.add(java.lang.Object):boolean type: VIRTUAL \l0x001c: CHECK_CAST  (r0 I:java.util.Set) = (java.util.Set) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: RETURN  (r0 I:java.util.Set\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Set\<T\> kotlin.collections.SetsKt___SetsKt.plus((r2 I:java.util.Set\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Set\<, +TT;\>;TT;), Ljava\/util\/Set\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

