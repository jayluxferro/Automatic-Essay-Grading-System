digraph "CFG forkotlin.collections.SetsKt___SetsKt.minus(Ljava\/util\/Set;Ljava\/lang\/Iterable;)Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0007: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x000b: CHECK_CAST  (r0 I:java.lang.Iterable) = (java.lang.Iterable) (r0 I:?[OBJECT, ARRAY]) \l0x000d: INVOKE  (r4 I:java.util.Collection) = (r4 I:java.lang.Iterable), (r0 I:java.lang.Iterable) kotlin.collections.CollectionsKt.convertToSetForSetOperationWith(java.lang.Iterable, java.lang.Iterable):java.util.Collection type: STATIC \l0x0011: INVOKE  (r1 I:boolean) = (r4 I:java.util.Collection) java.util.Collection.isEmpty():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: INVOKE  (r3 I:java.util.Set) = (r0 I:java.lang.Iterable) kotlin.collections.CollectionsKt.toSet(java.lang.Iterable):java.util.Set type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: RETURN  (r3 I:java.util.Set\<T\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: INSTANCE_OF  (r1 I:boolean) = (r4 I:?[OBJECT, ARRAY]) java.util.Set \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0042 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: NEW_INSTANCE  (r3 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet \l0x0022: INVOKE  (r3 I:java.util.LinkedHashSet) java.util.LinkedHashSet.\<init\>():void type: DIRECT \l0x0025: CHECK_CAST  (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:?[OBJECT, ARRAY]) \l0x0027: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.lang.Iterable) java.lang.Iterable.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003f \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0035: INVOKE  (r2 I:boolean) = (r4 I:java.util.Collection), (r1 I:java.lang.Object) java.util.Collection.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002b \l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: INVOKE  (r3 I:java.util.Collection), (r1 I:java.lang.Object) java.util.Collection.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: CHECK_CAST  (r3 I:java.util.Set) = (java.util.Set) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: RETURN  (r3 I:java.util.Set\<T\>) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|0x0042: NEW_INSTANCE  (r0 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet \l0x0044: CHECK_CAST  (r3 I:java.util.Collection) = (java.util.Collection) (r3 I:?[OBJECT, ARRAY]) \l0x0046: INVOKE  (r0 I:java.util.LinkedHashSet), (r3 I:java.util.Collection) java.util.LinkedHashSet.\<init\>(java.util.Collection):void type: DIRECT \l0x0049: INVOKE  (r0 I:java.util.LinkedHashSet), (r4 I:java.util.Collection) java.util.LinkedHashSet.removeAll(java.util.Collection):boolean type: VIRTUAL \l0x004c: CHECK_CAST  (r0 I:java.util.Set) = (java.util.Set) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|0x004e: RETURN  (r0 I:java.util.Set\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Set\<T\> kotlin.collections.SetsKt___SetsKt.minus((r3 I:java.util.Set\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Set\<, +TT;\>;, Ljava\/lang\/Iterable\<, +TT;\>;), Ljava\/util\/Set\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_7;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_7;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

