digraph "CFG forkotlin.collections.SetsKt___SetsKt.plus(Ljava\/util\/Set;Ljava\/lang\/Iterable;)Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"elements\" \l0x0007: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: INVOKE  (r0 I:java.lang.Integer) = (r3 I:java.lang.Iterable) kotlin.collections.CollectionsKt.collectionSizeOrNull(java.lang.Iterable):java.lang.Integer type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: CHECK_CAST  (r0 I:java.lang.Number) = (java.lang.Number) (r0 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r0 I:int) = (r0 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x0016: INVOKE  (r1 I:int) = (r2 I:java.util.Set) java.util.Set.size():int type: INTERFACE \l0x001a: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: INVOKE  (r0 I:int) = (r2 I:java.util.Set) java.util.Set.size():int type: INTERFACE \l0x0020: ARITH  (r1 I:int) = (r0 I:int) * (2 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: INVOKE  (r0 I:int) = (r1 I:int) kotlin.collections.MapsKt.mapCapacity(int):int type: STATIC \l0x0026: NEW_INSTANCE  (r1 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet \l0x0028: INVOKE  (r1 I:java.util.LinkedHashSet), (r0 I:int) java.util.LinkedHashSet.\<init\>(int):void type: DIRECT \l0x002b: CHECK_CAST  (r2 I:java.util.Collection) = (java.util.Collection) (r2 I:?[OBJECT, ARRAY]) \l0x002d: INVOKE  (r1 I:java.util.LinkedHashSet), (r2 I:java.util.Collection) java.util.LinkedHashSet.addAll(java.util.Collection):boolean type: VIRTUAL \l0x0030: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0031: CHECK_CAST  (r2 I:java.util.Collection) = (java.util.Collection) (r2 I:?[OBJECT, ARRAY]) \l0x0033: INVOKE  (r2 I:java.util.Collection), (r3 I:java.lang.Iterable) kotlin.collections.CollectionsKt.addAll(java.util.Collection, java.lang.Iterable):boolean type: STATIC \l0x0036: CHECK_CAST  (r1 I:java.util.Set) = (java.util.Set) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0038|0x0038: RETURN  (r1 I:java.util.Set\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Set\<T\> kotlin.collections.SetsKt___SetsKt.plus((r2 I:java.util.Set\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Set\<, +TT;\>;, Ljava\/lang\/Iterable\<, +TT;\>;), Ljava\/util\/Set\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

