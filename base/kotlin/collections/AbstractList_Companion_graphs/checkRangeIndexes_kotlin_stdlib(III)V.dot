digraph "CFG forkotlin.collections.AbstractList.Companion.checkRangeIndexes$kotlin_stdlib(III)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 \< 0) goto L_0x0028\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5 \> r6) goto L_0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r4 \> r5) goto L_0x0007\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"fromIndex: \")\lr0.append(r4)\lr0.append(\" \> toIndex: \")\lr0.append(r5)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"fromIndex: \")\lr1.append(r4)\lr1.append(\", toIndex: \")\lr1.append(r5)\lr1.append(\", size: \")\lr1.append(r6)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0050|throw new java.lang.IndexOutOfBoundsException(r1.toString())\l}"];
MethodNode[shape=record,label="{public final void kotlin.collections.AbstractList.Companion.checkRangeIndexes$kotlin_stdlib((r3v0 'this' kotlin.collections.AbstractList$Companion A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

