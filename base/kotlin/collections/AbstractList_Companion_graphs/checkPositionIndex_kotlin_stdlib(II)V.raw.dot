digraph "CFG forkotlin.collections.AbstractList.Companion.checkPositionIndex$kotlin_stdlib(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r4 I:?[int, byte, short, char]) \> (r5 I:?[int, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: NEW_INSTANCE  (r0 I:java.lang.IndexOutOfBoundsException) =  java.lang.IndexOutOfBoundsException \l0x0007: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0009: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000c: CONST_STR  (r2 I:java.lang.String) =  \"index: \" \l0x000e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0011: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0014: CONST_STR  (r4 I:java.lang.String) =  \", size: \" \l0x0016: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x001c: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0020: INVOKE  \l  (r0 I:java.lang.IndexOutOfBoundsException)\l  (r4 I:java.lang.String)\l java.lang.IndexOutOfBoundsException.\<init\>(java.lang.String):void type: DIRECT \l0x0023: CHECK_CAST  (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final void kotlin.collections.AbstractList.Companion.checkPositionIndex$kotlin_stdlib((r3 'this' I:kotlin.collections.AbstractList$Companion A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

