digraph "CFG forkotlin.collections.CollectionsKt__IterablesKt.convertToSetForSetOperationWith(Ljava\/lang\/Iterable;Ljava\/lang\/Iterable;)Ljava\/util\/Collection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, com.google.firebase.analytics.FirebaseAnalytics.Param.SOURCE)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if ((r1 instanceof java.util.Set) == false) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e}"];
Node_3 [shape=record,label="{3\:\ 0x0011}"];
Node_4 [shape=record,label="{4\:\ 0x0013|if ((r1 instanceof java.util.Collection) == false) goto L_0x0037\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015}"];
Node_6 [shape=record,label="{6\:\ 0x0017|if ((r2 instanceof java.util.Collection) == false) goto L_0x0025\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019}"];
Node_8 [shape=record,label="{8\:\ 0x0020|if (((java.util.Collection) r2).size() \>= 2) goto L_0x0025\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022}"];
Node_10 [shape=record,label="{10\:\ 0x0025|java.util.Collection r2 = (java.util.Collection) r1\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|if (safeToConvertToSet$CollectionsKt__IterablesKt(r2) == false) goto L_0x0035\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e}"];
Node_13 [shape=record,label="{13\:\ 0x0035}"];
Node_14 [shape=record,label="{14\:\ 0x0037}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return kotlin.collections.CollectionsKt.toHashSet(r1)\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return (java.util.Collection) r1\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return (java.util.Collection) r1\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.collections.CollectionsKt.toHashSet(r1)\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public static final java.util.Collection\<T\> kotlin.collections.CollectionsKt__IterablesKt.convertToSetForSetOperationWith((r1v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.lang.Iterable\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, +TT;\>;, Ljava\/lang\/Iterable\<, +TT;\>;), Ljava\/util\/Collection\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_18;
Node_13 -> Node_19;
Node_14 -> Node_15;
}

