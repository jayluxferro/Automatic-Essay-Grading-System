digraph "CFG forkotlin.collections.CollectionsKt__MutableCollectionsJVMKt.sort(Ljava\/util\/List;Ljava\/util\/Comparator;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|throw new kotlin.NotImplementedError((java.lang.String) null, 1, (kotlin.jvm.internal.DefaultConstructorMarker) null)\l}"];
MethodNode[shape=record,label="{private static final void kotlin.collections.CollectionsKt__MutableCollectionsJVMKt.sort((r1v0 java.util.List\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.util.Comparator\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[RUNTIME, kotlin.Deprecated, \{level=kotlin.DeprecationLevel.ERROR kotlin.DeprecationLevel, message=Use sortWith(comparator) instead., replaceWith=Annotation[null, kotlin.ReplaceWith, \{expression=this.sortWith(comparator), imports=[]\}]\}], Annotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/List\<, TT;\>;, Ljava\/util\/Comparator\<, \-TT;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

