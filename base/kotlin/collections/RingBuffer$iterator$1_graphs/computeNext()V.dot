digraph "CFG forkotlin.collections.RingBuffer$iterator$1.computeNext()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.count != 0) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|done()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|setNext(kotlin.collections.RingBuffer.access$getBuffer$p(r2.this$0)[r2.index])\lkotlin.collections.RingBuffer r0 = r2.this$0\lr2.index = (r2.index + 1) % r0.getCapacity()\lr2.count = r2.count + \-1\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void kotlin.collections.RingBuffer$iterator$1.computeNext((r2v0 'this' kotlin.collections.RingBuffer$iterator$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
}

