digraph "CFG forkotlin.collections.CollectionsKt___CollectionsJvmKt.filterIsInstanceTo(Ljava\/lang\/Iterable;Ljava\/util\/Collection;Ljava\/lang\/Class;)Ljava\/util\/Collection;" {
subgraph cluster_Region_1025914507 {
label = "R(3:0|(2:3|(1:5)(0))|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, com.google.firebase.analytics.FirebaseAnalytics.Param.DESTINATION)\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"klass\")\ljava.util.Iterator r2 = r2.iterator()\l}"];
subgraph cluster_LoopRegion_452437742 {
label = "LOOP:0: (2:3|(1:5)(0))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0017|if (r2.hasNext() != false) goto L_0x0019\l}"];
subgraph cluster_Region_838829542 {
label = "R(2:3|(1:5)(0))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0019|java.lang.Object r0 = r2.next()\l}"];
subgraph cluster_IfRegion_1740090445 {
label = "IF [B:4:0x0021] THEN: R(1:5) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0021|if (r4.isInstance(r0) == true) goto L_0x0023\l}"];
subgraph cluster_Region_1806261342 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0023|r3.add(r0)\l}"];
}
subgraph cluster_Region_1280202515 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x0027|RETURN\l|return r3\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0013|LOOP_START\lLOOP:0: B:1:0x0013\-\>B:7:0x0013\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0013|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0013\-\>B:7:0x0013\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0027|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0013|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0013|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final C kotlin.collections.CollectionsKt___CollectionsJvmKt.filterIsInstanceTo((r2v0 java.lang.Iterable\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 C A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Class\<R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<C::, Ljava\/util\/Collection\<, \-TR;\>;R:, Ljava\/lang\/Object;, \>(, Ljava\/lang\/Iterable\<, *\>;TC;, Ljava\/lang\/Class\<, TR;\>;)TC;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_10;
Node_1 -> Node_2;
Node_7 -> Node_1;
Node_8 -> Node_6;
Node_9 -> Node_7;
Node_10 -> Node_7;
}

