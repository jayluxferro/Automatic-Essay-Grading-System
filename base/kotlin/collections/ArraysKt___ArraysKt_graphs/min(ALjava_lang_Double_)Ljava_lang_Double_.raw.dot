digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.min([Ljava\/lang\/Double;)Ljava\/lang\/Double;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r7 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: ARRAY_LENGTH  (r0 I:int) = (r7 I:?[]) \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: RETURN  (r7 I:java.lang.Double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: AGET  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0013: INVOKE  (r0 I:double) = (r0 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0017: INVOKE  (r3 I:boolean) = (r0 I:double) java.lang.Double.isNaN(double):boolean type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: INVOKE  (r7 I:java.lang.Double) = (r0 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: RETURN  (r7 I:java.lang.Double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: INVOKE  (r3 I:int) = (r7 I:java.lang.Object[]) kotlin.collections.ArraysKt.getLastIndex(java.lang.Object[]):int type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: IF  (r2 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:22:0x0043 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: AGET  (r4 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x002a: INVOKE  (r4 I:double) = (r4 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x002e: INVOKE  (r6 I:boolean) = (r4 I:double) java.lang.Double.isNaN(double):boolean type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0039 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: INVOKE  (r7 I:java.lang.Double) = (r4 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: RETURN  (r7 I:java.lang.Double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: CMP_L  (r6 I:int) = (r0 I:double), (r4 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x003b|0x003b: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x003e \l}"];
Node_19 [shape=record,label="{19\:\ 0x003d|0x003d: MOVE  (r0 I:?[long, double]) = (r4 I:?[long, double]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|0x003e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0043 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|0x0040: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0043|0x0043: INVOKE  (r7 I:java.lang.Double) = (r0 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l}"];
Node_23 [shape=record,label="{23\:\ 0x0047|0x0047: RETURN  (r7 I:java.lang.Double) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Double kotlin.collections.ArraysKt___ArraysKt.min((r7 I:java.lang.Double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_13;
Node_22 -> Node_23;
}

