digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.asSequence([C)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: ARRAY_LENGTH  (r0 I:int) = (r1 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: INVOKE  (r1 I:kotlin.sequences.Sequence) =  kotlin.sequences.SequencesKt.emptySequence():kotlin.sequences.Sequence type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: RETURN  (r1 I:kotlin.sequences.Sequence\<java.lang.Character\>) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9) =  kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9 \l0x0014: INVOKE  \l  (r0 I:kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9)\l  (r1 I:char[])\l kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$9.\<init\>(char[]):void type: DIRECT \l0x0017: CHECK_CAST  (r0 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: RETURN  (r0 I:kotlin.sequences.Sequence\<java.lang.Character\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<java.lang.Character\> kotlin.collections.ArraysKt___ArraysKt.asSequence((r1 I:char[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([C), Lkotlin\/sequences\/Sequence\<, Ljava\/lang\/Character;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

