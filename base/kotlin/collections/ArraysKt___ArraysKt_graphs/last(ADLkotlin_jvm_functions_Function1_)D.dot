digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.last([DLkotlin\/jvm\/functions\/Function1;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"predicate\")\ljava.util.Iterator r0 = kotlin.collections.CollectionsKt.reversed(kotlin.collections.ArraysKt.getIndices(r4)).iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|LOOP_START\lLOOP:0: B:1:0x0018\-\>B:4:0x0038\l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|if (r0.hasNext() == false) goto L_0x003b\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|r1 = r4[((java.lang.Number) r0.next()).intValue()]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0038|LOOP_END\lLOOP:0: B:1:0x0018\-\>B:4:0x0038\l|if (r5.invoke(java.lang.Double.valueOf(r1)).booleanValue() == false) goto L_0x0018\l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|RETURN\l|return r1\l}"];
Node_6 [shape=record,label="{6\:\ 0x003b}"];
Node_7 [shape=record,label="{7\:\ 0x0044|throw new java.util.NoSuchElementException(\"Array contains no element matching the predicate.\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final double kotlin.collections.ArraysKt___ArraysKt.last((r4v0 double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function1\<? super java.lang.Double, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[([D, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Double;, Ljava\/lang\/Boolean;, \>;)D]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_5;
Node_9 -> Node_6;
}

