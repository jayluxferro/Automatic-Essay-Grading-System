digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.associate([BLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"transform\")\ljava.util.Map r1 = new java.util.LinkedHashMap\<\>(kotlin.ranges.RangesKt.coerceAtLeast(kotlin.collections.MapsKt.mapCapacity(r5.length), 16))\lint r0 = r5.length\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:2:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x001e\-\>B:2:0x0020\l|if (r2 \>= r0) goto L_0x003a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0020|LOOP_END\lLOOP:0: B:1:0x001e\-\>B:2:0x0020\l|kotlin.Pair r3 = (kotlin.Pair) r6.invoke(java.lang.Byte.valueOf(r5[r2]))\lr1.put(r3.getFirst(), r3.getSecond())\lint r2 = r2 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x003a|RETURN\l|return r1\l}"];
Node_4 [shape=record,label="{4\:\ 0x003a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, V\> kotlin.collections.ArraysKt___ArraysKt.associate((r5v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.jvm.functions.Function1\<? super java.lang.Byte, ? extends kotlin.Pair\<? extends K, ? extends V\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>([B, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Byte;, +, Lkotlin\/Pair\<, +TK;+TV;\>;\>;), Ljava\/util\/Map\<, TK;TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_1;
Node_4 -> Node_3;
}

