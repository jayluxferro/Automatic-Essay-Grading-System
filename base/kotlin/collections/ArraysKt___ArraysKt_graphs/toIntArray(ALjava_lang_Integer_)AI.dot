digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.toIntArray([Ljava\/lang\/Integer;)[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lint[] r0 = new int[r4.length]\lint r1 = r4.length\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:2:0x000c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:2:0x000c\l|if (r2 \>= r1) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|LOOP_END\lLOOP:0: B:1:0x000a\-\>B:2:0x000c\l|r0[r2] = r4[r2].intValue()\lint r2 = r2 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|RETURN\l|return r0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final int[] kotlin.collections.ArraysKt___ArraysKt.toIntArray((r4v0 java.lang.Integer[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_1;
Node_4 -> Node_3;
}

