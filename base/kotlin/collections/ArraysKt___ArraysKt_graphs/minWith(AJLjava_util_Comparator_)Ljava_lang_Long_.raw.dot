digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.minWith([JLjava\/util\/Comparator;)Ljava\/lang\/Long;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r8 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"comparator\" \l0x0007: INVOKE  (r9 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: ARRAY_LENGTH  (r0 I:int) = (r8 I:?[]) \l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: RETURN  (r8 I:java.lang.Long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: AGET  (r0 I:?[long, double]) = (r8 I:?[long, double][]), (r1 I:?[int, short, byte, char]) \l0x0018: INVOKE  (r3 I:int) = (r8 I:long[]) kotlin.collections.ArraysKt.getLastIndex(long[]):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r2 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:14:0x0034 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: AGET  (r4 I:?[long, double]) = (r8 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x0020: INVOKE  (r6 I:java.lang.Long) = (r0 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0024: INVOKE  (r7 I:java.lang.Long) = (r4 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0028: INVOKE  (r6 I:int) = \l  (r9 I:java.util.Comparator)\l  (r6 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l java.util.Comparator.compare(java.lang.Object, java.lang.Object):int type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x002f \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: MOVE  (r0 I:?[long, double]) = (r4 I:?[long, double]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0034 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|0x0034: INVOKE  (r8 I:java.lang.Long) = (r0 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|0x0038: RETURN  (r8 I:java.lang.Long) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Long kotlin.collections.ArraysKt___ArraysKt.minWith((r8 I:long[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.util.Comparator\<? super java.lang.Long\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([J, Ljava\/util\/Comparator\<, \-, Ljava\/lang\/Long;, \>;), Ljava\/lang\/Long;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_9;
Node_14 -> Node_15;
}

