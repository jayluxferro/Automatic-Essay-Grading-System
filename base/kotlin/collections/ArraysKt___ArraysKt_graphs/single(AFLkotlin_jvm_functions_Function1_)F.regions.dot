digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.single([FLkotlin\/jvm\/functions\/Function1;)F" {
subgraph cluster_Region_1072066554 {
label = "R(3:0|(3:2|(1:(1:5)(1:7))(0)|8)|(1:16)(1:(1:12)(1:14)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"predicate\")\lint int r1 = r6.length\lint r2 = 0\ljava.lang.Float r3 = null\lboolean r0 = false\l}"];
subgraph cluster_LoopRegion_1496295155 {
label = "LOOP:0: (3:2|(1:(1:5)(1:7))(0)|8)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0011|LOOP_START\lPHI: r0 r2 r3 \l  PHI: (r0v5 boolean) = (r0v4 boolean), (r0v6 boolean) binds: [B:0:0x0000, B:8:0x0039] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:8:0x0039] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 java.lang.Float) = (r3v0 java.lang.Float), (r3v2 java.lang.Float) binds: [B:0:0x0000, B:8:0x0039] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:8:0x0039\l|if (r2 \< r1) goto L_0x0013\l}"];
subgraph cluster_Region_313579829 {
label = "R(3:2|(1:(1:5)(1:7))(0)|8)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0013|r4 = r6[r2]\l}"];
subgraph cluster_IfRegion_566586590 {
label = "IF [B:3:0x0023] THEN: R(1:(1:5)(1:7)) ELSE: R(0)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0023|if (r7.invoke(java.lang.Float.valueOf(r4)).booleanValue() != false) goto L_0x0025\l}"];
subgraph cluster_Region_1058483126 {
label = "R(1:(1:5)(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1586011739 {
label = "IF [B:4:0x0025] THEN: R(1:5) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0025|if (r0 == false) goto L_0x0027\l}"];
subgraph cluster_Region_517477337 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0027|r3 = java.lang.Float.valueOf(r4)\lr0 = true\l}"];
}
subgraph cluster_Region_2004593647 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0038|throw new java.lang.IllegalArgumentException(\"Array contains more than one matching element.\")\l}"];
}
}
}
subgraph cluster_Region_1405588429 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_8 [shape=record,label="{8\:\ 0x0039|LOOP_END\lPHI: r0 r3 \l  PHI: (r0v6 boolean) = (r0v5 boolean), (r0v8 boolean) binds: [B:19:0x0039, B:20:0x0039] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 java.lang.Float) = (r3v1 java.lang.Float), (r3v4 java.lang.Float) binds: [B:19:0x0039, B:20:0x0039] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:8:0x0039\l|r2++\l}"];
}
}
subgraph cluster_IfRegion_9443464 {
label = "IF [B:9:0x003c] THEN: R(1:16) ELSE: R(1:(1:12)(1:14))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x003c|if (r0 != true) goto L_0x004d\l}"];
subgraph cluster_Region_1508812535 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0056|throw new java.util.NoSuchElementException(\"Array contains no element matching the predicate.\")\l}"];
}
subgraph cluster_Region_1604480231 {
label = "R(1:(1:12)(1:14)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1190179272 {
label = "IF [B:10:0x003e] THEN: R(1:12) ELSE: R(1:14) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x003e|if (r3 != null) goto L_0x0040\l}"];
subgraph cluster_Region_1248173907 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0044|RETURN\l|return r3.floatValue()\l}"];
}
subgraph cluster_Region_1974239279 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004c|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.Float\")\l}"];
}
}
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ 0x002f}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0040}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0045}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x004d}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003c|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x002f|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0039|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0039|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final float kotlin.collections.ArraysKt___ArraysKt.single((r6v0 float[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function1\<? super java.lang.Float, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[([F, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Float;, Ljava\/lang\/Boolean;, \>;)F]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_19[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_18[style=dashed];
Node_5 -> Node_20;
Node_8 -> Node_1;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_6 -> Node_7;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_9;
Node_18 -> Node_6;
Node_19 -> Node_8;
Node_20 -> Node_8;
}

