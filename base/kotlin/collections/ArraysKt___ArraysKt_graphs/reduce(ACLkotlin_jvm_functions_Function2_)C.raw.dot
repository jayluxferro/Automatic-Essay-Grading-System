digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.reduce([CLkotlin\/jvm\/functions\/Function2;)C" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: ARRAY_LENGTH  (r0 I:int) = (r4 I:?[]) \l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0036 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: AGET  (r0 I:char A[IMMUTABLE_TYPE]) = \l  (r4 I:char[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0016: INVOKE  (r1 I:int) = (r4 I:char[]) kotlin.collections.ArraysKt.getLastIndex(char[]):int type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r2 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:10:0x0035 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: INVOKE  (r0 I:java.lang.Character) = (r0 I:char) java.lang.Character.valueOf(char):java.lang.Character type: STATIC \l0x0020: AGET  (r3 I:char A[IMMUTABLE_TYPE]) = \l  (r4 I:char[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x0022: INVOKE  (r3 I:java.lang.Character) = (r3 I:char) java.lang.Character.valueOf(char):java.lang.Character type: STATIC \l0x0026: INVOKE  (r0 I:java.lang.Object) = \l  (r5 I:kotlin.jvm.functions.Function2)\l  (r0 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x002a: CHECK_CAST  (r0 I:java.lang.Character) = (java.lang.Character) (r0 I:?[OBJECT, ARRAY]) \l0x002c: INVOKE  (r0 I:char) = (r0 I:java.lang.Character) java.lang.Character.charValue():char type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0035 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: RETURN  (r0 I:char) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: NEW_INSTANCE  (r4 I:java.lang.UnsupportedOperationException) =  java.lang.UnsupportedOperationException \l0x0038: CONST_STR  (r5 I:java.lang.String) =  \"Empty array can't be reduced.\" \l0x003a: INVOKE  \l  (r4 I:java.lang.UnsupportedOperationException)\l  (r5 I:java.lang.String)\l java.lang.UnsupportedOperationException.\<init\>(java.lang.String):void type: DIRECT \l0x003d: CHECK_CAST  (r4 I:java.lang.Throwable) = (java.lang.Throwable) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final char kotlin.collections.ArraysKt___ArraysKt.reduce((r4 I:char[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function2\<? super java.lang.Character, ? super java.lang.Character, java.lang.Character\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[([C, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Character;, \-, Ljava\/lang\/Character;, Ljava\/lang\/Character;, \>;)C]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_11 -> Node_12;
}

