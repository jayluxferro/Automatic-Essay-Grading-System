digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.distinctBy([FLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
subgraph cluster_Region_2126530113 {
label = "R(3:0|(3:2|(1:4)(0)|5)|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"selector\")\ljava.util.HashSet java.util.HashSet r0 = new java.util.HashSet()\ljava.util.ArrayList java.util.ArrayList r1 = new java.util.ArrayList()\lint int r2 = r6.length\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_780789920 {
label = "LOOP:0: (3:2|(1:4)(0)|5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0016|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:5:0x002f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0016\-\>B:5:0x002f\l|if (r3 \< r2) goto L_0x0018\l}"];
subgraph cluster_Region_1596701554 {
label = "R(3:2|(1:4)(0)|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0018|r4 = r6[r3]\l}"];
subgraph cluster_IfRegion_2070823358 {
label = "IF [B:3:0x0026] THEN: R(1:4) ELSE: R(0)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0026|if (r0.add(r7.invoke(java.lang.Float.valueOf(r4))) == true) goto L_0x0028\l}"];
subgraph cluster_Region_1843024977 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0028|r1.add(java.lang.Float.valueOf(r4))\l}"];
}
subgraph cluster_Region_1197872530 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_5 [shape=record,label="{5\:\ 0x002f|LOOP_END\lLOOP:0: B:1:0x0016\-\>B:5:0x002f\l|r3++\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0034|RETURN\l|return r1\l}"];
}
Node_6 [shape=record,color=red,label="{6\:\ 0x0032}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0032|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002f|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.lang.Float\> kotlin.collections.ArraysKt___ArraysKt.distinctBy((r6v0 float[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function1\<? super java.lang.Float, ? extends K\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, \>([F, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Float;, +TK;\>;), Ljava\/util\/List\<, Ljava\/lang\/Float;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_10[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_8 -> Node_6;
Node_9 -> Node_5;
Node_10 -> Node_5;
}

