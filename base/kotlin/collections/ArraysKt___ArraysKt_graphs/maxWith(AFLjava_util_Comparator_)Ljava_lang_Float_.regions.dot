digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.maxWith([FLjava\/util\/Comparator;)Ljava\/lang\/Float;" {
subgraph cluster_Region_1317308719 {
label = "R(2:0|(2:(1:5)|(3:6|(1:(3:8|(1:10)|(2:(1:15)|(1:12))))(0)|14)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"comparator\")\lint r2 = 1\l}"];
subgraph cluster_Region_1190238507 {
label = "R(2:(1:5)|(3:6|(1:(3:8|(1:10)|(2:(1:15)|(1:12))))(0)|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_224825226 {
label = "IF [B:4:0x0012] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|PHI: r0 \l  PHI: (r0v3 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r6.length == 0) == true) goto L_0x0014\l}"];
subgraph cluster_Region_568534778 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1839662368 {
label = "R(3:6|(1:(3:8|(1:10)|(2:(1:15)|(1:12))))(0)|14)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|float r0 = r6[0]\lint int r1 = kotlin.collections.ArraysKt.getLastIndex(r6)\l}"];
subgraph cluster_IfRegion_131960700 {
label = "IF [B:7:0x001c] THEN: R(1:(3:8|(1:10)|(2:(1:15)|(1:12)))) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001c|if (1 \<= r1) goto L_0x001e\l}"];
subgraph cluster_Region_1146374551 {
label = "R(1:(3:8|(1:10)|(2:(1:15)|(1:12))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_237418743 {
label = "LOOP:0: (3:8|(1:10)|(2:(1:15)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_748360538 {
label = "R(3:8|(1:10)|(2:(1:15)|(1:12)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v6 float) = (r0v4 float), (r0v7 float) binds: [B:7:0x001c, B:12:0x0031] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:7:0x001c, B:12:0x0031] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x001e\-\>B:12:0x0031\l|float r3 = r6[r2]\l}"];
subgraph cluster_IfRegion_18030233 {
label = "IF [B:9:0x002c] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002c|if (r7.compare(java.lang.Float.valueOf(r0), java.lang.Float.valueOf(r3)) \< 0) goto L_0x002e\l}"];
subgraph cluster_Region_1978057404 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002e|r0 = r3\l}"];
}
}
subgraph cluster_Region_923106406 {
label = "R(2:(1:15)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_117451038 {
label = "IF [B:11:0x002f] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002f|PHI: r0 \l  PHI: (r0v7 float) = (r0v6 float), (r0v8 float) binds: [B:9:0x002c, B:10:0x002e] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == r1) goto L_0x0034\l}"];
subgraph cluster_Region_266950794 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0034|SYNTHETIC\lEDGE_INSN: B:15:0x0034\-\>B:13:0x0034 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1048894379 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0031|LOOP_END\lLOOP:0: B:8:0x001e\-\>B:12:0x0031\l|r2++\l}"];
}
}
}
}
}
subgraph cluster_Region_1763160081 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_14 [shape=record,label="{14\:\ 0x0038|RETURN\l|return java.lang.Float.valueOf(r0)\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000d}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000f}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0011}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0034|EDGE_INSN: B:15:0x0034\-\>B:13:0x0034 ?: BREAK  \lPHI: r0 \l  PHI: (r0v5 float) = (r0v4 float), (r0v7 float) binds: [B:7:0x001c, B:15:0x0034] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Float kotlin.collections.ArraysKt___ArraysKt.maxWith((r6v0 float[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.Comparator\<? super java.lang.Float\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([F, Ljava\/util\/Comparator\<, \-, Ljava\/lang\/Float;, \>;), Ljava\/lang\/Float;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_15 -> Node_13;
Node_12 -> Node_8;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_13 -> Node_14;
}

