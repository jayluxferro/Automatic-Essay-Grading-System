digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.maxBy([Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
subgraph cluster_Region_1606468155 {
label = "R(2:0|(2:(1:5)|(3:6|(1:(3:8|(1:10)|(2:(1:14)|(1:12))))(0)|13)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, \"selector\")\lint r2 = 1\l}"];
subgraph cluster_Region_1008267033 {
label = "R(2:(1:5)|(3:6|(1:(3:8|(1:10)|(2:(1:14)|(1:12))))(0)|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2093792043 {
label = "IF [B:4:0x0012] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|PHI: r0 \l  PHI: (r0v3 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r7.length == 0) == true) goto L_0x0014\l}"];
subgraph cluster_Region_1056522477 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_2100244033 {
label = "R(3:6|(1:(3:8|(1:10)|(2:(1:14)|(1:12))))(0)|13)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|T r0 = r7[0]\ljava.lang.Comparable java.lang.Comparable r1 = (java.lang.Comparable) r8.invoke(r0)\lint int r3 = kotlin.collections.ArraysKt.getLastIndex(r7)\l}"];
subgraph cluster_IfRegion_1903935837 {
label = "IF [B:7:0x0022] THEN: R(1:(3:8|(1:10)|(2:(1:14)|(1:12)))) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0022|if (1 \<= r3) goto L_0x0024\l}"];
subgraph cluster_Region_1903196958 {
label = "R(1:(3:8|(1:10)|(2:(1:14)|(1:12))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_183185934 {
label = "LOOP:0: (3:8|(1:10)|(2:(1:14)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_1913370487 {
label = "R(3:8|(1:10)|(2:(1:14)|(1:12)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0024|LOOP_START\lPHI: r0 r1 r2 \l  PHI: (r0v6 T) = (r0v4 T), (r0v7 T) binds: [B:7:0x0022, B:12:0x0036] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v3 java.lang.Comparable) = (r1v2 java.lang.Comparable), (r1v4 java.lang.Comparable) binds: [B:7:0x0022, B:12:0x0036] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:7:0x0022, B:12:0x0036] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0024\-\>B:12:0x0036\l|T r4 = r7[r2]\ljava.lang.Comparable java.lang.Comparable r5 = (java.lang.Comparable) r8.invoke(r4)\l}"];
subgraph cluster_IfRegion_1783117105 {
label = "IF [B:9:0x0030] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0030|if (r1.compareTo(r5) \< 0) goto L_0x0032\l}"];
subgraph cluster_Region_1163363043 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0032|r0 = r4\lr1 = r5\l}"];
}
}
subgraph cluster_Region_333960603 {
label = "R(2:(1:14)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_606593508 {
label = "IF [B:11:0x0034] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0034|PHI: r0 r1 \l  PHI: (r0v7 T) = (r0v6 T), (r0v8 T) binds: [B:9:0x0030, B:10:0x0032] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v4 java.lang.Comparable) = (r1v3 java.lang.Comparable), (r1v5 java.lang.Comparable) binds: [B:9:0x0030, B:10:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == r3) goto L_0x0039\l}"];
subgraph cluster_Region_1743589666 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0039|SYNTHETIC\lEDGE_INSN: B:14:0x0039\-\>B:13:0x0039 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1717293940 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0036|LOOP_END\lLOOP:0: B:8:0x0024\-\>B:12:0x0036\l|r2++\l}"];
}
}
}
}
}
subgraph cluster_Region_364330570 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_13 [shape=record,label="{13\:\ 0x0039|RETURN\lEDGE_INSN: B:14:0x0039\-\>B:13:0x0039 ?: BREAK  \lPHI: r0 \l  PHI: (r0v5 T) = (r0v4 T), (r0v7 T) binds: [B:7:0x0022, B:14:0x0039] A[DONT_GENERATE, DONT_INLINE]\l|return r0\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000d}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000f}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0011}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.ArraysKt___ArraysKt.maxBy((r7v0 T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.jvm.functions.Function1\<? super T, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, R::, Ljava\/lang\/Comparable\<, \-TR;\>;\>([TT;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;+TR;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_14 -> Node_13;
Node_12 -> Node_8;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

