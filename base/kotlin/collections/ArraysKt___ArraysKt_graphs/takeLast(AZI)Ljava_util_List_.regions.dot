digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.takeLast([ZI)Ljava\/util\/List;" {
subgraph cluster_Region_940269866 {
label = "R(2:0|(2:20|21)(1:(1:7)(2:8|(2:(1:11)|(1:(2:(1:14)|(3:15|(1:17)|19)))))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\l}"];
subgraph cluster_IfRegion_349710348 {
label = "IF [B:4:0x000b] THEN: R(2:20|21) ELSE: R(1:(1:7)(2:8|(2:(1:11)|(1:(2:(1:14)|(3:15|(1:17)|19))))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|PHI: r1 \l  PHI: (r1v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r4 \>= 0) != true) goto L_0x0042\l}"];
subgraph cluster_Region_45570720 {
label = "R(2:20|21)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0042}"];
Node_21 [shape=record,label="{21\:\ 0x0063|throw new java.lang.IllegalArgumentException((\"Requested element count \" + r4 + \" is less than zero.\").toString())\l}"];
}
subgraph cluster_Region_506120840 {
label = "R(1:(1:7)(2:8|(2:(1:11)|(1:(2:(1:14)|(3:15|(1:17)|19)))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2102127190 {
label = "IF [B:5:0x000d] THEN: R(1:7) ELSE: R(2:8|(2:(1:11)|(1:(2:(1:14)|(3:15|(1:17)|19))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000d|if (r4 == 0) goto L_0x000f\l}"];
subgraph cluster_Region_679880123 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0013|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
}
subgraph cluster_Region_991254008 {
label = "R(2:8|(2:(1:11)|(1:(2:(1:14)|(3:15|(1:17)|19)))))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0014|int int r1 = r3.length\l}"];
subgraph cluster_Region_274466897 {
label = "R(2:(1:11)|(1:(2:(1:14)|(3:15|(1:17)|19))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_105610920 {
label = "IF [B:9:0x0015] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0015|if (r4 \>= r1) goto L_0x0017\l}"];
subgraph cluster_Region_1491795544 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001b|RETURN\l|return kotlin.collections.ArraysKt.toList(r3)\l}"];
}
}
subgraph cluster_Region_2052171337 {
label = "R(1:(2:(1:14)|(3:15|(1:17)|19)))";
node [shape=record,color=blue];
subgraph cluster_Region_1667497797 {
label = "R(2:(1:14)|(3:15|(1:17)|19))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_328039928 {
label = "IF [B:12:0x001c] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x001c|if (r4 == 1) goto L_0x001e\l}"];
subgraph cluster_Region_64159795 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0029|RETURN\l|return kotlin.collections.CollectionsKt.listOf(java.lang.Boolean.valueOf(r3[r1 \- 1]))\l}"];
}
}
subgraph cluster_Region_129011408 {
label = "R(3:15|(1:17)|19)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002a|java.util.ArrayList java.util.ArrayList r0 = new java.util.ArrayList(r4)\lint int r4 = r1 \- r4\l}"];
subgraph cluster_LoopRegion_370913611 {
label = "LOOP:0: (1:17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0031|LOOP_START\lPHI: r4 \l  PHI: (r4v5 int) = (r4v4 int), (r4v6 int) binds: [B:15:0x002a, B:17:0x0033] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:16:0x0031\-\>B:17:0x0033\l|if (r4 \< r1) goto L_0x0033\l}"];
subgraph cluster_Region_1266164510 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0033|LOOP_END\lLOOP:0: B:16:0x0031\-\>B:17:0x0033\l|r0.add(java.lang.Boolean.valueOf(r3[r4]))\lr4++\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x0041|RETURN\l|return r0\l}"];
}
}
}
}
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0017}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x001e}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x003f}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x003f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.lang.Boolean\> kotlin.collections.ArraysKt___ArraysKt.takeLast((r3v0 boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([ZI), Ljava\/util\/List\<, Ljava\/lang\/Boolean;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_20;
Node_20 -> Node_21;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12[style=dashed];
Node_12 -> Node_13;
Node_12 -> Node_15[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_22[style=dashed];
Node_17 -> Node_16;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_18 -> Node_19;
Node_22 -> Node_18;
}

