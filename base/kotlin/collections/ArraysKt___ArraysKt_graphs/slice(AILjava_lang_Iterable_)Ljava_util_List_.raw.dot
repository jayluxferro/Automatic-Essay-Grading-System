digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.slice([ILjava\/lang\/Iterable;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"indices\" \l0x0007: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST  (r0 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x000c: INVOKE  (r0 I:int) = (r3 I:java.lang.Iterable), (r0 I:int) kotlin.collections.CollectionsKt.collectionSizeOrDefault(java.lang.Iterable, int):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: INVOKE  (r2 I:java.util.List) =  kotlin.collections.CollectionsKt.emptyList():java.util.List type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: RETURN  (r2 I:java.util.List\<java.lang.Integer\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0019: INVOKE  (r1 I:java.util.ArrayList), (r0 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x001c: INVOKE  (r3 I:java.util.Iterator) = (r3 I:java.lang.Iterable) java.lang.Iterable.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: INVOKE  (r0 I:boolean) = (r3 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: INVOKE  (r0 I:java.lang.Object) = (r3 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x002a: CHECK_CAST  (r0 I:java.lang.Number) = (java.lang.Number) (r0 I:?[OBJECT, ARRAY]) \l0x002c: INVOKE  (r0 I:int) = (r0 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x0030: AGET  (r0 I:?[int, float]) = (r2 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l0x0032: INVOKE  (r0 I:java.lang.Integer) = (r0 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0036: INVOKE  (r1 I:java.util.ArrayList), (r0 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|0x003a: CHECK_CAST  (r1 I:java.util.List) = (java.util.List) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|0x003c: RETURN  (r1 I:java.util.List\<java.lang.Integer\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.lang.Integer\> kotlin.collections.ArraysKt___ArraysKt.slice((r2 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Iterable\<java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([I, Ljava\/lang\/Iterable\<, Ljava\/lang\/Integer;, \>;), Ljava\/util\/List\<, Ljava\/lang\/Integer;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
}

