digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.reversedArray([J)[J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: ARRAY_LENGTH  (r0 I:int) = (r6 I:?[]) \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: RETURN  (r6 I:long[]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: ARRAY_LENGTH  (r0 I:int) = (r6 I:?[]) \l0x0010: NEW_ARRAY  (r0 I:long[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: long[] \l0x0012: INVOKE  (r2 I:int) = (r6 I:long[]) kotlin.collections.ArraysKt.getLastIndex(long[]):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:11:0x0023 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: ARITH  (r3 I:int) = (r2 I:int) \- (r1 I:int) \l0x001a: AGET  (r4 I:?[long, double]) = (r6 I:?[long, double][]), (r1 I:?[int, short, byte, char]) \l0x001c: APUT  \l  (r0 I:?[long, double][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[long, double])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0023 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: RETURN  (r0 I:long[]) \l}"];
MethodNode[shape=record,label="{public static final long[] kotlin.collections.ArraysKt___ArraysKt.reversedArray((r6 I:long[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
}

