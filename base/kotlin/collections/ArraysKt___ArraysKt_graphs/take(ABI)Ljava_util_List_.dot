digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.take([BI)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lr0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r7 \< 0) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|r2 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|r2 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|PHI: r2 \l  PHI: (r2v0 boolean) = (r2v3 boolean), (r2v4 boolean) binds: [B:3:0x000b, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == false) goto L_0x0048\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r7 != 0) goto L_0x0015\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010}"];
Node_7 [shape=record,label="{7\:\ 0x0014|RETURN\l|return kotlin.collections.CollectionsKt.emptyList()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015}"];
Node_9 [shape=record,label="{9\:\ 0x0016|if (r7 \< r6.length) goto L_0x001d\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018}"];
Node_11 [shape=record,label="{11\:\ 0x001c|RETURN\l|return kotlin.collections.ArraysKt.toList(r6)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|if (r7 != 1) goto L_0x002a\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f}"];
Node_14 [shape=record,label="{14\:\ 0x0029|RETURN\l|return kotlin.collections.CollectionsKt.listOf(java.lang.Byte.valueOf(r6[0]))\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|java.util.ArrayList r1 = new java.util.ArrayList(r7)\lint r2 = r6.length\lr3 = 0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|LOOP_START\lPHI: r0 r3 \l  PHI: (r0v3 int) = (r0v1 int), (r0v4 int) binds: [B:15:0x002a, B:19:0x003a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v3 int) binds: [B:15:0x002a, B:19:0x003a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:16:0x0031\-\>B:19:0x003a\l|if (r0 \>= r2) goto L_0x0045\l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|byte r4 = r6[r0]\lint r5 = r3 + 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0037|if (r3 != r7) goto L_0x003a\l}"];
Node_19 [shape=record,label="{19\:\ 0x003a|LOOP_END\lLOOP:0: B:16:0x0031\-\>B:19:0x003a\l|r1.add(java.lang.Byte.valueOf(r4))\lint r0 = r0 + 1\lr3 = r5\l}"];
Node_20 [shape=record,label="{20\:\ 0x0045}"];
Node_21 [shape=record,label="{21\:\ 0x0047|RETURN\l|return r1\l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"Requested element count \")\lr6.append(r7)\lr6.append(\" is less than zero.\")\l}"];
Node_23 [shape=record,label="{23\:\ 0x0069|throw new java.lang.IllegalArgumentException(r6.toString().toString())\l}"];
Node_24 [shape=record,label="{24\:\ 0x0045|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0045|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.lang.Byte\> kotlin.collections.ArraysKt___ArraysKt.take((r6v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([BI), Ljava\/util\/List\<, Ljava\/lang\/Byte;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_22;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_24;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_25[style=dashed];
Node_19 -> Node_16;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_24 -> Node_20;
Node_25 -> Node_20;
}

