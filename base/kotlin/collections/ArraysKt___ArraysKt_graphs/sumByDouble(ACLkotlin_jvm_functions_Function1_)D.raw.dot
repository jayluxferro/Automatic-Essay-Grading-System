digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.sumByDouble([CLkotlin\/jvm\/functions\/Function1;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r7 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: ARRAY_LENGTH  (r0 I:int) = (r6 I:?[]) \l0x000b: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r3 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:3:0x0024 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: AGET  (r4 I:char A[IMMUTABLE_TYPE]) = \l  (r6 I:char[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0012: INVOKE  (r4 I:java.lang.Character) = (r4 I:char) java.lang.Character.valueOf(char):java.lang.Character type: STATIC \l0x0016: INVOKE  (r4 I:java.lang.Object) = \l  (r7 I:kotlin.jvm.functions.Function1)\l  (r4 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x001a: CHECK_CAST  (r4 I:java.lang.Number) = (java.lang.Number) (r4 I:?[OBJECT, ARRAY]) \l0x001c: INVOKE  (r4 I:double) = (r4 I:java.lang.Number) java.lang.Number.doubleValue():double type: VIRTUAL \l0x0020: ARITH  (r1 I:double) = (r1 I:double) + (r4 I:double) \l0x0021: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: RETURN  (r1 I:double) \l}"];
MethodNode[shape=record,label="{public static final double kotlin.collections.ArraysKt___ArraysKt.sumByDouble((r6 I:char[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, java.lang.Double\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[([C, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Character;, Ljava\/lang\/Double;, \>;)D]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

