digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.flatMap([JLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
subgraph cluster_Region_1131923953 {
label = "R(3:0|(1:2)|4)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"transform\")\ljava.util.Collection java.util.Collection r0 = new java.util.ArrayList()\lint int r1 = r5.length\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_398856046 {
label = "LOOP:0: (1:2)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0013|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:2:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0013\-\>B:2:0x0015\l|if (r2 \< r1) goto L_0x0015\l}"];
subgraph cluster_Region_133590807 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0015|LOOP_END\lLOOP:0: B:1:0x0013\-\>B:2:0x0015\l|kotlin.collections.CollectionsKt.addAll(r0, (java.lang.Iterable) r6.invoke(java.lang.Long.valueOf(r3)))\lr2++\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x0029|RETURN\l|return (java.util.List) r0\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0027}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0027|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<R\> kotlin.collections.ArraysKt___ArraysKt.flatMap((r5v0 long[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.jvm.functions.Function1\<? super java.lang.Long, ? extends java.lang.Iterable\<? extends R\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<R:, Ljava\/lang\/Object;, \>([J, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Long;, +, Ljava\/lang\/Iterable\<, +TR;\>;\>;), Ljava\/util\/List\<, TR;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_3;
}

