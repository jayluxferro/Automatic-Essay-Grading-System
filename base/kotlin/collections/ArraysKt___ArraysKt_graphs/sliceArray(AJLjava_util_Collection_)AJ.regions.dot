digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.sliceArray([JLjava\/util\/Collection;)[J" {
subgraph cluster_Region_160552966 {
label = "R(3:0|(1:3)|4)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"indices\")\llong[] long[] r0 = new long[r7.size()]\ljava.util.Iterator r7 = r7.iterator()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_599690391 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0019|if (r7.hasNext() != false) goto L_0x001b\l}"];
subgraph cluster_Region_311925815 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001b|LOOP_END\lLOOP:0: B:1:0x0015\-\>B:3:0x001b\l|r0[r1] = r6[r2.intValue()]\lr1++\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x002d|RETURN\l|return r0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0015|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:3:0x001b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0015\-\>B:3:0x001b\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x002d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final long[] kotlin.collections.ArraysKt___ArraysKt.sliceArray((r6v0 long[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.Collection\<java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([J, Ljava\/util\/Collection\<, Ljava\/lang\/Integer;, \>;)[J]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_1;
Node_1 -> Node_2;
Node_5 -> Node_4;
}

