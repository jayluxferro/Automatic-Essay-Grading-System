digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.minBy([SLkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Short;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r7 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"selector\" \l0x0007: INVOKE  (r8 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: ARRAY_LENGTH  (r0 I:int) = (r7 I:?[]) \l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: RETURN  (r7 I:java.lang.Short) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: AGET  (r0 I:short A[IMMUTABLE_TYPE]) = \l  (r7 I:short[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0018: INVOKE  (r1 I:java.lang.Short) = (r0 I:short) java.lang.Short.valueOf(short):java.lang.Short type: STATIC \l0x001c: INVOKE  (r1 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function1)\l  (r1 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x0020: CHECK_CAST  (r1 I:java.lang.Comparable) = (java.lang.Comparable) (r1 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  (r3 I:int) = (r7 I:short[]) kotlin.collections.ArraysKt.getLastIndex(short[]):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: IF  (r2 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:14:0x0041 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: AGET  (r4 I:short A[IMMUTABLE_TYPE]) = \l  (r7 I:short[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l0x002a: INVOKE  (r5 I:java.lang.Short) = (r4 I:short) java.lang.Short.valueOf(short):java.lang.Short type: STATIC \l0x002e: INVOKE  (r5 I:java.lang.Object) = \l  (r8 I:kotlin.jvm.functions.Function1)\l  (r5 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x0032: CHECK_CAST  (r5 I:java.lang.Comparable) = (java.lang.Comparable) (r5 I:?[OBJECT, ARRAY]) \l0x0034: INVOKE  (r6 I:int) = (r1 I:java.lang.Comparable), (r5 I:java.lang.Object) java.lang.Comparable.compareTo(java.lang.Object):int type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|0x0038: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x003c \l}"];
Node_11 [shape=record,label="{11\:\ 0x003a|0x003a: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0041 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|0x003e: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|0x0041: INVOKE  (r7 I:java.lang.Short) = (r0 I:short) java.lang.Short.valueOf(short):java.lang.Short type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|0x0045: RETURN  (r7 I:java.lang.Short) \l}"];
MethodNode[shape=record,label="{public static final java.lang.Short kotlin.collections.ArraysKt___ArraysKt.minBy((r7 I:short[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:kotlin.jvm.functions.Function1\<? super java.lang.Short, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<R::, Ljava\/lang\/Comparable\<, \-TR;\>;\>([S, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Short;, +TR;\>;), Ljava\/lang\/Short;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_9;
Node_14 -> Node_15;
}

