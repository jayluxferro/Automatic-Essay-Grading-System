digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.takeWhile([DLkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
subgraph cluster_Region_555581187 {
label = "R(3:0|(2:2|(2:(1:8)|(1:4)))|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"predicate\")\ljava.util.ArrayList java.util.ArrayList r0 = new java.util.ArrayList()\lint int r1 = r6.length\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1531758675 {
label = "LOOP:0: (2:2|(2:(1:8)|(1:4)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0011|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:4:0x0026] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:4:0x0026\l|if (r2 \< r1) goto L_0x0013\l}"];
subgraph cluster_Region_1200216912 {
label = "R(2:2|(2:(1:8)|(1:4)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0013|r3 = r6[r2]\l}"];
subgraph cluster_Region_1583557771 {
label = "R(2:(1:8)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_823492871 {
label = "IF [B:3:0x0023] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0023|if (r7.invoke(java.lang.Double.valueOf(r3)).booleanValue() == false) goto L_0x0030\l}"];
subgraph cluster_Region_229327057 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0030|SYNTHETIC\lEDGE_INSN: B:8:0x0030\-\>B:5:0x0030 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_184235535 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0026|LOOP_END\lLOOP:0: B:1:0x0011\-\>B:4:0x0026\l|r0.add(java.lang.Double.valueOf(r3))\lr2++\l}"];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x0032|RETURN\l|return r0\l}"];
}
Node_5 [shape=record,color=red,label="{5\:\ 0x0030|EDGE_INSN: B:8:0x0030\-\>B:5:0x0030 ?: BREAK  \l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0030|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.lang.Double\> kotlin.collections.ArraysKt___ArraysKt.takeWhile((r6v0 double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function1\<? super java.lang.Double, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([D, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Double;, Ljava\/lang\/Boolean;, \>;), Ljava\/util\/List\<, Ljava\/lang\/Double;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_8 -> Node_5;
Node_4 -> Node_1;
Node_5 -> Node_6;
Node_7 -> Node_5;
}

