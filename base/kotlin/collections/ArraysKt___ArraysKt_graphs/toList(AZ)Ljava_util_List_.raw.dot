digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.toList([Z)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: ARRAY_LENGTH  (r0 I:int) = (r1 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1] t:[0x001a, 0x000e] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r1 I:java.util.List) = (r1 I:boolean[]) kotlin.collections.ArraysKt.toMutableList(boolean[]):java.util.List type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: AGET  (r1 I:boolean A[IMMUTABLE_TYPE]) = \l  (r1 I:boolean[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l0x0011: INVOKE  (r1 I:java.lang.Boolean) = (r1 I:boolean) java.lang.Boolean.valueOf(boolean):java.lang.Boolean type: STATIC \l0x0015: INVOKE  (r1 I:java.util.List) = (r1 I:java.lang.Object) kotlin.collections.CollectionsKt.listOf(java.lang.Object):java.util.List type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: INVOKE  (r1 I:java.util.List) =  kotlin.collections.CollectionsKt.emptyList():java.util.List type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: RETURN  (r1 I:java.util.List\<java.lang.Boolean\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<java.lang.Boolean\> kotlin.collections.ArraysKt___ArraysKt.toList((r1 I:boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([Z), Ljava\/util\/List\<, Ljava\/lang\/Boolean;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_4;
Node_2 -> Node_5;
Node_3 -> Node_5;
Node_4 -> Node_5;
}

