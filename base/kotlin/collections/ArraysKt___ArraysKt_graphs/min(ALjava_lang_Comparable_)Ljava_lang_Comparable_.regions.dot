digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.min([Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;" {
subgraph cluster_Region_1795787072 {
label = "R(2:0|(2:(1:5)|(3:6|(1:(3:8|(1:10)|(2:(1:14)|(1:12))))(0)|13)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"$receiver\")\lint r2 = 1\l}"];
subgraph cluster_Region_366355759 {
label = "R(2:(1:5)|(3:6|(1:(3:8|(1:10)|(2:(1:14)|(1:12))))(0)|13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1590932028 {
label = "IF [B:4:0x000d] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|PHI: r0 \l  PHI: (r0v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r5.length == 0) == true) goto L_0x000f\l}"];
subgraph cluster_Region_759111402 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1523824125 {
label = "R(3:6|(1:(3:8|(1:10)|(2:(1:14)|(1:12))))(0)|13)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0011|T r0 = r5[0]\lint int r1 = kotlin.collections.ArraysKt.getLastIndex(r5)\l}"];
subgraph cluster_IfRegion_463641200 {
label = "IF [B:7:0x0017] THEN: R(1:(3:8|(1:10)|(2:(1:14)|(1:12)))) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0017|if (1 \<= r1) goto L_0x0019\l}"];
subgraph cluster_Region_1727883887 {
label = "R(1:(3:8|(1:10)|(2:(1:14)|(1:12))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1118225602 {
label = "LOOP:0: (3:8|(1:10)|(2:(1:14)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_1739799538 {
label = "R(3:8|(1:10)|(2:(1:14)|(1:12)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0019|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v5 T) = (r0v3 T), (r0v6 T) binds: [B:7:0x0017, B:12:0x0024] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:7:0x0017, B:12:0x0024] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0019\-\>B:12:0x0024\l|T r3 = r5[r2]\l}"];
subgraph cluster_IfRegion_1574425272 {
label = "IF [B:9:0x001f] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001f|if (r0.compareTo(r3) \> 0) goto L_0x0021\l}"];
subgraph cluster_Region_591729033 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0021|r0 = r3\l}"];
}
}
subgraph cluster_Region_19385592 {
label = "R(2:(1:14)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2100785298 {
label = "IF [B:11:0x0022] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0022|PHI: r0 \l  PHI: (r0v6 T) = (r0v5 T), (r0v7 T) binds: [B:9:0x001f, B:10:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == r1) goto L_0x0027\l}"];
subgraph cluster_Region_1413106296 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0027|SYNTHETIC\lEDGE_INSN: B:14:0x0027\-\>B:13:0x0027 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_946348286 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0024|LOOP_END\lLOOP:0: B:8:0x0019\-\>B:12:0x0024\l|r2++\l}"];
}
}
}
}
}
subgraph cluster_Region_1494871170 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_13 [shape=record,label="{13\:\ 0x0027|RETURN\lEDGE_INSN: B:14:0x0027\-\>B:13:0x0027 ?: BREAK  \lPHI: r0 \l  PHI: (r0v4 T) = (r0v3 T), (r0v6 T) binds: [B:7:0x0017, B:14:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|return r0\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0008}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000a}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000c}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.ArraysKt___ArraysKt.min((r5v0 T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Ljava\/lang\/Comparable\<, \-TT;\>;\>([TT;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_14 -> Node_13;
Node_12 -> Node_8;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

