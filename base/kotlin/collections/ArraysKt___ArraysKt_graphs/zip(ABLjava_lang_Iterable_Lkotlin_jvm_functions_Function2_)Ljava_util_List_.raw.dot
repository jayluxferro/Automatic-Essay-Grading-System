digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.zip([BLjava\/lang\/Iterable;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"other\" \l0x0007: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r7 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000f: ARRAY_LENGTH  (r0 I:int) = (r5 I:?[]) \l0x0010: CONST  (r1 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0012: INVOKE  (r1 I:int) = (r6 I:java.lang.Iterable), (r1 I:int) kotlin.collections.CollectionsKt.collectionSizeOrDefault(java.lang.Iterable, int):int type: STATIC \l0x0016: INVOKE  (r1 I:int) = (r1 I:int), (r0 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x001a: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x001c: INVOKE  (r2 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x001f: INVOKE  (r6 I:java.util.Iterator) = (r6 I:java.lang.Iterable) java.lang.Iterable.iterator():java.util.Iterator type: INTERFACE \l0x0023: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0024|0x0024: INVOKE  (r3 I:boolean) = (r6 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0028|0x0028: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0042 \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: INVOKE  (r3 I:java.lang.Object) = (r6 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|0x002e: IF  (r1 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:6:0x0031 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|0x0031: ARITH  (r4 I:int) = (r1 I:int) + (1 int) \l0x0033: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r5 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0035: INVOKE  (r1 I:java.lang.Byte) = (r1 I:byte) java.lang.Byte.valueOf(byte):java.lang.Byte type: STATIC \l0x0039: INVOKE  (r1 I:java.lang.Object) = \l  (r7 I:kotlin.jvm.functions.Function2)\l  (r1 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x003d: INVOKE  (r2 I:java.util.ArrayList), (r1 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x0040: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0042|0x0042: CHECK_CAST  (r2 I:java.util.List) = (java.util.List) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0044|0x0044: RETURN  (r2 I:java.util.List\<V\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.List\<V\> kotlin.collections.ArraysKt___ArraysKt.zip((r5 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Iterable\<? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function2\<? super java.lang.Byte, ? super R, ? extends V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<R:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>([B, Ljava\/lang\/Iterable\<, +TR;\>;, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Byte;, \-TR;+TV;\>;), Ljava\/util\/List\<, TV;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_7[style=dashed];
Node_6 -> Node_1;
Node_7 -> Node_8;
}

