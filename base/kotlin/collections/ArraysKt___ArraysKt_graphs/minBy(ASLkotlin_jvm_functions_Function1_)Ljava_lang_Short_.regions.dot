digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.minBy([SLkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Short;" {
subgraph cluster_Region_1681204181 {
label = "R(2:0|(2:(1:5)|(3:6|(1:(3:8|(1:10)|(2:(1:15)|(1:12))))(0)|14)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, \"selector\")\lint r2 = 1\l}"];
subgraph cluster_Region_883765419 {
label = "R(2:(1:5)|(3:6|(1:(3:8|(1:10)|(2:(1:15)|(1:12))))(0)|14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1765553878 {
label = "IF [B:4:0x0012] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|PHI: r0 \l  PHI: (r0v3 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r7.length == 0) == true) goto L_0x0014\l}"];
subgraph cluster_Region_1922620529 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_94787048 {
label = "R(3:6|(1:(3:8|(1:10)|(2:(1:15)|(1:12))))(0)|14)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|short short r0 = r7[0]\ljava.lang.Comparable java.lang.Comparable r1 = (java.lang.Comparable) r8.invoke(java.lang.Short.valueOf(r0))\lint int r3 = kotlin.collections.ArraysKt.getLastIndex(r7)\l}"];
subgraph cluster_IfRegion_844172921 {
label = "IF [B:7:0x0026] THEN: R(1:(3:8|(1:10)|(2:(1:15)|(1:12)))) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0026|if (1 \<= r3) goto L_0x0028\l}"];
subgraph cluster_Region_1611269549 {
label = "R(1:(3:8|(1:10)|(2:(1:15)|(1:12))))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1040140655 {
label = "LOOP:0: (3:8|(1:10)|(2:(1:15)|(1:12)))";
node [shape=record,color=blue];
subgraph cluster_Region_1590669062 {
label = "R(3:8|(1:10)|(2:(1:15)|(1:12)))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0028|LOOP_START\lPHI: r0 r1 r2 \l  PHI: (r0v6 short) = (r0v4 short), (r0v7 short) binds: [B:7:0x0026, B:12:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v4 java.lang.Comparable) = (r1v3 java.lang.Comparable), (r1v5 java.lang.Comparable) binds: [B:7:0x0026, B:12:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:7:0x0026, B:12:0x003e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0028\-\>B:12:0x003e\l|short short r4 = r7[r2]\ljava.lang.Comparable java.lang.Comparable r5 = (java.lang.Comparable) r8.invoke(java.lang.Short.valueOf(r4))\l}"];
subgraph cluster_IfRegion_2109421676 {
label = "IF [B:9:0x0038] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0038|if (r1.compareTo(r5) \> 0) goto L_0x003a\l}"];
subgraph cluster_Region_1580145456 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x003a|r0 = r4\lr1 = r5\l}"];
}
}
subgraph cluster_Region_905794176 {
label = "R(2:(1:15)|(1:12))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1212214462 {
label = "IF [B:11:0x003c] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003c|PHI: r0 r1 \l  PHI: (r0v7 short) = (r0v6 short), (r0v8 short) binds: [B:9:0x0038, B:10:0x003a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v5 java.lang.Comparable) = (r1v4 java.lang.Comparable), (r1v6 java.lang.Comparable) binds: [B:9:0x0038, B:10:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == r3) goto L_0x0041\l}"];
subgraph cluster_Region_28474138 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0041|SYNTHETIC\lEDGE_INSN: B:15:0x0041\-\>B:13:0x0041 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1932860656 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003e|LOOP_END\lLOOP:0: B:8:0x0028\-\>B:12:0x003e\l|r2++\l}"];
}
}
}
}
}
subgraph cluster_Region_832909804 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_14 [shape=record,label="{14\:\ 0x0045|RETURN\l|return java.lang.Short.valueOf(r0)\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000d}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000f}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0011}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0041|EDGE_INSN: B:15:0x0041\-\>B:13:0x0041 ?: BREAK  \lPHI: r0 \l  PHI: (r0v5 short) = (r0v4 short), (r0v7 short) binds: [B:7:0x0026, B:15:0x0041] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public static final java.lang.Short kotlin.collections.ArraysKt___ArraysKt.minBy((r7v0 short[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 kotlin.jvm.functions.Function1\<? super java.lang.Short, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<R::, Ljava\/lang\/Comparable\<, \-TR;\>;\>([S, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Short;, +TR;\>;), Ljava\/lang\/Short;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_13[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_15 -> Node_13;
Node_12 -> Node_8;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_13 -> Node_14;
}

