digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.takeLastWhile([Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/List;" {
subgraph cluster_Region_834209141 {
label = "R(3:0|(1:(2:(1:5)|(1:6)))|8)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"predicate\")\lint int r0 = kotlin.collections.ArraysKt.getLastIndex(r2)\l}"];
subgraph cluster_LoopRegion_1667916876 {
label = "LOOP:0: (1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000e|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v5 int) binds: [B:0:0x0000, B:6:0x0025] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:6:0x0025\l|if (r0 \>= 0) goto L_0x0010\l}"];
subgraph cluster_Region_257388192 {
label = "R(1:(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_181837972 {
label = "R(2:(1:5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_916546006 {
label = "IF [B:3:0x001c] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001c|if (r3.invoke(r2[r0]).booleanValue() == false) goto L_0x001e\l}"];
subgraph cluster_Region_1330268378 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0024|RETURN\l|return kotlin.collections.ArraysKt.drop(r2, r0 + 1)\l}"];
}
}
subgraph cluster_Region_1604552061 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0025|LOOP_END\lLOOP:0: B:1:0x000e\-\>B:6:0x0025\l|r0\-\-\l}"];
}
}
}
}
Node_8 [shape=record,label="{8\:\ 0x002c|RETURN\l|return kotlin.collections.ArraysKt.toList(r2)\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0010}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001e}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0028}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001e|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0028|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.List\<T\> kotlin.collections.ArraysKt___ArraysKt.takeLastWhile((r2v0 T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;, Ljava\/lang\/Boolean;, \>;), Ljava\/util\/List\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10[style=dashed];
Node_3 -> Node_6[style=dashed];
Node_3 -> Node_9;
Node_6 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_9 -> Node_4;
Node_10 -> Node_7;
}

