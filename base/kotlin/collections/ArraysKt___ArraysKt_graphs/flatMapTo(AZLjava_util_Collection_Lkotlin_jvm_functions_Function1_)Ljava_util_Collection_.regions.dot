digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.flatMapTo([ZLjava\/util\/Collection;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Collection;" {
subgraph cluster_Region_686275663 {
label = "R(3:0|(1:2)|3)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, com.google.firebase.analytics.FirebaseAnalytics.Param.DESTINATION)\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"transform\")\lint int r0 = r3.length\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_776285128 {
label = "LOOP:0: (1:2)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0011|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:2:0x0013] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0011\-\>B:2:0x0013\l|if (r1 \< r0) goto L_0x0013\l}"];
subgraph cluster_Region_620339113 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0013|LOOP_END\lLOOP:0: B:1:0x0011\-\>B:2:0x0013\l|kotlin.collections.CollectionsKt.addAll(r4, (java.lang.Iterable) r5.invoke(java.lang.Boolean.valueOf(r2)))\lr1++\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0025|RETURN\l|return r4\l}"];
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0025|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final C kotlin.collections.ArraysKt___ArraysKt.flatMapTo((r3v0 boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 C A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function1\<? super java.lang.Boolean, ? extends java.lang.Iterable\<? extends R\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<R:, Ljava\/lang\/Object;, C::, Ljava\/util\/Collection\<, \-TR;\>;\>([ZTC;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Boolean;, +, Ljava\/lang\/Iterable\<, +TR;\>;\>;)TC;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_1;
Node_4 -> Node_3;
}

