digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.toSet([F)Ljava\/util\/Set;" {
subgraph cluster_Region_1561048358 {
label = "R(2:0|1)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\l}"];
subgraph cluster_SwitchRegion_840464791 {
label = "Switch: 2, default: R(1:6)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|switch(r2.length) \{\l    case 0: goto L_0x0028;\l    case 1: goto L_0x001c;\l    default: goto L_0x0009;\l\}\l}"];
subgraph cluster_Region_1800151742 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return kotlin.collections.SetsKt.emptySet()\l}"];
}
subgraph cluster_Region_2022626367 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.collections.SetsKt.setOf(java.lang.Float.valueOf(r2[0]))\l}"];
}
subgraph cluster_Region_2024602765 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return (java.util.Set) kotlin.collections.ArraysKt.toCollection(r2, new java.util.LinkedHashSet(kotlin.collections.MapsKt.mapCapacity(r2.length)))\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x001c}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0028}"];
MethodNode[shape=record,label="{public static final java.util.Set\<java.lang.Float\> kotlin.collections.ArraysKt___ArraysKt.toSet((r2v0 float[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([F), Ljava\/util\/Set\<, Ljava\/lang\/Float;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_4;
Node_2 -> Node_6;
Node_3 -> Node_7;
Node_4 -> Node_5;
}

