digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.find([SLkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Short;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r4 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: AGET  (r2 I:short A[IMMUTABLE_TYPE]) = \l  (r4 I:short[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0006: INVOKE  (r3 I:java.lang.Short) = (r2 I:short) java.lang.Short.valueOf(short):java.lang.Short type: STATIC \l0x000a: INVOKE  (r3 I:java.lang.Object) = \l  (r5 I:kotlin.jvm.functions.Function1)\l  (r3 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x000e: CHECK_CAST  (r3 I:java.lang.Boolean) = (java.lang.Boolean) (r3 I:?[OBJECT, ARRAY]) \l0x0010: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: INVOKE  (r4 I:java.lang.Short) = (r2 I:short) java.lang.Short.valueOf(short):java.lang.Short type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: RETURN  (r4 I:java.lang.Short) \l}"];
MethodNode[shape=record,label="{private static final java.lang.Short kotlin.collections.ArraysKt___ArraysKt.find((r4 I:short[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1\<? super java.lang.Short, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([S, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Short;, Ljava\/lang\/Boolean;, \>;), Ljava\/lang\/Short;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_1;
Node_6 -> Node_7;
}

