digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.groupByTo([CLjava\/util\/Map;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"destination\" \l0x0007: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"keySelector\" \l0x000c: INVOKE  (r7 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000f: ARRAY_LENGTH  (r0 I:int) = (r5 I:?[]) \l0x0010: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:6:0x0037 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: AGET  (r2 I:char A[IMMUTABLE_TYPE]) = \l  (r5 I:char[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l0x0015: INVOKE  (r3 I:java.lang.Character) = (r2 I:char) java.lang.Character.valueOf(char):java.lang.Character type: STATIC \l0x0019: INVOKE  (r3 I:java.lang.Object) = \l  (r7 I:kotlin.jvm.functions.Function1)\l  (r3 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x001d: INVOKE  (r4 I:java.lang.Object) = (r6 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|0x0021: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList \l0x0025: INVOKE  (r4 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0028: INVOKE  \l  (r6 I:java.util.Map)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|0x002b: CHECK_CAST  (r4 I:java.util.List) = (java.util.List) (r4 I:?[OBJECT, ARRAY]) \l0x002d: INVOKE  (r2 I:java.lang.Character) = (r2 I:char) java.lang.Character.valueOf(char):java.lang.Character type: STATIC \l0x0031: INVOKE  (r4 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0034: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|0x0037: RETURN  (r6 I:M) \l}"];
MethodNode[shape=record,label="{public static final M kotlin.collections.ArraysKt___ArraysKt.groupByTo((r5 I:char[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:M A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:kotlin.jvm.functions.Function1\<? super java.lang.Character, ? extends K\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<K:, Ljava\/lang\/Object;, M::, Ljava\/util\/Map\<, \-TK;, Ljava\/util\/List\<, Ljava\/lang\/Character;, \>;\>;\>([CTM;, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/lang\/Character;, +TK;\>;)TM;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_1;
}

