digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.reduceRightIndexed([ZLkotlin\/jvm\/functions\/Function3;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"operation\")\lint r0 = kotlin.collections.ArraysKt.getLastIndex(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r0 \< 0) goto L_0x0032\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|int r1 = r0 + \-1\lboolean r0 = r4[r0]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v4 boolean) = (r0v3 boolean), (r0v8 boolean) binds: [B:2:0x0010, B:4:0x0016] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:2:0x0010, B:4:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0014\-\>B:4:0x0016\l|if (r1 \< 0) goto L_0x0031\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|LOOP_END\lLOOP:0: B:3:0x0014\-\>B:4:0x0016\l|boolean r0 = r5.invoke(java.lang.Integer.valueOf(r1), java.lang.Boolean.valueOf(r4[r1]), java.lang.Boolean.valueOf(r0)).booleanValue()\lint r1 = r1 + \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|RETURN\l|return r0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0032}"];
Node_7 [shape=record,label="{7\:\ 0x003b|throw new java.lang.UnsupportedOperationException(\"Empty array can't be reduced.\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.collections.ArraysKt___ArraysKt.reduceRightIndexed((r4v0 boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super java.lang.Boolean, ? super java.lang.Boolean, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[([Z, Lkotlin\/jvm\/functions\/Function3\<, \-, Ljava\/lang\/Integer;, \-, Ljava\/lang\/Boolean;, \-, Ljava\/lang\/Boolean;, Ljava\/lang\/Boolean;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_3;
Node_6 -> Node_7;
Node_8 -> Node_5;
}

