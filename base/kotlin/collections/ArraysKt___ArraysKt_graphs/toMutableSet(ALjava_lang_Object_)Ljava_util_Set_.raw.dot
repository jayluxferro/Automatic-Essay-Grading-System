digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.toMutableSet([Ljava\/lang\/Object;)Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: NEW_INSTANCE  (r0 I:java.util.LinkedHashSet) =  java.util.LinkedHashSet \l0x0007: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[]) \l0x0008: INVOKE  (r1 I:int) = (r1 I:int) kotlin.collections.MapsKt.mapCapacity(int):int type: STATIC \l0x000c: INVOKE  (r0 I:java.util.LinkedHashSet), (r1 I:int) java.util.LinkedHashSet.\<init\>(int):void type: DIRECT \l0x000f: ARRAY_LENGTH  (r1 I:int) = (r4 I:?[]) \l0x0010: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: AGET  (r3 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0015: INVOKE  (r0 I:java.util.LinkedHashSet), (r3 I:java.lang.Object) java.util.LinkedHashSet.add(java.lang.Object):boolean type: VIRTUAL \l0x0018: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: CHECK_CAST  (r0 I:java.util.Set) = (java.util.Set) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: RETURN  (r0 I:java.util.Set\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.Set\<T\> kotlin.collections.ArraysKt___ArraysKt.toMutableSet((r4 I:T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;), Ljava\/util\/Set\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
}

