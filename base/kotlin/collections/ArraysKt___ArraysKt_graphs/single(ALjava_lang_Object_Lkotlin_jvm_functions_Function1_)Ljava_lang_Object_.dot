digraph "CFG forkotlin.collections.ArraysKt___ArraysKt.single([Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"predicate\")\lint r0 = r6.length\lr1 = 0\lr3 = null\lr2 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|LOOP_START\lPHI: r1 r2 r3 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:8:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 boolean) = (r2v1 boolean), (r2v3 boolean) binds: [B:0:0x0000, B:8:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 T) = (r3v0 T), (r3v2 T) binds: [B:0:0x0000, B:8:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000f\-\>B:8:0x002e\l|if (r1 \>= r0) goto L_0x0031\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|r4 = r6[r1]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|if (r7.invoke(r4).booleanValue() == false) goto L_0x002e\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|if (r2 != false) goto L_0x0024\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|r2 = true\lr3 = r4\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024}"];
Node_7 [shape=record,label="{7\:\ 0x002d|throw new java.lang.IllegalArgumentException(\"Array contains more than one matching element.\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|LOOP_END\lPHI: r2 r3 \l  PHI: (r2v3 boolean) = (r2v2 boolean), (r2v4 boolean) binds: [B:15:0x002e, B:16:0x002e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 T) = (r3v1 T), (r3v3 T) binds: [B:15:0x002e, B:16:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000f\-\>B:8:0x002e\l|int r1 = r1 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|if (r2 == false) goto L_0x0034\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|RETURN\l|return r3\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034}"];
Node_12 [shape=record,label="{12\:\ 0x003d|throw new java.util.NoSuchElementException(\"Array contains no element matching the predicate.\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final T kotlin.collections.ArraysKt___ArraysKt.single((r6v0 T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 kotlin.jvm.functions.Function1\<? super T, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>([TT;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;, Ljava\/lang\/Boolean;, \>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_8 -> Node_1;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_9;
Node_14 -> Node_6;
Node_15 -> Node_8;
Node_16 -> Node_8;
}

