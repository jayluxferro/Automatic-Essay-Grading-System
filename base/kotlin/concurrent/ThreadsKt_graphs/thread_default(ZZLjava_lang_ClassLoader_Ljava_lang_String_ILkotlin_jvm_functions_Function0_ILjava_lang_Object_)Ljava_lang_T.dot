digraph "CFG forkotlin.concurrent.ThreadsKt.thread$default(ZZLjava\/lang\/ClassLoader;Ljava\/lang\/String;ILkotlin\/jvm\/functions\/Function0;ILjava\/lang\/Object;)Ljava\/lang\/Thread;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r12 & 1) == 0) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|r0 = r6\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|PHI: r0 \l  PHI: (r0v0 boolean) = (r0v1 boolean), (r0v2 boolean) binds: [B:3:0x0007, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if ((r12 & 2) == 0) goto L_0x000f\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|r1 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|r1 = r7\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|PHI: r1 \l  PHI: (r1v0 boolean) = (r1v1 boolean), (r1v2 boolean) binds: [B:7:0x000f, B:6:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|if ((r12 & 4) == 0) goto L_0x0018\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|java.lang.ClassLoader r8 = null\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|PHI: r8 \l  PHI: (r8v1 java.lang.ClassLoader) = (r8v0 java.lang.ClassLoader), (r8v3 java.lang.ClassLoader) binds: [B:9:0x0013, B:10:0x0015] A[DONT_GENERATE, DONT_INLINE]\l|r2 = r8\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|if ((r12 & 8) == 0) goto L_0x0020\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|java.lang.String r9 = null\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|PHI: r9 \l  PHI: (r9v1 java.lang.String) = (r9v0 java.lang.String), (r9v3 java.lang.String) binds: [B:12:0x001b, B:13:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|r3 = r9\l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|if ((r12 & 16) == 0) goto L_0x0028\l}"];
Node_16 [shape=record,label="{16\:\ 0x0025|r4 = \-1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0028|r4 = r10\l}"];
Node_18 [shape=record,label="{18\:\ 0x0029|PHI: r4 \l  PHI: (r4v0 int) = (r4v1 int), (r4v2 int) binds: [B:17:0x0028, B:16:0x0025] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x002e|RETURN\l|return thread(r0, r1, r2, r3, r4, r11)\l}"];
MethodNode[shape=record,label="{public static \/* bridge *\/ \/* synthetic *\/ java.lang.Thread kotlin.concurrent.ThreadsKt.thread$default((r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.ClassLoader A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 kotlin.jvm.functions.Function0 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

