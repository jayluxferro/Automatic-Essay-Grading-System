digraph "CFG forkotlin.io.LinesSequence$iterator$1.hasNext()Z" {
subgraph cluster_Region_1449506777 {
label = "R(2:(2:4|(1:6))|(2:(1:10)|(1:9)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_764650504 {
label = "IF [B:1:0x0003, B:3:0x0007] THEN: R(2:4|(1:6)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|ADDED_TO_REGION\l|if (r2.nextValue == null) goto L_0x0005\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|ADDED_TO_REGION\l|if (r2.done == false) goto L_0x0009\l}"];
subgraph cluster_Region_681059032 {
label = "R(2:4|(1:6))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|r2.nextValue = r2.this$0.reader.readLine()\l}"];
subgraph cluster_IfRegion_1766316881 {
label = "IF [B:5:0x0017] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|if (r2.nextValue == null) goto L_0x0019\l}"];
subgraph cluster_Region_308765407 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|r2.done = true\l}"];
}
}
}
}
subgraph cluster_Region_576993151 {
label = "R(2:(1:10)|(1:9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1266896649 {
label = "IF [B:8:0x001d] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|if (r2.nextValue != null) goto L_?\l}"];
subgraph cluster_Region_482973819 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
subgraph cluster_Region_898724007 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0020|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001b}"];
MethodNode[shape=record,label="{public boolean kotlin.io.LinesSequence$iterator$1.hasNext((r2v0 'this' kotlin.io.LinesSequence$iterator$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_7 -> Node_8;
}

