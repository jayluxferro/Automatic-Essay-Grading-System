digraph "CFG forkotlin.io.LinesSequence$iterator$1.hasNext()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r2.nextValue != null) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r2.done != false) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|r2.nextValue = r2.this$0.reader.readLine()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|if (r2.nextValue != null) goto L_0x001b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|r2.done = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b}"];
Node_8 [shape=record,label="{8\:\ 0x001d|if (r2.nextValue == null) goto L_0x0020\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean kotlin.io.LinesSequence$iterator$1.hasNext((r2v0 'this' kotlin.io.LinesSequence$iterator$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
}

