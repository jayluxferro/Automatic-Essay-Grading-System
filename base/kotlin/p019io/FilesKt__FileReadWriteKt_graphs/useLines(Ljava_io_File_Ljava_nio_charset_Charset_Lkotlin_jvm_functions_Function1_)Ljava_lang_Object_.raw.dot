digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.useLines(Ljava\/io\/File;Ljava\/nio\/charset\/Charset;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"charset\" \l0x0007: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"block\" \l0x000c: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000f: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0011: INVOKE  (r0 I:java.io.FileInputStream), (r3 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT \l0x0014: CHECK_CAST  (r0 I:java.io.InputStream) = (java.io.InputStream) (r0 I:?[OBJECT, ARRAY]) \l0x0016: NEW_INSTANCE  (r3 I:java.io.InputStreamReader) =  java.io.InputStreamReader \l0x0018: INVOKE  \l  (r3 I:java.io.InputStreamReader)\l  (r0 I:java.io.InputStream)\l  (r4 I:java.nio.charset.Charset)\l java.io.InputStreamReader.\<init\>(java.io.InputStream, java.nio.charset.Charset):void type: DIRECT \l0x001b: CHECK_CAST  (r3 I:java.io.Reader) = (java.io.Reader) (r3 I:?[OBJECT, ARRAY]) \l0x001d: INSTANCE_OF  (r4 I:boolean) = (r3 I:?[OBJECT, ARRAY]) java.io.BufferedReader \l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|0x001f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0024 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0021|0x0021: CHECK_CAST  (r3 I:java.io.BufferedReader) = (java.io.BufferedReader) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: NEW_INSTANCE  (r4 I:java.io.BufferedReader) =  java.io.BufferedReader \l0x0026: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l \l0x0028: INVOKE  \l  (r4 I:java.io.BufferedReader)\l  (r3 I:java.io.Reader)\l  (r0 I:int)\l java.io.BufferedReader.\<init\>(java.io.Reader, int):void type: DIRECT \l0x002b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: CHECK_CAST  (r3 I:java.io.Closeable) = (java.io.Closeable) (r3 I:?[OBJECT, ARRAY]) \l0x002e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: CHECK_CAST  (r4 I:java.lang.Throwable) = (java.lang.Throwable) (r4 I:?[OBJECT, ARRAY]) \l0x0031: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0032: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0033: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|SYNTHETIC\lSplitter:B:5:0x0034\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0034\l|0x0034: CHECK_CAST  (r2 I:java.io.BufferedReader) = (java.io.BufferedReader) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x0054 \}, TRY_ENTER]\l0x0036: INVOKE  (r2 I:kotlin.sequences.Sequence) = (r2 I:java.io.BufferedReader) kotlin.io.TextStreamsKt.lineSequence(java.io.BufferedReader):kotlin.sequences.Sequence type: STATIC A[Catch:\{ Throwable \-\> 0x0054 \}]\l0x003a: INVOKE  (r5 I:java.lang.Object) = \l  (r5 I:kotlin.jvm.functions.Function1)\l  (r2 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ Throwable \-\> 0x0054 \}]\l0x003d: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: INVOKE  (r1 I:int) kotlin.jvm.internal.InlineMarker.finallyStart(int):void type: STATIC \l0x0041: INVOKE  (r0 I:boolean) = (r1 I:int), (r1 I:int), (r0 I:int) kotlin.internal.PlatformImplementationsKt.apiVersionIsAtLeast(int, int, int):boolean type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0045|0x0045: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|0x0047: INVOKE  (r3 I:java.io.Closeable), (r4 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x004b|0x004b: INVOKE  (r3 I:java.io.Closeable) java.io.Closeable.close():void type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|0x004e: INVOKE  (r1 I:int) kotlin.jvm.internal.InlineMarker.finallyEnd(int):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0051|0x0051: RETURN  (r5 I:T) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|ExcHandler: all null\lSplitter:B:16:0x0055\l|0x0052: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0054|ExcHandler: Throwable null\lSplitter:B:5:0x0034\l|0x0054: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x0055|SYNTHETIC\lSplitter:B:16:0x0055\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0055\l|0x0055: THROW  (r4 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0052 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|0x0056: INVOKE  (r1 I:int) kotlin.jvm.internal.InlineMarker.finallyStart(int):void type: STATIC \l0x0059: INVOKE  (r0 I:boolean) = (r1 I:int), (r1 I:int), (r0 I:int) kotlin.internal.PlatformImplementationsKt.apiVersionIsAtLeast(int, int, int):boolean type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x005d|0x005d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0069 \l}"];
Node_20 [shape=record,label="{20\:\ 0x005f|0x005f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0065 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0061|0x0061: INVOKE  (r3 I:java.io.Closeable) java.io.Closeable.close():void type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0065|SYNTHETIC\lSplitter:B:22:0x0065\l}"];
Node_23 [shape=record,label="{23\:\ ?|Splitter:B:22:0x0065\l|0x0065: INVOKE  (r3 I:java.io.Closeable) java.io.Closeable.close():void type: INTERFACE A[Catch:\{ Throwable \-\> 0x006c \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0069|0x0069: INVOKE  (r3 I:java.io.Closeable), (r4 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_26 [shape=record,label="{26\:\ 0x006c|0x006c: INVOKE  (r1 I:int) kotlin.jvm.internal.InlineMarker.finallyEnd(int):void type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lExcHandler: Throwable null\lSplitter:B:22:0x0065\l}"];
Node_28 [shape=record,label="{28\:\ 0x006f|0x006f: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final T kotlin.io.FilesKt__FileReadWriteKt.useLines((r3 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1\<? super kotlin.sequences.Sequence\<java.lang.String\>, ? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/io\/File;, Ljava\/nio\/charset\/Charset;, Lkotlin\/jvm\/functions\/Function1\<, \-, Lkotlin\/sequences\/Sequence\<, Ljava\/lang\/String;, \>;+TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_13;
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_22 -> Node_27;
Node_23 -> Node_27;
Node_23 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_27 -> Node_26;
}

