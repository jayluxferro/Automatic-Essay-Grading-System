digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.printWriter(Ljava\/io\/File;Ljava\/nio\/charset\/Charset;)Ljava\/io\/PrintWriter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.Writer r1 = new java.io.OutputStreamWriter(new java.io.FileOutputStream(r1), r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|if ((r1 instanceof java.io.BufferedWriter) == false) goto L_0x0015\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|java.io.BufferedWriter r1 = (java.io.BufferedWriter) r1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|r1 = new java.io.BufferedWriter(r1, 8192)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|PHI: r1 \l  PHI: (r1v3 java.io.BufferedWriter) = (r1v5 java.io.BufferedWriter), (r1v6 java.io.BufferedWriter) binds: [B:3:0x0015, B:2:0x0012] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|RETURN\l|return new java.io.PrintWriter(r1)\l}"];
MethodNode[shape=record,label="{private static final java.io.PrintWriter kotlin.io.FilesKt__FileReadWriteKt.printWriter((r1v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, kotlin.internal.InlineOnly, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

