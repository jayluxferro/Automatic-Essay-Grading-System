digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.readBytes(Ljava\/io\/File;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r8 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0007: INVOKE  (r0 I:java.io.FileInputStream), (r8 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT \l0x000a: CHECK_CAST  (r0 I:java.io.Closeable) = (java.io.Closeable) (r0 I:?[OBJECT, ARRAY]) \l0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: CHECK_CAST  (r1 I:java.lang.Throwable) = (java.lang.Throwable) (r1 I:?[OBJECT, ARRAY]) \l0x000f: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|SYNTHETIC\lSplitter:B:1:0x0010\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0010\l|0x0010: CHECK_CAST  (r2 I:java.io.FileInputStream) = (java.io.FileInputStream) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x0066 \}, TRY_ENTER]\l0x0012: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0013: INVOKE  (r4 I:long) = (r8 I:java.io.File) java.io.File.length():long type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0017: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x001a: CAST  (r6 I:long) = (long) (r6 I:int) A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x001b: CMP_L  (r6 I:int) = (r4 I:long), (r6 I:long) A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: IF  (r6 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:15:0x003e A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: CAST  (r8 I:int) = (int) (r4 I:long) A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0020: NEW_ARRAY  (r4 I:byte[]) = (r8 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x002e A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: INVOKE  (r5 I:int) = \l  (r2 I:java.io.FileInputStream)\l  (r4 I:byte[])\l  (r3 I:int)\l  (r8 I:int)\l java.io.FileInputStream.read(byte[], int, int):int type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:9:0x002b A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: GOTO  \-\> 0x002e A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: ARITH  (r8 I:int) = (r8 I:int) \- (r5 I:int) A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x002c: ARITH  (r3 I:int) = (r3 I:int) + (r5 I:int) A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x002d: GOTO  \-\> 0x0022 A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0031 A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: GOTO  \-\> 0x003a A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: INVOKE  (r4 I:byte[]) = (r4 I:byte[]), (r3 I:int) java.util.Arrays.copyOf(byte[], int):byte[] type: STATIC A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0035: CONST_STR  (r8 I:java.lang.String) =  \"java.util.Arrays.copyOf(this, newSize)\" A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0037: INVOKE  (r4 I:java.lang.Object), (r8 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC A[Catch:\{ Throwable \-\> 0x0066 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|0x003a: INVOKE  (r0 I:java.io.Closeable), (r1 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: RETURN  (r4 I:byte[]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|SYNTHETIC\lSplitter:B:15:0x003e\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x003e\l|0x003e: NEW_INSTANCE  (r2 I:java.lang.OutOfMemoryError) =  java.lang.OutOfMemoryError A[Catch:\{ Throwable \-\> 0x0066 \}, TRY_ENTER]\l0x0040: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0042: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0045: CONST_STR  (r6 I:java.lang.String) =  \"File \" A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0047: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x004a: INVOKE  (r3 I:java.lang.StringBuilder), (r8 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x004d: CONST_STR  (r8 I:java.lang.String) =  \" is too big (\" A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x004f: INVOKE  (r3 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0052: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0055: CONST_STR  (r8 I:java.lang.String) =  \" bytes) to fit in memory.\" A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0057: INVOKE  (r3 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x005a: INVOKE  (r8 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x005e: INVOKE  (r2 I:java.lang.OutOfMemoryError), (r8 I:java.lang.String) java.lang.OutOfMemoryError.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ Throwable \-\> 0x0066 \}]\l0x0061: CHECK_CAST  (r2 I:java.lang.Throwable) = (java.lang.Throwable) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x0066 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0063|0x0063: THROW  (r2 I:java.lang.Throwable) A[Catch:\{ Throwable \-\> 0x0066 \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0064|ExcHandler: all null\lSplitter:B:22:0x0068\l|0x0064: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|ExcHandler: Throwable null\lSplitter:B:1:0x0010\l|0x0066: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x0067|0x0067: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0068|SYNTHETIC\lSplitter:B:22:0x0068\l}"];
Node_23 [shape=record,label="{23\:\ ?|Splitter:B:22:0x0068\l|0x0068: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0064 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0069|0x0069: INVOKE  (r0 I:java.io.Closeable), (r1 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_25 [shape=record,label="{25\:\ 0x006c|0x006c: THROW  (r8 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final byte[] kotlin.io.FilesKt__FileReadWriteKt.readBytes((r8 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_18 -> Node_24;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_18;
Node_23 -> Node_18;
Node_24 -> Node_25;
}

