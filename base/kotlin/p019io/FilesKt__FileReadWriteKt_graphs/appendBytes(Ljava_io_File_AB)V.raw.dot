digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.appendBytes(Ljava\/io\/File;[B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"array\" \l0x0007: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: NEW_INSTANCE  (r0 I:java.io.FileOutputStream) =  java.io.FileOutputStream \l0x000c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: INVOKE  \l  (r0 I:java.io.FileOutputStream)\l  (r2 I:java.io.File)\l  (r1 I:boolean)\l java.io.FileOutputStream.\<init\>(java.io.File, boolean):void type: DIRECT \l0x0010: CHECK_CAST  (r0 I:java.io.Closeable) = (java.io.Closeable) (r0 I:?[OBJECT, ARRAY]) \l0x0012: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: CHECK_CAST  (r2 I:java.lang.Throwable) = (java.lang.Throwable) (r2 I:?[OBJECT, ARRAY]) \l0x0015: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|SYNTHETIC\lSplitter:B:1:0x0016\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0016\l|0x0016: CHECK_CAST  (r1 I:java.io.FileOutputStream) = (java.io.FileOutputStream) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x0023 \}, TRY_ENTER]\l0x0018: INVOKE  (r1 I:java.io.FileOutputStream), (r3 I:byte[]) java.io.FileOutputStream.write(byte[]):void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0023 \}]\l0x001b: SGET  (r3 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch:\{ Throwable \-\> 0x0023 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: INVOKE  (r0 I:java.io.Closeable), (r2 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|ExcHandler: all null\lSplitter:B:8:0x0024\l|0x0021: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|ExcHandler: Throwable null\lSplitter:B:1:0x0016\l|0x0023: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|SYNTHETIC\lSplitter:B:8:0x0024\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0024\l|0x0024: THROW  (r2 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0021 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: INVOKE  (r0 I:java.io.Closeable), (r2 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final void kotlin.io.FilesKt__FileReadWriteKt.appendBytes((r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_5 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_5;
Node_10 -> Node_11;
}

