digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.writeText(Ljava\/io\/File;Ljava\/lang\/String;Ljava\/nio\/charset\/Charset;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"text\" \l0x0007: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"charset\" \l0x000c: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000f: INVOKE  (r2 I:byte[]) = (r2 I:java.lang.String), (r3 I:java.nio.charset.Charset) java.lang.String.getBytes(java.nio.charset.Charset):byte[] type: VIRTUAL \l0x0013: CONST_STR  (r3 I:java.lang.String) =  \"(this as java.lang.String).getBytes(charset)\" \l0x0015: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0018: INVOKE  (r1 I:java.io.File), (r2 I:byte[]) kotlin.io.FilesKt.writeBytes(java.io.File, byte[]):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: RETURN   \l}"];
MethodNode[shape=record,label="{public static final void kotlin.io.FilesKt__FileReadWriteKt.writeText((r1 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

