digraph "CFG forkotlin.io.FilesKt__FileReadWriteKt.forEachBlock(Ljava\/io\/File;ILkotlin\/jvm\/functions\/Function2;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"action\" \l0x0007: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (512(0x200, float:7.175E\-43) ?[int, float, short, byte, char])\l \l0x000c: INVOKE  (r4 I:int) = (r4 I:int), (r0 I:int) kotlin.ranges.RangesKt.coerceAtLeast(int, int):int type: STATIC \l0x0010: NEW_ARRAY  (r4 I:byte[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0012: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0014: INVOKE  (r0 I:java.io.FileInputStream), (r3 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT \l0x0017: CHECK_CAST  (r0 I:java.io.Closeable) = (java.io.Closeable) (r0 I:?[OBJECT, ARRAY]) \l0x0019: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001a: CHECK_CAST  (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:?[OBJECT, ARRAY]) \l0x001c: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|SYNTHETIC\lSplitter:B:1:0x001d\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x001d\l|0x001d: CHECK_CAST  (r1 I:java.io.FileInputStream) = (java.io.FileInputStream) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x0035 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: INVOKE  (r2 I:int) = (r1 I:java.io.FileInputStream), (r4 I:byte[]) java.io.FileInputStream.read(byte[]):int type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0035 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: IF  (r2 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:8:0x002b A[Catch:\{ Throwable \-\> 0x0035 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: SGET  (r4 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit A[Catch:\{ Throwable \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: INVOKE  (r0 I:java.io.Closeable), (r3 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|SYNTHETIC\lSplitter:B:8:0x002b\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x002b\l|0x002b: INVOKE  (r2 I:java.lang.Integer) = (r2 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC A[Catch:\{ Throwable \-\> 0x0035 \}, TRY_ENTER]\l0x002f: INVOKE  \l  (r5 I:kotlin.jvm.functions.Function2)\l  (r4 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ Throwable \-\> 0x0035 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|ExcHandler: all null\lSplitter:B:14:0x0036\l|0x0033: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|ExcHandler: Throwable null\lSplitter:B:1:0x001d\l|0x0035: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|SYNTHETIC\lSplitter:B:14:0x0036\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x0036\l|0x0036: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0033 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: INVOKE  (r0 I:java.io.Closeable), (r3 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|0x003a: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final void kotlin.io.FilesKt__FileReadWriteKt.forEachBlock((r3 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function2\<? super byte[], ? super java.lang.Integer, kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/io\/File;, I, Lkotlin\/jvm\/functions\/Function2\<, \-[B\-, Ljava\/lang\/Integer;, Lkotlin\/Unit;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_13;
Node_9 -> Node_13;
Node_9 -> Node_3;
Node_11 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_11;
Node_16 -> Node_17;
}

