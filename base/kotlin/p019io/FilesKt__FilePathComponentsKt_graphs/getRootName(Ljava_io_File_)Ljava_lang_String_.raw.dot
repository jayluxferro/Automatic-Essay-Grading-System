digraph "CFG forkotlin.io.FilesKt__FilePathComponentsKt.getRootName(Ljava\/io\/File;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r0 I:java.lang.String) = (r2 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x0009: CONST_STR  (r1 I:java.lang.String) =  \"path\" \l0x000b: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000e: INVOKE  (r2 I:java.lang.String) = (r2 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x0012: CONST_STR  (r1 I:java.lang.String) =  \"path\" \l0x0014: INVOKE  (r2 I:java.lang.Object), (r1 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0017: INVOKE  (r2 I:int) = (r2 I:java.lang.String) kotlin.io.FilesKt__FilePathComponentsKt.getRootLength$FilesKt__FilePathComponentsKt(java.lang.String):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001d|0x001d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: INVOKE  (r2 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:int), (r2 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0022: CONST_STR  (r0 I:java.lang.String) =  \"(this as java.lang.Strinâ€¦ing(startIndex, endIndex)\" \l0x0024: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|0x0027: RETURN  (r2 I:java.lang.String) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: NEW_INSTANCE  (r2 I:kotlin.TypeCastException) =  kotlin.TypeCastException \l0x002a: CONST_STR  (r0 I:java.lang.String) =  \"null cannot be cast to non\-null type java.lang.String\" \l0x002c: INVOKE  (r2 I:kotlin.TypeCastException), (r0 I:java.lang.String) kotlin.TypeCastException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|0x002f: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.io.FilesKt__FilePathComponentsKt.getRootName((r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

