digraph "CFG forkotlin.io.FilesKt__FilePathComponentsKt.toComponents(Ljava\/io\/File;)Lkotlin\/io\/FilePathComponents;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r9 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r9 I:java.lang.String) = (r9 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL \l0x0009: CONST_STR  (r0 I:java.lang.String) =  \"path\" \l0x000b: INVOKE  (r9 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000e: INVOKE  (r0 I:int) = (r9 I:java.lang.String) kotlin.io.FilesKt__FilePathComponentsKt.getRootLength$FilesKt__FilePathComponentsKt(java.lang.String):int type: STATIC \l0x0012: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: INVOKE  (r2 I:java.lang.String) = (r9 I:java.lang.String), (r1 I:int), (r0 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0017: CONST_STR  (r3 I:java.lang.String) =  \"(this as java.lang.Strinâ€¦ing(startIndex, endIndex)\" \l0x0019: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x001c: INVOKE  (r9 I:java.lang.String) = (r9 I:java.lang.String), (r0 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x0020: CONST_STR  (r0 I:java.lang.String) =  \"(this as java.lang.String).substring(startIndex)\" \l0x0022: INVOKE  (r9 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0025: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0026: CHECK_CAST  (r3 I:java.lang.CharSequence) = (java.lang.CharSequence) (r3 I:?[OBJECT, ARRAY]) \l0x0028: INVOKE  (r9 I:int) = (r3 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l0x002c: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x002d|0x002d: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x002f|0x002f: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0031|0x0031: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|0x0032: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0039 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|0x0034: INVOKE  (r9 I:java.util.List) =  kotlin.collections.CollectionsKt.emptyList():java.util.List type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0039|0x0039: NEW_ARRAY  (r4 I:char[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: char[] \l0x003b: SGET  (r9 I:char) =  java.io.File.separatorChar char \l0x003d: APUT  \l  (r4 I:char[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l  (r9 I:char A[IMMUTABLE_TYPE])\l \l0x003f: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0040: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: CONST  (r7 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0042: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0043: INVOKE  (r9 I:java.util.List) = \l  (r3 I:java.lang.CharSequence)\l  (r4 I:char[])\l  (r5 I:boolean)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:java.lang.Object)\l kotlin.text.StringsKt.split$default(java.lang.CharSequence, char[], boolean, int, int, java.lang.Object):java.util.List type: STATIC \l0x0047: CHECK_CAST  (r9 I:java.lang.Iterable) = (java.lang.Iterable) (r9 I:?[OBJECT, ARRAY]) \l0x0049: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x004b: CONST  (r1 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x004d: INVOKE  (r1 I:int) = (r9 I:java.lang.Iterable), (r1 I:int) kotlin.collections.CollectionsKt.collectionSizeOrDefault(java.lang.Iterable, int):int type: STATIC \l0x0051: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0054: CHECK_CAST  (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:?[OBJECT, ARRAY]) \l0x0056: INVOKE  (r9 I:java.util.Iterator) = (r9 I:java.lang.Iterable) java.lang.Iterable.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x005a|0x005a: INVOKE  (r1 I:boolean) = (r9 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x005e|0x005e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x006f \l}"];
Node_9 [shape=record,label="{9\:\ 0x0060|0x0060: INVOKE  (r1 I:java.lang.Object) = (r9 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0064: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l0x0066: NEW_INSTANCE  (r3 I:java.io.File) =  java.io.File \l0x0068: INVOKE  (r3 I:java.io.File), (r1 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l0x006b: INVOKE  (r0 I:java.util.Collection), (r3 I:java.lang.Object) java.util.Collection.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x006f|0x006f: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0070: CHECK_CAST  (r9 I:java.util.List) = (java.util.List) (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0072|0x0072: NEW_INSTANCE  (r0 I:kotlin.io.FilePathComponents) =  kotlin.io.FilePathComponents \l0x0074: NEW_INSTANCE  (r1 I:java.io.File) =  java.io.File \l0x0076: INVOKE  (r1 I:java.io.File), (r2 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l0x0079: INVOKE  \l  (r0 I:kotlin.io.FilePathComponents)\l  (r1 I:java.io.File)\l  (r9 I:java.util.List)\l kotlin.io.FilePathComponents.\<init\>(java.io.File, java.util.List):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x007c|0x007c: RETURN  (r0 I:kotlin.io.FilePathComponents) \l}"];
MethodNode[shape=record,label="{public static final kotlin.io.FilePathComponents kotlin.io.FilesKt__FilePathComponentsKt.toComponents((r9 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

