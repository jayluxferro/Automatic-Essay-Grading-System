digraph "CFG forkotlin.io.TextStreamsKt.readBytes(Ljava\/net\/URL;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r5 I:java.io.InputStream) = (r5 I:java.net.URL) java.net.URL.openStream():java.io.InputStream type: VIRTUAL \l0x0009: CHECK_CAST  (r5 I:java.io.Closeable) = (java.io.Closeable) (r5 I:?[OBJECT, ARRAY]) \l0x000b: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x000d: CHECK_CAST  (r1 I:java.lang.Throwable) = (java.lang.Throwable) (r1 I:?[OBJECT, ARRAY]) \l0x000f: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|SYNTHETIC\lSplitter:B:1:0x0010\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0010\l|0x0010: CHECK_CAST  (r2 I:java.io.InputStream) = (java.io.InputStream) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x0023 \}, TRY_ENTER]\l0x0012: CONST_STR  (r3 I:java.lang.String) =  \"it\" A[Catch:\{ Throwable \-\> 0x0023 \}]\l0x0014: INVOKE  (r2 I:java.lang.Object), (r3 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC A[Catch:\{ Throwable \-\> 0x0023 \}]\l0x0017: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x0023 \}]\l0x0018: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Throwable \-\> 0x0023 \}]\l0x0019: INVOKE  (r0 I:byte[]) = \l  (r2 I:java.io.InputStream)\l  (r3 I:int)\l  (r4 I:int)\l  (r0 I:java.lang.Object)\l kotlin.io.ByteStreamsKt.readBytes$default(java.io.InputStream, int, int, java.lang.Object):byte[] type: STATIC A[Catch:\{ Throwable \-\> 0x0023 \}]\l0x001c: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: INVOKE  (r5 I:java.io.Closeable), (r1 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: RETURN  (r0 I:byte[]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|ExcHandler: all null\lSplitter:B:9:0x0025\l|0x0021: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|ExcHandler: Throwable null\lSplitter:B:1:0x0010\l|0x0023: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|SYNTHETIC\lSplitter:B:9:0x0025\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0025\l|0x0025: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0021 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: INVOKE  (r5 I:java.io.Closeable), (r1 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final byte[] kotlin.io.TextStreamsKt.readBytes((r5 I:java.net.URL A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_5;
Node_11 -> Node_12;
}

