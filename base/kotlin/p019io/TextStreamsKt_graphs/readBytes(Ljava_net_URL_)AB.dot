digraph "CFG forkotlin.io.TextStreamsKt.readBytes(Ljava\/net\/URL;)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"$receiver\")\ljava.io.Closeable r5 = r5.openStream()\ljava.lang.Throwable r1 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|SYNTHETIC\lSplitter:B:1:0x0010\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Throwable \-\> 0x0023, all \-\> 0x0021 \}\lSplitter:B:1:0x0010\l|java.io.InputStream r2 = (java.io.InputStream) r5     \/\/ Catch:\{ Throwable \-\> 0x0023, all \-\> 0x0021 \}\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r2, \"it\")     \/\/ Catch:\{ Throwable \-\> 0x0023, all \-\> 0x0021 \}\lbyte[] r0 = kotlin.p019io.ByteStreamsKt.readBytes$default(r2, 0, 1, (java.lang.Object) null)     \/\/ Catch:\{ Throwable \-\> 0x0023, all \-\> 0x0021 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|kotlin.p019io.CloseableKt.closeFinally(r5, r1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|RETURN\l|return r0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|ExcHandler: all (r0v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:8:0x0025\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|ExcHandler: Throwable (r0v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0010\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|r1 = r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|SYNTHETIC\lSplitter:B:8:0x0025\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ Throwable \-\> 0x0023, all \-\> 0x0021 \}\lSplitter:B:8:0x0025\l|throw r1     \/\/ Catch:\{ Throwable \-\> 0x0023, all \-\> 0x0021 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|kotlin.p019io.CloseableKt.closeFinally(r5, r1)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|throw r0\l}"];
MethodNode[shape=record,label="{public static final byte[] kotlin.io.TextStreamsKt.readBytes((r5v0 java.net.URL A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_5;
Node_9 -> Node_5;
Node_10 -> Node_11;
}

