digraph "CFG forkotlin.io.FilesKt__FileTreeWalkKt.walk$default(Ljava\/io\/File;Lkotlin\/io\/FileWalkDirection;ILjava\/lang\/Object;)Lkotlin\/io\/FileTreeWalk;" {
subgraph cluster_Region_475005493 {
label = "R(2:(1:2)|4)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1893439587 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r2 & 1) != 0) goto L_0x0004\l}"];
subgraph cluster_Region_2054667558 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|kotlin.io.FileWalkDirection r1 = kotlin.p019io.FileWalkDirection.TOP_DOWN\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x000a|RETURN\l|return kotlin.p019io.FilesKt.walk(r0, r1)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006|PHI: r1 \l  PHI: (r1v1 kotlin.io.FileWalkDirection) = (r1v0 kotlin.io.FileWalkDirection), (r1v2 kotlin.io.FileWalkDirection) binds: [B:1:0x0002, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public static \/* bridge *\/ \/* synthetic *\/ kotlin.io.FileTreeWalk kotlin.io.FilesKt__FileTreeWalkKt.walk$default((r0v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 kotlin.io.FileWalkDirection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

