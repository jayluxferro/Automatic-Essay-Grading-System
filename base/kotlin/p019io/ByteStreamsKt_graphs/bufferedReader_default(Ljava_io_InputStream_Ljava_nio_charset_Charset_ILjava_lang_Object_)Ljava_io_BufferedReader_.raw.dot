digraph "CFG forkotlin.io.ByteStreamsKt.bufferedReader$default(Ljava\/io\/InputStream;Ljava\/nio\/charset\/Charset;ILjava\/lang\/Object;)Ljava\/io\/BufferedReader;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: SGET  (r1 I:java.nio.charset.Charset) =  kotlin.text.Charsets.UTF_8 java.nio.charset.Charset \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: NEW_INSTANCE  (r2 I:java.io.InputStreamReader) =  java.io.InputStreamReader \l0x0008: INVOKE  \l  (r2 I:java.io.InputStreamReader)\l  (r0 I:java.io.InputStream)\l  (r1 I:java.nio.charset.Charset)\l java.io.InputStreamReader.\<init\>(java.io.InputStream, java.nio.charset.Charset):void type: DIRECT \l0x000b: CHECK_CAST  (r2 I:java.io.Reader) = (java.io.Reader) (r2 I:?[OBJECT, ARRAY]) \l0x000d: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l \l0x000f: INSTANCE_OF  (r1 I:boolean) = (r2 I:?[OBJECT, ARRAY]) java.io.BufferedReader \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0017 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: CHECK_CAST  (r2 I:java.io.BufferedReader) = (java.io.BufferedReader) (r2 I:?[OBJECT, ARRAY]) \l0x0015: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: NEW_INSTANCE  (r1 I:java.io.BufferedReader) =  java.io.BufferedReader \l0x0019: INVOKE  \l  (r1 I:java.io.BufferedReader)\l  (r2 I:java.io.Reader)\l  (r0 I:int)\l java.io.BufferedReader.\<init\>(java.io.Reader, int):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: RETURN  (r1 I:java.io.BufferedReader) \l}"];
MethodNode[shape=record,label="{static \/* bridge *\/ \/* synthetic *\/ java.io.BufferedReader kotlin.io.ByteStreamsKt.bufferedReader$default((r0 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.internal.InlineOnly, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

