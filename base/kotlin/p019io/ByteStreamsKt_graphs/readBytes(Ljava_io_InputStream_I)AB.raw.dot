digraph "CFG forkotlin.io.ByteStreamsKt.readBytes(Ljava\/io\/InputStream;I)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: NEW_INSTANCE  (r0 I:java.io.ByteArrayOutputStream) =  java.io.ByteArrayOutputStream \l0x0007: INVOKE  (r1 I:int) = (r4 I:java.io.InputStream) java.io.InputStream.available():int type: VIRTUAL \l0x000b: INVOKE  (r5 I:int) = (r5 I:int), (r1 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x000f: INVOKE  (r0 I:java.io.ByteArrayOutputStream), (r5 I:int) java.io.ByteArrayOutputStream.\<init\>(int):void type: DIRECT \l0x0012: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0013: CHECK_CAST  (r5 I:java.io.OutputStream) = (java.io.OutputStream) (r5 I:?[OBJECT, ARRAY]) \l0x0015: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0017: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: INVOKE  \l  (r4 I:java.io.InputStream)\l  (r5 I:java.io.OutputStream)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:java.lang.Object)\l kotlin.io.ByteStreamsKt.copyTo$default(java.io.InputStream, java.io.OutputStream, int, int, java.lang.Object):long type: STATIC \l0x001b: INVOKE  (r4 I:byte[]) = (r0 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL \l0x001f: CONST_STR  (r5 I:java.lang.String) =  \"buffer.toByteArray()\" \l0x0021: INVOKE  (r4 I:java.lang.Object), (r5 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0024|0x0024: RETURN  (r4 I:byte[]) \l}"];
MethodNode[shape=record,label="{public static final byte[] kotlin.io.ByteStreamsKt.readBytes((r4 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

