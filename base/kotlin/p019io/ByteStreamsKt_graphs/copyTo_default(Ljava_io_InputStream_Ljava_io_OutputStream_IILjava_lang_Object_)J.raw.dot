digraph "CFG forkotlin.io.ByteStreamsKt.copyTo$default(Ljava\/io\/InputStream;Ljava\/io\/OutputStream;IILjava\/lang\/Object;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r0 I:long) = \l  (r0 I:java.io.InputStream)\l  (r1 I:java.io.OutputStream)\l  (r2 I:int)\l kotlin.io.ByteStreamsKt.copyTo(java.io.InputStream, java.io.OutputStream, int):long type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{public static \/* bridge *\/ \/* synthetic *\/ long kotlin.io.ByteStreamsKt.copyTo$default((r0 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

