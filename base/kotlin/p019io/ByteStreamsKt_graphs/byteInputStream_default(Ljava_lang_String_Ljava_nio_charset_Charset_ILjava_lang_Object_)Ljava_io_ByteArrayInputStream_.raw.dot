digraph "CFG forkotlin.io.ByteStreamsKt.byteInputStream$default(Ljava\/lang\/String;Ljava\/nio\/charset\/Charset;ILjava\/lang\/Object;)Ljava\/io\/ByteArrayInputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: SGET  (r1 I:java.nio.charset.Charset) =  kotlin.text.Charsets.UTF_8 java.nio.charset.Charset \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: INVOKE  (r0 I:byte[]) = (r0 I:java.lang.String), (r1 I:java.nio.charset.Charset) java.lang.String.getBytes(java.nio.charset.Charset):byte[] type: VIRTUAL \l0x000c: CONST_STR  (r1 I:java.lang.String) =  \"(this as java.lang.String).getBytes(charset)\" \l0x000e: INVOKE  (r0 I:java.lang.Object), (r1 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0011: NEW_INSTANCE  (r1 I:java.io.ByteArrayInputStream) =  java.io.ByteArrayInputStream \l0x0013: INVOKE  (r1 I:java.io.ByteArrayInputStream), (r0 I:byte[]) java.io.ByteArrayInputStream.\<init\>(byte[]):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: RETURN  (r1 I:java.io.ByteArrayInputStream) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: NEW_INSTANCE  (r0 I:kotlin.TypeCastException) =  kotlin.TypeCastException \l0x0019: CONST_STR  (r1 I:java.lang.String) =  \"null cannot be cast to non\-null type java.lang.String\" \l0x001b: INVOKE  (r0 I:kotlin.TypeCastException), (r1 I:java.lang.String) kotlin.TypeCastException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{static \/* bridge *\/ \/* synthetic *\/ java.io.ByteArrayInputStream kotlin.io.ByteStreamsKt.byteInputStream$default((r0 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.nio.charset.Charset A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.internal.InlineOnly, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

