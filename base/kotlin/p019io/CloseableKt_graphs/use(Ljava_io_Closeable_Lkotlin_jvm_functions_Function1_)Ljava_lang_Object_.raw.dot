digraph "CFG forkotlin.io.CloseableKt.use(Ljava\/io\/Closeable;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CHECK_CAST  (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:?[OBJECT, ARRAY]) \l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0005\l|0x0005: INVOKE  (r4 I:java.lang.Object) = \l  (r4 I:kotlin.jvm.functions.Function1)\l  (r3 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ Throwable \-\> 0x0022 \}, TRY_ENTER]\l0x0008: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r2 I:int) kotlin.jvm.internal.InlineMarker.finallyStart(int):void type: STATIC \l0x000c: INVOKE  (r1 I:boolean) = (r2 I:int), (r2 I:int), (r1 I:int) kotlin.internal.PlatformImplementationsKt.apiVersionIsAtLeast(int, int, int):boolean type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0016 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: INVOKE  (r3 I:java.io.Closeable), (r0 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0019 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: INVOKE  (r3 I:java.io.Closeable) java.io.Closeable.close():void type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: INVOKE  (r2 I:int) kotlin.jvm.internal.InlineMarker.finallyEnd(int):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: RETURN  (r4 I:R) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|ExcHandler: all null\lSplitter:B:14:0x0023\l|0x0020: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|ExcHandler: Throwable null\lSplitter:B:1:0x0005\l|0x0022: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|SYNTHETIC\lSplitter:B:14:0x0023\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x0023\l|0x0023: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0020 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|0x0024: INVOKE  (r2 I:int) kotlin.jvm.internal.InlineMarker.finallyStart(int):void type: STATIC \l0x0027: INVOKE  (r1 I:boolean) = (r2 I:int), (r2 I:int), (r1 I:int) kotlin.internal.PlatformImplementationsKt.apiVersionIsAtLeast(int, int, int):boolean type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|0x002b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0039 \l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|0x002d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x003c \l}"];
Node_19 [shape=record,label="{19\:\ 0x002f|0x002f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0035 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0031|0x0031: INVOKE  (r3 I:java.io.Closeable) java.io.Closeable.close():void type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|SYNTHETIC\lSplitter:B:21:0x0035\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x0035\l|0x0035: INVOKE  (r3 I:java.io.Closeable) java.io.Closeable.close():void type: INTERFACE A[Catch:\{ Throwable \-\> 0x003c \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0039|0x0039: INVOKE  (r3 I:java.io.Closeable), (r0 I:java.lang.Throwable) kotlin.io.CloseableKt.closeFinally(java.io.Closeable, java.lang.Throwable):void type: STATIC \l}"];
Node_25 [shape=record,label="{25\:\ 0x003c|0x003c: INVOKE  (r2 I:int) kotlin.jvm.internal.InlineMarker.finallyEnd(int):void type: STATIC \l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lExcHandler: Throwable null\lSplitter:B:21:0x0035\l}"];
Node_27 [shape=record,label="{27\:\ 0x003f|0x003f: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final R kotlin.io.CloseableKt.use((r3 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function1\<? super T, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Ljava\/io\/Closeable;, R:, Ljava\/lang\/Object;, \>(TT;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;+TR;\>;)TR;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_8;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_11;
Node_15 -> Node_11;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_21 -> Node_26;
Node_22 -> Node_26;
Node_22 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_26 -> Node_25;
}

