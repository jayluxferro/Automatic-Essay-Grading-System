digraph "CFG forkotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.step()Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.failed boolean \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0058 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:java.io.File[]) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileList java.io.File[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0058 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.this$0 kotlin.io.FileTreeWalk$FileTreeWalkIterator \l0x000c: IGET  (r0 I:kotlin.io.FileTreeWalk) = (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) kotlin.io.FileTreeWalk.FileTreeWalkIterator.this$0 kotlin.io.FileTreeWalk \l0x000e: INVOKE  (r0 I:kotlin.jvm.functions.Function1) = (r0 I:kotlin.io.FileTreeWalk) kotlin.io.FileTreeWalk.access$getOnEnter$p(kotlin.io.FileTreeWalk):kotlin.jvm.functions.Function1 type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: INVOKE  (r3 I:java.io.File) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File type: VIRTUAL \l0x0018: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlin.jvm.functions.Function1)\l  (r3 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x001c: CHECK_CAST  (r0 I:java.lang.Boolean) = (java.lang.Boolean) (r0 I:?[OBJECT, ARRAY]) \l0x001e: INVOKE  (r0 I:boolean) = (r0 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0025 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: RETURN  (r1 I:java.io.File) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: INVOKE  (r0 I:java.io.File) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File type: VIRTUAL \l0x0029: INVOKE  (r0 I:java.io.File[]) = (r0 I:java.io.File) java.io.File.listFiles():java.io.File[] type: VIRTUAL \l0x002d: IPUT  \l  (r0 I:java.io.File[])\l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileList java.io.File[] \l0x002f: IGET  (r0 I:java.io.File[]) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileList java.io.File[] \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0058 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: IGET  (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.this$0 kotlin.io.FileTreeWalk$FileTreeWalkIterator \l0x0035: IGET  (r0 I:kotlin.io.FileTreeWalk) = (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) kotlin.io.FileTreeWalk.FileTreeWalkIterator.this$0 kotlin.io.FileTreeWalk \l0x0037: INVOKE  (r0 I:kotlin.jvm.functions.Function2) = (r0 I:kotlin.io.FileTreeWalk) kotlin.io.FileTreeWalk.access$getOnFail$p(kotlin.io.FileTreeWalk):kotlin.jvm.functions.Function2 type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0056 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: INVOKE  (r3 I:java.io.File) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File type: VIRTUAL \l0x0041: NEW_INSTANCE  (r10 I:kotlin.io.AccessDeniedException) =  kotlin.io.AccessDeniedException \l0x0043: INVOKE  (r5 I:java.io.File) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File type: VIRTUAL \l0x0047: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0048: CONST_STR  (r7 I:java.lang.String) =  \"Cannot list files in a directory\" \l0x004a: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x004b: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004c: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x004d: INVOKE  \l  (r4 I:kotlin.io.AccessDeniedException)\l  (r5 I:java.io.File)\l  (r6 I:java.io.File)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r9 I:kotlin.jvm.internal.DefaultConstructorMarker)\l kotlin.io.AccessDeniedException.\<init\>(java.io.File, java.io.File, java.lang.String, int, kotlin.jvm.internal.DefaultConstructorMarker):void type: DIRECT \l0x0050: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlin.jvm.functions.Function2)\l  (r3 I:java.lang.Object)\l  (r10 I:java.lang.Object)\l kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0054: CHECK_CAST  (r0 I:kotlin.Unit) = (kotlin.Unit) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0056|0x0056: IPUT  \l  (r2 I:boolean)\l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.failed boolean \l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|0x0058: IGET  (r0 I:java.io.File[]) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileList java.io.File[] \l}"];
Node_16 [shape=record,label="{16\:\ 0x005a|0x005a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0078 \l}"];
Node_17 [shape=record,label="{17\:\ 0x005c|0x005c: IGET  (r0 I:int) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileIndex int \l0x005e: IGET  (r3 I:java.io.File[]) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileList java.io.File[] \l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|0x0060: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0065 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|0x0062: INVOKE   kotlin.jvm.internal.Intrinsics.throwNpe():void type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x0065|0x0065: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0066|0x0066: IF  (r0 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:27:0x0078 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0068|0x0068: IGET  (r0 I:java.io.File[]) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileList java.io.File[] \l}"];
Node_23 [shape=record,label="{23\:\ 0x006a|0x006a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x006f \l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|0x006c: INVOKE   kotlin.jvm.internal.Intrinsics.throwNpe():void type: STATIC \l}"];
Node_25 [shape=record,label="{25\:\ 0x006f|0x006f: IGET  (r1 I:int) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileIndex int \l0x0071: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x0073: IPUT  \l  (r2 I:int)\l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.fileIndex int \l0x0075: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0077|0x0077: RETURN  (r0 I:java.io.File) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0078|0x0078: IGET  (r0 I:boolean) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.rootVisited boolean \l}"];
Node_28 [shape=record,label="{28\:\ 0x007a|0x007a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0083 \l}"];
Node_29 [shape=record,label="{29\:\ 0x007c|0x007c: IPUT  \l  (r2 I:boolean)\l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.rootVisited boolean \l0x007e: INVOKE  (r0 I:java.io.File) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x0082|0x0082: RETURN  (r0 I:java.io.File) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0083|0x0083: IGET  (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.this$0 kotlin.io.FileTreeWalk$FileTreeWalkIterator \l0x0085: IGET  (r0 I:kotlin.io.FileTreeWalk) = (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) kotlin.io.FileTreeWalk.FileTreeWalkIterator.this$0 kotlin.io.FileTreeWalk \l0x0087: INVOKE  (r0 I:kotlin.jvm.functions.Function1) = (r0 I:kotlin.io.FileTreeWalk) kotlin.io.FileTreeWalk.access$getOnLeave$p(kotlin.io.FileTreeWalk):kotlin.jvm.functions.Function1 type: STATIC \l}"];
Node_32 [shape=record,label="{32\:\ 0x008b|0x008b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x0097 \l}"];
Node_33 [shape=record,label="{33\:\ 0x008d|0x008d: INVOKE  (r2 I:java.io.File) = \l  (r11 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.getRoot():java.io.File type: VIRTUAL \l0x0091: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:kotlin.jvm.functions.Function1)\l  (r2 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x0095: CHECK_CAST  (r0 I:kotlin.Unit) = (kotlin.Unit) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0097|0x0097: RETURN  (r1 I:java.io.File) \l}"];
MethodNode[shape=record,label="{public java.io.File kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.step((r11 'this' I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_27;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
}

