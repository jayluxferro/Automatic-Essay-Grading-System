digraph "CFG forkotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.step()Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r11.failed != false) goto L_0x0058\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r11.fileList != null) goto L_0x0058\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|kotlin.jvm.functions.Function1 r0 = kotlin.p019io.FileTreeWalk.access$getOnEnter$p(r11.this$0.this$0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r0 == null) goto L_0x0025\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014}"];
Node_7 [shape=record,label="{7\:\ 0x0022|if (((java.lang.Boolean) r0.invoke(getRoot())).booleanValue() != false) goto L_0x0025\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|RETURN\l|return null\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|r11.fileList = getRoot().listFiles()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|if (r11.fileList != null) goto L_0x0058\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|kotlin.jvm.functions.Function2 r0 = kotlin.p019io.FileTreeWalk.access$getOnFail$p(r11.this$0.this$0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|if (r0 == null) goto L_0x0056\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|kotlin.Unit r0 = (kotlin.Unit) r0.invoke(getRoot(), new kotlin.p019io.AccessDeniedException(getRoot(), (java.io.File) null, \"Cannot list files in a directory\", 2, (kotlin.jvm.internal.DefaultConstructorMarker) null))\l}"];
Node_14 [shape=record,label="{14\:\ 0x0056|r11.failed = true\l}"];
Node_15 [shape=record,label="{15\:\ 0x0058}"];
Node_16 [shape=record,label="{16\:\ 0x005a|if (r11.fileList == null) goto L_0x0078\l}"];
Node_17 [shape=record,label="{17\:\ 0x005c|int r0 = r11.fileIndex\ljava.io.File[] r3 = r11.fileList\l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|if (r3 != null) goto L_0x0065\l}"];
Node_19 [shape=record,label="{19\:\ 0x0062|kotlin.jvm.internal.Intrinsics.throwNpe()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0065}"];
Node_21 [shape=record,label="{21\:\ 0x0066|if (r0 \>= r3.length) goto L_0x0078\l}"];
Node_22 [shape=record,label="{22\:\ 0x0068|java.io.File[] r0 = r11.fileList\l}"];
Node_23 [shape=record,label="{23\:\ 0x006a|if (r0 != null) goto L_0x006f\l}"];
Node_24 [shape=record,label="{24\:\ 0x006c|kotlin.jvm.internal.Intrinsics.throwNpe()\l}"];
Node_25 [shape=record,label="{25\:\ 0x006f|int r1 = r11.fileIndex\lr11.fileIndex = r1 + 1\l}"];
Node_26 [shape=record,label="{26\:\ 0x0077|RETURN\l|return r0[r1]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0078}"];
Node_28 [shape=record,label="{28\:\ 0x007a|if (r11.rootVisited != false) goto L_0x0083\l}"];
Node_29 [shape=record,label="{29\:\ 0x007c|r11.rootVisited = true\l}"];
Node_30 [shape=record,label="{30\:\ 0x0082|RETURN\l|return getRoot()\l}"];
Node_31 [shape=record,label="{31\:\ 0x0083|kotlin.jvm.functions.Function1 r0 = kotlin.p019io.FileTreeWalk.access$getOnLeave$p(r11.this$0.this$0)\l}"];
Node_32 [shape=record,label="{32\:\ 0x008b|if (r0 == null) goto L_0x0097\l}"];
Node_33 [shape=record,label="{33\:\ 0x008d|kotlin.Unit r0 = (kotlin.Unit) r0.invoke(getRoot())\l}"];
Node_34 [shape=record,label="{34\:\ 0x0097|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public java.io.File kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.step((r11v0 'this' kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_27;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_34;
}

