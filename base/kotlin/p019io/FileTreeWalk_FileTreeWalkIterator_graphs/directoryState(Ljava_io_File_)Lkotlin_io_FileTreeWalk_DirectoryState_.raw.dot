digraph "CFG forkotlin.io.FileTreeWalk.FileTreeWalkIterator.directoryState(Ljava\/io\/File;)Lkotlin\/io\/FileTreeWalk$DirectoryState;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:kotlin.io.FileTreeWalk) = (r2 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator) kotlin.io.FileTreeWalk.FileTreeWalkIterator.this$0 kotlin.io.FileTreeWalk \l0x0002: INVOKE  (r0 I:kotlin.io.FileWalkDirection) = (r0 I:kotlin.io.FileTreeWalk) kotlin.io.FileTreeWalk.access$getDirection$p(kotlin.io.FileTreeWalk):kotlin.io.FileWalkDirection type: STATIC \l0x0006: SGET  (r1 I:int[]) =  kotlin.io.FileTreeWalk.FileTreeWalkIterator.WhenMappings.$EnumSwitchMapping$0 int[] \l0x0008: INVOKE  (r0 I:int) = (r0 I:kotlin.io.FileWalkDirection) kotlin.io.FileWalkDirection.ordinal():int type: VIRTUAL \l0x000c: AGET  (r0 I:?[int, float]) = (r1 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2] t:[0x001f, 0x0017] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: NEW_INSTANCE  (r3 I:kotlin.NoWhenBranchMatchedException) =  kotlin.NoWhenBranchMatchedException \l0x0013: INVOKE  (r3 I:kotlin.NoWhenBranchMatchedException) kotlin.NoWhenBranchMatchedException.\<init\>():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: NEW_INSTANCE  (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState) =  kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState \l0x0019: INVOKE  \l  (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$BottomUpDirectoryState)\l  (r2 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator)\l  (r3 I:java.io.File)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.BottomUpDirectoryState.\<init\>(kotlin.io.FileTreeWalk$FileTreeWalkIterator, java.io.File):void type: DIRECT \l0x001c: CHECK_CAST  (r0 I:kotlin.io.FileTreeWalk$DirectoryState) = (kotlin.io.FileTreeWalk$DirectoryState) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: NEW_INSTANCE  (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState) =  kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState \l0x0021: INVOKE  \l  (r0 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator$TopDownDirectoryState)\l  (r2 I:kotlin.io.FileTreeWalk$FileTreeWalkIterator)\l  (r3 I:java.io.File)\l kotlin.io.FileTreeWalk.FileTreeWalkIterator.TopDownDirectoryState.\<init\>(kotlin.io.FileTreeWalk$FileTreeWalkIterator, java.io.File):void type: DIRECT \l0x0024: CHECK_CAST  (r0 I:kotlin.io.FileTreeWalk$DirectoryState) = (kotlin.io.FileTreeWalk$DirectoryState) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: RETURN  (r0 I:kotlin.io.FileTreeWalk$DirectoryState) \l}"];
MethodNode[shape=record,label="{private final kotlin.io.FileTreeWalk$DirectoryState kotlin.io.FileTreeWalk.FileTreeWalkIterator.directoryState((r2 'this' I:kotlin.io.FileTreeWalk$FileTreeWalkIterator A[IMMUTABLE_TYPE, THIS]), (r3 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_4 -> Node_6;
Node_5 -> Node_6;
}

