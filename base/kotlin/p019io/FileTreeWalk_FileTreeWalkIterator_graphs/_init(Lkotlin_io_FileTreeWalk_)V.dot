digraph "CFG forkotlin.io.FileTreeWalk.FileTreeWalkIterator.\<init\>(Lkotlin\/io\/FileTreeWalk;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.this$0 = r3\lr2.state = new java.util.Stack\<\>()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|if (kotlin.p019io.FileTreeWalk.access$getStart$p(r3).isDirectory() == false) goto L_0x0024\l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|r2.state.push(directoryState(kotlin.p019io.FileTreeWalk.access$getStart$p(r3)))\l}"];
Node_3 [shape=record,label="{3\:\ 0x0024}"];
Node_4 [shape=record,label="{4\:\ 0x002c|if (kotlin.p019io.FileTreeWalk.access$getStart$p(r3).isFile() == false) goto L_0x003d\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|r2.state.push(new kotlin.p019io.FileTreeWalk.FileTreeWalkIterator.SingleFileState(r2, kotlin.p019io.FileTreeWalk.access$getStart$p(r3)))\l}"];
Node_6 [shape=record,label="{6\:\ 0x003d|done()\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void kotlin.io.FileTreeWalk.FileTreeWalkIterator.\<init\>((r2v0 'this' kotlin.io.FileTreeWalk$FileTreeWalkIterator A[IMMUTABLE_TYPE, THIS]), (r3v0 kotlin.io.FileTreeWalk A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_7;
}

