digraph "CFG forkotlin.io.FileTreeWalk.FileTreeWalkIterator.\<init\>(Lkotlin\/io\/FileTreeWalk;)V" {
subgraph cluster_Region_1239775535 {
label = "R(2:0|(1:2)(1:(1:5)(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_IfRegion_202986650 {
label = "IF [B:1:0x0014] THEN: R(1:2) ELSE: R(1:(1:5)(1:6))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0014|if (kotlin.p019io.FileTreeWalk.this.start.isDirectory() == true) goto L_0x0016\l}"];
subgraph cluster_Region_1903565491 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0016|r2.state.push(directoryState(kotlin.p019io.FileTreeWalk.this.start))\l}"];
}
subgraph cluster_Region_1191272567 {
label = "R(1:(1:5)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_625956281 {
label = "IF [B:4:0x002c] THEN: R(1:5) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x002c|if (kotlin.p019io.FileTreeWalk.this.start.isFile() == true) goto L_0x002e\l}"];
subgraph cluster_Region_1672771598 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002e|r2.state.push(new kotlin.p019io.FileTreeWalk.FileTreeWalkIterator.SingleFileState(r2, kotlin.p019io.FileTreeWalk.this.start))\l}"];
}
subgraph cluster_Region_584467785 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x003d|done()\l}"];
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0024}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void kotlin.io.FileTreeWalk.FileTreeWalkIterator.\<init\>((r2v0 'this' kotlin.io.FileTreeWalk$FileTreeWalkIterator A[IMMUTABLE_TYPE, THIS]), (r3v0 kotlin.io.FileTreeWalk A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | SKIP_FIRST_ARG\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[()V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_3 -> Node_4;
}

