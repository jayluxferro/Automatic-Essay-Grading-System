digraph "CFG forkotlin.io.FileTreeWalk.\<init\>(Ljava\/io\/File;Lkotlin\/io\/FileWalkDirection;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function2;IILkotlin\/jvm\/internal\/DefaultConstructorMarker;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r15 I:?[int, boolean, short, byte, char]) = (r14 I:?[int, boolean, short, byte, char]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: SGET  (r9 I:kotlin.io.FileWalkDirection) =  kotlin.io.FileWalkDirection.TOP_DOWN kotlin.io.FileWalkDirection \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0007: ARITH  (r9 I:?[int, boolean, short, byte, char]) = (r14 I:?[int, boolean, short, byte, char]) & (32 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: CONST  (r13 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l0x000e: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0014: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0015: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0016: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0017: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  \l  (r0 I:kotlin.io.FileTreeWalk)\l  (r1 I:java.io.File)\l  (r2 I:kotlin.io.FileWalkDirection)\l  (r3 I:kotlin.jvm.functions.Function1)\l  (r4 I:kotlin.jvm.functions.Function1)\l  (r5 I:kotlin.jvm.functions.Function2)\l  (r6 I:int)\l kotlin.io.FileTreeWalk.\<init\>(java.io.File, kotlin.io.FileWalkDirection, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function2, int):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: RETURN   \l}"];
MethodNode[shape=record,label="{\/* synthetic *\/ void kotlin.io.FileTreeWalk.\<init\>((r7 'this' I:kotlin.io.FileTreeWalk A[IMMUTABLE_TYPE, THIS]), (r8 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:kotlin.io.FileWalkDirection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:kotlin.jvm.functions.Function1 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:kotlin.jvm.functions.Function2 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:kotlin.jvm.internal.DefaultConstructorMarker A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

