digraph "CFG forkotlin.io.ConsoleKt.readLine(Ljava\/io\/InputStream;Ljava\/nio\/charset\/CharsetDecoder;)Ljava\/lang\/String;" {
subgraph cluster_Region_1224341623 {
label = "R(2:0|(2:(2:5|(2:(1:7)|(4:(3:8|(1:(1:31)(1:(1:14)))|15)|17|18|28)))|(1:30)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r7, \"inputStream\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, \"decoder\")\l}"];
subgraph cluster_Region_2110196319 {
label = "R(2:(2:5|(2:(1:7)|(4:(3:8|(1:(1:31)(1:(1:14)))|15)|17|18|28)))|(1:30))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1715280499 {
label = "IF [B:4:0x0018] THEN: R(2:5|(2:(1:7)|(4:(3:8|(1:(1:31)(1:(1:14)))|15)|17|18|28))) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|PHI: r0 \l  PHI: (r0v4 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r8.maxCharsPerByte() \<= ((float) 1)) == true) goto L_0x001a\l}"];
subgraph cluster_Region_361056393 {
label = "R(2:5|(2:(1:7)|(4:(3:8|(1:(1:31)(1:(1:14)))|15)|17|18|28)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001a|java.nio.ByteBuffer java.nio.ByteBuffer r0 = java.nio.ByteBuffer.allocate(32)\ljava.nio.CharBuffer java.nio.CharBuffer r2 = java.nio.CharBuffer.allocate(2)\ljava.lang.StringBuilder java.lang.StringBuilder r4 = new java.lang.StringBuilder()\lint int r5 = r7.read()\l}"];
subgraph cluster_Region_1726098637 {
label = "R(2:(1:7)|(4:(3:8|(1:(1:31)(1:(1:14)))|15)|17|18|28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1770453221 {
label = "IF [B:6:0x002f] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002f|if (r5 == \-1) goto L_0x0031\l}"];
subgraph cluster_Region_1642023462 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0031|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_191878343 {
label = "R(4:(3:8|(1:(1:31)(1:(1:14)))|15)|17|18|28)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1762770657 {
label = "LOOP:0: (3:8|(1:(1:31)(1:(1:14)))|15)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x005f|LOOP_END\lLOOP:0: B:8:0x0033\-\>B:16:0x005f\l|if (r5 != \-1) goto L_0x0033\l}"];
subgraph cluster_Region_859054446 {
label = "R(3:8|(1:(1:31)(1:(1:14)))|15)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0033|LOOP_START\lPHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v6 int) binds: [B:6:0x002f, B:16:0x005f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:8:0x0033\-\>B:16:0x005f\l|r0.put((byte) r5)\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r0, \"byteBuffer\")\lkotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(r2, \"charBuffer\")\l}"];
subgraph cluster_IfRegion_2057678923 {
label = "IF [B:9:0x0045] THEN: R(1:(1:31)(1:(1:14))) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0045|if (tryDecode(r8, r0, r2, false) == true) goto L_0x0047\l}"];
subgraph cluster_Region_604975536 {
label = "R(1:(1:31)(1:(1:14)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_873530403 {
label = "IF [B:11:0x004b] THEN: R(1:31) ELSE: R(1:(1:14))";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x004b|if (containsLineSeparator(r2) != false) goto L_0x0061\l}"];
subgraph cluster_Region_720325056 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0061|SYNTHETIC\lEDGE_INSN: B:31:0x0061\-\>B:17:0x0061 ?: BREAK  \l|break\l}"];
}
subgraph cluster_Region_1570544660 {
label = "R(1:(1:14)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_649882782 {
label = "IF [B:13:0x0052] THEN: R(1:14) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0052|if (r2.hasRemaining() == false) goto L_0x0054\l}"];
subgraph cluster_Region_1900853226 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0054|r4.append(dequeue(r2))\l}"];
}
}
}
}
}
}
Node_15 [shape=record,label="{15\:\ 0x005b|int r5 = r7.read()\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0061|EDGE_INSN: B:31:0x0061\-\>B:17:0x0061 ?: BREAK  \l|tryDecode(r8, r0, r2, true)\lr8.reset()\lint int r7 = r2.position()\lchar char r8 = r2.get(0)\lchar char r0 = r2.get(1)\l}"];
subgraph cluster_SwitchRegion_875701746 {
label = "Switch: 2, default: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0075|switch(r7) \{\l    case 1: goto L_0x0088;\l    case 2: goto L_0x0079;\l    default: goto L_0x0078;\l\}\l}"];
subgraph cluster_Region_1175020539 {
label = "R(2:(2:26|1)|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1178307571 {
label = "IF [B:25:0x0088] THEN: R(2:26|1) ELSE: null";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0088|if (r8 != 10) goto L_0x008a\l}"];
subgraph cluster_Region_74489064 {
label = "R(2:26|1)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x008a|r4.append(r8)\l}"];
Node_InsnContainer_458643515 [shape=record,label="{|break\l}"];
}
}
Node_InsnContainer_1260889048 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1927473812 {
label = "R(3:(1:22)|(2:24|1)|1)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_405012993 {
label = "IF [B:20:0x007b, B:21:0x007d] THEN: R(1:22) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x007b|ADDED_TO_REGION\l|if (r8 == 13) goto L_0x007d\l}"];
Node_21 [shape=record,label="{21\:\ 0x007d|ADDED_TO_REGION\l|if (r0 == 10) goto L_0x0082\l}"];
subgraph cluster_Region_956080217 {
label = "R(1:22)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x007f|r4.append(r8)\l}"];
}
}
subgraph cluster_IfRegion_2082881874 {
label = "IF [B:23:0x0082] THEN: R(2:24|1) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0082|if (r0 != 10) goto L_0x0084\l}"];
subgraph cluster_Region_2103567172 {
label = "R(2:24|1)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0084|r4.append(r0)\l}"];
Node_InsnContainer_2147047816 [shape=record,label="{|break\l}"];
}
}
Node_InsnContainer_1447514572 [shape=record,label="{|break\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x0091|RETURN\l|return r4.toString()\l}"];
}
}
}
}
subgraph cluster_Region_537399743 {
label = "R(1:30)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x009f|throw new java.lang.IllegalArgumentException(\"Encodings with multiple chars per byte are not supported\".toString())\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0013}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0015}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0017}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0047}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x004e}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0079}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x008d}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0092}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0061|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.io.ConsoleKt.readLine((r7v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.nio.charset.CharsetDecoder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_4 -> Node_29[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_16 -> Node_8;
Node_16 -> Node_32[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_15[style=dashed];
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_31;
Node_31 -> Node_17;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_25;
Node_18 -> Node_27;
Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_27[style=dashed];
Node_24 -> Node_27;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_19 -> Node_20;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_32 -> Node_17;
}

