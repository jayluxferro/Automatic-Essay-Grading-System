digraph "CFG forkotlin.io.ConsoleKt.tryDecode(Ljava\/nio\/charset\/CharsetDecoder;Ljava\/nio\/ByteBuffer;Ljava\/nio\/CharBuffer;Z)Z" {
subgraph cluster_Region_97768338 {
label = "R(5:0|(1:2)|4|(1:8)(1:9)|10)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r3.position()\lr2.flip()\ljava.nio.charset.CoderResult java.nio.charset.CoderResult r1 = r1.decode(r2, r3, r4)\l}"];
subgraph cluster_IfRegion_1316358553 {
label = "IF [B:1:0x000f] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000f|if (r1.isError() == true) goto L_0x0011\l}"];
subgraph cluster_Region_1863681452 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0011|r1.throwException()\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x0018|boolean r1 = r3.position() \> r0\l}"];
subgraph cluster_IfRegion_1282599401 {
label = "IF [B:7:0x001d] THEN: R(1:8) ELSE: R(1:9)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001d|PHI: r1 \l  PHI: (r1v3 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == true) goto L_0x001f\l}"];
subgraph cluster_Region_1163655520 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001f|r2.clear()\l}"];
}
subgraph cluster_Region_1885068634 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0023|flipBack(r2)\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x0028|RETURN\l|return r1\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0014}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001c}"];
MethodNode[shape=record,label="{private static final boolean kotlin.io.ConsoleKt.tryDecode((r1v0 java.nio.charset.CharsetDecoder A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.nio.ByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.nio.CharBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , , \l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_3 -> Node_4;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

