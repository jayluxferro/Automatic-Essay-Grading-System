digraph "CFG forkotlin.io.FileTreeWalk.DirectoryState.\<init\>(Ljava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"rootDir\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  \l  (r1 I:kotlin.io.FileTreeWalk$WalkState)\l  (r2 I:java.io.File)\l kotlin.io.FileTreeWalk.WalkState.\<init\>(java.io.File):void type: DIRECT \l0x0008: SGET  (r0 I:boolean) =  kotlin._Assertions.ENABLED boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r2 I:boolean) = (r2 I:java.io.File) java.io.File.isDirectory():boolean type: VIRTUAL \l0x0010: SGET  (r0 I:boolean) =  kotlin._Assertions.ENABLED boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0017 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: NEW_INSTANCE  (r2 I:java.lang.AssertionError) =  java.lang.AssertionError \l0x0019: CONST_STR  (r0 I:java.lang.String) =  \"rootDir must be verified to be directory beforehand.\" \l0x001b: INVOKE  (r2 I:java.lang.AssertionError), (r0 I:java.lang.Object) java.lang.AssertionError.\<init\>(java.lang.Object):void type: DIRECT \l0x001e: CHECK_CAST  (r2 I:java.lang.Throwable) = (java.lang.Throwable) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: RETURN   \l}"];
MethodNode[shape=record,label="{public void kotlin.io.FileTreeWalk.DirectoryState.\<init\>((r1 'this' I:kotlin.io.FileTreeWalk$DirectoryState A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_6;
Node_4 -> Node_8[style=dashed];
Node_6 -> Node_7;
}

