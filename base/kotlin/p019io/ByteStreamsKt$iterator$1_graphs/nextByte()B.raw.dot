digraph "CFG forkotlin.io.ByteStreamsKt$iterator$1.nextByte()B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:kotlin.io.ByteStreamsKt$iterator$1) kotlin.io.ByteStreamsKt$iterator$1.prepareNext():void type: DIRECT \l0x0003: IGET  (r0 I:boolean) = (r2 I:kotlin.io.ByteStreamsKt$iterator$1) kotlin.io.ByteStreamsKt$iterator$1.finished boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r0 I:int) = (r2 I:kotlin.io.ByteStreamsKt$iterator$1) kotlin.io.ByteStreamsKt$iterator$1.nextByte int \l0x0009: CAST  (r0 I:byte) = (byte) (r0 I:int) \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: IPUT  (r1 I:boolean), (r2 I:kotlin.io.ByteStreamsKt$iterator$1) kotlin.io.ByteStreamsKt$iterator$1.nextPrepared boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN  (r0 I:byte) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException \l0x0010: CONST_STR  (r1 I:java.lang.String) =  \"Input stream is over.\" \l0x0012: INVOKE  \l  (r0 I:java.util.NoSuchElementException)\l  (r1 I:java.lang.String)\l java.util.NoSuchElementException.\<init\>(java.lang.String):void type: DIRECT \l0x0015: CHECK_CAST  (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public byte kotlin.io.ByteStreamsKt$iterator$1.nextByte((r2 'this' I:kotlin.io.ByteStreamsKt$iterator$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

