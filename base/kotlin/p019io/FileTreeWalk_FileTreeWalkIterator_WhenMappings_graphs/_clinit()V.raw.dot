digraph "CFG forkotlin.io.FileTreeWalk.FileTreeWalkIterator.WhenMappings.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:kotlin.io.FileWalkDirection[]) =  kotlin.io.FileWalkDirection.values():kotlin.io.FileWalkDirection[] type: STATIC \l0x0004: ARRAY_LENGTH  (r0 I:int) = (r0 I:?[]) \l0x0005: NEW_ARRAY  (r0 I:int[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0007: SPUT  (r0 I:int[]) kotlin.io.FileTreeWalk.FileTreeWalkIterator.WhenMappings.$EnumSwitchMapping$0 int[] \l0x0009: SGET  (r0 I:int[]) =  kotlin.io.FileTreeWalk.FileTreeWalkIterator.WhenMappings.$EnumSwitchMapping$0 int[] \l0x000b: SGET  (r1 I:kotlin.io.FileWalkDirection) =  kotlin.io.FileWalkDirection.TOP_DOWN kotlin.io.FileWalkDirection \l0x000d: INVOKE  (r1 I:int) = (r1 I:kotlin.io.FileWalkDirection) kotlin.io.FileWalkDirection.ordinal():int type: VIRTUAL \l0x0011: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0012: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0014: SGET  (r0 I:int[]) =  kotlin.io.FileTreeWalk.FileTreeWalkIterator.WhenMappings.$EnumSwitchMapping$0 int[] \l0x0016: SGET  (r1 I:kotlin.io.FileWalkDirection) =  kotlin.io.FileWalkDirection.BOTTOM_UP kotlin.io.FileWalkDirection \l0x0018: INVOKE  (r1 I:int) = (r1 I:kotlin.io.FileWalkDirection) kotlin.io.FileWalkDirection.ordinal():int type: VIRTUAL \l0x001c: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001d: APUT  \l  (r0 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|0x001f: RETURN   \l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ void kotlin.io.FileTreeWalk.FileTreeWalkIterator.WhenMappings.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

