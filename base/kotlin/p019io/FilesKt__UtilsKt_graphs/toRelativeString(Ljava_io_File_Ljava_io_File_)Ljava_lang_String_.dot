digraph "CFG forkotlin.io.FilesKt__UtilsKt.toRelativeString(Ljava\/io\/File;Ljava\/io\/File;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"base\")\ljava.lang.String r0 = toRelativeStringOrNull$FilesKt__UtilsKt(r3, r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r0 == null) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|RETURN\l|return r0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"this and base files have different roots: \")\lr1.append(r3)\lr1.append(\" and \")\lr1.append(r4)\lr1.append('.')\l}"];
Node_4 [shape=record,label="{4\:\ 0x0036|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public static final java.lang.String kotlin.io.FilesKt__UtilsKt.toRelativeString((r3v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

