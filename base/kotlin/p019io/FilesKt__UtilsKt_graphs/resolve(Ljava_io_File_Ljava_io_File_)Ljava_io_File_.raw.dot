digraph "CFG forkotlin.io.FilesKt__UtilsKt.resolve(Ljava\/io\/File;Ljava\/io\/File;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"relative\" \l0x0007: INVOKE  (r6 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: INVOKE  (r0 I:boolean) = (r6 I:java.io.File) kotlin.io.FilesKt.isRooted(java.io.File):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: RETURN  (r6 I:java.io.File) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: INVOKE  (r5 I:java.lang.String) = (r5 I:java.io.File) java.io.File.toString():java.lang.String type: VIRTUAL \l0x0015: CONST_STR  (r0 I:java.lang.String) =  \"baseName\" \l0x0017: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkExpressionValueIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x001a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x001b: CHECK_CAST  (r0 I:java.lang.CharSequence) = (java.lang.CharSequence) (r0 I:?[OBJECT, ARRAY]) \l0x001d: INVOKE  (r1 I:int) = (r0 I:java.lang.CharSequence) java.lang.CharSequence.length():int type: INTERFACE \l0x0021: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0026 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x004e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: SGET  (r1 I:char) =  java.io.File.separatorChar char \l0x002b: CONST  (r3 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x002c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002d: INVOKE  (r0 I:boolean) = \l  (r0 I:java.lang.CharSequence)\l  (r1 I:char)\l  (r2 I:boolean)\l  (r3 I:int)\l  (r4 I:java.lang.Object)\l kotlin.text.StringsKt.endsWith$default(java.lang.CharSequence, char, boolean, int, java.lang.Object):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0034 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File \l0x0036: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0038: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003b: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003e: SGET  (r5 I:char) =  java.io.File.separatorChar char \l0x0040: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0043: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0046: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004a: INVOKE  (r0 I:java.io.File), (r5 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|0x004e: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File \l0x0050: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0052: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0055: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0058: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x005b: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005f: INVOKE  (r0 I:java.io.File), (r5 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0062|0x0062: RETURN  (r0 I:java.io.File) \l}"];
MethodNode[shape=record,label="{public static final java.io.File kotlin.io.FilesKt__UtilsKt.resolve((r5 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
}

