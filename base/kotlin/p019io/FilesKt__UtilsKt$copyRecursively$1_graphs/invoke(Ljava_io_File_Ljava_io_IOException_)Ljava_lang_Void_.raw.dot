digraph "CFG forkotlin.io.FilesKt__UtilsKt$copyRecursively$1.invoke(Ljava\/io\/File;Ljava\/io\/IOException;)Ljava\/lang\/Void;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"\<anonymous parameter 0\>\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r2 I:java.lang.String) =  \"exception\" \l0x0007: INVOKE  (r3 I:java.lang.Object), (r2 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CHECK_CAST  (r3 I:java.lang.Throwable) = (java.lang.Throwable) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final java.lang.Void kotlin.io.FilesKt__UtilsKt$copyRecursively$1.invoke((r1 'this' I:kotlin.io.FilesKt__UtilsKt$copyRecursively$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.io.IOException A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

