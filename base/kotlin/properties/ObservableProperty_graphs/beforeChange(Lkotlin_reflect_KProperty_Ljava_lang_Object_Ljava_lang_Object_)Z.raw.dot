digraph "CFG forkotlin.properties.ObservableProperty.beforeChange(Lkotlin\/reflect\/KProperty;Ljava\/lang\/Object;Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r2 I:java.lang.String) =  \"property\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r2 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean kotlin.properties.ObservableProperty.beforeChange((r0 'this' I:kotlin.properties.ObservableProperty A[IMMUTABLE_TYPE, THIS]), (r1 I:kotlin.reflect.KProperty\<?\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lkotlin\/reflect\/KProperty\<, *\>;TT;TT;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

