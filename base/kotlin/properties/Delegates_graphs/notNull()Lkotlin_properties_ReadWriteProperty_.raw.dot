digraph "CFG forkotlin.properties.Delegates.notNull()Lkotlin\/properties\/ReadWriteProperty;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:kotlin.properties.NotNullVar) =  kotlin.properties.NotNullVar \l0x0002: INVOKE  (r0 I:kotlin.properties.NotNullVar) kotlin.properties.NotNullVar.\<init\>():void type: DIRECT \l0x0005: CHECK_CAST  (r0 I:kotlin.properties.ReadWriteProperty) = (kotlin.properties.ReadWriteProperty) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: RETURN  \l  (r0 I:kotlin.properties.ReadWriteProperty\<java.lang.Object, T\>)\l \l}"];
MethodNode[shape=record,label="{public final kotlin.properties.ReadWriteProperty\<java.lang.Object, T\> kotlin.properties.Delegates.notNull((r1 'this' I:kotlin.properties.Delegates A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(), Lkotlin\/properties\/ReadWriteProperty\<, Ljava\/lang\/Object;, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

