digraph "CFG forkotlin.sequences.DropSequence$iterator$1.\<init\>(Lkotlin\/sequences\/DropSequence;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r2 I:kotlin.sequences.DropSequence)\l  (r1 I:kotlin.sequences.DropSequence$iterator$1)\l kotlin.sequences.DropSequence$iterator$1.this$0 kotlin.sequences.DropSequence \l0x0002: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r2 I:kotlin.sequences.DropSequence) kotlin.sequences.DropSequence.access$getSequence$p(kotlin.sequences.DropSequence):kotlin.sequences.Sequence type: STATIC \l0x0009: INVOKE  (r0 I:java.util.Iterator) = (r0 I:kotlin.sequences.Sequence) kotlin.sequences.Sequence.iterator():java.util.Iterator type: INTERFACE \l0x000d: IPUT  \l  (r0 I:java.util.Iterator\<T\>)\l  (r1 I:kotlin.sequences.DropSequence$iterator$1)\l kotlin.sequences.DropSequence$iterator$1.iterator java.util.Iterator \l0x000f: INVOKE  (r2 I:int) = (r2 I:kotlin.sequences.DropSequence) kotlin.sequences.DropSequence.access$getCount$p(kotlin.sequences.DropSequence):int type: STATIC \l0x0013: IPUT  (r2 I:int), (r1 I:kotlin.sequences.DropSequence$iterator$1) kotlin.sequences.DropSequence$iterator$1.left int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{void kotlin.sequences.DropSequence$iterator$1.\<init\>((r1 'this' I:kotlin.sequences.DropSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.sequences.DropSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

