digraph "CFG forkotlin.sequences.DropSequence$iterator$1.drop()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:4:0x000c\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r1.left \<= 0) goto L_0x0018\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r1.iterator.hasNext() == false) goto L_0x0018\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:4:0x000c\l|r1.iterator.next()\lr1.left = r1.left + \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private final void kotlin.sequences.DropSequence$iterator$1.drop((r1v0 'this' kotlin.sequences.DropSequence$iterator$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_0;
Node_5 -> Node_7;
Node_6 -> Node_8;
}

