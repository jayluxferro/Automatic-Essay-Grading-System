digraph "CFG forkotlin.sequences.GeneratorSequence$iterator$1.\<init\>(Lkotlin\/sequences\/GeneratorSequence;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r1 I:kotlin.sequences.GeneratorSequence)\l  (r0 I:kotlin.sequences.GeneratorSequence$iterator$1)\l kotlin.sequences.GeneratorSequence$iterator$1.this$0 kotlin.sequences.GeneratorSequence \l0x0002: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) \l0x0006: IPUT  \l  (r1 I:int)\l  (r0 I:kotlin.sequences.GeneratorSequence$iterator$1)\l kotlin.sequences.GeneratorSequence$iterator$1.nextState int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN   \l}"];
MethodNode[shape=record,label="{void kotlin.sequences.GeneratorSequence$iterator$1.\<init\>((r0 'this' I:kotlin.sequences.GeneratorSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]), (r1 I:kotlin.sequences.GeneratorSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

