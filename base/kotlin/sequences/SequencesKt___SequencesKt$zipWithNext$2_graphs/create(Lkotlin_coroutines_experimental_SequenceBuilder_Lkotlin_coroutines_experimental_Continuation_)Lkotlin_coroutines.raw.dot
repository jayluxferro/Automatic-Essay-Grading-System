digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.create(Lkotlin\/coroutines\/experimental\/SequenceBuilder;Lkotlin\/coroutines\/experimental\/Continuation;)Lkotlin\/coroutines\/experimental\/Continuation;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"continuation\" \l0x0007: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: NEW_INSTANCE  (r0 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2) =  kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2 \l0x000c: IGET  (r1 I:kotlin.sequences.Sequence) = \l  (r3 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2)\l kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.receiver$0 kotlin.sequences.Sequence \l0x000e: IGET  (r2 I:kotlin.jvm.functions.Function2) = \l  (r3 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2)\l kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.$transform kotlin.jvm.functions.Function2 \l0x0010: INVOKE  \l  (r0 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2)\l  (r1 I:kotlin.sequences.Sequence)\l  (r2 I:kotlin.jvm.functions.Function2)\l  (r5 I:kotlin.coroutines.experimental.Continuation)\l kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.\<init\>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function2, kotlin.coroutines.experimental.Continuation):void type: DIRECT \l0x0013: IPUT  \l  (r4 I:kotlin.coroutines.experimental.SequenceBuilder)\l  (r0 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2)\l kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.p$ kotlin.coroutines.experimental.SequenceBuilder \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: RETURN  \l  (r0 I:kotlin.coroutines.experimental.Continuation\<kotlin.Unit\>)\l \l}"];
MethodNode[shape=record,label="{public final kotlin.coroutines.experimental.Continuation\<kotlin.Unit\> kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.create((r3 'this' I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2 A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlin.coroutines.experimental.SequenceBuilder\<? super R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.coroutines.experimental.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lkotlin\/coroutines\/experimental\/SequenceBuilder\<, \-TR;\>;, Lkotlin\/coroutines\/experimental\/Continuation\<, \-, Lkotlin\/Unit;, \>;), Lkotlin\/coroutines\/experimental\/Continuation\<, Lkotlin\/Unit;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

