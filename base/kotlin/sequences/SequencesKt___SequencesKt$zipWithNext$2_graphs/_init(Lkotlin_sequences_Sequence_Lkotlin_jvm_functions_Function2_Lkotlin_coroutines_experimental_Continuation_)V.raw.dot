digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.\<init\>(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function2;Lkotlin\/coroutines\/experimental\/Continuation;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r1 I:kotlin.sequences.Sequence)\l  (r0 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2)\l kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.receiver$0 kotlin.sequences.Sequence \l0x0002: IPUT  \l  (r2 I:kotlin.jvm.functions.Function2)\l  (r0 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2)\l kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.$transform kotlin.jvm.functions.Function2 \l0x0004: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0005: INVOKE  \l  (r0 I:kotlin.coroutines.experimental.jvm.internal.CoroutineImpl)\l  (r1 I:int)\l  (r3 I:kotlin.coroutines.experimental.Continuation)\l kotlin.coroutines.experimental.jvm.internal.CoroutineImpl.\<init\>(int, kotlin.coroutines.experimental.Continuation):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN   \l}"];
MethodNode[shape=record,label="{void kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.\<init\>((r0 'this' I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2 A[IMMUTABLE_TYPE, THIS]), (r1 I:kotlin.sequences.Sequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.jvm.functions.Function2 A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.coroutines.experimental.Continuation A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

