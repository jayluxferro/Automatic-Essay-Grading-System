digraph "CFG forkotlin.sequences.DistinctIterator.computeNext()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:3:0x001a\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3.source.hasNext() == false) goto L_0x0020\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|java.lang.Object r0 = r3.source.next()\ljava.lang.Object r1 = r3.keySelector.invoke(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:3:0x001a\l|if (r3.observed.add(r1) == false) goto L_0x0000\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|setNext(r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|done()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void kotlin.sequences.DistinctIterator.computeNext((r3v0 'this' kotlin.sequences.DistinctIterator A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_0;
Node_3 -> Node_9[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_6;
Node_9 -> Node_4;
}

