digraph "CFG forkotlin.sequences.DropWhileSequence$iterator$1.drop()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Iterator\<T\>) = (r2 I:kotlin.sequences.DropWhileSequence$iterator$1) kotlin.sequences.DropWhileSequence$iterator$1.iterator java.util.Iterator \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:java.util.Iterator\<T\>) = (r2 I:kotlin.sequences.DropWhileSequence$iterator$1) kotlin.sequences.DropWhileSequence$iterator$1.iterator java.util.Iterator \l0x000a: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x000e: IGET  (r1 I:kotlin.sequences.DropWhileSequence) = (r2 I:kotlin.sequences.DropWhileSequence$iterator$1) kotlin.sequences.DropWhileSequence$iterator$1.this$0 kotlin.sequences.DropWhileSequence \l0x0010: INVOKE  (r1 I:kotlin.jvm.functions.Function1) = (r1 I:kotlin.sequences.DropWhileSequence) kotlin.sequences.DropWhileSequence.access$getPredicate$p(kotlin.sequences.DropWhileSequence):kotlin.jvm.functions.Function1 type: STATIC \l0x0014: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:kotlin.jvm.functions.Function1)\l  (r0 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x0018: CHECK_CAST  (r1 I:java.lang.Boolean) = (java.lang.Boolean) (r1 I:?[OBJECT, ARRAY]) \l0x001a: INVOKE  (r1 I:boolean) = (r1 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:0:0x0000 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: IPUT  \l  (r0 I:T)\l  (r2 I:kotlin.sequences.DropWhileSequence$iterator$1)\l kotlin.sequences.DropWhileSequence$iterator$1.nextItem java.lang.Object \l0x0022: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0023: IPUT  \l  (r0 I:int)\l  (r2 I:kotlin.sequences.DropWhileSequence$iterator$1)\l kotlin.sequences.DropWhileSequence$iterator$1.dropState int \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: IPUT  \l  (r0 I:int)\l  (r2 I:kotlin.sequences.DropWhileSequence$iterator$1)\l kotlin.sequences.DropWhileSequence$iterator$1.dropState int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: RETURN   \l}"];
MethodNode[shape=record,label="{private final void kotlin.sequences.DropWhileSequence$iterator$1.drop((r2 'this' I:kotlin.sequences.DropWhileSequence$iterator$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_0;
Node_3 -> Node_4[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
}

