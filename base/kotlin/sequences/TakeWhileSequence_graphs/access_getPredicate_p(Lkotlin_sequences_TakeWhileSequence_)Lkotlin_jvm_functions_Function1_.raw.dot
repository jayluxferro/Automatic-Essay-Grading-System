digraph "CFG forkotlin.sequences.TakeWhileSequence.access$getPredicate$p(Lkotlin\/sequences\/TakeWhileSequence;)Lkotlin\/jvm\/functions\/Function1;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:kotlin.jvm.functions.Function1\<T, java.lang.Boolean\>) = (r0 I:kotlin.sequences.TakeWhileSequence) kotlin.sequences.TakeWhileSequence.predicate kotlin.jvm.functions.Function1 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN  (r0 I:kotlin.jvm.functions.Function1) \l}"];
MethodNode[shape=record,label="{public static final \/* synthetic *\/ kotlin.jvm.functions.Function1 kotlin.sequences.TakeWhileSequence.access$getPredicate$p((r0 I:kotlin.sequences.TakeWhileSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

