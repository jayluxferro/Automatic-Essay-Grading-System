digraph "CFG forkotlin.sequences.SequencesKt__SequencesKt.Sequence(Lkotlin\/jvm\/functions\/Function0;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:kotlin.sequences.SequencesKt__SequencesKt$Sequence$1) =  kotlin.sequences.SequencesKt__SequencesKt$Sequence$1 \l0x0002: INVOKE  \l  (r0 I:kotlin.sequences.SequencesKt__SequencesKt$Sequence$1)\l  (r1 I:kotlin.jvm.functions.Function0)\l kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.\<init\>(kotlin.jvm.functions.Function0):void type: DIRECT \l0x0005: CHECK_CAST  (r0 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: RETURN  (r0 I:kotlin.sequences.Sequence\<T\>) \l}"];
MethodNode[shape=record,label="{private static final kotlin.sequences.Sequence\<T\> kotlin.sequences.SequencesKt__SequencesKt.Sequence((r1 I:kotlin.jvm.functions.Function0\<? extends java.util.Iterator\<? extends T\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/jvm\/functions\/Function0\<, +, Ljava\/util\/Iterator\<, +TT;\>;\>;), Lkotlin\/sequences\/Sequence\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

