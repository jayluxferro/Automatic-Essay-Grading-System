digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1.invoke(Lkotlin\/collections\/IndexedValue;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"it\" \l0x0002: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: IGET  (r0 I:kotlin.jvm.functions.Function2) = \l  (r2 I:kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1)\l kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1.$predicate kotlin.jvm.functions.Function2 \l0x0007: INVOKE  (r1 I:int) = (r3 I:kotlin.collections.IndexedValue) kotlin.collections.IndexedValue.getIndex():int type: VIRTUAL \l0x000b: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x000f: INVOKE  (r3 I:java.lang.Object) = (r3 I:kotlin.collections.IndexedValue) kotlin.collections.IndexedValue.getValue():java.lang.Object type: VIRTUAL \l0x0013: INVOKE  (r3 I:java.lang.Object) = \l  (r0 I:kotlin.jvm.functions.Function2)\l  (r1 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l0x0017: CHECK_CAST  (r3 I:java.lang.Boolean) = (java.lang.Boolean) (r3 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  (r3 I:boolean) = (r3 I:java.lang.Boolean) java.lang.Boolean.booleanValue():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|0x001d: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public final boolean kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1.invoke((r2 'this' I:kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1 A[IMMUTABLE_TYPE, THIS]), (r3 I:kotlin.collections.IndexedValue\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lkotlin\/collections\/IndexedValue\<, +TT;\>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

