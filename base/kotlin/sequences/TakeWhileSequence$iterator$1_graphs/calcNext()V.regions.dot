digraph "CFG forkotlin.sequences.TakeWhileSequence$iterator$1.calcNext()V" {
subgraph cluster_Region_1544698405 {
label = "R(2:(2:2|(2:4|5))|6)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1081051485 {
label = "IF [B:1:0x0006] THEN: R(2:2|(2:4|5)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r2.iterator.hasNext() == true) goto L_0x0008\l}"];
subgraph cluster_Region_42254187 {
label = "R(2:2|(2:4|5))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|java.lang.Object T r0 = r2.iterator.next()\l}"];
subgraph cluster_IfRegion_76449921 {
label = "IF [B:3:0x001e] THEN: R(2:4|5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001e|if (((java.lang.Boolean) r2.this$0.predicate.invoke(r0)).booleanValue() == true) goto L_0x0020\l}"];
subgraph cluster_Region_1473851872 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0020|r2.nextState = 1\lr2.nextItem = r0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|RETURN\l|return\l}"];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x0026|r2.nextState = 0\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0029}"];
MethodNode[shape=record,label="{private final void kotlin.sequences.TakeWhileSequence$iterator$1.calcNext((r2v0 'this' kotlin.sequences.TakeWhileSequence$iterator$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_0 -> Node_1;
}

