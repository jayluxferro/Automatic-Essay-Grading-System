digraph "CFG forkotlin.sequences.SequencesKt__SequencesJVMKt.asSequence(Ljava\/util\/Enumeration;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Enumeration) kotlin.collections.CollectionsKt.iterator(java.util.Enumeration):java.util.Iterator type: STATIC \l0x0004: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r0 I:java.util.Iterator) kotlin.sequences.SequencesKt.asSequence(java.util.Iterator):kotlin.sequences.Sequence type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN  (r0 I:kotlin.sequences.Sequence\<T\>) \l}"];
MethodNode[shape=record,label="{private static final kotlin.sequences.Sequence\<T\> kotlin.sequences.SequencesKt__SequencesJVMKt.asSequence((r0 I:java.util.Enumeration\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Ljava\/util\/Enumeration\<, TT;\>;), Lkotlin\/sequences\/Sequence\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

