digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.take(Lkotlin\/sequences\/Sequence;I)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r2 \< 0) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|r0 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v5 boolean), (r0v6 boolean) binds: [B:3:0x0009, B:2:0x0007] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0027\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r2 != 0) goto L_0x0013\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e}"];
Node_7 [shape=record,label="{7\:\ 0x0013}"];
Node_8 [shape=record,label="{8\:\ 0x0015|if ((r1 instanceof kotlin.sequences.DropTakeSequence) == false) goto L_0x001e\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017}"];
Node_10 [shape=record,label="{10\:\ 0x001e}"];
Node_11 [shape=record,label="{11\:\ 0x0027|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Requested element count \")\lr1.append(r2)\lr1.append(\" is less than zero.\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x0048|throw new java.lang.IllegalArgumentException(r1.toString().toString())\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return new kotlin.sequences.TakeSequence\<\>(r1, r2)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.sequences.SequencesKt.emptySequence()\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return ((kotlin.sequences.DropTakeSequence) r1).take(r2)\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<T\> kotlin.sequences.SequencesKt___SequencesKt.take((r1v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;I), Lkotlin\/sequences\/Sequence\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_15;
Node_10 -> Node_13;
Node_11 -> Node_12;
}

