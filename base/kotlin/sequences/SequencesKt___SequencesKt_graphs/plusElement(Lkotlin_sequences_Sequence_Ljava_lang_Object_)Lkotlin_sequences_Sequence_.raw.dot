digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.plusElement(Lkotlin\/sequences\/Sequence;Ljava\/lang\/Object;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r0 I:kotlin.sequences.Sequence), (r1 I:java.lang.Object) kotlin.sequences.SequencesKt.plus(kotlin.sequences.Sequence, java.lang.Object):kotlin.sequences.Sequence type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: RETURN  (r0 I:kotlin.sequences.Sequence\<T\>) \l}"];
MethodNode[shape=record,label="{private static final kotlin.sequences.Sequence\<T\> kotlin.sequences.SequencesKt___SequencesKt.plusElement((r0 I:kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;TT;), Lkotlin\/sequences\/Sequence\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

