digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.zipWithNext(Lkotlin\/sequences\/Sequence;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: SGET  (r0 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1) =  kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1.INSTANCE kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$1 \l0x0007: CHECK_CAST  (r0 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r0 I:?[OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:kotlin.sequences.Sequence) = \l  (r1 I:kotlin.sequences.Sequence)\l  (r0 I:kotlin.jvm.functions.Function2)\l kotlin.sequences.SequencesKt.zipWithNext(kotlin.sequences.Sequence, kotlin.jvm.functions.Function2):kotlin.sequences.Sequence type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN  (r1 I:kotlin.sequences.Sequence\<kotlin.Pair\<T, T\>\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<kotlin.Pair\<T, T\>\> kotlin.sequences.SequencesKt___SequencesKt.zipWithNext((r1 I:kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;), Lkotlin\/sequences\/Sequence\<, Lkotlin\/Pair\<, TT;TT;\>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

