digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.averageOfLong(Lkotlin\/sequences\/Sequence;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r5 I:java.util.Iterator) = (r5 I:kotlin.sequences.Sequence) kotlin.sequences.Sequence.iterator():java.util.Iterator type: INTERFACE \l0x0009: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x000b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: INVOKE  (r3 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0021 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r3 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0016: CHECK_CAST  (r3 I:java.lang.Number) = (java.lang.Number) (r3 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  (r3 I:long) = (r3 I:java.lang.Number) java.lang.Number.longValue():long type: VIRTUAL \l0x001c: CAST  (r3 I:double) = (double) (r3 I:long) \l0x001d: ARITH  (r0 I:double) = (r0 I:double) + (r3 I:double) \l0x001e: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: SGET  (r5 I:kotlin.jvm.internal.DoubleCompanionObject) =  kotlin.jvm.internal.DoubleCompanionObject.INSTANCE kotlin.jvm.internal.DoubleCompanionObject \l0x0025: INVOKE  (r0 I:double) = (r5 I:kotlin.jvm.internal.DoubleCompanionObject) kotlin.jvm.internal.DoubleCompanionObject.getNaN():double type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: CAST  (r2 I:double) = (double) (r2 I:int) \l0x002b: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public static final double kotlin.sequences.SequencesKt___SequencesKt.averageOfLong((r5 I:kotlin.sequences.Sequence\<java.lang.Long\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lkotlin\/sequences\/Sequence\<, Ljava\/lang\/Long;, \>;)D]\}], Annotation[BUILD, kotlin.jvm.JvmName, \{name=averageOfLong\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

