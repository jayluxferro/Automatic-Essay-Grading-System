digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.none(Lkotlin\/sequences\/Sequence;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: INVOKE  (r1 I:java.util.Iterator) = (r1 I:kotlin.sequences.Sequence) kotlin.sequences.Sequence.iterator():java.util.Iterator type: INTERFACE \l0x0009: INVOKE  (r1 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l0x000d: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) ^ (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public static final boolean kotlin.sequences.SequencesKt___SequencesKt.none((r1 I:kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

