digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.windowed(Lkotlin\/sequences\/Sequence;IIZLkotlin\/jvm\/functions\/Function1;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r5 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000b: INVOKE  (r1 I:kotlin.sequences.Sequence) = \l  (r1 I:kotlin.sequences.Sequence)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:boolean)\l  (r0 I:boolean)\l kotlin.collections.SlidingWindowKt.windowedSequence(kotlin.sequences.Sequence, int, int, boolean, boolean):kotlin.sequences.Sequence type: STATIC \l0x000f: INVOKE  (r1 I:kotlin.sequences.Sequence) = \l  (r1 I:kotlin.sequences.Sequence)\l  (r5 I:kotlin.jvm.functions.Function1)\l kotlin.sequences.SequencesKt.map(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1):kotlin.sequences.Sequence type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: RETURN  (r1 I:kotlin.sequences.Sequence\<R\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<R\> kotlin.sequences.SequencesKt___SequencesKt.windowed((r1 I:kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:kotlin.jvm.functions.Function1\<? super java.util.List\<? extends T\>, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , , , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;IIZ, Lkotlin\/jvm\/functions\/Function1\<, \-, Ljava\/util\/List\<, +TT;\>;+TR;\>;), Lkotlin\/sequences\/Sequence\<, TR;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

