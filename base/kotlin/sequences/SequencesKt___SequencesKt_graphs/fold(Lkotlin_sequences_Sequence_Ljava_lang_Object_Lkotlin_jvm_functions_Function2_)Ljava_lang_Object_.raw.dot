digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.fold(Lkotlin\/sequences\/Sequence;Ljava\/lang\/Object;Lkotlin\/jvm\/functions\/Function2;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"operation\" \l0x0007: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: INVOKE  (r1 I:java.util.Iterator) = (r1 I:kotlin.sequences.Sequence) kotlin.sequences.Sequence.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: INVOKE  (r0 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001d \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: INVOKE  (r0 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0018: INVOKE  (r2 I:java.lang.Object) = \l  (r3 I:kotlin.jvm.functions.Function2)\l  (r2 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: RETURN  (r2 I:R) \l}"];
MethodNode[shape=record,label="{public static final R kotlin.sequences.SequencesKt___SequencesKt.fold((r1 I:kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:R A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.jvm.functions.Function2\<? super R, ? super T, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;TR;, Lkotlin\/jvm\/functions\/Function2\<, \-TR;\-TT;+TR;\>;)TR;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

