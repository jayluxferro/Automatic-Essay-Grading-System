digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.forEachIndexed(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function2;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"action\")\ljava.util.Iterator r3 = r3.iterator()\lr0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:0:0x0000, B:3:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000f\-\>B:3:0x0015\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|if (r3.hasNext() == false) goto L_0x0023\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|LOOP_END\lLOOP:0: B:1:0x000f\-\>B:3:0x0015\l|java.lang.Object r1 = r3.next()\ljava.lang.Integer r2 = java.lang.Integer.valueOf(r0)\lint r0 = r0 + 1\lr4.invoke(r2, r1)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final void kotlin.sequences.SequencesKt___SequencesKt.forEachIndexed((r3v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Integer;, \-TT;, Lkotlin\/Unit;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_1;
Node_5 -> Node_4;
}

