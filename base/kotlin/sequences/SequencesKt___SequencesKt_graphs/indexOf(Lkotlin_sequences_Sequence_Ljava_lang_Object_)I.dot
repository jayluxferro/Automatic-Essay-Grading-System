digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.indexOf(Lkotlin\/sequences\/Sequence;Ljava\/lang\/Object;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\ljava.util.Iterator r2 = r2.iterator()\lr0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:0:0x0000, B:6:0x001b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:6:0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|if (r2.hasNext() == false) goto L_0x001e\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010}"];
Node_4 [shape=record,label="{4\:\ 0x0018|if (kotlin.jvm.internal.Intrinsics.areEqual((java.lang.Object) r3, (java.lang.Object) r2.next()) == false) goto L_0x001b\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|RETURN\l|return r0\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|LOOP_END\lLOOP:0: B:1:0x000a\-\>B:6:0x001b\l|int r0 = r0 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|RETURN\l|return \-1\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final int kotlin.sequences.SequencesKt___SequencesKt.indexOf((r2v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;TT;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_8[style=dashed];
Node_6 -> Node_1;
Node_8 -> Node_5;
Node_9 -> Node_7;
}

