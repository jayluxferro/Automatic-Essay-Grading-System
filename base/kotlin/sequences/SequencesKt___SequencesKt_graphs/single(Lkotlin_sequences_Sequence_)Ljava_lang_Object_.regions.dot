digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.single(Lkotlin\/sequences\/Sequence;)Ljava\/lang\/Object;" {
subgraph cluster_Region_494556232 {
label = "R(2:0|(2:(2:2|(2:(1:4)|(1:6)))|(1:8)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\ljava.util.Iterator java.util.Iterator\<? extends T\> r1 = r1.iterator()\l}"];
subgraph cluster_Region_411279921 {
label = "R(2:(2:2|(2:(1:4)|(1:6)))|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_655571406 {
label = "IF [B:1:0x000d] THEN: R(2:2|(2:(1:4)|(1:6))) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r1.hasNext() == true) goto L_0x000f\l}"];
subgraph cluster_Region_1604917031 {
label = "R(2:2|(2:(1:4)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000f|java.lang.Object T r0 = r1.next()\l}"];
subgraph cluster_Region_750835706 {
label = "R(2:(1:4)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1452304567 {
label = "IF [B:3:0x0017] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|if (r1.hasNext() == false) goto L_0x0019\l}"];
subgraph cluster_Region_419933753 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1077735892 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0023|throw new java.lang.IllegalArgumentException(\"Sequence has more than one element.\")\l}"];
}
}
}
}
subgraph cluster_Region_548374287 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002d|throw new java.util.NoSuchElementException(\"Sequence is empty.\")\l}"];
}
}
}
Node_5 [shape=record,color=red,label="{5\:\ 0x001a}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0024}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.single((r1v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
}

