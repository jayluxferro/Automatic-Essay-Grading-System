digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.max(Lkotlin\/sequences\/Sequence;)Ljava\/lang\/Comparable;" {
subgraph cluster_Region_583847410 {
label = "R(2:0|(2:(1:2)|(3:3|(2:6|(1:8)(0))|9)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\ljava.util.Iterator java.util.Iterator\<? extends T\> r3 = r3.iterator()\l}"];
subgraph cluster_Region_706840574 {
label = "R(2:(1:2)|(3:3|(2:6|(1:8)(0))|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_537988598 {
label = "IF [B:1:0x000d] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r3.hasNext() == false) goto L_0x000f\l}"];
subgraph cluster_Region_377106855 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000f|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1945168412 {
label = "R(3:3|(2:6|(1:8)(0))|9)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0011|java.lang.Comparable T r0 = (java.lang.Comparable) r3.next()\l}"];
subgraph cluster_LoopRegion_2085397071 {
label = "LOOP:0: (2:6|(1:8)(0))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001b|if (r3.hasNext() != false) goto L_0x001d\l}"];
subgraph cluster_Region_942363497 {
label = "R(2:6|(1:8)(0))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|java.lang.Comparable T r1 = (java.lang.Comparable) r3.next()\l}"];
subgraph cluster_IfRegion_1688809262 {
label = "IF [B:7:0x0027] THEN: R(1:8) ELSE: R(0)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0027|if (r0.compareTo(r1) \< 0) goto L_0x0029\l}"];
subgraph cluster_Region_285050663 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0029|r0 = r1\l}"];
}
subgraph cluster_Region_2078679913 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_9 [shape=record,label="{9\:\ 0x002b|RETURN\l|return r0\l}"];
}
}
}
Node_4 [shape=record,color=red,label="{4\:\ 0x0017|LOOP_START\lPHI: r0 \l  PHI: (r0v4 T) = (r0v3 T), (r0v5 T) binds: [B:3:0x0011, B:10:0x0017] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0017\-\>B:10:0x0017\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0017|LOOP_END\lSYNTHETIC\lPHI: r0 \l  PHI: (r0v5 T) = (r0v4 T), (r0v6 T) binds: [B:12:0x0017, B:13:0x0017] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0017\-\>B:10:0x0017\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x002b|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0017|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0017|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.max((r3v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Ljava\/lang\/Comparable\<, \-TT;\>;\>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_11[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_12[style=dashed];
Node_8 -> Node_13;
Node_4 -> Node_5;
Node_10 -> Node_4;
Node_11 -> Node_9;
Node_12 -> Node_10;
Node_13 -> Node_10;
}

