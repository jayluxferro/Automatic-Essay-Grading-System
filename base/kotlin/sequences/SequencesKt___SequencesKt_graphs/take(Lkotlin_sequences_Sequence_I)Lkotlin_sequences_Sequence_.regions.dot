digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.take(Lkotlin\/sequences\/Sequence;I)Lkotlin\/sequences\/Sequence;" {
subgraph cluster_Region_1122589969 {
label = "R(2:0|(2:11|12)(1:(1:14)(1:(2:(1:15)|(1:13)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\l}"];
subgraph cluster_IfRegion_457618871 {
label = "IF [B:4:0x000a] THEN: R(2:11|12) ELSE: R(1:(1:14)(1:(2:(1:15)|(1:13))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|PHI: r0 \l  PHI: (r0v1 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r2 \>= 0) != true) goto L_0x0027\l}"];
subgraph cluster_Region_215018427 {
label = "R(2:11|12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0027}"];
Node_12 [shape=record,label="{12\:\ 0x0048|throw new java.lang.IllegalArgumentException((\"Requested element count \" + r2 + \" is less than zero.\").toString())\l}"];
}
subgraph cluster_Region_1340427826 {
label = "R(1:(1:14)(1:(2:(1:15)|(1:13)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1198293770 {
label = "IF [B:5:0x000c] THEN: R(1:14) ELSE: R(1:(2:(1:15)|(1:13))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r2 == 0) goto L_0x000e\l}"];
subgraph cluster_Region_1772711261 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.sequences.SequencesKt.emptySequence()\l}"];
}
subgraph cluster_Region_1647304416 {
label = "R(1:(2:(1:15)|(1:13)))";
node [shape=record,color=blue];
subgraph cluster_Region_123639881 {
label = "R(2:(1:15)|(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_604581755 {
label = "IF [B:8:0x0015] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0015|if ((r1 instanceof kotlin.sequences.DropTakeSequence) == true) goto L_0x0017\l}"];
subgraph cluster_Region_115899682 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return ((kotlin.sequences.DropTakeSequence) r1).take(r2)\l}"];
}
}
subgraph cluster_Region_439118785 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return new kotlin.sequences.TakeSequence\<\>(r1, r2)\l}"];
}
}
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0005}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0007}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0009}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000e}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0013}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0017}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001e}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<T\> kotlin.sequences.SequencesKt___SequencesKt.take((r1v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;I), Lkotlin\/sequences\/Sequence\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_11 -> Node_12;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_9 -> Node_15;
Node_10 -> Node_13;
}

