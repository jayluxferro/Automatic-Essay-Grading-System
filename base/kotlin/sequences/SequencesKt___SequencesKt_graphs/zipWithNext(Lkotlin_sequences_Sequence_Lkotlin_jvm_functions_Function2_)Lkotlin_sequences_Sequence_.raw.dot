digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.zipWithNext(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function2;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: NEW_INSTANCE  (r0 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2) =  kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2 \l0x000c: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: INVOKE  \l  (r0 I:kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2)\l  (r2 I:kotlin.sequences.Sequence)\l  (r3 I:kotlin.jvm.functions.Function2)\l  (r1 I:kotlin.coroutines.experimental.Continuation)\l kotlin.sequences.SequencesKt___SequencesKt$zipWithNext$2.\<init\>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function2, kotlin.coroutines.experimental.Continuation):void type: DIRECT \l0x0010: CHECK_CAST  (r0 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r0 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r2 I:kotlin.sequences.Sequence) = (r0 I:kotlin.jvm.functions.Function2) kotlin.coroutines.experimental.SequenceBuilderKt.buildSequence(kotlin.jvm.functions.Function2):kotlin.sequences.Sequence type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: RETURN  (r2 I:kotlin.sequences.Sequence\<R\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<R\> kotlin.sequences.SequencesKt___SequencesKt.zipWithNext((r2 I:kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.jvm.functions.Function2\<? super T, ? super T, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function2\<, \-TT;\-TT;+TR;\>;), Lkotlin\/sequences\/Sequence\<, TR;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

