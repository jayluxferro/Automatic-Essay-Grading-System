digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.filterIndexed(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function2;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"predicate\" \l0x0007: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: NEW_INSTANCE  (r0 I:kotlin.sequences.TransformingSequence) =  kotlin.sequences.TransformingSequence \l0x000c: NEW_INSTANCE  (r1 I:kotlin.sequences.FilteringSequence) =  kotlin.sequences.FilteringSequence \l0x000e: NEW_INSTANCE  (r2 I:kotlin.sequences.IndexingSequence) =  kotlin.sequences.IndexingSequence \l0x0010: INVOKE  \l  (r2 I:kotlin.sequences.IndexingSequence)\l  (r3 I:kotlin.sequences.Sequence)\l kotlin.sequences.IndexingSequence.\<init\>(kotlin.sequences.Sequence):void type: DIRECT \l0x0013: CHECK_CAST  (r2 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r2 I:?[OBJECT, ARRAY]) \l0x0015: NEW_INSTANCE  (r3 I:kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1) =  kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1 \l0x0017: INVOKE  \l  (r3 I:kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1)\l  (r4 I:kotlin.jvm.functions.Function2)\l kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1.\<init\>(kotlin.jvm.functions.Function2):void type: DIRECT \l0x001a: CHECK_CAST  (r3 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r3 I:?[OBJECT, ARRAY]) \l0x001c: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001d: INVOKE  \l  (r1 I:kotlin.sequences.FilteringSequence)\l  (r2 I:kotlin.sequences.Sequence)\l  (r4 I:boolean)\l  (r3 I:kotlin.jvm.functions.Function1)\l kotlin.sequences.FilteringSequence.\<init\>(kotlin.sequences.Sequence, boolean, kotlin.jvm.functions.Function1):void type: DIRECT \l0x0020: CHECK_CAST  (r1 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r1 I:?[OBJECT, ARRAY]) \l0x0022: SGET  (r3 I:kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2) =  kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2.INSTANCE kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2 \l0x0024: CHECK_CAST  (r3 I:kotlin.jvm.functions.Function1) = (kotlin.jvm.functions.Function1) (r3 I:?[OBJECT, ARRAY]) \l0x0026: INVOKE  \l  (r0 I:kotlin.sequences.TransformingSequence)\l  (r1 I:kotlin.sequences.Sequence)\l  (r3 I:kotlin.jvm.functions.Function1)\l kotlin.sequences.TransformingSequence.\<init\>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1):void type: DIRECT \l0x0029: CHECK_CAST  (r0 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x002b|0x002b: RETURN  (r0 I:kotlin.sequences.Sequence\<T\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<T\> kotlin.sequences.SequencesKt___SequencesKt.filterIndexed((r3 I:kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, java.lang.Boolean\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Integer;, \-TT;, Ljava\/lang\/Boolean;, \>;), Lkotlin\/sequences\/Sequence\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

