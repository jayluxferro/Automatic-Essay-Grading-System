digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.firstOrNull(Lkotlin\/sequences\/Sequence;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\ljava.util.Iterator r1 = r1.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r1.hasNext() != false) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011}"];
Node_4 [shape=record,label="{4\:\ 0x0015|RETURN\l|return r1.next()\l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.firstOrNull((r1v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

