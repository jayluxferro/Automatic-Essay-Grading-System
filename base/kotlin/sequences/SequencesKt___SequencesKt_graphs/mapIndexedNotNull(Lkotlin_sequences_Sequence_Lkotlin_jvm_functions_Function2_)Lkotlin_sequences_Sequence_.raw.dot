digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.mapIndexedNotNull(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function2;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x0007: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: NEW_INSTANCE  (r0 I:kotlin.sequences.TransformingIndexedSequence) =  kotlin.sequences.TransformingIndexedSequence \l0x000c: INVOKE  \l  (r0 I:kotlin.sequences.TransformingIndexedSequence)\l  (r1 I:kotlin.sequences.Sequence)\l  (r2 I:kotlin.jvm.functions.Function2)\l kotlin.sequences.TransformingIndexedSequence.\<init\>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function2):void type: DIRECT \l0x000f: CHECK_CAST  (r0 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r0 I:?[OBJECT, ARRAY]) \l0x0011: INVOKE  (r1 I:kotlin.sequences.Sequence) = (r0 I:kotlin.sequences.Sequence) kotlin.sequences.SequencesKt.filterNotNull(kotlin.sequences.Sequence):kotlin.sequences.Sequence type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: RETURN  (r1 I:kotlin.sequences.Sequence\<R\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<R\> kotlin.sequences.SequencesKt___SequencesKt.mapIndexedNotNull((r1 I:kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Integer;, \-TT;+TR;\>;), Lkotlin\/sequences\/Sequence\<, TR;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

