digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.toHashSet(Lkotlin\/sequences\/Sequence;)Ljava\/util\/HashSet;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet \l0x0007: INVOKE  (r0 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x000a: CHECK_CAST  (r0 I:java.util.Collection) = (java.util.Collection) (r0 I:?[OBJECT, ARRAY]) \l0x000c: INVOKE  (r1 I:java.util.Collection) = \l  (r1 I:kotlin.sequences.Sequence)\l  (r0 I:java.util.Collection)\l kotlin.sequences.SequencesKt.toCollection(kotlin.sequences.Sequence, java.util.Collection):java.util.Collection type: STATIC \l0x0010: CHECK_CAST  (r1 I:java.util.HashSet) = (java.util.HashSet) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: RETURN  (r1 I:java.util.HashSet\<T\>) \l}"];
MethodNode[shape=record,label="{public static final java.util.HashSet\<T\> kotlin.sequences.SequencesKt___SequencesKt.toHashSet((r1 I:kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;), Ljava\/util\/HashSet\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

