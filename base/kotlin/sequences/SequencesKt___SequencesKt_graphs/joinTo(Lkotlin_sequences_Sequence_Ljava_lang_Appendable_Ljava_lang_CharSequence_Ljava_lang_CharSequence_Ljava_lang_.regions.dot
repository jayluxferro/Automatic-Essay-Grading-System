digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.joinTo(Lkotlin\/sequences\/Sequence;Ljava\/lang\/Appendable;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;Ljava\/lang\/CharSequence;ILjava\/lang\/CharSequence;Lkotlin\/jvm\/functions\/Function1;)Ljava\/lang\/Appendable;" {
subgraph cluster_Region_1367081258 {
label = "R(5:0|(3:3|(1:5)|(2:(1:15)|(1:8)))|(1:11)|12|13)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"buffer\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"separator\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"prefix\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"postfix\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r8, \"truncated\")\lr3.append(r5)\ljava.util.Iterator r2 = r2.iterator()\lint r5 = 0\l}"];
subgraph cluster_LoopRegion_138749985 {
label = "LOOP:0: (3:3|(1:5)|(2:(1:15)|(1:8)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x002a|if (r2.hasNext() != false) goto L_0x002c\l}"];
subgraph cluster_Region_31879745 {
label = "R(3:3|(1:5)|(2:(1:15)|(1:8)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x002c|java.lang.Object r0 = r2.next()\lr5++\l}"];
subgraph cluster_IfRegion_1546104261 {
label = "IF [B:4:0x0033] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0033|if (r5 \> 1) goto L_0x0035\l}"];
subgraph cluster_Region_1010866026 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0035|r3.append(r4)\l}"];
}
}
subgraph cluster_Region_997504770 {
label = "R(2:(1:15)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1843626554 {
label = "IF [B:6:0x0038, B:7:0x003a] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0038|if (r7 \>= 0) goto L_0x003a\l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|ADDED_TO_REGION\l|if (r5 \> r7) goto L_0x0040\l}"];
subgraph cluster_Region_1449025709 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0040|SYNTHETIC\lEDGE_INSN: B:15:0x0040\-\>B:9:0x0040 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_2004573799 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003c|LOOP_END\lLOOP:0: B:1:0x0026\-\>B:8:0x003c\l|kotlin.text.StringsKt.appendElement(r3, r0, r9)\l}"];
}
}
}
}
subgraph cluster_IfRegion_50156484 {
label = "IF [B:9:0x0040, B:10:0x0042] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0040|ADDED_TO_REGION\lEDGE_INSN: B:15:0x0040\-\>B:9:0x0040 ?: BREAK  \lPHI: r5 \l  PHI: (r5v3 int) = (r5v2 int), (r5v4 int) binds: [B:14:0x0040, B:15:0x0040] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 \>= 0) goto L_0x0042\l}"];
Node_10 [shape=record,label="{10\:\ 0x0042|ADDED_TO_REGION\l|if (r5 \> r7) goto L_0x0044\l}"];
subgraph cluster_Region_1329101861 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0044|r3.append(r8)\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0047|r3.append(r6)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|RETURN\l|return r3\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0026|LOOP_START\lPHI: r5 \l  PHI: (r5v2 int) = (r5v1 int), (r5v4 int) binds: [B:0:0x0000, B:8:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0026\-\>B:8:0x003c\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0040|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003c|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x003c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final A kotlin.sequences.SequencesKt___SequencesKt.joinTo((r2v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 A A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 kotlin.jvm.functions.Function1\<? super T, ? extends java.lang.CharSequence\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, A::, Ljava\/lang\/Appendable;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;TA;, Ljava\/lang\/CharSequence;, Ljava\/lang\/CharSequence;, Ljava\/lang\/CharSequence;, I, Ljava\/lang\/CharSequence;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;+, Ljava\/lang\/CharSequence;, \>;)TA;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_14[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_16[style=dashed];
Node_7 -> Node_15;
Node_7 -> Node_17[style=dashed];
Node_15 -> Node_9;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_9 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_1 -> Node_2;
Node_14 -> Node_9;
Node_16 -> Node_8;
Node_17 -> Node_8;
}

