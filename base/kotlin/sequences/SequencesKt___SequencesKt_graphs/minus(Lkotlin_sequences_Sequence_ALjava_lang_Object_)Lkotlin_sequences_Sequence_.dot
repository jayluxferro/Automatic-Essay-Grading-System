digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.minus(Lkotlin\/sequences\/Sequence;[Ljava\/lang\/Object;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"elements\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r2.length != 0) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|r0 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|PHI: r0 \l  PHI: (r0v3 boolean) = (r0v6 boolean), (r0v7 boolean) binds: [B:3:0x000f, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0013\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|RETURN\l|return r1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\l|return new kotlin.sequences.SequencesKt___SequencesKt$minus$2(r1, r2)\l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<T\> kotlin.sequences.SequencesKt___SequencesKt.minus((r1v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 T[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;[TT;), Lkotlin\/sequences\/Sequence\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
}

