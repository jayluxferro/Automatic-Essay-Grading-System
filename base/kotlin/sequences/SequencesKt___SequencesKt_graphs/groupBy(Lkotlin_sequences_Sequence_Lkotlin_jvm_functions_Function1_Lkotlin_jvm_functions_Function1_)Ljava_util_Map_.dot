digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.groupBy(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function1;Lkotlin\/jvm\/functions\/Function1;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"keySelector\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"valueTransform\")\ljava.util.Map r0 = new java.util.LinkedHashMap\<\>()\ljava.util.Iterator r4 = r4.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|LOOP_START\lLOOP:0: B:1:0x001a\-\>B:6:0x0036\l}"];
Node_2 [shape=record,label="{2\:\ 0x001e|if (r4.hasNext() == false) goto L_0x0040\l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|java.lang.Object r1 = r4.next()\ljava.lang.Object r2 = r5.invoke(r1)\ljava.lang.Object r3 = r0.get(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|if (r3 != null) goto L_0x0036\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|java.util.ArrayList r3 = new java.util.ArrayList\<\>()\lr0.put(r2, r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|LOOP_END\lPHI: r3 \l  PHI: (r3v1 java.util.List\<V\>) = (r3v0 java.util.List\<V\>), (r3v3 java.util.List\<V\>) binds: [B:10:0x0036, B:9:0x0036] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x001a\-\>B:6:0x0036\l|r3.add(r6.invoke(r1))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|RETURN\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0036|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final java.util.Map\<K, java.util.List\<V\>\> kotlin.sequences.SequencesKt___SequencesKt.groupBy((r4v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function1\<? super T, ? extends K\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 kotlin.jvm.functions.Function1\<? super T, ? extends V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, K:, Ljava\/lang\/Object;, V:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;+TK;\>;, Lkotlin\/jvm\/functions\/Function1\<, \-TT;+TV;\>;), Ljava\/util\/Map\<, TK;, Ljava\/util\/List\<, TV;\>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_9;
Node_6 -> Node_1;
Node_8 -> Node_7;
Node_9 -> Node_6;
Node_10 -> Node_6;
}

