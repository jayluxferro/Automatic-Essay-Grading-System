digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.reduceIndexed(Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function3;)Ljava\/lang\/Object;" {
subgraph cluster_Region_995710520 {
label = "R(2:0|(2:(3:2|(1:5)|6)|(1:8)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r6, \"operation\")\ljava.util.Iterator java.util.Iterator\<? extends T\> r5 = r5.iterator()\l}"];
subgraph cluster_Region_2121875914 {
label = "R(2:(3:2|(1:5)|6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_592660820 {
label = "IF [B:1:0x0012] THEN: R(3:2|(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0012|if (r5.hasNext() == true) goto L_0x0014\l}"];
subgraph cluster_Region_1839099507 {
label = "R(3:2|(1:5)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0014|S r2 = r5.next()\lint r0 = 1\l}"];
subgraph cluster_LoopRegion_742526345 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001f|if (r5.hasNext() != false) goto L_0x0021\l}"];
subgraph cluster_Region_1574663855 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0021|LOOP_END\lLOOP:0: B:3:0x001b\-\>B:5:0x0021\l|java.lang.Integer java.lang.Integer r3 = java.lang.Integer.valueOf(r0)\lr0++\ljava.lang.Object r2 = r6.invoke(r3, r2, r5.next())\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x002f|RETURN\l|return r2\l}"];
}
}
subgraph cluster_Region_751307541 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0039|throw new java.lang.UnsupportedOperationException(\"Empty sequence can't be reduced.\")\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x001b|LOOP_START\lPHI: r0 r2 \l  PHI: (r0v5 int) = (r0v4 int), (r0v6 int) binds: [B:2:0x0014, B:5:0x0021] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 S) = (r2v0 S), (r2v2 S) binds: [B:2:0x0014, B:5:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x001b\-\>B:5:0x0021\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0030}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final S kotlin.sequences.SequencesKt___SequencesKt.reduceIndexed((r5v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 ? I:kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super S, ? super T, ? extends S\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lJADX WARNING: type inference failed for: r6v0, types: [kotlin.jvm.functions.Function3\<? super java.lang.Integer, ? super S, ? super T, ? extends S\>, kotlin.jvm.functions.Function3, java.lang.Object]\lUnknown variable types count: 1\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<S:, Ljava\/lang\/Object;, T::TS;\>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;, Lkotlin\/jvm\/functions\/Function3\<, \-, Ljava\/lang\/Integer;, \-TS;\-TT;+TS;\>;)TS;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_3;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_6;
}

