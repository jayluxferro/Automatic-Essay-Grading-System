digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.last(Lkotlin\/sequences\/Sequence;)Ljava\/lang\/Object;" {
subgraph cluster_Region_329907102 {
label = "R(2:0|(2:(3:2|(1:5)|6)|(1:8)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\ljava.util.Iterator java.util.Iterator\<? extends T\> r2 = r2.iterator()\l}"];
subgraph cluster_Region_606210057 {
label = "R(2:(3:2|(1:5)|6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_616236234 {
label = "IF [B:1:0x000d] THEN: R(3:2|(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r2.hasNext() == true) goto L_0x000f\l}"];
subgraph cluster_Region_1427559565 {
label = "R(3:2|(1:5)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000f|java.lang.Object T r0 = r2.next()\l}"];
subgraph cluster_LoopRegion_766024341 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|if (r2.hasNext() != false) goto L_0x0019\l}"];
subgraph cluster_Region_1895948725 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0019|LOOP_END\lLOOP:0: B:3:0x0013\-\>B:5:0x0019\l|java.lang.Object r0 = r2.next()\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x001e|RETURN\l|return r0\l}"];
}
}
subgraph cluster_Region_1407418727 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0028|throw new java.util.NoSuchElementException(\"Sequence is empty.\")\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0013|LOOP_START\lPHI: r0 \l  PHI: (r0v4 T) = (r0v3 T), (r0v5 T) binds: [B:2:0x000f, B:5:0x0019] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0013\-\>B:5:0x0019\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final T kotlin.sequences.SequencesKt___SequencesKt.last((r2v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_3;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_6;
}

