digraph "CFG forkotlin.sequences.SequencesKt___SequencesKt.mapIndexedTo(Lkotlin\/sequences\/Sequence;Ljava\/util\/Collection;Lkotlin\/jvm\/functions\/Function2;)Ljava\/util\/Collection;" {
subgraph cluster_Region_1976221942 {
label = "R(3:0|(1:3)|4)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, com.google.firebase.analytics.FirebaseAnalytics.Param.DESTINATION)\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r5, \"transform\")\ljava.util.Iterator r3 = r3.iterator()\lint r0 = 0\l}"];
subgraph cluster_LoopRegion_1326351370 {
label = "LOOP:0: (1:3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0018|if (r3.hasNext() != false) goto L_0x001a\l}"];
subgraph cluster_Region_428561525 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001a|LOOP_END\lLOOP:0: B:1:0x0014\-\>B:3:0x001a\l|java.lang.Object r1 = r3.next()\ljava.lang.Integer java.lang.Integer r2 = java.lang.Integer.valueOf(r0)\lr0++\lr4.add(r5.invoke(r2, r1))\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x002c|RETURN\l|return r4\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0014|LOOP_START\lPHI: r0 \l  PHI: (r0v4 int) = (r0v3 int), (r0v5 int) binds: [B:0:0x0000, B:3:0x001a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0014\-\>B:3:0x001a\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static final C kotlin.sequences.SequencesKt___SequencesKt.mapIndexedTo((r3v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 C A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 kotlin.jvm.functions.Function2\<? super java.lang.Integer, ? super T, ? extends R\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, R:, Ljava\/lang\/Object;, C::, Ljava\/util\/Collection\<, \-TR;\>;\>(, Lkotlin\/sequences\/Sequence\<, +TT;\>;TC;, Lkotlin\/jvm\/functions\/Function2\<, \-, Ljava\/lang\/Integer;, \-TT;+TR;\>;)TC;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_3 -> Node_1;
Node_1 -> Node_2;
Node_5 -> Node_4;
}

