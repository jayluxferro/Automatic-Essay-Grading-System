digraph "CFG forkotlin.sequences.SubSequence.\<init\>(Lkotlin\/sequences\/Sequence;II)V" {
subgraph cluster_Region_61694241 {
label = "R(2:0|(2:(1:(2:(1:(2:(2:15|16)|(1:14)))|(2:17|18)))|(2:19|20)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"sequence\")\lr1.sequence = r2\lr1.startIndex = r3\lr1.endIndex = r4\lboolean r3 = false\l}"];
subgraph cluster_Region_2070401915 {
label = "R(2:(1:(2:(1:(2:(2:15|16)|(1:14)))|(2:17|18)))|(2:19|20))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1990485729 {
label = "IF [B:4:0x0017] THEN: R(1:(2:(1:(2:(2:15|16)|(1:14)))|(2:17|18))) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|PHI: r2 \l  PHI: (r2v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r1.startIndex \>= 0) == true) goto L_0x0019\l}"];
subgraph cluster_Region_1059311607 {
label = "R(1:(2:(1:(2:(2:15|16)|(1:14)))|(2:17|18)))";
node [shape=record,color=blue];
subgraph cluster_Region_349932223 {
label = "R(2:(1:(2:(2:15|16)|(1:14)))|(2:17|18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1373798228 {
label = "IF [B:9:0x0020] THEN: R(1:(2:(2:15|16)|(1:14))) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0020|PHI: r2 \l  PHI: (r2v7 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r1.endIndex \>= 0) == true) goto L_0x0022\l}"];
subgraph cluster_Region_69507303 {
label = "R(1:(2:(2:15|16)|(1:14)))";
node [shape=record,color=blue];
subgraph cluster_Region_626631651 {
label = "R(2:(2:15|16)|(1:14))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2072686909 {
label = "IF [B:13:0x0029] THEN: R(2:15|16) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0029|PHI: r3 \l  PHI: (r3v10 boolean) = (r3v1 boolean), (r3v17 boolean) binds: [B:11:0x0026, B:12:0x0028] A[DONT_GENERATE, DONT_INLINE, REMOVE]\l|if ((r1.endIndex \>= r1.startIndex ? true : r3) != true) goto L_0x002c\l}"];
subgraph cluster_Region_1830767493 {
label = "R(2:15|16)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002c}"];
Node_16 [shape=record,label="{16\:\ 0x0054|throw new java.lang.IllegalArgumentException((\"endIndex should be not less than startIndex, but was \" + r1.endIndex + \" \< \" + r1.startIndex).toString())\l}"];
}
}
subgraph cluster_Region_801472941 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x002b|RETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_260495122 {
label = "R(2:17|18)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0055}"];
Node_18 [shape=record,label="{18\:\ 0x0073|throw new java.lang.IllegalArgumentException((\"endIndex should be non\-negative, but is \" + r1.endIndex).toString())\l}"];
}
}
}
}
subgraph cluster_Region_1739074490 {
label = "R(2:19|20)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0074}"];
Node_20 [shape=record,label="{20\:\ 0x0092|throw new java.lang.IllegalArgumentException((\"startIndex should be non\-negative, but is \" + r1.startIndex).toString())\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0012}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0014}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0016}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0019}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001b}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001d}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0022}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0026}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0028}"];
MethodNode[shape=record,label="{public void kotlin.sequences.SubSequence.\<init\>((r1v0 'this' kotlin.sequences.SubSequence A[IMMUTABLE_TYPE, THIS]), (r2v0 kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , \lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lkotlin\/sequences\/Sequence\<, +TT;\>;II)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_4 -> Node_19[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_17[style=dashed];
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
}

