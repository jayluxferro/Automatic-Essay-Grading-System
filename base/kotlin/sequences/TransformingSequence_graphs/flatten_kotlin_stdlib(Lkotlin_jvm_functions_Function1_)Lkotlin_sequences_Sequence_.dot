digraph "CFG forkotlin.sequences.TransformingSequence.flatten$kotlin_stdlib(Lkotlin\/jvm\/functions\/Function1;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r4, \"iterator\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|RETURN\l|return new kotlin.sequences.FlatteningSequence\<\>(r3.sequence, r3.transformer, r4)\l}"];
MethodNode[shape=record,label="{public final kotlin.sequences.Sequence\<E\> kotlin.sequences.TransformingSequence.flatten$kotlin_stdlib((r3v0 'this' kotlin.sequences.TransformingSequence A[IMMUTABLE_TYPE, THIS]), (r4v0 kotlin.jvm.functions.Function1\<? super R, ? extends java.util.Iterator\<? extends E\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<E:, Ljava\/lang\/Object;, \>(, Lkotlin\/jvm\/functions\/Function1\<, \-TR;+, Ljava\/util\/Iterator\<, +TE;\>;\>;), Lkotlin\/sequences\/Sequence\<, TE;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

