digraph "CFG forkotlin.sequences.TransformingSequence.flatten$kotlin_stdlib(Lkotlin\/jvm\/functions\/Function1;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"iterator\" \l0x0002: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: NEW_INSTANCE  (r0 I:kotlin.sequences.FlatteningSequence) =  kotlin.sequences.FlatteningSequence \l0x0007: IGET  (r1 I:kotlin.sequences.Sequence\<T\>) = (r3 I:kotlin.sequences.TransformingSequence) kotlin.sequences.TransformingSequence.sequence kotlin.sequences.Sequence \l0x0009: IGET  (r2 I:kotlin.jvm.functions.Function1\<T, R\>) = (r3 I:kotlin.sequences.TransformingSequence) kotlin.sequences.TransformingSequence.transformer kotlin.jvm.functions.Function1 \l0x000b: INVOKE  \l  (r0 I:kotlin.sequences.FlatteningSequence)\l  (r1 I:kotlin.sequences.Sequence)\l  (r2 I:kotlin.jvm.functions.Function1)\l  (r4 I:kotlin.jvm.functions.Function1)\l kotlin.sequences.FlatteningSequence.\<init\>(kotlin.sequences.Sequence, kotlin.jvm.functions.Function1, kotlin.jvm.functions.Function1):void type: DIRECT \l0x000e: CHECK_CAST  (r0 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN  (r0 I:kotlin.sequences.Sequence\<E\>) \l}"];
MethodNode[shape=record,label="{public final kotlin.sequences.Sequence\<E\> kotlin.sequences.TransformingSequence.flatten$kotlin_stdlib((r3 'this' I:kotlin.sequences.TransformingSequence A[IMMUTABLE_TYPE, THIS]), (r4 I:kotlin.jvm.functions.Function1\<? super R, ? extends java.util.Iterator\<? extends E\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<E:, Ljava\/lang\/Object;, \>(, Lkotlin\/jvm\/functions\/Function1\<, \-TR;+, Ljava\/util\/Iterator\<, +TE;\>;\>;), Lkotlin\/sequences\/Sequence\<, TE;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

