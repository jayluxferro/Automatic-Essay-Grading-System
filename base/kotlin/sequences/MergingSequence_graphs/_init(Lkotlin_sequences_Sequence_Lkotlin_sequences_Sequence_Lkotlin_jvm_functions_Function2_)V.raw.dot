digraph "CFG forkotlin.sequences.MergingSequence.\<init\>(Lkotlin\/sequences\/Sequence;Lkotlin\/sequences\/Sequence;Lkotlin\/jvm\/functions\/Function2;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"sequence1\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"sequence2\" \l0x0007: INVOKE  (r3 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: CONST_STR  (r0 I:java.lang.String) =  \"transform\" \l0x000c: INVOKE  (r4 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000f: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0012: IPUT  \l  (r2 I:kotlin.sequences.Sequence\<T1\>)\l  (r1 I:kotlin.sequences.MergingSequence)\l kotlin.sequences.MergingSequence.sequence1 kotlin.sequences.Sequence \l0x0014: IPUT  \l  (r3 I:kotlin.sequences.Sequence\<T2\>)\l  (r1 I:kotlin.sequences.MergingSequence)\l kotlin.sequences.MergingSequence.sequence2 kotlin.sequences.Sequence \l0x0016: IPUT  \l  (r4 I:kotlin.jvm.functions.Function2\<T1, T2, V\>)\l  (r1 I:kotlin.sequences.MergingSequence)\l kotlin.sequences.MergingSequence.transform kotlin.jvm.functions.Function2 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{public void kotlin.sequences.MergingSequence.\<init\>((r1 'this' I:kotlin.sequences.MergingSequence A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.sequences.Sequence\<? extends T1\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.sequences.Sequence\<? extends T2\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:kotlin.jvm.functions.Function2\<? super T1, ? super T2, ? extends V\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lkotlin\/sequences\/Sequence\<, +TT1;\>;, Lkotlin\/sequences\/Sequence\<, +TT2;\>;, Lkotlin\/jvm\/functions\/Function2\<, \-TT1;\-TT2;+TV;\>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

