digraph "CFG forkotlin.sequences.MergingSequence$iterator$1.hasNext()Z" {
subgraph cluster_Region_1629742216 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|RETURN\l|return r1.iterator1.hasNext() && r1.iterator2.hasNext()\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000e|REMOVE\lADDED_TO_REGION\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010|SYNTHETIC\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0012|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{public boolean kotlin.sequences.MergingSequence$iterator$1.hasNext((r1v0 'this' kotlin.sequences.MergingSequence$iterator$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
}

