digraph "CFG forkotlin.sequences.MergingSequence$iterator$1.\<init\>(Lkotlin\/sequences\/MergingSequence;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r2 I:kotlin.sequences.MergingSequence)\l  (r1 I:kotlin.sequences.MergingSequence$iterator$1)\l kotlin.sequences.MergingSequence$iterator$1.this$0 kotlin.sequences.MergingSequence \l0x0002: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r0 I:kotlin.sequences.Sequence) = (r2 I:kotlin.sequences.MergingSequence) kotlin.sequences.MergingSequence.access$getSequence1$p(kotlin.sequences.MergingSequence):kotlin.sequences.Sequence type: STATIC \l0x0009: INVOKE  (r0 I:java.util.Iterator) = (r0 I:kotlin.sequences.Sequence) kotlin.sequences.Sequence.iterator():java.util.Iterator type: INTERFACE \l0x000d: IPUT  \l  (r0 I:java.util.Iterator\<T1\>)\l  (r1 I:kotlin.sequences.MergingSequence$iterator$1)\l kotlin.sequences.MergingSequence$iterator$1.iterator1 java.util.Iterator \l0x000f: INVOKE  (r2 I:kotlin.sequences.Sequence) = (r2 I:kotlin.sequences.MergingSequence) kotlin.sequences.MergingSequence.access$getSequence2$p(kotlin.sequences.MergingSequence):kotlin.sequences.Sequence type: STATIC \l0x0013: INVOKE  (r2 I:java.util.Iterator) = (r2 I:kotlin.sequences.Sequence) kotlin.sequences.Sequence.iterator():java.util.Iterator type: INTERFACE \l0x0017: IPUT  \l  (r2 I:java.util.Iterator\<T2\>)\l  (r1 I:kotlin.sequences.MergingSequence$iterator$1)\l kotlin.sequences.MergingSequence$iterator$1.iterator2 java.util.Iterator \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: RETURN   \l}"];
MethodNode[shape=record,label="{void kotlin.sequences.MergingSequence$iterator$1.\<init\>((r1 'this' I:kotlin.sequences.MergingSequence$iterator$1 A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.sequences.MergingSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

