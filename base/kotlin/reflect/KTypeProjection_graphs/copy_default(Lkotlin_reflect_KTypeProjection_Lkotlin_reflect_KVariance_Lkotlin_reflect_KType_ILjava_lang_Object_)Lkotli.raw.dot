digraph "CFG forkotlin.reflect.KTypeProjection.copy$default(Lkotlin\/reflect\/KTypeProjection;Lkotlin\/reflect\/KVariance;Lkotlin\/reflect\/KType;ILjava\/lang\/Object;)Lkotlin\/reflect\/KTypeProjection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r1 I:kotlin.reflect.KVariance) = (r0 I:kotlin.reflect.KTypeProjection) kotlin.reflect.KTypeProjection.variance kotlin.reflect.KVariance \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: IGET  (r2 I:kotlin.reflect.KType) = (r0 I:kotlin.reflect.KTypeProjection) kotlin.reflect.KTypeProjection.type kotlin.reflect.KType \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: INVOKE  (r0 I:kotlin.reflect.KTypeProjection) = \l  (r0 I:kotlin.reflect.KTypeProjection)\l  (r1 I:kotlin.reflect.KVariance)\l  (r2 I:kotlin.reflect.KType)\l kotlin.reflect.KTypeProjection.copy(kotlin.reflect.KVariance, kotlin.reflect.KType):kotlin.reflect.KTypeProjection type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: RETURN  (r0 I:kotlin.reflect.KTypeProjection) \l}"];
MethodNode[shape=record,label="{public static \/* bridge *\/ \/* synthetic *\/ kotlin.reflect.KTypeProjection kotlin.reflect.KTypeProjection.copy$default((r0 I:kotlin.reflect.KTypeProjection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:kotlin.reflect.KVariance A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.reflect.KType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

