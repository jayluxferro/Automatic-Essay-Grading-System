digraph "CFG forkotlin.reflect.KTypeProjection.copy(Lkotlin\/reflect\/KVariance;Lkotlin\/reflect\/KType;)Lkotlin\/reflect\/KTypeProjection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:kotlin.reflect.KTypeProjection) =  kotlin.reflect.KTypeProjection \l0x0002: INVOKE  \l  (r0 I:kotlin.reflect.KTypeProjection)\l  (r2 I:kotlin.reflect.KVariance)\l  (r3 I:kotlin.reflect.KType)\l kotlin.reflect.KTypeProjection.\<init\>(kotlin.reflect.KVariance, kotlin.reflect.KType):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r0 I:kotlin.reflect.KTypeProjection) \l}"];
MethodNode[shape=record,label="{public final kotlin.reflect.KTypeProjection kotlin.reflect.KTypeProjection.copy((r1 'this' I:kotlin.reflect.KTypeProjection A[IMMUTABLE_TYPE, THIS]), (r2 I:kotlin.reflect.KVariance A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.reflect.KType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

