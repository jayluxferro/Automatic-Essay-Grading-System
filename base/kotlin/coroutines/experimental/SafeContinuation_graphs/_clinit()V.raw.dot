digraph "CFG forkotlin.coroutines.experimental.SafeContinuation.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:kotlin.coroutines.experimental.SafeContinuation$Companion) =  kotlin.coroutines.experimental.SafeContinuation$Companion \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  \l  (r0 I:kotlin.coroutines.experimental.SafeContinuation$Companion)\l  (r1 I:kotlin.jvm.internal.DefaultConstructorMarker)\l kotlin.coroutines.experimental.SafeContinuation.Companion.\<init\>(kotlin.jvm.internal.DefaultConstructorMarker):void type: DIRECT \l0x0006: SPUT  \l  (r0 I:kotlin.coroutines.experimental.SafeContinuation$Companion)\l kotlin.coroutines.experimental.SafeContinuation.Companion kotlin.coroutines.experimental.SafeContinuation$Companion \l0x0008: NEW_INSTANCE  (r0 I:java.lang.Object) =  java.lang.Object \l0x000a: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x000d: SPUT  (r0 I:java.lang.Object) kotlin.coroutines.experimental.SafeContinuation.UNDECIDED java.lang.Object \l0x000f: NEW_INSTANCE  (r0 I:java.lang.Object) =  java.lang.Object \l0x0011: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0014: SPUT  (r0 I:java.lang.Object) kotlin.coroutines.experimental.SafeContinuation.RESUMED java.lang.Object \l0x0016: CONST_CLASS  (r0 I:java.lang.Class\<kotlin.coroutines.experimental.SafeContinuation\>) =  kotlin.coroutines.experimental.SafeContinuation.class \l0x0018: CONST_CLASS  (r1 I:java.lang.Class\<java.lang.Object\>) =  java.lang.Object.class \l0x001a: CONST_STR  (r2 I:java.lang.String) =  \"result\" \l0x001c: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater) = \l  (r0 I:java.lang.Class)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l java.util.concurrent.atomic.AtomicReferenceFieldUpdater.newUpdater(java.lang.Class, java.lang.Class, java.lang.String):java.util.concurrent.atomic.AtomicReferenceFieldUpdater type: STATIC \l0x0020: SPUT  \l  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater\<kotlin.coroutines.experimental.SafeContinuation\<?\>, java.lang.Object\>)\l kotlin.coroutines.experimental.SafeContinuation.RESULT java.util.concurrent.atomic.AtomicReferenceFieldUpdater \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{static void kotlin.coroutines.experimental.SafeContinuation.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

