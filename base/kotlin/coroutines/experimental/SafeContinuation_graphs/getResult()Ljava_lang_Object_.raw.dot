digraph "CFG forkotlin.coroutines.experimental.SafeContinuation.getResult()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r3 I:kotlin.coroutines.experimental.SafeContinuation) kotlin.coroutines.experimental.SafeContinuation.result java.lang.Object \l0x0002: SGET  (r1 I:java.lang.Object) =  kotlin.coroutines.experimental.SafeContinuation.UNDECIDED java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: SGET  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater\<kotlin.coroutines.experimental.SafeContinuation\<?\>, java.lang.Object\>) =  kotlin.coroutines.experimental.SafeContinuation.RESULT java.util.concurrent.atomic.AtomicReferenceFieldUpdater \l0x0008: SGET  (r1 I:java.lang.Object) =  kotlin.coroutines.experimental.SafeContinuation.UNDECIDED java.lang.Object \l0x000a: INVOKE  (r2 I:java.lang.Object) =  kotlin.coroutines.experimental.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object type: STATIC \l0x000e: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.concurrent.atomic.AtomicReferenceFieldUpdater)\l  (r3 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l java.util.concurrent.atomic.AtomicReferenceFieldUpdater.compareAndSet(java.lang.Object, java.lang.Object, java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: INVOKE  (r0 I:java.lang.Object) =  kotlin.coroutines.experimental.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: RETURN  (r0 I:java.lang.Object) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IGET  (r0 I:java.lang.Object) = (r3 I:kotlin.coroutines.experimental.SafeContinuation) kotlin.coroutines.experimental.SafeContinuation.result java.lang.Object \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: SGET  (r1 I:java.lang.Object) =  kotlin.coroutines.experimental.SafeContinuation.RESUMED java.lang.Object \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0024 \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: INVOKE  (r0 I:java.lang.Object) =  kotlin.coroutines.experimental.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: RETURN  (r0 I:java.lang.Object) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) kotlin.coroutines.experimental.SafeContinuation$Fail \l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0029 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: RETURN  (r0 I:java.lang.Object) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|0x0029: CHECK_CAST  (r0 I:kotlin.coroutines.experimental.SafeContinuation$Fail) = (kotlin.coroutines.experimental.SafeContinuation$Fail) (r0 I:?[OBJECT, ARRAY]) \l0x002b: INVOKE  (r0 I:java.lang.Throwable) = (r0 I:kotlin.coroutines.experimental.SafeContinuation$Fail) kotlin.coroutines.experimental.SafeContinuation.Fail.getException():java.lang.Throwable type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x002f|0x002f: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.coroutines.experimental.SafeContinuation.getResult((r3 'this' I:kotlin.coroutines.experimental.SafeContinuation A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[BUILD, kotlin.PublishedApi, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
}

