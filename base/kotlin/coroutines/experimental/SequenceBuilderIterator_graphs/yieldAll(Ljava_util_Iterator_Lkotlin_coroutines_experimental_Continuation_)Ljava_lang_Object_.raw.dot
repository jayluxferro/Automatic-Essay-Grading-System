digraph "CFG forkotlin.coroutines.experimental.SequenceBuilderIterator.yieldAll(Ljava\/util\/Iterator;Lkotlin\/coroutines\/experimental\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: SGET  (r2 I:kotlin.Unit) =  kotlin.Unit.INSTANCE kotlin.Unit \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN  (r2 I:java.lang.Object) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IPUT  \l  (r2 I:java.util.Iterator\<? extends T\>)\l  (r1 I:kotlin.coroutines.experimental.SequenceBuilderIterator)\l kotlin.coroutines.experimental.SequenceBuilderIterator.nextIterator java.util.Iterator \l0x000b: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000c: IPUT  \l  (r2 I:int)\l  (r1 I:kotlin.coroutines.experimental.SequenceBuilderIterator)\l kotlin.coroutines.experimental.SequenceBuilderIterator.state int \l0x000e: INVOKE  (r2 I:kotlin.coroutines.experimental.Continuation) = (r3 I:kotlin.coroutines.experimental.Continuation) kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics.normalizeContinuation(kotlin.coroutines.experimental.Continuation):kotlin.coroutines.experimental.Continuation type: STATIC \l0x0012: INVOKE  \l  (r1 I:kotlin.coroutines.experimental.SequenceBuilderIterator)\l  (r2 I:kotlin.coroutines.experimental.Continuation)\l kotlin.coroutines.experimental.SequenceBuilderIterator.setNextStep(kotlin.coroutines.experimental.Continuation):void type: VIRTUAL \l0x0015: INVOKE  (r2 I:java.lang.Object) =  kotlin.coroutines.experimental.intrinsics.IntrinsicsKt.getCOROUTINE_SUSPENDED():java.lang.Object type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: RETURN  (r2 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public java.lang.Object kotlin.coroutines.experimental.SequenceBuilderIterator.yieldAll((r1 'this' I:kotlin.coroutines.experimental.SequenceBuilderIterator A[IMMUTABLE_TYPE, THIS]), (r2 I:java.util.Iterator\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.coroutines.experimental.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Iterator\<, +TT;\>;, Lkotlin\/coroutines\/experimental\/Continuation\<, \-, Lkotlin\/Unit;, \>;), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

