digraph "CFG forkotlin.coroutines.experimental.SequenceBuilderIterator.exceptionalState()Ljava\/lang\/Throwable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r3 I:kotlin.coroutines.experimental.SequenceBuilderIterator)\l kotlin.coroutines.experimental.SequenceBuilderIterator.state int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[4, 5] t:[0x002a, 0x0020] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0007: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0009: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000c: CONST_STR  (r2 I:java.lang.String) =  \"Unexpected state of the iterator: \" \l0x000e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0011: IGET  (r2 I:int) = \l  (r3 I:kotlin.coroutines.experimental.SequenceBuilderIterator)\l kotlin.coroutines.experimental.SequenceBuilderIterator.state int \l0x0013: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0016: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001a: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l0x001d: CHECK_CAST  (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0022: CONST_STR  (r1 I:java.lang.String) =  \"Iterator has failed.\" \l0x0024: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l0x0027: CHECK_CAST  (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException \l0x002c: INVOKE  (r0 I:java.util.NoSuchElementException) java.util.NoSuchElementException.\<init\>():void type: DIRECT \l0x002f: CHECK_CAST  (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: RETURN  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private final java.lang.Throwable kotlin.coroutines.experimental.SequenceBuilderIterator.exceptionalState((r3 'this' I:kotlin.coroutines.experimental.SequenceBuilderIterator A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_4;
Node_2 -> Node_5;
Node_3 -> Node_5;
Node_4 -> Node_5;
}

