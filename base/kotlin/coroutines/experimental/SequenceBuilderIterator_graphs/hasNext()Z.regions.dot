digraph "CFG forkotlin.coroutines.experimental.SequenceBuilderIterator.hasNext()Z" {
subgraph cluster_Region_2001403313 {
label = "R(1:(4:1|14|(1:16)(0)|17))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1846334410 {
label = "LOOP:0: (4:1|14|(1:16)(0)|17)";
node [shape=record,color=blue];
subgraph cluster_Region_647672388 {
label = "R(4:1|14|(1:16)(0)|17)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1860280809 {
label = "Switch: 4, default: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|switch(r3.state) \{\l    case 0: goto L_0x0025;\l    case 1: goto L_0x000f;\l    case 2: goto L_0x000e;\l    case 3: goto L_0x000e;\l    case 4: goto L_0x000c;\l    default: goto L_0x0007;\l\}\l}"];
subgraph cluster_Region_1564022439 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_InsnContainer_2109657028 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1453415750 {
label = "R(3:6|(1:8)|(2:13|1)(2:11|12))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|java.util.Iterator\<? extends T\> java.util.Iterator\<? extends T\> r0 = r3.nextIterator\l}"];
subgraph cluster_IfRegion_1617350164 {
label = "IF [B:7:0x0011] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0011|if (r0 == null) goto L_0x0013\l}"];
subgraph cluster_Region_1973735738 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0013|kotlin.jvm.internal.Intrinsics.throwNpe()\l}"];
}
}
subgraph cluster_IfRegion_320686286 {
label = "IF [B:10:0x001a] THEN: R(2:13|1) ELSE: R(2:11|12)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001a|if (r0.hasNext() != true) goto L_0x0020\l}"];
subgraph cluster_Region_371837070 {
label = "R(2:13|1)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0020|r3.nextIterator = null\l}"];
Node_InsnContainer_53508290 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_142301071 {
label = "R(2:11|12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001c|r3.state = 2\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|RETURN\l|return true\l}"];
}
}
}
subgraph cluster_Region_1535470267 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|RETURN\l|return true\l}"];
}
subgraph cluster_Region_53523709 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|RETURN\l|return false\l}"];
}
subgraph cluster_Region_54934065 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000b|throw exceptionalState()\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0025|r3.state = 5\lkotlin.coroutines.experimental.Continuation\<? super kotlin.Unit\> kotlin.coroutines.experimental.Continuation\<? super kotlin.Unit\> r0 = r3.nextStep\l}"];
subgraph cluster_IfRegion_792383580 {
label = "IF [B:15:0x002a] THEN: R(1:16) ELSE: R(0)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002a|if (r0 == null) goto L_0x002c\l}"];
subgraph cluster_Region_1372836601 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002c|kotlin.jvm.internal.Intrinsics.throwNpe()\l}"];
}
subgraph cluster_Region_561232586 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_17 [shape=record,label="{17\:\ 0x002f|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:17:0x002f\l|r3.nextStep = null\lr0.resume(kotlin.Unit.INSTANCE)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:17:0x002f\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0007}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0016}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0007|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x000c|SYNTHETIC\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x000e|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x001c|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x002f|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x002f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean kotlin.coroutines.experimental.SequenceBuilderIterator.hasNext((r3v0 'this' kotlin.coroutines.experimental.SequenceBuilderIterator A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_6;
Node_1 -> Node_14;
Node_1 -> Node_18;
Node_1 -> Node_19;
Node_1 -> Node_20;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_13;
Node_10 -> Node_21[style=dashed];
Node_13 -> Node_14;
Node_11 -> Node_12;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_23[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_9 -> Node_10;
Node_18 -> Node_2;
Node_19 -> Node_4;
Node_20 -> Node_5;
Node_21 -> Node_11;
Node_22 -> Node_17;
Node_23 -> Node_17;
}

