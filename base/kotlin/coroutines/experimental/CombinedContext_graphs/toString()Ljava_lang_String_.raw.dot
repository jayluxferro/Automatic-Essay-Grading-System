digraph "CFG forkotlin.coroutines.experimental.CombinedContext.toString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0002: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0005: CONST_STR  (r1 I:java.lang.String) =  \"[\" \l0x0007: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"\" \l0x000c: SGET  (r2 I:kotlin.coroutines.experimental.CombinedContext$toString$1) =  kotlin.coroutines.experimental.CombinedContext$toString$1.INSTANCE kotlin.coroutines.experimental.CombinedContext$toString$1 \l0x000e: CHECK_CAST  (r2 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r2 I:?[OBJECT, ARRAY]) \l0x0010: INVOKE  (r1 I:java.lang.Object) = \l  (r3 I:kotlin.coroutines.experimental.CombinedContext)\l  (r1 I:java.lang.Object)\l  (r2 I:kotlin.jvm.functions.Function2)\l kotlin.coroutines.experimental.CombinedContext.fold(java.lang.Object, kotlin.jvm.functions.Function2):java.lang.Object type: VIRTUAL \l0x0014: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l0x0016: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: CONST_STR  (r1 I:java.lang.String) =  \"]\" \l0x001b: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|0x0022: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String kotlin.coroutines.experimental.CombinedContext.toString((r3 'this' I:kotlin.coroutines.experimental.CombinedContext A[IMMUTABLE_TYPE, THIS]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

