digraph "CFG forkotlin.coroutines.experimental.CombinedContext.containsAll(Lkotlin\/coroutines\/experimental\/CombinedContext;)Z" {
subgraph cluster_Region_1309680493 {
label = "R(2:(2:3|(1:5)(1:(1:8)(1:10)))|2)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1610538356 {
label = "LOOP:0: (2:3|(1:5)(1:(1:8)(1:10)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (contains(r2.element) != false) goto L_0x000a\l}"];
subgraph cluster_Region_1617901296 {
label = "R(2:3|(1:5)(1:(1:8)(1:10)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|kotlin.coroutines.experimental.CoroutineContext kotlin.coroutines.experimental.CoroutineContext r2 = r2.left\l}"];
subgraph cluster_IfRegion_2073799352 {
label = "IF [B:4:0x000e] THEN: R(1:5) ELSE: R(1:(1:8)(1:10))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if ((r2 instanceof kotlin.coroutines.experimental.CombinedContext) == true) goto L_0x0010\l}"];
subgraph cluster_Region_1747845327 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:5:0x0010\l|kotlin.coroutines.experimental.CombinedContext r2 = (kotlin.coroutines.experimental.CombinedContext) r2\l}"];
}
subgraph cluster_Region_1059629416 {
label = "R(1:(1:8)(1:10)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_284477988 {
label = "IF [B:6:0x0013] THEN: R(1:8) ELSE: R(1:10) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0013|if (r2 != null) goto L_0x0015\l}"];
subgraph cluster_Region_154515068 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001b|RETURN\l|return contains((kotlin.coroutines.experimental.CoroutineContext.Element) r2)\l}"];
}
subgraph cluster_Region_644489206 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0023|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.coroutines.experimental.CoroutineContext.Element\")\l}"];
}
}
}
}
}
}
Node_2 [shape=record,label="{2\:\ 0x0008|RETURN\l|return false\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lPHI: r2 \l  PHI: (r2v1 kotlin.coroutines.experimental.CombinedContext) = (r2v0 kotlin.coroutines.experimental.CombinedContext), (r2v7 kotlin.coroutines.experimental.CombinedContext) binds: [B:0:0x0000, B:5:0x0010] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:0:0x0000\-\>B:5:0x0010\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0015}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001c}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0008|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0013|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final boolean kotlin.coroutines.experimental.CombinedContext.containsAll((r1v0 'this' kotlin.coroutines.experimental.CombinedContext A[IMMUTABLE_TYPE, THIS]), (r2v0 kotlin.coroutines.experimental.CombinedContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_3;
Node_1 -> Node_11[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_12[style=dashed];
Node_5 -> Node_0;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_0 -> Node_1;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_2;
Node_12 -> Node_6;
}

