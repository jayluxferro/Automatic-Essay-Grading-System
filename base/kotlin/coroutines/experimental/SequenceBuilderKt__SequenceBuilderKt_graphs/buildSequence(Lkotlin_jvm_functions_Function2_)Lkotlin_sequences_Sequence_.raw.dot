digraph "CFG forkotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt.buildSequence(Lkotlin\/jvm\/functions\/Function2;)Lkotlin\/sequences\/Sequence;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"builderAction\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: NEW_INSTANCE  (r0 I:kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1) =  kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1 \l0x0007: INVOKE  \l  (r0 I:kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1)\l  (r1 I:kotlin.jvm.functions.Function2)\l kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt$buildSequence$$inlined$Sequence$1.\<init\>(kotlin.jvm.functions.Function2):void type: DIRECT \l0x000a: CHECK_CAST  (r0 I:kotlin.sequences.Sequence) = (kotlin.sequences.Sequence) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN  (r0 I:kotlin.sequences.Sequence\<T\>) \l}"];
MethodNode[shape=record,label="{public static final kotlin.sequences.Sequence\<T\> kotlin.coroutines.experimental.SequenceBuilderKt__SequenceBuilderKt.buildSequence((r1 I:kotlin.jvm.functions.Function2\<? super kotlin.coroutines.experimental.SequenceBuilder\<? super T\>, ? super kotlin.coroutines.experimental.Continuation\<? super kotlin.Unit\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/jvm\/functions\/Function2\<, \-, Lkotlin\/coroutines\/experimental\/SequenceBuilder\<, \-TT;\>;\-, Lkotlin\/coroutines\/experimental\/Continuation\<, \-, Lkotlin\/Unit;, \>;+, Ljava\/lang\/Object;, \>;), Lkotlin\/sequences\/Sequence\<, TT;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

