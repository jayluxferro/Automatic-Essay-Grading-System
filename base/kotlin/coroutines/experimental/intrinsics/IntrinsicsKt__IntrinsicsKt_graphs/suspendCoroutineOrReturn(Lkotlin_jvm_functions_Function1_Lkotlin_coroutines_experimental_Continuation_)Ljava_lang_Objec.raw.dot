digraph "CFG forkotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsKt.suspendCoroutineOrReturn(Lkotlin\/jvm\/functions\/Function1;Lkotlin\/coroutines\/experimental\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r0 I:int) kotlin.jvm.internal.InlineMarker.mark(int):void type: STATIC \l0x0004: INVOKE  (r2 I:kotlin.coroutines.experimental.Continuation) = (r2 I:kotlin.coroutines.experimental.Continuation) kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics.normalizeContinuation(kotlin.coroutines.experimental.Continuation):kotlin.coroutines.experimental.Continuation type: STATIC \l0x0008: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:kotlin.jvm.functions.Function1)\l  (r2 I:java.lang.Object)\l kotlin.jvm.functions.Function1.invoke(java.lang.Object):java.lang.Object type: INTERFACE \l0x000c: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: INVOKE  (r2 I:int) kotlin.jvm.internal.InlineMarker.mark(int):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN  (r1 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsKt.suspendCoroutineOrReturn((r1 I:kotlin.jvm.functions.Function1\<? super kotlin.coroutines.experimental.Continuation\<? super T\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.coroutines.experimental.Continuation\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/jvm\/functions\/Function1\<, \-, Lkotlin\/coroutines\/experimental\/Continuation\<, \-TT;\>;+, Ljava\/lang\/Object;, \>;, Lkotlin\/coroutines\/experimental\/Continuation\<, \-TT;\>;), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

