digraph "CFG forkotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.startCoroutineUninterceptedOrReturn(Lkotlin\/jvm\/functions\/Function1;Lkotlin\/coroutines\/experimental\/Continuation;)Ljava\/lang\/Object;" {
subgraph cluster_Region_91327720 {
label = "R(1:(2:(1:2)|(1:4)))";
node [shape=record,color=blue];
subgraph cluster_Region_412909990 {
label = "R(2:(1:2)|(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_427001029 {
label = "IF [B:0:0x0000] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r1 != null) goto L_0x0002\l}"];
subgraph cluster_Region_1970506048 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000d|RETURN\l|return ((kotlin.jvm.functions.Function1) kotlin.jvm.internal.TypeIntrinsics.beforeCheckcastToFunctionOfArity(r1, 1)).invoke(r2)\l}"];
}
}
subgraph cluster_Region_2087476682 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type (kotlin.coroutines.experimental.Continuation\<T\>) \-\> kotlin.Any?\")\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000e}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.startCoroutineUninterceptedOrReturn((r1v0 kotlin.jvm.functions.Function1\<? super kotlin.coroutines.experimental.Continuation\<? super T\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 kotlin.coroutines.experimental.Continuation\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], \lAnnotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/jvm\/functions\/Function1\<, \-, Lkotlin\/coroutines\/experimental\/Continuation\<, \-TT;\>;+, Ljava\/lang\/Object;, \>;, Lkotlin\/coroutines\/experimental\/Continuation\<, \-TT;\>;), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3[style=dashed];
Node_1 -> Node_2;
Node_3 -> Node_4;
}

