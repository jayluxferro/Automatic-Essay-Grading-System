digraph "CFG forkotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.createCoroutineUnchecked(Lkotlin\/jvm\/functions\/Function1;Lkotlin\/coroutines\/experimental\/Continuation;)Lkotlin\/coroutines\/experimental\/Continuation;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"$receiver\" \l0x0002: INVOKE  (r1 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: CONST_STR  (r0 I:java.lang.String) =  \"completion\" \l0x0007: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x000a: INSTANCE_OF  (r0 I:boolean) = (r1 I:?[OBJECT, ARRAY]) kotlin.coroutines.experimental.jvm.internal.CoroutineImpl \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: NEW_INSTANCE  (r0 I:kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1) =  kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1 \l0x0010: INVOKE  \l  (r0 I:kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1)\l  (r2 I:kotlin.coroutines.experimental.Continuation)\l  (r1 I:kotlin.jvm.functions.Function1)\l  (r2 I:kotlin.coroutines.experimental.Continuation)\l kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1.\<init\>(kotlin.coroutines.experimental.Continuation, kotlin.jvm.functions.Function1, kotlin.coroutines.experimental.Continuation):void type: DIRECT \l0x0013: INVOKE  (r1 I:kotlin.coroutines.experimental.CoroutineContext) = (r2 I:kotlin.coroutines.experimental.Continuation) kotlin.coroutines.experimental.Continuation.getContext():kotlin.coroutines.experimental.CoroutineContext type: INTERFACE \l0x0017: CHECK_CAST  (r0 I:kotlin.coroutines.experimental.Continuation) = (kotlin.coroutines.experimental.Continuation) (r0 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  (r1 I:kotlin.coroutines.experimental.Continuation) = \l  (r1 I:kotlin.coroutines.experimental.CoroutineContext)\l  (r0 I:kotlin.coroutines.experimental.Continuation)\l kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics.interceptContinuationIfNeeded(kotlin.coroutines.experimental.CoroutineContext, kotlin.coroutines.experimental.Continuation):kotlin.coroutines.experimental.Continuation type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: CHECK_CAST  (r1 I:kotlin.coroutines.experimental.jvm.internal.CoroutineImpl) = (kotlin.coroutines.experimental.jvm.internal.CoroutineImpl) (r1 I:?[OBJECT, ARRAY]) \l0x0020: INVOKE  (r1 I:kotlin.coroutines.experimental.Continuation) = \l  (r1 I:kotlin.coroutines.experimental.jvm.internal.CoroutineImpl)\l  (r2 I:kotlin.coroutines.experimental.Continuation)\l kotlin.coroutines.experimental.jvm.internal.CoroutineImpl.create(kotlin.coroutines.experimental.Continuation):kotlin.coroutines.experimental.Continuation type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: CHECK_CAST  (r1 I:kotlin.coroutines.experimental.jvm.internal.CoroutineImpl) = (kotlin.coroutines.experimental.jvm.internal.CoroutineImpl) (r1 I:?[OBJECT, ARRAY]) \l0x0028: INVOKE  (r1 I:kotlin.coroutines.experimental.Continuation) = \l  (r1 I:kotlin.coroutines.experimental.jvm.internal.CoroutineImpl)\l kotlin.coroutines.experimental.jvm.internal.CoroutineImpl.getFacade():kotlin.coroutines.experimental.Continuation type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: RETURN  \l  (r1 I:kotlin.coroutines.experimental.Continuation\<kotlin.Unit\>)\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: NEW_INSTANCE  (r1 I:kotlin.TypeCastException) =  kotlin.TypeCastException \l0x002f: CONST_STR  (r2 I:java.lang.String) =  \"null cannot be cast to non\-null type kotlin.coroutines.experimental.jvm.internal.CoroutineImpl\" \l0x0031: INVOKE  (r1 I:kotlin.TypeCastException), (r2 I:java.lang.String) kotlin.TypeCastException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static final kotlin.coroutines.experimental.Continuation\<kotlin.Unit\> kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.createCoroutineUnchecked((r1 I:kotlin.jvm.functions.Function1\<? super kotlin.coroutines.experimental.Continuation\<? super T\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.coroutines.experimental.Continuation\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/jvm\/functions\/Function1\<, \-, Lkotlin\/coroutines\/experimental\/Continuation\<, \-TT;\>;+, Ljava\/lang\/Object;, \>;, Lkotlin\/coroutines\/experimental\/Continuation\<, \-TT;\>;), Lkotlin\/coroutines\/experimental\/Continuation\<, Lkotlin\/Unit;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

