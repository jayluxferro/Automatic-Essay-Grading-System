digraph "CFG forkotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.createCoroutineUnchecked(Lkotlin\/jvm\/functions\/Function1;Lkotlin\/coroutines\/experimental\/Continuation;)Lkotlin\/coroutines\/experimental\/Continuation;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r1, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"completion\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if ((r1 instanceof kotlin.coroutines.experimental.jvm.internal.CoroutineImpl) != false) goto L_0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt$createCoroutineUnchecked$$inlined$buildContinuationByInvokeCall$IntrinsicsKt__IntrinsicsJvmKt$1 r0 = new kotlin.coroutines.experimental.intrinsics.IntrinsicsJvm(r2, r1, r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|kotlin.coroutines.experimental.Continuation r1 = ((kotlin.coroutines.experimental.jvm.internal.CoroutineImpl) r1).create(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|if (r1 == null) goto L_0x002d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026}"];
Node_6 [shape=record,label="{6\:\ 0x002d}"];
Node_7 [shape=record,label="{7\:\ 0x0034|throw new kotlin.TypeCastException(\"null cannot be cast to non\-null type kotlin.coroutines.experimental.jvm.internal.CoroutineImpl\")\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return ((kotlin.coroutines.experimental.jvm.internal.CoroutineImpl) r1).getFacade()\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.coroutines.experimental.jvm.internal.CoroutineIntrinsics.interceptContinuationIfNeeded(r2.getContext(), r0)\l}"];
MethodNode[shape=record,label="{public static final kotlin.coroutines.experimental.Continuation\<kotlin.Unit\> kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.createCoroutineUnchecked((r1v0 kotlin.jvm.functions.Function1\<? super kotlin.coroutines.experimental.Continuation\<? super T\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 kotlin.coroutines.experimental.Continuation\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T:, Ljava\/lang\/Object;, \>(, Lkotlin\/jvm\/functions\/Function1\<, \-, Lkotlin\/coroutines\/experimental\/Continuation\<, \-TT;\>;+, Ljava\/lang\/Object;, \>;, Lkotlin\/coroutines\/experimental\/Continuation\<, \-TT;\>;), Lkotlin\/coroutines\/experimental\/Continuation\<, Lkotlin\/Unit;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
}

