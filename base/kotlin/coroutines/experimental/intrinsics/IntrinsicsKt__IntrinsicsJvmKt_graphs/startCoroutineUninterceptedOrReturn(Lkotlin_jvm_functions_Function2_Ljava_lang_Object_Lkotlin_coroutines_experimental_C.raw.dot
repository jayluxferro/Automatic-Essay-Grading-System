digraph "CFG forkotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.startCoroutineUninterceptedOrReturn(Lkotlin\/jvm\/functions\/Function2;Ljava\/lang\/Object;Lkotlin\/coroutines\/experimental\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0003: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.lang.Object), (r0 I:int) kotlin.jvm.internal.TypeIntrinsics.beforeCheckcastToFunctionOfArity(java.lang.Object, int):java.lang.Object type: STATIC \l0x0007: CHECK_CAST  (r1 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r1 I:?[OBJECT, ARRAY]) \l0x0009: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:kotlin.jvm.functions.Function2)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l kotlin.jvm.functions.Function2.invoke(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: RETURN  (r1 I:java.lang.Object) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: NEW_INSTANCE  (r1 I:kotlin.TypeCastException) =  kotlin.TypeCastException \l0x0010: CONST_STR  (r2 I:java.lang.String) =  \"null cannot be cast to non\-null type (R, kotlin.coroutines.experimental.Continuation\<T\>) \-\> kotlin.Any?\" \l0x0012: INVOKE  (r1 I:kotlin.TypeCastException), (r2 I:java.lang.String) kotlin.TypeCastException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static final java.lang.Object kotlin.coroutines.experimental.intrinsics.IntrinsicsKt__IntrinsicsJvmKt.startCoroutineUninterceptedOrReturn((r1 I:kotlin.jvm.functions.Function2\<? super R, ? super kotlin.coroutines.experimental.Continuation\<? super T\>, ? extends java.lang.Object\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:R A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:kotlin.coroutines.experimental.Continuation\<? super T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], , \lAnnotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[BUILD, kotlin.internal.InlineOnly, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<R:, Ljava\/lang\/Object;, T:, Ljava\/lang\/Object;, \>(, Lkotlin\/jvm\/functions\/Function2\<, \-TR;\-, Lkotlin\/coroutines\/experimental\/Continuation\<, \-TT;\>;+, Ljava\/lang\/Object;, \>;TR;, Lkotlin\/coroutines\/experimental\/Continuation\<, \-TT;\>;), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
}

