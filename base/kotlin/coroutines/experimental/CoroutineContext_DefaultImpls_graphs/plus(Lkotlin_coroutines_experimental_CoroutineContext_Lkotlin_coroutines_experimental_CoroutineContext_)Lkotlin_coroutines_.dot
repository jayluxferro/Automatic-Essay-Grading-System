digraph "CFG forkotlin.coroutines.experimental.CoroutineContext.DefaultImpls.plus(Lkotlin\/coroutines\/experimental\/CoroutineContext;Lkotlin\/coroutines\/experimental\/CoroutineContext;)Lkotlin\/coroutines\/experimental\/CoroutineContext;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"context\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r2 != kotlin.coroutines.experimental.EmptyCoroutineContext.INSTANCE) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (kotlin.coroutines.experimental.CoroutineContext) r2.fold(r1, kotlin.coroutines.experimental.CoroutineContext$plus$1.INSTANCE)\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\l|return r1\l}"];
MethodNode[shape=record,label="{public static kotlin.coroutines.experimental.CoroutineContext kotlin.coroutines.experimental.CoroutineContext.DefaultImpls.plus((r1v0 kotlin.coroutines.experimental.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 kotlin.coroutines.experimental.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
}

