digraph "CFG forkotlin.coroutines.experimental.CoroutineContext.DefaultImpls.plus(Lkotlin\/coroutines\/experimental\/CoroutineContext;Lkotlin\/coroutines\/experimental\/CoroutineContext;)Lkotlin\/coroutines\/experimental\/CoroutineContext;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"context\" \l0x0002: INVOKE  (r2 I:java.lang.Object), (r0 I:java.lang.String) kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(java.lang.Object, java.lang.String):void type: STATIC \l0x0005: SGET  (r0 I:kotlin.coroutines.experimental.EmptyCoroutineContext) =  kotlin.coroutines.experimental.EmptyCoroutineContext.INSTANCE kotlin.coroutines.experimental.EmptyCoroutineContext \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: SGET  (r0 I:kotlin.coroutines.experimental.CoroutineContext$plus$1) =  kotlin.coroutines.experimental.CoroutineContext$plus$1.INSTANCE kotlin.coroutines.experimental.CoroutineContext$plus$1 \l0x000c: CHECK_CAST  (r0 I:kotlin.jvm.functions.Function2) = (kotlin.jvm.functions.Function2) (r0 I:?[OBJECT, ARRAY]) \l0x000e: INVOKE  (r1 I:java.lang.Object) = \l  (r2 I:kotlin.coroutines.experimental.CoroutineContext)\l  (r1 I:java.lang.Object)\l  (r0 I:kotlin.jvm.functions.Function2)\l kotlin.coroutines.experimental.CoroutineContext.fold(java.lang.Object, kotlin.jvm.functions.Function2):java.lang.Object type: INTERFACE \l0x0012: CHECK_CAST  (r1 I:kotlin.coroutines.experimental.CoroutineContext) = (kotlin.coroutines.experimental.CoroutineContext) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: RETURN  (r1 I:kotlin.coroutines.experimental.CoroutineContext) \l}"];
MethodNode[shape=record,label="{public static kotlin.coroutines.experimental.CoroutineContext kotlin.coroutines.experimental.CoroutineContext.DefaultImpls.plus((r1 I:kotlin.coroutines.experimental.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.coroutines.experimental.CoroutineContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_4;
}

