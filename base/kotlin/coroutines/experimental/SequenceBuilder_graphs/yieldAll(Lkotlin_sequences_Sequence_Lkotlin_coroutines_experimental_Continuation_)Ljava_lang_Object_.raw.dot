digraph "CFG forkotlin.coroutines.experimental.SequenceBuilder.yieldAll(Lkotlin\/sequences\/Sequence;Lkotlin\/coroutines\/experimental\/Continuation;)Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.util.Iterator) = (r1 I:kotlin.sequences.Sequence) kotlin.sequences.Sequence.iterator():java.util.Iterator type: INTERFACE \l0x0004: INVOKE  (r1 I:java.lang.Object) = \l  (r0 I:kotlin.coroutines.experimental.SequenceBuilder)\l  (r1 I:java.util.Iterator)\l  (r2 I:kotlin.coroutines.experimental.Continuation)\l kotlin.coroutines.experimental.SequenceBuilder.yieldAll(java.util.Iterator, kotlin.coroutines.experimental.Continuation):java.lang.Object type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN  (r1 I:java.lang.Object) \l}"];
MethodNode[shape=record,label="{public final java.lang.Object kotlin.coroutines.experimental.SequenceBuilder.yieldAll((r0 'this' I:kotlin.coroutines.experimental.SequenceBuilder A[IMMUTABLE_TYPE, THIS]), (r1 I:kotlin.sequences.Sequence\<? extends T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:kotlin.coroutines.experimental.Continuation\<? super kotlin.Unit\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lkotlin\/sequences\/Sequence\<, +TT;\>;, Lkotlin\/coroutines\/experimental\/Continuation\<, \-, Lkotlin\/Unit;, \>;), Ljava\/lang\/Object;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

