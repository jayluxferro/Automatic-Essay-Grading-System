digraph "CFG forkotlin.ranges.LongProgression.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r9 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.isEmpty():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: CONST  (r0 I:?[int, float, short, byte, char]) = (31 ?[int, float, short, byte, char]) \l0x000a: CAST  (r0 I:long) = (long) (r0 I:int) \l0x000b: IGET  (r2 I:long) = (r9 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.first long \l0x000d: IGET  (r4 I:long) = (r9 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.first long \l0x000f: CONST  (r6 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0011: ARITH  (r4 I:long) = (r4 I:long) \>\>\> (r6 I:long) \l0x0012: ARITH  (r2 I:long) = (r2 I:long) ^ (r4 I:long) \l0x0013: ARITH  (r2 I:long) = (r2 I:long) * (r0 I:long) \l0x0015: IGET  (r4 I:long) = (r9 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.last long \l0x0017: IGET  (r7 I:long) = (r9 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.last long \l0x0019: ARITH  (r7 I:long) = (r7 I:long) \>\>\> (r6 I:long) \l0x001a: ARITH  (r4 I:long) = (r4 I:long) ^ (r7 I:long) \l0x001b: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) \l0x001c: ARITH  (r0 I:long) = (r0 I:long) * (r2 I:long) \l0x001e: IGET  (r2 I:long) = (r9 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.step long \l0x0020: IGET  (r4 I:long) = (r9 I:kotlin.ranges.LongProgression) kotlin.ranges.LongProgression.step long \l0x0022: ARITH  (r4 I:long) = (r4 I:long) \>\>\> (r6 I:long) \l0x0023: ARITH  (r2 I:long) = (r2 I:long) ^ (r4 I:long) \l0x0024: ARITH  (r0 I:long) = (r0 I:long) + (r2 I:long) \l0x0025: CAST  (r0 I:int) = (int) (r0 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int kotlin.ranges.LongProgression.hashCode((r9 'this' I:kotlin.ranges.LongProgression A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

