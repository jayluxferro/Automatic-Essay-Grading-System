digraph "CFG forkotlin.ranges.LongProgression.\<init\>(JJJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if ((r7 \> 0 ? 1 : (r7 == 0 ? 0 : \-1)) == 0) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|r2.first = r3\lr2.last = kotlin.internal.ProgressionUtilKt.getProgressionLastElement(r3, r5, r7)\lr2.step = r7\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014}"];
Node_5 [shape=record,label="{5\:\ 0x001d|throw new java.lang.IllegalArgumentException(\"Step must be non\-zero\")\l}"];
MethodNode[shape=record,label="{public void kotlin.ranges.LongProgression.\<init\>((r2v0 'this' kotlin.ranges.LongProgression A[IMMUTABLE_TYPE, THIS]), (r3v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

