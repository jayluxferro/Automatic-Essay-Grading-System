digraph "CFG forkotlin.ranges.IntProgressionIterator.nextInt()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r3.next\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 != r3.finalElement) goto L_0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r3.hasNext == false) goto L_0x000e\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|r3.hasNext = false\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e}"];
Node_6 [shape=record,label="{6\:\ 0x0015|throw new java.util.NoSuchElementException()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|r3.next = r3.next + r3.step\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{public int kotlin.ranges.IntProgressionIterator.nextInt((r3v0 'this' kotlin.ranges.IntProgressionIterator A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

