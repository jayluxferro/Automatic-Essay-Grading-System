digraph "CFG forkotlin.ranges.IntProgressionIterator.nextInt()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:kotlin.ranges.IntProgressionIterator) kotlin.ranges.IntProgressionIterator.next int \l0x0002: IGET  (r1 I:int) = (r3 I:kotlin.ranges.IntProgressionIterator) kotlin.ranges.IntProgressionIterator.finalElement int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r1 I:boolean) = (r3 I:kotlin.ranges.IntProgressionIterator) kotlin.ranges.IntProgressionIterator.hasNext boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: IPUT  (r1 I:boolean), (r3 I:kotlin.ranges.IntProgressionIterator) kotlin.ranges.IntProgressionIterator.hasNext boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException \l0x0010: INVOKE  (r0 I:java.util.NoSuchElementException) java.util.NoSuchElementException.\<init\>():void type: DIRECT \l0x0013: CHECK_CAST  (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IGET  (r1 I:int) = (r3 I:kotlin.ranges.IntProgressionIterator) kotlin.ranges.IntProgressionIterator.next int \l0x0018: IGET  (r2 I:int) = (r3 I:kotlin.ranges.IntProgressionIterator) kotlin.ranges.IntProgressionIterator.step int \l0x001a: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x001b: IPUT  (r1 I:int), (r3 I:kotlin.ranges.IntProgressionIterator) kotlin.ranges.IntProgressionIterator.next int \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int kotlin.ranges.IntProgressionIterator.nextInt((r3 'this' I:kotlin.ranges.IntProgressionIterator A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

