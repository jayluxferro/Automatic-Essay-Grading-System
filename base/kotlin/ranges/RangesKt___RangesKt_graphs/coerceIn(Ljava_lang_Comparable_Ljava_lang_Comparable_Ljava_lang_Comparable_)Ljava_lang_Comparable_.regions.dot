digraph "CFG forkotlin.ranges.RangesKt___RangesKt.coerceIn(Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;Ljava\/lang\/Comparable;)Ljava\/lang\/Comparable;" {
subgraph cluster_Region_684376649 {
label = "R(2:0|(1:(2:(1:17)|(1:16)))(1:(2:11|12)(1:(1:7)(1:(1:10)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\l}"];
subgraph cluster_IfRegion_2111686033 {
label = "IF [B:1:0x0005, B:2:0x0007] THEN: R(1:(2:(1:17)|(1:16))) ELSE: R(1:(2:11|12)(1:(1:7)(1:(1:10))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r3 == null) goto L_0x0043\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|ADDED_TO_REGION\l|if (r4 == null) goto L_0x0043\l}"];
subgraph cluster_Region_386221340 {
label = "R(1:(2:(1:17)|(1:16)))";
node [shape=record,color=blue];
subgraph cluster_Region_898954722 {
label = "R(2:(1:17)|(1:16))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1261613459 {
label = "IF [B:13:0x0043, B:15:0x0049] THEN: R(1:17) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0043|if (r3 == null) goto L_0x004c\l}"];
Node_15 [shape=record,label="{15\:\ 0x0049|ADDED_TO_REGION\l|if (r2.compareTo(r3) \>= 0) goto L_0x004c\l}"];
subgraph cluster_Region_1490031657 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x004c|RETURN\l|return (r4 == null \|\| r2.compareTo(r4) \<= 0) ? r2 : r4\l}"];
}
}
subgraph cluster_Region_1698727818 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x004b|RETURN\l|return r3\l}"];
}
}
}
subgraph cluster_Region_2003391781 {
label = "R(1:(2:11|12)(1:(1:7)(1:(1:10)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_696896626 {
label = "IF [B:4:0x000d] THEN: R(2:11|12) ELSE: R(1:(1:7)(1:(1:10))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r3.compareTo(r4) \> 0) goto L_0x001d\l}"];
subgraph cluster_Region_1906369590 {
label = "R(2:11|12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001d}"];
Node_12 [shape=record,label="{12\:\ 0x0042|throw new java.lang.IllegalArgumentException(\"Cannot coerce value to an empty range: maximum \" + r4 + \" is less than minimum \" + r3 + '.')\l}"];
}
subgraph cluster_Region_280838495 {
label = "R(1:(1:7)(1:(1:10))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_759234064 {
label = "IF [B:6:0x0013] THEN: R(1:7) ELSE: R(1:(1:10)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0013|if (r2.compareTo(r3) \< 0) goto L_0x0015\l}"];
subgraph cluster_Region_1254968726 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|RETURN\l|return r3\l}"];
}
subgraph cluster_Region_1010471341 {
label = "R(1:(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1182243020 {
label = "IF [B:9:0x001a] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001a|if (r2.compareTo(r4) \> 0) goto L_0x001c\l}"];
subgraph cluster_Region_1827491436 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001c|RETURN\l|return r4\l}"];
}
}
}
}
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0009}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0045}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x004e}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0052|REMOVE\lADDED_TO_REGION\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0054}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0055}"];
MethodNode[shape=record,label="{public static final T kotlin.ranges.RangesKt___RangesKt.coerceIn((r2v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}], Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Ljava\/lang\/Comparable\<, \-TT;\>;\>(TT;TT;TT;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_21;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_11 -> Node_12;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_9 -> Node_10;
Node_9 -> Node_21[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_14 -> Node_15;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_21;
}

