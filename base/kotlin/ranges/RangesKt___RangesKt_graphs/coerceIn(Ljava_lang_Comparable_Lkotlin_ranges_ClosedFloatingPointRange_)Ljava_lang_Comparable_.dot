digraph "CFG forkotlin.ranges.RangesKt___RangesKt.coerceIn(Ljava\/lang\/Comparable;Lkotlin\/ranges\/ClosedFloatingPointRange;)Ljava\/lang\/Comparable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r2, \"$receiver\")\lkotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"range\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r3.isEmpty() != false) goto L_0x0042\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010}"];
Node_3 [shape=record,label="{3\:\ 0x0018|if (r3.lessThanOrEquals(r2, r3.getStart()) == false) goto L_0x0029\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a}"];
Node_5 [shape=record,label="{5\:\ 0x0022|if (r3.lessThanOrEquals(r3.getStart(), r2) != false) goto L_0x0029\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024}"];
Node_7 [shape=record,label="{7\:\ 0x0029}"];
Node_8 [shape=record,label="{8\:\ 0x0031|if (r3.lessThanOrEquals(r3.getEndInclusive(), r2) == false) goto L_?\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033}"];
Node_10 [shape=record,label="{10\:\ 0x003b|if (r3.lessThanOrEquals(r2, r3.getEndInclusive()) != false) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x003d}"];
Node_12 [shape=record,label="{12\:\ 0x0042|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Cannot coerce value to an empty range: \")\lr0.append(r3)\lr0.append('.')\l}"];
Node_13 [shape=record,label="{13\:\ 0x005f|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r3.getEndInclusive()\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return r3.getStart()\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public static final T kotlin.ranges.RangesKt___RangesKt.coerceIn((r2v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.ranges.ClosedFloatingPointRange\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[BUILD, org.jetbrains.annotations.NotNull, \{\}], Annotation[BUILD, kotlin.SinceKotlin, \{version=1.1\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Ljava\/lang\/Comparable\<, \-TT;\>;\>(TT;, Lkotlin\/ranges\/ClosedFloatingPointRange\<, TT;\>;)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_14;
Node_12 -> Node_13;
}

