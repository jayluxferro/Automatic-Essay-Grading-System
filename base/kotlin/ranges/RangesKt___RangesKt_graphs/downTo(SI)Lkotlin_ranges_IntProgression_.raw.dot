digraph "CFG forkotlin.ranges.RangesKt___RangesKt.downTo(SI)Lkotlin\/ranges\/IntProgression;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:kotlin.ranges.IntProgression$Companion) =  kotlin.ranges.IntProgression.Companion kotlin.ranges.IntProgression$Companion \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0003: INVOKE  (r2 I:kotlin.ranges.IntProgression) = \l  (r0 I:kotlin.ranges.IntProgression$Companion)\l  (r2 I:int)\l  (r3 I:int)\l  (r1 I:int)\l kotlin.ranges.IntProgression.Companion.fromClosedRange(int, int, int):kotlin.ranges.IntProgression type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: RETURN  (r2 I:kotlin.ranges.IntProgression) \l}"];
MethodNode[shape=record,label="{public static final kotlin.ranges.IntProgression kotlin.ranges.RangesKt___RangesKt.downTo((r2 I:short A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

