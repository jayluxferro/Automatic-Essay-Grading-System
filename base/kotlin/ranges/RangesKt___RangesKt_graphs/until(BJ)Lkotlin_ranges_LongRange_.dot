digraph "CFG forkotlin.ranges.RangesKt___RangesKt.until(BJ)Lkotlin\/ranges\/LongRange;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if ((r5 \> Long.MIN_VALUE ? 1 : (r5 == Long.MIN_VALUE ? 0 : \-1)) \> 0) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000c|RETURN\l|return kotlin.ranges.LongRange.Companion.getEMPTY()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d}"];
Node_5 [shape=record,label="{5\:\ 0x0016|RETURN\l|return new kotlin.ranges.LongRange((long) r4, r5 \- 1)\l}"];
MethodNode[shape=record,label="{public static final kotlin.ranges.LongRange kotlin.ranges.RangesKt___RangesKt.until((r4v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

