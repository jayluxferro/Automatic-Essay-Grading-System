digraph "CFG forkotlin.ranges.RangesKt___RangesKt.toIntExactOrNull(F)Ljava\/lang\/Integer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|float r1 = (float) Integer.MAX_VALUE\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if ((r2 \> ((float) Integer.MIN_VALUE) ? 1 : (r2 == ((float) Integer.MIN_VALUE) ? 0 : \-1)) \< 0) goto L_0x0015\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if ((r2 \> r1 ? 1 : (r2 == r1 ? 0 : \-1)) \> 0) goto L_0x0015\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0015|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Integer.valueOf((int) r2)\l}"];
MethodNode[shape=record,label="{public static final java.lang.Integer kotlin.ranges.RangesKt___RangesKt.toIntExactOrNull((r2v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
}

