digraph "CFG forkotlin.ranges.RangesKt___RangesKt.coerceIn(ILkotlin\/ranges\/ClosedRange;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|kotlin.jvm.internal.Intrinsics.checkParameterIsNotNull(r3, \"range\")\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if ((r3 instanceof kotlin.ranges.ClosedFloatingPointRange) == false) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x001b|RETURN\l|return ((java.lang.Number) kotlin.ranges.RangesKt.coerceIn(java.lang.Integer.valueOf(r2), (kotlin.ranges.ClosedFloatingPointRange) r3)).intValue()\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c}"];
Node_5 [shape=record,label="{5\:\ 0x0020|if (r3.isEmpty() != false) goto L_0x0050\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022}"];
Node_7 [shape=record,label="{7\:\ 0x002c|if (r2 \>= r3.getStart().intValue()) goto L_0x0039\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e}"];
Node_9 [shape=record,label="{9\:\ 0x0039}"];
Node_10 [shape=record,label="{10\:\ 0x0043|if (r2 \<= r3.getEndInclusive().intValue()) goto L_?\l}"];
Node_11 [shape=record,label="{11\:\ 0x0045}"];
Node_12 [shape=record,label="{12\:\ 0x0050|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Cannot coerce value to an empty range: \")\lr0.append(r3)\lr0.append('.')\l}"];
Node_13 [shape=record,label="{13\:\ 0x006d|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r3.getEndInclusive().intValue()\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return r3.getStart().intValue()\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
MethodNode[shape=record,label="{public static final int kotlin.ranges.RangesKt___RangesKt.coerceIn((r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 kotlin.ranges.ClosedRange\<java.lang.Integer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | , Annotation[BUILD, org.jetbrains.annotations.NotNull, \{\}]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I, Lkotlin\/ranges\/ClosedRange\<, Ljava\/lang\/Integer;, \>;)I]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_14;
Node_12 -> Node_13;
}

