digraph "CFG forkotlin.ranges.RangesKt___RangesKt.coerceIn(FFF)F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r3 \> r4 ? 1 : (r3 == r4 ? 0 : \-1)) \> 0) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if ((r2 \> r3 ? 1 : (r2 == r3 ? 0 : \-1)) \>= 0) goto L_0x0009\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|RETURN\l|return r3\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009}"];
Node_6 [shape=record,label="{6\:\ 0x000b|if ((r2 \> r4 ? 1 : (r2 == r4 ? 0 : \-1)) \<= 0) goto L_0x000e\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|RETURN\l|return r4\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|RETURN\l|return r2\l}"];
Node_9 [shape=record,label="{9\:\ 0x000f|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Cannot coerce value to an empty range: maximum \")\lr0.append(r4)\lr0.append(\" is less than minimum \")\lr0.append(r3)\lr0.append('.')\l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
MethodNode[shape=record,label="{public static final float kotlin.ranges.RangesKt___RangesKt.coerceIn((r2v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_9 -> Node_10;
}

