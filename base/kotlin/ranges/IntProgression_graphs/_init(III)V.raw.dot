digraph "CFG forkotlin.ranges.IntProgression.\<init\>(III)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IPUT  (r1 I:int), (r0 I:kotlin.ranges.IntProgression) kotlin.ranges.IntProgression.first int \l0x0007: INVOKE  (r1 I:int) = (r1 I:int), (r2 I:int), (r3 I:int) kotlin.internal.ProgressionUtilKt.getProgressionLastElement(int, int, int):int type: STATIC \l0x000b: IPUT  (r1 I:int), (r0 I:kotlin.ranges.IntProgression) kotlin.ranges.IntProgression.last int \l0x000d: IPUT  (r3 I:int), (r0 I:kotlin.ranges.IntProgression) kotlin.ranges.IntProgression.step int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0012: CONST_STR  (r2 I:java.lang.String) =  \"Step must be non\-zero\" \l0x0014: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l0x0017: CHECK_CAST  (r1 I:java.lang.Throwable) = (java.lang.Throwable) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void kotlin.ranges.IntProgression.\<init\>((r0 'this' I:kotlin.ranges.IntProgression A[IMMUTABLE_TYPE, THIS]), (r1 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

