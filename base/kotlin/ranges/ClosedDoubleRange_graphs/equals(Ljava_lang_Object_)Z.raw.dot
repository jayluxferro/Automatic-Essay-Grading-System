digraph "CFG forkotlin.ranges.ClosedDoubleRange.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r5 I:?[OBJECT, ARRAY]) kotlin.ranges.ClosedDoubleRange \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:boolean) = (r4 I:kotlin.ranges.ClosedDoubleRange) kotlin.ranges.ClosedDoubleRange.isEmpty():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x000b: CHECK_CAST  (r0 I:kotlin.ranges.ClosedDoubleRange) = (kotlin.ranges.ClosedDoubleRange) (r0 I:?[OBJECT, ARRAY]) \l0x000d: INVOKE  (r0 I:boolean) = (r0 I:kotlin.ranges.ClosedDoubleRange) kotlin.ranges.ClosedDoubleRange.isEmpty():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r0 I:double) = (r4 I:kotlin.ranges.ClosedDoubleRange) kotlin.ranges.ClosedDoubleRange._start double \l0x0015: CHECK_CAST  (r5 I:kotlin.ranges.ClosedDoubleRange) = (kotlin.ranges.ClosedDoubleRange) (r5 I:?[OBJECT, ARRAY]) \l0x0017: IGET  (r2 I:double) = (r5 I:kotlin.ranges.ClosedDoubleRange) kotlin.ranges.ClosedDoubleRange._start double \l0x0019: CMP_G  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: IGET  (r0 I:double) = (r4 I:kotlin.ranges.ClosedDoubleRange) kotlin.ranges.ClosedDoubleRange._endInclusive double \l0x001f: IGET  (r2 I:double) = (r5 I:kotlin.ranges.ClosedDoubleRange) kotlin.ranges.ClosedDoubleRange._endInclusive double \l0x0021: CMP_G  (r5 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0027 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean kotlin.ranges.ClosedDoubleRange.equals((r4 'this' I:kotlin.ranges.ClosedDoubleRange A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, org.jetbrains.annotations.Nullable, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
}

