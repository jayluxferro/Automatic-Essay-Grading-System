digraph "CFG forkotlin.ranges.LongProgressionIterator.nextLong()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = (r6 I:kotlin.ranges.LongProgressionIterator) kotlin.ranges.LongProgressionIterator.next long \l0x0002: IGET  (r2 I:long) = (r6 I:kotlin.ranges.LongProgressionIterator) kotlin.ranges.LongProgressionIterator.finalElement long \l0x0004: CMP_L  (r2 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r2 I:boolean) = (r6 I:kotlin.ranges.LongProgressionIterator) kotlin.ranges.LongProgressionIterator.hasNext boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0010 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: IPUT  \l  (r2 I:boolean)\l  (r6 I:kotlin.ranges.LongProgressionIterator)\l kotlin.ranges.LongProgressionIterator.hasNext boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: NEW_INSTANCE  (r0 I:java.util.NoSuchElementException) =  java.util.NoSuchElementException \l0x0012: INVOKE  (r0 I:java.util.NoSuchElementException) java.util.NoSuchElementException.\<init\>():void type: DIRECT \l0x0015: CHECK_CAST  (r0 I:java.lang.Throwable) = (java.lang.Throwable) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IGET  (r2 I:long) = (r6 I:kotlin.ranges.LongProgressionIterator) kotlin.ranges.LongProgressionIterator.next long \l0x001a: IGET  (r4 I:long) = (r6 I:kotlin.ranges.LongProgressionIterator) kotlin.ranges.LongProgressionIterator.step long \l0x001c: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) \l0x001d: IPUT  (r2 I:long), (r6 I:kotlin.ranges.LongProgressionIterator) kotlin.ranges.LongProgressionIterator.next long \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{public long kotlin.ranges.LongProgressionIterator.nextLong((r6 'this' I:kotlin.ranges.LongProgressionIterator A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

