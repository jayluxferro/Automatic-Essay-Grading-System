digraph "CFG forkotlin.ranges.LongProgressionIterator.\<init\>(JJJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.step = r9\lr4.finalElement = r7\lr0 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|if ((r4.step \> 0 ? 1 : (r4.step == 0 ? 0 : \-1)) \<= 0) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if ((r5 \> r7 ? 1 : (r5 == r7 ? 0 : \-1)) \> 0) goto L_0x001c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|r0 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017}"];
Node_6 [shape=record,label="{6\:\ 0x0019|if ((r5 \> r7 ? 1 : (r5 == r7 ? 0 : \-1)) \< 0) goto L_0x001c\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v0 boolean), (r0v2 boolean), (r0v0 boolean) binds: [B:6:0x0019, B:4:0x0015, B:3:0x0013] A[DONT_GENERATE, DONT_INLINE]\l|r4.hasNext = r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|if (r4.hasNext == false) goto L_0x0023\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|long r5 = r4.finalElement\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|PHI: r5 \l  PHI: (r5v1 long) = (r5v0 long), (r5v2 long) binds: [B:8:0x0020, B:9:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|r4.next = r5\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void kotlin.ranges.LongProgressionIterator.\<init\>((r4v0 'this' kotlin.ranges.LongProgressionIterator A[IMMUTABLE_TYPE, THIS]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_4[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
}

