digraph "CFG forkotlin.ranges.ClosedRange.DefaultImpls.isEmpty(Lkotlin\/ranges\/ClosedRange;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Comparable) = (r1 I:kotlin.ranges.ClosedRange) kotlin.ranges.ClosedRange.getStart():java.lang.Comparable type: INTERFACE \l0x0004: INVOKE  (r1 I:java.lang.Comparable) = (r1 I:kotlin.ranges.ClosedRange) kotlin.ranges.ClosedRange.getEndInclusive():java.lang.Comparable type: INTERFACE \l0x0008: INVOKE  (r1 I:int) = (r0 I:java.lang.Comparable), (r1 I:java.lang.Object) java.lang.Comparable.compareTo(java.lang.Object):int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean kotlin.ranges.ClosedRange.DefaultImpls.isEmpty((r1 I:kotlin.ranges.ClosedRange\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[\<T::, Ljava\/lang\/Comparable\<, \-TT;\>;\>(, Lkotlin\/ranges\/ClosedRange\<, TT;\>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

