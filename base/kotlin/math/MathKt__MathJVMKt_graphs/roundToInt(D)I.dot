digraph "CFG forkotlin.math.MathKt__MathJVMKt.roundToInt(D)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (java.lang.Double.isNaN(r4) != false) goto L_0x001f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if ((r4 \> ((double) Integer.MAX_VALUE) ? 1 : (r4 == ((double) Integer.MAX_VALUE) ? 0 : \-1)) \<= 0) goto L_0x0011\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if ((r4 \> ((double) Integer.MIN_VALUE) ? 1 : (r4 == ((double) Integer.MIN_VALUE) ? 0 : \-1)) \>= 0) goto L_0x0019\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|SYNTHETIC\lRETURN\l|return Integer.MIN_VALUE\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019}"];
Node_8 [shape=record,label="{8\:\ 0x001f}"];
Node_9 [shape=record,label="{9\:\ 0x0028|throw new java.lang.IllegalArgumentException(\"Cannot round NaN value.\")\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (int) java.lang.Math.round(r4)\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return Integer.MAX_VALUE\l}"];
MethodNode[shape=record,label="{public static final int kotlin.math.MathKt__MathJVMKt.roundToInt((r4v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_11[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_10;
Node_8 -> Node_9;
}

