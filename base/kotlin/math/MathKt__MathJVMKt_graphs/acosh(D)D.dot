digraph "CFG forkotlin.math.MathKt__MathJVMKt.acosh(D)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double r0 = (double) 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if ((r6 \> r0 ? 1 : (r6 == r0 ? 0 : \-1)) \>= 0) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000d}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if ((r6 \> kotlin.math.Constants.upper_taylor_2_bound ? 1 : (r6 == kotlin.math.Constants.upper_taylor_2_bound ? 0 : \-1)) \<= 0) goto L_0x001b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013}"];
Node_6 [shape=record,label="{6\:\ 0x001b|double r2 = r6 \- r0\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|if ((r2 \> kotlin.math.Constants.taylor_n_bound ? 1 : (r2 == kotlin.math.Constants.taylor_n_bound ? 0 : \-1)) \< 0) goto L_0x0031\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024}"];
Node_9 [shape=record,label="{9\:\ 0x0031|double r6 = java.lang.Math.sqrt(r2)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|if ((r6 \> kotlin.math.Constants.taylor_2_bound ? 1 : (r6 == kotlin.math.Constants.taylor_2_bound ? 0 : \-1)) \< 0) goto L_0x0044\l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|double r6 = r6 \- (((r6 * r6) * r6) \/ ((double) 12))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|PHI: r6 \l  PHI: (r6v2 double) = (r6v1 double), (r6v4 double) binds: [B:10:0x0039, B:11:0x003b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r6 * java.lang.Math.sqrt(2.0d)\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return kotlin.jvm.internal.DoubleCompanionObject.INSTANCE.getNaN()\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Math.log(r6) + kotlin.math.Constants.LN2\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\l|return java.lang.Math.log(r6 + java.lang.Math.sqrt((r6 * r6) \- r0))\l}"];
MethodNode[shape=record,label="{public static final double kotlin.math.MathKt__MathJVMKt.acosh((r6v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

