digraph "CFG forkotlin.math.MathKt__MathJVMKt.atanh(D)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r4 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0004: SGET  (r2 I:double) =  kotlin.math.Constants.taylor_n_bound double \l0x0006: CMP_G  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:6:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r0 I:double) = (r4 I:double) java.lang.Math.abs(double):double type: STATIC \l0x000e: SGET  (r2 I:double) =  kotlin.math.Constants.taylor_2_bound double \l0x0010: CMP_L  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x001c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: ARITH  (r0 I:double) = (r4 I:double) * (r4 I:double) \l0x0016: ARITH  (r0 I:double) = (r0 I:double) * (r4 I:double) \l0x0018: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0019: CAST  (r2 I:double) = (double) (r2 I:int) \l0x001a: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x001b: ARITH  (r4 I:double) = (r4 I:double) + (r0 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: RETURN  (r4 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001e: CAST  (r0 I:double) = (double) (r0 I:int) \l0x001f: ARITH  (r2 I:double) = (r0 I:double) + (r4 I:double) \l0x0021: ARITH  (r0 I:double) = (r0 I:double) \- (r4 I:double) \l0x0022: ARITH  (r2 I:double) = (r2 I:double) \/ (r0 I:double) \l0x0023: INVOKE  (r4 I:double) = (r2 I:double) java.lang.Math.log(double):double type: STATIC \l0x0027: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0028: CAST  (r0 I:double) = (double) (r0 I:int) \l0x0029: ARITH  (r4 I:double) = (r4 I:double) \/ (r0 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: RETURN  (r4 I:double) \l}"];
MethodNode[shape=record,label="{public static final double kotlin.math.MathKt__MathJVMKt.atanh((r4 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

