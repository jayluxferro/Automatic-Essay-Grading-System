digraph "CFG forkotlin.math.MathKt__MathJVMKt.roundToInt(D)I" {
subgraph cluster_Region_1756915129 {
label = "R(1:(1:9)(1:(1:11)(1:(2:(1:6)|(1:10)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1496137765 {
label = "IF [B:1:0x0004] THEN: R(1:9) ELSE: R(1:(1:11)(1:(2:(1:6)|(1:10))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (java.lang.Double.isNaN(r4) != false) goto L_0x001f\l}"];
subgraph cluster_Region_1209824104 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0028|throw new java.lang.IllegalArgumentException(\"Cannot round NaN value.\")\l}"];
}
subgraph cluster_Region_1591029194 {
label = "R(1:(1:11)(1:(2:(1:6)|(1:10)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1978338820 {
label = "IF [B:3:0x000e] THEN: R(1:11) ELSE: R(1:(2:(1:6)|(1:10))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r4 \> ((double) Integer.MAX_VALUE)) goto L_?\l}"];
subgraph cluster_Region_1190413556 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return Integer.MAX_VALUE\l}"];
}
subgraph cluster_Region_1834547313 {
label = "R(1:(2:(1:6)|(1:10)))";
node [shape=record,color=blue];
subgraph cluster_Region_445920109 {
label = "R(2:(1:6)|(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_925009173 {
label = "IF [B:5:0x0014] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r4 \< ((double) Integer.MIN_VALUE)) goto L_0x0016\l}"];
subgraph cluster_Region_1393931489 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|SYNTHETIC\lRETURN\l|return Integer.MIN_VALUE\l}"];
}
}
subgraph cluster_Region_2032420226 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return (int) java.lang.Math.round(r4)\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0011}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001f}"];
MethodNode[shape=record,label="{public static final int kotlin.math.MathKt__MathJVMKt.roundToInt((r4v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, kotlin.SinceKotlin, \{version=1.2\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_7 -> Node_10;
Node_8 -> Node_9;
}

