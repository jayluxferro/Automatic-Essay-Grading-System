digraph "CFG fororg.metalev.multitouch.controller.MultiTouchController.\<init\>(Lorg\/metalev\/multitouch\/controller\/MultiTouchController$MultiTouchObjectCanvas;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:T)\l  (r1 I:org.metalev.multitouch.controller.MultiTouchController)\l org.metalev.multitouch.controller.MultiTouchController.selectedObject java.lang.Object \l0x0006: NEW_INSTANCE  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale) =  org.metalev.multitouch.controller.MultiTouchController$PositionAndScale \l0x0008: INVOKE  \l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.\<init\>():void type: DIRECT \l0x000b: IPUT  \l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l  (r1 I:org.metalev.multitouch.controller.MultiTouchController)\l org.metalev.multitouch.controller.MultiTouchController.mCurrXform org.metalev.multitouch.controller.MultiTouchController$PositionAndScale \l0x000d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: IPUT  \l  (r0 I:int)\l  (r1 I:org.metalev.multitouch.controller.MultiTouchController)\l org.metalev.multitouch.controller.MultiTouchController.mMode int \l0x0010: NEW_INSTANCE  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PointInfo) =  org.metalev.multitouch.controller.MultiTouchController$PointInfo \l0x0012: INVOKE  \l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PointInfo)\l org.metalev.multitouch.controller.MultiTouchController.PointInfo.\<init\>():void type: DIRECT \l0x0015: IPUT  \l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PointInfo)\l  (r1 I:org.metalev.multitouch.controller.MultiTouchController)\l org.metalev.multitouch.controller.MultiTouchController.mCurrPt org.metalev.multitouch.controller.MultiTouchController$PointInfo \l0x0017: NEW_INSTANCE  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PointInfo) =  org.metalev.multitouch.controller.MultiTouchController$PointInfo \l0x0019: INVOKE  \l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PointInfo)\l org.metalev.multitouch.controller.MultiTouchController.PointInfo.\<init\>():void type: DIRECT \l0x001c: IPUT  \l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PointInfo)\l  (r1 I:org.metalev.multitouch.controller.MultiTouchController)\l org.metalev.multitouch.controller.MultiTouchController.mPrevPt org.metalev.multitouch.controller.MultiTouchController$PointInfo \l0x001e: IPUT  \l  (r3 I:boolean)\l  (r1 I:org.metalev.multitouch.controller.MultiTouchController)\l org.metalev.multitouch.controller.MultiTouchController.handleSingleTouchEvents boolean \l0x0020: IPUT  \l  (r2 I:org.metalev.multitouch.controller.MultiTouchController$MultiTouchObjectCanvas\<T\>)\l  (r1 I:org.metalev.multitouch.controller.MultiTouchController)\l org.metalev.multitouch.controller.MultiTouchController.objectCanvas org.metalev.multitouch.controller.MultiTouchController$MultiTouchObjectCanvas \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.metalev.multitouch.controller.MultiTouchController.\<init\>((r1 'this' I:org.metalev.multitouch.controller.MultiTouchController A[IMMUTABLE_TYPE, THIS]), (r2 I:org.metalev.multitouch.controller.MultiTouchController$MultiTouchObjectCanvas\<T\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/metalev\/multitouch\/controller\/MultiTouchController$MultiTouchObjectCanvas\<, TT;\>;Z)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

