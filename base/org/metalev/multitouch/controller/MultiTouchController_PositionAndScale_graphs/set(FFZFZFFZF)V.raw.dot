digraph "CFG fororg.metalev.multitouch.controller.MultiTouchController.PositionAndScale.set(FFZFZFFZF)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r1 I:float)\l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.xOff float \l0x0002: IPUT  \l  (r2 I:float)\l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.yOff float \l0x0004: IPUT  \l  (r3 I:boolean)\l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.updateScale boolean \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CMP_L  (r3 I:int) = (r4 I:float), (r2 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IPUT  \l  (r4 I:float)\l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.scale float \l0x0011: IPUT  \l  (r5 I:boolean)\l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.updateScaleXY boolean \l0x0013: CMP_L  (r3 I:int) = (r6 I:float), (r2 I:float) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IPUT  \l  (r6 I:float)\l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.scaleX float \l0x001b: CMP_L  (r2 I:int) = (r7 I:float), (r2 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IPUT  \l  (r1 I:float)\l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.scaleY float \l0x0023: IPUT  \l  (r8 I:boolean)\l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.updateAngle boolean \l0x0025: IPUT  \l  (r9 I:float)\l  (r0 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.angle float \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.set((r0 'this' I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale A[IMMUTABLE_TYPE, THIS]), (r1 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11;
}

