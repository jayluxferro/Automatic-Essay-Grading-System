digraph "CFG fororg.metalev.multitouch.controller.MultiTouchController.PositionAndScale.set(FFZFZFFZF)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0.xOff = r1\lr0.yOff = r2\lr0.updateScale = r3\lr1 = 1.0f\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if ((r4 \> 0.0f ? 1 : (r4 == 0.0f ? 0 : \-1)) != 0) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|r4 = 1.0f\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|PHI: r4 \l  PHI: (r4v1 float) = (r4v0 float), (r4v2 float) binds: [B:1:0x000b, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|r0.scale = r4\lr0.updateScaleXY = r5\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|if ((r6 \> 0.0f ? 1 : (r6 == 0.0f ? 0 : \-1)) != 0) goto L_0x0019\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|r6 = 1.0f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|PHI: r6 \l  PHI: (r6v1 float) = (r6v0 float), (r6v2 float) binds: [B:4:0x0015, B:5:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|r0.scaleX = r6\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|if ((r7 \> 0.0f ? 1 : (r7 == 0.0f ? 0 : \-1)) != 0) goto L_0x0020\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|r1 = r7\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|PHI: r1 \l  PHI: (r1v2 float) = (r1v1 float), (r1v3 float) binds: [B:7:0x001d, B:8:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|r0.scaleY = r1\lr0.updateAngle = r8\lr0.angle = r9\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.set((r0v0 'this' org.metalev.multitouch.controller.MultiTouchController$PositionAndScale A[IMMUTABLE_TYPE, THIS]), (r1v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
}

