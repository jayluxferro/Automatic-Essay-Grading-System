digraph "CFG fororg.xmlpull.v1.XmlPullParserException.printStackTrace()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Throwable) = (r4 I:org.xmlpull.v1.XmlPullParserException) org.xmlpull.v1.XmlPullParserException.detail java.lang.Throwable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r4 I:java.lang.Exception) java.lang.Exception.printStackTrace():void type: SUPER \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: SGET  (r0 I:java.io.PrintStream) =  java.lang.System.err java.io.PrintStream \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|SYNTHETIC\lSplitter:B:5:0x000b\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000b\l|0x000b: SGET  (r1 I:java.io.PrintStream) =  java.lang.System.err java.io.PrintStream A[Catch:\{ all \-\> 0x002c \}, TRY_ENTER]\l0x000d: NEW_INSTANCE  (r2 I:java.lang.StringBuffer) =  java.lang.StringBuffer A[Catch:\{ all \-\> 0x002c \}]\l0x000f: INVOKE  (r2 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x002c \}]\l0x0012: INVOKE  (r3 I:java.lang.String) = (r4 I:java.lang.Exception) java.lang.Exception.getMessage():java.lang.String type: SUPER A[Catch:\{ all \-\> 0x002c \}]\l0x0016: INVOKE  (r2 I:java.lang.StringBuffer), (r3 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL A[Catch:\{ all \-\> 0x002c \}]\l0x0019: CONST_STR  (r3 I:java.lang.String) =  \"; nested exception is:\" A[Catch:\{ all \-\> 0x002c \}]\l0x001b: INVOKE  (r2 I:java.lang.StringBuffer), (r3 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL A[Catch:\{ all \-\> 0x002c \}]\l0x001e: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuffer) java.lang.StringBuffer.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x002c \}]\l0x0022: INVOKE  (r1 I:java.io.PrintStream), (r2 I:java.lang.String) java.io.PrintStream.println(java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x002c \}]\l0x0025: IGET  (r1 I:java.lang.Throwable) = (r4 I:org.xmlpull.v1.XmlPullParserException) org.xmlpull.v1.XmlPullParserException.detail java.lang.Throwable A[Catch:\{ all \-\> 0x002c \}]\l0x0027: INVOKE  (r1 I:java.lang.Throwable) java.lang.Throwable.printStackTrace():void type: VIRTUAL A[Catch:\{ all \-\> 0x002c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: RETURN   A[Catch:\{ all \-\> 0x002c \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|ExcHandler: all null\lSplitter:B:5:0x000b\l|0x002c: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002c \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002c \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.xmlpull.v1.XmlPullParserException.printStackTrace((r4 'this' I:org.xmlpull.v1.XmlPullParserException A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

