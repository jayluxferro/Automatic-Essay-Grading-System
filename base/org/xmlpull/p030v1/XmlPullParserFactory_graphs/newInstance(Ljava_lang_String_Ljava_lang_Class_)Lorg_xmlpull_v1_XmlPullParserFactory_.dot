digraph "CFG fororg.xmlpull.v1.XmlPullParserFactory.newInstance(Ljava\/lang\/String;Ljava\/lang\/Class;)Lorg\/xmlpull\/v1\/XmlPullParserFactory;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r13 != null) goto L_0x0004\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|java.lang.Class r13 = referenceContextClass\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|PHI: r13 \l  PHI: (r13v1 java.lang.Class) = (r13v0 java.lang.Class), (r13v12 java.lang.Class) binds: [B:0:0x0000, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r12 == null) goto L_0x002d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r12.length() == 0) goto L_0x002d\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d}"];
Node_7 [shape=record,label="{7\:\ 0x0013|if (\"DEFAULT\".equals(r12) == false) goto L_0x0016\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|java.lang.StringBuffer r13 = new java.lang.StringBuffer()\lr13.append(\"parameter classNames to newInstance() that contained '\")\lr13.append(r12)\lr13.append(\"'\")\ljava.lang.String r13 = r13.toString()\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d}"];
Node_10 [shape=record,label="{10\:\ 0x002f|SYNTHETIC\lSplitter:B:10:0x002f\l}"];
Node_11 [shape=record,label="{11\:\ ?|Catch:\{ Exception \-\> 0x00e8 \}\lSplitter:B:10:0x002f\l|java.io.InputStream r12 = r13.getResourceAsStream(RESOURCE_NAME)     \/\/ Catch:\{ Exception \-\> 0x00e8 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|Catch:\{ Exception \-\> 0x00e8 \}\l|if (r12 == null) goto L_0x00e0     \/\/ Catch:\{ Exception \-\> 0x00e8 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|Catch:\{ Exception \-\> 0x00e8 \}\l|java.lang.StringBuffer r13 = new java.lang.StringBuffer()     \/\/ Catch:\{ Exception \-\> 0x00e8 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|LOOP_START\lCatch:\{ Exception \-\> 0x00e8 \}\lLOOP:0: B:14:0x003a\-\>B:64:0x003a\l|int r1 = r12.read()     \/\/ Catch:\{ Exception \-\> 0x00e8 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|Catch:\{ Exception \-\> 0x00e8 \}\l|if (r1 \>= 0) goto L_0x00d6     \/\/ Catch:\{ Exception \-\> 0x00e8 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|Catch:\{ Exception \-\> 0x00e8 \}\l|r12.close()     \/\/ Catch:\{ Exception \-\> 0x00e8 \}\ljava.lang.String r12 = r13.toString()     \/\/ Catch:\{ Exception \-\> 0x00e8 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|java.lang.StringBuffer r13 = new java.lang.StringBuffer()\lr13.append(\"resource \/META\-INF\/services\/org.xmlpull.v1.XmlPullParserFactory that contained '\")\lr13.append(r12)\lr13.append(\"'\")\ljava.lang.String r13 = r13.toString()\l}"];
Node_18 [shape=record,label="{18\:\ 0x005d|PHI: r12 r13 \l  PHI: (r12v1 java.lang.String) = (r12v7 java.lang.String), (r12v0 java.lang.String) binds: [B:17:0x0047, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 java.lang.String) = (r13v9 java.lang.String), (r13v11 java.lang.String) binds: [B:17:0x0047, B:8:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|java.util.Vector r1 = new java.util.Vector()\ljava.util.Vector r2 = new java.util.Vector()\lr5 = null\lr4 = 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x006a|LOOP_START\lPHI: r4 r5 \l  PHI: (r4v1 int) = (r4v0 int), (r4v3 int) binds: [B:18:0x005d, B:53:0x00d3] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 org.xmlpull.v1.XmlPullParserFactory) = (r5v0 org.xmlpull.v1.XmlPullParserFactory), (r5v4 org.xmlpull.v1.XmlPullParserFactory) binds: [B:18:0x005d, B:53:0x00d3] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x006a\-\>B:53:0x00d3\l}"];
Node_20 [shape=record,label="{20\:\ 0x006e|if (r4 \< r12.length()) goto L_0x007e\l}"];
Node_21 [shape=record,label="{21\:\ 0x0070|if (r5 != null) goto L_0x0077\l}"];
Node_22 [shape=record,label="{22\:\ 0x0072|org.xmlpull.v1.XmlPullParserFactory r5 = new org.xmlpull.p030v1.XmlPullParserFactory()\l}"];
Node_23 [shape=record,label="{23\:\ 0x0077|PHI: r5 \l  PHI: (r5v2 org.xmlpull.v1.XmlPullParserFactory) = (r5v1 org.xmlpull.v1.XmlPullParserFactory), (r5v3 org.xmlpull.v1.XmlPullParserFactory) binds: [B:21:0x0070, B:22:0x0072] A[DONT_GENERATE, DONT_INLINE]\l|r5.parserClasses = r1\lr5.serializerClasses = r2\lr5.classNamesLocation = r13\l}"];
Node_24 [shape=record,label="{24\:\ 0x007d|RETURN\l|return r5\l}"];
Node_25 [shape=record,label="{25\:\ 0x007e|int r6 = r12.indexOf(44, r4)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0085|if (r6 != \-1) goto L_0x008b\l}"];
Node_27 [shape=record,label="{27\:\ 0x0087|int r6 = r12.length()\l}"];
Node_28 [shape=record,label="{28\:\ 0x008b|PHI: r6 \l  PHI: (r6v3 int) = (r6v2 int), (r6v4 int) binds: [B:26:0x0085, B:27:0x0087] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String r4 = r12.substring(r4, r6)\l}"];
Node_29 [shape=record,label="{29\:\ 0x008f|SYNTHETIC\lSplitter:B:29:0x008f\l}"];
Node_30 [shape=record,label="{30\:\ ?|Catch:\{ Exception \-\> 0x0098 \}\lSplitter:B:29:0x008f\l|java.lang.Class r7 = java.lang.Class.forName(r4)     \/\/ Catch:\{ Exception \-\> 0x0098 \}\l}"];
Node_31 [shape=record,label="{31\:\ 0x0093|SYNTHETIC\lSplitter:B:31:0x0093\l}"];
Node_32 [shape=record,label="{32\:\ ?|Catch:\{ Exception \-\> 0x0099 \}\lSplitter:B:31:0x0093\l|java.lang.Object r8 = r7.newInstance()     \/\/ Catch:\{ Exception \-\> 0x0099 \}\l}"];
Node_33 [shape=record,label="{33\:\ 0x0098|r7 = null\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lExcHandler: Exception (unused java.lang.Exception)\lSplitter:B:29:0x008f\l}"];
Node_35 [shape=record,label="{35\:\ 0x0099|PHI: r7 \l  PHI: (r7v3 java.lang.Class\<?\>) = (r7v4 java.lang.Class\<?\>), (r7v5 java.lang.Class\<?\>) binds: [B:33:0x0098, B:36:?] A[DONT_GENERATE, DONT_INLINE]\l|r8 = null\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lExcHandler: Exception (unused java.lang.Exception)\lSplitter:B:31:0x0093\l}"];
Node_37 [shape=record,label="{37\:\ 0x009a|PHI: r7 r8 \l  PHI: (r7v1 java.lang.Class\<?\>) = (r7v3 java.lang.Class\<?\>), (r7v5 java.lang.Class\<?\>) binds: [B:35:0x0099, B:32:?] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 ?) = (r8v2 ?), (r8v3 ?) binds: [B:35:0x0099, B:32:?] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == null) goto L_0x00d3\l}"];
Node_38 [shape=record,label="{38\:\ 0x009c}"];
Node_39 [shape=record,label="{39\:\ 0x009f|if ((r8 instanceof org.xmlpull.p030v1.XmlPullParser) == false) goto L_0x00a6\l}"];
Node_40 [shape=record,label="{40\:\ 0x00a1|r1.addElement(r7)\lr9 = true\l}"];
Node_41 [shape=record,label="{41\:\ 0x00a6|r9 = false\l}"];
Node_42 [shape=record,label="{42\:\ 0x00a7|PHI: r9 \l  PHI: (r9v1 boolean) = (r9v6 boolean), (r9v7 boolean) binds: [B:41:0x00a6, B:40:0x00a1] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x00a9|if ((r8 instanceof org.xmlpull.p030v1.XmlSerializer) == false) goto L_0x00af\l}"];
Node_44 [shape=record,label="{44\:\ 0x00ab|r2.addElement(r7)\lr9 = true\l}"];
Node_45 [shape=record,label="{45\:\ 0x00af|PHI: r9 \l  PHI: (r9v2 boolean) = (r9v1 boolean), (r9v5 boolean) binds: [B:43:0x00a9, B:44:0x00ab] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_46 [shape=record,label="{46\:\ 0x00b1|if ((r8 instanceof org.xmlpull.p030v1.XmlPullParserFactory) == false) goto L_0x00b9\l}"];
Node_47 [shape=record,label="{47\:\ 0x00b3|if (r5 != null) goto L_0x00b8\l}"];
Node_48 [shape=record,label="{48\:\ 0x00b5|r5 = (org.xmlpull.p030v1.XmlPullParserFactory) r8\l}"];
Node_49 [shape=record,label="{49\:\ 0x00b8|PHI: r5 \l  PHI: (r5v6 org.xmlpull.v1.XmlPullParserFactory) = (r5v1 org.xmlpull.v1.XmlPullParserFactory), (r5v7 org.xmlpull.v1.XmlPullParserFactory) binds: [B:47:0x00b3, B:48:0x00b5] A[DONT_GENERATE, DONT_INLINE]\l|r9 = true\l}"];
Node_50 [shape=record,label="{50\:\ 0x00b9|PHI: r5 r9 \l  PHI: (r5v5 org.xmlpull.v1.XmlPullParserFactory) = (r5v1 org.xmlpull.v1.XmlPullParserFactory), (r5v6 org.xmlpull.v1.XmlPullParserFactory) binds: [B:46:0x00b1, B:49:0x00b8] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v3 boolean) = (r9v2 boolean), (r9v4 boolean) binds: [B:46:0x00b1, B:49:0x00b8] A[DONT_GENERATE, DONT_INLINE]\l|if (r9 == false) goto L_0x00bc\l}"];
Node_51 [shape=record,label="{51\:\ 0x00bc|java.lang.StringBuffer r13 = new java.lang.StringBuffer()\lr13.append(\"incompatible class: \")\lr13.append(r4)\l}"];
Node_52 [shape=record,label="{52\:\ 0x00d2|throw new org.xmlpull.p030v1.XmlPullParserException(r13.toString())\l}"];
Node_53 [shape=record,label="{53\:\ 0x00d3|LOOP_END\lPHI: r5 \l  PHI: (r5v4 org.xmlpull.v1.XmlPullParserFactory) = (r5v1 org.xmlpull.v1.XmlPullParserFactory), (r5v5 org.xmlpull.v1.XmlPullParserFactory) binds: [B:70:0x00d3, B:71:0x00d3] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x006a\-\>B:53:0x00d3\l|int r4 = r6 + 1\l}"];
Node_54 [shape=record,label="{54\:\ 0x00d6}"];
Node_55 [shape=record,label="{55\:\ 0x00d8|if (r1 \<= 32) goto L_0x003a\l}"];
Node_56 [shape=record,label="{56\:\ 0x00da}"];
Node_57 [shape=record,label="{57\:\ 0x00db|SYNTHETIC\lSplitter:B:57:0x00db\l}"];
Node_58 [shape=record,label="{58\:\ ?|Catch:\{ Exception \-\> 0x00e8 \}\lSplitter:B:57:0x00db\l|r13.append((char) r1)     \/\/ Catch:\{ Exception \-\> 0x00e8 \}\l}"];
Node_59 [shape=record,label="{59\:\ 0x00e0|Catch:\{ Exception \-\> 0x00e8 \}\l}"];
Node_60 [shape=record,label="{60\:\ 0x00e7|Catch:\{ Exception \-\> 0x00e8 \}\l|throw new org.xmlpull.p030v1.XmlPullParserException(\"resource not found: \/META\-INF\/services\/org.xmlpull.v1.XmlPullParserFactory make sure that parser implementing XmlPull API is available\")     \/\/ Catch:\{ Exception \-\> 0x00e8 \}\l}"];
Node_61 [shape=record,label="{61\:\ 0x00e8|ExcHandler: Exception (r12v4 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:10:0x002f\l|java.lang.Exception r12 = move\-exception\l}"];
Node_62 [shape=record,label="{62\:\ 0x00e9}"];
Node_63 [shape=record,label="{63\:\ 0x00ee|throw new org.xmlpull.p030v1.XmlPullParserException((java.lang.String) null, (org.xmlpull.p030v1.XmlPullParser) null, r12)\l}"];
Node_64 [shape=record,label="{64\:\ 0x003a|LOOP_END\lSYNTHETIC\lLOOP:0: B:14:0x003a\-\>B:64:0x003a\l}"];
Node_65 [shape=record,label="{65\:\ 0x0040|SYNTHETIC\l}"];
Node_66 [shape=record,label="{66\:\ 0x003a|SYNTHETIC\l}"];
Node_67 [shape=record,label="{67\:\ 0x003a|SYNTHETIC\l}"];
Node_68 [shape=record,label="{68\:\ 0x0070|SYNTHETIC\l}"];
Node_69 [shape=record,label="{69\:\ 0x00bc|SYNTHETIC\l}"];
Node_70 [shape=record,label="{70\:\ 0x00d3|SYNTHETIC\l}"];
Node_71 [shape=record,label="{71\:\ 0x00d3|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static org.xmlpull.v1.XmlPullParserFactory org.xmlpull.v1.XmlPullParserFactory.newInstance((r12v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.lang.Class A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_18;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_61;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_59;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_54;
Node_15 -> Node_65[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_25;
Node_20 -> Node_68[style=dashed];
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_31 -> Node_36;
Node_32 -> Node_37;
Node_33 -> Node_35;
Node_34 -> Node_33;
Node_35 -> Node_37;
Node_36 -> Node_35;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_70;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_50;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_50 -> Node_69;
Node_50 -> Node_71[style=dashed];
Node_51 -> Node_52;
Node_53 -> Node_19;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_66;
Node_56 -> Node_57;
Node_57 -> Node_58;
Node_57 -> Node_61;
Node_58 -> Node_67;
Node_59 -> Node_60;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_64 -> Node_14;
Node_65 -> Node_16;
Node_66 -> Node_64;
Node_67 -> Node_64;
Node_68 -> Node_21;
Node_69 -> Node_51;
Node_70 -> Node_53;
Node_71 -> Node_53;
}

