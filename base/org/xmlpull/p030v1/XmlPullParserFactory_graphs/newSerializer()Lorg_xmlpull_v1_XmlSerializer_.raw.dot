digraph "CFG fororg.xmlpull.v1.XmlPullParserFactory.newSerializer()Lorg\/xmlpull\/v1\/XmlSerializer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Vector) = (r5 I:org.xmlpull.v1.XmlPullParserFactory) org.xmlpull.v1.XmlPullParserFactory.serializerClasses java.util.Vector \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0081 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.util.Vector) = (r5 I:org.xmlpull.v1.XmlPullParserFactory) org.xmlpull.v1.XmlPullParserFactory.serializerClasses java.util.Vector \l0x0006: INVOKE  (r0 I:int) = (r0 I:java.util.Vector) java.util.Vector.size():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0068 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:java.lang.StringBuffer) =  java.lang.StringBuffer \l0x000e: INVOKE  (r0 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT \l0x0011: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IGET  (r2 I:java.util.Vector) = (r5 I:org.xmlpull.v1.XmlPullParserFactory) org.xmlpull.v1.XmlPullParserFactory.serializerClasses java.util.Vector \l0x0014: INVOKE  (r2 I:int) = (r2 I:java.util.Vector) java.util.Vector.size():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:13:0x0051 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IGET  (r2 I:java.util.Vector) = (r5 I:org.xmlpull.v1.XmlPullParserFactory) org.xmlpull.v1.XmlPullParserFactory.serializerClasses java.util.Vector \l0x001c: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Vector), (r1 I:int) java.util.Vector.elementAt(int):java.lang.Object type: VIRTUAL \l0x0020: CHECK_CAST  (r2 I:java.lang.Class) = (java.lang.Class) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|SYNTHETIC\lSplitter:B:8:0x0022\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0022\l|0x0022: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.lang.Class) java.lang.Class.newInstance():java.lang.Object type: VIRTUAL A[Catch:\{ Exception \-\> 0x0029 \}, TRY_ENTER]\l0x0026: CHECK_CAST  (r3 I:org.xmlpull.v1.XmlSerializer) = (org.xmlpull.v1.XmlSerializer) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x0029 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: RETURN  (r3 I:org.xmlpull.v1.XmlSerializer) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|ExcHandler: Exception null\lSplitter:B:8:0x0022\l|0x0029: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: NEW_INSTANCE  (r4 I:java.lang.StringBuffer) =  java.lang.StringBuffer \l0x002c: INVOKE  (r4 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT \l0x002f: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l0x0033: INVOKE  (r4 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x0036: CONST_STR  (r2 I:java.lang.String) =  \": \" \l0x0038: INVOKE  (r4 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x003b: INVOKE  (r2 I:java.lang.String) = (r3 I:java.lang.Exception) java.lang.Exception.toString():java.lang.String type: VIRTUAL \l0x003f: INVOKE  (r4 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x0042: CONST_STR  (r2 I:java.lang.String) =  \"; \" \l0x0044: INVOKE  (r4 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x0047: INVOKE  (r2 I:java.lang.String) = (r4 I:java.lang.StringBuffer) java.lang.StringBuffer.toString():java.lang.String type: VIRTUAL \l0x004b: INVOKE  (r0 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x004e: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|0x0051: NEW_INSTANCE  (r1 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0053: NEW_INSTANCE  (r2 I:java.lang.StringBuffer) =  java.lang.StringBuffer \l0x0055: INVOKE  (r2 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT \l0x0058: CONST_STR  (r3 I:java.lang.String) =  \"could not create serializer: \" \l0x005a: INVOKE  (r2 I:java.lang.StringBuffer), (r3 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x005d: INVOKE  (r2 I:java.lang.StringBuffer), (r0 I:java.lang.Object) java.lang.StringBuffer.append(java.lang.Object):java.lang.StringBuffer type: VIRTUAL \l0x0060: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuffer) java.lang.StringBuffer.toString():java.lang.String type: VIRTUAL \l0x0064: INVOKE  \l  (r1 I:org.xmlpull.v1.XmlPullParserException)\l  (r0 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0067|0x0067: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0068|0x0068: NEW_INSTANCE  (r0 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x006a: NEW_INSTANCE  (r1 I:java.lang.StringBuffer) =  java.lang.StringBuffer \l0x006c: INVOKE  (r1 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT \l0x006f: CONST_STR  (r2 I:java.lang.String) =  \"No valid serializer classes found in \" \l0x0071: INVOKE  (r1 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x0074: IGET  (r2 I:java.lang.String) = (r5 I:org.xmlpull.v1.XmlPullParserFactory) org.xmlpull.v1.XmlPullParserFactory.classNamesLocation java.lang.String \l0x0076: INVOKE  (r1 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x0079: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuffer) java.lang.StringBuffer.toString():java.lang.String type: VIRTUAL \l0x007d: INVOKE  \l  (r0 I:org.xmlpull.v1.XmlPullParserException)\l  (r1 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0080|0x0080: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0081|0x0081: NEW_INSTANCE  (r0 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0083: NEW_INSTANCE  (r1 I:java.lang.StringBuffer) =  java.lang.StringBuffer \l0x0085: INVOKE  (r1 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT \l0x0088: CONST_STR  (r2 I:java.lang.String) =  \"Factory initialization incomplete \- has not tried \" \l0x008a: INVOKE  (r1 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x008d: IGET  (r2 I:java.lang.String) = (r5 I:org.xmlpull.v1.XmlPullParserFactory) org.xmlpull.v1.XmlPullParserFactory.classNamesLocation java.lang.String \l0x008f: INVOKE  (r1 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x0092: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuffer) java.lang.StringBuffer.toString():java.lang.String type: VIRTUAL \l0x0096: INVOKE  \l  (r0 I:org.xmlpull.v1.XmlPullParserException)\l  (r1 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0099|0x0099: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.xmlpull.v1.XmlSerializer org.xmlpull.v1.XmlPullParserFactory.newSerializer((r5 'this' I:org.xmlpull.v1.XmlPullParserFactory A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_5;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

