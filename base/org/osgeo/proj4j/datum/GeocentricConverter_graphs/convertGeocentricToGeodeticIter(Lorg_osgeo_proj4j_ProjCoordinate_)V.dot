digraph "CFG fororg.osgeo.proj4j.datum.GeocentricConverter.convertGeocentricToGeodeticIter(Lorg\/osgeo\/proj4j\/ProjCoordinate;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r29\lr1 = r30\ldouble r2 = r1.f294x\ldouble r4 = r1.f295y\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r30.hasValidZOrdinate() == false) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|double r9 = r1.f296z\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|r9 = 0.0d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|PHI: r9 \l  PHI: (r9v0 double) = (r9v1 double), (r9v2 double) binds: [B:3:0x0011, B:2:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|double r11 = (r2 * r2) + (r4 * r4)\ldouble r13 = java.lang.Math.sqrt(r11)\ldouble r11 = java.lang.Math.sqrt(r11 + (r9 * r9))\l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|if (((r13 \/ r0.f297a) \> 1.0E\-12d ? 1 : ((r13 \/ r0.f297a) == 1.0E\-12d ? 0 : \-1)) \>= 0) goto L_0x003f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0031}"];
Node_7 [shape=record,label="{7\:\ 0x0037|if (((r11 \/ r0.f297a) \> 1.0E\-12d ? 1 : ((r11 \/ r0.f297a) == 1.0E\-12d ? 0 : \-1)) \>= 0) goto L_0x003c\l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|double r1 = r0.f299b\l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|r7 = 0.0d\l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|double r7 = java.lang.Math.atan2(r4, r2)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|PHI: r7 \l  PHI: (r7v1 double) = (r7v3 double), (r7v4 double) binds: [B:11:0x003f, B:10:0x003c] A[DONT_GENERATE, DONT_INLINE]\l|double r2 = r9 \/ r11\ldouble r4 = r13 \/ r11\lr19 = r7\ldouble r11 = 1.0d \/ java.lang.Math.sqrt(1.0d \- (((r0.f301e2 * (2.0d \- r0.f301e2)) * r4) * r4))\lr21 = r9\ldouble r8 = ((1.0d \- r0.f301e2) * r4) * r11\ldouble r11 = r11 * r2\lr10 = 0\l}"];
Node_13 [shape=record,label="{13\:\ 0x006e|LOOP_START\lPHI: r2 r8 r10 r11 r13 \l  PHI: (r2v2 double) = (r2v1 double), (r2v3 double) binds: [B:12:0x0043, B:17:0x00c9] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v4 double) = (r8v3 double), (r8v8 double) binds: [B:12:0x0043, B:17:0x00c9] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 int) = (r10v0 int), (r10v2 int) binds: [B:12:0x0043, B:17:0x00c9] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v12 double) = (r11v11 double), (r11v15 double) binds: [B:12:0x0043, B:17:0x00c9] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 double) = (r13v1 double), (r13v14 double) binds: [B:12:0x0043, B:17:0x00c9] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:13:0x006e\-\>B:17:0x00c9\l|int r10 = r10 + 1\lr25 = r2\ldouble r6 = r0.f297a \/ java.lang.Math.sqrt(1.0d \- ((r0.f301e2 * r11) * r11))\lr27 = r13\ldouble r1 = ((r13 * r8) + (r21 * r11)) \- ((1.0d \- ((r0.f301e2 * r11) * r11)) * r6)\ldouble r13 = (r0.f301e2 * r6) \/ (r6 + r1)\ldouble r6 = 1.0d \/ java.lang.Math.sqrt(1.0d \- ((((2.0d \- r13) * r13) * r4) * r4))\ldouble r13 = ((1.0d \- r13) * r4) * r6\ldouble r6 = r6 * r25\ldouble r8 = (r8 * r6) \- (r11 * r13)\l}"];
Node_14 [shape=record,label="{14\:\ 0x00c2|if (((r8 * r8) \> 1.0E\-24d ? 1 : ((r8 * r8) == 1.0E\-24d ? 0 : \-1)) \<= 0) goto L_0x00d4\l}"];
Node_15 [shape=record,label="{15\:\ 0x00c4}"];
Node_16 [shape=record,label="{16\:\ 0x00c6|if (r10 \< 30) goto L_0x00c9\l}"];
Node_17 [shape=record,label="{17\:\ 0x00c9|LOOP_END\lLOOP:0: B:13:0x006e\-\>B:17:0x00c9\l|r11 = r6\lr8 = r13\lr2 = r25\lr13 = r27\lr1 = r30\l}"];
Node_18 [shape=record,label="{18\:\ 0x00d4|double r3 = java.lang.Math.atan(r6 \/ java.lang.Math.abs(r13))\lr5 = r30\lr5.f294x = r19\lr5.f295y = r3\lr5.f296z = r1\l}"];
Node_19 [shape=record,label="{19\:\ 0x00e7|RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x00d4|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x00d4|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.datum.GeocentricConverter.convertGeocentricToGeodeticIter((r29v0 'this' org.osgeo.proj4j.datum.GeocentricConverter A[IMMUTABLE_TYPE, THIS]), (r30v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_21[style=dashed];
Node_17 -> Node_13;
Node_18 -> Node_19;
Node_20 -> Node_18;
Node_21 -> Node_18;
}

