digraph "CFG fororg.osgeo.proj4j.datum.GeocentricConverter.convertGeodeticToGeocentric(Lorg\/osgeo\/proj4j\/ProjCoordinate;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:double) = (r15 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0002: IGET  (r2 I:double) = (r15 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0004: INVOKE  (r4 I:boolean) = (r15 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.hasValidZOrdinate():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IGET  (r4 I:double) = (r15 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.z double \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: CONST  (r6 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x0014: CONST  (r8 I:?[long, double]) = \l  (\-4613618979930100456(0xbff921fb54442d18, double:\-1.5707963267948966) ?[long, double])\l \l0x0019: CMP_G  (r10 I:int) = (r2 I:double), (r8 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r10 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:9:0x0028 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: CONST  (r11 I:?[long, double]) = \l  (\-4613611905692348428(0xbff9286a6db1cff4, double:\-1.5723671231216914) ?[long, double])\l \l0x0022: CMP_L  (r11 I:int) = (r2 I:double), (r11 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r11 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x0028 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: MOVE  (r2 I:?[long, double]) = (r8 I:?[long, double]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: CMP_L  (r8 I:int) = (r2 I:double), (r6 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x0037 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: CONST  (r11 I:?[long, double]) = \l  (4609760131162427380(0x3ff9286a6db1cff4, double:1.5723671231216914) ?[long, double])\l \l0x0031: CMP_G  (r9 I:int) = (r2 I:double), (r11 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|0x0033: IF  (r9 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:14:0x0037 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: MOVE  (r2 I:?[long, double]) = (r6 I:?[long, double]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: IF  (r10 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:21:0x0082 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: IF  (r8 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:21:0x0082 \l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|0x003b: CONST  (r6 I:?[long, double]) = \l  (4614256656552045848(0x400921fb54442d18, double:3.141592653589793) ?[long, double])\l \l0x0040: CMP_L  (r6 I:int) = (r0 I:double), (r6 I:double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0042|0x0042: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:19:0x004a \l}"];
Node_18 [shape=record,label="{18\:\ 0x0044|0x0044: CONST  (r6 I:?[long, double]) = \l  (4618760256179416344(0x401921fb54442d18, double:6.283185307179586) ?[long, double])\l \l0x0049: ARITH  (r0 I:double) = (r0 I:double) \- (r6 I:double) \l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: INVOKE  (r6 I:double) = (r2 I:double) java.lang.Math.sin(double):double type: STATIC \l0x004e: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0052: ARITH  (r8 I:double) = (r6 I:double) * (r6 I:double) \l0x0054: IGET  (r10 I:double) = (r14 I:org.osgeo.proj4j.datum.GeocentricConverter) org.osgeo.proj4j.datum.GeocentricConverter.a double \l0x0056: IGET  (r12 I:double) = (r14 I:org.osgeo.proj4j.datum.GeocentricConverter) org.osgeo.proj4j.datum.GeocentricConverter.e2 double \l0x0058: ARITH  (r12 I:double) = (r12 I:double) * (r8 I:double) \l0x005a: CONST  (r8 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x005c: ARITH  (r12 I:double) = (r8 I:double) \- (r12 I:double) \l0x005e: INVOKE  (r12 I:double) = (r12 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0062: ARITH  (r10 I:double) = (r10 I:double) \/ (r12 I:double) \l0x0063: ARITH  (r12 I:double) = (r10 I:double) + (r4 I:double) \l0x0065: ARITH  (r12 I:double) = (r12 I:double) * (r2 I:double) \l0x0067: INVOKE  (r2 I:double) = (r0 I:double) java.lang.Math.cos(double):double type: STATIC \l0x006b: ARITH  (r2 I:double) = (r2 I:double) * (r12 I:double) \l0x006d: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0071: ARITH  (r12 I:double) = (r12 I:double) * (r0 I:double) \l0x0073: IGET  (r0 I:double) = (r14 I:org.osgeo.proj4j.datum.GeocentricConverter) org.osgeo.proj4j.datum.GeocentricConverter.e2 double \l0x0075: ARITH  (r8 I:double) = (r8 I:double) \- (r0 I:double) \l0x0076: ARITH  (r10 I:double) = (r10 I:double) * (r8 I:double) \l0x0078: ARITH  (r10 I:double) = (r10 I:double) + (r4 I:double) \l0x0079: ARITH  (r10 I:double) = (r10 I:double) * (r6 I:double) \l0x007b: IPUT  (r2 I:double), (r15 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x007d: IPUT  (r12 I:double), (r15 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x007f: IPUT  (r10 I:double), (r15 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.z double \l}"];
Node_20 [shape=record,label="{20\:\ 0x0081|0x0081: RETURN   \l}"];
Node_21 [shape=record,label="{21\:\ 0x0082|0x0082: NEW_INSTANCE  (r15 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x0084: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0086: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0089: CONST_STR  (r1 I:java.lang.String) =  \"Latitude is out of range: \" \l0x008b: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008e: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:double) java.lang.StringBuilder.append(double):java.lang.StringBuilder type: VIRTUAL \l0x0091: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0095: INVOKE  \l  (r15 I:java.lang.IllegalStateException)\l  (r0 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x0098|0x0098: THROW  (r15 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.datum.GeocentricConverter.convertGeodeticToGeocentric((r14 'this' I:org.osgeo.proj4j.datum.GeocentricConverter A[IMMUTABLE_TYPE, THIS]), (r15 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
}

