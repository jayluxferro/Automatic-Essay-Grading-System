digraph "CFG fororg.osgeo.proj4j.datum.Ellipsoid.\<init\>(Ljava\/lang\/String;DDDLjava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0005: IPUT  (r0 I:double), (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.equatorRadius double \l0x0007: IPUT  (r0 I:double), (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.poleRadius double \l0x0009: IPUT  (r0 I:double), (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.eccentricity double \l0x000b: IPUT  (r0 I:double), (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.eccentricity2 double \l0x000d: IPUT  \l  (r5 I:java.lang.String)\l  (r4 I:org.osgeo.proj4j.datum.Ellipsoid)\l org.osgeo.proj4j.datum.Ellipsoid.shortName java.lang.String \l0x000f: IPUT  \l  (r12 I:java.lang.String)\l  (r4 I:org.osgeo.proj4j.datum.Ellipsoid)\l org.osgeo.proj4j.datum.Ellipsoid.name java.lang.String \l0x0011: IPUT  (r6 I:double), (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.equatorRadius double \l0x0013: IPUT  (r8 I:double), (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.poleRadius double \l0x0015: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0017: CMP_L  (r5 I:int) = (r8 I:double), (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|0x001b: CMP_L  (r5 I:int) = (r10 I:double), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0020 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0022: CONST_STR  (r6 I:java.lang.String) =  \"One of poleRadius or reciprocalFlattening must be specified\" \l0x0024: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: CMP_L  (r5 I:int) = (r10 I:double), (r2 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0043 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: ARITH  (r8 I:double) = (r0 I:double) \/ (r10 I:double) \l0x002e: CONST  (r10 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0030: ARITH  (r10 I:double) = (r10 I:double) * (r8 I:double) \l0x0032: ARITH  (r8 I:double) = (r8 I:double) * (r8 I:double) \l0x0034: ARITH  (r10 I:double) = (r10 I:double) \- (r8 I:double) \l0x0035: IPUT  (r10 I:double), (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.eccentricity2 double \l0x0037: IGET  (r8 I:double) = (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.eccentricity2 double \l0x0039: ARITH  (r0 I:double) = (r0 I:double) \- (r8 I:double) \l0x003a: INVOKE  (r8 I:double) = (r0 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x003e: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x0040: IPUT  (r6 I:double), (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.poleRadius double \l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|0x0043: ARITH  (r8 I:double) = (r8 I:double) * (r8 I:double) \l0x0045: ARITH  (r6 I:double) = (r6 I:double) * (r6 I:double) \l0x0047: ARITH  (r8 I:double) = (r8 I:double) \/ (r6 I:double) \l0x0048: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0049: ARITH  (r0 I:double) = (r0 I:double) \- (r8 I:double) \l0x004a: IPUT  (r0 I:double), (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.eccentricity2 double \l}"];
Node_11 [shape=record,label="{11\:\ 0x004c|0x004c: IGET  (r5 I:double) = (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.eccentricity2 double \l0x004e: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0052: IPUT  (r5 I:double), (r4 I:org.osgeo.proj4j.datum.Ellipsoid) org.osgeo.proj4j.datum.Ellipsoid.eccentricity double \l}"];
Node_12 [shape=record,label="{12\:\ 0x0054|0x0054: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.datum.Ellipsoid.\<init\>((r4 'this' I:org.osgeo.proj4j.datum.Ellipsoid A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

