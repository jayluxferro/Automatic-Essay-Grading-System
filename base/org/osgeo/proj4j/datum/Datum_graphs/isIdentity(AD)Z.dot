digraph "CFG fororg.osgeo.proj4j.datum.Datum.isIdentity([D)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:13:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:13:0x0020\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|if (r1 \>= r9.length) goto L_0x0023\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005}"];
Node_4 [shape=record,label="{4\:\ 0x0008|if (r1 != 6) goto L_0x0019\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a}"];
Node_6 [shape=record,label="{6\:\ 0x0010|if ((r9[r1] \> 1.0d ? 1 : (r9[r1] == 1.0d ? 0 : \-1)) == 0) goto L_0x0020\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012}"];
Node_8 [shape=record,label="{8\:\ 0x0016|if ((r9[r1] \> 0.0d ? 1 : (r9[r1] == 0.0d ? 0 : \-1)) == 0) goto L_0x0020\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|RETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019}"];
Node_11 [shape=record,label="{11\:\ 0x001d|if ((r9[r1] \> 0.0d ? 1 : (r9[r1] == 0.0d ? 0 : \-1)) == 0) goto L_0x0020\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|RETURN\l|return false\l}"];
Node_13 [shape=record,label="{13\:\ 0x0020|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:13:0x0020\l|int r1 = r1 + 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|RETURN\l|return true\l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0018|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x001f|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0020|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0020|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static boolean org.osgeo.proj4j.datum.Datum.isIdentity((r9v0 double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_18;
Node_7 -> Node_8;
Node_8 -> Node_16[style=dashed];
Node_8 -> Node_19;
Node_10 -> Node_11;
Node_11 -> Node_17[style=dashed];
Node_11 -> Node_20;
Node_13 -> Node_1;
Node_15 -> Node_14;
Node_16 -> Node_9;
Node_17 -> Node_12;
Node_18 -> Node_13;
Node_19 -> Node_13;
Node_20 -> Node_13;
}

