digraph "CFG fororg.osgeo.proj4j.proj.AlbersProjection.phi1_(DDD)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double r2 = java.lang.Math.asin(r19 * 0.5d)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|if ((r21 \> 1.0E\-7d ? 1 : (r21 == 1.0E\-7d ? 0 : \-1)) \>= 0) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|RETURN\l|return r2\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|r4 = 15\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|LOOP_START\lPHI: r2 r4 \l  PHI: (r2v2 double) = (r2v1 double), (r2v3 double) binds: [B:3:0x0012, B:7:0x004e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 int) = (r4v2 int), (r4v5 int) binds: [B:3:0x0012, B:7:0x004e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0014\-\>B:7:0x004e\l|double r5 = java.lang.Math.sin(r2)\ldouble r9 = r21 * r5\ldouble r11 = 1.0d \- (r9 * r9)\ldouble r15 = (r11 * 0.5d) * r11\ldouble r15 = (r15 \/ java.lang.Math.cos(r2)) * (((r19 \/ r23) \- (r5 \/ r11)) + ((0.5d \/ r21) * java.lang.Math.log((1.0d \- r9) \/ (r9 + 1.0d))))\ldouble r2 = r2 + r15\l}"];
Node_5 [shape=record,label="{5\:\ 0x004a|if ((java.lang.Math.abs(r15) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r15) == 1.0E\-10d ? 0 : \-1)) \<= 0) goto L_0x0050\l}"];
Node_6 [shape=record,label="{6\:\ 0x004c|int r4 = r4 + \-1\l}"];
Node_7 [shape=record,label="{7\:\ 0x004e|LOOP_END\lLOOP:0: B:4:0x0014\-\>B:7:0x004e\l|if (r4 != 0) goto L_0x0014\l}"];
Node_8 [shape=record,label="{8\:\ 0x0050|PHI: r4 \l  PHI: (r4v4 int) = (r4v3 int), (r4v5 int) binds: [B:10:0x0050, B:11:0x0050] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == 0) goto L_0x0053\l}"];
Node_9 [shape=record,label="{9\:\ 0x0053|SYNTHETIC\lRETURN\lORIG_RETURN\l|return Double.MAX_VALUE\l}"];
Node_10 [shape=record,label="{10\:\ 0x0050|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
MethodNode[shape=record,label="{private static double org.osgeo.proj4j.proj.AlbersProjection.phi1_((r19v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_4;
Node_7 -> Node_11[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_12[style=dashed];
Node_10 -> Node_8;
Node_11 -> Node_8;
}

