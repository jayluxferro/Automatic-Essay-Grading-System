digraph "CFG fororg.osgeo.proj4j.proj.AlbersProjection.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:org.osgeo.proj4j.proj.Projection) org.osgeo.proj4j.proj.Projection.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0005: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x0009: IPUT  \l  (r0 I:double)\l  (r2 I:org.osgeo.proj4j.proj.AlbersProjection)\l org.osgeo.proj4j.proj.AlbersProjection.minLatitude double \l0x000b: CONST  (r0 I:?[long, double]) = \l  (4635329916471083008(0x4054000000000000, double:80.0) ?[long, double])\l \l0x000d: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x0011: IPUT  \l  (r0 I:double)\l  (r2 I:org.osgeo.proj4j.proj.AlbersProjection)\l org.osgeo.proj4j.proj.AlbersProjection.maxLatitude double \l0x0013: CONST  (r0 I:?[long, double]) = \l  (4631600373029666816(0x4046c00000000000, double:45.5) ?[long, double])\l \l0x0018: INVOKE  (r0 I:double) = (r0 I:double) org.osgeo.proj4j.util.ProjectionMath.degToRad(double):double type: STATIC \l0x001c: IPUT  \l  (r0 I:double)\l  (r2 I:org.osgeo.proj4j.proj.AlbersProjection)\l org.osgeo.proj4j.proj.AlbersProjection.projectionLatitude1 double \l0x001e: CONST  (r0 I:?[long, double]) = \l  (4628996729495093248(0x403d800000000000, double:29.5) ?[long, double])\l \l0x0023: INVOKE  (r0 I:double) = (r0 I:double) org.osgeo.proj4j.util.ProjectionMath.degToRad(double):double type: STATIC \l0x0027: IPUT  \l  (r0 I:double)\l  (r2 I:org.osgeo.proj4j.proj.AlbersProjection)\l org.osgeo.proj4j.proj.AlbersProjection.projectionLatitude2 double \l0x0029: INVOKE  (r2 I:org.osgeo.proj4j.proj.AlbersProjection) org.osgeo.proj4j.proj.AlbersProjection.initialize():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x002c|0x002c: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.AlbersProjection.\<init\>((r2 'this' I:org.osgeo.proj4j.proj.AlbersProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

