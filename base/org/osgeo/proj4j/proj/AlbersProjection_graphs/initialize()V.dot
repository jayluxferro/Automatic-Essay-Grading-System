digraph "CFG fororg.osgeo.proj4j.proj.AlbersProjection.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r19\lsuper.initialize()\lr0.phi1 = r0.projectionLatitude1\lr0.phi2 = r0.projectionLatitude2\l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|if ((java.lang.Math.abs(r0.phi1 + r0.phi2) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r0.phi1 + r0.phi2) == 1.0E\-10d ? 0 : \-1)) \< 0) goto L_0x0111\l}"];
Node_2 [shape=record,label="{2\:\ 0x001f|double r1 = java.lang.Math.sin(r0.phi1)\lr0.f317n = r1\ldouble r7 = java.lang.Math.cos(r0.phi1)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0038|if ((java.lang.Math.abs(r0.phi1 \- r0.phi2) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r0.phi1 \- r0.phi2) == 1.0E\-10d ? 0 : \-1)) \< 0) goto L_0x003c\l}"];
Node_4 [shape=record,label="{4\:\ 0x003a|r3 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x003c|r3 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x003d|PHI: r3 \l  PHI: (r3v3 boolean) = (r3v28 boolean), (r3v29 boolean) binds: [B:5:0x003c, B:4:0x003a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0043|if (r0.spherical != false) goto L_0x00d5\l}"];
Node_8 [shape=record,label="{8\:\ 0x0045|double[] r4 = org.osgeo.proj4j.util.ProjectionMath.enfn(r0.f424es)\lr0.f316en = r4\l}"];
Node_9 [shape=record,label="{9\:\ 0x004d|if (r4 == null) goto L_0x00cd\l}"];
Node_10 [shape=record,label="{10\:\ 0x004f|r5 = r1\ldouble r15 = org.osgeo.proj4j.util.ProjectionMath.msfn(r5, r7, r0.f424es)\ldouble r1 = org.osgeo.proj4j.util.ProjectionMath.qsfn(r5, r0.f423e, r0.one_es)\l}"];
Node_11 [shape=record,label="{11\:\ 0x005e|if (r3 == false) goto L_0x0085\l}"];
Node_12 [shape=record,label="{12\:\ 0x0060|double r3 = java.lang.Math.sin(r0.phi2)\lr5 = r3\ldouble r17 = org.osgeo.proj4j.util.ProjectionMath.msfn(r5, java.lang.Math.cos(r0.phi2), r0.f424es)\ldouble r3 = org.osgeo.proj4j.util.ProjectionMath.qsfn(r5, r0.f423e, r0.one_es)\lr0.f317n = ((r15 * r15) \- (r17 * r17)) \/ (r3 \- r1)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0085|r0.f315ec = 1.0d \- (((r0.one_es * 0.5d) * java.lang.Math.log((1.0d \- r0.f423e) \/ (r0.f423e + 1.0d))) \/ r0.f423e)\lr0.f313c = (r15 * r15) + (r0.f317n * r1)\lr0.f314dd = 1.0d \/ r0.f317n\lr0.rho0 = r0.f314dd * java.lang.Math.sqrt(r0.f313c \- (r0.f317n * org.osgeo.proj4j.util.ProjectionMath.qsfn(java.lang.Math.sin(r0.projectionLatitude), r0.f423e, r0.one_es)))\l}"];
Node_14 [shape=record,label="{14\:\ 0x00cd}"];
Node_15 [shape=record,label="{15\:\ 0x00d4|throw new org.osgeo.proj4j.ProjectionException(\"0\")\l}"];
Node_16 [shape=record,label="{16\:\ 0x00d5|if (r3 == false) goto L_0x00e4\l}"];
Node_17 [shape=record,label="{17\:\ 0x00d7|r0.f317n = (r0.f317n + java.lang.Math.sin(r0.phi2)) * 0.5d\l}"];
Node_18 [shape=record,label="{18\:\ 0x00e4|r0.f318n2 = r0.f317n + r0.f317n\lr0.f313c = (r7 * r7) + (r0.f318n2 * r1)\lr0.f314dd = 1.0d \/ r0.f317n\lr0.rho0 = r0.f314dd * java.lang.Math.sqrt(r0.f313c \- (r0.f318n2 * java.lang.Math.sin(r0.projectionLatitude)))\l}"];
Node_19 [shape=record,label="{19\:\ 0x0111}"];
Node_20 [shape=record,label="{20\:\ 0x0118|throw new org.osgeo.proj4j.ProjectionException(\"\-21\")\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.AlbersProjection.initialize((r19v0 'this' org.osgeo.proj4j.proj.AlbersProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_22;
Node_14 -> Node_15;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_21;
Node_19 -> Node_20;
}

