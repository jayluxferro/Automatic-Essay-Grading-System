digraph "CFG fororg.osgeo.proj4j.proj.AlbersProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r22\lr1 = r23\lr3 = r27\ldouble r4 = r0.rho0 \- r25\ldouble r6 = org.osgeo.proj4j.util.ProjectionMath.distance(r1, r4)\lr10 = 1.5707963267948966d\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|if ((r6 \> 0.0d ? 1 : (r6 == 0.0d ? 0 : \-1)) == 0) goto L_0x009b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019}"];
Node_3 [shape=record,label="{3\:\ 0x001d|if ((r0.f317n \> 0.0d ? 1 : (r0.f317n == 0.0d ? 0 : \-1)) \>= 0) goto L_0x0022\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|double r6 = \-r6\ldouble r1 = \-r1\ldouble r4 = \-r4\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|PHI: r1 r4 r6 \l  PHI: (r1v3 double) = (r1v0 double), (r1v7 double) binds: [B:3:0x001d, B:4:0x001f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 double) = (r4v1 double), (r4v4 double) binds: [B:3:0x001d, B:4:0x001f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 double) = (r6v0 double), (r6v17 double) binds: [B:3:0x001d, B:4:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|double r6 = r6 \/ r0.f314dd\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|if (r0.spherical != false) goto L_0x0070\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|double r16 = (r0.f313c \- (r6 * r6)) \/ r0.f317n\l}"];
Node_8 [shape=record,label="{8\:\ 0x0044|if ((java.lang.Math.abs(r0.f315ec \- java.lang.Math.abs(r16)) \> 1.0E\-7d ? 1 : (java.lang.Math.abs(r0.f315ec \- java.lang.Math.abs(r16)) == 1.0E\-7d ? 0 : \-1)) \<= 0) goto L_0x0064\l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|double r6 = r0.f423e\ldouble r6 = phi1_(r16, r6, r0.one_es)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0059|if ((r6 \> Double.MAX_VALUE ? 1 : (r6 == Double.MAX_VALUE ? 0 : \-1)) == 0) goto L_0x005c\l}"];
Node_11 [shape=record,label="{11\:\ 0x005c}"];
Node_12 [shape=record,label="{12\:\ 0x0063|throw new org.osgeo.proj4j.ProjectionException(\"I\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x0064}"];
Node_14 [shape=record,label="{14\:\ 0x0066|if ((r16 \> 0.0d ? 1 : (r16 == 0.0d ? 0 : \-1)) \>= 0) goto L_0x006e\l}"];
Node_15 [shape=record,label="{15\:\ 0x0068|r6 = \-1.5707963267948966d\l}"];
Node_16 [shape=record,label="{16\:\ 0x006e|r6 = 1.5707963267948966d\l}"];
Node_17 [shape=record,label="{17\:\ 0x0070|double r14 = (r0.f313c \- (r6 * r6)) \/ r0.f318n2\lr3.f295y = r14\l}"];
Node_18 [shape=record,label="{18\:\ 0x0083|if ((java.lang.Math.abs(r14) \> 1.0d ? 1 : (java.lang.Math.abs(r14) == 1.0d ? 0 : \-1)) \> 0) goto L_0x008a\l}"];
Node_19 [shape=record,label="{19\:\ 0x0085|double r6 = java.lang.Math.asin(r6)\l}"];
Node_20 [shape=record,label="{20\:\ 0x008a}"];
Node_21 [shape=record,label="{21\:\ 0x008c|if ((r6 \> 0.0d ? 1 : (r6 == 0.0d ? 0 : \-1)) \>= 0) goto L_0x006e\l}"];
Node_22 [shape=record,label="{22\:\ 0x008f|PHI: r6 \l  PHI: (r6v3 double) = (r6v5 double), (r6v6 double), (r6v7 double), (r6v16 double) binds: [B:19:0x0085, B:16:0x006e, B:15:0x0068, B:10:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|r3.f294x = java.lang.Math.atan2(r1, r4) \/ r0.f317n\lr3.f295y = r6\l}"];
Node_23 [shape=record,label="{23\:\ 0x009b|r3.f294x = 0.0d\l}"];
Node_24 [shape=record,label="{24\:\ 0x00a1|if ((r0.f317n \> 0.0d ? 1 : (r0.f317n == 0.0d ? 0 : \-1)) \<= 0) goto L_0x00a4\l}"];
Node_25 [shape=record,label="{25\:\ 0x00a4|r10 = \-1.5707963267948966d\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a9|PHI: r10 \l  PHI: (r10v1 double) = (r10v0 double), (r10v2 double) binds: [B:24:0x00a1, B:25:0x00a4] A[DONT_GENERATE, DONT_INLINE]\l|r3.f295y = r10\l}"];
Node_27 [shape=record,label="{27\:\ 0x00ab|RETURN\l|return r3\l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.AlbersProjection.projectInverse((r22v0 'this' org.osgeo.proj4j.proj.AlbersProjection A[IMMUTABLE_TYPE, THIS]), (r23v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_23;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_17;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_22[style=dashed];
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_22;
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_16;
Node_21 -> Node_15[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
}

