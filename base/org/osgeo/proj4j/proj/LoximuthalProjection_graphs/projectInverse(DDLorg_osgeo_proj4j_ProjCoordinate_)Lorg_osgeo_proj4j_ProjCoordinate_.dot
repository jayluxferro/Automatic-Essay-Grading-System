digraph "CFG fororg.osgeo.proj4j.proj.LoximuthalProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double r0 = r10.phi1 + r13\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if ((java.lang.Math.abs(r13) \> EPS ? 1 : (java.lang.Math.abs(r13) == EPS ? 0 : \-1)) \>= 0) goto L_0x0014\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|double r11 = r11 \/ r10.cosphi1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|double r6 = (0.5d * r13) + 0.7853981633974483d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|if ((java.lang.Math.abs(r6) \> EPS ? 1 : (java.lang.Math.abs(r6) == EPS ? 0 : \-1)) \< 0) goto L_0x0048\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026}"];
Node_6 [shape=record,label="{6\:\ 0x0036|if ((java.lang.Math.abs(java.lang.Math.abs(r11) \- 1.5707963267948966d) \> EPS ? 1 : (java.lang.Math.abs(java.lang.Math.abs(r11) \- 1.5707963267948966d) == EPS ? 0 : \-1)) \>= 0) goto L_0x0039\l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|double r11 = (r11 * java.lang.Math.log(java.lang.Math.tan(r6) \/ r10.tanphi1)) \/ r13\l}"];
Node_8 [shape=record,label="{8\:\ 0x0048|r11 = 0.0d\l}"];
Node_9 [shape=record,label="{9\:\ 0x004a|PHI: r11 \l  PHI: (r11v1 double) = (r11v2 double), (r11v4 double), (r11v5 double) binds: [B:8:0x0048, B:7:0x0039, B:2:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|r15.f294x = r11\lr15.f295y = r0\l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|RETURN\l|return r15\l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.LoximuthalProjection.projectInverse((r10v0 'this' org.osgeo.proj4j.proj.LoximuthalProjection A[IMMUTABLE_TYPE, THIS]), (r11v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

