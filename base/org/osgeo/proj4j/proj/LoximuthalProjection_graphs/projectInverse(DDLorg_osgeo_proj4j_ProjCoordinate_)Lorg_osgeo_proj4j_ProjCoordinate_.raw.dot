digraph "CFG fororg.osgeo.proj4j.proj.LoximuthalProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.LoximuthalProjection) org.osgeo.proj4j.proj.LoximuthalProjection.phi1 double \l0x0002: ARITH  (r0 I:double) = (r0 I:double) + (r13 I:double) \l0x0003: INVOKE  (r2 I:double) = (r13 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0007: CONST  (r4 I:?[long, double]) = \l  (4487126258331716666(0x3e45798ee2308c3a, double:1.0E\-8) ?[long, double])\l \l0x000c: CMP_G  (r2 I:int) = (r2 I:double), (r4 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IGET  (r13 I:double) = (r10 I:org.osgeo.proj4j.proj.LoximuthalProjection) org.osgeo.proj4j.proj.LoximuthalProjection.cosphi1 double \l0x0012: ARITH  (r11 I:double) = (r11 I:double) \/ (r13 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: CONST  (r2 I:?[long, double]) = \l  (4605249457297304856(0x3fe921fb54442d18, double:0.7853981633974483) ?[long, double])\l \l0x0019: CONST  (r6 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x001b: ARITH  (r6 I:double) = (r6 I:double) * (r13 I:double) \l0x001d: ARITH  (r6 I:double) = (r6 I:double) + (r2 I:double) \l0x001e: INVOKE  (r2 I:double) = (r6 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0022: CMP_G  (r2 I:int) = (r2 I:double), (r4 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: IF  (r2 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:9:0x0048 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: INVOKE  (r2 I:double) = (r11 I:double) java.lang.Math.abs(double):double type: STATIC \l0x002a: CONST  (r8 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x002f: ARITH  (r2 I:double) = (r2 I:double) \- (r8 I:double) \l0x0030: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0034: CMP_G  (r2 I:int) = (r2 I:double), (r4 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:8:0x0039 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: INVOKE  (r2 I:double) = (r6 I:double) java.lang.Math.tan(double):double type: STATIC \l0x003d: IGET  (r4 I:double) = (r10 I:org.osgeo.proj4j.proj.LoximuthalProjection) org.osgeo.proj4j.proj.LoximuthalProjection.tanphi1 double \l0x003f: ARITH  (r2 I:double) = (r2 I:double) \/ (r4 I:double) \l0x0040: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.log(double):double type: STATIC \l0x0044: ARITH  (r11 I:double) = (r11 I:double) * (r2 I:double) \l0x0046: ARITH  (r11 I:double) = (r11 I:double) \/ (r13 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|0x0048: CONST  (r11 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x004a|0x004a: IPUT  (r11 I:double), (r15 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x004c: IPUT  (r0 I:double), (r15 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|0x004e: RETURN  (r15 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.LoximuthalProjection.projectInverse((r10 'this' I:org.osgeo.proj4j.proj.LoximuthalProjection A[IMMUTABLE_TYPE, THIS]), (r11 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

