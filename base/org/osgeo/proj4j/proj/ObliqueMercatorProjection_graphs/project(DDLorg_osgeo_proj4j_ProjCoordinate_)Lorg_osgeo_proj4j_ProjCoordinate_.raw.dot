digraph "CFG fororg.osgeo.proj4j.proj.ObliqueMercatorProjection.project(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r5 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.bl double \l0x0006: ARITH  (r5 I:double) = (r5 I:double) * (r23 I:double) \l0x0008: INVOKE  (r10 I:double) = (r5 I:double) java.lang.Math.sin(double):double type: STATIC \l0x000c: INVOKE  (r5 I:double) = (r25 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0010: CONST  (r7 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x0015: ARITH  (r5 I:double) = (r5 I:double) \- (r7 I:double) \l0x0016: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.abs(double):double type: STATIC \l0x001a: CONST  (r12 I:?[long, double]) = (0 ?[long, double]) \l0x001c: CONST  (r14 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x0021: CONST  (r16 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x0023: CONST  (r18 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0025: CMP_G  (r5 I:int) = (r5 I:double), (r14 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0027|0x0027: IF  (r5 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:7:0x003d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0029|0x0029: CMP_G  (r1 I:int) = (r25 I:double), (r12 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|0x002b: IF  (r1 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x0031 \l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|0x002d: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.singam double \l0x002f: NEG  (r1 I:double) = (r1 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.singam double \l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|0x0033: IGET  (r5 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.al double \l0x0035: ARITH  (r5 I:double) = (r5 I:double) * (r25 I:double) \l0x0037: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.bl double \l0x0039: ARITH  (r5 I:double) = (r5 I:double) \/ (r3 I:double) \l0x003a: MOVE  (r3 I:?[long, double]) = (r1 I:?[long, double]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|0x003d: IGET  (r5 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.el double \l0x003f: IGET  (r14 I:boolean) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.spherical boolean \l}"];
Node_8 [shape=record,label="{8\:\ 0x0041|0x0041: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x005a \l}"];
Node_9 [shape=record,label="{9\:\ 0x0043|0x0043: INVOKE  (r7 I:double) = (r25 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0047: IGET  (r14 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.e double \l0x0049: MOVE  (r3 I:?[long, double]) = (r25 I:?[long, double]) \l0x004b: MOVE  (r20 I:?[long, double]) = (r5 I:?[long, double]) \l0x004d: MOVE  (r5 I:?[long, double]) = (r7 I:?[long, double]) \l0x004e: MOVE  (r7 I:?[long, double]) = (r14 I:?[long, double]) \l0x004f: INVOKE  (r3 I:double) = (r3 I:double), (r5 I:double), (r7 I:double) org.osgeo.proj4j.util.ProjectionMath.tsfn(double, double, double):double type: STATIC \l0x0053: IGET  (r5 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.bl double \l0x0055: INVOKE  (r3 I:double) = (r3 I:double), (r5 I:double) java.lang.Math.pow(double, double):double type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x005a|0x005a: MOVE  (r20 I:?[long, double]) = (r5 I:?[long, double]) \l0x005c: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005d: ARITH  (r7 I:double) = (r7 I:double) \- (r25 I:double) \l0x005f: ARITH  (r7 I:double) = (r7 I:double) * (r16 I:double) \l0x0061: INVOKE  (r3 I:double) = (r7 I:double) java.lang.Math.tan(double):double type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0065|0x0065: ARITH  (r5 I:double) = (r20 I:double) \/ (r3 I:double) \l0x0067: ARITH  (r3 I:double) = (r18 I:double) \/ (r5 I:double) \l0x0069: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006a: ARITH  (r7 I:double) = (r5 I:double) \- (r3 I:double) \l0x006c: ARITH  (r7 I:double) = (r7 I:double) * (r16 I:double) \l0x006e: IGET  (r12 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.singam double \l0x0070: ARITH  (r12 I:double) = (r12 I:double) * (r7 I:double) \l0x0072: IGET  (r14 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.cosgam double \l0x0074: ARITH  (r14 I:double) = (r14 I:double) * (r10 I:double) \l0x0076: ARITH  (r12 I:double) = (r12 I:double) \- (r14 I:double) \l0x0077: CONST  (r14 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0079: ARITH  (r12 I:double) = (r12 I:double) * (r14 I:double) \l0x007b: ARITH  (r5 I:double) = (r5 I:double) + (r3 I:double) \l0x007c: ARITH  (r3 I:double) = (r12 I:double) \/ (r5 I:double) \l0x007e: IGET  (r5 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.bl double \l0x0080: ARITH  (r5 I:double) = (r5 I:double) * (r23 I:double) \l0x0082: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0086: INVOKE  (r12 I:double) = (r5 I:double) java.lang.Math.abs(double):double type: STATIC \l0x008a: CONST  (r14 I:?[long, double]) = \l  (4502148214488346440(0x3e7ad7f29abcaf48, double:1.0E\-7) ?[long, double])\l \l0x008f: CMP_L  (r12 I:int) = (r12 I:double), (r14 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0091|0x0091: IF  (r12 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:17:0x00bf \l}"];
Node_13 [shape=record,label="{13\:\ 0x0093|0x0093: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.al double \l0x0095: IGET  (r12 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.cosgam double \l0x0097: ARITH  (r7 I:double) = (r7 I:double) * (r12 I:double) \l0x0099: IGET  (r12 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.singam double \l0x009b: ARITH  (r10 I:double) = (r10 I:double) * (r12 I:double) \l0x009d: ARITH  (r7 I:double) = (r7 I:double) + (r10 I:double) \l0x009e: ARITH  (r7 I:double) = (r7 I:double) \/ (r5 I:double) \l0x009f: INVOKE  (r7 I:double) = (r7 I:double) java.lang.Math.atan(double):double type: STATIC \l0x00a3: ARITH  (r1 I:double) = (r1 I:double) * (r7 I:double) \l0x00a5: IGET  (r7 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.bl double \l0x00a7: ARITH  (r1 I:double) = (r1 I:double) \/ (r7 I:double) \l0x00a8: CONST  (r7 I:?[long, double]) = (0 ?[long, double]) \l0x00aa: CMP_G  (r5 I:int) = (r5 I:double), (r7 I:double) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00ac|0x00ac: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:16:0x00bd \l}"];
Node_15 [shape=record,label="{15\:\ 0x00ae|0x00ae: CONST  (r5 I:?[long, double]) = \l  (4614256656552045848(0x400921fb54442d18, double:3.141592653589793) ?[long, double])\l \l0x00b3: IGET  (r7 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.al double \l0x00b5: ARITH  (r7 I:double) = (r7 I:double) * (r5 I:double) \l0x00b7: IGET  (r5 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.bl double \l0x00b9: ARITH  (r7 I:double) = (r7 I:double) \/ (r5 I:double) \l0x00ba: ARITH  (r5 I:double) = (r1 I:double) + (r7 I:double) \l}"];
Node_16 [shape=record,label="{16\:\ 0x00bd|0x00bd: MOVE  (r5 I:?[long, double]) = (r1 I:?[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x00bf|0x00bf: IGET  (r5 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.al double \l0x00c1: IGET  (r7 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.bl double \l0x00c3: ARITH  (r5 I:double) = (r5 I:double) * (r7 I:double) \l0x00c5: ARITH  (r5 I:double) = (r5 I:double) * (r23 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x00c7|0x00c7: INVOKE  (r1 I:double) = (r3 I:double) java.lang.Math.abs(double):double type: STATIC \l0x00cb: ARITH  (r1 I:double) = (r1 I:double) \- (r18 I:double) \l0x00cd: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.abs(double):double type: STATIC \l0x00d1: CONST  (r7 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x00d6: CMP_G  (r1 I:int) = (r1 I:double), (r7 I:double) \l}"];
Node_19 [shape=record,label="{19\:\ 0x00d8|0x00d8: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:25:0x010f \l}"];
Node_20 [shape=record,label="{20\:\ 0x00da|0x00da: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.al double \l0x00dc: ARITH  (r1 I:double) = (r1 I:double) * (r16 I:double) \l0x00de: ARITH  (r7 I:double) = (r18 I:double) \- (r3 I:double) \l0x00e0: ARITH  (r3 I:double) = (r3 I:double) + (r18 I:double) \l0x00e2: ARITH  (r7 I:double) = (r7 I:double) \/ (r3 I:double) \l0x00e3: INVOKE  (r3 I:double) = (r7 I:double) java.lang.Math.log(double):double type: STATIC \l0x00e7: ARITH  (r1 I:double) = (r1 I:double) * (r3 I:double) \l0x00e9: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.bl double \l0x00eb: ARITH  (r1 I:double) = (r1 I:double) \/ (r3 I:double) \l0x00ec: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.u_0 double \l0x00ee: ARITH  (r5 I:double) = (r5 I:double) \- (r3 I:double) \l0x00ef: IGET  (r3 I:boolean) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.rot boolean \l}"];
Node_21 [shape=record,label="{21\:\ 0x00f1|0x00f1: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00f8 \l}"];
Node_22 [shape=record,label="{22\:\ 0x00f3|0x00f3: IPUT  (r5 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x00f5: IPUT  (r1 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_23 [shape=record,label="{23\:\ 0x00f8|0x00f8: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.cosrot double \l0x00fa: ARITH  (r3 I:double) = (r3 I:double) * (r1 I:double) \l0x00fc: IGET  (r7 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.sinrot double \l0x00fe: ARITH  (r7 I:double) = (r7 I:double) * (r5 I:double) \l0x0100: ARITH  (r3 I:double) = (r3 I:double) + (r7 I:double) \l0x0101: IPUT  (r3 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0103: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.cosrot double \l0x0105: ARITH  (r5 I:double) = (r5 I:double) * (r3 I:double) \l0x0107: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.ObliqueMercatorProjection) org.osgeo.proj4j.proj.ObliqueMercatorProjection.sinrot double \l0x0109: ARITH  (r1 I:double) = (r1 I:double) * (r3 I:double) \l0x010b: ARITH  (r5 I:double) = (r5 I:double) \- (r1 I:double) \l0x010c: IPUT  (r5 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_24 [shape=record,label="{24\:\ 0x010e|0x010e: RETURN  (r9 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
Node_25 [shape=record,label="{25\:\ 0x010f|0x010f: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x0111: CONST_STR  (r2 I:java.lang.String) =  \"Obl 3\" \l0x0113: INVOKE  \l  (r1 I:org.osgeo.proj4j.ProjectionException)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x0116|0x0116: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.ObliqueMercatorProjection.project((r22 'this' I:org.osgeo.proj4j.proj.ObliqueMercatorProjection A[IMMUTABLE_TYPE, THIS]), (r23 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_18;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_18;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_25 -> Node_26;
}

