digraph "CFG fororg.osgeo.proj4j.proj.AzimuthalProjection.inside(DD)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|if ((org.osgeo.proj4j.util.ProjectionMath.greatCircleDistance(java.lang.Math.toRadians(r9), java.lang.Math.toRadians(r11), r8.projectionLongitude, r8.projectionLatitude) \> java.lang.Math.toRadians(r8.mapRadius) ? 1 : (org.osgeo.proj4j.util.ProjectionMath.greatCircleDistance(java.lang.Math.toRadians(r9), java.lang.Math.toRadians(r11), r8.projectionLongitude, r8.projectionLatitude) == java.lang.Math.toRadians(r8.mapRadius) ? 0 : \-1)) \>= 0) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|SYNTHETIC\lRETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean org.osgeo.proj4j.proj.AzimuthalProjection.inside((r8v0 'this' org.osgeo.proj4j.proj.AzimuthalProjection A[IMMUTABLE_TYPE, THIS]), (r9v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
}

