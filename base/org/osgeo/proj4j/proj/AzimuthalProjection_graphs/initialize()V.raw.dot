digraph "CFG fororg.osgeo.proj4j.proj.AzimuthalProjection.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:org.osgeo.proj4j.proj.Projection) org.osgeo.proj4j.proj.Projection.initialize():void type: SUPER \l0x0003: IGET  (r0 I:double) = (r4 I:org.osgeo.proj4j.proj.AzimuthalProjection) org.osgeo.proj4j.proj.AzimuthalProjection.projectionLatitude double \l0x0005: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0009: CONST  (r2 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x000e: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x000f: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0013: CONST  (r2 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x0018: CMP_G  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:7:0x002a \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: IGET  (r0 I:double) = (r4 I:org.osgeo.proj4j.proj.AzimuthalProjection) org.osgeo.proj4j.proj.AzimuthalProjection.projectionLatitude double \l0x001e: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0020: CMP_G  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x0026 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: IPUT  \l  (r0 I:int)\l  (r4 I:org.osgeo.proj4j.proj.AzimuthalProjection)\l org.osgeo.proj4j.proj.AzimuthalProjection.mode int \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: IGET  (r0 I:double) = (r4 I:org.osgeo.proj4j.proj.AzimuthalProjection) org.osgeo.proj4j.proj.AzimuthalProjection.projectionLatitude double \l0x002c: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0030: CMP_L  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0032|0x0032: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x0048 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0035: IPUT  \l  (r0 I:int)\l  (r4 I:org.osgeo.proj4j.proj.AzimuthalProjection)\l org.osgeo.proj4j.proj.AzimuthalProjection.mode int \l0x0037: IGET  (r0 I:double) = (r4 I:org.osgeo.proj4j.proj.AzimuthalProjection) org.osgeo.proj4j.proj.AzimuthalProjection.projectionLatitude double \l0x0039: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x003d: IPUT  \l  (r0 I:double)\l  (r4 I:org.osgeo.proj4j.proj.AzimuthalProjection)\l org.osgeo.proj4j.proj.AzimuthalProjection.sinphi0 double \l0x003f: IGET  (r0 I:double) = (r4 I:org.osgeo.proj4j.proj.AzimuthalProjection) org.osgeo.proj4j.proj.AzimuthalProjection.projectionLatitude double \l0x0041: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0045: IPUT  \l  (r0 I:double)\l  (r4 I:org.osgeo.proj4j.proj.AzimuthalProjection)\l org.osgeo.proj4j.proj.AzimuthalProjection.cosphi0 double \l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|0x0048: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0049: IPUT  \l  (r0 I:int)\l  (r4 I:org.osgeo.proj4j.proj.AzimuthalProjection)\l org.osgeo.proj4j.proj.AzimuthalProjection.mode int \l}"];
Node_11 [shape=record,label="{11\:\ 0x004b|0x004b: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.AzimuthalProjection.initialize((r4 'this' I:org.osgeo.proj4j.proj.AzimuthalProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
}

