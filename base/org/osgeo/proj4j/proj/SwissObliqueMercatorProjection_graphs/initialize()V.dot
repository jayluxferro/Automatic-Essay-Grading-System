digraph "CFG fororg.osgeo.proj4j.proj.SwissObliqueMercatorProjection.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r17\lsuper.initialize()\lr0.phi0 = r0.projectionLatitude\lr0.hlf_e = r0.f423e * 0.5d\ldouble r1 = java.lang.Math.cos(r0.phi0)\ldouble r1 = r1 * r1\lr0.f436c = java.lang.Math.sqrt((((r0.f424es * r1) * r1) * r0.rone_es) + 1.0d)\ldouble r5 = java.lang.Math.sin(r0.phi0)\ldouble r7 = r5 \/ r0.f436c\lr0.sinp0 = r7\ldouble r7 = java.lang.Math.asin(r7)\lr0.cosp0 = java.lang.Math.cos(r7)\ldouble r5 = r5 * r0.f423e\lr0.f435K = java.lang.Math.log(java.lang.Math.tan((r7 * 0.5d) + 0.7853981633974483d)) \- (r0.f436c * (java.lang.Math.log(java.lang.Math.tan((r0.phi0 * 0.5d) + 0.7853981633974483d)) \- (r0.hlf_e * java.lang.Math.log((r5 + 1.0d) \/ (1.0d \- r5)))))\lr0.f437kR = (r0.scaleFactor * java.lang.Math.sqrt(r0.one_es)) \/ (1.0d \- (r5 * r5))\l}"];
Node_1 [shape=record,label="{1\:\ 0x0088|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.SwissObliqueMercatorProjection.initialize((r17v0 'this' org.osgeo.proj4j.proj.SwissObliqueMercatorProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

