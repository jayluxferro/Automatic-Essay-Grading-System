digraph "CFG fororg.osgeo.proj4j.proj.NicolosiProjection.project(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r30\lr2 = r32\lr4 = r34\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|if ((java.lang.Math.abs(r30) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r30) == 1.0E\-10d ? 0 : \-1)) \>= 0) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|r4.f294x = 0.0d\lr4.f295y = r2\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b}"];
Node_4 [shape=record,label="{4\:\ 0x0021|if ((java.lang.Math.abs(r32) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r32) == 1.0E\-10d ? 0 : \-1)) \>= 0) goto L_0x0029\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|r4.f294x = r0\lr4.f295y = 0.0d\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029}"];
Node_7 [shape=record,label="{7\:\ 0x0039|if ((java.lang.Math.abs(java.lang.Math.abs(r30) \- 1.5707963267948966d) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(java.lang.Math.abs(r30) \- 1.5707963267948966d) == 1.0E\-10d ? 0 : \-1)) \>= 0) goto L_0x004d\l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|r4.f294x = r0 * java.lang.Math.cos(r32)\lr4.f295y = java.lang.Math.sin(r32) * 1.5707963267948966d\l}"];
Node_9 [shape=record,label="{9\:\ 0x004d}"];
Node_10 [shape=record,label="{10\:\ 0x0058|if ((java.lang.Math.abs(java.lang.Math.abs(r32) \- 1.5707963267948966d) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(java.lang.Math.abs(r32) \- 1.5707963267948966d) == 1.0E\-10d ? 0 : \-1)) \>= 0) goto L_0x005f\l}"];
Node_11 [shape=record,label="{11\:\ 0x005a|r4.f294x = 0.0d\lr4.f295y = r2\l}"];
Node_12 [shape=record,label="{12\:\ 0x005f|double r5 = (1.5707963267948966d \/ r0) \- (r0 \/ 1.5707963267948966d)\ldouble r7 = r2 \/ 1.5707963267948966d\ldouble r17 = java.lang.Math.sin(r32)\ldouble r13 = (1.0d \- (r7 * r7)) \/ (r17 \- r7)\ldouble r7 = r5 \/ r13\ldouble r7 = r7 * r7\ldouble r19 = ((r5 * r17) \/ r13) \- (r5 * 0.5d)\ldouble r5 = r7 + 1.0d\ldouble r19 = r19 \/ r5\ldouble r23 = (r17 \/ r7) + (0.5d * r13)\ldouble r21 = (1.0d \/ r7) + 1.0d\ldouble r23 = r23 \/ r21\ldouble r25 = java.lang.Math.cos(r32)\ldouble r5 = java.lang.Math.sqrt((r19 * r19) + ((r25 * r25) \/ r5))\l}"];
Node_13 [shape=record,label="{13\:\ 0x00a4|if ((r0 \> 0.0d ? 1 : (r0 == 0.0d ? 0 : \-1)) \>= 0) goto L_0x00a7\l}"];
Node_14 [shape=record,label="{14\:\ 0x00a6|double r5 = \-r5\l}"];
Node_15 [shape=record,label="{15\:\ 0x00a7|PHI: r5 \l  PHI: (r5v17 double) = (r5v16 double), (r5v23 double) binds: [B:13:0x00a4, B:14:0x00a6] A[DONT_GENERATE, DONT_INLINE]\l|r4.f294x = (r19 + r5) * 1.5707963267948966d\ldouble r0 = java.lang.Math.sqrt((r23 * r23) \- (((((r17 * r17) \/ r7) + (r13 * r17)) \- 1.0d) \/ r21))\l}"];
Node_16 [shape=record,label="{16\:\ 0x00c0|if ((r2 \> 0.0d ? 1 : (r2 == 0.0d ? 0 : \-1)) \>= 0) goto L_0x00c3\l}"];
Node_17 [shape=record,label="{17\:\ 0x00c3|double r0 = \-r0\l}"];
Node_18 [shape=record,label="{18\:\ 0x00c4|PHI: r0 \l  PHI: (r0v7 double) = (r0v6 double), (r0v9 double) binds: [B:16:0x00c0, B:17:0x00c3] A[DONT_GENERATE, DONT_INLINE]\l|r4.f295y = (r23 + r0) * 1.5707963267948966d\l}"];
Node_19 [shape=record,label="{19\:\ 0x00cb|RETURN\l|return r4\l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.NicolosiProjection.project((r29v0 'this' org.osgeo.proj4j.proj.NicolosiProjection A[IMMUTABLE_TYPE, THIS]), (r30v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_19;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_19;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
}

