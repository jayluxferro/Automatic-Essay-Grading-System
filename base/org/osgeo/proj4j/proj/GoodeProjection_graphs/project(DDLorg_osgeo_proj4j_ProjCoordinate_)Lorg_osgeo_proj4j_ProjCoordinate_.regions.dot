digraph "CFG fororg.osgeo.proj4j.proj.GoodeProjection.project(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
subgraph cluster_Region_1666444612 {
label = "R(1:(2:(1:9)|(3:3|7|8)))";
node [shape=record,color=blue];
subgraph cluster_Region_840060267 {
label = "R(2:(1:9)|(3:3|7|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_336144160 {
label = "IF [B:1:0x000b] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (java.lang.Math.abs(r10) \<= PHI_LIM) goto L_0x000d\l}"];
subgraph cluster_Region_1898044174 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return r7.sinu.project(r8, r10, r12)\l}"];
}
}
subgraph cluster_Region_597323749 {
label = "R(3:3|7|8)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.ProjCoordinate r8 = r7.moll.project(r8, r10, r12)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|PHI: r9 \l  PHI: (r9v1 double) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r8.f295y \-= r10 \>= 0.0d ? Y_COR : \-0.0528d\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r8\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000d}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0026}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0028}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002e}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.GoodeProjection.project((r7v0 'this' org.osgeo.proj4j.proj.GoodeProjection A[IMMUTABLE_TYPE, THIS]), (r8v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_2 -> Node_9;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

