digraph "CFG fororg.osgeo.proj4j.proj.Eckert2Projection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r7 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0004: CONST  (r2 I:?[long, double]) = \l  (4609196439853433787(0x3ff727bdd17583bb, double:1.4472025091165353) ?[long, double])\l \l0x0009: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x000a: CONST  (r2 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x000c: ARITH  (r2 I:double) = (r2 I:double) \- (r0 I:double) \l0x000d: IPUT  (r2 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x000f: CONST  (r0 I:?[long, double]) = \l  (4601970112306267482(0x3fdd7b6f52fac55a, double:0.46065886596178063) ?[long, double])\l \l0x0014: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double) \l0x0016: ARITH  (r5 I:double) = (r5 I:double) \/ (r2 I:double) \l0x0017: IPUT  (r5 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0019: IGET  (r5 I:double) = (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x001b: IGET  (r0 I:double) = (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x001d: ARITH  (r5 I:double) = (r5 I:double) * (r0 I:double) \l0x001f: CONST  (r0 I:?[long, double]) = \l  (4616189618054758400(0x4010000000000000, double:4.0) ?[long, double])\l \l0x0021: ARITH  (r0 I:double) = (r0 I:double) \- (r5 I:double) \l0x0022: CONST  (r5 I:?[long, double]) = \l  (4599676419421066581(0x3fd5555555555555, double:0.3333333333333333) ?[long, double])\l \l0x0027: ARITH  (r0 I:double) = (r0 I:double) * (r5 I:double) \l0x0029: IPUT  (r0 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x002b: IGET  (r5 I:double) = (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x002d: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0031: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0033: CONST  (r2 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0035: CMP_L  (r5 I:int) = (r5 I:double), (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0037|0x0037: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:11:0x0064 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0039|0x0039: IGET  (r5 I:double) = (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x003b: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.abs(double):double type: STATIC \l0x003f: CONST  (r2 I:?[long, double]) = \l  (4607182419250377371(0x3ff000001ad7f29b, double:1.0000001) ?[long, double])\l \l0x0044: CMP_L  (r5 I:int) = (r5 I:double), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0046|0x0046: IF  (r5 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:9:0x005c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0048|0x0048: IGET  (r5 I:double) = (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x004a: CMP_G  (r5 I:int) = (r5 I:double), (r0 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x004c|0x004c: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:7:0x0054 \l}"];
Node_6 [shape=record,label="{6\:\ 0x004e|0x004e: CONST  (r5 I:?[long, double]) = \l  (\-4613618979930100456(0xbff921fb54442d18, double:\-1.5707963267948966) ?[long, double])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0054|0x0054: CONST  (r5 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0059|0x0059: IPUT  (r5 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_9 [shape=record,label="{9\:\ 0x005c|0x005c: NEW_INSTANCE  (r5 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x005e: CONST_STR  (r6 I:java.lang.String) =  \"I\" \l0x0060: INVOKE  \l  (r5 I:org.osgeo.proj4j.ProjectionException)\l  (r6 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x0063|0x0063: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0064|0x0064: IGET  (r5 I:double) = (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0066: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.asin(double):double type: STATIC \l0x006a: IPUT  (r5 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_12 [shape=record,label="{12\:\ 0x006c|0x006c: CMP_G  (r5 I:int) = (r7 I:double), (r0 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x006e|0x006e: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:15:0x0075 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0070|0x0070: IGET  (r5 I:double) = (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0072: NEG  (r5 I:double) = (r5 I:double) \l0x0073: IPUT  (r5 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_15 [shape=record,label="{15\:\ 0x0075|0x0075: RETURN  (r9 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.Eckert2Projection.projectInverse((r4 'this' I:org.osgeo.proj4j.proj.Eckert2Projection A[IMMUTABLE_TYPE, THIS]), (r5 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
}

