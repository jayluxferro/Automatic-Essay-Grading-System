digraph "CFG fororg.osgeo.proj4j.proj.LambertConformalConicProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
subgraph cluster_Region_1131251978 {
label = "R(3:0|(3:(1:4)|(1:7)(1:8)|9)(3:10|(1:12)|13)|14)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r15\lorg.osgeo.proj4j.ProjCoordinate r1 = r20\ldouble double r2 = r16 \/ r0.scaleFactor\ldouble double r6 = r0.rho0 \- (r18 \/ r0.scaleFactor)\ldouble double r4 = org.osgeo.proj4j.util.ProjectionMath.distance(r2, r6)\l}"];
subgraph cluster_IfRegion_1454648006 {
label = "IF [B:1:0x0016] THEN: R(3:(1:4)|(1:7)(1:8)|9) ELSE: R(3:10|(1:12)|13)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0016|if (r4 != 0.0d) goto L_0x0018\l}"];
subgraph cluster_Region_1768200510 {
label = "R(3:(1:4)|(1:7)(1:8)|9)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_860928414 {
label = "IF [B:3:0x001c] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x001c|if (r0.f386n \< 0.0d) goto L_0x001e\l}"];
subgraph cluster_Region_204212931 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001e|double r4 = \-r4\ldouble r2 = \-r2\ldouble r6 = \-r6\l}"];
}
}
subgraph cluster_IfRegion_1135708983 {
label = "IF [B:6:0x0025] THEN: R(1:7) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0025|if (r0.spherical == true) goto L_0x0027\l}"];
subgraph cluster_Region_114919981 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0027|r1.f295y = (java.lang.Math.atan(java.lang.Math.pow(r0.f385c \/ r4, 1.0d \/ r0.f386n)) * 2.0d) \- 1.5707963267948966d\l}"];
}
subgraph cluster_Region_354024291 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0042|r1.f295y = org.osgeo.proj4j.util.ProjectionMath.phi2(java.lang.Math.pow(r4 \/ r0.f385c, 1.0d \/ r0.f386n), r0.f423e)\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x0054|r1.f294x = java.lang.Math.atan2(r2, r6) \/ r0.f386n\l}"];
}
subgraph cluster_Region_1181644993 {
label = "R(3:10|(1:12)|13)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x005e|double r8 = 1.5707963267948966d\lr1.f294x = 0.0d\l}"];
subgraph cluster_IfRegion_39881787 {
label = "IF [B:11:0x0069] THEN: R(1:12) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0069|if (r0.f386n \<= 0.0d) goto L_0x006c\l}"];
subgraph cluster_Region_466936903 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x006c|r8 = \-1.5707963267948966d\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0071|PHI: r8 \l  PHI: (r8v1 double) = (r8v0 double), (r8v2 double) binds: [B:11:0x0069, B:12:0x006c] A[DONT_GENERATE, DONT_INLINE]\l|r1.f295y = r8\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x0073|RETURN\l|return r1\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0018}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0021|PHI: r2 r4 r6 \l  PHI: (r2v4 double) = (r2v1 double), (r2v7 double) binds: [B:3:0x001c, B:4:0x001e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v3 double) = (r4v2 double), (r4v13 double) binds: [B:3:0x001c, B:4:0x001e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 double) = (r6v1 double), (r6v3 double) binds: [B:3:0x001c, B:4:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.LambertConformalConicProjection.projectInverse((r15v0 'this' org.osgeo.proj4j.proj.LambertConformalConicProjection A[IMMUTABLE_TYPE, THIS]), (r16v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_2 -> Node_3;
Node_5 -> Node_6;
}

