digraph "CFG fororg.osgeo.proj4j.proj.LambertConformalConicProjection.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r24\lsuper.initialize()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if ((r0.projectionLatitude1 \> 0.0d ? 1 : (r0.projectionLatitude1 == 0.0d ? 0 : \-1)) != 0) goto L_0x0013\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|double r1 = r0.projectionLatitude\lr0.projectionLatitude2 = r1\lr0.projectionLatitude1 = r1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013}"];
Node_4 [shape=record,label="{4\:\ 0x0023|if ((java.lang.Math.abs(r0.projectionLatitude1 + r0.projectionLatitude2) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r0.projectionLatitude1 + r0.projectionLatitude2) == 1.0E\-10d ? 0 : \-1)) \< 0) goto L_0x0151\l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|double r1 = java.lang.Math.sin(r0.projectionLatitude1)\lr0.f386n = r1\ldouble r9 = java.lang.Math.cos(r0.projectionLatitude1)\lr11 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0040|if ((java.lang.Math.abs(r0.projectionLatitude1 \- r0.projectionLatitude2) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r0.projectionLatitude1 \- r0.projectionLatitude2) == 1.0E\-10d ? 0 : \-1)) \< 0) goto L_0x0044\l}"];
Node_7 [shape=record,label="{7\:\ 0x0042|r13 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0044|r13 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|PHI: r13 \l  PHI: (r13v0 boolean) = (r13v1 boolean), (r13v2 boolean) binds: [B:8:0x0044, B:7:0x0042] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0049|if ((r0.f424es \> 0.0d ? 1 : (r0.f424es == 0.0d ? 0 : \-1)) != 0) goto L_0x004c\l}"];
Node_11 [shape=record,label="{11\:\ 0x004b|r11 = true\l}"];
Node_12 [shape=record,label="{12\:\ 0x004c|PHI: r11 \l  PHI: (r11v2 boolean) = (r11v1 boolean), (r11v11 boolean) binds: [B:10:0x0049, B:11:0x004b] A[DONT_GENERATE, DONT_INLINE]\l|r0.spherical = r11\l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|if (r0.spherical != false) goto L_0x00de\l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|r7 = r1\ldouble r16 = org.osgeo.proj4j.util.ProjectionMath.msfn(r7, r9, r0.f424es)\lr9 = r1\ldouble r1 = org.osgeo.proj4j.util.ProjectionMath.tsfn(r0.projectionLatitude1, r9, r0.f423e)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0067|if (r13 == false) goto L_0x00a0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|double r7 = java.lang.Math.sin(r0.projectionLatitude2)\lr18 = r7\lr0.f386n = java.lang.Math.log(r16 \/ org.osgeo.proj4j.util.ProjectionMath.msfn(r18, java.lang.Math.cos(r0.projectionLatitude2), r0.f424es))\ldouble r9 = r0.f386n\ldouble r11 = r0.projectionLatitude2\lr0.f386n = r9 \/ java.lang.Math.log(r1 \/ org.osgeo.proj4j.util.ProjectionMath.tsfn(r11, r7, r0.f423e))\l}"];
Node_17 [shape=record,label="{17\:\ 0x00a0|double r1 = (r16 * java.lang.Math.pow(r1, \-r0.f386n)) \/ r0.f386n\lr0.rho0 = r1\lr0.f385c = r1\ldouble r1 = r0.rho0\l}"];
Node_18 [shape=record,label="{18\:\ 0x00c0|if ((java.lang.Math.abs(java.lang.Math.abs(r0.projectionLatitude) \- 1.5707963267948966d) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(java.lang.Math.abs(r0.projectionLatitude) \- 1.5707963267948966d) == 1.0E\-10d ? 0 : \-1)) \>= 0) goto L_0x00c5\l}"];
Node_19 [shape=record,label="{19\:\ 0x00c2|r3 = 0.0d\l}"];
Node_20 [shape=record,label="{20\:\ 0x00c5|double r3 = java.lang.Math.pow(org.osgeo.proj4j.util.ProjectionMath.tsfn(r0.projectionLatitude, java.lang.Math.sin(r0.projectionLatitude), r0.f423e), r0.f386n)\l}"];
Node_21 [shape=record,label="{21\:\ 0x00d9|PHI: r3 \l  PHI: (r3v14 double) = (r3v16 double), (r3v17 double) binds: [B:20:0x00c5, B:19:0x00c2] A[DONT_GENERATE, DONT_INLINE]\l|r0.rho0 = r1 * r3\l}"];
Node_22 [shape=record,label="{22\:\ 0x00de}"];
Node_23 [shape=record,label="{23\:\ 0x00e5|if (r13 == false) goto L_0x010d\l}"];
Node_24 [shape=record,label="{24\:\ 0x00e7|r0.f386n = java.lang.Math.log(r9 \/ java.lang.Math.cos(r0.projectionLatitude2)) \/ java.lang.Math.log(java.lang.Math.tan((r0.projectionLatitude2 * 0.5d) + 0.7853981633974483d) \/ java.lang.Math.tan((r0.projectionLatitude1 * 0.5d) + 0.7853981633974483d))\l}"];
Node_25 [shape=record,label="{25\:\ 0x010d|r0.f385c = (r9 * java.lang.Math.pow(java.lang.Math.tan((r0.projectionLatitude1 * 0.5d) + 0.7853981633974483d), r0.f386n)) \/ r0.f386n\l}"];
Node_26 [shape=record,label="{26\:\ 0x0135|if ((java.lang.Math.abs(java.lang.Math.abs(r0.projectionLatitude) \- 1.5707963267948966d) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(java.lang.Math.abs(r0.projectionLatitude) \- 1.5707963267948966d) == 1.0E\-10d ? 0 : \-1)) \>= 0) goto L_0x013a\l}"];
Node_27 [shape=record,label="{27\:\ 0x0137|r3 = 0.0d\l}"];
Node_28 [shape=record,label="{28\:\ 0x013a|double r3 = r0.f385c * java.lang.Math.pow(java.lang.Math.tan((r0.projectionLatitude * 0.5d) + 0.7853981633974483d), \-r0.f386n)\l}"];
Node_29 [shape=record,label="{29\:\ 0x014e|PHI: r3 \l  PHI: (r3v2 double) = (r3v5 double), (r3v6 double) binds: [B:28:0x013a, B:27:0x0137] A[DONT_GENERATE, DONT_INLINE]\l|r0.rho0 = r3\l}"];
Node_30 [shape=record,label="{30\:\ 0x0151}"];
Node_31 [shape=record,label="{31\:\ 0x0156|throw new org.osgeo.proj4j.ProjectionException()\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.LambertConformalConicProjection.initialize((r24v0 'this' org.osgeo.proj4j.proj.LambertConformalConicProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_30;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_22;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_33;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_32;
Node_30 -> Node_31;
}

