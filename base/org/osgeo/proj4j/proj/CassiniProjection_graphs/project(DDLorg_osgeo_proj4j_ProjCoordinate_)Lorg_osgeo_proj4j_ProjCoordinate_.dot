digraph "CFG fororg.osgeo.proj4j.proj.CassiniProjection.project(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r10.spherical == false) goto L_0x0027\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r15.f294x = java.lang.Math.asin(java.lang.Math.cos(r13) * java.lang.Math.sin(r11))\lr15.f295y = java.lang.Math.atan2(java.lang.Math.tan(r13), java.lang.Math.cos(r11)) \- r10.projectionLatitude\l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|double r2 = java.lang.Math.sin(r13)\lr10.f337n = r2\ldouble r4 = java.lang.Math.cos(r13)\lr10.f332c = r4\lr0 = r13\lr15.f295y = org.osgeo.proj4j.util.ProjectionMath.mlfn(r0, r2, r4, r10.f335en)\lr10.f337n = 1.0d \/ java.lang.Math.sqrt(1.0d \- ((r10.f424es * r10.f337n) * r10.f337n))\lr10.f340tn = java.lang.Math.tan(r13)\lr10.f339t = r10.f340tn * r10.f340tn\lr10.f330a1 = r11 * r10.f332c\lr10.f332c = r10.f332c * ((r10.f424es * r10.f332c) \/ (1.0d \- r10.f424es))\lr10.f331a2 = r10.f330a1 * r10.f330a1\lr15.f294x = (r10.f337n * r10.f330a1) * (1.0d \- ((r10.f331a2 * r10.f339t) * (f325C1 \- ((((8.0d \- r10.f339t) + (r10.f332c * 8.0d)) * r10.f331a2) * f326C2))))\lr15.f295y = r15.f295y \- (r10.f336m0 \- (((r10.f337n * r10.f340tn) * r10.f331a2) * (((((5.0d \- r10.f339t) + (r10.f332c * 6.0d)) * r10.f331a2) * f327C3) + 0.5d)))\l}"];
Node_4 [shape=record,label="{4\:\ 0x00dc|RETURN\l|return r15\l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.CassiniProjection.project((r10v0 'this' org.osgeo.proj4j.proj.CassiniProjection A[IMMUTABLE_TYPE, THIS]), (r11v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

