digraph "CFG fororg.osgeo.proj4j.proj.CassiniProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r10.spherical == false) goto L_0x002b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|double r13 = r13 + r10.projectionLatitude\lr10.f334dd = r13\lr15.f295y = java.lang.Math.asin(java.lang.Math.sin(r13) * java.lang.Math.cos(r11))\lr15.f294x = java.lang.Math.atan2(java.lang.Math.tan(r11), java.lang.Math.cos(r10.f334dd))\l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|double r13 = org.osgeo.proj4j.util.ProjectionMath.inv_mlfn(r10.f336m0 + r13, r10.f424es, r10.f335en)\lr10.f340tn = java.lang.Math.tan(r13)\lr10.f339t = r10.f340tn * r10.f340tn\lr10.f337n = java.lang.Math.sin(r13)\lr10.f338r = 1.0d \/ (1.0d \- ((r10.f424es * r10.f337n) * r10.f337n))\lr10.f337n = java.lang.Math.sqrt(r10.f338r)\lr10.f338r = r10.f338r * ((1.0d \- r10.f424es) * r10.f337n)\lr10.f334dd = r11 \/ r10.f337n\lr10.f333d2 = r10.f334dd * r10.f334dd\lr15.f295y = r13 \- ((((r10.f337n * r10.f340tn) \/ r10.f338r) * r10.f333d2) * (0.5d \- ((((r10.f339t * 3.0d) + 1.0d) * r10.f333d2) * f327C3)))\lr15.f294x = (r10.f334dd * (((r10.f339t * r10.f333d2) * (((((r10.f339t * 3.0d) + 1.0d) * r10.f333d2) * f329C5) + \-0.3333333333333333d)) + 1.0d)) \/ java.lang.Math.cos(r13)\l}"];
Node_4 [shape=record,label="{4\:\ 0x00d1|RETURN\l|return r15\l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.CassiniProjection.projectInverse((r10v0 'this' org.osgeo.proj4j.proj.CassiniProjection A[IMMUTABLE_TYPE, THIS]), (r11v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

