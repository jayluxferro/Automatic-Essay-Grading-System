digraph "CFG fororg.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0002: IGET  (r0 I:double) = \l  (r6 I:org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection)\l org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.scaleFactor double \l0x0004: ARITH  (r0 I:double) = (r18 I:double) \/ (r0 I:double) \l0x0006: IGET  (r2 I:double) = \l  (r6 I:org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection)\l org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.scaleFactor double \l0x0008: ARITH  (r2 I:double) = (r20 I:double) \/ (r2 I:double) \l0x000a: ARITH  (r4 I:double) = (r0 I:double) * (r0 I:double) \l0x000c: ARITH  (r7 I:double) = (r2 I:double) * (r2 I:double) \l0x000e: ARITH  (r4 I:double) = (r4 I:double) + (r7 I:double) \l0x000f: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0013: CONST  (r7 I:?[long, double]) = (0 ?[long, double]) \l0x0015: CMP_L  (r9 I:int) = (r4 I:double), (r7 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0052 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|0x0019: CONST  (r7 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x001b: IGET  (r9 I:double) = \l  (r6 I:org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection)\l org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.R2 double \l0x001d: INVOKE  (r9 I:double) = (r4 I:double), (r9 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x0021: ARITH  (r9 I:double) = (r9 I:double) * (r7 I:double) \l0x0023: INVOKE  (r7 I:double) = (r9 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0027: INVOKE  (r9 I:double) = (r9 I:double) java.lang.Math.cos(double):double type: STATIC \l0x002b: IGET  (r11 I:double) = \l  (r6 I:org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection)\l org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.sinc0 double \l0x002d: ARITH  (r11 I:double) = (r11 I:double) * (r9 I:double) \l0x002f: ARITH  (r13 I:double) = (r2 I:double) * (r7 I:double) \l0x0031: MOVE  (r15 I:?[long, double]) = (r2 I:?[long, double]) \l0x0032: IGET  (r2 I:double) = \l  (r6 I:org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection)\l org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.cosc0 double \l0x0034: ARITH  (r13 I:double) = (r13 I:double) * (r2 I:double) \l0x0036: ARITH  (r13 I:double) = (r13 I:double) \/ (r4 I:double) \l0x0037: ARITH  (r11 I:double) = (r11 I:double) + (r13 I:double) \l0x0038: INVOKE  (r2 I:double) = (r11 I:double) java.lang.Math.asin(double):double type: STATIC \l0x003c: ARITH  (r0 I:double) = (r0 I:double) * (r7 I:double) \l0x003e: IGET  (r11 I:double) = \l  (r6 I:org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection)\l org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.cosc0 double \l0x0040: ARITH  (r4 I:double) = (r4 I:double) * (r11 I:double) \l0x0042: ARITH  (r4 I:double) = (r4 I:double) * (r9 I:double) \l0x0044: IGET  (r9 I:double) = \l  (r6 I:org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection)\l org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.sinc0 double \l0x0046: ARITH  (r9 I:double) = (r9 I:double) * (r15 I:double) \l0x0048: ARITH  (r9 I:double) = (r9 I:double) * (r7 I:double) \l0x004a: ARITH  (r4 I:double) = (r4 I:double) \- (r9 I:double) \l0x004b: INVOKE  (r0 I:double) = (r0 I:double), (r4 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x004f: MOVE  (r3 I:?[long, double]) = (r2 I:?[long, double]) \l0x0050: MOVE  (r1 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0052|0x0052: IGET  (r0 I:double) = \l  (r6 I:org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection)\l org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.phic0 double \l0x0054: MOVE  (r3 I:?[long, double]) = (r0 I:?[long, double]) \l0x0055: MOVE  (r1 I:?[long, double]) = (r7 I:?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0056|0x0056: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0058: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x005a: INVOKE  (r0 I:org.osgeo.proj4j.ProjCoordinate) = \l  (r0 I:org.osgeo.proj4j.proj.GaussProjection)\l  (r1 I:double)\l  (r3 I:double)\l  (r5 I:org.osgeo.proj4j.ProjCoordinate)\l org.osgeo.proj4j.proj.GaussProjection.projectInverse(double, double, org.osgeo.proj4j.ProjCoordinate):org.osgeo.proj4j.ProjCoordinate type: SUPER \l}"];
Node_5 [shape=record,label="{5\:\ 0x005e|0x005e: RETURN  (r0 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.projectInverse((r17 'this' I:org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection A[IMMUTABLE_TYPE, THIS]), (r18 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

