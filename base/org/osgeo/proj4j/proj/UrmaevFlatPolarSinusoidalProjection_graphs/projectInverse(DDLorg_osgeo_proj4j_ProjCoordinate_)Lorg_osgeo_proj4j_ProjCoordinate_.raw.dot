digraph "CFG fororg.osgeo.proj4j.proj.UrmaevFlatPolarSinusoidalProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:double) = \l  (r4 I:org.osgeo.proj4j.proj.UrmaevFlatPolarSinusoidalProjection)\l org.osgeo.proj4j.proj.UrmaevFlatPolarSinusoidalProjection.C_y double \l0x0002: ARITH  (r7 I:double) = (r7 I:double) \/ (r0 I:double) \l0x0003: INVOKE  (r0 I:double) = (r7 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0007: IGET  (r2 I:double) = \l  (r4 I:org.osgeo.proj4j.proj.UrmaevFlatPolarSinusoidalProjection)\l org.osgeo.proj4j.proj.UrmaevFlatPolarSinusoidalProjection.n double \l0x0009: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x000a: INVOKE  (r0 I:double) = (r0 I:double) org.osgeo.proj4j.util.ProjectionMath.asin(double):double type: STATIC \l0x000e: IPUT  (r0 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0010: INVOKE  (r7 I:double) = (r7 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0014: CONST  (r0 I:?[long, double]) = \l  (4606077980124361234(0x3fec1384d50fb212, double:0.8773826753) ?[long, double])\l \l0x0019: ARITH  (r7 I:double) = (r7 I:double) * (r0 I:double) \l0x001b: ARITH  (r5 I:double) = (r5 I:double) \/ (r7 I:double) \l0x001c: IPUT  (r5 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: RETURN  (r9 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.UrmaevFlatPolarSinusoidalProjection.projectInverse((r4 'this' I:org.osgeo.proj4j.proj.UrmaevFlatPolarSinusoidalProjection A[IMMUTABLE_TYPE, THIS]), (r5 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

