digraph "CFG fororg.osgeo.proj4j.proj.BonneProjection.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.initialize()\lr15.phi1 = 1.5707963267948966d\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|if ((java.lang.Math.abs(r15.phi1) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r15.phi1) == 1.0E\-10d ? 0 : \-1)) \< 0) goto L_0x0071\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019}"];
Node_3 [shape=record,label="{3\:\ 0x001d|if (r15.spherical != false) goto L_0x0057\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|r15.f323en = org.osgeo.proj4j.util.ProjectionMath.enfn(r15.f424es)\ldouble r8 = r15.phi1\ldouble r10 = java.lang.Math.sin(r15.phi1)\lr15.am1 = r10\ldouble r0 = java.lang.Math.cos(r15.phi1)\lr12 = r0\lr15.f324m1 = org.osgeo.proj4j.util.ProjectionMath.mlfn(r8, r10, r12, r15.f323en)\lr15.am1 = r0 \/ (java.lang.Math.sqrt(1.0d \- ((r15.f424es * r15.am1) * r15.am1)) * r15.am1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0057}"];
Node_6 [shape=record,label="{6\:\ 0x0060|if (((java.lang.Math.abs(r15.phi1) + 1.0E\-10d) \> 1.5707963267948966d ? 1 : ((java.lang.Math.abs(r15.phi1) + 1.0E\-10d) == 1.5707963267948966d ? 0 : \-1)) \< 0) goto L_0x0067\l}"];
Node_7 [shape=record,label="{7\:\ 0x0062|r15.cphi1 = 0.0d\l}"];
Node_8 [shape=record,label="{8\:\ 0x0067|r15.cphi1 = 1.0d \/ java.lang.Math.tan(r15.phi1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0071}"];
Node_10 [shape=record,label="{10\:\ 0x0078|throw new org.osgeo.proj4j.ProjectionException(\"\-23\")\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.BonneProjection.initialize((r15v0 'this' org.osgeo.proj4j.proj.BonneProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_13;
Node_8 -> Node_11;
Node_9 -> Node_10;
}

