digraph "CFG fororg.osgeo.proj4j.proj.BonneProjection.project(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r4 I:boolean) = (r0 I:org.osgeo.proj4j.proj.BonneProjection) org.osgeo.proj4j.proj.BonneProjection.spherical boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x003e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r4 I:double) = (r0 I:org.osgeo.proj4j.proj.BonneProjection) org.osgeo.proj4j.proj.BonneProjection.cphi1 double \l0x000a: IGET  (r6 I:double) = (r0 I:org.osgeo.proj4j.proj.BonneProjection) org.osgeo.proj4j.proj.BonneProjection.phi1 double \l0x000c: ARITH  (r4 I:double) = (r4 I:double) + (r6 I:double) \l0x000d: ARITH  (r4 I:double) = (r4 I:double) \- (r20 I:double) \l0x000f: INVOKE  (r8 I:double) = (r4 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0013: CONST  (r10 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x0018: CMP_L  (r8 I:int) = (r8 I:double), (r10 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x0037 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: INVOKE  (r6 I:double) = (r20 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0020: ARITH  (r1 I:double) = (r18 I:double) * (r6 I:double) \l0x0022: ARITH  (r1 I:double) = (r1 I:double) \/ (r4 I:double) \l0x0023: INVOKE  (r6 I:double) = (r1 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0027: ARITH  (r6 I:double) = (r6 I:double) * (r4 I:double) \l0x0029: IPUT  (r6 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x002b: IGET  (r6 I:double) = (r0 I:org.osgeo.proj4j.proj.BonneProjection) org.osgeo.proj4j.proj.BonneProjection.cphi1 double \l0x002d: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0031: ARITH  (r4 I:double) = (r4 I:double) * (r1 I:double) \l0x0033: ARITH  (r6 I:double) = (r6 I:double) \- (r4 I:double) \l0x0034: IPUT  (r6 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|0x0037: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x0039: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x003b: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: IGET  (r4 I:double) = (r0 I:org.osgeo.proj4j.proj.BonneProjection) org.osgeo.proj4j.proj.BonneProjection.am1 double \l0x0040: IGET  (r8 I:double) = (r0 I:org.osgeo.proj4j.proj.BonneProjection) org.osgeo.proj4j.proj.BonneProjection.m1 double \l0x0042: ARITH  (r4 I:double) = (r4 I:double) + (r8 I:double) \l0x0043: INVOKE  (r13 I:double) = (r20 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0047: INVOKE  (r15 I:double) = (r20 I:double) java.lang.Math.cos(double):double type: STATIC \l0x004b: IGET  (r12 I:double[]) = (r0 I:org.osgeo.proj4j.proj.BonneProjection) org.osgeo.proj4j.proj.BonneProjection.en double[] \l0x004d: MOVE  (r6 I:?[long, double]) = (r20 I:?[long, double]) \l0x004f: MOVE  (r8 I:?[long, double]) = (r13 I:?[long, double]) \l0x0050: MOVE  (r10 I:?[long, double]) = (r15 I:?[long, double]) \l0x0051: INVOKE  (r6 I:double) = \l  (r6 I:double)\l  (r8 I:double)\l  (r10 I:double)\l  (r12 I:double[])\l org.osgeo.proj4j.util.ProjectionMath.mlfn(double, double, double, double[]):double type: STATIC \l0x0055: ARITH  (r4 I:double) = (r4 I:double) \- (r6 I:double) \l0x0056: ARITH  (r15 I:double) = (r15 I:double) * (r18 I:double) \l0x0058: CONST  (r1 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x005a: IGET  (r6 I:double) = (r0 I:org.osgeo.proj4j.proj.BonneProjection) org.osgeo.proj4j.proj.BonneProjection.es double \l0x005c: ARITH  (r6 I:double) = (r6 I:double) * (r13 I:double) \l0x005e: ARITH  (r6 I:double) = (r6 I:double) * (r13 I:double) \l0x0060: ARITH  (r1 I:double) = (r1 I:double) \- (r6 I:double) \l0x0061: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0065: ARITH  (r1 I:double) = (r1 I:double) * (r4 I:double) \l0x0067: ARITH  (r15 I:double) = (r15 I:double) \/ (r1 I:double) \l0x0068: INVOKE  (r1 I:double) = (r15 I:double) java.lang.Math.sin(double):double type: STATIC \l0x006c: ARITH  (r1 I:double) = (r1 I:double) * (r4 I:double) \l0x006e: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0070: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.BonneProjection) org.osgeo.proj4j.proj.BonneProjection.am1 double \l0x0072: INVOKE  (r6 I:double) = (r15 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0076: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x0078: ARITH  (r1 I:double) = (r1 I:double) \- (r4 I:double) \l0x0079: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_7 [shape=record,label="{7\:\ 0x007b|0x007b: RETURN  (r3 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.BonneProjection.project((r17 'this' I:org.osgeo.proj4j.proj.BonneProjection A[IMMUTABLE_TYPE, THIS]), (r18 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

