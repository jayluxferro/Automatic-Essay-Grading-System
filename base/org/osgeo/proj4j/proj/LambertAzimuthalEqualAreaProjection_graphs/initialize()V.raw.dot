digraph "CFG fororg.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r10 I:org.osgeo.proj4j.proj.Projection) org.osgeo.proj4j.proj.Projection.initialize():void type: SUPER \l0x0003: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.projectionLatitude double \l0x0005: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.phi0 double \l0x0007: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.phi0 double \l0x0009: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x000d: CONST  (r2 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x0012: ARITH  (r2 I:double) = (r0 I:double) \- (r2 I:double) \l0x0014: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0018: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0019: CONST  (r5 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x001e: CMP_G  (r2 I:int) = (r2 I:double), (r5 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|0x0020: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:7:0x0030 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0022|0x0022: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.phi0 double \l0x0024: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0026: CMP_G  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|0x0028: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x002c \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: IPUT  \l  (r0 I:int)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0034: CMP_G  (r0 I:int) = (r0 I:double), (r5 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:10:0x003c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0039: IPUT  \l  (r0 I:int)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|0x003c: IPUT  \l  (r4 I:int)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IGET  (r0 I:boolean) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.spherical boolean \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00e3 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.es double \l0x0044: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0048: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.e double \l0x004a: CONST  (r2 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x004c: IGET  (r4 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.e double \l0x004e: IGET  (r6 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.one_es double \l0x0050: INVOKE  (r0 I:double) = (r2 I:double), (r4 I:double), (r6 I:double) org.osgeo.proj4j.util.ProjectionMath.qsfn(double, double, double):double type: STATIC \l0x0054: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.qp double \l0x0056: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.es double \l0x0058: ARITH  (r0 I:double) = (r2 I:double) \- (r0 I:double) \l0x005a: CONST  (r4 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x005c: ARITH  (r0 I:double) = (r4 I:double) \/ (r0 I:double) \l0x005e: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mmf double \l0x0060: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.es double \l0x0062: INVOKE  (r0 I:double[]) = (r0 I:double) org.osgeo.proj4j.util.ProjectionMath.authset(double):double[] type: STATIC \l0x0066: IPUT  \l  (r0 I:double[])\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.apa double[] \l0x0068: IGET  (r0 I:int) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l}"];
Node_14 [shape=record,label="{14\:\ 0x006a|0x006a: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3] t:[0x00e0, 0x00e0, 0x00c9, 0x006f] \l}"];
Node_16 [shape=record,label="{16\:\ 0x006f|0x006f: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.qp double \l0x0071: ARITH  (r0 I:double) = (r0 I:double) * (r4 I:double) \l0x0073: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0077: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.rq double \l0x0079: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.phi0 double \l0x007b: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x007f: IGET  (r6 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.e double \l0x0081: IGET  (r8 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.one_es double \l0x0083: MOVE  (r4 I:?[long, double]) = (r0 I:?[long, double]) \l0x0084: INVOKE  (r4 I:double) = (r4 I:double), (r6 I:double), (r8 I:double) org.osgeo.proj4j.util.ProjectionMath.qsfn(double, double, double):double type: STATIC \l0x0088: IGET  (r6 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.qp double \l0x008a: ARITH  (r4 I:double) = (r4 I:double) \/ (r6 I:double) \l0x008b: IPUT  \l  (r4 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.sinb1 double \l0x008d: IGET  (r4 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.sinb1 double \l0x008f: IGET  (r6 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.sinb1 double \l0x0091: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x0093: ARITH  (r4 I:double) = (r2 I:double) \- (r4 I:double) \l0x0095: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0099: IPUT  \l  (r4 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.cosb1 double \l0x009b: IGET  (r4 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.phi0 double \l0x009d: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.cos(double):double type: STATIC \l0x00a1: IGET  (r6 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.es double \l0x00a3: ARITH  (r6 I:double) = (r6 I:double) * (r0 I:double) \l0x00a5: ARITH  (r6 I:double) = (r6 I:double) * (r0 I:double) \l0x00a7: ARITH  (r2 I:double) = (r2 I:double) \- (r6 I:double) \l0x00a8: INVOKE  (r0 I:double) = (r2 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x00ac: IGET  (r2 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.rq double \l0x00ae: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x00b0: IGET  (r2 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.cosb1 double \l0x00b2: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x00b4: ARITH  (r4 I:double) = (r4 I:double) \/ (r0 I:double) \l0x00b5: IPUT  \l  (r4 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.dd double \l0x00b7: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.rq double \l0x00b9: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.xmf double \l0x00bb: IGET  (r2 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.dd double \l0x00bd: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x00be: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.ymf double \l0x00c0: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.xmf double \l0x00c2: IGET  (r2 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.dd double \l0x00c4: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x00c6: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.xmf double \l}"];
Node_17 [shape=record,label="{17\:\ 0x00c9|0x00c9: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.qp double \l0x00cb: ARITH  (r0 I:double) = (r0 I:double) * (r4 I:double) \l0x00cd: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x00d1: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.rq double \l0x00d3: ARITH  (r0 I:double) = (r2 I:double) \/ (r0 I:double) \l0x00d5: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.dd double \l0x00d7: IPUT  \l  (r2 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.xmf double \l0x00d9: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.qp double \l0x00db: ARITH  (r0 I:double) = (r0 I:double) * (r4 I:double) \l0x00dd: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.ymf double \l}"];
Node_18 [shape=record,label="{18\:\ 0x00e0|0x00e0: IPUT  \l  (r2 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.dd double \l}"];
Node_19 [shape=record,label="{19\:\ 0x00e3|0x00e3: IGET  (r0 I:int) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l}"];
Node_20 [shape=record,label="{20\:\ 0x00e5|0x00e5: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00f7 \l}"];
Node_21 [shape=record,label="{21\:\ 0x00e7|0x00e7: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.phi0 double \l0x00e9: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00ed: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.sinph0 double \l0x00ef: IGET  (r0 I:double) = \l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.phi0 double \l0x00f1: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.cos(double):double type: STATIC \l0x00f5: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.cosph0 double \l}"];
Node_22 [shape=record,label="{22\:\ 0x00f7|0x00f7: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.initialize((r10 'this' I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_17;
Node_14 -> Node_18;
Node_14 -> Node_22;
Node_16 -> Node_22;
Node_17 -> Node_22;
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
}

