digraph "CFG fororg.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.projectInverse_e(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r19\lr3 = r22\lr5 = r24\lr7 = 0.0d\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|switch(r0.mode) \{\l    case 0: goto L_0x0079;\l    case 1: goto L_0x007a;\l    case 2: goto L_0x0011;\l    case 3: goto L_0x0011;\l    default: goto L_0x000d;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|PHI: r3 r7 \l  PHI: (r3v13 double) = (r3v0 double), (r3v4 double), (r3v4 double) binds: [B:1:0x000a, B:18:0x0095, B:19:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v5 double) = (r7v0 double), (r7v2 double), (r7v3 double) binds: [B:1:0x000a, B:18:0x0095, B:19:0x0097] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r20\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|double r1 = r20 \/ r0.f382dd\ldouble r3 = r3 * r0.f382dd\ldouble r9 = java.lang.Math.hypot(r1, r3)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|if ((r9 \> 1.0E\-10d ? 1 : (r9 == 1.0E\-10d ? 0 : \-1)) \>= 0) goto L_0x002d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|double r1 = r0.phi0\lr5.f294x = 0.0d\lr5.f295y = r1\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|double r11 = java.lang.Math.asin((0.5d * r9) \/ r0.f384rq) * 2.0d\ldouble r6 = java.lang.Math.cos(r11)\ldouble r11 = java.lang.Math.sin(r11)\ldouble r1 = r1 * r11\l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|if (r0.mode != 3) goto L_0x006e\l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|double r13 = r0.f383qp\lr17 = r1\ldouble r1 = (r0.sinb1 * r6) + (((r3 * r11) * r0.cosb1) \/ r9)\ldouble r3 = ((r9 * r0.cosb1) * r6) \- ((r3 * r0.sinb1) * r11)\l}"];
Node_10 [shape=record,label="{10\:\ 0x006a|PHI: r1 r3 r17 \l  PHI: (r1v7 double) = (r1v6 double), (r1v10 double) binds: [B:11:0x006e, B:9:0x004b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v9 double) = (r3v8 double), (r3v12 double) binds: [B:11:0x006e, B:9:0x004b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v1 double) = (r17v0 double), (r17v2 double) binds: [B:11:0x006e, B:9:0x004b] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r1\lr1 = r17\l}"];
Node_11 [shape=record,label="{11\:\ 0x006e|r17 = r1\ldouble r1 = r0.f383qp\ldouble r1 = (r3 * r11) \/ r9\ldouble r3 = r9 * r6\l}"];
Node_12 [shape=record,label="{12\:\ 0x0079|double r3 = \-r3\l}"];
Node_13 [shape=record,label="{13\:\ 0x007a|PHI: r3 \l  PHI: (r3v4 double) = (r3v0 double), (r3v5 double) binds: [B:1:0x000a, B:12:0x0079] A[DONT_GENERATE, DONT_INLINE]\l|double r9 = (r20 * r20) + (r3 * r3)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0082|if ((0.0d \> r9 ? 1 : (0.0d == r9 ? 0 : \-1)) != 0) goto L_0x008b\l}"];
Node_15 [shape=record,label="{15\:\ 0x0084|double r1 = r0.phi0\lr5.f294x = 0.0d\lr5.f295y = r1\l}"];
Node_16 [shape=record,label="{16\:\ 0x008a|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ 0x008b|double r7 = 1.0d \- (r9 \/ r0.f383qp)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0095|if (r0.mode != 1) goto L_0x000d\l}"];
Node_19 [shape=record,label="{19\:\ 0x0097|double r7 = \-r7\l}"];
Node_20 [shape=record,label="{20\:\ 0x009a|PHI: r1 r3 r7 \l  PHI: (r1v0 double) = (r1v8 double), (r1v12 double) binds: [B:10:0x006a, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 double) = (r3v9 double), (r3v13 double) binds: [B:10:0x006a, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 double) = (r7v4 double), (r7v5 double) binds: [B:10:0x006a, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|double r1 = java.lang.Math.atan2(r1, r3)\ldouble r3 = org.osgeo.proj4j.util.ProjectionMath.authlat(java.lang.Math.asin(r7), r0.apa)\lr5.f294x = r1\lr5.f295y = r3\l}"];
Node_21 [shape=record,label="{21\:\ 0x00ac|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.projectInverse_e((r19v0 'this' org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection A[IMMUTABLE_TYPE, THIS]), (r20v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_12;
Node_1 -> Node_13;
Node_2 -> Node_20;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_20;
Node_11 -> Node_10;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_2;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_2;
Node_20 -> Node_21;
}

