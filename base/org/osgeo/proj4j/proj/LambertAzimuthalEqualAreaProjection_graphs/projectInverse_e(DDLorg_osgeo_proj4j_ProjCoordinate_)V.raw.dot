digraph "CFG fororg.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.projectInverse_e(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r3 I:?[long, double]) = (r22 I:?[long, double]) \l0x0004: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0006: IGET  (r6 I:int) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l0x0008: CONST  (r7 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: SWITCH  \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3] t:[0x0079, 0x007a, 0x0011, 0x0011] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: MOVE  (r1 I:?[long, double]) = (r20 I:?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IGET  (r9 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.dd double \l0x0013: ARITH  (r1 I:double) = (r20 I:double) \/ (r9 I:double) \l0x0015: IGET  (r9 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.dd double \l0x0017: ARITH  (r3 I:double) = (r3 I:double) * (r9 I:double) \l0x0019: INVOKE  (r9 I:double) = (r1 I:double), (r3 I:double) java.lang.Math.hypot(double, double):double type: STATIC \l0x001d: CONST  (r11 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x0022: CMP_G  (r6 I:int) = (r9 I:double), (r11 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: IF  (r6 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:7:0x002d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: IGET  (r1 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.phi0 double \l0x0028: IPUT  (r7 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x002a: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: CONST  (r6 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x002f: CONST  (r11 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x0031: ARITH  (r11 I:double) = (r11 I:double) * (r9 I:double) \l0x0033: IGET  (r13 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.rq double \l0x0035: ARITH  (r11 I:double) = (r11 I:double) \/ (r13 I:double) \l0x0036: INVOKE  (r11 I:double) = (r11 I:double) java.lang.Math.asin(double):double type: STATIC \l0x003a: ARITH  (r11 I:double) = (r11 I:double) * (r6 I:double) \l0x003c: INVOKE  (r6 I:double) = (r11 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0040: INVOKE  (r11 I:double) = (r11 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0044: ARITH  (r1 I:double) = (r1 I:double) * (r11 I:double) \l0x0046: IGET  (r8 I:int) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l0x0048: CONST  (r13 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|0x0049: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x006e \l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|0x004b: IGET  (r13 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.qp double \l0x004d: IGET  (r13 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.sinb1 double \l0x004f: ARITH  (r13 I:double) = (r13 I:double) * (r6 I:double) \l0x0051: ARITH  (r15 I:double) = (r3 I:double) * (r11 I:double) \l0x0053: MOVE  (r17 I:?[long, double]) = (r1 I:?[long, double]) \l0x0055: IGET  (r1 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.cosb1 double \l0x0057: ARITH  (r15 I:double) = (r15 I:double) * (r1 I:double) \l0x0059: ARITH  (r15 I:double) = (r15 I:double) \/ (r9 I:double) \l0x005a: ARITH  (r1 I:double) = (r13 I:double) + (r15 I:double) \l0x005c: IGET  (r13 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.cosb1 double \l0x005e: ARITH  (r9 I:double) = (r9 I:double) * (r13 I:double) \l0x0060: ARITH  (r9 I:double) = (r9 I:double) * (r6 I:double) \l0x0062: IGET  (r6 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.sinb1 double \l0x0064: ARITH  (r3 I:double) = (r3 I:double) * (r6 I:double) \l0x0066: ARITH  (r3 I:double) = (r3 I:double) * (r11 I:double) \l0x0068: ARITH  (r3 I:double) = (r9 I:double) \- (r3 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x006a|0x006a: MOVE  (r7 I:?[long, double]) = (r1 I:?[long, double]) \l0x006b: MOVE  (r1 I:?[long, double]) = (r17 I:?[long, double]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x006e|0x006e: MOVE  (r17 I:?[long, double]) = (r1 I:?[long, double]) \l0x0070: IGET  (r1 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.qp double \l0x0072: ARITH  (r3 I:double) = (r3 I:double) * (r11 I:double) \l0x0074: ARITH  (r1 I:double) = (r3 I:double) \/ (r9 I:double) \l0x0076: ARITH  (r3 I:double) = (r9 I:double) * (r6 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0079|0x0079: NEG  (r3 I:double) = (r3 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x007a|0x007a: ARITH  (r9 I:double) = (r20 I:double) * (r20 I:double) \l0x007c: ARITH  (r11 I:double) = (r3 I:double) * (r3 I:double) \l0x007e: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007f: ARITH  (r9 I:double) = (r9 I:double) + (r11 I:double) \l0x0080: CMP_L  (r6 I:int) = (r7 I:double), (r9 I:double) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0082|0x0082: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x008b \l}"];
Node_15 [shape=record,label="{15\:\ 0x0084|0x0084: IGET  (r1 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.phi0 double \l0x0086: IPUT  (r7 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0088: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_16 [shape=record,label="{16\:\ 0x008a|0x008a: RETURN   \l}"];
Node_17 [shape=record,label="{17\:\ 0x008b|0x008b: CONST  (r6 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x008d: IGET  (r11 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.qp double \l0x008f: ARITH  (r9 I:double) = (r9 I:double) \/ (r11 I:double) \l0x0090: ARITH  (r7 I:double) = (r6 I:double) \- (r9 I:double) \l0x0092: IGET  (r6 I:int) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l0x0094: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0095|0x0095: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000d \l}"];
Node_19 [shape=record,label="{19\:\ 0x0097|0x0097: NEG  (r7 I:double) = (r7 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x009a|0x009a: INVOKE  (r1 I:double) = (r1 I:double), (r3 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x009e: INVOKE  (r3 I:double) = (r7 I:double) java.lang.Math.asin(double):double type: STATIC \l0x00a2: IGET  (r6 I:double[]) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.apa double[] \l0x00a4: INVOKE  (r3 I:double) = (r3 I:double), (r6 I:double[]) org.osgeo.proj4j.util.ProjectionMath.authlat(double, double[]):double type: STATIC \l0x00a8: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x00aa: IPUT  (r3 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_21 [shape=record,label="{21\:\ 0x00ac|0x00ac: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.projectInverse_e((r19 'this' I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection A[IMMUTABLE_TYPE, THIS]), (r20 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_1 -> Node_12;
Node_1 -> Node_13;
Node_2 -> Node_20;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_20;
Node_11 -> Node_10;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_2;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_2;
Node_20 -> Node_21;
}

