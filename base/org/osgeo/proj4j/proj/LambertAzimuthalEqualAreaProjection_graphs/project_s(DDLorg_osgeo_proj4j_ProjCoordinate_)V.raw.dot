digraph "CFG fororg.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.project_s(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0004: INVOKE  (r4 I:double) = (r22 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0008: INVOKE  (r6 I:double) = (r22 I:double) java.lang.Math.cos(double):double type: STATIC \l0x000c: INVOKE  (r8 I:double) = (r20 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0010: IGET  (r10 I:int) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: SWITCH  \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3] t:[0x0074, 0x0075, 0x0017, 0x0017] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IGET  (r1 I:int) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l0x0019: CONST  (r15 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x001b: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0025 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: ARITH  (r17 I:double) = (r6 I:double) * (r8 I:double) \l0x0020: ARITH  (r11 I:double) = (r17 I:double) + (r15 I:double) \l0x0022: IPUT  (r11 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|0x0025: IGET  (r10 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.sinph0 double \l0x0027: ARITH  (r10 I:double) = (r10 I:double) * (r4 I:double) \l0x0029: ARITH  (r10 I:double) = (r10 I:double) + (r15 I:double) \l0x002a: IGET  (r13 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.cosph0 double \l0x002c: ARITH  (r13 I:double) = (r13 I:double) * (r6 I:double) \l0x002e: ARITH  (r13 I:double) = (r13 I:double) * (r8 I:double) \l0x0030: ARITH  (r10 I:double) = (r10 I:double) + (r13 I:double) \l0x0031: IPUT  (r10 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|0x0033: IGET  (r10 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0035: CONST  (r12 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x003a: CMP_G  (r1 I:int) = (r10 I:double), (r12 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x006c \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: IGET  (r10 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0040: CONST  (r12 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0042: ARITH  (r11 I:double) = (r12 I:double) \/ (r10 I:double) \l0x0044: INVOKE  (r10 I:double) = (r11 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0048: IPUT  (r10 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x004a: ARITH  (r10 I:double) = (r10 I:double) * (r6 I:double) \l0x004c: INVOKE  (r12 I:double) = (r20 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0050: ARITH  (r10 I:double) = (r10 I:double) * (r12 I:double) \l0x0052: IPUT  (r10 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0054: IGET  (r10 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0056: IGET  (r1 I:int) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0058|0x0058: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x005b \l}"];
Node_12 [shape=record,label="{12\:\ 0x005b|0x005b: IGET  (r1 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.cosph0 double \l0x005d: ARITH  (r1 I:double) = (r1 I:double) * (r4 I:double) \l0x005f: IGET  (r4 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.sinph0 double \l0x0061: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x0063: ARITH  (r4 I:double) = (r4 I:double) * (r8 I:double) \l0x0065: ARITH  (r4 I:double) = (r1 I:double) \- (r4 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0067|0x0067: ARITH  (r10 I:double) = (r10 I:double) * (r4 I:double) \l0x0069: IPUT  (r10 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_14 [shape=record,label="{14\:\ 0x006c|0x006c: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x006e: CONST_STR  (r2 I:java.lang.String) =  \"F\" \l0x0070: INVOKE  \l  (r1 I:org.osgeo.proj4j.ProjectionException)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0073|0x0073: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0074|0x0074: NEG  (r8 I:double) = (r8 I:double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0075|0x0075: IGET  (r4 I:double) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.phi0 double \l0x0077: ARITH  (r4 I:double) = (r22 I:double) + (r4 I:double) \l0x0079: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.abs(double):double type: STATIC \l0x007d: CONST  (r6 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x0082: CMP_G  (r4 I:int) = (r4 I:double), (r6 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0084|0x0084: IF  (r4 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:25:0x00bc \l}"];
Node_19 [shape=record,label="{19\:\ 0x0086|0x0086: CONST  (r4 I:?[long, double]) = \l  (4605249457297304856(0x3fe921fb54442d18, double:0.7853981633974483) ?[long, double])\l \l0x008b: CONST  (r6 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x008d: ARITH  (r1 I:double) = (r22 I:double) * (r6 I:double) \l0x008f: ARITH  (r4 I:double) = (r4 I:double) \- (r1 I:double) \l0x0090: IPUT  (r4 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0092: IGET  (r1 I:int) = \l  (r0 I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection)\l org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.mode int \l0x0094: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0095|0x0095: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00a0 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0097|0x0097: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0099: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.cos(double):double type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x009d|0x009d: CONST  (r4 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a0|0x00a0: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00a2: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.sin(double):double type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a7|0x00a7: ARITH  (r1 I:double) = (r1 I:double) * (r4 I:double) \l0x00a9: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00ab: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00ad: INVOKE  (r4 I:double) = (r20 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00b1: ARITH  (r1 I:double) = (r1 I:double) * (r4 I:double) \l0x00b3: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x00b5: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00b7: ARITH  (r1 I:double) = (r1 I:double) * (r8 I:double) \l0x00b9: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_25 [shape=record,label="{25\:\ 0x00bc|0x00bc: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x00be: CONST_STR  (r2 I:java.lang.String) =  \"F\" \l0x00c0: INVOKE  \l  (r1 I:org.osgeo.proj4j.ProjectionException)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x00c3|0x00c3: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00c4|0x00c4: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.project_s((r19 'this' I:org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection A[IMMUTABLE_TYPE, THIS]), (r20 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_16;
Node_1 -> Node_17;
Node_1 -> Node_27;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_12;
Node_10 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_27;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_25;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_23 -> Node_22;
Node_24 -> Node_27;
Node_25 -> Node_26;
}

