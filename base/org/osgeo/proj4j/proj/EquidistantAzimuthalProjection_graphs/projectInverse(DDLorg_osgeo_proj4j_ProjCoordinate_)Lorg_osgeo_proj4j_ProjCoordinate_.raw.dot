digraph "CFG fororg.osgeo.proj4j.proj.EquidistantAzimuthalProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[long, double]) = (r29 I:?[long, double]) \l0x0004: MOVE  (r3 I:?[long, double]) = (r31 I:?[long, double]) \l0x0006: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r33 I:?[OBJECT, ARRAY]) \l0x0008: IGET  (r6 I:boolean) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.spherical boolean \l0x000a: CONST  (r7 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x000b: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000c: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x000d: CONST  (r10 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x0012: CONST  (r12 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x0017: CONST  (r14 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00b7 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|0x001b: INVOKE  (r16 I:double) = (r29 I:double), (r31 I:double) org.osgeo.proj4j.util.ProjectionMath.distance(double, double):double type: STATIC \l0x001f: CONST  (r18 I:?[long, double]) = \l  (4614256656552045848(0x400921fb54442d18, double:3.141592653589793) ?[long, double])\l \l0x0024: CMP_L  (r6 I:int) = (r16 I:double), (r18 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x0037 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: ARITH  (r16 I:double) = (r16 I:double) \- (r12 I:double) \l0x002a: CMP_L  (r6 I:int) = (r16 I:double), (r18 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IF  (r6 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:7:0x0031 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: MOVE  (r16 I:?[long, double]) = (r18 I:?[long, double]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|0x0031: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x0033: INVOKE  (r1 I:org.osgeo.proj4j.ProjectionException) org.osgeo.proj4j.ProjectionException.\<init\>():void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|0x0037: CMP_G  (r6 I:int) = (r16 I:double), (r12 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: IF  (r6 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:13:0x0042 \l}"];
Node_11 [shape=record,label="{11\:\ 0x003b|0x003b: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.projectionLatitude double \l0x003d: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x003f: IPUT  (r14 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: RETURN  (r5 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: IGET  (r6 I:int) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.mode int \l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|0x0044: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0069 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|0x0046: IGET  (r6 I:int) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.mode int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0048|0x0048: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004b \l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|0x004b: IGET  (r6 I:int) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.mode int \l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|0x004d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x005c \l}"];
Node_20 [shape=record,label="{20\:\ 0x004f|0x004f: ARITH  (r10 I:double) = (r10 I:double) \- (r16 I:double) \l0x0051: IPUT  (r10 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0053: NEG  (r3 I:double) = (r3 I:double) \l0x0054: INVOKE  (r1 I:double) = (r1 I:double), (r3 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x0058: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_21 [shape=record,label="{21\:\ 0x005c|0x005c: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005d: ARITH  (r6 I:double) = (r16 I:double) \- (r10 I:double) \l0x005f: IPUT  (r6 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0061: INVOKE  (r1 I:double) = (r29 I:double), (r31 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x0065: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_22 [shape=record,label="{22\:\ 0x0069|0x0069: INVOKE  (r6 I:double) = (r16 I:double) java.lang.Math.sin(double):double type: STATIC \l0x006d: INVOKE  (r10 I:double) = (r16 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0071: IGET  (r8 I:int) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.mode int \l}"];
Node_23 [shape=record,label="{23\:\ 0x0073|0x0073: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0084 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0075|0x0075: ARITH  (r3 I:double) = (r3 I:double) * (r6 I:double) \l0x0077: ARITH  (r3 I:double) = (r3 I:double) \/ (r16 I:double) \l0x0079: INVOKE  (r3 I:double) = (r3 I:double) org.osgeo.proj4j.util.ProjectionMath.asin(double):double type: STATIC \l0x007d: IPUT  (r3 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x007f: ARITH  (r1 I:double) = (r1 I:double) * (r6 I:double) \l0x0081: ARITH  (r10 I:double) = (r10 I:double) * (r16 I:double) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0084|0x0084: IGET  (r8 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.sinphi0 double \l0x0086: ARITH  (r8 I:double) = (r8 I:double) * (r10 I:double) \l0x0088: ARITH  (r3 I:double) = (r3 I:double) * (r6 I:double) \l0x008a: IGET  (r12 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.cosphi0 double \l0x008c: ARITH  (r3 I:double) = (r3 I:double) * (r12 I:double) \l0x008e: ARITH  (r3 I:double) = (r3 I:double) \/ (r16 I:double) \l0x0090: ARITH  (r8 I:double) = (r8 I:double) + (r3 I:double) \l0x0091: INVOKE  (r3 I:double) = (r8 I:double) org.osgeo.proj4j.util.ProjectionMath.asin(double):double type: STATIC \l0x0095: IPUT  (r3 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0097: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.sinphi0 double \l0x0099: IGET  (r8 I:double) = (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x009b: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.sin(double):double type: STATIC \l0x009f: ARITH  (r3 I:double) = (r3 I:double) * (r8 I:double) \l0x00a1: ARITH  (r10 I:double) = (r10 I:double) \- (r3 I:double) \l0x00a2: ARITH  (r10 I:double) = (r10 I:double) * (r16 I:double) \l0x00a4: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.cosphi0 double \l0x00a6: ARITH  (r6 I:double) = (r6 I:double) * (r3 I:double) \l0x00a8: ARITH  (r1 I:double) = (r1 I:double) * (r6 I:double) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00aa|0x00aa: CMP_L  (r3 I:int) = (r10 I:double), (r14 I:double) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00ac|0x00ac: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00af \l}"];
Node_29 [shape=record,label="{29\:\ 0x00af|0x00af: INVOKE  (r14 I:double) = (r1 I:double), (r10 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b3|0x00b3: IPUT  (r14 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_31 [shape=record,label="{31\:\ 0x00b7|0x00b7: INVOKE  (r16 I:double) = (r29 I:double), (r31 I:double) org.osgeo.proj4j.util.ProjectionMath.distance(double, double):double type: STATIC \l0x00bb: CMP_G  (r6 I:int) = (r16 I:double), (r12 I:double) \l}"];
Node_32 [shape=record,label="{32\:\ 0x00bd|0x00bd: IF  (r6 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:35:0x00c6 \l}"];
Node_33 [shape=record,label="{33\:\ 0x00bf|0x00bf: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.projectionLatitude double \l0x00c1: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00c3: IPUT  (r14 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_34 [shape=record,label="{34\:\ 0x00c5|0x00c5: RETURN  (r5 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
Node_35 [shape=record,label="{35\:\ 0x00c6|0x00c6: IGET  (r6 I:int) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.mode int \l}"];
Node_36 [shape=record,label="{36\:\ 0x00c8|0x00c8: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00f3 \l}"];
Node_37 [shape=record,label="{37\:\ 0x00ca|0x00ca: IGET  (r6 I:int) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.mode int \l}"];
Node_38 [shape=record,label="{38\:\ 0x00cc|0x00cc: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x00cf \l}"];
Node_40 [shape=record,label="{40\:\ 0x00cf|0x00cf: IGET  (r6 I:int) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.mode int \l}"];
Node_41 [shape=record,label="{41\:\ 0x00d1|0x00d1: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x00d8 \l}"];
Node_42 [shape=record,label="{42\:\ 0x00d3|0x00d3: IGET  (r6 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.Mp double \l0x00d5: ARITH  (r6 I:double) = (r6 I:double) \- (r16 I:double) \l}"];
Node_43 [shape=record,label="{43\:\ 0x00d8|0x00d8: IGET  (r6 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.Mp double \l0x00da: ARITH  (r6 I:double) = (r6 I:double) + (r16 I:double) \l}"];
Node_44 [shape=record,label="{44\:\ 0x00dc|0x00dc: IGET  (r9 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.es double \l0x00de: IGET  (r11 I:double[]) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.en double[] \l0x00e0: INVOKE  (r6 I:double) = (r6 I:double), (r9 I:double), (r11 I:double[]) org.osgeo.proj4j.util.ProjectionMath.inv_mlfn(double, double, double[]):double type: STATIC \l0x00e4: IPUT  (r6 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00e6: IGET  (r6 I:int) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.mode int \l}"];
Node_45 [shape=record,label="{45\:\ 0x00e8|0x00e8: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x00eb \l}"];
Node_46 [shape=record,label="{46\:\ 0x00ea|0x00ea: NEG  (r3 I:double) = (r3 I:double) \l}"];
Node_47 [shape=record,label="{47\:\ 0x00eb|0x00eb: INVOKE  (r1 I:double) = (r1 I:double), (r3 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x00ef: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_48 [shape=record,label="{48\:\ 0x00f3|0x00f3: INVOKE  (r1 I:double) = (r29 I:double), (r31 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x00f7: INVOKE  (r3 I:double) = (r1 I:double) java.lang.Math.cos(double):double type: STATIC \l0x00fb: IGET  (r6 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.cosphi0 double \l0x00fd: ARITH  (r6 I:double) = (r6 I:double) * (r3 I:double) \l0x00ff: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.es double \l0x0101: ARITH  (r3 I:double) = (r3 I:double) * (r6 I:double) \l0x0103: IGET  (r8 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.one_es double \l0x0105: ARITH  (r3 I:double) = (r3 I:double) \/ (r8 I:double) \l0x0106: NEG  (r8 I:double) = (r3 I:double) \l0x0107: ARITH  (r8 I:double) = (r8 I:double) * (r6 I:double) \l0x0109: CONST  (r18 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x010b: ARITH  (r20 I:double) = (r18 I:double) \- (r8 I:double) \l0x010d: CONST  (r22 I:?[long, double]) = \l  (4613937818241073152(0x4008000000000000, double:3.0) ?[long, double])\l \l0x010f: ARITH  (r20 I:double) = (r20 I:double) * (r22 I:double) \l0x0111: IGET  (r10 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.sinphi0 double \l0x0113: ARITH  (r20 I:double) = (r20 I:double) * (r10 I:double) \l0x0115: ARITH  (r3 I:double) = (r3 I:double) * (r20 I:double) \l0x0117: IGET  (r10 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.N1 double \l0x0119: ARITH  (r16 I:double) = (r16 I:double) \/ (r10 I:double) \l0x011b: ARITH  (r10 I:double) = (r16 I:double) * (r16 I:double) \l0x011d: ARITH  (r20 I:double) = (r8 I:double) + (r18 I:double) \l0x011f: ARITH  (r20 I:double) = (r20 I:double) * (r8 I:double) \l0x0121: CONST  (r24 I:?[long, double]) = \l  (4618441417868443648(0x4018000000000000, double:6.0) ?[long, double])\l \l0x0123: ARITH  (r20 I:double) = (r20 I:double) \/ (r24 I:double) \l0x0125: ARITH  (r22 I:double) = (r22 I:double) * (r8 I:double) \l0x0127: ARITH  (r22 I:double) = (r22 I:double) + (r18 I:double) \l0x0129: ARITH  (r22 I:double) = (r22 I:double) * (r3 I:double) \l0x012b: ARITH  (r22 I:double) = (r22 I:double) * (r16 I:double) \l0x012d: CONST  (r26 I:?[long, double]) = \l  (4627448617123184640(0x4038000000000000, double:24.0) ?[long, double])\l \l0x012f: ARITH  (r22 I:double) = (r22 I:double) \/ (r26 I:double) \l0x0131: ARITH  (r20 I:double) = (r20 I:double) + (r22 I:double) \l0x0133: ARITH  (r10 I:double) = (r10 I:double) * (r20 I:double) \l0x0135: ARITH  (r10 I:double) = (r18 I:double) \- (r10 I:double) \l0x0137: ARITH  (r16 I:double) = (r16 I:double) * (r10 I:double) \l0x0139: ARITH  (r10 I:double) = (r16 I:double) * (r16 I:double) \l0x013b: CONST  (r20 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x013d: ARITH  (r8 I:double) = (r8 I:double) \/ (r20 I:double) \l0x013f: ARITH  (r3 I:double) = (r3 I:double) * (r16 I:double) \l0x0141: ARITH  (r3 I:double) = (r3 I:double) \/ (r24 I:double) \l0x0143: ARITH  (r8 I:double) = (r8 I:double) + (r3 I:double) \l0x0144: ARITH  (r10 I:double) = (r10 I:double) * (r8 I:double) \l0x0146: ARITH  (r3 I:double) = (r18 I:double) \- (r10 I:double) \l0x0148: IGET  (r8 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.sinphi0 double \l0x014a: INVOKE  (r10 I:double) = (r16 I:double) java.lang.Math.cos(double):double type: STATIC \l0x014e: ARITH  (r8 I:double) = (r8 I:double) * (r10 I:double) \l0x0150: INVOKE  (r10 I:double) = (r16 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0154: ARITH  (r6 I:double) = (r6 I:double) * (r10 I:double) \l0x0156: ARITH  (r8 I:double) = (r8 I:double) + (r6 I:double) \l0x0157: INVOKE  (r6 I:double) = (r8 I:double) org.osgeo.proj4j.util.ProjectionMath.asin(double):double type: STATIC \l0x015b: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.sin(double):double type: STATIC \l0x015f: INVOKE  (r8 I:double) = (r16 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0163: ARITH  (r1 I:double) = (r1 I:double) * (r8 I:double) \l0x0165: INVOKE  (r8 I:double) = (r6 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0169: ARITH  (r1 I:double) = (r1 I:double) \/ (r8 I:double) \l0x016a: INVOKE  (r1 I:double) = (r1 I:double) org.osgeo.proj4j.util.ProjectionMath.asin(double):double type: STATIC \l0x016e: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0170: INVOKE  (r1 I:double) = (r6 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0174: CMP_G  (r8 I:int) = (r1 I:double), (r12 I:double) \l}"];
Node_49 [shape=record,label="{49\:\ 0x0176|0x0176: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:51:0x017b \l}"];
Node_50 [shape=record,label="{50\:\ 0x0178|0x0178: IPUT  (r14 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_51 [shape=record,label="{51\:\ 0x017b|0x017b: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x017c: CONST  (r8 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x0181: ARITH  (r1 I:double) = (r1 I:double) \- (r8 I:double) \l0x0182: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0186: CMP_G  (r1 I:int) = (r1 I:double), (r14 I:double) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0188|0x0188: IF  (r1 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:54:0x018d \l}"];
Node_53 [shape=record,label="{53\:\ 0x018a|0x018a: IPUT  (r8 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_54 [shape=record,label="{54\:\ 0x018d|0x018d: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.es double \l0x018f: ARITH  (r1 I:double) = (r1 I:double) * (r3 I:double) \l0x0191: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.sinphi0 double \l0x0193: ARITH  (r1 I:double) = (r1 I:double) * (r3 I:double) \l0x0195: INVOKE  (r3 I:double) = (r6 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0199: ARITH  (r1 I:double) = (r1 I:double) \/ (r3 I:double) \l0x019a: ARITH  (r18 I:double) = (r18 I:double) \- (r1 I:double) \l0x019c: INVOKE  (r1 I:double) = (r6 I:double) java.lang.Math.tan(double):double type: STATIC \l0x01a0: ARITH  (r18 I:double) = (r18 I:double) * (r1 I:double) \l0x01a2: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection) org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.one_es double \l0x01a4: ARITH  (r18 I:double) = (r18 I:double) \/ (r1 I:double) \l0x01a6: INVOKE  (r1 I:double) = (r18 I:double) java.lang.Math.atan(double):double type: STATIC \l0x01aa: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_55 [shape=record,label="{55\:\ 0x01ac|0x01ac: RETURN  (r5 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.projectInverse((r28 'this' I:org.osgeo.proj4j.proj.EquidistantAzimuthalProjection A[IMMUTABLE_TYPE, THIS]), (r29 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_22;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_16 -> Node_22[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_55;
Node_21 -> Node_55;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_27 -> Node_30[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_55;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_48;
Node_37 -> Node_38;
Node_38 -> Node_40;
Node_38 -> Node_48[style=dashed];
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_55;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_55;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_54 -> Node_55;
}

