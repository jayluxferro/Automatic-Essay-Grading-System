digraph "CFG fororg.osgeo.proj4j.proj.EquidistantAzimuthalProjection.project(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r27\lr1 = r30\lr8 = r32\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|if (r0.spherical == false) goto L_0x00c6\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|double r13 = java.lang.Math.sin(r30)\ldouble r15 = java.lang.Math.cos(r30)\ldouble r9 = java.lang.Math.cos(r28)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|switch(r0.mode) \{\l    case 1: goto L_0x0097;\l    case 2: goto L_0x0099;\l    case 3: goto L_0x0024;\l    case 4: goto L_0x0024;\l    default: goto L_0x0022;\l\}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024}"];
Node_5 [shape=record,label="{5\:\ 0x0027|if (r0.mode != 3) goto L_0x002e\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|r8.f295y = r15 * r9\l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|r8.f295y = (r0.sinphi0 * r13) + ((r0.cosphi0 * r15) * r9)\l}"];
Node_8 [shape=record,label="{8\:\ 0x003b}"];
Node_9 [shape=record,label="{9\:\ 0x0048|if ((java.lang.Math.abs(java.lang.Math.abs(r8.f295y) \- 1.0d) \> TOL ? 1 : (java.lang.Math.abs(java.lang.Math.abs(r8.f295y) \- 1.0d) == TOL ? 0 : \-1)) \>= 0) goto L_0x005e\l}"];
Node_10 [shape=record,label="{10\:\ 0x004a}"];
Node_11 [shape=record,label="{11\:\ 0x0050|if ((r8.f295y \> 0.0d ? 1 : (r8.f295y == 0.0d ? 0 : \-1)) \< 0) goto L_0x0058\l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|r8.f295y = 0.0d\lr8.f294x = 0.0d\l}"];
Node_13 [shape=record,label="{13\:\ 0x0058}"];
Node_14 [shape=record,label="{14\:\ 0x005d|throw new org.osgeo.proj4j.ProjectionException()\l}"];
Node_15 [shape=record,label="{15\:\ 0x005e|r8.f295y = java.lang.Math.acos(r8.f295y)\lr8.f295y = r8.f295y \/ java.lang.Math.sin(r8.f295y)\lr8.f294x = (r8.f295y * r15) * java.lang.Math.sin(r28)\ldouble r1 = r8.f295y\l}"];
Node_16 [shape=record,label="{16\:\ 0x0082|if (r0.mode != 3) goto L_0x0085\l}"];
Node_17 [shape=record,label="{17\:\ 0x0085|double r13 = (r0.cosphi0 * r13) \- ((r0.sinphi0 * r15) * r9)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0091|PHI: r13 \l  PHI: (r13v20 double) = (r13v19 double), (r13v21 double) binds: [B:16:0x0082, B:17:0x0085] A[DONT_GENERATE, DONT_INLINE]\l|r8.f295y = r1 * r13\l}"];
Node_19 [shape=record,label="{19\:\ 0x0097|double r1 = \-r1\ldouble r9 = \-r9\l}"];
Node_20 [shape=record,label="{20\:\ 0x0099|PHI: r1 r9 \l  PHI: (r1v22 double) = (r1v0 double), (r1v28 double) binds: [B:3:0x001f, B:19:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v16 double) = (r9v15 double), (r9v17 double) binds: [B:3:0x001f, B:19:0x0097] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x00ab|if ((java.lang.Math.abs(r1 \- 1.5707963267948966d) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r1 \- 1.5707963267948966d) == 1.0E\-10d ? 0 : \-1)) \< 0) goto L_0x00c0\l}"];
Node_22 [shape=record,label="{22\:\ 0x00ad|double r1 = r1 + 1.5707963267948966d\lr8.f295y = r1\lr8.f294x = r1 * java.lang.Math.sin(r28)\lr8.f295y = r8.f295y * r9\l}"];
Node_23 [shape=record,label="{23\:\ 0x00c0}"];
Node_24 [shape=record,label="{24\:\ 0x00c5|throw new org.osgeo.proj4j.ProjectionException()\l}"];
Node_25 [shape=record,label="{25\:\ 0x00c6|double r6 = java.lang.Math.cos(r28)\ldouble r9 = java.lang.Math.cos(r30)\ldouble r13 = java.lang.Math.sin(r30)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00d4|switch(r0.mode) \{\l    case 1: goto L_0x01d8;\l    case 2: goto L_0x01d6;\l    case 3: goto L_0x00d9;\l    case 4: goto L_0x00d9;\l    default: goto L_0x00d7;\l\}\l}"];
Node_27 [shape=record,label="{27\:\ 0x00d9}"];
Node_28 [shape=record,label="{28\:\ 0x00e4|if ((java.lang.Math.abs(r28) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r28) == 1.0E\-10d ? 0 : \-1)) \>= 0) goto L_0x00f9\l}"];
Node_29 [shape=record,label="{29\:\ 0x00e6}"];
Node_30 [shape=record,label="{30\:\ 0x00ef|if ((java.lang.Math.abs(r1 \- r0.projectionLatitude) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r1 \- r0.projectionLatitude) == 1.0E\-10d ? 0 : \-1)) \>= 0) goto L_0x00f9\l}"];
Node_31 [shape=record,label="{31\:\ 0x00f1|r8.f295y = 0.0d\lr8.f294x = 0.0d\l}"];
Node_32 [shape=record,label="{32\:\ 0x00f9|double r1 = java.lang.Math.atan2((r0.one_es * r13) + (((r0.f424es * r0.f362N1) * r0.sinphi0) * java.lang.Math.sqrt(1.0d \- ((r0.f424es * r13) * r13))), r9)\ldouble r3 = java.lang.Math.cos(r1)\ldouble r1 = java.lang.Math.sin(r1)\ldouble r9 = java.lang.Math.atan2(java.lang.Math.sin(r28) * r3, (r0.cosphi0 * r1) \- ((r0.sinphi0 * r6) * r3))\ldouble r11 = java.lang.Math.cos(r9)\ldouble r9 = java.lang.Math.sin(r9)\l}"];
Node_33 [shape=record,label="{33\:\ 0x014c|if ((java.lang.Math.abs(r9) \> TOL ? 1 : (java.lang.Math.abs(r9) == TOL ? 0 : \-1)) \>= 0) goto L_0x015b\l}"];
Node_34 [shape=record,label="{34\:\ 0x014e|double r13 = ((r0.cosphi0 * r1) \- ((r0.sinphi0 * r6) * r3)) \/ r11\l}"];
Node_35 [shape=record,label="{35\:\ 0x015b|double r13 = (java.lang.Math.sin(r28) * r3) \/ r9\l}"];
Node_36 [shape=record,label="{36\:\ 0x0163|PHI: r13 \l  PHI: (r13v7 double) = (r13v14 double), (r13v18 double) binds: [B:35:0x015b, B:34:0x014e] A[DONT_GENERATE, DONT_INLINE]\l|double r1 = org.osgeo.proj4j.util.ProjectionMath.asin(r13)\ldouble r3 = r0.f359He * r11\ldouble r5 = r3 * r3\lr21 = r11\ldouble r19 = 7.0d * r5\lr23 = r9\ldouble r13 = (r0.f362N1 * r1) * (((r1 * r1) * ((((\-r5) * (1.0d \- r5)) \/ 6.0d) + (r1 * ((((r0.f358G * r3) * (1.0d \- ((2.0d * r5) * r5))) \/ 8.0d) + (((((r5 * (4.0d \- r19)) \- (((r0.f358G * 3.0d) * r0.f358G) * (1.0d \- r19))) \/ 120.0d) \- (((r0.f358G * r1) * r3) \/ 48.0d)) * r1))))) + 1.0d)\lr8 = r32\lr8.f294x = r13 * r23\lr8.f295y = r13 * r21\l}"];
Node_37 [shape=record,label="{37\:\ 0x01d6|PHI: r6 \l  PHI: (r6v2 double) = (r6v0 double), (r6v1 double) binds: [B:26:0x00d4, B:38:0x01d8] A[DONT_GENERATE, DONT_INLINE]\l|r11 = r6\l}"];
Node_38 [shape=record,label="{38\:\ 0x01d8|double r6 = \-r6\l}"];
Node_39 [shape=record,label="{39\:\ 0x01da|double r5 = r0.f361Mp\lr1 = r30\lr3 = r13\lr13 = r5\lr5 = r9\ldouble r1 = java.lang.Math.abs(r13 \- org.osgeo.proj4j.util.ProjectionMath.mlfn(r1, r3, r5, r0.f363en))\lr8.f294x = java.lang.Math.sin(r28) * r1\lr8.f295y = r1 * r11\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r8\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return r8\l}"];
Node_42 [shape=record,label="{42\:\ ?|SYNTHETIC\lRETURN\l|return r8\l}"];
Node_43 [shape=record,label="{43\:\ ?|SYNTHETIC\lRETURN\l|return r8\l}"];
Node_44 [shape=record,label="{44\:\ ?|SYNTHETIC\lRETURN\l|return r8\l}"];
Node_45 [shape=record,label="{45\:\ ?|SYNTHETIC\lRETURN\l|return r8\l}"];
Node_46 [shape=record,label="{46\:\ ?|SYNTHETIC\lRETURN\l|return r8\l}"];
Node_47 [shape=record,label="{47\:\ ?|SYNTHETIC\lRETURN\l|return r8\l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.project((r27v0 'this' org.osgeo.proj4j.proj.EquidistantAzimuthalProjection A[IMMUTABLE_TYPE, THIS]), (r28v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_19;
Node_3 -> Node_20;
Node_3 -> Node_46;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_41;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_42;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_43;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_37;
Node_26 -> Node_38;
Node_26 -> Node_47;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_32;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_44;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_45;
Node_37 -> Node_39;
Node_38 -> Node_37;
Node_39 -> Node_40;
}

