digraph "CFG fororg.osgeo.proj4j.proj.PolyconicProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[long, double]) = (r35 I:?[long, double]) \l0x0004: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r39 I:?[OBJECT, ARRAY]) \l0x0006: IGET  (r6 I:boolean) = (r0 I:org.osgeo.proj4j.proj.PolyconicProjection) org.osgeo.proj4j.proj.PolyconicProjection.spherical boolean \l0x0008: CONST  (r7 I:?[long, double]) = (0 ?[long, double]) \l0x000a: CONST  (r9 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x000f: CONST  (r11 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x007c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IGET  (r13 I:double) = (r0 I:org.osgeo.proj4j.proj.PolyconicProjection) org.osgeo.proj4j.proj.PolyconicProjection.projectionLatitude double \l0x0015: ARITH  (r13 I:double) = (r13 I:double) + (r37 I:double) \l0x0017: INVOKE  (r13 I:double) = (r13 I:double) java.lang.Math.abs(double):double type: STATIC \l0x001b: CMP_G  (r6 I:int) = (r13 I:double), (r9 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: IF  (r6 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:5:0x0025 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0021: IPUT  (r7 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: ARITH  (r6 I:double) = (r1 I:double) * (r1 I:double) \l0x0027: ARITH  (r13 I:double) = (r37 I:double) * (r37 I:double) \l0x0029: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002a: ARITH  (r6 I:double) = (r6 I:double) + (r13 I:double) \l0x002b: CONST  (r8 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x002d: MOVE  (r13 I:?[long, double]) = (r37 I:?[long, double]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|0x002f: INVOKE  (r15 I:double) = (r13 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0033: ARITH  (r17 I:double) = (r13 I:double) * (r15 I:double) \l0x0035: ARITH  (r17 I:double) = (r17 I:double) + (r11 I:double) \l0x0037: ARITH  (r17 I:double) = (r17 I:double) * (r37 I:double) \l0x0039: ARITH  (r17 I:double) = (r17 I:double) \- (r13 I:double) \l0x003b: CONST  (r19 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x003d: ARITH  (r21 I:double) = (r13 I:double) * (r13 I:double) \l0x003f: ARITH  (r21 I:double) = (r21 I:double) + (r6 I:double) \l0x0041: ARITH  (r21 I:double) = (r21 I:double) * (r19 I:double) \l0x0043: ARITH  (r21 I:double) = (r21 I:double) * (r15 I:double) \l0x0045: ARITH  (r17 I:double) = (r17 I:double) \- (r21 I:double) \l0x0047: ARITH  (r19 I:double) = (r13 I:double) \- (r37 I:double) \l0x0049: ARITH  (r19 I:double) = (r19 I:double) \/ (r15 I:double) \l0x004b: ARITH  (r19 I:double) = (r19 I:double) \- (r11 I:double) \l0x004d: ARITH  (r17 I:double) = (r17 I:double) \/ (r19 I:double) \l0x004f: ARITH  (r13 I:double) = (r13 I:double) \- (r17 I:double) \l0x0051: INVOKE  (r15 I:double) = (r17 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0055: CMP_L  (r15 I:int) = (r15 I:double), (r9 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0057|0x0057: IF  (r15 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x005d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0059|0x0059: ARITH  (r8 I:int) = (r8 I:int) + (\-1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x005b|0x005b: IF  (r8 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:6:0x002f \l}"];
Node_10 [shape=record,label="{10\:\ 0x005d|0x005d: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0074 \l}"];
Node_11 [shape=record,label="{11\:\ 0x005f|0x005f: INVOKE  (r3 I:double) = (r13 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0063: ARITH  (r1 I:double) = (r1 I:double) * (r3 I:double) \l0x0065: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.asin(double):double type: STATIC \l0x0069: INVOKE  (r3 I:double) = (r13 I:double) java.lang.Math.sin(double):double type: STATIC \l0x006d: ARITH  (r1 I:double) = (r1 I:double) \/ (r3 I:double) \l0x006e: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0070: IPUT  (r13 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_12 [shape=record,label="{12\:\ 0x0074|0x0074: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x0076: CONST_STR  (r2 I:java.lang.String) =  \"I\" \l0x0078: INVOKE  \l  (r1 I:org.osgeo.proj4j.ProjectionException)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x007b|0x007b: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x007c|0x007c: IGET  (r13 I:double) = (r0 I:org.osgeo.proj4j.proj.PolyconicProjection) org.osgeo.proj4j.proj.PolyconicProjection.ml0 double \l0x007e: ARITH  (r3 I:double) = (r37 I:double) + (r13 I:double) \l0x0080: INVOKE  (r13 I:double) = (r3 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0084: CMP_G  (r6 I:int) = (r13 I:double), (r9 I:double) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0086|0x0086: IF  (r6 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:17:0x008e \l}"];
Node_16 [shape=record,label="{16\:\ 0x0088|0x0088: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x008a: IPUT  (r7 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_17 [shape=record,label="{17\:\ 0x008e|0x008e: ARITH  (r6 I:double) = (r3 I:double) * (r3 I:double) \l0x0090: ARITH  (r8 I:double) = (r1 I:double) * (r1 I:double) \l0x0092: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0093: ARITH  (r6 I:double) = (r6 I:double) + (r8 I:double) \l0x0094: CONST  (r8 I:?[int, float, short, byte, char]) = (20 ?[int, float, short, byte, char]) \l0x0096: MOVE  (r9 I:?[long, double]) = (r3 I:?[long, double]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0097|0x0097: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:27:0x0124 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0099|0x0099: INVOKE  (r15 I:double) = (r9 I:double) java.lang.Math.sin(double):double type: STATIC \l0x009d: INVOKE  (r17 I:double) = (r9 I:double) java.lang.Math.cos(double):double type: STATIC \l0x00a1: ARITH  (r20 I:double) = (r15 I:double) * (r17 I:double) \l0x00a3: INVOKE  (r13 I:double) = (r17 I:double) java.lang.Math.abs(double):double type: STATIC \l0x00a7: CONST  (r22 I:?[long, double]) = \l  (4427486594234968593(0x3d719799812dea11, double:1.0E\-12) ?[long, double])\l \l0x00ac: CMP_G  (r13 I:int) = (r13 I:double), (r22 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00ae|0x00ae: IF  (r13 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:25:0x011c \l}"];
Node_21 [shape=record,label="{21\:\ 0x00b0|0x00b0: IGET  (r13 I:double) = (r0 I:org.osgeo.proj4j.proj.PolyconicProjection) org.osgeo.proj4j.proj.PolyconicProjection.es double \l0x00b2: ARITH  (r13 I:double) = (r13 I:double) * (r15 I:double) \l0x00b4: ARITH  (r13 I:double) = (r13 I:double) * (r15 I:double) \l0x00b6: ARITH  (r13 I:double) = (r11 I:double) \- (r13 I:double) \l0x00b8: INVOKE  (r24 I:double) = (r13 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x00bc: ARITH  (r13 I:double) = (r15 I:double) * (r24 I:double) \l0x00be: ARITH  (r26 I:double) = (r13 I:double) \/ (r17 I:double) \l0x00c0: IGET  (r13 I:double[]) = (r0 I:org.osgeo.proj4j.proj.PolyconicProjection) org.osgeo.proj4j.proj.PolyconicProjection.en double[] \l0x00c2: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x00c4: MOVE  (r13 I:?[long, double]) = (r9 I:?[long, double]) \l0x00c5: INVOKE  (r13 I:double) = \l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double[])\l org.osgeo.proj4j.util.ProjectionMath.mlfn(double, double, double, double[]):double type: STATIC \l0x00c9: ARITH  (r15 I:double) = (r13 I:double) * (r13 I:double) \l0x00cb: ARITH  (r15 I:double) = (r15 I:double) + (r6 I:double) \l0x00cc: MOVE  (r28 I:?[long, double]) = (r6 I:?[long, double]) \l0x00ce: IGET  (r6 I:double) = (r0 I:org.osgeo.proj4j.proj.PolyconicProjection) org.osgeo.proj4j.proj.PolyconicProjection.es double \l0x00d0: ARITH  (r6 I:double) = (r11 I:double) \/ (r6 I:double) \l0x00d2: ARITH  (r17 I:double) = (r24 I:double) * (r24 I:double) \l0x00d4: ARITH  (r17 I:double) = (r17 I:double) * (r24 I:double) \l0x00d6: ARITH  (r6 I:double) = (r6 I:double) \/ (r17 I:double) \l0x00d8: ARITH  (r17 I:double) = (r13 I:double) + (r13 I:double) \l0x00da: ARITH  (r24 I:double) = (r26 I:double) * (r15 I:double) \l0x00dc: ARITH  (r17 I:double) = (r17 I:double) + (r24 I:double) \l0x00de: CONST  (r24 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x00e0: ARITH  (r30 I:double) = (r3 I:double) * (r24 I:double) \l0x00e2: ARITH  (r32 I:double) = (r26 I:double) * (r13 I:double) \l0x00e4: ARITH  (r32 I:double) = (r32 I:double) + (r11 I:double) \l0x00e6: ARITH  (r32 I:double) = (r32 I:double) * (r30 I:double) \l0x00e8: ARITH  (r17 I:double) = (r17 I:double) \- (r32 I:double) \l0x00ea: IGET  (r11 I:double) = (r0 I:org.osgeo.proj4j.proj.PolyconicProjection) org.osgeo.proj4j.proj.PolyconicProjection.es double \l0x00ec: ARITH  (r11 I:double) = (r11 I:double) * (r20 I:double) \l0x00ee: ARITH  (r30 I:double) = (r30 I:double) * (r13 I:double) \l0x00f0: ARITH  (r15 I:double) = (r15 I:double) \- (r30 I:double) \l0x00f2: ARITH  (r11 I:double) = (r11 I:double) * (r15 I:double) \l0x00f4: ARITH  (r11 I:double) = (r11 I:double) \/ (r26 I:double) \l0x00f6: ARITH  (r13 I:double) = (r3 I:double) \- (r13 I:double) \l0x00f8: ARITH  (r13 I:double) = (r13 I:double) * (r24 I:double) \l0x00fa: ARITH  (r26 I:double) = (r26 I:double) * (r6 I:double) \l0x00fc: CONST  (r15 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x00fe: ARITH  (r19 I:double) = (r15 I:double) \/ (r20 I:double) \l0x0100: ARITH  (r26 I:double) = (r26 I:double) \- (r19 I:double) \l0x0102: ARITH  (r13 I:double) = (r13 I:double) * (r26 I:double) \l0x0104: ARITH  (r11 I:double) = (r11 I:double) + (r13 I:double) \l0x0105: ARITH  (r11 I:double) = (r11 I:double) \- (r6 I:double) \l0x0106: ARITH  (r11 I:double) = (r11 I:double) \- (r6 I:double) \l0x0107: ARITH  (r17 I:double) = (r17 I:double) \/ (r11 I:double) \l0x0109: ARITH  (r9 I:double) = (r9 I:double) + (r17 I:double) \l0x010b: INVOKE  (r6 I:double) = (r17 I:double) java.lang.Math.abs(double):double type: STATIC \l0x010f: CMP_G  (r6 I:int) = (r6 I:double), (r22 I:double) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0111|0x0111: IF  (r6 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:24:0x0114 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0114|0x0114: ARITH  (r8 I:int) = (r8 I:int) + (\-1 int) \l0x0116: MOVE  (r6 I:?[long, double]) = (r28 I:?[long, double]) \l0x0118: CONST  (r11 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x011c|0x011c: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x011e: CONST_STR  (r2 I:java.lang.String) =  \"I\" \l0x0120: INVOKE  \l  (r1 I:org.osgeo.proj4j.ProjectionException)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x0123|0x0123: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0124|0x0124: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x014e \l}"];
Node_28 [shape=record,label="{28\:\ 0x0126|0x0126: INVOKE  (r3 I:double) = (r9 I:double) java.lang.Math.sin(double):double type: STATIC \l0x012a: INVOKE  (r6 I:double) = (r9 I:double) java.lang.Math.tan(double):double type: STATIC \l0x012e: ARITH  (r1 I:double) = (r1 I:double) * (r6 I:double) \l0x0130: IGET  (r6 I:double) = (r0 I:org.osgeo.proj4j.proj.PolyconicProjection) org.osgeo.proj4j.proj.PolyconicProjection.es double \l0x0132: ARITH  (r6 I:double) = (r6 I:double) * (r3 I:double) \l0x0134: ARITH  (r6 I:double) = (r6 I:double) * (r3 I:double) \l0x0136: CONST  (r3 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0138: ARITH  (r11 I:double) = (r3 I:double) \- (r6 I:double) \l0x013a: INVOKE  (r3 I:double) = (r11 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x013e: ARITH  (r1 I:double) = (r1 I:double) * (r3 I:double) \l0x0140: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.asin(double):double type: STATIC \l0x0144: INVOKE  (r3 I:double) = (r9 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0148: ARITH  (r1 I:double) = (r1 I:double) \/ (r3 I:double) \l0x0149: IPUT  (r1 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x014b: IPUT  (r9 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_29 [shape=record,label="{29\:\ 0x014d|0x014d: RETURN  (r5 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
Node_30 [shape=record,label="{30\:\ 0x014e|0x014e: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x0150: CONST_STR  (r2 I:java.lang.String) =  \"I\" \l0x0152: INVOKE  \l  (r1 I:org.osgeo.proj4j.ProjectionException)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_31 [shape=record,label="{31\:\ 0x0155|0x0155: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.PolyconicProjection.projectInverse((r34 'this' I:org.osgeo.proj4j.proj.PolyconicProjection A[IMMUTABLE_TYPE, THIS]), (r35 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r37 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r39 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_29;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_6;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_29;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_29;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_24;
Node_22 -> Node_27[style=dashed];
Node_24 -> Node_18;
Node_25 -> Node_26;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_30 -> Node_31;
}

