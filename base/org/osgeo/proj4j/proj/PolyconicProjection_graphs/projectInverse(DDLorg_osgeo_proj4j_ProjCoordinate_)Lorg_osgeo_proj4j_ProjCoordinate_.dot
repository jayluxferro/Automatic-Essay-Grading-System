digraph "CFG fororg.osgeo.proj4j.proj.PolyconicProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r34\lr1 = r35\lr5 = r39\lr11 = 1.0d\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|if (r0.spherical == false) goto L_0x007c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013}"];
Node_3 [shape=record,label="{3\:\ 0x001d|if ((java.lang.Math.abs(r0.projectionLatitude + r37) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r0.projectionLatitude + r37) == 1.0E\-10d ? 0 : \-1)) \> 0) goto L_0x0025\l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|r5.f294x = r1\lr5.f295y = 0.0d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|double r6 = (r1 * r1) + (r37 * r37)\lr8 = 10\lr13 = r37\l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|LOOP_START\lPHI: r8 r13 \l  PHI: (r8v6 int) = (r8v5 int), (r8v8 int) binds: [B:5:0x0025, B:9:0x005b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v20 double) = (r13v19 double), (r13v21 double) binds: [B:5:0x0025, B:9:0x005b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x002f\-\>B:9:0x005b\l|double r15 = java.lang.Math.tan(r13)\ldouble r17 = (((((r13 * r15) + 1.0d) * r37) \- r13) \- ((((r13 * r13) + r6) * 0.5d) * r15)) \/ (((r13 \- r37) \/ r15) \- 1.0d)\ldouble r13 = r13 \- r17\l}"];
Node_7 [shape=record,label="{7\:\ 0x0057|if ((java.lang.Math.abs(r17) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r17) == 1.0E\-10d ? 0 : \-1)) \<= 0) goto L_0x005d\l}"];
Node_8 [shape=record,label="{8\:\ 0x0059|int r8 = r8 + \-1\l}"];
Node_9 [shape=record,label="{9\:\ 0x005b|LOOP_END\lLOOP:0: B:6:0x002f\-\>B:9:0x005b\l|if (r8 \> 0) goto L_0x002f\l}"];
Node_10 [shape=record,label="{10\:\ 0x005d|PHI: r8 \l  PHI: (r8v7 int) = (r8v6 int), (r8v8 int) binds: [B:31:0x005d, B:32:0x005d] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 == 0) goto L_0x0074\l}"];
Node_11 [shape=record,label="{11\:\ 0x005f|r5.f294x = java.lang.Math.asin(r1 * java.lang.Math.tan(r13)) \/ java.lang.Math.sin(r13)\lr5.f295y = r13\l}"];
Node_12 [shape=record,label="{12\:\ 0x0074}"];
Node_13 [shape=record,label="{13\:\ 0x007b|throw new org.osgeo.proj4j.ProjectionException(\"I\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x007c|double r3 = r37 + r0.ml0\l}"];
Node_15 [shape=record,label="{15\:\ 0x0086|if ((java.lang.Math.abs(r3) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r3) == 1.0E\-10d ? 0 : \-1)) \> 0) goto L_0x008e\l}"];
Node_16 [shape=record,label="{16\:\ 0x0088|r5.f294x = r1\lr5.f295y = 0.0d\l}"];
Node_17 [shape=record,label="{17\:\ 0x008e|double r6 = (r3 * r3) + (r1 * r1)\lr8 = 20\lr9 = r3\l}"];
Node_18 [shape=record,label="{18\:\ 0x0097|LOOP_START\lPHI: r6 r8 r9 r11 \l  PHI: (r6v4 double) = (r6v3 double), (r6v14 double) binds: [B:17:0x008e, B:23:0x0114] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 int) = (r8v1 int), (r8v3 int) binds: [B:17:0x008e, B:23:0x0114] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v2 double) = (r9v1 double), (r9v4 double) binds: [B:17:0x008e, B:23:0x0114] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v1 double) = (r11v0 double), (r11v10 double) binds: [B:17:0x008e, B:23:0x0114] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:18:0x0097\-\>B:23:0x0114\l|if (r8 \<= 0) goto L_0x0124\l}"];
Node_19 [shape=record,label="{19\:\ 0x0099|double r15 = java.lang.Math.sin(r9)\ldouble r17 = java.lang.Math.cos(r9)\ldouble r20 = r15 * r17\l}"];
Node_20 [shape=record,label="{20\:\ 0x00ae|if ((java.lang.Math.abs(r17) \> ITOL ? 1 : (java.lang.Math.abs(r17) == ITOL ? 0 : \-1)) \< 0) goto L_0x011c\l}"];
Node_21 [shape=record,label="{21\:\ 0x00b0|double r24 = java.lang.Math.sqrt(r11 \- ((r0.f424es * r15) * r15))\ldouble r26 = (r15 * r24) \/ r17\lr19 = r0.f421en\ldouble r13 = org.osgeo.proj4j.util.ProjectionMath.mlfn(r9, r15, r17, r19)\ldouble r15 = (r13 * r13) + r6\lr28 = r6\ldouble r6 = (r11 \/ r0.f424es) \/ ((r24 * r24) * r24)\ldouble r30 = r3 * 2.0d\ldouble r17 = (((r13 + r13) + (r26 * r15)) \- (((r26 * r13) + r11) * r30)) \/ ((((((r0.f424es * r20) * (r15 \- (r30 * r13))) \/ r26) + (((r3 \- r13) * 2.0d) * ((r26 * r6) \- (1.0d \/ r20)))) \- r6) \- r6)\ldouble r9 = r9 + r17\l}"];
Node_22 [shape=record,label="{22\:\ 0x0111|if ((java.lang.Math.abs(r17) \> ITOL ? 1 : (java.lang.Math.abs(r17) == ITOL ? 0 : \-1)) \> 0) goto L_0x0114\l}"];
Node_23 [shape=record,label="{23\:\ 0x0114|LOOP_END\lLOOP:1: B:18:0x0097\-\>B:23:0x0114\l|int r8 = r8 + \-1\lr6 = r28\lr11 = 1.0d\l}"];
Node_24 [shape=record,label="{24\:\ 0x011c}"];
Node_25 [shape=record,label="{25\:\ 0x0123|throw new org.osgeo.proj4j.ProjectionException(\"I\")\l}"];
Node_26 [shape=record,label="{26\:\ 0x0124|PHI: r9 \l  PHI: (r9v3 double) = (r9v2 double), (r9v4 double) binds: [B:34:0x0124, B:33:0x0124] A[DONT_GENERATE, DONT_INLINE]\l|if (r8 == 0) goto L_0x014e\l}"];
Node_27 [shape=record,label="{27\:\ 0x0126|double r3 = java.lang.Math.sin(r9)\lr5.f294x = java.lang.Math.asin((r1 * java.lang.Math.tan(r9)) * java.lang.Math.sqrt(1.0d \- ((r0.f424es * r3) * r3))) \/ java.lang.Math.sin(r9)\lr5.f295y = r9\l}"];
Node_28 [shape=record,label="{28\:\ 0x014d|RETURN\l|return r5\l}"];
Node_29 [shape=record,label="{29\:\ 0x014e}"];
Node_30 [shape=record,label="{30\:\ 0x0155|throw new org.osgeo.proj4j.ProjectionException(\"I\")\l}"];
Node_31 [shape=record,label="{31\:\ 0x005d|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x005d|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0124|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0124|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x011c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.PolyconicProjection.projectInverse((r34v0 'this' org.osgeo.proj4j.proj.PolyconicProjection A[IMMUTABLE_TYPE, THIS]), (r35v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r37v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r39v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_28;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_31;
Node_8 -> Node_9;
Node_9 -> Node_6;
Node_9 -> Node_32[style=dashed];
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_28;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_28;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_34;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_35;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_33[style=dashed];
Node_23 -> Node_18;
Node_24 -> Node_25;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_31 -> Node_10;
Node_32 -> Node_10;
Node_33 -> Node_26;
Node_34 -> Node_26;
Node_35 -> Node_24;
}

