digraph "CFG fororg.osgeo.proj4j.proj.SimpleConicProjection.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.initialize()\ldouble r0 = java.lang.Math.toRadians(30.0d)\ldouble r4 = java.lang.Math.toRadians(60.0d)\ldouble r6 = (r4 \- r0) * 0.5d\lr10.sig = (r4 + r0) * 0.5d\l}"];
Node_1 [shape=record,label="{1\:\ 0x0025|if ((java.lang.Math.abs(r6) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r6) == 1.0E\-10d ? 0 : \-1)) \< 0) goto L_0x0034\l}"];
Node_2 [shape=record,label="{2\:\ 0x0027}"];
Node_3 [shape=record,label="{3\:\ 0x002f|if ((java.lang.Math.abs(r10.sig) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r10.sig) == 1.0E\-10d ? 0 : \-1)) \>= 0) goto L_0x0032\l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|r0 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|r0 = \-42\l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|PHI: r0 \l  PHI: (r0v4 int) = (r0v60 int), (r0v64 int) binds: [B:5:0x0034, B:4:0x0032] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != 0) goto L_0x0185\l}"];
Node_7 [shape=record,label="{7\:\ 0x0038}"];
Node_8 [shape=record,label="{8\:\ 0x003a|switch(r10.type) \{\l    case 0: goto L_0x015a;\l    case 1: goto L_0x0138;\l    case 2: goto L_0x010d;\l    case 3: goto L_0x00db;\l    case 4: goto L_0x0092;\l    case 5: goto L_0x0065;\l    case 6: goto L_0x003f;\l    default: goto L_0x003d;\l\}\l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|double r0 = java.lang.Math.tan(r6)\lr10.f434n = (java.lang.Math.sin(r10.sig) * r0) \/ r6\lr10.rho_c = (r6 \/ (r0 * java.lang.Math.tan(r10.sig))) + r10.sig\lr10.rho_0 = r10.rho_c \- r10.projectionLatitude\l}"];
Node_10 [shape=record,label="{10\:\ 0x0065|r10.f434n = java.lang.Math.sin(r10.sig)\ldouble r0 = java.lang.Math.cos(r6)\lr10.rho_c = (r10.f434n \/ r0) + (r0 \/ r10.f434n)\lr10.rho_0 = java.lang.Math.sqrt((r10.rho_c \- (java.lang.Math.sin(r10.projectionLatitude) * 2.0d)) \/ r10.f434n)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0092|r10.f434n = java.lang.Math.sin(r10.sig)\lr10.f433c2 = java.lang.Math.cos(r6)\lr10.f432c1 = 1.0d \/ java.lang.Math.tan(r10.sig)\ldouble r0 = r10.projectionLatitude \- r10.sig\l}"];
Node_12 [shape=record,label="{12\:\ 0x00bc|if (((java.lang.Math.abs(r0) \- 1.0E\-10d) \> 1.5707963267948966d ? 1 : ((java.lang.Math.abs(r0) \- 1.0E\-10d) == 1.5707963267948966d ? 0 : \-1)) \>= 0) goto L_0x00d3\l}"];
Node_13 [shape=record,label="{13\:\ 0x00be|r10.rho_0 = r10.f433c2 * (r10.f432c1 \- java.lang.Math.tan(r0))\lr10.maxLatitude = java.lang.Math.toRadians(60.0d)\l}"];
Node_14 [shape=record,label="{14\:\ 0x00d3}"];
Node_15 [shape=record,label="{15\:\ 0x00da|throw new org.osgeo.proj4j.ProjectionException(\"\-43\")\l}"];
Node_16 [shape=record,label="{16\:\ 0x00db|r10.rho_c = (r6 \/ (java.lang.Math.tan(r10.sig) * java.lang.Math.tan(r6))) + r10.sig\lr10.rho_0 = r10.rho_c \- r10.projectionLatitude\lr10.f434n = ((java.lang.Math.sin(r10.sig) * java.lang.Math.sin(r6)) * java.lang.Math.tan(r6)) \/ (r6 * r6)\l}"];
Node_17 [shape=record,label="{17\:\ 0x010d|double r0 = java.lang.Math.sqrt(java.lang.Math.cos(r6))\lr10.rho_c = r0 \/ java.lang.Math.tan(r10.sig)\lr10.rho_0 = r10.rho_c + java.lang.Math.tan(r10.sig \- r10.projectionLatitude)\lr10.f434n = java.lang.Math.sin(r10.sig) * r0\l}"];
Node_18 [shape=record,label="{18\:\ 0x0138|r10.rho_c = (java.lang.Math.sin(r6) \/ (r6 * java.lang.Math.tan(r10.sig))) + r10.sig\lr10.rho_0 = r10.rho_c \- r10.projectionLatitude\lr10.f434n = java.lang.Math.sin(r10.sig)\l}"];
Node_19 [shape=record,label="{19\:\ 0x015a|r10.f434n = (java.lang.Math.sin(r10.sig) * java.lang.Math.sin(r6)) \/ r6\ldouble r6 = r6 * 0.5d\lr10.rho_c = (r6 \/ (java.lang.Math.tan(r6) * java.lang.Math.tan(r10.sig))) + r10.sig\lr10.rho_0 = r10.rho_c \- r10.projectionLatitude\l}"];
Node_20 [shape=record,label="{20\:\ 0x0185|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Error \")\lr2.append(r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x019b|throw new org.osgeo.proj4j.ProjectionException(r2.toString())\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.SimpleConicProjection.initialize((r10v0 'this' org.osgeo.proj4j.proj.SimpleConicProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_8 -> Node_11;
Node_8 -> Node_16;
Node_8 -> Node_17;
Node_8 -> Node_18;
Node_8 -> Node_19;
Node_8 -> Node_29;
Node_9 -> Node_23;
Node_10 -> Node_24;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_25;
Node_14 -> Node_15;
Node_16 -> Node_26;
Node_17 -> Node_27;
Node_18 -> Node_28;
Node_19 -> Node_22;
Node_20 -> Node_21;
}

