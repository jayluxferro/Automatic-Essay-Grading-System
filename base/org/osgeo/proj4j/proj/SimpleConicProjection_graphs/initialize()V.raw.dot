digraph "CFG fororg.osgeo.proj4j.proj.SimpleConicProjection.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r10 I:org.osgeo.proj4j.proj.ConicProjection) org.osgeo.proj4j.proj.ConicProjection.initialize():void type: SUPER \l0x0003: CONST  (r0 I:?[long, double]) = \l  (4629137466983448576(0x403e000000000000, double:30.0) ?[long, double])\l \l0x0005: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x0009: CONST  (r2 I:?[long, double]) = \l  (4633641066610819072(0x404e000000000000, double:60.0) ?[long, double])\l \l0x000b: INVOKE  (r4 I:double) = (r2 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x000f: ARITH  (r6 I:double) = (r4 I:double) \- (r0 I:double) \l0x0011: CONST  (r8 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x0013: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x0015: ARITH  (r4 I:double) = (r4 I:double) + (r0 I:double) \l0x0016: ARITH  (r4 I:double) = (r4 I:double) * (r8 I:double) \l0x0018: IPUT  \l  (r4 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x001a: INVOKE  (r0 I:double) = (r6 I:double) java.lang.Math.abs(double):double type: STATIC \l0x001e: CONST  (r4 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x0023: CMP_G  (r0 I:int) = (r0 I:double), (r4 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0025|0x0025: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:6:0x0034 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0027|0x0027: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0029: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x002d: CMP_G  (r0 I:int) = (r0 I:double), (r4 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002f|0x002f: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x0032 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|0x0032: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|0x0034: CONST  (r0 I:?[int, float, short, byte, char]) = (\-42 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|0x0036: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0185 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|0x0038: IGET  (r0 I:int) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.type int \l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|0x003a: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3, 4, 5, 6] t:[0x015a, 0x0138, 0x010d, 0x00db, 0x0092, 0x0065, 0x003f] \l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|0x003f: INVOKE  (r0 I:double) = (r6 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0043: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0045: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0049: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double) \l0x004b: ARITH  (r2 I:double) = (r2 I:double) \/ (r6 I:double) \l0x004c: IPUT  \l  (r2 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.n double \l0x004e: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0050: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0054: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x0056: ARITH  (r6 I:double) = (r6 I:double) \/ (r0 I:double) \l0x0057: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0059: ARITH  (r6 I:double) = (r6 I:double) + (r0 I:double) \l0x005a: IPUT  \l  (r6 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x005c: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x005e: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.projectionLatitude double \l0x0060: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0061: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_0 double \l}"];
Node_12 [shape=record,label="{12\:\ 0x0065|0x0065: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0067: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x006b: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.n double \l0x006d: INVOKE  (r0 I:double) = (r6 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0071: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.n double \l0x0073: ARITH  (r2 I:double) = (r2 I:double) \/ (r0 I:double) \l0x0074: IGET  (r4 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.n double \l0x0076: ARITH  (r0 I:double) = (r0 I:double) \/ (r4 I:double) \l0x0077: ARITH  (r2 I:double) = (r2 I:double) + (r0 I:double) \l0x0078: IPUT  \l  (r2 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x007a: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x007c: CONST  (r2 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x007e: IGET  (r4 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.projectionLatitude double \l0x0080: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0084: ARITH  (r4 I:double) = (r4 I:double) * (r2 I:double) \l0x0086: ARITH  (r0 I:double) = (r0 I:double) \- (r4 I:double) \l0x0087: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.n double \l0x0089: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x008a: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x008e: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_0 double \l}"];
Node_13 [shape=record,label="{13\:\ 0x0092|0x0092: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0094: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0098: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.n double \l0x009a: INVOKE  (r0 I:double) = (r6 I:double) java.lang.Math.cos(double):double type: STATIC \l0x009e: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.c2 double \l0x00a0: CONST  (r0 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x00a2: IGET  (r6 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x00a4: INVOKE  (r6 I:double) = (r6 I:double) java.lang.Math.tan(double):double type: STATIC \l0x00a8: ARITH  (r0 I:double) = (r0 I:double) \/ (r6 I:double) \l0x00a9: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.c1 double \l0x00ab: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.projectionLatitude double \l0x00ad: IGET  (r6 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x00af: ARITH  (r0 I:double) = (r0 I:double) \- (r6 I:double) \l0x00b0: INVOKE  (r6 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x00b4: ARITH  (r6 I:double) = (r6 I:double) \- (r4 I:double) \l0x00b5: CONST  (r4 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x00ba: CMP_L  (r4 I:int) = (r6 I:double), (r4 I:double) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00bc|0x00bc: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:16:0x00d3 \l}"];
Node_15 [shape=record,label="{15\:\ 0x00be|0x00be: IGET  (r4 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.c2 double \l0x00c0: IGET  (r6 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.c1 double \l0x00c2: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.tan(double):double type: STATIC \l0x00c6: ARITH  (r6 I:double) = (r6 I:double) \- (r0 I:double) \l0x00c7: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x00c9: IPUT  \l  (r4 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_0 double \l0x00cb: INVOKE  (r0 I:double) = (r2 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x00cf: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.maxLatitude double \l}"];
Node_16 [shape=record,label="{16\:\ 0x00d3|0x00d3: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x00d5: CONST_STR  (r1 I:java.lang.String) =  \"\-43\" \l0x00d7: INVOKE  \l  (r0 I:org.osgeo.proj4j.ProjectionException)\l  (r1 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x00da|0x00da: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x00db|0x00db: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x00dd: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.tan(double):double type: STATIC \l0x00e1: INVOKE  (r2 I:double) = (r6 I:double) java.lang.Math.tan(double):double type: STATIC \l0x00e5: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x00e7: ARITH  (r0 I:double) = (r6 I:double) \/ (r0 I:double) \l0x00e9: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x00eb: ARITH  (r0 I:double) = (r0 I:double) + (r2 I:double) \l0x00ec: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x00ee: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x00f0: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.projectionLatitude double \l0x00f2: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x00f3: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_0 double \l0x00f5: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x00f7: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00fb: INVOKE  (r2 I:double) = (r6 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00ff: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x0101: INVOKE  (r2 I:double) = (r6 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0105: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x0107: ARITH  (r6 I:double) = (r6 I:double) * (r6 I:double) \l0x0109: ARITH  (r0 I:double) = (r0 I:double) \/ (r6 I:double) \l0x010a: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.n double \l}"];
Node_19 [shape=record,label="{19\:\ 0x010d|0x010d: INVOKE  (r0 I:double) = (r6 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0111: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0115: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0117: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.tan(double):double type: STATIC \l0x011b: ARITH  (r2 I:double) = (r0 I:double) \/ (r2 I:double) \l0x011d: IPUT  \l  (r2 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x011f: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x0121: IGET  (r4 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0123: IGET  (r6 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.projectionLatitude double \l0x0125: ARITH  (r4 I:double) = (r4 I:double) \- (r6 I:double) \l0x0126: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.tan(double):double type: STATIC \l0x012a: ARITH  (r2 I:double) = (r2 I:double) + (r4 I:double) \l0x012b: IPUT  \l  (r2 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_0 double \l0x012d: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x012f: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0133: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double) \l0x0135: IPUT  \l  (r2 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.n double \l}"];
Node_20 [shape=record,label="{20\:\ 0x0138|0x0138: INVOKE  (r0 I:double) = (r6 I:double) java.lang.Math.sin(double):double type: STATIC \l0x013c: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x013e: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0142: ARITH  (r6 I:double) = (r6 I:double) * (r2 I:double) \l0x0144: ARITH  (r0 I:double) = (r0 I:double) \/ (r6 I:double) \l0x0145: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0147: ARITH  (r0 I:double) = (r0 I:double) + (r2 I:double) \l0x0148: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x014a: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x014c: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.projectionLatitude double \l0x014e: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x014f: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_0 double \l0x0151: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0153: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0157: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.n double \l}"];
Node_21 [shape=record,label="{21\:\ 0x015a|0x015a: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x015c: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0160: INVOKE  (r2 I:double) = (r6 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0164: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x0166: ARITH  (r0 I:double) = (r0 I:double) \/ (r6 I:double) \l0x0167: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.n double \l0x0169: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x016b: INVOKE  (r0 I:double) = (r6 I:double) java.lang.Math.tan(double):double type: STATIC \l0x016f: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0171: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0175: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x0177: ARITH  (r6 I:double) = (r6 I:double) \/ (r0 I:double) \l0x0178: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x017a: ARITH  (r6 I:double) = (r6 I:double) + (r0 I:double) \l0x017b: IPUT  \l  (r6 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x017d: IGET  (r0 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x017f: IGET  (r2 I:double) = (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.projectionLatitude double \l0x0181: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0182: IPUT  \l  (r0 I:double)\l  (r10 I:org.osgeo.proj4j.proj.SimpleConicProjection)\l org.osgeo.proj4j.proj.SimpleConicProjection.rho_0 double \l}"];
Node_22 [shape=record,label="{22\:\ 0x0184|0x0184: RETURN   \l}"];
Node_23 [shape=record,label="{23\:\ 0x0185|0x0185: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x0187: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0189: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x018c: CONST_STR  (r3 I:java.lang.String) =  \"Error \" \l0x018e: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0191: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0194: INVOKE  (r0 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0198: INVOKE  \l  (r1 I:org.osgeo.proj4j.ProjectionException)\l  (r0 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x019b|0x019b: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.SimpleConicProjection.initialize((r10 'this' I:org.osgeo.proj4j.proj.SimpleConicProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12;
Node_9 -> Node_13;
Node_9 -> Node_18;
Node_9 -> Node_19;
Node_9 -> Node_20;
Node_9 -> Node_21;
Node_9 -> Node_22;
Node_11 -> Node_22;
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_18 -> Node_22;
Node_19 -> Node_22;
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_23 -> Node_24;
}

