digraph "CFG fororg.osgeo.proj4j.proj.SimpleConicProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:double) = (r6 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.rho_0 double \l0x0002: ARITH  (r0 I:double) = (r0 I:double) \- (r9 I:double) \l0x0003: IPUT  (r0 I:double), (r11 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0005: INVOKE  (r0 I:double) = (r7 I:double), (r0 I:double) org.osgeo.proj4j.util.ProjectionMath.distance(double, double):double type: STATIC \l0x0009: IGET  (r2 I:double) = (r6 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.n double \l0x000b: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x000d: CMP_G  (r2 I:int) = (r2 I:double), (r4 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: NEG  (r0 I:double) = (r0 I:double) \l0x0012: NEG  (r2 I:double) = (r7 I:double) \l0x0013: IPUT  (r2 I:double), (r11 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0015: NEG  (r2 I:double) = (r9 I:double) \l0x0016: IPUT  (r2 I:double), (r11 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: INVOKE  (r7 I:double) = (r7 I:double), (r9 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x001c: IGET  (r9 I:double) = (r6 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.n double \l0x001e: ARITH  (r7 I:double) = (r7 I:double) \/ (r9 I:double) \l0x001f: IPUT  (r7 I:double), (r11 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0021: IGET  (r7 I:int) = (r6 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.type int \l0x0023: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003f \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: CONST  (r8 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002f \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: IGET  (r7 I:double) = (r6 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x002b: ARITH  (r7 I:double) = (r7 I:double) \- (r0 I:double) \l0x002c: IPUT  (r7 I:double), (r11 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: IGET  (r7 I:double) = (r6 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.c1 double \l0x0031: IGET  (r9 I:double) = (r6 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.c2 double \l0x0033: ARITH  (r0 I:double) = (r0 I:double) \/ (r9 I:double) \l0x0034: ARITH  (r7 I:double) = (r7 I:double) \- (r0 I:double) \l0x0035: INVOKE  (r7 I:double) = (r7 I:double) java.lang.Math.atan(double):double type: STATIC \l0x0039: IGET  (r9 I:double) = (r6 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x003b: ARITH  (r7 I:double) = (r7 I:double) + (r9 I:double) \l0x003c: IPUT  (r7 I:double), (r11 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|0x003f: IGET  (r7 I:double) = (r6 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.sig double \l0x0041: IGET  (r9 I:double) = (r6 I:org.osgeo.proj4j.proj.SimpleConicProjection) org.osgeo.proj4j.proj.SimpleConicProjection.rho_c double \l0x0043: ARITH  (r0 I:double) = (r0 I:double) \- (r9 I:double) \l0x0044: INVOKE  (r9 I:double) = (r0 I:double) java.lang.Math.atan(double):double type: STATIC \l0x0048: ARITH  (r7 I:double) = (r7 I:double) \- (r9 I:double) \l0x0049: IPUT  (r7 I:double), (r11 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_10 [shape=record,label="{10\:\ 0x004b|0x004b: RETURN  (r11 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.SimpleConicProjection.projectInverse((r6 'this' I:org.osgeo.proj4j.proj.SimpleConicProjection A[IMMUTABLE_TYPE, THIS]), (r7 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_10;
Node_9 -> Node_10;
}

