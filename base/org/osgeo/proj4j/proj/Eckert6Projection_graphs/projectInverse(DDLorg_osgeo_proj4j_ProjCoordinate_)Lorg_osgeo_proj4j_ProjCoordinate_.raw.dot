digraph "CFG fororg.osgeo.proj4j.proj.Eckert6Projection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:double) =  org.osgeo.proj4j.proj.Eckert6Projection.C_y double \l0x0002: ARITH  (r7 I:double) = (r7 I:double) \/ (r0 I:double) \l0x0003: INVOKE  (r0 I:double) = (r7 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0007: ARITH  (r0 I:double) = (r0 I:double) + (r7 I:double) \l0x0008: CONST  (r2 I:?[long, double]) = \l  (4612971337489716876(0x400490fdaa22168c, double:2.5707963267948966) ?[long, double])\l \l0x000d: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x000e: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.asin(double):double type: STATIC \l0x0012: IPUT  (r0 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0014: SGET  (r0 I:double) =  org.osgeo.proj4j.proj.Eckert6Projection.C_x double \l0x0016: INVOKE  (r7 I:double) = (r7 I:double) java.lang.Math.cos(double):double type: STATIC \l0x001a: CONST  (r2 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x001c: ARITH  (r7 I:double) = (r7 I:double) + (r2 I:double) \l0x001d: ARITH  (r0 I:double) = (r0 I:double) * (r7 I:double) \l0x001f: ARITH  (r5 I:double) = (r5 I:double) \/ (r0 I:double) \l0x0020: IPUT  (r5 I:double), (r9 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|0x0022: RETURN  (r9 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.Eckert6Projection.projectInverse((r4 'this' I:org.osgeo.proj4j.proj.Eckert6Projection A[IMMUTABLE_TYPE, THIS]), (r5 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

