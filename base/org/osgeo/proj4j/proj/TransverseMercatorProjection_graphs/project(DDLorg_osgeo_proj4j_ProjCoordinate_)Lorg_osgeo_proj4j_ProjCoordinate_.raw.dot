digraph "CFG fororg.osgeo.proj4j.proj.TransverseMercatorProjection.project(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r40 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r45 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r4 I:boolean) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.spherical boolean \l0x0006: CONST  (r7 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x004d \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r9 I:double) = (r43 I:double) java.lang.Math.cos(double):double type: STATIC \l0x000e: INVOKE  (r11 I:double) = (r41 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0012: ARITH  (r11 I:double) = (r11 I:double) * (r9 I:double) \l0x0014: IGET  (r13 I:double) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.ml0 double \l0x0016: IGET  (r5 I:double) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.scaleFactor double \l0x0018: ARITH  (r13 I:double) = (r13 I:double) * (r5 I:double) \l0x001a: ARITH  (r4 I:double) = (r11 I:double) + (r7 I:double) \l0x001c: ARITH  (r17 I:double) = (r7 I:double) \- (r11 I:double) \l0x001e: ARITH  (r4 I:double) = (r4 I:double) \/ (r17 I:double) \l0x0020: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.log(double):double type: STATIC \l0x0024: ARITH  (r13 I:double) = (r13 I:double) * (r4 I:double) \l0x0026: IPUT  (r13 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0028: INVOKE  (r1 I:double) = (r41 I:double) java.lang.Math.cos(double):double type: STATIC \l0x002c: ARITH  (r9 I:double) = (r9 I:double) * (r1 I:double) \l0x002e: ARITH  (r11 I:double) = (r11 I:double) * (r11 I:double) \l0x0030: ARITH  (r7 I:double) = (r7 I:double) \- (r11 I:double) \l0x0031: INVOKE  (r1 I:double) = (r7 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0035: ARITH  (r9 I:double) = (r9 I:double) \/ (r1 I:double) \l0x0036: INVOKE  (r1 I:double) = (r9 I:double) org.osgeo.proj4j.util.ProjectionMath.acos(double):double type: STATIC \l0x003a: CONST  (r9 I:?[long, double]) = (0 ?[long, double]) \l0x003c: CMP_G  (r4 I:int) = (r43 I:double), (r9 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x003e|0x003e: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x0041 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0040|0x0040: NEG  (r1 I:double) = (r1 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|0x0041: IGET  (r4 I:double) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.esp double \l0x0043: IGET  (r6 I:double) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.projectionLatitude double \l0x0045: ARITH  (r1 I:double) = (r1 I:double) \- (r6 I:double) \l0x0046: ARITH  (r4 I:double) = (r4 I:double) * (r1 I:double) \l0x0048: IPUT  (r4 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x004a: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x004d|0x004d: CONST  (r9 I:?[long, double]) = (0 ?[long, double]) \l0x004f: INVOKE  (r11 I:double) = (r43 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0053: INVOKE  (r21 I:double) = (r43 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0057: INVOKE  (r13 I:double) = (r21 I:double) java.lang.Math.abs(double):double type: STATIC \l0x005b: CONST  (r15 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x0060: CMP_L  (r6 I:int) = (r13 I:double), (r15 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0062|0x0062: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x0066 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0064|0x0064: ARITH  (r9 I:double) = (r11 I:double) \/ (r21 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0066|0x0066: ARITH  (r9 I:double) = (r9 I:double) * (r9 I:double) \l0x0068: ARITH  (r13 I:double) = (r21 I:double) * (r41 I:double) \l0x006a: ARITH  (r15 I:double) = (r13 I:double) * (r13 I:double) \l0x006c: IGET  (r7 I:double) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.es double \l0x006e: ARITH  (r7 I:double) = (r7 I:double) * (r11 I:double) \l0x0070: ARITH  (r7 I:double) = (r7 I:double) * (r11 I:double) \l0x0072: CONST  (r17 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0074: ARITH  (r7 I:double) = (r17 I:double) \- (r7 I:double) \l0x0076: INVOKE  (r6 I:double) = (r7 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x007a: ARITH  (r13 I:double) = (r13 I:double) \/ (r6 I:double) \l0x007b: IGET  (r6 I:double) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.esp double \l0x007d: ARITH  (r6 I:double) = (r6 I:double) * (r21 I:double) \l0x007f: ARITH  (r6 I:double) = (r6 I:double) * (r21 I:double) \l0x0081: IGET  (r4 I:double) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.scaleFactor double \l0x0083: ARITH  (r4 I:double) = (r4 I:double) * (r13 I:double) \l0x0085: CONST  (r19 I:?[long, double]) = \l  (4595172819793696085(0x3fc5555555555555, double:0.16666666666666666) ?[long, double])\l \l0x008a: ARITH  (r19 I:double) = (r19 I:double) * (r15 I:double) \l0x008c: ARITH  (r24 I:double) = (r17 I:double) \- (r9 I:double) \l0x008e: ARITH  (r24 I:double) = (r24 I:double) + (r6 I:double) \l0x0090: CONST  (r17 I:?[long, double]) = \l  (4587366580439587226(0x3fa999999999999a, double:0.05) ?[long, double])\l \l0x0095: ARITH  (r17 I:double) = (r17 I:double) * (r15 I:double) \l0x0097: CONST  (r26 I:?[long, double]) = \l  (4625759767262920704(0x4032000000000000, double:18.0) ?[long, double])\l \l0x0099: ARITH  (r26 I:double) = (r9 I:double) \- (r26 I:double) \l0x009b: ARITH  (r26 I:double) = (r26 I:double) * (r9 I:double) \l0x009d: CONST  (r28 I:?[long, double]) = \l  (4617315517961601024(0x4014000000000000, double:5.0) ?[long, double])\l \l0x009f: ARITH  (r26 I:double) = (r26 I:double) + (r28 I:double) \l0x00a1: CONST  (r30 I:?[long, double]) = \l  (4624070917402656768(0x402c000000000000, double:14.0) ?[long, double])\l \l0x00a3: CONST  (r32 I:?[long, double]) = \l  (4633359591634108416(0x404d000000000000, double:58.0) ?[long, double])\l \l0x00a5: ARITH  (r34 I:double) = (r9 I:double) * (r32 I:double) \l0x00a7: ARITH  (r30 I:double) = (r30 I:double) \- (r34 I:double) \l0x00a9: ARITH  (r30 I:double) = (r30 I:double) * (r6 I:double) \l0x00ab: ARITH  (r26 I:double) = (r26 I:double) + (r30 I:double) \l0x00ad: CONST  (r30 I:?[long, double]) = \l  (4582519849412036120(0x3f98618618618618, double:0.023809523809523808) ?[long, double])\l \l0x00b2: ARITH  (r30 I:double) = (r30 I:double) * (r15 I:double) \l0x00b4: CONST  (r34 I:?[long, double]) = \l  (4640502019168141312(0x4066600000000000, double:179.0) ?[long, double])\l \l0x00b9: ARITH  (r34 I:double) = (r34 I:double) \- (r9 I:double) \l0x00bb: ARITH  (r34 I:double) = (r34 I:double) * (r9 I:double) \l0x00bd: CONST  (r36 I:?[long, double]) = \l  (4647134273306886144(0x407df00000000000, double:479.0) ?[long, double])\l \l0x00c2: ARITH  (r34 I:double) = (r34 I:double) \- (r36 I:double) \l0x00c4: ARITH  (r34 I:double) = (r34 I:double) * (r9 I:double) \l0x00c6: CONST  (r36 I:?[long, double]) = \l  (4633781804099174400(0x404e800000000000, double:61.0) ?[long, double])\l \l0x00cb: ARITH  (r34 I:double) = (r34 I:double) + (r36 I:double) \l0x00cd: ARITH  (r30 I:double) = (r30 I:double) * (r34 I:double) \l0x00cf: ARITH  (r26 I:double) = (r26 I:double) + (r30 I:double) \l0x00d1: ARITH  (r17 I:double) = (r17 I:double) * (r26 I:double) \l0x00d3: ARITH  (r24 I:double) = (r24 I:double) + (r17 I:double) \l0x00d5: ARITH  (r19 I:double) = (r19 I:double) * (r24 I:double) \l0x00d7: CONST  (r17 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x00d9: ARITH  (r19 I:double) = (r19 I:double) + (r17 I:double) \l0x00db: ARITH  (r4 I:double) = (r4 I:double) * (r19 I:double) \l0x00dd: IPUT  (r4 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x00df: IGET  (r4 I:double) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.scaleFactor double \l0x00e1: IGET  (r8 I:double[]) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.en double[] \l0x00e3: MOVE  (r17 I:?[long, double]) = (r43 I:?[long, double]) \l0x00e5: MOVE  (r19 I:?[long, double]) = (r11 I:?[long, double]) \l0x00e7: MOVE  (r23 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x00e9: INVOKE  (r17 I:double) = \l  (r17 I:double)\l  (r19 I:double)\l  (r21 I:double)\l  (r23 I:double[])\l org.osgeo.proj4j.util.ProjectionMath.mlfn(double, double, double, double[]):double type: STATIC \l0x00ed: MOVE  (r38 I:?[long, double]) = (r4 I:?[long, double]) \l0x00ef: IGET  (r3 I:double) = (r0 I:org.osgeo.proj4j.proj.TransverseMercatorProjection) org.osgeo.proj4j.proj.TransverseMercatorProjection.ml0 double \l0x00f1: ARITH  (r17 I:double) = (r17 I:double) \- (r3 I:double) \l0x00f3: ARITH  (r11 I:double) = (r11 I:double) * (r13 I:double) \l0x00f5: ARITH  (r11 I:double) = (r11 I:double) * (r41 I:double) \l0x00f7: CONST  (r1 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x00f9: ARITH  (r11 I:double) = (r11 I:double) * (r1 I:double) \l0x00fb: CONST  (r1 I:?[long, double]) = \l  (4590669220166325589(0x3fb5555555555555, double:0.08333333333333333) ?[long, double])\l \l0x0100: ARITH  (r1 I:double) = (r1 I:double) * (r15 I:double) \l0x0102: ARITH  (r28 I:double) = (r28 I:double) \- (r9 I:double) \l0x0104: CONST  (r3 I:?[long, double]) = \l  (4621256167635550208(0x4022000000000000, double:9.0) ?[long, double])\l \l0x0106: CONST  (r13 I:?[long, double]) = \l  (4616189618054758400(0x4010000000000000, double:4.0) ?[long, double])\l \l0x0108: ARITH  (r13 I:double) = (r13 I:double) * (r6 I:double) \l0x010a: ARITH  (r13 I:double) = (r13 I:double) + (r3 I:double) \l0x010b: ARITH  (r13 I:double) = (r13 I:double) * (r6 I:double) \l0x010d: ARITH  (r28 I:double) = (r28 I:double) + (r13 I:double) \l0x010f: CONST  (r3 I:?[long, double]) = \l  (4584964660638322961(0x3fa1111111111111, double:0.03333333333333333) ?[long, double])\l \l0x0114: ARITH  (r3 I:double) = (r3 I:double) * (r15 I:double) \l0x0116: ARITH  (r13 I:double) = (r9 I:double) \- (r32 I:double) \l0x0118: ARITH  (r13 I:double) = (r13 I:double) * (r9 I:double) \l0x011a: ARITH  (r13 I:double) = (r13 I:double) + (r36 I:double) \l0x011c: CONST  (r19 I:?[long, double]) = \l  (4643457506423603200(0x4070e00000000000, double:270.0) ?[long, double])\l \l0x0121: CONST  (r21 I:?[long, double]) = \l  (4644513037586268160(0x4074a00000000000, double:330.0) ?[long, double])\l \l0x0126: ARITH  (r21 I:double) = (r21 I:double) * (r9 I:double) \l0x0128: ARITH  (r19 I:double) = (r19 I:double) \- (r21 I:double) \l0x012a: ARITH  (r6 I:double) = (r6 I:double) * (r19 I:double) \l0x012c: ARITH  (r13 I:double) = (r13 I:double) + (r6 I:double) \l0x012d: CONST  (r5 I:?[long, double]) = \l  (4580804192411133074(0x3f92492492492492, double:0.017857142857142856) ?[long, double])\l \l0x0132: ARITH  (r15 I:double) = (r15 I:double) * (r5 I:double) \l0x0134: CONST  (r5 I:?[long, double]) = \l  (4653806109864230912(0x4095a40000000000, double:1385.0) ?[long, double])\l \l0x0139: CONST  (r7 I:?[long, double]) = \l  (4647987494330040320(0x4080f80000000000, double:543.0) ?[long, double])\l \l0x013e: ARITH  (r7 I:double) = (r7 I:double) \- (r9 I:double) \l0x013f: ARITH  (r7 I:double) = (r7 I:double) * (r9 I:double) \l0x0141: CONST  (r19 I:?[long, double]) = \l  (4659059576421744640(0x40a84e0000000000, double:3111.0) ?[long, double])\l \l0x0146: ARITH  (r7 I:double) = (r7 I:double) \- (r19 I:double) \l0x0148: ARITH  (r9 I:double) = (r9 I:double) * (r7 I:double) \l0x014a: ARITH  (r9 I:double) = (r9 I:double) + (r5 I:double) \l0x014b: ARITH  (r15 I:double) = (r15 I:double) * (r9 I:double) \l0x014d: ARITH  (r13 I:double) = (r13 I:double) + (r15 I:double) \l0x014e: ARITH  (r3 I:double) = (r3 I:double) * (r13 I:double) \l0x0150: ARITH  (r28 I:double) = (r28 I:double) + (r3 I:double) \l0x0152: ARITH  (r1 I:double) = (r1 I:double) * (r28 I:double) \l0x0154: CONST  (r3 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0156: ARITH  (r1 I:double) = (r1 I:double) + (r3 I:double) \l0x0157: ARITH  (r11 I:double) = (r11 I:double) * (r1 I:double) \l0x0159: ARITH  (r17 I:double) = (r17 I:double) + (r11 I:double) \l0x015b: ARITH  (r4 I:double) = (r38 I:double) * (r17 I:double) \l0x015d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r45 I:?[OBJECT, ARRAY]) \l0x015f: IPUT  (r4 I:double), (r1 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_10 [shape=record,label="{10\:\ 0x0161|0x0161: RETURN  (r1 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.TransverseMercatorProjection.project((r40 'this' I:org.osgeo.proj4j.proj.TransverseMercatorProjection A[IMMUTABLE_TYPE, THIS]), (r41 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r43 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r45 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

