digraph "CFG fororg.osgeo.proj4j.proj.TransverseMercatorProjection.getRowFromNearestParallel(D)I" {
subgraph cluster_Region_1201913852 {
label = "R(2:0|(2:(1:10)|(1:(2:(1:6)|(1:8)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = (int) org.osgeo.proj4j.util.ProjectionMath.radToDeg(org.osgeo.proj4j.util.ProjectionMath.normalizeLatitude(r0))\l}"];
subgraph cluster_Region_225071534 {
label = "R(2:(1:10)|(1:(2:(1:6)|(1:8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_607847401 {
label = "IF [B:1:0x000b, B:3:0x000f] THEN: R(1:10) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r0 \< \-80) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|ADDED_TO_REGION\l|if (r0 \> 84) goto L_?\l}"];
subgraph cluster_Region_1157085264 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_1578428968 {
label = "R(1:(2:(1:6)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_41814204 {
label = "R(2:(1:6)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1238770610 {
label = "IF [B:5:0x0014] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r0 \> 80) goto L_0x0016\l}"];
subgraph cluster_Region_1573314172 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|RETURN\l|return 24\l}"];
}
}
subgraph cluster_Region_1956305076 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|RETURN\l|return ((r0 + 80) \/ 8) + 3\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000d}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0012}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return 0\l}"];
MethodNode[shape=record,label="{public static int org.osgeo.proj4j.proj.TransverseMercatorProjection.getRowFromNearestParallel((r0v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_7 -> Node_8;
}

