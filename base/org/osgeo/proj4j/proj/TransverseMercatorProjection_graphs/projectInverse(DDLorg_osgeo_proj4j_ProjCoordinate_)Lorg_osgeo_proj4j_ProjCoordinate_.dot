digraph "CFG fororg.osgeo.proj4j.proj.TransverseMercatorProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r41\lr5 = r46\lr9 = 0.0d\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r0.spherical == false) goto L_0x0049\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|double r1 = java.lang.Math.exp(r42 \/ r0.scaleFactor)\ldouble r1 = (r1 \- (FC1 \/ r1)) * FC2\ldouble r6 = java.lang.Math.cos(r0.projectionLatitude + (r44 \/ r0.scaleFactor))\lr5.f295y = org.osgeo.proj4j.util.ProjectionMath.asin(java.lang.Math.sqrt((FC1 \- (r6 * r6)) \/ ((r1 * r1) + FC1)))\l}"];
Node_3 [shape=record,label="{3\:\ 0x003a|if ((r44 \> 0.0d ? 1 : (r44 == 0.0d ? 0 : \-1)) \>= 0) goto L_0x0041\l}"];
Node_4 [shape=record,label="{4\:\ 0x003c|r5.f295y = \-r5.f295y\l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|r5.f294x = java.lang.Math.atan2(r1, r6)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0049|r5.f295y = org.osgeo.proj4j.util.ProjectionMath.inv_mlfn(r0.ml0 + (r44 \/ r0.scaleFactor), r0.f424es, r0.f438en)\lr13 = 1.5707963267948966d\l}"];
Node_7 [shape=record,label="{7\:\ 0x0065|if ((java.lang.Math.abs(r44) \> 1.5707963267948966d ? 1 : (java.lang.Math.abs(r44) == 1.5707963267948966d ? 0 : \-1)) \< 0) goto L_0x0076\l}"];
Node_8 [shape=record,label="{8\:\ 0x0067}"];
Node_9 [shape=record,label="{9\:\ 0x0069|if ((r44 \> 0.0d ? 1 : (r44 == 0.0d ? 0 : \-1)) \>= 0) goto L_0x0070\l}"];
Node_10 [shape=record,label="{10\:\ 0x006b|r13 = \-1.5707963267948966d\l}"];
Node_11 [shape=record,label="{11\:\ 0x0070|PHI: r13 \l  PHI: (r13v10 double) = (r13v2 double), (r13v11 double) binds: [B:9:0x0069, B:10:0x006b] A[DONT_GENERATE, DONT_INLINE]\l|r5.f295y = r13\lr5.f294x = 0.0d\l}"];
Node_12 [shape=record,label="{12\:\ 0x0076|double r3 = java.lang.Math.sin(r5.f295y)\ldouble r6 = java.lang.Math.cos(r5.f295y)\l}"];
Node_13 [shape=record,label="{13\:\ 0x008d|if ((java.lang.Math.abs(r6) \> 1.0E\-10d ? 1 : (java.lang.Math.abs(r6) == 1.0E\-10d ? 0 : \-1)) \<= 0) goto L_0x0091\l}"];
Node_14 [shape=record,label="{14\:\ 0x008f|double r9 = r3 \/ r6\l}"];
Node_15 [shape=record,label="{15\:\ 0x0091|PHI: r9 \l  PHI: (r9v1 double) = (r9v0 double), (r9v5 double) binds: [B:13:0x008d, B:14:0x008f] A[DONT_GENERATE, DONT_INLINE]\l|double r13 = (r0.esp * r6) * r6\ldouble r11 = FC1 \- ((r0.f424es * r3) * r3)\ldouble r1 = (r42 * java.lang.Math.sqrt(r11)) \/ r0.scaleFactor\ldouble r11 = r11 * r9\ldouble r9 = r9 * r9\ldouble r3 = r1 * r1\lr23 = r6\lr25 = r1\lr5.f295y = r5.f295y \- ((((r11 * r3) \/ (FC1 \- r0.f424es)) * FC2) * (FC1 \- ((FC4 * r3) * (((((3.0d \- (9.0d * r13)) * r9) + 5.0d) + ((FC1 \- (4.0d * r13)) * r13)) \- ((FC6 * r3) * ((((((90.0d \- (252.0d * r13)) + (45.0d * r9)) * r9) + 61.0d) + (46.0d * r13)) \- ((FC8 * r3) * ((((((1574.0d * r9) + 4095.0d) * r9) + 3633.0d) * r9) + 1385.0d))))))))\lr5.f294x = (r25 * (FC1 \- ((FC3 * r3) * ((((2.0d * r9) + FC1) + r13) \- ((FC5 * r3) * (((((((24.0d * r9) + 28.0d) + (8.0d * r13)) * r9) + 5.0d) + (r13 * 6.0d)) \- ((r3 * FC7) * ((r9 * ((((720.0d * r9) + 1320.0d) * r9) + 662.0d)) + 61.0d)))))))) \/ r23\l}"];
Node_16 [shape=record,label="{16\:\ 0x01ac|RETURN\l|return r5\l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.TransverseMercatorProjection.projectInverse((r41v0 'this' org.osgeo.proj4j.proj.TransverseMercatorProjection A[IMMUTABLE_TYPE, THIS]), (r42v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r44v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r46v0 org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

