digraph "CFG fororg.osgeo.proj4j.proj.TransverseMercatorProjection.getRowFromNearestParallel(D)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r0 I:double) org.osgeo.proj4j.util.ProjectionMath.normalizeLatitude(double):double type: STATIC \l0x0004: INVOKE  (r0 I:double) = (r0 I:double) org.osgeo.proj4j.util.ProjectionMath.radToDeg(double):double type: STATIC \l0x0008: CAST  (r0 I:int) = (int) (r0 I:double) \l0x0009: CONST  (r1 I:?[int, float, short, byte, char]) = (\-80 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:11:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: CONST  (r1 I:?[int, float, short, byte, char]) = (84 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: CONST  (r1 I:?[int, float, short, byte, char]) = (80 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:9:0x0019 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: CONST  (r0 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: RETURN  (r0 I:int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x001a: ARITH  (r0 I:int) = (r0 I:int) \/ (8 int) \l0x001c: ARITH  (r0 I:int) = (r0 I:int) + (3 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: RETURN  (r0 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public static int org.osgeo.proj4j.proj.TransverseMercatorProjection.getRowFromNearestParallel((r0 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_11[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

