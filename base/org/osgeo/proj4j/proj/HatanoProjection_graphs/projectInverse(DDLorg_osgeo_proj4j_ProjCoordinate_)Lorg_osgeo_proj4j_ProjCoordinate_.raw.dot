digraph "CFG fororg.osgeo.proj4j.proj.HatanoProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x0002: CONST  (r3 I:?[long, double]) = (0 ?[long, double]) \l0x0004: CMP_G  (r5 I:int) = (r21 I:double), (r3 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r6 I:?[long, double]) = \l  (4602840905088415566(0x3fe0936a916eb74e, double:0.5179951515653813) ?[long, double])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: CONST  (r6 I:?[long, double]) = \l  (4603297049678929509(0x3fe2324701b75e65, double:0.5686373742600607) ?[long, double])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: ARITH  (r0 I:double) = (r21 I:double) * (r6 I:double) \l0x0015: INVOKE  (r6 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0019: CONST  (r8 I:?[long, double]) = \l  (\-4613618979930100456(0xbff921fb54442d18, double:\-1.5707963267948966) ?[long, double])\l \l0x001e: CONST  (r10 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x0023: CONST  (r12 I:?[long, double]) = \l  (4607182423303617035(0x3ff000010c6f7a0b, double:1.000001) ?[long, double])\l \l0x0028: CONST  (r14 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x002a: CMP_L  (r6 I:int) = (r6 I:double), (r14 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x0046 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: INVOKE  (r6 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0032: CMP_L  (r6 I:int) = (r6 I:double), (r12 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: IF  (r6 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:12:0x003e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: CMP_L  (r0 I:int) = (r0 I:double), (r3 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x003c \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: MOVE  (r0 I:?[long, double]) = (r10 I:?[long, double]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: MOVE  (r0 I:?[long, double]) = (r8 I:?[long, double]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|0x003e: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x0040: CONST_STR  (r1 I:java.lang.String) =  \"I\" \l0x0042: INVOKE  \l  (r0 I:org.osgeo.proj4j.ProjectionException)\l  (r1 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|0x0045: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.asin(double):double type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: CONST  (r6 I:?[long, double]) = \l  (4607977171675435731(0x3ff2d2d2d2d2d2d3, double:1.1764705882352942) ?[long, double])\l \l0x004f: ARITH  (r6 I:double) = (r6 I:double) * (r19 I:double) \l0x0051: INVOKE  (r16 I:double) = (r0 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0055: ARITH  (r6 I:double) = (r6 I:double) \/ (r16 I:double) \l0x0057: IPUT  (r6 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0059: ARITH  (r0 I:double) = (r0 I:double) + (r0 I:double) \l0x005a: INVOKE  (r6 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x005e: ARITH  (r0 I:double) = (r0 I:double) + (r6 I:double) \l}"];
Node_16 [shape=record,label="{16\:\ 0x005f|0x005f: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:18:0x0067 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0061|0x0061: CONST  (r5 I:?[long, double]) = \l  (4601061748243157080(0x3fda414855abd058, double:0.4102345310814193) ?[long, double])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0067|0x0067: CONST  (r5 I:?[long, double]) = \l  (4600403583710010400(0x3fd7eaaf76781c20, double:0.3736990601468637) ?[long, double])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x006c|0x006c: ARITH  (r0 I:double) = (r0 I:double) * (r5 I:double) \l0x006e: IPUT  (r0 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0070: IGET  (r0 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0072: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0076: CMP_L  (r0 I:int) = (r0 I:double), (r14 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0078|0x0078: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:30:0x0097 \l}"];
Node_21 [shape=record,label="{21\:\ 0x007a|0x007a: IGET  (r0 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x007c: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0080: CMP_L  (r0 I:int) = (r0 I:double), (r12 I:double) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0082|0x0082: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:28:0x008f \l}"];
Node_23 [shape=record,label="{23\:\ 0x0084|0x0084: IGET  (r0 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0086: CMP_L  (r0 I:int) = (r0 I:double), (r3 I:double) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0088|0x0088: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:26:0x008b \l}"];
Node_26 [shape=record,label="{26\:\ 0x008b|0x008b: MOVE  (r10 I:?[long, double]) = (r8 I:?[long, double]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x008c|0x008c: IPUT  (r10 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_28 [shape=record,label="{28\:\ 0x008f|0x008f: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x0091: CONST_STR  (r1 I:java.lang.String) =  \"I\" \l0x0093: INVOKE  \l  (r0 I:org.osgeo.proj4j.ProjectionException)\l  (r1 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x0096|0x0096: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0097|0x0097: IGET  (r0 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0099: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.asin(double):double type: STATIC \l0x009d: IPUT  (r0 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_31 [shape=record,label="{31\:\ 0x009f|0x009f: RETURN  (r2 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.HatanoProjection.projectInverse((r18 'this' I:org.osgeo.proj4j.proj.HatanoProjection A[IMMUTABLE_TYPE, THIS]), (r19 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_15;
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_30;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_28;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_24 -> Node_27[style=dashed];
Node_26 -> Node_27;
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_30 -> Node_31;
}

