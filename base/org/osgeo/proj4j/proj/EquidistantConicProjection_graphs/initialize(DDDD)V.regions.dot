digraph "CFG fororg.osgeo.proj4j.proj.EquidistantConicProjection.initialize(DDDD)V" {
subgraph cluster_Region_1976143501 {
label = "R(5:0|4|8|(1:10)(1:11)|12)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r25\lsuper.initialize()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|PHI: r7 \l  PHI: (r7v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r0.northPole = r28 \> 0.0d\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|PHI: r7 \l  PHI: (r7v4 double) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r0.projectionLatitude = r0.northPole ? 1.5707963267948966d : \-1.5707963267948966d\ldouble r19 = java.lang.Math.tan(0.7853981633974483d \- (r30 * 0.5d)) \/ java.lang.Math.pow((1.0d \- (r0.eccentricity * java.lang.Math.sin(r30))) \/ ((r0.eccentricity * java.lang.Math.sin(r30)) + 1.0d), r0.eccentricity * 0.5d)\ldouble double r11 = java.lang.Math.cos(r30) \/ java.lang.Math.sqrt(1.0d \- (r0.eccentricity2 * java.lang.Math.pow(java.lang.Math.sin(r30), 2.0d)))\ldouble r21 = java.lang.Math.tan(0.7853981633974483d \- (r32 * 0.5d)) \/ java.lang.Math.pow((1.0d \- (r0.eccentricity * java.lang.Math.sin(r32))) \/ ((r0.eccentricity * java.lang.Math.sin(r32)) + 1.0d), r0.eccentricity * 0.5d)\ldouble r23 = r11\ldouble double r9 = java.lang.Math.cos(r32) \/ java.lang.Math.sqrt(1.0d \- (r0.eccentricity2 * java.lang.Math.pow(java.lang.Math.sin(r32), 2.0d)))\ldouble double r7 = java.lang.Math.tan(0.7853981633974483d \- (r28 * 0.5d)) \/ java.lang.Math.pow((1.0d \- (r0.eccentricity * java.lang.Math.sin(r28))) \/ ((r0.eccentricity * java.lang.Math.sin(r28)) + 1.0d), r0.eccentricity * 0.5d)\l}"];
subgraph cluster_IfRegion_590913142 {
label = "IF [B:9:0x00e2] THEN: R(1:10) ELSE: R(1:11)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x00e2|if (r30 != r32) goto L_0x00e4\l}"];
subgraph cluster_Region_1273680534 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x00e4|r0.f365n = (java.lang.Math.log(r23) \- java.lang.Math.log(r9)) \/ (java.lang.Math.log(r19) \- java.lang.Math.log(r21))\l}"];
}
subgraph cluster_Region_1971753889 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x00fa|r0.f365n = java.lang.Math.sin(r30)\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0100|r0.f364f = r23 \/ (r0.f365n * java.lang.Math.pow(r19, r0.f365n))\lr0.projectionLongitude = r26\lr0.rho0 = r0.radius * r0.f364f * java.lang.Math.pow(r7, r0.f365n)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0009}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000b}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000d}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0012}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0014}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001a}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0124}"];
MethodNode[shape=record,label="{private void org.osgeo.proj4j.proj.EquidistantConicProjection.initialize((r25v0 'this' org.osgeo.proj4j.proj.EquidistantConicProjection A[IMMUTABLE_TYPE, THIS]), (r26v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
}

