digraph "CFG fororg.osgeo.proj4j.proj.EquidistantConicProjection.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r11.eccentricity = 0.822719d\lr11.eccentricity2 = r11.eccentricity * r11.eccentricity\lr11.eccentricity4 = r11.eccentricity2 * r11.eccentricity2\lr11.eccentricity6 = r11.eccentricity2 * r11.eccentricity4\lr11.radius = 1.0d\lr11.minLatitude = org.osgeo.proj4j.util.ProjectionMath.degToRad(10.0d)\lr11.maxLatitude = org.osgeo.proj4j.util.ProjectionMath.degToRad(70.0d)\lr11.minLongitude = org.osgeo.proj4j.util.ProjectionMath.degToRad(\-90.0d)\lr11.maxLongitude = org.osgeo.proj4j.util.ProjectionMath.degToRad(90.0d)\lr11.standardLatitude1 = java.lang.Math.toDegrees(60.0d)\lr11.standardLatitude2 = java.lang.Math.toDegrees(20.0d)\lr2 = r11\linitialize(org.osgeo.proj4j.util.ProjectionMath.degToRad(0.0d), org.osgeo.proj4j.util.ProjectionMath.degToRad(37.5d), r11.standardLatitude1, r11.standardLatitude2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0076|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.proj.EquidistantConicProjection.\<init\>((r11v0 'this' org.osgeo.proj4j.proj.EquidistantConicProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

