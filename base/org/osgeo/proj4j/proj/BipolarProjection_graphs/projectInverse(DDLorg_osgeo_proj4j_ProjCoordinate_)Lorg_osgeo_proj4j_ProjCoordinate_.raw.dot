digraph "CFG fororg.osgeo.proj4j.proj.BipolarProjection.projectInverse(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[long, double]) = (r29 I:?[long, double]) \l0x0002: MOVE  (r2 I:?[long, double]) = (r31 I:?[long, double]) \l0x0004: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r33 I:?[OBJECT, ARRAY]) \l0x0008: IGET  (r6 I:boolean) = (r4 I:org.osgeo.proj4j.proj.BipolarProjection) org.osgeo.proj4j.proj.BipolarProjection.noskew boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: NEG  (r6 I:double) = (r0 I:double) \l0x000d: CONST  (r8 I:?[long, double]) = \l  (4604452473889033901(0x3fe64d212b530ead, double:0.6969152303867837) ?[long, double])\l \l0x0012: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x0014: CONST  (r10 I:?[long, double]) = \l  (4604634764135910067(0x3fe6f2ebecbc4ab3, double:0.7171535133114361) ?[long, double])\l \l0x0019: ARITH  (r12 I:double) = (r2 I:double) * (r10 I:double) \l0x001b: ARITH  (r6 I:double) = (r6 I:double) + (r12 I:double) \l0x001c: IPUT  (r6 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x001e: NEG  (r6 I:double) = (r2 I:double) \l0x001f: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x0021: ARITH  (r8 I:double) = (r0 I:double) * (r10 I:double) \l0x0023: ARITH  (r6 I:double) = (r6 I:double) \- (r8 I:double) \l0x0024: IPUT  (r6 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x0028: CMP_G  (r8 I:int) = (r0 I:double), (r6 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:6:0x002e \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: CONST  (r9 I:?[long, double]) = \l  (4604544271217802189(0x3fe6a09e667f3bcd, double:0.7071067811865476) ?[long, double])\l \l0x0034: CONST  (r11 I:?[long, double]) = \l  (4608115074719694480(0x3ff3503ee0ca3e90, double:1.2070912152156872) ?[long, double])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004e \l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|0x003b: ARITH  (r11 I:double) = (r11 I:double) \- (r2 I:double) \l0x003c: IPUT  (r11 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x003e: CONST  (r9 I:?[long, double]) = \l  (\-4623539129776731147(0xbfd5e3a8748a0bf5, double:\-0.3420201433256687) ?[long, double])\l \l0x0043: CONST  (r11 I:?[long, double]) = \l  (4606639218218904860(0x3fee11f642522d1c, double:0.9396926207859084) ?[long, double])\l \l0x0048: CONST  (r13 I:?[long, double]) = \l  (4605529601670638461(0x3fea20c5861feb7d, double:0.8165004367468637) ?[long, double])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|0x004e: IGET  (r13 I:double) = (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0050: ARITH  (r13 I:double) = (r13 I:double) + (r11 I:double) \l0x0051: IPUT  (r13 I:double), (r5 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0053: CONST  (r13 I:?[long, double]) = \l  (4610887162893392697(0x3ffd2971f3ab5b39, double:1.8226184385618593) ?[long, double])\l \l0x0058: MOVE  (r11 I:?[long, double]) = (r9 I:?[long, double]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0059|0x0059: INVOKE  (r15 I:double) = (r29 I:double), (r31 I:double) org.osgeo.proj4j.util.ProjectionMath.distance(double, double):double type: STATIC \l0x005d: INVOKE  (r0 I:double) = (r29 I:double), (r31 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x0061: INVOKE  (r2 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0065: CONST  (r17 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l0x0067: MOVE  (r18 I:?[long, double]) = (r6 I:?[long, double]) \l0x0069: MOVE  (r6 I:?[long, double]) = (r15 I:?[long, double]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x006a|0x006a: IF  (r17 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:24:0x00e2 \l}"];
Node_13 [shape=record,label="{13\:\ 0x006c|0x006c: CONST  (r18 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x006e: CONST  (r20 I:?[long, double]) = \l  (4611223261971944720(0x3ffe5b201ddb1510, double:1.8972474256746104) ?[long, double])\l \l0x0073: ARITH  (r4 I:double) = (r6 I:double) \/ (r20 I:double) \l0x0075: MOVE  (r24 I:?[long, double]) = (r11 I:?[long, double]) \l0x0077: CONST  (r11 I:?[long, double]) = \l  (4609821058937810859(0x3ff95fd4481a6fab, double:1.585895806935677) ?[long, double])\l \l0x007c: INVOKE  (r4 I:double) = (r4 I:double), (r11 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0080: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.atan(double):double type: STATIC \l0x0084: ARITH  (r18 I:double) = (r18 I:double) * (r4 I:double) \l0x0086: CONST  (r4 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x0088: ARITH  (r11 I:double) = (r18 I:double) * (r4 I:double) \l0x008a: INVOKE  (r11 I:double) = (r11 I:double) java.lang.Math.tan(double):double type: STATIC \l0x008e: CONST  (r4 I:?[long, double]) = \l  (4603854785135493226(0x3fe42d88e97bc06a, double:0.6305584488127469) ?[long, double])\l \l0x0093: INVOKE  (r11 I:double) = (r11 I:double), (r4 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0097: CONST  (r20 I:?[long, double]) = \l  (4610853493908324221(0x3ffd0ad2c7c63f7d, double:1.8151424220741028) ?[long, double])\l \l0x009c: ARITH  (r20 I:double) = (r20 I:double) \- (r18 I:double) \l0x009e: CONST  (r22 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x00a0: ARITH  (r20 I:double) = (r20 I:double) * (r22 I:double) \l0x00a2: MOVE  (r26 I:?[long, double]) = (r9 I:?[long, double]) \l0x00a4: INVOKE  (r9 I:double) = (r20 I:double) java.lang.Math.tan(double):double type: STATIC \l0x00a8: INVOKE  (r9 I:double) = (r9 I:double), (r4 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x00ac: ARITH  (r11 I:double) = (r11 I:double) + (r9 I:double) \l0x00ad: CONST  (r4 I:?[long, double]) = \l  (4608409495597325239(0x3ff45c05149d9bb7, double:1.27246578267089) ?[long, double])\l \l0x00b2: ARITH  (r11 I:double) = (r11 I:double) \/ (r4 I:double) \l0x00b3: INVOKE  (r4 I:double) = (r11 I:double) java.lang.Math.acos(double):double type: STATIC \l0x00b7: CMP_G  (r9 I:int) = (r2 I:double), (r4 I:double) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00b9|0x00b9: IF  (r9 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:19:0x00c9 \l}"];
Node_15 [shape=record,label="{15\:\ 0x00bb|0x00bb: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x00bf \l}"];
Node_16 [shape=record,label="{16\:\ 0x00bd|0x00bd: MOVE  (r9 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x00bf|0x00bf: NEG  (r9 I:double) = (r0 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x00c0|0x00c0: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c1: ARITH  (r4 I:double) = (r4 I:double) + (r9 I:double) \l0x00c2: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.cos(double):double type: STATIC \l0x00c6: ARITH  (r4 I:double) = (r4 I:double) * (r15 I:double) \l}"];
Node_19 [shape=record,label="{19\:\ 0x00c9|0x00c9: MOVE  (r4 I:?[long, double]) = (r6 I:?[long, double]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00ca|0x00ca: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00cb: ARITH  (r6 I:double) = (r6 I:double) \- (r4 I:double) \l0x00cc: INVOKE  (r6 I:double) = (r6 I:double) java.lang.Math.abs(double):double type: STATIC \l0x00d0: CONST  (r9 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x00d5: CMP_G  (r6 I:int) = (r6 I:double), (r9 I:double) \l}"];
Node_21 [shape=record,label="{21\:\ 0x00d7|0x00d7: IF  (r6 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:23:0x00da \l}"];
Node_23 [shape=record,label="{23\:\ 0x00da|0x00da: ARITH  (r17 I:int) = (r17 I:int) + (\-1 int) \l0x00dc: MOVE  (r6 I:?[long, double]) = (r4 I:?[long, double]) \l0x00dd: MOVE  (r11 I:?[long, double]) = (r24 I:?[long, double]) \l0x00df: MOVE  (r9 I:?[long, double]) = (r26 I:?[long, double]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00e2|0x00e2: MOVE  (r26 I:?[long, double]) = (r9 I:?[long, double]) \l0x00e4: MOVE  (r24 I:?[long, double]) = (r11 I:?[long, double]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00e6|0x00e6: IF  (r17 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0139 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00e8|0x00e8: CONST  (r2 I:?[long, double]) = \l  (4603854785135493226(0x3fe42d88e97bc06a, double:0.6305584488127469) ?[long, double])\l \l0x00ed: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x00ee: ARITH  (r13 I:double) = (r13 I:double) \- (r0 I:double) \l0x00ef: INVOKE  (r0 I:double) = (r18 I:double) java.lang.Math.cos(double):double type: STATIC \l0x00f3: ARITH  (r9 I:double) = (r26 I:double) * (r0 I:double) \l0x00f5: INVOKE  (r0 I:double) = (r18 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00f9: ARITH  (r11 I:double) = (r24 I:double) * (r0 I:double) \l0x00fb: INVOKE  (r0 I:double) = (r13 I:double) java.lang.Math.cos(double):double type: STATIC \l0x00ff: ARITH  (r11 I:double) = (r11 I:double) * (r0 I:double) \l0x0101: ARITH  (r9 I:double) = (r9 I:double) + (r11 I:double) \l0x0102: INVOKE  (r0 I:double) = (r9 I:double) java.lang.Math.asin(double):double type: STATIC \l0x0106: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r33 I:?[OBJECT, ARRAY]) \l0x0108: IPUT  (r0 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x010a: INVOKE  (r0 I:double) = (r13 I:double) java.lang.Math.sin(double):double type: STATIC \l0x010e: INVOKE  (r3 I:double) = (r18 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0112: ARITH  (r11 I:double) = (r24 I:double) \/ (r3 I:double) \l0x0114: INVOKE  (r3 I:double) = (r13 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0118: ARITH  (r9 I:double) = (r26 I:double) * (r3 I:double) \l0x011a: ARITH  (r11 I:double) = (r11 I:double) \- (r9 I:double) \l0x011b: INVOKE  (r0 I:double) = (r0 I:double), (r11 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x011f: IPUT  (r0 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_27 [shape=record,label="{27\:\ 0x0121|0x0121: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x012e \l}"];
Node_28 [shape=record,label="{28\:\ 0x0123|0x0123: IGET  (r0 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0125: CONST  (r3 I:?[long, double]) = \l  (4611325109758459450(0x3ffeb7c166fdfe3a, double:1.9198621771937625) ?[long, double])\l \l0x012a: ARITH  (r0 I:double) = (r0 I:double) \- (r3 I:double) \l0x012b: IPUT  (r0 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_29 [shape=record,label="{29\:\ 0x012e|0x012e: CONST  (r0 I:?[long, double]) = \l  (\-4623414296769612100(0xbfd655316795b6bc, double:\-0.3489497672625068) ?[long, double])\l \l0x0133: IGET  (r3 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0135: ARITH  (r0 I:double) = (r0 I:double) \- (r3 I:double) \l0x0136: IPUT  (r0 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_30 [shape=record,label="{30\:\ 0x0138|0x0138: RETURN  (r2 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0139|0x0139: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x013b: CONST_STR  (r1 I:java.lang.String) =  \"I\" \l0x013d: INVOKE  \l  (r0 I:org.osgeo.proj4j.ProjectionException)\l  (r1 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x0140|0x0140: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.BipolarProjection.projectInverse((r28 'this' I:org.osgeo.proj4j.proj.BipolarProjection A[IMMUTABLE_TYPE, THIS]), (r29 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_25[style=dashed];
Node_23 -> Node_12;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_31 -> Node_32;
}

