digraph "CFG fororg.osgeo.proj4j.proj.BipolarProjection.project(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0002: INVOKE  (r3 I:double) = (r30 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0006: INVOKE  (r5 I:double) = (r30 I:double) java.lang.Math.sin(double):double type: STATIC \l0x000a: CONST  (r7 I:?[long, double]) = \l  (\-4623414296769612100(0xbfd655316795b6bc, double:\-0.3489497672625068) ?[long, double])\l \l0x000f: ARITH  (r7 I:double) = (r7 I:double) \- (r28 I:double) \l0x0011: INVOKE  (r9 I:double) = (r7 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0015: INVOKE  (r7 I:double) = (r7 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0019: INVOKE  (r11 I:double) = (r30 I:double) java.lang.Math.abs(double):double type: STATIC \l0x001d: CONST  (r13 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x0022: ARITH  (r11 I:double) = (r11 I:double) \- (r13 I:double) \l0x0023: INVOKE  (r11 I:double) = (r11 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0027: CONST  (r15 I:?[long, double]) = \l  (4604544271217802189(0x3fe6a09e667f3bcd, double:0.7071067811865476) ?[long, double])\l \l0x002c: CONST  (r17 I:?[long, double]) = (0 ?[long, double]) \l0x002e: CONST  (r19 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x0033: CMP_G  (r11 I:int) = (r11 I:double), (r19 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0035|0x0035: IF  (r11 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:7:0x0049 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0037|0x0037: CMP_G  (r7 I:int) = (r30 I:double), (r17 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0039|0x0039: IF  (r7 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x0041 \l}"];
Node_4 [shape=record,label="{4\:\ 0x003b|0x003b: CONST  (r7 I:?[long, double]) = \l  (4614256656552045848(0x400921fb54442d18, double:3.141592653589793) ?[long, double])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|0x0041: MOVE  (r7 I:?[long, double]) = (r17 I:?[long, double]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0043|0x0043: CONST  (r11 I:?[long, double]) = \l  (9218868437227405311(0x7fefffffffffffff, double:1.7976931348623157E308) ?[long, double])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0049|0x0049: ARITH  (r11 I:double) = (r5 I:double) \/ (r3 I:double) \l0x004b: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004d: ARITH  (r19 I:double) = (r11 I:double) \- (r9 I:double) \l0x004f: ARITH  (r13 I:double) = (r19 I:double) * (r15 I:double) \l0x0051: INVOKE  (r7 I:double) = (r7 I:double), (r13 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0055|0x0055: CONST  (r13 I:?[long, double]) = \l  (4610887162893392697(0x3ffd2971f3ab5b39, double:1.8226184385618593) ?[long, double])\l \l0x005a: CMP_L  (r19 I:int) = (r7 I:double), (r13 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x005c|0x005c: IF  (r19 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x0061 \l}"];
Node_10 [shape=record,label="{10\:\ 0x005e|0x005e: CONST  (r19 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0061|0x0061: CONST  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0063|0x0063: CONST  (r21 I:?[long, double]) = \l  (\-4616189618054758400(0xbff0000000000000, double:\-1.0) ?[long, double])\l \l0x0065: CONST  (r23 I:?[long, double]) = \l  (4607182418804521008(0x3ff000000044b830, double:1.000000001) ?[long, double])\l \l0x006a: CONST  (r25 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x006c|0x006c: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00d4 \l}"];
Node_14 [shape=record,label="{14\:\ 0x006e|0x006e: CONST  (r9 I:?[long, double]) = \l  (4611325109758459450(0x3ffeb7c166fdfe3a, double:1.9198621771937625) ?[long, double])\l \l0x0073: ARITH  (r0 I:double) = (r28 I:double) + (r9 I:double) \l0x0075: INVOKE  (r9 I:double) = (r0 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0079: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x007d: CONST  (r13 I:?[long, double]) = \l  (\-4623539129776731147(0xbfd5e3a8748a0bf5, double:\-0.3420201433256687) ?[long, double])\l \l0x0082: ARITH  (r5 I:double) = (r5 I:double) * (r13 I:double) \l0x0084: CONST  (r15 I:?[long, double]) = \l  (4606639218218904860(0x3fee11f642522d1c, double:0.9396926207859084) ?[long, double])\l \l0x0089: ARITH  (r3 I:double) = (r3 I:double) * (r15 I:double) \l0x008b: ARITH  (r3 I:double) = (r3 I:double) * (r9 I:double) \l0x008d: ARITH  (r5 I:double) = (r5 I:double) + (r3 I:double) \l0x008e: INVOKE  (r3 I:double) = (r5 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0092: CMP_L  (r3 I:int) = (r3 I:double), (r25 I:double) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0094|0x0094: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:24:0x00b0 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0096|0x0096: INVOKE  (r3 I:double) = (r5 I:double) java.lang.Math.abs(double):double type: STATIC \l0x009a: CMP_L  (r3 I:int) = (r3 I:double), (r23 I:double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x009c|0x009c: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:22:0x00a8 \l}"];
Node_18 [shape=record,label="{18\:\ 0x009e|0x009e: CMP_G  (r3 I:int) = (r5 I:double), (r17 I:double) \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a0|0x00a0: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:21:0x00a5 \l}"];
Node_20 [shape=record,label="{20\:\ 0x00a2|0x00a2: MOVE  (r3 I:?[long, double]) = (r21 I:?[long, double]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a5|0x00a5: MOVE  (r3 I:?[long, double]) = (r25 I:?[long, double]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a8|0x00a8: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x00aa: CONST_STR  (r1 I:java.lang.String) =  \"F\" \l0x00ac: INVOKE  \l  (r0 I:org.osgeo.proj4j.ProjectionException)\l  (r1 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_23 [shape=record,label="{23\:\ 0x00af|0x00af: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00b0|0x00b0: INVOKE  (r3 I:double) = (r5 I:double) java.lang.Math.acos(double):double type: STATIC \l}"];
Node_25 [shape=record,label="{25\:\ 0x00b4|0x00b4: CONST  (r5 I:?[long, double]) = \l  (9218868437227405311(0x7fefffffffffffff, double:1.7976931348623157E308) ?[long, double])\l \l0x00b9: CMP_L  (r5 I:int) = (r11 I:double), (r5 I:double) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00bb|0x00bb: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x00c7 \l}"];
Node_27 [shape=record,label="{27\:\ 0x00bd|0x00bd: ARITH  (r11 I:double) = (r11 I:double) * (r15 I:double) \l0x00bf: ARITH  (r9 I:double) = (r9 I:double) * (r13 I:double) \l0x00c1: ARITH  (r11 I:double) = (r11 I:double) \- (r9 I:double) \l0x00c2: INVOKE  (r0 I:double) = (r0 I:double), (r11 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x00c6: MOVE  (r7 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00c7|0x00c7: CONST  (r13 I:?[long, double]) = \l  (4605529601670638461(0x3fea20c5861feb7d, double:0.8165004367468637) ?[long, double])\l \l0x00cc: CONST  (r0 I:?[long, double]) = \l  (4608115074719694480(0x3ff3503ee0ca3e90, double:1.2070912152156872) ?[long, double])\l \l0x00d1: IPUT  (r0 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_29 [shape=record,label="{29\:\ 0x00d4|0x00d4: ARITH  (r3 I:double) = (r3 I:double) * (r9 I:double) \l0x00d6: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d7: ARITH  (r5 I:double) = (r5 I:double) + (r3 I:double) \l0x00d8: ARITH  (r5 I:double) = (r5 I:double) * (r15 I:double) \l0x00da: INVOKE  (r0 I:double) = (r5 I:double) java.lang.Math.abs(double):double type: STATIC \l0x00de: CMP_L  (r0 I:int) = (r0 I:double), (r25 I:double) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00e0|0x00e0: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:39:0x00fc \l}"];
Node_31 [shape=record,label="{31\:\ 0x00e2|0x00e2: INVOKE  (r0 I:double) = (r5 I:double) java.lang.Math.abs(double):double type: STATIC \l0x00e6: CMP_L  (r0 I:int) = (r0 I:double), (r23 I:double) \l}"];
Node_32 [shape=record,label="{32\:\ 0x00e8|0x00e8: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:37:0x00f4 \l}"];
Node_33 [shape=record,label="{33\:\ 0x00ea|0x00ea: CMP_G  (r0 I:int) = (r5 I:double), (r17 I:double) \l}"];
Node_34 [shape=record,label="{34\:\ 0x00ec|0x00ec: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:36:0x00f1 \l}"];
Node_35 [shape=record,label="{35\:\ 0x00ee|0x00ee: MOVE  (r0 I:?[long, double]) = (r21 I:?[long, double]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x00f1|0x00f1: MOVE  (r0 I:?[long, double]) = (r25 I:?[long, double]) \l}"];
Node_37 [shape=record,label="{37\:\ 0x00f4|0x00f4: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x00f6: CONST_STR  (r1 I:java.lang.String) =  \"F\" \l0x00f8: INVOKE  \l  (r0 I:org.osgeo.proj4j.ProjectionException)\l  (r1 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_38 [shape=record,label="{38\:\ 0x00fb|0x00fb: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_39 [shape=record,label="{39\:\ 0x00fc|0x00fc: INVOKE  (r0 I:double) = (r5 I:double) java.lang.Math.acos(double):double type: STATIC \l}"];
Node_40 [shape=record,label="{40\:\ 0x0100|0x0100: MOVE  (r3 I:?[long, double]) = (r0 I:?[long, double]) \l0x0101: CONST  (r0 I:?[long, double]) = \l  (\-4615256962135081328(0xbff3503ee0ca3e90, double:\-1.2070912152156872) ?[long, double])\l \l0x0106: IPUT  (r0 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_41 [shape=record,label="{41\:\ 0x0108|0x0108: CMP_G  (r0 I:int) = (r3 I:double), (r17 I:double) \l}"];
Node_42 [shape=record,label="{42\:\ 0x010a|0x010a: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:70:0x01c0 \l}"];
Node_43 [shape=record,label="{43\:\ 0x010c|0x010c: CONST  (r0 I:?[long, double]) = \l  (4611223261971944720(0x3ffe5b201ddb1510, double:1.8972474256746104) ?[long, double])\l \l0x0111: CONST  (r5 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x0113: ARITH  (r9 I:double) = (r3 I:double) * (r5 I:double) \l0x0115: INVOKE  (r9 I:double) = (r9 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0119: CONST  (r11 I:?[long, double]) = \l  (4603854785135493226(0x3fe42d88e97bc06a, double:0.6305584488127469) ?[long, double])\l \l0x011e: INVOKE  (r9 I:double) = (r9 I:double), (r11 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0122: ARITH  (r0 I:double) = (r0 I:double) * (r9 I:double) \l0x0124: CONST  (r15 I:?[long, double]) = \l  (4610853493908324221(0x3ffd0ad2c7c63f7d, double:1.8151424220741028) ?[long, double])\l \l0x0129: ARITH  (r15 I:double) = (r15 I:double) \- (r3 I:double) \l0x012a: ARITH  (r3 I:double) = (r15 I:double) * (r5 I:double) \l0x012c: CMP_G  (r5 I:int) = (r3 I:double), (r17 I:double) \l}"];
Node_44 [shape=record,label="{44\:\ 0x012e|0x012e: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:68:0x01b6 \l}"];
Node_45 [shape=record,label="{45\:\ 0x0130|0x0130: INVOKE  (r3 I:double) = (r3 I:double), (r11 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0134: ARITH  (r9 I:double) = (r9 I:double) + (r3 I:double) \l0x0135: CONST  (r3 I:?[long, double]) = \l  (4608409495597325239(0x3ff45c05149d9bb7, double:1.27246578267089) ?[long, double])\l \l0x013a: ARITH  (r9 I:double) = (r9 I:double) \/ (r3 I:double) \l0x013b: INVOKE  (r3 I:double) = (r9 I:double) java.lang.Math.abs(double):double type: STATIC \l0x013f: CMP_L  (r3 I:int) = (r3 I:double), (r25 I:double) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0141|0x0141: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:54:0x015a \l}"];
Node_47 [shape=record,label="{47\:\ 0x0143|0x0143: INVOKE  (r3 I:double) = (r9 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0147: CMP_L  (r3 I:int) = (r3 I:double), (r23 I:double) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0149|0x0149: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:52:0x0152 \l}"];
Node_49 [shape=record,label="{49\:\ 0x014b|0x014b: CMP_G  (r3 I:int) = (r9 I:double), (r17 I:double) \l}"];
Node_50 [shape=record,label="{50\:\ 0x014d|0x014d: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:55:0x015e \l}"];
Node_51 [shape=record,label="{51\:\ 0x014f|0x014f: MOVE  (r25 I:?[long, double]) = (r21 I:?[long, double]) \l}"];
Node_52 [shape=record,label="{52\:\ 0x0152|0x0152: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x0154: CONST_STR  (r1 I:java.lang.String) =  \"F\" \l0x0156: INVOKE  \l  (r0 I:org.osgeo.proj4j.ProjectionException)\l  (r1 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_53 [shape=record,label="{53\:\ 0x0159|0x0159: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_54 [shape=record,label="{54\:\ 0x015a|0x015a: INVOKE  (r25 I:double) = (r9 I:double) java.lang.Math.acos(double):double type: STATIC \l}"];
Node_55 [shape=record,label="{55\:\ 0x015e|0x015e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x015f: ARITH  (r13 I:double) = (r13 I:double) \- (r7 I:double) \l0x0160: ARITH  (r13 I:double) = (r13 I:double) * (r11 I:double) \l0x0162: INVOKE  (r3 I:double) = (r13 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0166: CMP_G  (r3 I:int) = (r3 I:double), (r25 I:double) \l}"];
Node_56 [shape=record,label="{56\:\ 0x0168|0x0168: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:61:0x0177 \l}"];
Node_57 [shape=record,label="{57\:\ 0x016a|0x016a: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x016e \l}"];
Node_58 [shape=record,label="{58\:\ 0x016c|0x016c: MOVE  (r3 I:?[long, double]) = (r13 I:?[long, double]) \l}"];
Node_59 [shape=record,label="{59\:\ 0x016e|0x016e: NEG  (r3 I:double) = (r13 I:double) \l}"];
Node_60 [shape=record,label="{60\:\ 0x016f|0x016f: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0170: ARITH  (r25 I:double) = (r25 I:double) + (r3 I:double) \l0x0172: INVOKE  (r3 I:double) = (r25 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0176: ARITH  (r0 I:double) = (r0 I:double) \/ (r3 I:double) \l}"];
Node_61 [shape=record,label="{61\:\ 0x0177|0x0177: INVOKE  (r3 I:double) = (r13 I:double) java.lang.Math.sin(double):double type: STATIC \l0x017b: ARITH  (r3 I:double) = (r3 I:double) * (r0 I:double) \l0x017d: IPUT  (r3 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x017f: IGET  (r3 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_62 [shape=record,label="{62\:\ 0x0181|0x0181: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0184 \l}"];
Node_63 [shape=record,label="{63\:\ 0x0183|0x0183: NEG  (r0 I:double) = (r0 I:double) \l}"];
Node_64 [shape=record,label="{64\:\ 0x0184|0x0184: INVOKE  (r5 I:double) = (r13 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0188: ARITH  (r0 I:double) = (r0 I:double) * (r5 I:double) \l0x018a: ARITH  (r3 I:double) = (r3 I:double) + (r0 I:double) \l0x018b: IPUT  (r3 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x018d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x018f: IGET  (r1 I:boolean) = (r0 I:org.osgeo.proj4j.proj.BipolarProjection) org.osgeo.proj4j.proj.BipolarProjection.noskew boolean \l}"];
Node_65 [shape=record,label="{65\:\ 0x0191|0x0191: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:67:0x01b5 \l}"];
Node_66 [shape=record,label="{66\:\ 0x0193|0x0193: IGET  (r3 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0195: IGET  (r5 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x0197: NEG  (r5 I:double) = (r5 I:double) \l0x0198: CONST  (r7 I:?[long, double]) = \l  (4604452473889033901(0x3fe64d212b530ead, double:0.6969152303867837) ?[long, double])\l \l0x019d: ARITH  (r5 I:double) = (r5 I:double) * (r7 I:double) \l0x019f: IGET  (r9 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x01a1: CONST  (r11 I:?[long, double]) = \l  (4604634764135910067(0x3fe6f2ebecbc4ab3, double:0.7171535133114361) ?[long, double])\l \l0x01a6: ARITH  (r9 I:double) = (r9 I:double) * (r11 I:double) \l0x01a8: ARITH  (r5 I:double) = (r5 I:double) \- (r9 I:double) \l0x01a9: IPUT  (r5 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x01ab: IGET  (r5 I:double) = (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x01ad: NEG  (r5 I:double) = (r5 I:double) \l0x01ae: ARITH  (r5 I:double) = (r5 I:double) * (r7 I:double) \l0x01b0: ARITH  (r3 I:double) = (r3 I:double) * (r11 I:double) \l0x01b2: ARITH  (r5 I:double) = (r5 I:double) + (r3 I:double) \l0x01b3: IPUT  (r5 I:double), (r2 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_67 [shape=record,label="{67\:\ 0x01b5|0x01b5: RETURN  (r2 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
Node_68 [shape=record,label="{68\:\ 0x01b6|0x01b6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x01b8: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x01ba: CONST_STR  (r2 I:java.lang.String) =  \"F\" \l0x01bc: INVOKE  \l  (r1 I:org.osgeo.proj4j.ProjectionException)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_69 [shape=record,label="{69\:\ 0x01bf|0x01bf: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_70 [shape=record,label="{70\:\ 0x01c0|0x01c0: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x01c2: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x01c4: CONST_STR  (r2 I:java.lang.String) =  \"F\" \l0x01c6: INVOKE  \l  (r1 I:org.osgeo.proj4j.ProjectionException)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.ProjectionException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_71 [shape=record,label="{71\:\ 0x01c9|0x01c9: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.BipolarProjection.project((r27 'this' I:org.osgeo.proj4j.proj.BipolarProjection A[IMMUTABLE_TYPE, THIS]), (r28 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_29;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_24;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_25;
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_41;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_39;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_37;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_40;
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_70;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_68;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_54;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_52;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_55;
Node_51 -> Node_55;
Node_52 -> Node_53;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_61;
Node_57 -> Node_58[style=dashed];
Node_57 -> Node_59;
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_64;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66[style=dashed];
Node_65 -> Node_67;
Node_66 -> Node_67;
Node_68 -> Node_69;
Node_70 -> Node_71;
}

