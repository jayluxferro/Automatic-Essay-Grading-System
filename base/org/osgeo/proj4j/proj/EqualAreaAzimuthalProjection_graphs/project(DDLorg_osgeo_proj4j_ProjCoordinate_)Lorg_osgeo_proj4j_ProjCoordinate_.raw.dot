digraph "CFG fororg.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.project(DDLorg\/osgeo\/proj4j\/ProjCoordinate;)Lorg\/osgeo\/proj4j\/ProjCoordinate;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r4 I:boolean) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.spherical boolean \l0x0006: CONST  (r7 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x000b: CONST  (r9 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x000d: CONST  (r11 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00f1 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: INVOKE  (r13 I:double) = (r27 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0015: INVOKE  (r15 I:double) = (r27 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0019: INVOKE  (r5 I:double) = (r25 I:double) java.lang.Math.cos(double):double type: STATIC \l0x001d: IGET  (r4 I:int) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.mode int \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4] t:[0x00aa, 0x00ab, 0x006b, 0x0024] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.sinphi0 double \l0x0026: ARITH  (r1 I:double) = (r1 I:double) * (r13 I:double) \l0x0028: ARITH  (r1 I:double) = (r1 I:double) + (r11 I:double) \l0x0029: IGET  (r11 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.cosphi0 double \l0x002b: ARITH  (r11 I:double) = (r11 I:double) * (r15 I:double) \l0x002d: ARITH  (r11 I:double) = (r11 I:double) * (r5 I:double) \l0x002f: ARITH  (r1 I:double) = (r1 I:double) + (r11 I:double) \l0x0030: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0032: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0034: CMP_G  (r1 I:int) = (r1 I:double), (r7 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0065 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|0x0038: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x003a: ARITH  (r9 I:double) = (r9 I:double) \/ (r1 I:double) \l0x003b: INVOKE  (r1 I:double) = (r9 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x003f: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0041: ARITH  (r1 I:double) = (r1 I:double) * (r15 I:double) \l0x0043: INVOKE  (r7 I:double) = (r25 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0047: ARITH  (r1 I:double) = (r1 I:double) * (r7 I:double) \l0x0049: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x004b: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x004d: IGET  (r4 I:int) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.mode int \l0x004f: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0050|0x0050: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0053 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0053|0x0053: IGET  (r7 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.cosphi0 double \l0x0055: ARITH  (r7 I:double) = (r7 I:double) * (r13 I:double) \l0x0057: IGET  (r9 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.sinphi0 double \l0x0059: ARITH  (r9 I:double) = (r9 I:double) * (r15 I:double) \l0x005b: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double) \l0x005d: ARITH  (r13 I:double) = (r7 I:double) \- (r9 I:double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x005f|0x005f: ARITH  (r1 I:double) = (r1 I:double) * (r13 I:double) \l0x0061: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_12 [shape=record,label="{12\:\ 0x0065|0x0065: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x0067: INVOKE  (r1 I:org.osgeo.proj4j.ProjectionException) org.osgeo.proj4j.ProjectionException.\<init\>():void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x006a|0x006a: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x006b|0x006b: ARITH  (r1 I:double) = (r15 I:double) * (r5 I:double) \l0x006d: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006e: ARITH  (r1 I:double) = (r1 I:double) + (r11 I:double) \l0x006f: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0071: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0073: CMP_G  (r1 I:int) = (r1 I:double), (r7 I:double) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0075|0x0075: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:21:0x00a4 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0077|0x0077: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0079: ARITH  (r9 I:double) = (r9 I:double) \/ (r1 I:double) \l0x007a: INVOKE  (r1 I:double) = (r9 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x007e: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0080: ARITH  (r1 I:double) = (r1 I:double) * (r15 I:double) \l0x0082: INVOKE  (r7 I:double) = (r25 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0086: ARITH  (r1 I:double) = (r1 I:double) * (r7 I:double) \l0x0088: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x008a: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x008c: IGET  (r4 I:int) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.mode int \l0x008e: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x008f|0x008f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0092 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0092|0x0092: IGET  (r7 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.cosphi0 double \l0x0094: ARITH  (r7 I:double) = (r7 I:double) * (r13 I:double) \l0x0096: IGET  (r9 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.sinphi0 double \l0x0098: ARITH  (r9 I:double) = (r9 I:double) * (r15 I:double) \l0x009a: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double) \l0x009c: ARITH  (r13 I:double) = (r7 I:double) \- (r9 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x009e|0x009e: ARITH  (r1 I:double) = (r1 I:double) * (r13 I:double) \l0x00a0: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a4|0x00a4: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x00a6: INVOKE  (r1 I:org.osgeo.proj4j.ProjectionException) org.osgeo.proj4j.ProjectionException.\<init\>():void type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a9|0x00a9: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00aa|0x00aa: NEG  (r5 I:double) = (r5 I:double) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00ab|0x00ab: IGET  (r11 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.projectionLatitude double \l0x00ad: ARITH  (r11 I:double) = (r27 I:double) + (r11 I:double) \l0x00af: INVOKE  (r11 I:double) = (r11 I:double) java.lang.Math.abs(double):double type: STATIC \l0x00b3: CMP_G  (r4 I:int) = (r11 I:double), (r7 I:double) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00b5|0x00b5: IF  (r4 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:31:0x00eb \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b7|0x00b7: CONST  (r7 I:?[long, double]) = \l  (4605249457297304856(0x3fe921fb54442d18, double:0.7853981633974483) ?[long, double])\l \l0x00bc: CONST  (r11 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x00be: ARITH  (r1 I:double) = (r27 I:double) * (r11 I:double) \l0x00c0: ARITH  (r7 I:double) = (r7 I:double) \- (r1 I:double) \l0x00c1: IPUT  (r7 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00c3: IGET  (r1 I:int) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.mode int \l0x00c5: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00c6|0x00c6: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00cf \l}"];
Node_28 [shape=record,label="{28\:\ 0x00c8|0x00c8: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00ca: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.cos(double):double type: STATIC \l}"];
Node_29 [shape=record,label="{29\:\ 0x00cf|0x00cf: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00d1: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.sin(double):double type: STATIC \l}"];
Node_30 [shape=record,label="{30\:\ 0x00d5|0x00d5: ARITH  (r1 I:double) = (r1 I:double) * (r9 I:double) \l0x00d7: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00d9: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00db: INVOKE  (r7 I:double) = (r25 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00df: ARITH  (r1 I:double) = (r1 I:double) * (r7 I:double) \l0x00e1: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x00e3: IGET  (r1 I:double) = (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x00e5: ARITH  (r1 I:double) = (r1 I:double) * (r5 I:double) \l0x00e7: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_31 [shape=record,label="{31\:\ 0x00eb|0x00eb: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x00ed: INVOKE  (r1 I:org.osgeo.proj4j.ProjectionException) org.osgeo.proj4j.ProjectionException.\<init\>():void type: DIRECT \l}"];
Node_32 [shape=record,label="{32\:\ 0x00f0|0x00f0: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_33 [shape=record,label="{33\:\ 0x00f1|0x00f1: INVOKE  (r4 I:double) = (r25 I:double) java.lang.Math.cos(double):double type: STATIC \l0x00f5: INVOKE  (r13 I:double) = (r25 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00f9: INVOKE  (r18 I:double) = (r27 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00fd: IGET  (r9 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.e double \l0x00ff: IGET  (r7 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.one_es double \l0x0101: MOVE  (r20 I:?[long, double]) = (r9 I:?[long, double]) \l0x0103: MOVE  (r22 I:?[long, double]) = (r7 I:?[long, double]) \l0x0105: INVOKE  (r6 I:double) = (r18 I:double), (r20 I:double), (r22 I:double) org.osgeo.proj4j.util.ProjectionMath.qsfn(double, double, double):double type: STATIC \l0x0109: IGET  (r8 I:int) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.mode int \l0x010b: CONST  (r9 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_34 [shape=record,label="{34\:\ 0x010c|0x010c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x011b \l}"];
Node_35 [shape=record,label="{35\:\ 0x010e|0x010e: IGET  (r8 I:int) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.mode int \l0x0110: CONST  (r9 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0111|0x0111: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x0114 \l}"];
Node_38 [shape=record,label="{38\:\ 0x0114|0x0114: CONST  (r8 I:?[long, double]) = (0 ?[long, double]) \l0x0116: CONST  (r15 I:?[long, double]) = (0 ?[long, double]) \l0x0118: CONST  (r17 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x011b|0x011b: IGET  (r8 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.qp double \l0x011d: ARITH  (r8 I:double) = (r6 I:double) \/ (r8 I:double) \l0x011f: ARITH  (r15 I:double) = (r8 I:double) * (r8 I:double) \l0x0121: CONST  (r17 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0123: ARITH  (r15 I:double) = (r17 I:double) \- (r15 I:double) \l0x0125: INVOKE  (r15 I:double) = (r15 I:double) java.lang.Math.sqrt(double):double type: STATIC \l}"];
Node_40 [shape=record,label="{40\:\ 0x0129|0x0129: IGET  (r10 I:int) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.mode int \l0x012b: CONST  (r19 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l}"];
Node_41 [shape=record,label="{41\:\ 0x0130|0x0130: SWITCH  \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4] t:[0x0151, 0x014a, 0x0144, 0x0136] \l}"];
Node_42 [shape=record,label="{42\:\ 0x0133|0x0133: CONST  (r11 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_43 [shape=record,label="{43\:\ 0x0136|0x0136: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.sinb1 double \l0x0138: ARITH  (r1 I:double) = (r1 I:double) * (r8 I:double) \l0x013a: ARITH  (r1 I:double) = (r1 I:double) + (r17 I:double) \l0x013c: IGET  (r11 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.cosb1 double \l0x013e: ARITH  (r11 I:double) = (r11 I:double) * (r15 I:double) \l0x0140: ARITH  (r11 I:double) = (r11 I:double) * (r4 I:double) \l0x0142: ARITH  (r11 I:double) = (r11 I:double) + (r1 I:double) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0144|0x0144: ARITH  (r1 I:double) = (r15 I:double) * (r4 I:double) \l0x0146: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0147: ARITH  (r11 I:double) = (r1 I:double) + (r17 I:double) \l}"];
Node_45 [shape=record,label="{45\:\ 0x014a|0x014a: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x014b: ARITH  (r11 I:double) = (r27 I:double) \- (r19 I:double) \l0x014d: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.qp double \l0x014f: ARITH  (r6 I:double) = (r6 I:double) + (r1 I:double) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0151|0x0151: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0152: ARITH  (r11 I:double) = (r27 I:double) + (r19 I:double) \l0x0154: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.qp double \l0x0156: ARITH  (r6 I:double) = (r1 I:double) \- (r6 I:double) \l}"];
Node_47 [shape=record,label="{47\:\ 0x0158|0x0158: INVOKE  (r1 I:double) = (r11 I:double) java.lang.Math.abs(double):double type: STATIC \l0x015c: CONST  (r17 I:?[long, double]) = \l  (4457293557087583675(0x3ddb7cdfd9d7bdbb, double:1.0E\-10) ?[long, double])\l \l0x0161: CMP_G  (r1 I:int) = (r1 I:double), (r17 I:double) \l}"];
Node_48 [shape=record,label="{48\:\ 0x0163|0x0163: IF  (r1 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:63:0x01d1 \l}"];
Node_49 [shape=record,label="{49\:\ 0x0165|0x0165: IGET  (r1 I:int) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.mode int \l}"];
Node_50 [shape=record,label="{50\:\ 0x0167|0x0167: SWITCH  \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4] t:[0x01b0, 0x01b0, 0x0190, 0x016b] \l}"];
Node_52 [shape=record,label="{52\:\ 0x016b|0x016b: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.ymf double \l0x016d: CONST  (r6 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x016f: ARITH  (r6 I:double) = (r6 I:double) \/ (r11 I:double) \l0x0170: INVOKE  (r6 I:double) = (r6 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0174: ARITH  (r1 I:double) = (r1 I:double) * (r6 I:double) \l0x0176: IGET  (r10 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.cosb1 double \l0x0178: ARITH  (r10 I:double) = (r10 I:double) * (r8 I:double) \l0x017a: IGET  (r8 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.sinb1 double \l0x017c: ARITH  (r8 I:double) = (r8 I:double) * (r15 I:double) \l0x017e: ARITH  (r8 I:double) = (r8 I:double) * (r4 I:double) \l0x0180: ARITH  (r10 I:double) = (r10 I:double) \- (r8 I:double) \l0x0181: ARITH  (r1 I:double) = (r1 I:double) * (r10 I:double) \l0x0183: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x0185: IGET  (r1 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.xmf double \l0x0187: ARITH  (r1 I:double) = (r1 I:double) * (r6 I:double) \l0x0189: ARITH  (r1 I:double) = (r1 I:double) * (r15 I:double) \l0x018b: ARITH  (r1 I:double) = (r1 I:double) * (r13 I:double) \l0x018d: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_53 [shape=record,label="{53\:\ 0x0190|0x0190: ARITH  (r4 I:double) = (r4 I:double) * (r15 I:double) \l0x0192: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0193: CONST  (r1 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0195: ARITH  (r4 I:double) = (r4 I:double) + (r1 I:double) \l0x0196: CONST  (r1 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0198: ARITH  (r1 I:double) = (r1 I:double) \/ (r4 I:double) \l0x0199: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x019d: ARITH  (r8 I:double) = (r8 I:double) * (r1 I:double) \l0x019f: IGET  (r4 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.ymf double \l0x01a1: ARITH  (r8 I:double) = (r8 I:double) * (r4 I:double) \l0x01a3: IPUT  (r8 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x01a5: IGET  (r4 I:double) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.xmf double \l0x01a7: ARITH  (r4 I:double) = (r4 I:double) * (r1 I:double) \l0x01a9: ARITH  (r4 I:double) = (r4 I:double) * (r15 I:double) \l0x01ab: ARITH  (r4 I:double) = (r4 I:double) * (r13 I:double) \l0x01ad: IPUT  (r4 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_54 [shape=record,label="{54\:\ 0x01b0|0x01b0: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x01b2: CMP_L  (r8 I:int) = (r6 I:double), (r1 I:double) \l}"];
Node_55 [shape=record,label="{55\:\ 0x01b4|0x01b4: IF  (r8 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:61:0x01ca \l}"];
Node_56 [shape=record,label="{56\:\ 0x01b6|0x01b6: INVOKE  (r1 I:double) = (r6 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x01ba: ARITH  (r13 I:double) = (r13 I:double) * (r1 I:double) \l0x01bc: IPUT  (r13 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l0x01be: IGET  (r6 I:int) = (r0 I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection) org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.mode int \l0x01c0: CONST  (r7 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_57 [shape=record,label="{57\:\ 0x01c1|0x01c1: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x01c4 \l}"];
Node_59 [shape=record,label="{59\:\ 0x01c4|0x01c4: NEG  (r1 I:double) = (r1 I:double) \l}"];
Node_60 [shape=record,label="{60\:\ 0x01c5|0x01c5: ARITH  (r4 I:double) = (r4 I:double) * (r1 I:double) \l0x01c7: IPUT  (r4 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l}"];
Node_61 [shape=record,label="{61\:\ 0x01ca|0x01ca: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x01cc: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.y double \l0x01ce: IPUT  (r1 I:double), (r3 I:org.osgeo.proj4j.ProjCoordinate) org.osgeo.proj4j.ProjCoordinate.x double \l}"];
Node_62 [shape=record,label="{62\:\ 0x01d0|0x01d0: RETURN  (r3 I:org.osgeo.proj4j.ProjCoordinate) \l}"];
Node_63 [shape=record,label="{63\:\ 0x01d1|0x01d1: NEW_INSTANCE  (r1 I:org.osgeo.proj4j.ProjectionException) =  org.osgeo.proj4j.ProjectionException \l0x01d3: INVOKE  (r1 I:org.osgeo.proj4j.ProjectionException) org.osgeo.proj4j.ProjectionException.\<init\>():void type: DIRECT \l}"];
Node_64 [shape=record,label="{64\:\ 0x01d6|0x01d6: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection.project((r24 'this' I:org.osgeo.proj4j.proj.EqualAreaAzimuthalProjection A[IMMUTABLE_TYPE, THIS]), (r25 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_33;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_14;
Node_3 -> Node_23;
Node_3 -> Node_24;
Node_3 -> Node_62;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_62;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17;
Node_17 -> Node_19;
Node_17 -> Node_20[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_62;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_62;
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_39;
Node_35 -> Node_36;
Node_36 -> Node_38;
Node_36 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_41 -> Node_43;
Node_41 -> Node_44;
Node_41 -> Node_45;
Node_41 -> Node_46;
Node_42 -> Node_47;
Node_43 -> Node_47;
Node_44 -> Node_47;
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_63;
Node_49 -> Node_50;
Node_50 -> Node_52;
Node_50 -> Node_53;
Node_50 -> Node_54;
Node_50 -> Node_62;
Node_52 -> Node_62;
Node_53 -> Node_62;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_61;
Node_56 -> Node_57;
Node_57 -> Node_59;
Node_57 -> Node_60[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_63 -> Node_64;
}

