digraph "CFG fororg.osgeo.proj4j.units.AngleFormat.parse(Ljava\/lang\/String;Ljava\/text\/ParsePosition;)Ljava\/lang\/Number;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r13.length()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r0 \<= 0) goto L_0x002a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|int r0 = r0 \- 1\lchar r3 = java.lang.Character.toUpperCase(r13.charAt(r0))\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if (r3 == 'E') goto L_0x0024\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015}"];
Node_5 [shape=record,label="{5\:\ 0x0017|if (r3 == 'N') goto L_0x0024\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019}"];
Node_7 [shape=record,label="{7\:\ 0x001b|if (r3 == 'S') goto L_0x0022\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d}"];
Node_9 [shape=record,label="{9\:\ 0x001f|if (r3 == 'W') goto L_0x0022\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|r3 = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|r3 = false\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|PHI: r3 \l  PHI: (r3v4 boolean) = (r3v5 boolean), (r3v6 boolean) binds: [B:11:0x0024, B:10:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.String r13 = r13.substring(0, r0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|r3 = false\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|PHI: r3 r13 \l  PHI: (r3v0 boolean) = (r3v1 boolean), (r3v4 boolean) binds: [B:13:0x002a, B:12:0x0025] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 java.lang.String) = (r13v0 java.lang.String), (r13v6 java.lang.String) binds: [B:13:0x002a, B:12:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r13.indexOf(100)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|if (r0 != \-1) goto L_0x003a\l}"];
Node_16 [shape=record,label="{16\:\ 0x0034|int r0 = r13.indexOf(176)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|PHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v24 int) binds: [B:15:0x0032, B:16:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == \-1) goto L_0x00e4\l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|java.lang.String r5 = r13.substring(0, r0)\ljava.lang.String r0 = r13.substring(r0 + 1)\ldouble r6 = java.lang.Double.valueOf(r5).doubleValue()\lint r5 = r0.indexOf(109)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|if (r5 != \-1) goto L_0x005b\l}"];
Node_20 [shape=record,label="{20\:\ 0x0055|int r5 = r0.indexOf(39)\l}"];
Node_21 [shape=record,label="{21\:\ 0x005b|PHI: r5 \l  PHI: (r5v4 int) = (r5v3 int), (r5v7 int) binds: [B:19:0x0053, B:20:0x0055] A[DONT_GENERATE, DONT_INLINE]\l|r8 = 0.0d\l}"];
Node_22 [shape=record,label="{22\:\ 0x005d|if (r5 == \-1) goto L_0x00c8\l}"];
Node_23 [shape=record,label="{23\:\ 0x005f|if (r5 == 0) goto L_0x006e\l}"];
Node_24 [shape=record,label="{24\:\ 0x0061|double r10 = java.lang.Double.valueOf(r0.substring(0, r5)).doubleValue()\l}"];
Node_25 [shape=record,label="{25\:\ 0x006e|r10 = 0.0d\l}"];
Node_26 [shape=record,label="{26\:\ 0x006f|PHI: r10 \l  PHI: (r10v3 double) = (r10v5 double), (r10v6 double) binds: [B:25:0x006e, B:24:0x0061] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0075|if (r0.endsWith(STR_SEC_ABBREV) != false) goto L_0x007f\l}"];
Node_28 [shape=record,label="{28\:\ 0x0077}"];
Node_29 [shape=record,label="{29\:\ 0x007d|if (r0.endsWith(STR_SEC_SYMBOL) == false) goto L_0x0088\l}"];
Node_30 [shape=record,label="{30\:\ 0x007f|java.lang.String r0 = r0.substring(0, r0.length() \- 1)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0088|PHI: r0 \l  PHI: (r0v16 java.lang.String) = (r0v22 java.lang.String), (r0v10 java.lang.String) binds: [B:30:0x007f, B:29:0x007d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x008d|if (r5 == (r0.length() \- 1)) goto L_0x009d\l}"];
Node_33 [shape=record,label="{33\:\ 0x008f|double r0 = java.lang.Double.valueOf(r0.substring(r5 + 1)).doubleValue()\l}"];
Node_34 [shape=record,label="{34\:\ 0x009d|r0 = 0.0d\l}"];
Node_35 [shape=record,label="{35\:\ 0x009e|PHI: r0 \l  PHI: (r0v17 double) = (r0v18 double), (r0v21 double) binds: [B:34:0x009d, B:33:0x008f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x00a0|if ((r10 \> 0.0d ? 1 : (r10 == 0.0d ? 0 : \-1)) \< 0) goto L_0x00c0\l}"];
Node_37 [shape=record,label="{37\:\ 0x00a2}"];
Node_38 [shape=record,label="{38\:\ 0x00a9|if ((r10 \> 59.0d ? 1 : (r10 == 59.0d ? 0 : \-1)) \> 0) goto L_0x00c0\l}"];
Node_39 [shape=record,label="{39\:\ 0x00ab}"];
Node_40 [shape=record,label="{40\:\ 0x00ad|if ((r0 \> 0.0d ? 1 : (r0 == 0.0d ? 0 : \-1)) \< 0) goto L_0x00b8\l}"];
Node_41 [shape=record,label="{41\:\ 0x00af}"];
Node_42 [shape=record,label="{42\:\ 0x00b3|if ((r0 \> 60.0d ? 1 : (r0 == 60.0d ? 0 : \-1)) \>= 0) goto L_0x00b8\l}"];
Node_43 [shape=record,label="{43\:\ 0x00b5|r8 = r10\lr10 = r0\l}"];
Node_44 [shape=record,label="{44\:\ 0x00b8}"];
Node_45 [shape=record,label="{45\:\ 0x00bf|throw new java.lang.NumberFormatException(\"Seconds must be between 0 and 59\")\l}"];
Node_46 [shape=record,label="{46\:\ 0x00c0}"];
Node_47 [shape=record,label="{47\:\ 0x00c7|throw new java.lang.NumberFormatException(\"Minutes must be between 0 and 59\")\l}"];
Node_48 [shape=record,label="{48\:\ 0x00c8|if (r5 == 0) goto L_0x00d5\l}"];
Node_49 [shape=record,label="{49\:\ 0x00ca|r10 = 0.0d\lr8 = java.lang.Double.valueOf(r0).doubleValue()\l}"];
Node_50 [shape=record,label="{50\:\ 0x00d5|r10 = 0.0d\l}"];
Node_51 [shape=record,label="{51\:\ 0x00d6|PHI: r8 r10 \l  PHI: (r8v1 double) = (r8v0 double), (r8v2 double), (r8v3 double) binds: [B:50:0x00d5, B:49:0x00ca, B:43:0x00b5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v0 double) = (r10v1 double), (r10v2 double), (r10v4 double) binds: [B:50:0x00d5, B:49:0x00ca, B:43:0x00b5] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_52 [shape=record,label="{52\:\ 0x00d8|if (r12.isDegrees == false) goto L_0x00df\l}"];
Node_53 [shape=record,label="{53\:\ 0x00da|double r0 = org.osgeo.proj4j.util.ProjectionMath.dmsToDeg(r6, r8, r10)\l}"];
Node_54 [shape=record,label="{54\:\ 0x00df|double r0 = org.osgeo.proj4j.util.ProjectionMath.dmsToRad(r6, r8, r10)\l}"];
Node_55 [shape=record,label="{55\:\ 0x00e4|double r0 = java.lang.Double.parseDouble(r13)\l}"];
Node_56 [shape=record,label="{56\:\ 0x00ea|if (r12.isDegrees != false) goto L_0x00f0\l}"];
Node_57 [shape=record,label="{57\:\ 0x00ec|double r0 = java.lang.Math.toRadians(r0)\l}"];
Node_58 [shape=record,label="{58\:\ 0x00f0|PHI: r0 \l  PHI: (r0v4 double) = (r0v7 double), (r0v8 double), (r0v12 double), (r0v13 double) binds: [B:56:0x00ea, B:57:0x00ec, B:54:0x00df, B:53:0x00da] A[DONT_GENERATE, DONT_INLINE]\l|if (r14 == null) goto L_0x00f9\l}"];
Node_59 [shape=record,label="{59\:\ 0x00f2|r14.setIndex(r13.length())\l}"];
Node_60 [shape=record,label="{60\:\ 0x00f9|if (r3 == false) goto L_0x00fc\l}"];
Node_61 [shape=record,label="{61\:\ 0x00fb|double r0 = \-r0\l}"];
Node_62 [shape=record,label="{62\:\ 0x00fc|PHI: r0 \l  PHI: (r0v5 double) = (r0v4 double), (r0v6 double) binds: [B:60:0x00f9, B:61:0x00fb] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_63 [shape=record,label="{63\:\ 0x0101|RETURN\l|return new java.lang.Double(r0)\l}"];
MethodNode[shape=record,label="{public java.lang.Number org.osgeo.proj4j.units.AngleFormat.parse((r12v0 'this' org.osgeo.proj4j.units.AngleFormat A[IMMUTABLE_TYPE, THIS]), (r13v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 java.text.ParsePosition A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_13[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_55;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_48;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_34;
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_46;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_46;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_51;
Node_44 -> Node_45;
Node_46 -> Node_47;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_51;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_58;
Node_54 -> Node_58;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_58;
Node_58 -> Node_59[style=dashed];
Node_58 -> Node_60;
Node_59 -> Node_60;
Node_60 -> Node_61[style=dashed];
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63;
}

