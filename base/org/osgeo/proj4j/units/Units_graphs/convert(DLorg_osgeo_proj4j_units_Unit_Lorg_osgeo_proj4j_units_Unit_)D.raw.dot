digraph "CFG fororg.osgeo.proj4j.units.Units.convert(DLorg\/osgeo\/proj4j\/units\/Unit;Lorg\/osgeo\/proj4j\/units\/Unit;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN  (r0 I:double) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r0 I:double) = (r2 I:org.osgeo.proj4j.units.Unit), (r0 I:double) org.osgeo.proj4j.units.Unit.toBase(double):double type: VIRTUAL \l0x0007: INVOKE  (r0 I:double) = (r3 I:org.osgeo.proj4j.units.Unit), (r0 I:double) org.osgeo.proj4j.units.Unit.fromBase(double):double type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public static double org.osgeo.proj4j.units.Units.convert((r0 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:org.osgeo.proj4j.units.Unit A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.osgeo.proj4j.units.Unit A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
}

