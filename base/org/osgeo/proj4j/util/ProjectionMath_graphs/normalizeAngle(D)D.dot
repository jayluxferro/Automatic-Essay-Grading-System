digraph "CFG fororg.osgeo.proj4j.util.ProjectionMath.normalizeAngle(D)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (java.lang.Double.isInfinite(r4) != false) goto L_0x0020\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (java.lang.Double.isNaN(r4) != false) goto L_0x0020\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|LOOP_START\lPHI: r4 \l  PHI: (r4v2 double) = (r4v0 double), (r4v5 double) binds: [B:3:0x000a, B:6:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000c\-\>B:6:0x0015\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|if ((r4 \> 6.283185307179586d ? 1 : (r4 == 6.283185307179586d ? 0 : \-1)) \<= 0) goto L_0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|LOOP_END\lLOOP:0: B:4:0x000c\-\>B:6:0x0015\l|double r4 = r4 \- 6.283185307179586d\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|LOOP_START\lPHI: r4 \l  PHI: (r4v3 double) = (r4v2 double), (r4v4 double) binds: [B:13:0x0017, B:9:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x0017\-\>B:9:0x001d\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|if ((r4 \> 0.0d ? 1 : (r4 == 0.0d ? 0 : \-1)) \>= 0) goto L_0x001f\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|LOOP_END\lLOOP:1: B:7:0x0017\-\>B:9:0x001d\l|double r4 = r4 + 6.283185307179586d\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|RETURN\l|return r4\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020}"];
Node_12 [shape=record,label="{12\:\ 0x0027|throw new org.osgeo.proj4j.InvalidValueException(\"Infinite angle\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x0017|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static double org.osgeo.proj4j.util.ProjectionMath.normalizeAngle((r4v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_7;
Node_11 -> Node_12;
Node_13 -> Node_7;
Node_14 -> Node_10;
}

