digraph "CFG fororg.osgeo.proj4j.util.ProjectionMath.mlfn(DDD[D)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r12 I:double) = (r12 I:double) * (r10 I:double) \l0x0002: ARITH  (r10 I:double) = (r10 I:double) * (r10 I:double) \l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: AGET  (r0 I:?[long, double]) = (r14 I:?[long, double][]), (r0 I:?[int, short, byte, char]) \l0x0007: ARITH  (r0 I:double) = (r0 I:double) * (r8 I:double) \l0x0009: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: AGET  (r8 I:?[long, double]) = (r14 I:?[long, double][]), (r8 I:?[int, short, byte, char]) \l0x000c: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000d: AGET  (r2 I:?[long, double]) = (r14 I:?[long, double][]), (r2 I:?[int, short, byte, char]) \l0x000f: CONST  (r4 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0010: AGET  (r4 I:?[long, double]) = (r14 I:?[long, double][]), (r4 I:?[int, short, byte, char]) \l0x0012: CONST  (r6 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0013: AGET  (r6 I:?[long, double]) = (r14 I:?[long, double][]), (r6 I:?[int, short, byte, char]) \l0x0015: ARITH  (r6 I:double) = (r6 I:double) * (r10 I:double) \l0x0017: ARITH  (r4 I:double) = (r4 I:double) + (r6 I:double) \l0x0018: ARITH  (r4 I:double) = (r4 I:double) * (r10 I:double) \l0x001a: ARITH  (r2 I:double) = (r2 I:double) + (r4 I:double) \l0x001b: ARITH  (r10 I:double) = (r10 I:double) * (r2 I:double) \l0x001d: ARITH  (r8 I:double) = (r8 I:double) + (r10 I:double) \l0x001e: ARITH  (r12 I:double) = (r12 I:double) * (r8 I:double) \l0x0020: ARITH  (r0 I:double) = (r0 I:double) \- (r12 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public static double org.osgeo.proj4j.util.ProjectionMath.mlfn((r8 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:double[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

