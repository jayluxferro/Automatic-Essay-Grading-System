digraph "CFG fororg.osgeo.proj4j.util.ProjectionMath.takeSign(DD)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0004: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0006: CMP_G  (r4 I:int) = (r4 I:double), (r0 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:4:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: NEG  (r2 I:double) = (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN  (r2 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: RETURN  (r2 I:double) \l}"];
MethodNode[shape=record,label="{public static double org.osgeo.proj4j.util.ProjectionMath.takeSign((r2 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

