digraph "CFG fororg.osgeo.proj4j.io.Proj4FileReader.addParam(Ljava\/util\/List;Ljava\/lang\/String;Ljava\/lang\/String;)V" {
subgraph cluster_Region_1442887911 {
label = "R(2:(1:2)|(2:(2:4|7)|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_394428426 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3.startsWith(\"+\") == false) goto L_0x0008\l}"];
subgraph cluster_Region_960396226 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|java.lang.String r3 = \"+\" + r3\l}"];
}
}
subgraph cluster_Region_1181690845 {
label = "R(2:(2:4|7)|(1:5))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_360408183 {
label = "IF [B:3:0x0019] THEN: R(2:4|7) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0019|PHI: r3 \l  PHI: (r3v1 java.lang.String) = (r3v0 java.lang.String), (r3v4 java.lang.String) binds: [B:1:0x0006, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 != null) goto L_0x001b\l}"];
subgraph cluster_Region_377103362 {
label = "R(2:4|7)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001b|r2.add(r3 + com.j256.ormlite.stmt.query.SimpleComparison.EQUAL_TO_OPERATION + r4)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1548791140 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0033|r2.add(r3)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{private static void org.osgeo.proj4j.io.Proj4FileReader.addParam((r2v0 java.util.List A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_0 -> Node_1;
}

