digraph "CFG fororg.osgeo.proj4j.io.Proj4FileReader.createTokenizer(Ljava\/io\/BufferedReader;)Ljava\/io\/StreamTokenizer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.StreamTokenizer) =  java.io.StreamTokenizer \l0x0002: INVOKE  (r0 I:java.io.StreamTokenizer), (r6 I:java.io.Reader) java.io.StreamTokenizer.\<init\>(java.io.Reader):void type: DIRECT \l0x0005: CONST  (r6 I:?[int, float, short, byte, char]) = (35 ?[int, float, short, byte, char]) \l0x0007: INVOKE  (r0 I:java.io.StreamTokenizer), (r6 I:int) java.io.StreamTokenizer.commentChar(int):void type: VIRTUAL \l0x000a: CONST  (r6 I:?[int, float, short, byte, char]) = (57 ?[int, float, short, byte, char]) \l0x000c: CONST  (r1 I:?[int, float, short, byte, char]) = (48 ?[int, float, short, byte, char]) \l0x000e: INVOKE  (r0 I:java.io.StreamTokenizer), (r1 I:int), (r6 I:int) java.io.StreamTokenizer.ordinaryChars(int, int):void type: VIRTUAL \l0x0011: CONST  (r2 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l0x0013: INVOKE  (r0 I:java.io.StreamTokenizer), (r2 I:int), (r2 I:int) java.io.StreamTokenizer.ordinaryChars(int, int):void type: VIRTUAL \l0x0016: CONST  (r3 I:?[int, float, short, byte, char]) = (45 ?[int, float, short, byte, char]) \l0x0018: INVOKE  (r0 I:java.io.StreamTokenizer), (r3 I:int), (r3 I:int) java.io.StreamTokenizer.ordinaryChars(int, int):void type: VIRTUAL \l0x001b: CONST  (r4 I:?[int, float, short, byte, char]) = (43 ?[int, float, short, byte, char]) \l0x001d: INVOKE  (r0 I:java.io.StreamTokenizer), (r4 I:int), (r4 I:int) java.io.StreamTokenizer.ordinaryChars(int, int):void type: VIRTUAL \l0x0020: INVOKE  (r0 I:java.io.StreamTokenizer), (r1 I:int), (r6 I:int) java.io.StreamTokenizer.wordChars(int, int):void type: VIRTUAL \l0x0023: CONST  (r6 I:?[int, float, short, byte, char]) = (39 ?[int, float, short, byte, char]) \l0x0025: INVOKE  (r0 I:java.io.StreamTokenizer), (r6 I:int), (r6 I:int) java.io.StreamTokenizer.wordChars(int, int):void type: VIRTUAL \l0x0028: CONST  (r6 I:?[int, float, short, byte, char]) = (34 ?[int, float, short, byte, char]) \l0x002a: INVOKE  (r0 I:java.io.StreamTokenizer), (r6 I:int), (r6 I:int) java.io.StreamTokenizer.wordChars(int, int):void type: VIRTUAL \l0x002d: CONST  (r6 I:?[int, float, short, byte, char]) = (95 ?[int, float, short, byte, char]) \l0x002f: INVOKE  (r0 I:java.io.StreamTokenizer), (r6 I:int), (r6 I:int) java.io.StreamTokenizer.wordChars(int, int):void type: VIRTUAL \l0x0032: INVOKE  (r0 I:java.io.StreamTokenizer), (r2 I:int), (r2 I:int) java.io.StreamTokenizer.wordChars(int, int):void type: VIRTUAL \l0x0035: INVOKE  (r0 I:java.io.StreamTokenizer), (r3 I:int), (r3 I:int) java.io.StreamTokenizer.wordChars(int, int):void type: VIRTUAL \l0x0038: INVOKE  (r0 I:java.io.StreamTokenizer), (r4 I:int), (r4 I:int) java.io.StreamTokenizer.wordChars(int, int):void type: VIRTUAL \l0x003b: CONST  (r6 I:?[int, float, short, byte, char]) = (44 ?[int, float, short, byte, char]) \l0x003d: INVOKE  (r0 I:java.io.StreamTokenizer), (r6 I:int), (r6 I:int) java.io.StreamTokenizer.wordChars(int, int):void type: VIRTUAL \l0x0040: CONST  (r6 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l0x0042: INVOKE  (r0 I:java.io.StreamTokenizer), (r6 I:int), (r6 I:int) java.io.StreamTokenizer.wordChars(int, int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0045|0x0045: RETURN  (r0 I:java.io.StreamTokenizer) \l}"];
MethodNode[shape=record,label="{private java.io.StreamTokenizer org.osgeo.proj4j.io.Proj4FileReader.createTokenizer((r5 'this' I:org.osgeo.proj4j.io.Proj4FileReader A[IMMUTABLE_TYPE, THIS]), (r6 I:java.io.BufferedReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

