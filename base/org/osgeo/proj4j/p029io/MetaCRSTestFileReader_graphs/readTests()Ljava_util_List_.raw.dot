digraph "CFG fororg.osgeo.proj4j.io.MetaCRSTestFileReader.readTests()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.LineNumberReader) =  java.io.LineNumberReader \l0x0002: NEW_INSTANCE  (r1 I:java.io.FileReader) =  java.io.FileReader \l0x0004: IGET  (r2 I:java.io.File) = (r3 I:org.osgeo.proj4j.io.MetaCRSTestFileReader) org.osgeo.proj4j.io.MetaCRSTestFileReader.file java.io.File \l0x0006: INVOKE  (r1 I:java.io.FileReader), (r2 I:java.io.File) java.io.FileReader.\<init\>(java.io.File):void type: DIRECT \l0x0009: INVOKE  (r0 I:java.io.LineNumberReader), (r1 I:java.io.Reader) java.io.LineNumberReader.\<init\>(java.io.Reader):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|SYNTHETIC\lSplitter:B:1:0x000c\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000c\l|0x000c: INVOKE  (r1 I:java.util.List) = \l  (r3 I:org.osgeo.proj4j.io.MetaCRSTestFileReader)\l  (r0 I:java.io.LineNumberReader)\l org.osgeo.proj4j.io.MetaCRSTestFileReader.parseFile(java.io.LineNumberReader):java.util.List type: DIRECT A[Catch:\{ all \-\> 0x0014 \}, TRY_ENTER]\l0x000f: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: INVOKE  (r0 I:java.io.LineNumberReader) java.io.LineNumberReader.close():void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: RETURN  (r1 I:java.util.List\<org.osgeo.proj4j.io.MetaCRSTestCase\>) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|ExcHandler: all null\lSplitter:B:1:0x000c\l|0x0014: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r0 I:java.io.LineNumberReader) java.io.LineNumberReader.close():void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.util.List\<org.osgeo.proj4j.io.MetaCRSTestCase\> org.osgeo.proj4j.io.MetaCRSTestFileReader.readTests((r3 'this' I:org.osgeo.proj4j.io.MetaCRSTestFileReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Lorg\/osgeo\/proj4j\/io\/MetaCRSTestCase;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

