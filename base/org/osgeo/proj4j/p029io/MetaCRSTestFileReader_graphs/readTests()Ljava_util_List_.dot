digraph "CFG fororg.osgeo.proj4j.io.MetaCRSTestFileReader.readTests()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.LineNumberReader r0 = new java.io.LineNumberReader(new java.io.FileReader(r3.file))\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|SYNTHETIC\lSplitter:B:1:0x000c\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0014 \}\lSplitter:B:1:0x000c\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|DONT_GENERATE\l|r0.close()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|RETURN\l|return parseFile(r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|ExcHandler:  FINALLY\lSplitter:B:1:0x000c\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|FINALLY_INSNS\l|r0.close()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|throw r1\l}"];
MethodNode[shape=record,label="{public java.util.List\<org.osgeo.proj4j.io.MetaCRSTestCase\> org.osgeo.proj4j.io.MetaCRSTestFileReader.readTests((r3v0 'this' org.osgeo.proj4j.io.MetaCRSTestFileReader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Lorg\/osgeo\/proj4j\/io\/MetaCRSTestCase;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

