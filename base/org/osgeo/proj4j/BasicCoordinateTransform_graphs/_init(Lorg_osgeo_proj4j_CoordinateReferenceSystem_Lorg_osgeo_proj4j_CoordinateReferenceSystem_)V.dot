digraph "CFG fororg.osgeo.proj4j.BasicCoordinateTransform.\<init\>(Lorg\/osgeo\/proj4j\/CoordinateReferenceSystem;Lorg\/osgeo\/proj4j\/CoordinateReferenceSystem;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.geoCoord = new org.osgeo.proj4j.ProjCoordinate(0.0d, 0.0d)\lr4.doInverseProjection = true\lr4.doForwardProjection = true\lr1 = false\lr4.doDatumTransform = false\lr4.transformViaGeocentric = false\lr4.srcCRS = r5\lr4.tgtCRS = r6\l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|if (r5 == null) goto L_0x0022\l}"];
Node_2 [shape=record,label="{2\:\ 0x001c}"];
Node_3 [shape=record,label="{3\:\ 0x001e|if (r5 == org.osgeo.proj4j.CoordinateReferenceSystem.CS_GEO) goto L_0x0022\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|r2 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|r2 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|PHI: r2 \l  PHI: (r2v0 boolean) = (r2v10 boolean), (r2v12 boolean) binds: [B:5:0x0022, B:4:0x0020] A[DONT_GENERATE, DONT_INLINE]\l|r4.doInverseProjection = r2\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|if (r6 == null) goto L_0x002d\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027}"];
Node_9 [shape=record,label="{9\:\ 0x0029|if (r6 == org.osgeo.proj4j.CoordinateReferenceSystem.CS_GEO) goto L_0x002d\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|r2 = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|r2 = false\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|PHI: r2 \l  PHI: (r2v1 boolean) = (r2v7 boolean), (r2v9 boolean) binds: [B:11:0x002d, B:10:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|r4.doForwardProjection = r2\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|if (r4.doInverseProjection == false) goto L_0x0043\l}"];
Node_14 [shape=record,label="{14\:\ 0x0034}"];
Node_15 [shape=record,label="{15\:\ 0x0036|if (r4.doForwardProjection == false) goto L_0x0043\l}"];
Node_16 [shape=record,label="{16\:\ 0x0038}"];
Node_17 [shape=record,label="{17\:\ 0x0040|if (r5.getDatum() == r6.getDatum()) goto L_0x0043\l}"];
Node_18 [shape=record,label="{18\:\ 0x0042|r1 = true\l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|PHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v1 boolean), (r1v1 boolean), (r1v11 boolean) binds: [B:13:0x0032, B:15:0x0036, B:17:0x0040, B:18:0x0042] A[DONT_GENERATE, DONT_INLINE]\l|r4.doDatumTransform = r1\l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|if (r4.doDatumTransform == false) goto L_?\l}"];
Node_21 [shape=record,label="{21\:\ 0x0049}"];
Node_22 [shape=record,label="{22\:\ 0x005d|if (r5.getDatum().getEllipsoid().isEqual(r6.getDatum().getEllipsoid()) != false) goto L_0x0061\l}"];
Node_23 [shape=record,label="{23\:\ 0x005f|r4.transformViaGeocentric = true\l}"];
Node_24 [shape=record,label="{24\:\ 0x0061}"];
Node_25 [shape=record,label="{25\:\ 0x0069|if (r5.getDatum().hasTransformToWGS84() != false) goto L_0x0075\l}"];
Node_26 [shape=record,label="{26\:\ 0x006b}"];
Node_27 [shape=record,label="{27\:\ 0x0073|if (r6.getDatum().hasTransformToWGS84() == false) goto L_0x0077\l}"];
Node_28 [shape=record,label="{28\:\ 0x0075|r4.transformViaGeocentric = true\l}"];
Node_29 [shape=record,label="{29\:\ 0x0077}"];
Node_30 [shape=record,label="{30\:\ 0x0079|if (r4.transformViaGeocentric == false) goto L_?\l}"];
Node_31 [shape=record,label="{31\:\ 0x007b|r4.srcGeoConv = new org.osgeo.proj4j.datum.GeocentricConverter(r5.getDatum().getEllipsoid())\lr4.tgtGeoConv = new org.osgeo.proj4j.datum.GeocentricConverter(r6.getDatum().getEllipsoid())\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.BasicCoordinateTransform.\<init\>((r4v0 'this' org.osgeo.proj4j.BasicCoordinateTransform A[IMMUTABLE_TYPE, THIS]), (r5v0 org.osgeo.proj4j.CoordinateReferenceSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 org.osgeo.proj4j.CoordinateReferenceSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_34;
Node_31 -> Node_32;
}

