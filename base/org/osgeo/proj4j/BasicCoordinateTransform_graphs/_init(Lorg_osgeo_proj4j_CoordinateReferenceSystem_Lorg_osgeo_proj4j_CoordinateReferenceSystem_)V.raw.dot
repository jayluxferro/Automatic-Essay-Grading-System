digraph "CFG fororg.osgeo.proj4j.BasicCoordinateTransform.\<init\>(Lorg\/osgeo\/proj4j\/CoordinateReferenceSystem;Lorg\/osgeo\/proj4j\/CoordinateReferenceSystem;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.ProjCoordinate) =  org.osgeo.proj4j.ProjCoordinate \l0x0005: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x0007: INVOKE  \l  (r0 I:org.osgeo.proj4j.ProjCoordinate)\l  (r1 I:double)\l  (r1 I:double)\l org.osgeo.proj4j.ProjCoordinate.\<init\>(double, double):void type: DIRECT \l0x000a: IPUT  \l  (r0 I:org.osgeo.proj4j.ProjCoordinate)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.geoCoord org.osgeo.proj4j.ProjCoordinate \l0x000c: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: IPUT  \l  (r0 I:boolean)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.doInverseProjection boolean \l0x000f: IPUT  \l  (r0 I:boolean)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.doForwardProjection boolean \l0x0011: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: IPUT  \l  (r1 I:boolean)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.doDatumTransform boolean \l0x0014: IPUT  \l  (r1 I:boolean)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.transformViaGeocentric boolean \l0x0016: IPUT  \l  (r5 I:org.osgeo.proj4j.CoordinateReferenceSystem)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.srcCRS org.osgeo.proj4j.CoordinateReferenceSystem \l0x0018: IPUT  \l  (r6 I:org.osgeo.proj4j.CoordinateReferenceSystem)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.tgtCRS org.osgeo.proj4j.CoordinateReferenceSystem \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: SGET  (r2 I:org.osgeo.proj4j.CoordinateReferenceSystem) =  org.osgeo.proj4j.CoordinateReferenceSystem.CS_GEO org.osgeo.proj4j.CoordinateReferenceSystem \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: IPUT  \l  (r2 I:boolean)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.doInverseProjection boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: SGET  (r2 I:org.osgeo.proj4j.CoordinateReferenceSystem) =  org.osgeo.proj4j.CoordinateReferenceSystem.CS_GEO org.osgeo.proj4j.CoordinateReferenceSystem \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002d \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: IPUT  \l  (r2 I:boolean)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.doForwardProjection boolean \l0x0030: IGET  (r2 I:boolean) = (r4 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.doInverseProjection boolean \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0043 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0034|0x0034: IGET  (r2 I:boolean) = (r4 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.doForwardProjection boolean \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0043 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: INVOKE  (r2 I:org.osgeo.proj4j.datum.Datum) = (r5 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x003c: INVOKE  (r3 I:org.osgeo.proj4j.datum.Datum) = (r6 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0040|0x0040: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0043 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0042|0x0042: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|0x0043: IPUT  \l  (r1 I:boolean)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.doDatumTransform boolean \l0x0045: IGET  (r1 I:boolean) = (r4 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.doDatumTransform boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0099 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|0x0049: INVOKE  (r1 I:org.osgeo.proj4j.datum.Datum) = (r5 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x004d: INVOKE  (r1 I:org.osgeo.proj4j.datum.Ellipsoid) = (r1 I:org.osgeo.proj4j.datum.Datum) org.osgeo.proj4j.datum.Datum.getEllipsoid():org.osgeo.proj4j.datum.Ellipsoid type: VIRTUAL \l0x0051: INVOKE  (r2 I:org.osgeo.proj4j.datum.Datum) = (r6 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x0055: INVOKE  (r2 I:org.osgeo.proj4j.datum.Ellipsoid) = (r2 I:org.osgeo.proj4j.datum.Datum) org.osgeo.proj4j.datum.Datum.getEllipsoid():org.osgeo.proj4j.datum.Ellipsoid type: VIRTUAL \l0x0059: INVOKE  (r1 I:boolean) = \l  (r1 I:org.osgeo.proj4j.datum.Ellipsoid)\l  (r2 I:org.osgeo.proj4j.datum.Ellipsoid)\l org.osgeo.proj4j.datum.Ellipsoid.isEqual(org.osgeo.proj4j.datum.Ellipsoid):boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x005d|0x005d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0061 \l}"];
Node_23 [shape=record,label="{23\:\ 0x005f|0x005f: IPUT  \l  (r0 I:boolean)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.transformViaGeocentric boolean \l}"];
Node_24 [shape=record,label="{24\:\ 0x0061|0x0061: INVOKE  (r1 I:org.osgeo.proj4j.datum.Datum) = (r5 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x0065: INVOKE  (r1 I:boolean) = (r1 I:org.osgeo.proj4j.datum.Datum) org.osgeo.proj4j.datum.Datum.hasTransformToWGS84():boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0069|0x0069: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x0075 \l}"];
Node_26 [shape=record,label="{26\:\ 0x006b|0x006b: INVOKE  (r1 I:org.osgeo.proj4j.datum.Datum) = (r6 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x006f: INVOKE  (r1 I:boolean) = (r1 I:org.osgeo.proj4j.datum.Datum) org.osgeo.proj4j.datum.Datum.hasTransformToWGS84():boolean type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x0073|0x0073: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0077 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0075|0x0075: IPUT  \l  (r0 I:boolean)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.transformViaGeocentric boolean \l}"];
Node_29 [shape=record,label="{29\:\ 0x0077|0x0077: IGET  (r0 I:boolean) = (r4 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.transformViaGeocentric boolean \l}"];
Node_30 [shape=record,label="{30\:\ 0x0079|0x0079: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x0099 \l}"];
Node_31 [shape=record,label="{31\:\ 0x007b|0x007b: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.datum.GeocentricConverter) =  org.osgeo.proj4j.datum.GeocentricConverter \l0x007d: INVOKE  (r5 I:org.osgeo.proj4j.datum.Datum) = (r5 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x0081: INVOKE  (r5 I:org.osgeo.proj4j.datum.Ellipsoid) = (r5 I:org.osgeo.proj4j.datum.Datum) org.osgeo.proj4j.datum.Datum.getEllipsoid():org.osgeo.proj4j.datum.Ellipsoid type: VIRTUAL \l0x0085: INVOKE  \l  (r0 I:org.osgeo.proj4j.datum.GeocentricConverter)\l  (r5 I:org.osgeo.proj4j.datum.Ellipsoid)\l org.osgeo.proj4j.datum.GeocentricConverter.\<init\>(org.osgeo.proj4j.datum.Ellipsoid):void type: DIRECT \l0x0088: IPUT  \l  (r0 I:org.osgeo.proj4j.datum.GeocentricConverter)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.srcGeoConv org.osgeo.proj4j.datum.GeocentricConverter \l0x008a: NEW_INSTANCE  (r5 I:org.osgeo.proj4j.datum.GeocentricConverter) =  org.osgeo.proj4j.datum.GeocentricConverter \l0x008c: INVOKE  (r6 I:org.osgeo.proj4j.datum.Datum) = (r6 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x0090: INVOKE  (r6 I:org.osgeo.proj4j.datum.Ellipsoid) = (r6 I:org.osgeo.proj4j.datum.Datum) org.osgeo.proj4j.datum.Datum.getEllipsoid():org.osgeo.proj4j.datum.Ellipsoid type: VIRTUAL \l0x0094: INVOKE  \l  (r5 I:org.osgeo.proj4j.datum.GeocentricConverter)\l  (r6 I:org.osgeo.proj4j.datum.Ellipsoid)\l org.osgeo.proj4j.datum.GeocentricConverter.\<init\>(org.osgeo.proj4j.datum.Ellipsoid):void type: DIRECT \l0x0097: IPUT  \l  (r5 I:org.osgeo.proj4j.datum.GeocentricConverter)\l  (r4 I:org.osgeo.proj4j.BasicCoordinateTransform)\l org.osgeo.proj4j.BasicCoordinateTransform.tgtGeoConv org.osgeo.proj4j.datum.GeocentricConverter \l}"];
Node_32 [shape=record,label="{32\:\ 0x0099|0x0099: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osgeo.proj4j.BasicCoordinateTransform.\<init\>((r4 'this' I:org.osgeo.proj4j.BasicCoordinateTransform A[IMMUTABLE_TYPE, THIS]), (r5 I:org.osgeo.proj4j.CoordinateReferenceSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.osgeo.proj4j.CoordinateReferenceSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_32;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_28;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
}

