digraph "CFG fororg.osgeo.proj4j.BasicCoordinateTransform.datumTransform(Lorg\/osgeo\/proj4j\/ProjCoordinate;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osgeo.proj4j.CoordinateReferenceSystem) = (r2 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.srcCRS org.osgeo.proj4j.CoordinateReferenceSystem \l0x0002: INVOKE  (r0 I:org.osgeo.proj4j.datum.Datum) = (r0 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x0006: IGET  (r1 I:org.osgeo.proj4j.CoordinateReferenceSystem) = (r2 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.tgtCRS org.osgeo.proj4j.CoordinateReferenceSystem \l0x0008: INVOKE  (r1 I:org.osgeo.proj4j.datum.Datum) = (r1 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x000c: INVOKE  (r0 I:boolean) = \l  (r0 I:org.osgeo.proj4j.datum.Datum)\l  (r1 I:org.osgeo.proj4j.datum.Datum)\l org.osgeo.proj4j.datum.Datum.isEqual(org.osgeo.proj4j.datum.Datum):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IGET  (r0 I:boolean) = (r2 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.transformViaGeocentric boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x004b \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IGET  (r0 I:org.osgeo.proj4j.datum.GeocentricConverter) = (r2 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.srcGeoConv org.osgeo.proj4j.datum.GeocentricConverter \l0x0019: INVOKE  \l  (r0 I:org.osgeo.proj4j.datum.GeocentricConverter)\l  (r3 I:org.osgeo.proj4j.ProjCoordinate)\l org.osgeo.proj4j.datum.GeocentricConverter.convertGeodeticToGeocentric(org.osgeo.proj4j.ProjCoordinate):void type: VIRTUAL \l0x001c: IGET  (r0 I:org.osgeo.proj4j.CoordinateReferenceSystem) = (r2 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.srcCRS org.osgeo.proj4j.CoordinateReferenceSystem \l0x001e: INVOKE  (r0 I:org.osgeo.proj4j.datum.Datum) = (r0 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x0022: INVOKE  (r0 I:boolean) = (r0 I:org.osgeo.proj4j.datum.Datum) org.osgeo.proj4j.datum.Datum.hasTransformToWGS84():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0031 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IGET  (r0 I:org.osgeo.proj4j.CoordinateReferenceSystem) = (r2 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.srcCRS org.osgeo.proj4j.CoordinateReferenceSystem \l0x002a: INVOKE  (r0 I:org.osgeo.proj4j.datum.Datum) = (r0 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x002e: INVOKE  \l  (r0 I:org.osgeo.proj4j.datum.Datum)\l  (r3 I:org.osgeo.proj4j.ProjCoordinate)\l org.osgeo.proj4j.datum.Datum.transformFromGeocentricToWgs84(org.osgeo.proj4j.ProjCoordinate):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: IGET  (r0 I:org.osgeo.proj4j.CoordinateReferenceSystem) = (r2 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.tgtCRS org.osgeo.proj4j.CoordinateReferenceSystem \l0x0033: INVOKE  (r0 I:org.osgeo.proj4j.datum.Datum) = (r0 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x0037: INVOKE  (r0 I:boolean) = (r0 I:org.osgeo.proj4j.datum.Datum) org.osgeo.proj4j.datum.Datum.hasTransformToWGS84():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|0x003b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0046 \l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|0x003d: IGET  (r0 I:org.osgeo.proj4j.CoordinateReferenceSystem) = (r2 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.tgtCRS org.osgeo.proj4j.CoordinateReferenceSystem \l0x003f: INVOKE  (r0 I:org.osgeo.proj4j.datum.Datum) = (r0 I:org.osgeo.proj4j.CoordinateReferenceSystem) org.osgeo.proj4j.CoordinateReferenceSystem.getDatum():org.osgeo.proj4j.datum.Datum type: VIRTUAL \l0x0043: INVOKE  \l  (r0 I:org.osgeo.proj4j.datum.Datum)\l  (r3 I:org.osgeo.proj4j.ProjCoordinate)\l org.osgeo.proj4j.datum.Datum.transformToGeocentricFromWgs84(org.osgeo.proj4j.ProjCoordinate):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|0x0046: IGET  (r0 I:org.osgeo.proj4j.datum.GeocentricConverter) = (r2 I:org.osgeo.proj4j.BasicCoordinateTransform) org.osgeo.proj4j.BasicCoordinateTransform.tgtGeoConv org.osgeo.proj4j.datum.GeocentricConverter \l0x0048: INVOKE  \l  (r0 I:org.osgeo.proj4j.datum.GeocentricConverter)\l  (r3 I:org.osgeo.proj4j.ProjCoordinate)\l org.osgeo.proj4j.datum.GeocentricConverter.convertGeocentricToGeodetic(org.osgeo.proj4j.ProjCoordinate):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|0x004b: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osgeo.proj4j.BasicCoordinateTransform.datumTransform((r2 'this' I:org.osgeo.proj4j.BasicCoordinateTransform A[IMMUTABLE_TYPE, THIS]), (r3 I:org.osgeo.proj4j.ProjCoordinate A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

