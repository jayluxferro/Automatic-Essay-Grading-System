digraph "CFG fororg.osgeo.proj4j.Registry.getProjection(Ljava\/lang\/String;)Lorg\/osgeo\/proj4j\/proj\/Projection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Map\<java.lang.String, java.lang.Class\>) = (r1 I:org.osgeo.proj4j.Registry) org.osgeo.proj4j.Registry.projRegistry java.util.Map \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r2 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0006: CHECK_CAST  (r0 I:java.lang.Class) = (java.lang.Class) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|SYNTHETIC\lSplitter:B:2:0x000a\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x000a\l|0x000a: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Class) java.lang.Class.newInstance():java.lang.Object type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x001b, InstantiationException \-\> 0x0016 \}, TRY_ENTER]\l0x000e: CHECK_CAST  (r0 I:org.osgeo.proj4j.proj.Projection) = (org.osgeo.proj4j.proj.Projection) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ IllegalAccessException \-\> 0x001b, InstantiationException \-\> 0x0016 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 A[Catch:\{ IllegalAccessException \-\> 0x001b, InstantiationException \-\> 0x0016 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: INVOKE  \l  (r0 I:org.osgeo.proj4j.proj.Projection)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.proj.Projection.setName(java.lang.String):void type: VIRTUAL A[Catch:\{ IllegalAccessException \-\> 0x001b, InstantiationException \-\> 0x0016 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: RETURN  (r0 I:org.osgeo.proj4j.proj.Projection) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|ExcHandler: InstantiationException null\lSplitter:B:2:0x000a\l|0x0016: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: INVOKE  (r2 I:java.lang.InstantiationException) java.lang.InstantiationException.printStackTrace():void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|ExcHandler: IllegalAccessException null\lSplitter:B:2:0x000a\l|0x001b: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: INVOKE  (r2 I:java.lang.IllegalAccessException) java.lang.IllegalAccessException.printStackTrace():void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: RETURN  (r2 I:org.osgeo.proj4j.proj.Projection) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.proj.Projection org.osgeo.proj4j.Registry.getProjection((r1 'this' I:org.osgeo.proj4j.Registry A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

