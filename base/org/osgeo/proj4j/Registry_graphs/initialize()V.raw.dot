digraph "CFG fororg.osgeo.proj4j.Registry.initialize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.Map\<java.lang.String, java.lang.Class\>) = (r3 I:org.osgeo.proj4j.Registry) org.osgeo.proj4j.Registry.projRegistry java.util.Map A[Catch:\{ all \-\> 0x0316 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0007 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0006|0x0006: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0007|SYNTHETIC\lSplitter:B:6:0x0007\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0007\l|0x0007: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap A[Catch:\{ all \-\> 0x0316 \}, TRY_ENTER]\l0x0009: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x000c: IPUT  \l  (r0 I:java.util.Map\<java.lang.String, java.lang.Class\>)\l  (r3 I:org.osgeo.proj4j.Registry)\l org.osgeo.proj4j.Registry.projRegistry java.util.Map A[Catch:\{ all \-\> 0x0316 \}]\l0x000e: CONST_STR  (r0 I:java.lang.String) =  \"aea\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0010: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.AlbersProjection\>) =  org.osgeo.proj4j.proj.AlbersProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0012: CONST_STR  (r2 I:java.lang.String) =  \"Albers Equal Area\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0014: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0017: CONST_STR  (r0 I:java.lang.String) =  \"aeqd\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0019: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.EquidistantAzimuthalProjection\>) =  org.osgeo.proj4j.proj.EquidistantAzimuthalProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x001b: CONST_STR  (r2 I:java.lang.String) =  \"Azimuthal Equidistant\" A[Catch:\{ all \-\> 0x0316 \}]\l0x001d: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0020: CONST_STR  (r0 I:java.lang.String) =  \"airy\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0022: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.AiryProjection\>) =  org.osgeo.proj4j.proj.AiryProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0024: CONST_STR  (r2 I:java.lang.String) =  \"Airy\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0026: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0029: CONST_STR  (r0 I:java.lang.String) =  \"aitoff\" A[Catch:\{ all \-\> 0x0316 \}]\l0x002b: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.AitoffProjection\>) =  org.osgeo.proj4j.proj.AitoffProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x002d: CONST_STR  (r2 I:java.lang.String) =  \"Aitoff\" A[Catch:\{ all \-\> 0x0316 \}]\l0x002f: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0032: CONST_STR  (r0 I:java.lang.String) =  \"alsk\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0034: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Projection\>) =  org.osgeo.proj4j.proj.Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0036: CONST_STR  (r2 I:java.lang.String) =  \"Mod. Stereographics of Alaska\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0038: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x003b: CONST_STR  (r0 I:java.lang.String) =  \"apian\" A[Catch:\{ all \-\> 0x0316 \}]\l0x003d: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Projection\>) =  org.osgeo.proj4j.proj.Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x003f: CONST_STR  (r2 I:java.lang.String) =  \"Apian Globular I\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0041: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0044: CONST_STR  (r0 I:java.lang.String) =  \"august\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0046: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.AugustProjection\>) =  org.osgeo.proj4j.proj.AugustProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0048: CONST_STR  (r2 I:java.lang.String) =  \"August Epicycloidal\" A[Catch:\{ all \-\> 0x0316 \}]\l0x004a: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x004d: CONST_STR  (r0 I:java.lang.String) =  \"bacon\" A[Catch:\{ all \-\> 0x0316 \}]\l0x004f: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Projection\>) =  org.osgeo.proj4j.proj.Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0051: CONST_STR  (r2 I:java.lang.String) =  \"Bacon Globular\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0053: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0056: CONST_STR  (r0 I:java.lang.String) =  \"bipc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0058: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.BipolarProjection\>) =  org.osgeo.proj4j.proj.BipolarProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x005a: CONST_STR  (r2 I:java.lang.String) =  \"Bipolar conic of western hemisphere\" A[Catch:\{ all \-\> 0x0316 \}]\l0x005c: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x005f: CONST_STR  (r0 I:java.lang.String) =  \"boggs\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0061: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.BoggsProjection\>) =  org.osgeo.proj4j.proj.BoggsProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0063: CONST_STR  (r2 I:java.lang.String) =  \"Boggs Eumorphic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0065: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0068: CONST_STR  (r0 I:java.lang.String) =  \"bonne\" A[Catch:\{ all \-\> 0x0316 \}]\l0x006a: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.BonneProjection\>) =  org.osgeo.proj4j.proj.BonneProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x006c: CONST_STR  (r2 I:java.lang.String) =  \"Bonne (Werner lat_1=90)\" A[Catch:\{ all \-\> 0x0316 \}]\l0x006e: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0071: CONST_STR  (r0 I:java.lang.String) =  \"cass\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0073: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.CassiniProjection\>) =  org.osgeo.proj4j.proj.CassiniProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0075: CONST_STR  (r2 I:java.lang.String) =  \"Cassini\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0077: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x007a: CONST_STR  (r0 I:java.lang.String) =  \"cc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x007c: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.CentralCylindricalProjection\>) =  org.osgeo.proj4j.proj.CentralCylindricalProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x007e: CONST_STR  (r2 I:java.lang.String) =  \"Central Cylindrical\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0080: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0083: CONST_STR  (r0 I:java.lang.String) =  \"cea\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0085: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Projection\>) =  org.osgeo.proj4j.proj.Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0087: CONST_STR  (r2 I:java.lang.String) =  \"Equal Area Cylindrical\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0089: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x008c: CONST_STR  (r0 I:java.lang.String) =  \"collg\" A[Catch:\{ all \-\> 0x0316 \}]\l0x008e: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.CollignonProjection\>) =  org.osgeo.proj4j.proj.CollignonProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0090: CONST_STR  (r2 I:java.lang.String) =  \"Collignon\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0092: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0095: CONST_STR  (r0 I:java.lang.String) =  \"crast\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0097: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.CrasterProjection\>) =  org.osgeo.proj4j.proj.CrasterProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0099: CONST_STR  (r2 I:java.lang.String) =  \"Craster Parabolic (Putnins P4)\" A[Catch:\{ all \-\> 0x0316 \}]\l0x009b: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x009e: CONST_STR  (r0 I:java.lang.String) =  \"denoy\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00a0: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.DenoyerProjection\>) =  org.osgeo.proj4j.proj.DenoyerProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00a2: CONST_STR  (r2 I:java.lang.String) =  \"Denoyer Semi\-Elliptical\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00a4: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x00a7: CONST_STR  (r0 I:java.lang.String) =  \"eck1\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00a9: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Eckert1Projection\>) =  org.osgeo.proj4j.proj.Eckert1Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00ab: CONST_STR  (r2 I:java.lang.String) =  \"Eckert I\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00ad: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x00b0: CONST_STR  (r0 I:java.lang.String) =  \"eck2\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00b2: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Eckert2Projection\>) =  org.osgeo.proj4j.proj.Eckert2Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00b4: CONST_STR  (r2 I:java.lang.String) =  \"Eckert II\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00b6: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x00b9: CONST_STR  (r0 I:java.lang.String) =  \"eck4\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00bb: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Eckert4Projection\>) =  org.osgeo.proj4j.proj.Eckert4Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00bd: CONST_STR  (r2 I:java.lang.String) =  \"Eckert IV\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00bf: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x00c2: CONST_STR  (r0 I:java.lang.String) =  \"eck5\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00c4: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Eckert5Projection\>) =  org.osgeo.proj4j.proj.Eckert5Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00c6: CONST_STR  (r2 I:java.lang.String) =  \"Eckert V\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00c8: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x00cb: CONST_STR  (r0 I:java.lang.String) =  \"eck6\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00cd: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Eckert6Projection\>) =  org.osgeo.proj4j.proj.Eckert6Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00cf: CONST_STR  (r2 I:java.lang.String) =  \"Eckert VI\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00d1: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x00d4: CONST_STR  (r0 I:java.lang.String) =  \"eqc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00d6: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.PlateCarreeProjection\>) =  org.osgeo.proj4j.proj.PlateCarreeProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00d8: CONST_STR  (r2 I:java.lang.String) =  \"Equidistant Cylindrical (Plate Caree)\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00da: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x00dd: CONST_STR  (r0 I:java.lang.String) =  \"eqdc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00df: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.EquidistantConicProjection\>) =  org.osgeo.proj4j.proj.EquidistantConicProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00e1: CONST_STR  (r2 I:java.lang.String) =  \"Equidistant Conic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00e3: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x00e6: CONST_STR  (r0 I:java.lang.String) =  \"euler\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00e8: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.EulerProjection\>) =  org.osgeo.proj4j.proj.EulerProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00ea: CONST_STR  (r2 I:java.lang.String) =  \"Euler\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00ec: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x00ef: CONST_STR  (r0 I:java.lang.String) =  \"fahey\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00f1: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.FaheyProjection\>) =  org.osgeo.proj4j.proj.FaheyProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00f3: CONST_STR  (r2 I:java.lang.String) =  \"Fahey\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00f5: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x00f8: CONST_STR  (r0 I:java.lang.String) =  \"fouc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00fa: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.FoucautProjection\>) =  org.osgeo.proj4j.proj.FoucautProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x00fc: CONST_STR  (r2 I:java.lang.String) =  \"Foucaut\" A[Catch:\{ all \-\> 0x0316 \}]\l0x00fe: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0101: CONST_STR  (r0 I:java.lang.String) =  \"fouc_s\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0103: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.FoucautSinusoidalProjection\>) =  org.osgeo.proj4j.proj.FoucautSinusoidalProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0105: CONST_STR  (r2 I:java.lang.String) =  \"Foucaut Sinusoidal\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0107: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x010a: CONST_STR  (r0 I:java.lang.String) =  \"gall\" A[Catch:\{ all \-\> 0x0316 \}]\l0x010c: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.GallProjection\>) =  org.osgeo.proj4j.proj.GallProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x010e: CONST_STR  (r2 I:java.lang.String) =  \"Gall (Gall Stereographic)\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0110: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0113: CONST_STR  (r0 I:java.lang.String) =  \"gnom\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0115: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.GnomonicAzimuthalProjection\>) =  org.osgeo.proj4j.proj.GnomonicAzimuthalProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0117: CONST_STR  (r2 I:java.lang.String) =  \"Gnomonic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0119: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x011c: CONST_STR  (r0 I:java.lang.String) =  \"goode\" A[Catch:\{ all \-\> 0x0316 \}]\l0x011e: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.GoodeProjection\>) =  org.osgeo.proj4j.proj.GoodeProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0120: CONST_STR  (r2 I:java.lang.String) =  \"Goode Homolosine\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0122: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0125: CONST_STR  (r0 I:java.lang.String) =  \"hammer\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0127: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.HammerProjection\>) =  org.osgeo.proj4j.proj.HammerProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0129: CONST_STR  (r2 I:java.lang.String) =  \"Hammer & Eckert\-Greifendorff\" A[Catch:\{ all \-\> 0x0316 \}]\l0x012b: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x012e: CONST_STR  (r0 I:java.lang.String) =  \"hatano\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0130: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.HatanoProjection\>) =  org.osgeo.proj4j.proj.HatanoProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0132: CONST_STR  (r2 I:java.lang.String) =  \"Hatano Asymmetrical Equal Area\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0134: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0137: CONST_STR  (r0 I:java.lang.String) =  \"kav5\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0139: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.KavraiskyVProjection\>) =  org.osgeo.proj4j.proj.KavraiskyVProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x013b: CONST_STR  (r2 I:java.lang.String) =  \"Kavraisky V\" A[Catch:\{ all \-\> 0x0316 \}]\l0x013d: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0140: CONST_STR  (r0 I:java.lang.String) =  \"laea\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0142: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection\>) =  org.osgeo.proj4j.proj.LambertAzimuthalEqualAreaProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0144: CONST_STR  (r2 I:java.lang.String) =  \"Lambert Azimuthal Equal Area\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0146: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0149: CONST_STR  (r0 I:java.lang.String) =  \"lagrng\" A[Catch:\{ all \-\> 0x0316 \}]\l0x014b: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.LagrangeProjection\>) =  org.osgeo.proj4j.proj.LagrangeProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x014d: CONST_STR  (r2 I:java.lang.String) =  \"Lagrange\" A[Catch:\{ all \-\> 0x0316 \}]\l0x014f: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0152: CONST_STR  (r0 I:java.lang.String) =  \"larr\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0154: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.LarriveeProjection\>) =  org.osgeo.proj4j.proj.LarriveeProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0156: CONST_STR  (r2 I:java.lang.String) =  \"Larrivee\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0158: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x015b: CONST_STR  (r0 I:java.lang.String) =  \"lask\" A[Catch:\{ all \-\> 0x0316 \}]\l0x015d: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.LaskowskiProjection\>) =  org.osgeo.proj4j.proj.LaskowskiProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x015f: CONST_STR  (r2 I:java.lang.String) =  \"Laskowski\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0161: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0164: CONST_STR  (r0 I:java.lang.String) =  \"latlong\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0166: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.LongLatProjection\>) =  org.osgeo.proj4j.proj.LongLatProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0168: CONST_STR  (r2 I:java.lang.String) =  \"Lat\/Long\" A[Catch:\{ all \-\> 0x0316 \}]\l0x016a: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x016d: CONST_STR  (r0 I:java.lang.String) =  \"longlat\" A[Catch:\{ all \-\> 0x0316 \}]\l0x016f: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.LongLatProjection\>) =  org.osgeo.proj4j.proj.LongLatProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0171: CONST_STR  (r2 I:java.lang.String) =  \"Lat\/Long\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0173: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0176: CONST_STR  (r0 I:java.lang.String) =  \"lcc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0178: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.LambertConformalConicProjection\>) =  org.osgeo.proj4j.proj.LambertConformalConicProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x017a: CONST_STR  (r2 I:java.lang.String) =  \"Lambert Conformal Conic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x017c: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x017f: CONST_STR  (r0 I:java.lang.String) =  \"leac\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0181: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.LambertEqualAreaConicProjection\>) =  org.osgeo.proj4j.proj.LambertEqualAreaConicProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0183: CONST_STR  (r2 I:java.lang.String) =  \"Lambert Equal Area Conic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0185: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0188: CONST_STR  (r0 I:java.lang.String) =  \"loxim\" A[Catch:\{ all \-\> 0x0316 \}]\l0x018a: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.LoximuthalProjection\>) =  org.osgeo.proj4j.proj.LoximuthalProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x018c: CONST_STR  (r2 I:java.lang.String) =  \"Loximuthal\" A[Catch:\{ all \-\> 0x0316 \}]\l0x018e: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0191: CONST_STR  (r0 I:java.lang.String) =  \"lsat\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0193: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.LandsatProjection\>) =  org.osgeo.proj4j.proj.LandsatProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0195: CONST_STR  (r2 I:java.lang.String) =  \"Space oblique for LANDSAT\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0197: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x019a: CONST_STR  (r0 I:java.lang.String) =  \"mbt_fps\" A[Catch:\{ all \-\> 0x0316 \}]\l0x019c: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.McBrydeThomasFlatPolarSine2Projection\>) =  org.osgeo.proj4j.proj.McBrydeThomasFlatPolarSine2Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x019e: CONST_STR  (r2 I:java.lang.String) =  \"McBryde\-Thomas Flat\-Pole Sine (No. 2)\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01a0: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01a3: CONST_STR  (r0 I:java.lang.String) =  \"mbtfpp\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01a5: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.McBrydeThomasFlatPolarParabolicProjection\>) =  org.osgeo.proj4j.proj.McBrydeThomasFlatPolarParabolicProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x01a7: CONST_STR  (r2 I:java.lang.String) =  \"McBride\-Thomas Flat\-Polar Parabolic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01a9: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01ac: CONST_STR  (r0 I:java.lang.String) =  \"mbtfpq\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01ae: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.McBrydeThomasFlatPolarQuarticProjection\>) =  org.osgeo.proj4j.proj.McBrydeThomasFlatPolarQuarticProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x01b0: CONST_STR  (r2 I:java.lang.String) =  \"McBryde\-Thomas Flat\-Polar Quartic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01b2: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01b5: CONST_STR  (r0 I:java.lang.String) =  \"merc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01b7: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.MercatorProjection\>) =  org.osgeo.proj4j.proj.MercatorProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x01b9: CONST_STR  (r2 I:java.lang.String) =  \"Mercator\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01bb: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01be: CONST_STR  (r0 I:java.lang.String) =  \"mill\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01c0: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.MillerProjection\>) =  org.osgeo.proj4j.proj.MillerProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x01c2: CONST_STR  (r2 I:java.lang.String) =  \"Miller Cylindrical\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01c4: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01c7: CONST_STR  (r0 I:java.lang.String) =  \"moll\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01c9: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.MolleweideProjection\>) =  org.osgeo.proj4j.proj.MolleweideProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x01cb: CONST_STR  (r2 I:java.lang.String) =  \"Mollweide\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01cd: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01d0: CONST_STR  (r0 I:java.lang.String) =  \"murd1\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01d2: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Murdoch1Projection\>) =  org.osgeo.proj4j.proj.Murdoch1Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x01d4: CONST_STR  (r2 I:java.lang.String) =  \"Murdoch I\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01d6: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01d9: CONST_STR  (r0 I:java.lang.String) =  \"murd2\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01db: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Murdoch2Projection\>) =  org.osgeo.proj4j.proj.Murdoch2Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x01dd: CONST_STR  (r2 I:java.lang.String) =  \"Murdoch II\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01df: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01e2: CONST_STR  (r0 I:java.lang.String) =  \"murd3\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01e4: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Murdoch3Projection\>) =  org.osgeo.proj4j.proj.Murdoch3Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x01e6: CONST_STR  (r2 I:java.lang.String) =  \"Murdoch III\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01e8: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01eb: CONST_STR  (r0 I:java.lang.String) =  \"nell\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01ed: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.NellProjection\>) =  org.osgeo.proj4j.proj.NellProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x01ef: CONST_STR  (r2 I:java.lang.String) =  \"Nell\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01f1: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01f4: CONST_STR  (r0 I:java.lang.String) =  \"nicol\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01f6: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.NicolosiProjection\>) =  org.osgeo.proj4j.proj.NicolosiProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x01f8: CONST_STR  (r2 I:java.lang.String) =  \"Nicolosi Globular\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01fa: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x01fd: CONST_STR  (r0 I:java.lang.String) =  \"nsper\" A[Catch:\{ all \-\> 0x0316 \}]\l0x01ff: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.PerspectiveProjection\>) =  org.osgeo.proj4j.proj.PerspectiveProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0201: CONST_STR  (r2 I:java.lang.String) =  \"Near\-sided perspective\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0203: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0206: CONST_STR  (r0 I:java.lang.String) =  \"omerc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0208: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.ObliqueMercatorProjection\>) =  org.osgeo.proj4j.proj.ObliqueMercatorProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x020a: CONST_STR  (r2 I:java.lang.String) =  \"Oblique Mercator\" A[Catch:\{ all \-\> 0x0316 \}]\l0x020c: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x020f: CONST_STR  (r0 I:java.lang.String) =  \"ortho\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0211: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.OrthographicAzimuthalProjection\>) =  org.osgeo.proj4j.proj.OrthographicAzimuthalProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0213: CONST_STR  (r2 I:java.lang.String) =  \"Orthographic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0215: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0218: CONST_STR  (r0 I:java.lang.String) =  \"pconic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x021a: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.PerspectiveConicProjection\>) =  org.osgeo.proj4j.proj.PerspectiveConicProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x021c: CONST_STR  (r2 I:java.lang.String) =  \"Perspective Conic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x021e: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0221: CONST_STR  (r0 I:java.lang.String) =  \"poly\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0223: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.PolyconicProjection\>) =  org.osgeo.proj4j.proj.PolyconicProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0225: CONST_STR  (r2 I:java.lang.String) =  \"Polyconic (American)\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0227: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x022a: CONST_STR  (r0 I:java.lang.String) =  \"putp2\" A[Catch:\{ all \-\> 0x0316 \}]\l0x022c: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.PutninsP2Projection\>) =  org.osgeo.proj4j.proj.PutninsP2Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x022e: CONST_STR  (r2 I:java.lang.String) =  \"Putnins P2\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0230: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0233: CONST_STR  (r0 I:java.lang.String) =  \"putp4p\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0235: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.PutninsP4Projection\>) =  org.osgeo.proj4j.proj.PutninsP4Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0237: CONST_STR  (r2 I:java.lang.String) =  \"Putnins P4'\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0239: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x023c: CONST_STR  (r0 I:java.lang.String) =  \"putp5\" A[Catch:\{ all \-\> 0x0316 \}]\l0x023e: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.PutninsP5Projection\>) =  org.osgeo.proj4j.proj.PutninsP5Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0240: CONST_STR  (r2 I:java.lang.String) =  \"Putnins P5\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0242: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0245: CONST_STR  (r0 I:java.lang.String) =  \"putp5p\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0247: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.PutninsP5PProjection\>) =  org.osgeo.proj4j.proj.PutninsP5PProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0249: CONST_STR  (r2 I:java.lang.String) =  \"Putnins P5'\" A[Catch:\{ all \-\> 0x0316 \}]\l0x024b: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x024e: CONST_STR  (r0 I:java.lang.String) =  \"qua_aut\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0250: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.QuarticAuthalicProjection\>) =  org.osgeo.proj4j.proj.QuarticAuthalicProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0252: CONST_STR  (r2 I:java.lang.String) =  \"Quartic Authalic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0254: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0257: CONST_STR  (r0 I:java.lang.String) =  \"robin\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0259: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.RobinsonProjection\>) =  org.osgeo.proj4j.proj.RobinsonProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x025b: CONST_STR  (r2 I:java.lang.String) =  \"Robinson\" A[Catch:\{ all \-\> 0x0316 \}]\l0x025d: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0260: CONST_STR  (r0 I:java.lang.String) =  \"rpoly\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0262: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.RectangularPolyconicProjection\>) =  org.osgeo.proj4j.proj.RectangularPolyconicProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0264: CONST_STR  (r2 I:java.lang.String) =  \"Rectangular Polyconic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0266: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0269: CONST_STR  (r0 I:java.lang.String) =  \"sinu\" A[Catch:\{ all \-\> 0x0316 \}]\l0x026b: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.SinusoidalProjection\>) =  org.osgeo.proj4j.proj.SinusoidalProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x026d: CONST_STR  (r2 I:java.lang.String) =  \"Sinusoidal (Sanson\-Flamsteed)\" A[Catch:\{ all \-\> 0x0316 \}]\l0x026f: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0272: CONST_STR  (r0 I:java.lang.String) =  \"somerc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0274: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.SwissObliqueMercatorProjection\>) =  org.osgeo.proj4j.proj.SwissObliqueMercatorProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0276: CONST_STR  (r2 I:java.lang.String) =  \"Swiss Oblique Mercator\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0278: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x027b: CONST_STR  (r0 I:java.lang.String) =  \"stere\" A[Catch:\{ all \-\> 0x0316 \}]\l0x027d: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.StereographicAzimuthalProjection\>) =  org.osgeo.proj4j.proj.StereographicAzimuthalProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x027f: CONST_STR  (r2 I:java.lang.String) =  \"Stereographic\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0281: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0284: CONST_STR  (r0 I:java.lang.String) =  \"sterea\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0286: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection\>) =  org.osgeo.proj4j.proj.ObliqueStereographicAlternativeProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0288: CONST_STR  (r2 I:java.lang.String) =  \"Oblique Stereographic Alternative\" A[Catch:\{ all \-\> 0x0316 \}]\l0x028a: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x028d: CONST_STR  (r0 I:java.lang.String) =  \"tcc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x028f: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.TranverseCentralCylindricalProjection\>) =  org.osgeo.proj4j.proj.TranverseCentralCylindricalProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0291: CONST_STR  (r2 I:java.lang.String) =  \"Transverse Central Cylindrical\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0293: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0296: CONST_STR  (r0 I:java.lang.String) =  \"tcea\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0298: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.TransverseCylindricalEqualArea\>) =  org.osgeo.proj4j.proj.TransverseCylindricalEqualArea.class A[Catch:\{ all \-\> 0x0316 \}]\l0x029a: CONST_STR  (r2 I:java.lang.String) =  \"Transverse Cylindrical Equal Area\" A[Catch:\{ all \-\> 0x0316 \}]\l0x029c: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x029f: CONST_STR  (r0 I:java.lang.String) =  \"tmerc\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02a1: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.TransverseMercatorProjection\>) =  org.osgeo.proj4j.proj.TransverseMercatorProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02a3: CONST_STR  (r2 I:java.lang.String) =  \"Transverse Mercator\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02a5: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x02a8: CONST_STR  (r0 I:java.lang.String) =  \"urmfps\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02aa: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.UrmaevFlatPolarSinusoidalProjection\>) =  org.osgeo.proj4j.proj.UrmaevFlatPolarSinusoidalProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02ac: CONST_STR  (r2 I:java.lang.String) =  \"Urmaev Flat\-Polar Sinusoidal\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02ae: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x02b1: CONST_STR  (r0 I:java.lang.String) =  \"utm\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02b3: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.TransverseMercatorProjection\>) =  org.osgeo.proj4j.proj.TransverseMercatorProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02b5: CONST_STR  (r2 I:java.lang.String) =  \"Universal Transverse Mercator (UTM)\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02b7: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x02ba: CONST_STR  (r0 I:java.lang.String) =  \"vandg\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02bc: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.VanDerGrintenProjection\>) =  org.osgeo.proj4j.proj.VanDerGrintenProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02be: CONST_STR  (r2 I:java.lang.String) =  \"van der Grinten (I)\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02c0: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x02c3: CONST_STR  (r0 I:java.lang.String) =  \"vitk1\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02c5: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.VitkovskyProjection\>) =  org.osgeo.proj4j.proj.VitkovskyProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02c7: CONST_STR  (r2 I:java.lang.String) =  \"Vitkovsky I\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02c9: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x02cc: CONST_STR  (r0 I:java.lang.String) =  \"wag1\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02ce: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Wagner1Projection\>) =  org.osgeo.proj4j.proj.Wagner1Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02d0: CONST_STR  (r2 I:java.lang.String) =  \"Wagner I (Kavraisky VI)\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02d2: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x02d5: CONST_STR  (r0 I:java.lang.String) =  \"wag2\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02d7: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Wagner2Projection\>) =  org.osgeo.proj4j.proj.Wagner2Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02d9: CONST_STR  (r2 I:java.lang.String) =  \"Wagner II\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02db: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x02de: CONST_STR  (r0 I:java.lang.String) =  \"wag3\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02e0: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Wagner3Projection\>) =  org.osgeo.proj4j.proj.Wagner3Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02e2: CONST_STR  (r2 I:java.lang.String) =  \"Wagner III\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02e4: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x02e7: CONST_STR  (r0 I:java.lang.String) =  \"wag4\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02e9: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Wagner4Projection\>) =  org.osgeo.proj4j.proj.Wagner4Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02eb: CONST_STR  (r2 I:java.lang.String) =  \"Wagner IV\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02ed: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x02f0: CONST_STR  (r0 I:java.lang.String) =  \"wag5\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02f2: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Wagner5Projection\>) =  org.osgeo.proj4j.proj.Wagner5Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02f4: CONST_STR  (r2 I:java.lang.String) =  \"Wagner V\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02f6: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x02f9: CONST_STR  (r0 I:java.lang.String) =  \"wag7\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02fb: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.Wagner7Projection\>) =  org.osgeo.proj4j.proj.Wagner7Projection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x02fd: CONST_STR  (r2 I:java.lang.String) =  \"Wagner VII\" A[Catch:\{ all \-\> 0x0316 \}]\l0x02ff: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x0302: CONST_STR  (r0 I:java.lang.String) =  \"weren\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0304: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.WerenskioldProjection\>) =  org.osgeo.proj4j.proj.WerenskioldProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x0306: CONST_STR  (r2 I:java.lang.String) =  \"Werenskiold I\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0308: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}]\l0x030b: CONST_STR  (r0 I:java.lang.String) =  \"wintri\" A[Catch:\{ all \-\> 0x0316 \}]\l0x030d: CONST_CLASS  (r1 I:java.lang.Class\<org.osgeo.proj4j.proj.WinkelTripelProjection\>) =  org.osgeo.proj4j.proj.WinkelTripelProjection.class A[Catch:\{ all \-\> 0x0316 \}]\l0x030f: CONST_STR  (r2 I:java.lang.String) =  \"Winkel Tripel\" A[Catch:\{ all \-\> 0x0316 \}]\l0x0311: INVOKE  \l  (r3 I:org.osgeo.proj4j.Registry)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.Class)\l  (r2 I:java.lang.String)\l org.osgeo.proj4j.Registry.register(java.lang.String, java.lang.Class, java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0316 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0314|0x0314: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0315|0x0315: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0316|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0316: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0317|0x0317: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0318|0x0318: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private synchronized void org.osgeo.proj4j.Registry.initialize((r3 'this' I:org.osgeo.proj4j.Registry A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

