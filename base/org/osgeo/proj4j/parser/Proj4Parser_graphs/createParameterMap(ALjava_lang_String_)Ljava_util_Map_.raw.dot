digraph "CFG fororg.osgeo.proj4j.parser.Proj4Parser.createParameterMap([Ljava\/lang\/String;)Ljava\/util\/Map;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0002: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: ARRAY_LENGTH  (r3 I:int) = (r7 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:11:0x0037 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: AGET  (r3 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x000c: CONST_STR  (r4 I:java.lang.String) =  \"+\" \l0x000e: INVOKE  (r4 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0015: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String), (r4 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: CONST  (r4 I:?[int, float, short, byte, char]) = (61 ?[int, float, short, byte, char]) \l0x001b: INVOKE  (r4 I:int) = (r3 I:java.lang.String), (r4 I:int) java.lang.String.indexOf(int):int type: VIRTUAL \l0x001f: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0030 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: INVOKE  (r5 I:java.lang.String) = (r3 I:java.lang.String), (r1 I:int), (r4 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0026: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x0028: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String), (r4 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l0x002c: INVOKE  \l  (r0 I:java.util.Map)\l  (r5 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0031: INVOKE  \l  (r0 I:java.util.Map)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: RETURN  (r0 I:java.util.Map) \l}"];
MethodNode[shape=record,label="{private java.util.Map org.osgeo.proj4j.parser.Proj4Parser.createParameterMap((r6 'this' I:org.osgeo.proj4j.parser.Proj4Parser A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_1;
}

