digraph "CFG fororg.osgeo.proj4j.parser.Proj4Parser.parseEllipsoid(Ljava\/util\/Map;Lorg\/osgeo\/proj4j\/parser\/DatumParameters;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = (java.lang.String) r6.get(org.osgeo.proj4j.parser.Proj4Keyword.ellps)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0 == null) goto L_0x002d\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|org.osgeo.proj4j.datum.Ellipsoid r1 = r5.registry.getEllipsoid(r0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r1 == null) goto L_0x0016\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|r7.setEllipsoid(r1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|java.lang.StringBuilder r7 = new java.lang.StringBuilder()\lr7.append(\"Unknown ellipsoid: \")\lr7.append(r0)\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|throw new org.osgeo.proj4j.InvalidValueException(r7.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|java.lang.String r0 = (java.lang.String) r6.get(org.osgeo.proj4j.parser.Proj4Keyword.f305a)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|if (r0 == null) goto L_0x003e\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|r7.setA(java.lang.Double.parseDouble(r0))\l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|java.lang.String r0 = (java.lang.String) r6.get(org.osgeo.proj4j.parser.Proj4Keyword.f307es)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|if (r0 == null) goto L_0x004f\l}"];
Node_12 [shape=record,label="{12\:\ 0x0048|r7.setES(java.lang.Double.parseDouble(r0))\l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|java.lang.String r0 = (java.lang.String) r6.get(org.osgeo.proj4j.parser.Proj4Keyword.f311rf)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|if (r0 == null) goto L_0x0060\l}"];
Node_15 [shape=record,label="{15\:\ 0x0059|r7.setRF(java.lang.Double.parseDouble(r0))\l}"];
Node_16 [shape=record,label="{16\:\ 0x0060|java.lang.String r0 = (java.lang.String) r6.get(org.osgeo.proj4j.parser.Proj4Keyword.f308f)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0068|if (r0 == null) goto L_0x0071\l}"];
Node_18 [shape=record,label="{18\:\ 0x006a|r7.setF(java.lang.Double.parseDouble(r0))\l}"];
Node_19 [shape=record,label="{19\:\ 0x0071|java.lang.String r0 = (java.lang.String) r6.get(org.osgeo.proj4j.parser.Proj4Keyword.f306b)\l}"];
Node_20 [shape=record,label="{20\:\ 0x007b|if (r0 == null) goto L_0x0085\l}"];
Node_21 [shape=record,label="{21\:\ 0x007d|double r3 = java.lang.Double.parseDouble(r0)\lr7.setB(r3)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0085|r3 = 0.0d\l}"];
Node_23 [shape=record,label="{23\:\ 0x0086|PHI: r3 \l  PHI: (r3v0 double) = (r3v1 double), (r3v2 double) binds: [B:22:0x0085, B:21:0x007d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0088|if ((r3 \> 0.0d ? 1 : (r3 == 0.0d ? 0 : \-1)) != 0) goto L_0x0097\l}"];
Node_25 [shape=record,label="{25\:\ 0x008a|r7.getA()\ljava.lang.Math.sqrt(1.0d \- r7.getES())\l}"];
Node_26 [shape=record,label="{26\:\ 0x0097|parseEllipsoidModifiers(r6, r7)\l}"];
Node_27 [shape=record,label="{27\:\ 0x009a|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void org.osgeo.proj4j.parser.Proj4Parser.parseEllipsoid((r5v0 'this' org.osgeo.proj4j.parser.Proj4Parser A[IMMUTABLE_TYPE, THIS]), (r6v0 java.util.Map A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.osgeo.proj4j.parser.DatumParameters A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

