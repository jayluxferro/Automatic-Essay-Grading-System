digraph "CFG fororg.osgeo.proj4j.parser.ParameterUtil.parseAngle(Ljava\/lang\/String;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:org.osgeo.proj4j.units.AngleFormat) =  org.osgeo.proj4j.parser.ParameterUtil.format org.osgeo.proj4j.units.AngleFormat \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r2 I:java.lang.Number) = \l  (r0 I:org.osgeo.proj4j.units.AngleFormat)\l  (r2 I:java.lang.String)\l  (r1 I:java.text.ParsePosition)\l org.osgeo.proj4j.units.AngleFormat.parse(java.lang.String, java.text.ParsePosition):java.lang.Number type: VIRTUAL \l0x0007: INVOKE  (r0 I:double) = (r2 I:java.lang.Number) java.lang.Number.doubleValue():double type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public static double org.osgeo.proj4j.parser.ParameterUtil.parseAngle((r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

