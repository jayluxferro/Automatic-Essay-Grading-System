digraph "CFG fororg.osgeo.proj4j.parser.DatumParameters.getDatum()Lorg\/osgeo\/proj4j\/datum\/Datum;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osgeo.proj4j.datum.Datum) = (r5 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.datum org.osgeo.proj4j.datum.Datum \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:org.osgeo.proj4j.datum.Datum) = (r5 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.datum org.osgeo.proj4j.datum.Datum \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r0 I:org.osgeo.proj4j.datum.Datum) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IGET  (r0 I:org.osgeo.proj4j.datum.Ellipsoid) = (r5 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.ellipsoid org.osgeo.proj4j.datum.Ellipsoid \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0014 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: INVOKE  (r0 I:boolean) = (r5 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.isDefinedExplicitly():boolean type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0014 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: SGET  (r0 I:org.osgeo.proj4j.datum.Datum) =  org.osgeo.proj4j.datum.Datum.WGS84 org.osgeo.proj4j.datum.Datum \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: RETURN  (r0 I:org.osgeo.proj4j.datum.Datum) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: IGET  (r0 I:org.osgeo.proj4j.datum.Ellipsoid) = (r5 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.ellipsoid org.osgeo.proj4j.datum.Ellipsoid \l0x0016: SGET  (r1 I:org.osgeo.proj4j.datum.Ellipsoid) =  org.osgeo.proj4j.datum.Ellipsoid.WGS84 org.osgeo.proj4j.datum.Ellipsoid \l}"];
Node_11 [shape=record,label="{11\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x001d \l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|0x001a: SGET  (r0 I:org.osgeo.proj4j.datum.Datum) =  org.osgeo.proj4j.datum.Datum.WGS84 org.osgeo.proj4j.datum.Datum \l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|0x001c: RETURN  (r0 I:org.osgeo.proj4j.datum.Datum) \l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|0x001d: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.datum.Datum) =  org.osgeo.proj4j.datum.Datum \l0x001f: CONST_STR  (r1 I:java.lang.String) =  \"User\" \l0x0021: IGET  (r2 I:double[]) = (r5 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.datumTransform double[] \l0x0023: INVOKE  (r3 I:org.osgeo.proj4j.datum.Ellipsoid) = (r5 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.getEllipsoid():org.osgeo.proj4j.datum.Ellipsoid type: VIRTUAL \l0x0027: CONST_STR  (r4 I:java.lang.String) =  \"User\-defined\" \l0x0029: INVOKE  \l  (r0 I:org.osgeo.proj4j.datum.Datum)\l  (r1 I:java.lang.String)\l  (r2 I:double[])\l  (r3 I:org.osgeo.proj4j.datum.Ellipsoid)\l  (r4 I:java.lang.String)\l org.osgeo.proj4j.datum.Datum.\<init\>(java.lang.String, double[], org.osgeo.proj4j.datum.Ellipsoid, java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|0x002c: RETURN  (r0 I:org.osgeo.proj4j.datum.Datum) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.datum.Datum org.osgeo.proj4j.parser.DatumParameters.getDatum((r5 'this' I:org.osgeo.proj4j.parser.DatumParameters A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

