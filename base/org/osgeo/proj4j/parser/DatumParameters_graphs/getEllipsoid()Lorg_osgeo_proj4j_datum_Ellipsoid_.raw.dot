digraph "CFG fororg.osgeo.proj4j.parser.DatumParameters.getEllipsoid()Lorg\/osgeo\/proj4j\/datum\/Ellipsoid;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osgeo.proj4j.datum.Ellipsoid) = (r8 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.ellipsoid org.osgeo.proj4j.datum.Ellipsoid \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:org.osgeo.proj4j.datum.Ellipsoid) = (r8 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.ellipsoid org.osgeo.proj4j.datum.Ellipsoid \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r0 I:org.osgeo.proj4j.datum.Ellipsoid) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: NEW_INSTANCE  (r0 I:org.osgeo.proj4j.datum.Ellipsoid) =  org.osgeo.proj4j.datum.Ellipsoid \l0x0009: CONST_STR  (r2 I:java.lang.String) =  \"user\" \l0x000b: IGET  (r3 I:double) = (r8 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.a double \l0x000d: IGET  (r5 I:double) = (r8 I:org.osgeo.proj4j.parser.DatumParameters) org.osgeo.proj4j.parser.DatumParameters.es double \l0x000f: CONST_STR  (r7 I:java.lang.String) =  \"User\-defined\" \l0x0011: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  \l  (r1 I:org.osgeo.proj4j.datum.Ellipsoid)\l  (r2 I:java.lang.String)\l  (r3 I:double)\l  (r5 I:double)\l  (r7 I:java.lang.String)\l org.osgeo.proj4j.datum.Ellipsoid.\<init\>(java.lang.String, double, double, java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: RETURN  (r0 I:org.osgeo.proj4j.datum.Ellipsoid) \l}"];
MethodNode[shape=record,label="{public org.osgeo.proj4j.datum.Ellipsoid org.osgeo.proj4j.parser.DatumParameters.getEllipsoid((r8 'this' I:org.osgeo.proj4j.parser.DatumParameters A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

