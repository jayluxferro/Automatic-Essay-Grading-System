digraph "CFG fororg.proj4.PJ.\<init\>(Lorg\/proj4\/PJ;Lorg\/proj4\/PJ$Type;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5 == null) goto L_0x003e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r6 != org.proj4.C1513PJ.Type.GEOGRAPHIC) goto L_0x0022\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|r4.ptr = allocateGeoPJ(r5)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if ((r4.ptr \> 0 ? 1 : (r4.ptr == 0 ? 0 : \-1)) == 0) goto L_0x0018\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018}"];
Node_8 [shape=record,label="{8\:\ 0x0021|throw new java.lang.IllegalArgumentException(r5.getLastError())\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Can not derive the \")\lr0.append(r6)\lr0.append(\" type.\")\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
Node_11 [shape=record,label="{11\:\ 0x003e}"];
Node_12 [shape=record,label="{12\:\ 0x0045|throw new java.lang.NullPointerException(\"The CRS must be non\-null.\")\l}"];
MethodNode[shape=record,label="{public void org.proj4.PJ.\<init\>((r4v0 'this' org.proj4.PJ A[IMMUTABLE_TYPE, THIS]), (r5v0 org.proj4.PJ A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 org.proj4.PJ$Type A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.IllegalArgumentException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_11 -> Node_12;
}

