digraph "CFG fororg.mapsforge.core.util.MercatorProjection.pixelXToTileXWithScaleFactor(DDI)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CAST  (r0 I:double) = (double) (r6 I:int) \l0x0001: ARITH  (r2 I:double) = (r2 I:double) \/ (r0 I:double) \l0x0002: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0004: INVOKE  (r2 I:double) = (r2 I:double), (r0 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0008: CONST  (r0 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x000a: ARITH  (r4 I:double) = (r4 I:double) \- (r0 I:double) \l0x000b: INVOKE  (r2 I:double) = (r2 I:double), (r4 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x000f: CAST  (r2 I:int) = (int) (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN  (r2 I:int) \l}"];
MethodNode[shape=record,label="{public static int org.mapsforge.core.util.MercatorProjection.pixelXToTileXWithScaleFactor((r2 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

