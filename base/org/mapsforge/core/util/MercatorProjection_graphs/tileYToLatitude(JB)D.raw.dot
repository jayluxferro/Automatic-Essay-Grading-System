digraph "CFG fororg.mapsforge.core.util.MercatorProjection.tileYToLatitude(JB)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (256(0x100, double:1.265E\-321) ?[long, double]) \l0x0002: ARITH  (r2 I:long) = (r2 I:long) * (r0 I:long) \l0x0004: CAST  (r2 I:double) = (double) (r2 I:long) \l0x0005: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (256(0x100, float:3.59E\-43) ?[int, float, short, byte, char])\l \l0x0007: INVOKE  (r0 I:long) = (r4 I:byte), (r0 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC \l0x000b: INVOKE  (r2 I:double) = (r2 I:double), (r0 I:long) org.mapsforge.core.util.MercatorProjection.pixelYToLatitude(double, long):double type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r2 I:double) \l}"];
MethodNode[shape=record,label="{public static double org.mapsforge.core.util.MercatorProjection.tileYToLatitude((r2 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

