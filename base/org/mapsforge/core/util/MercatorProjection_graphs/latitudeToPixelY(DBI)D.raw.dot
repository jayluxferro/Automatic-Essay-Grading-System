digraph "CFG fororg.mapsforge.core.util.MercatorProjection.latitudeToPixelY(DBI)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = \l  (4580687790476533049(0x3f91df46a2529d39, double:0.017453292519943295) ?[long, double])\l \l0x0005: ARITH  (r4 I:double) = (r4 I:double) * (r0 I:double) \l0x0007: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.sin(double):double type: STATIC \l0x000b: INVOKE  (r6 I:long) = (r6 I:byte), (r7 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC \l0x000f: CONST  (r0 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0011: ARITH  (r2 I:double) = (r4 I:double) + (r0 I:double) \l0x0013: ARITH  (r0 I:double) = (r0 I:double) \- (r4 I:double) \l0x0014: ARITH  (r2 I:double) = (r2 I:double) \/ (r0 I:double) \l0x0015: INVOKE  (r4 I:double) = (r2 I:double) java.lang.Math.log(double):double type: STATIC \l0x0019: CONST  (r0 I:?[long, double]) = \l  (4623263855806786840(0x402921fb54442d18, double:12.566370614359172) ?[long, double])\l \l0x001e: ARITH  (r4 I:double) = (r4 I:double) \/ (r0 I:double) \l0x001f: CONST  (r0 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x0021: ARITH  (r0 I:double) = (r0 I:double) \- (r4 I:double) \l0x0022: CAST  (r4 I:double) = (double) (r6 I:long) \l0x0023: ARITH  (r0 I:double) = (r0 I:double) * (r4 I:double) \l0x0025: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x0027: INVOKE  (r6 I:double) = (r6 I:double), (r0 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x002b: INVOKE  (r4 I:double) = (r6 I:double), (r4 I:double) java.lang.Math.min(double, double):double type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x002f|0x002f: RETURN  (r4 I:double) \l}"];
MethodNode[shape=record,label="{public static double org.mapsforge.core.util.MercatorProjection.latitudeToPixelY((r4 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

