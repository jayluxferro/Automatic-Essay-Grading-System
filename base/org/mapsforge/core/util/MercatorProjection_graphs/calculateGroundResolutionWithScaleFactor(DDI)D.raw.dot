digraph "CFG fororg.mapsforge.core.util.MercatorProjection.calculateGroundResolutionWithScaleFactor(DDI)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:long) = (r4 I:double), (r6 I:int) org.mapsforge.core.util.MercatorProjection.getMapSizeWithScaleFactor(double, int):long type: STATIC \l0x0004: CONST  (r0 I:?[long, double]) = \l  (4580687790476533049(0x3f91df46a2529d39, double:0.017453292519943295) ?[long, double])\l \l0x0009: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double) \l0x000b: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.cos(double):double type: STATIC \l0x000f: CONST  (r0 I:?[long, double]) = \l  (4720647587546066321(0x41831bf8457ced91, double:4.0075016686E7) ?[long, double])\l \l0x0014: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double) \l0x0016: CAST  (r4 I:double) = (double) (r4 I:long) \l0x0017: ARITH  (r2 I:double) = (r2 I:double) \/ (r4 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN  (r2 I:double) \l}"];
MethodNode[shape=record,label="{public static double org.mapsforge.core.util.MercatorProjection.calculateGroundResolutionWithScaleFactor((r2 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

