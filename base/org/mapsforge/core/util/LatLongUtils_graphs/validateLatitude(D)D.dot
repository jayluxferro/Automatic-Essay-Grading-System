digraph "CFG fororg.mapsforge.core.util.LatLongUtils.validateLatitude(D)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (java.lang.Double.isNaN(r3) != false) goto L_0x0019\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if ((r3 \> \-90.0d ? 1 : (r3 == \-90.0d ? 0 : \-1)) \< 0) goto L_0x0019\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if ((r3 \> 90.0d ? 1 : (r3 == 90.0d ? 0 : \-1)) \> 0) goto L_0x0019\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|RETURN\l|return r3\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"invalid latitude: \")\lr1.append(r3)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public static double org.mapsforge.core.util.LatLongUtils.validateLatitude((r3v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
}

