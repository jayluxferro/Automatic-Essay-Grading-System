digraph "CFG fororg.mapsforge.core.util.LatLongUtils.vincentyDistance(Lorg\/mapsforge\/core\/model\/LatLong;Lorg\/mapsforge\/core\/model\/LatLong;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r44 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.getLongitude():double type: VIRTUAL \l0x0004: INVOKE  (r2 I:double) = (r43 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.getLongitude():double type: VIRTUAL \l0x0008: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0009: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x000d: INVOKE  (r2 I:double) = (r43 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.getLatitude():double type: VIRTUAL \l0x0011: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x0015: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0019: CONST  (r4 I:?[long, double]) = \l  (4607152219366296607(0x3fefe488a57b0c1f, double:0.9966471893352525) ?[long, double])\l \l0x001e: ARITH  (r2 I:double) = (r2 I:double) * (r4 I:double) \l0x0020: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.atan(double):double type: STATIC \l0x0024: INVOKE  (r6 I:double) = (r44 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.getLatitude():double type: VIRTUAL \l0x0028: INVOKE  (r6 I:double) = (r6 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x002c: INVOKE  (r6 I:double) = (r6 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0030: ARITH  (r4 I:double) = (r4 I:double) * (r6 I:double) \l0x0032: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.atan(double):double type: STATIC \l0x0036: INVOKE  (r6 I:double) = (r2 I:double) java.lang.Math.sin(double):double type: STATIC \l0x003a: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.cos(double):double type: STATIC \l0x003e: INVOKE  (r8 I:double) = (r4 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0042: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0046: CONST  (r10 I:?[long, double]) = \l  (4636737291354636288(0x4059000000000000, double:100.0) ?[long, double])\l \l0x0048: MOVE  (r12 I:?[long, double]) = (r10 I:?[long, double]) \l0x0049: MOVE  (r10 I:?[long, double]) = (r0 I:?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x004a|0x004a: INVOKE  (r14 I:double) = (r10 I:double) java.lang.Math.sin(double):double type: STATIC \l0x004e: INVOKE  (r16 I:double) = (r10 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0052: ARITH  (r18 I:double) = (r4 I:double) * (r14 I:double) \l0x0054: ARITH  (r18 I:double) = (r18 I:double) * (r18 I:double) \l0x0056: ARITH  (r20 I:double) = (r2 I:double) * (r8 I:double) \l0x0058: ARITH  (r22 I:double) = (r6 I:double) * (r4 I:double) \l0x005a: ARITH  (r22 I:double) = (r22 I:double) * (r16 I:double) \l0x005c: ARITH  (r20 I:double) = (r20 I:double) \- (r22 I:double) \l0x005e: ARITH  (r20 I:double) = (r20 I:double) * (r20 I:double) \l0x0060: ARITH  (r18 I:double) = (r18 I:double) + (r20 I:double) \l0x0062: MOVE  (r24 I:?[long, double]) = (r12 I:?[long, double]) \l0x0064: INVOKE  (r12 I:double) = (r18 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0068: CONST  (r18 I:?[long, double]) = (0 ?[long, double]) \l0x006a: CMP_L  (r20 I:int) = (r12 I:double), (r18 I:double) \l}"];
Node_2 [shape=record,label="{2\:\ 0x006c|0x006c: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x006f \l}"];
Node_3 [shape=record,label="{3\:\ 0x006e|0x006e: RETURN  (r18 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x006f|0x006f: ARITH  (r20 I:double) = (r6 I:double) * (r8 I:double) \l0x0071: ARITH  (r22 I:double) = (r2 I:double) * (r4 I:double) \l0x0073: ARITH  (r16 I:double) = (r16 I:double) * (r22 I:double) \l0x0075: CONST  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0077: MOVE  (r27 I:?[long, double]) = (r2 I:?[long, double]) \l0x0079: ARITH  (r2 I:double) = (r20 I:double) + (r16 I:double) \l0x007b: INVOKE  (r16 I:double) = (r12 I:double), (r2 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x007f: ARITH  (r22 I:double) = (r22 I:double) * (r14 I:double) \l0x0081: ARITH  (r22 I:double) = (r22 I:double) \/ (r12 I:double) \l0x0083: ARITH  (r14 I:double) = (r22 I:double) * (r22 I:double) \l0x0085: CONST  (r20 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0087: ARITH  (r14 I:double) = (r20 I:double) \- (r14 I:double) \l0x0089: MOVE  (r29 I:?[long, double]) = (r4 I:?[long, double]) \l0x008b: CONST  (r4 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x008d: CMP_L  (r26 I:int) = (r14 I:double), (r18 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x008f|0x008f: IF  (r26 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x009a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0091|0x0091: ARITH  (r31 I:double) = (r6 I:double) * (r4 I:double) \l0x0093: ARITH  (r31 I:double) = (r31 I:double) * (r8 I:double) \l0x0095: ARITH  (r31 I:double) = (r31 I:double) \/ (r14 I:double) \l0x0097: ARITH  (r31 I:double) = (r2 I:double) \- (r31 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x009a|0x009a: MOVE  (r31 I:?[long, double]) = (r18 I:?[long, double]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x009c|0x009c: CONST  (r33 I:?[long, double]) = \l  (4551863079049355560(0x3f2b775a84f3e128, double:2.0955066654671753E\-4) ?[long, double])\l \l0x00a1: ARITH  (r33 I:double) = (r33 I:double) * (r14 I:double) \l0x00a3: CONST  (r35 I:?[long, double]) = \l  (4613937818241073152(0x4008000000000000, double:3.0) ?[long, double])\l \l0x00a5: ARITH  (r35 I:double) = (r35 I:double) * (r14 I:double) \l0x00a7: CONST  (r37 I:?[long, double]) = \l  (4616189618054758400(0x4010000000000000, double:4.0) ?[long, double])\l \l0x00a9: ARITH  (r35 I:double) = (r37 I:double) \- (r35 I:double) \l0x00ab: CONST  (r39 I:?[long, double]) = \l  (4569877477558837544(0x3f6b775a84f3e128, double:0.0033528106647474805) ?[long, double])\l \l0x00b0: ARITH  (r35 I:double) = (r35 I:double) * (r39 I:double) \l0x00b2: ARITH  (r35 I:double) = (r35 I:double) + (r37 I:double) \l0x00b4: ARITH  (r33 I:double) = (r33 I:double) * (r35 I:double) \l0x00b6: ARITH  (r35 I:double) = (r20 I:double) \- (r33 I:double) \l0x00b8: ARITH  (r35 I:double) = (r35 I:double) * (r39 I:double) \l0x00ba: ARITH  (r35 I:double) = (r35 I:double) * (r22 I:double) \l0x00bc: ARITH  (r22 I:double) = (r33 I:double) * (r12 I:double) \l0x00be: ARITH  (r33 I:double) = (r33 I:double) * (r2 I:double) \l0x00c0: CONST  (r39 I:?[long, double]) = \l  (\-4616189618054758400(0xbff0000000000000, double:\-1.0) ?[long, double])\l \l0x00c2: ARITH  (r41 I:double) = (r31 I:double) * (r4 I:double) \l0x00c4: ARITH  (r41 I:double) = (r41 I:double) * (r31 I:double) \l0x00c6: ARITH  (r41 I:double) = (r41 I:double) + (r39 I:double) \l0x00c8: ARITH  (r33 I:double) = (r33 I:double) * (r41 I:double) \l0x00ca: ARITH  (r33 I:double) = (r31 I:double) + (r33 I:double) \l0x00cc: ARITH  (r22 I:double) = (r22 I:double) * (r33 I:double) \l0x00ce: ARITH  (r22 I:double) = (r16 I:double) + (r22 I:double) \l0x00d0: ARITH  (r35 I:double) = (r35 I:double) * (r22 I:double) \l0x00d2: ARITH  (r22 I:double) = (r0 I:double) + (r35 I:double) \l0x00d4: ARITH  (r10 I:double) = (r22 I:double) \- (r10 I:double) \l0x00d6: INVOKE  (r10 I:double) = (r10 I:double) java.lang.Math.abs(double):double type: STATIC \l0x00da: CONST  (r33 I:?[long, double]) = \l  (4427486594234968593(0x3d719799812dea11, double:1.0E\-12) ?[long, double])\l \l0x00df: CMP_L  (r10 I:int) = (r10 I:double), (r33 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x00e1|0x00e1: IF  (r10 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x00f5 \l}"];
Node_10 [shape=record,label="{10\:\ 0x00e3|0x00e3: ARITH  (r10 I:double) = (r24 I:double) \- (r20 I:double) \l0x00e5: CMP_L  (r24 I:int) = (r10 I:double), (r18 I:double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x00e7|0x00e7: IF  (r24 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:13:0x00ec \l}"];
Node_12 [shape=record,label="{12\:\ 0x00e9|0x00e9: MOVE  (r24 I:?[long, double]) = (r10 I:?[long, double]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x00ec|0x00ec: MOVE  (r12 I:?[long, double]) = (r10 I:?[long, double]) \l0x00ed: MOVE  (r10 I:?[long, double]) = (r22 I:?[long, double]) \l0x00ef: MOVE  (r2 I:?[long, double]) = (r27 I:?[long, double]) \l0x00f1: MOVE  (r4 I:?[long, double]) = (r29 I:?[long, double]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00f5|0x00f5: CMP_L  (r0 I:int) = (r24 I:double), (r18 I:double) \l}"];
Node_15 [shape=record,label="{15\:\ 0x00f7|0x00f7: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x00fa \l}"];
Node_16 [shape=record,label="{16\:\ 0x00f9|0x00f9: RETURN  (r18 I:double) \l}"];
Node_17 [shape=record,label="{17\:\ 0x00fa|0x00fa: CONST  (r0 I:?[long, double]) = \l  (4708606483430899712(0x415854a640000000, double:6378137.0) ?[long, double])\l \l0x00ff: INVOKE  (r0 I:double) = (r0 I:double), (r4 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0103: CONST  (r6 I:?[long, double]) = \l  (4708583521799363153(0x41583fc4141bda51, double:6356752.3142) ?[long, double])\l \l0x0108: INVOKE  (r8 I:double) = (r6 I:double), (r4 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x010c: ARITH  (r0 I:double) = (r0 I:double) \- (r8 I:double) \l0x010d: ARITH  (r14 I:double) = (r14 I:double) * (r0 I:double) \l0x010f: INVOKE  (r0 I:double) = (r6 I:double), (r4 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0113: ARITH  (r14 I:double) = (r14 I:double) \/ (r0 I:double) \l0x0114: CONST  (r0 I:?[long, double]) = \l  (4670232813583204352(0x40d0000000000000, double:16384.0) ?[long, double])\l \l0x0116: ARITH  (r0 I:double) = (r14 I:double) \/ (r0 I:double) \l0x0118: CONST  (r4 I:?[long, double]) = \l  (4661225614328463360(0x40b0000000000000, double:4096.0) ?[long, double])\l \l0x011a: CONST  (r8 I:?[long, double]) = \l  (\-4573405421594738688(0xc088000000000000, double:\-768.0) ?[long, double])\l \l0x011c: CONST  (r10 I:?[long, double]) = \l  (4644337115725824000(0x4074000000000000, double:320.0) ?[long, double])\l \l0x011e: CONST  (r18 I:?[long, double]) = \l  (4640361281679785984(0x4065e00000000000, double:175.0) ?[long, double])\l \l0x0123: ARITH  (r18 I:double) = (r18 I:double) * (r14 I:double) \l0x0125: ARITH  (r10 I:double) = (r10 I:double) \- (r18 I:double) \l0x0127: ARITH  (r10 I:double) = (r10 I:double) * (r14 I:double) \l0x0129: ARITH  (r10 I:double) = (r10 I:double) + (r8 I:double) \l0x012a: ARITH  (r10 I:double) = (r10 I:double) * (r14 I:double) \l0x012c: ARITH  (r10 I:double) = (r10 I:double) + (r4 I:double) \l0x012d: ARITH  (r0 I:double) = (r0 I:double) * (r10 I:double) \l0x012f: ARITH  (r0 I:double) = (r0 I:double) + (r20 I:double) \l0x0131: CONST  (r4 I:?[long, double]) = \l  (4652218415073722368(0x4090000000000000, double:1024.0) ?[long, double])\l \l0x0133: ARITH  (r4 I:double) = (r14 I:double) \/ (r4 I:double) \l0x0135: CONST  (r8 I:?[long, double]) = \l  (4643211215818981376(0x4070000000000000, double:256.0) ?[long, double])\l \l0x0137: CONST  (r10 I:?[long, double]) = \l  (\-4584664420663164928(0xc060000000000000, double:\-128.0) ?[long, double])\l \l0x0139: CONST  (r18 I:?[long, double]) = \l  (4634907704006017024(0x4052800000000000, double:74.0) ?[long, double])\l \l0x013e: CONST  (r20 I:?[long, double]) = \l  (4631811479262199808(0x4047800000000000, double:47.0) ?[long, double])\l \l0x0143: ARITH  (r20 I:double) = (r20 I:double) * (r14 I:double) \l0x0145: ARITH  (r18 I:double) = (r18 I:double) \- (r20 I:double) \l0x0147: ARITH  (r18 I:double) = (r18 I:double) * (r14 I:double) \l0x0149: ARITH  (r18 I:double) = (r18 I:double) + (r10 I:double) \l0x014b: ARITH  (r14 I:double) = (r14 I:double) * (r18 I:double) \l0x014d: ARITH  (r14 I:double) = (r14 I:double) + (r8 I:double) \l0x014e: ARITH  (r4 I:double) = (r4 I:double) * (r14 I:double) \l0x0150: ARITH  (r8 I:double) = (r4 I:double) * (r12 I:double) \l0x0152: ARITH  (r10 I:double) = (r4 I:double) \/ (r37 I:double) \l0x0154: ARITH  (r2 I:double) = (r2 I:double) * (r41 I:double) \l0x0156: CONST  (r14 I:?[long, double]) = \l  (4618441417868443648(0x4018000000000000, double:6.0) ?[long, double])\l \l0x0158: ARITH  (r4 I:double) = (r4 I:double) \/ (r14 I:double) \l0x0159: ARITH  (r4 I:double) = (r4 I:double) * (r31 I:double) \l0x015b: ARITH  (r14 I:double) = (r12 I:double) * (r37 I:double) \l0x015d: ARITH  (r14 I:double) = (r14 I:double) * (r12 I:double) \l0x015f: CONST  (r12 I:?[long, double]) = \l  (\-4609434218613702656(0xc008000000000000, double:\-3.0) ?[long, double])\l \l0x0161: ARITH  (r14 I:double) = (r14 I:double) + (r12 I:double) \l0x0162: ARITH  (r4 I:double) = (r4 I:double) * (r14 I:double) \l0x0164: ARITH  (r37 I:double) = (r37 I:double) * (r31 I:double) \l0x0166: ARITH  (r37 I:double) = (r37 I:double) * (r31 I:double) \l0x0168: ARITH  (r37 I:double) = (r37 I:double) + (r12 I:double) \l0x016a: ARITH  (r4 I:double) = (r4 I:double) * (r37 I:double) \l0x016c: ARITH  (r2 I:double) = (r2 I:double) \- (r4 I:double) \l0x016d: ARITH  (r10 I:double) = (r10 I:double) * (r2 I:double) \l0x016f: ARITH  (r31 I:double) = (r31 I:double) + (r10 I:double) \l0x0171: ARITH  (r8 I:double) = (r8 I:double) * (r31 I:double) \l0x0173: ARITH  (r0 I:double) = (r0 I:double) * (r6 I:double) \l0x0175: ARITH  (r16 I:double) = (r16 I:double) \- (r8 I:double) \l0x0177: ARITH  (r0 I:double) = (r0 I:double) * (r16 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0179|0x0179: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public static double org.mapsforge.core.util.LatLongUtils.vincentyDistance((r43 I:org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r44 I:org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
}

