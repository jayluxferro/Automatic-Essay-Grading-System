digraph "CFG fororg.mapsforge.core.util.LatLongUtils.zoomForBounds(Lorg\/mapsforge\/core\/model\/Dimension;Lorg\/mapsforge\/core\/model\/BoundingBox;I)B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r1 I:long) = (r0 I:byte), (r11 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC \l0x0005: IGET  (r3 I:double) = (r10 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.maxLongitude double \l0x0007: INVOKE  (r3 I:double) = (r3 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC \l0x000b: IGET  (r5 I:double) = (r10 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.minLongitude double \l0x000d: INVOKE  (r5 I:double) = (r5 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC \l0x0011: ARITH  (r3 I:double) = (r3 I:double) \- (r5 I:double) \l0x0012: INVOKE  (r3 I:double) = (r3 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0016: IGET  (r11 I:int) = (r9 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.width int \l0x0018: CAST  (r5 I:double) = (double) (r11 I:int) \l0x0019: ARITH  (r3 I:double) = (r3 I:double) \/ (r5 I:double) \l0x001a: INVOKE  (r3 I:double) = (r3 I:double) java.lang.Math.log(double):double type: STATIC \l0x001e: NEG  (r3 I:double) = (r3 I:double) \l0x001f: CONST  (r5 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0021: INVOKE  (r7 I:double) = (r5 I:double) java.lang.Math.log(double):double type: STATIC \l0x0025: ARITH  (r3 I:double) = (r3 I:double) \/ (r7 I:double) \l0x0026: IGET  (r7 I:double) = (r10 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.maxLatitude double \l0x0028: INVOKE  (r7 I:double) = (r7 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC \l0x002c: IGET  (r10 I:double) = (r10 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.minLatitude double \l0x002e: INVOKE  (r10 I:double) = (r10 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC \l0x0032: ARITH  (r7 I:double) = (r7 I:double) \- (r10 I:double) \l0x0033: INVOKE  (r10 I:double) = (r7 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0037: IGET  (r9 I:int) = (r9 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.height int \l0x0039: CAST  (r1 I:double) = (double) (r9 I:int) \l0x003a: ARITH  (r10 I:double) = (r10 I:double) \/ (r1 I:double) \l0x003b: INVOKE  (r9 I:double) = (r10 I:double) java.lang.Math.log(double):double type: STATIC \l0x003f: NEG  (r9 I:double) = (r9 I:double) \l0x0040: INVOKE  (r1 I:double) = (r5 I:double) java.lang.Math.log(double):double type: STATIC \l0x0044: ARITH  (r9 I:double) = (r9 I:double) \/ (r1 I:double) \l0x0045: INVOKE  (r9 I:double) = (r3 I:double), (r9 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x0049: INVOKE  (r9 I:double) = (r9 I:double) java.lang.Math.floor(double):double type: STATIC \l0x004d: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x004f: CMP_G  (r11 I:int) = (r9 I:double), (r1 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0051|0x0051: IF  (r11 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x0054 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0053|0x0053: RETURN  (r0 I:byte) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0054|0x0054: CONST  (r0 I:?[long, double]) = \l  (4638637247447433216(0x405fc00000000000, double:127.0) ?[long, double])\l \l0x0059: CMP_L  (r11 I:int) = (r9 I:double), (r0 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x005b|0x005b: IF  (r11 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0060 \l}"];
Node_5 [shape=record,label="{5\:\ 0x005d|0x005d: CONST  (r9 I:?[int, float, short, byte, char]) = \l  (127(0x7f, float:1.78E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x005f|0x005f: RETURN  (r9 I:byte) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0060|0x0060: CAST  (r9 I:int) = (int) (r9 I:double) \l0x0061: CAST  (r9 I:byte) = (byte) (r9 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0062|0x0062: RETURN  (r9 I:byte) \l}"];
MethodNode[shape=record,label="{public static byte org.mapsforge.core.util.LatLongUtils.zoomForBounds((r9 I:org.mapsforge.core.model.Dimension A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

