digraph "CFG fororg.mapsforge.core.util.LatLongUtils.contains(Ljava\/util\/List;Lorg\/mapsforge\/core\/model\/LatLong;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4 = r14.size() \- 1\lr0 = 0\lr3 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lPHI: r0 r3 r4 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:0:0x0000, B:15:0x0075] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v2 boolean) binds: [B:0:0x0000, B:15:0x0075] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v3 int) binds: [B:0:0x0000, B:15:0x0075] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:15:0x0075\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|if (r0 \>= r14.size()) goto L_0x007b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010}"];
Node_4 [shape=record,label="{4\:\ 0x001c|if ((r14.get(r0).latitude \> r15.latitude ? 1 : (r14.get(r0).latitude == r15.latitude ? 0 : \-1)) \<= 0) goto L_0x0020\l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|r5 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|r5 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|PHI: r5 \l  PHI: (r5v5 boolean) = (r5v7 boolean), (r5v8 boolean) binds: [B:6:0x0020, B:5:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|if ((r14.get(r4).latitude \> r15.latitude ? 1 : (r14.get(r4).latitude == r15.latitude ? 0 : \-1)) \<= 0) goto L_0x0031\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|r6 = true\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|r6 = false\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|PHI: r6 \l  PHI: (r6v4 boolean) = (r6v5 boolean), (r6v6 boolean) binds: [B:10:0x0031, B:9:0x002f] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == r6) goto L_0x0075\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034}"];
Node_13 [shape=record,label="{13\:\ 0x0071|if ((r15.longitude \> ((((r14.get(r4).longitude \- r14.get(r0).longitude) * (r15.latitude \- r14.get(r0).latitude)) \/ (r14.get(r4).latitude \- r14.get(r0).latitude)) + r14.get(r0).longitude) ? 1 : (r15.longitude == ((((r14.get(r4).longitude \- r14.get(r0).longitude) * (r15.latitude \- r14.get(r0).latitude)) \/ (r14.get(r4).latitude \- r14.get(r0).latitude)) + r14.get(r0).longitude) ? 0 : \-1)) \>= 0) goto L_0x0075\l}"];
Node_14 [shape=record,label="{14\:\ 0x0073|r3 = r3 ^ true\l}"];
Node_15 [shape=record,label="{15\:\ 0x0075|LOOP_END\lPHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v1 boolean), (r3v3 boolean) binds: [B:19:0x0075, B:20:0x0075, B:18:0x0075] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:15:0x0075\l|r13 = r0 + 1\lr4 = r0\lr0 = r13\l}"];
Node_16 [shape=record,label="{16\:\ 0x007b|RETURN\l|return r3\l}"];
Node_17 [shape=record,label="{17\:\ 0x007b|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0075|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0075|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0075|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static boolean org.mapsforge.core.util.LatLongUtils.contains((r14v0 java.util.List\<org.mapsforge.core.model.LatLong\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/model\/LatLong;, \>;, Lorg\/mapsforge\/core\/model\/LatLong;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_18;
Node_15 -> Node_1;
Node_17 -> Node_16;
Node_18 -> Node_15;
Node_19 -> Node_15;
Node_20 -> Node_15;
}

