digraph "CFG fororg.mapsforge.core.util.LatLongUtils.contains(Ljava\/util\/List;Lorg\/mapsforge\/core\/model\/LatLong;)Z" {
subgraph cluster_Region_148809079 {
label = "R(3:0|(2:(1:14)|15)|16)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r4 = r14.size() \- 1\lint r0 = 0\lboolean r3 = false\l}"];
subgraph cluster_LoopRegion_2146707117 {
label = "LOOP:0: (2:(1:14)|15)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000e|if (r0 \< r14.size()) goto L_0x0010\l}"];
subgraph cluster_Region_498033978 {
label = "R(2:(1:14)|15)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_842274079 {
label = "IF [B:11:0x0032, B:13:0x0071] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0032|ADDED_TO_REGION\lPHI: r6 \l  PHI: (r6v4 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if ((r14.get(r0).latitude \> r15.latitude) != (r14.get(r4).latitude \> r15.latitude)) goto L_0x0034\l}"];
Node_13 [shape=record,label="{13\:\ 0x0071|ADDED_TO_REGION\l|if (r15.longitude \< ((((r14.get(r4).longitude \- r14.get(r0).longitude) * (r15.latitude \- r14.get(r0).latitude)) \/ (r14.get(r4).latitude \- r14.get(r0).latitude)) + r14.get(r0).longitude)) goto L_0x0073\l}"];
subgraph cluster_Region_50123065 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0073|r3 = !r3\l}"];
}
}
Node_15 [shape=record,label="{15\:\ 0x0075|LOOP_END\lPHI: r3 \l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v1 boolean), (r3v3 boolean) binds: [B:19:0x0075, B:20:0x0075, B:18:0x0075] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:15:0x0075\l|r4 = r0\lr0++\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x007b|RETURN\l|return r3\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000a|LOOP_START\lPHI: r0 r3 r4 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:0:0x0000, B:15:0x0075] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v2 boolean) binds: [B:0:0x0000, B:15:0x0075] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v3 int) binds: [B:0:0x0000, B:15:0x0075] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:15:0x0075\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0010}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001c}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001e}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0020}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0021|PHI: r5 \l  PHI: (r5v5 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002d}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0031}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0034}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x007b|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0075|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0075|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0075|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static boolean org.mapsforge.core.util.LatLongUtils.contains((r14v0 java.util.List\<org.mapsforge.core.model.LatLong\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/model\/LatLong;, \>;, Lorg\/mapsforge\/core\/model\/LatLong;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_17[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_19[style=dashed];
Node_13 -> Node_14;
Node_13 -> Node_20[style=dashed];
Node_14 -> Node_18;
Node_15 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_17 -> Node_16;
Node_18 -> Node_15;
Node_19 -> Node_15;
Node_20 -> Node_15;
}

