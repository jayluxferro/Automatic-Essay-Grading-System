digraph "CFG fororg.mapsforge.core.util.LatLongUtils.vincentyDistance(Lorg\/mapsforge\/core\/model\/LatLong;Lorg\/mapsforge\/core\/model\/LatLong;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double r0 = java.lang.Math.toRadians(r44.getLongitude() \- r43.getLongitude())\ldouble r2 = java.lang.Math.atan(java.lang.Math.tan(java.lang.Math.toRadians(r43.getLatitude())) * 0.9966471893352525d)\ldouble r4 = java.lang.Math.atan(0.9966471893352525d * java.lang.Math.tan(java.lang.Math.toRadians(r44.getLatitude())))\ldouble r6 = java.lang.Math.sin(r2)\ldouble r2 = java.lang.Math.cos(r2)\ldouble r8 = java.lang.Math.sin(r4)\ldouble r4 = java.lang.Math.cos(r4)\lr12 = 100.0d\lr10 = r0\l}"];
Node_1 [shape=record,label="{1\:\ 0x004a|LOOP_START\lPHI: r2 r4 r10 r12 \l  PHI: (r2v7 double) = (r2v6 double), (r2v11 double) binds: [B:0:0x0000, B:13:0x00ec] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 double) = (r4v3 double), (r4v14 double) binds: [B:0:0x0000, B:13:0x00ec] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 double) = (r10v1 double), (r10v16 double) binds: [B:0:0x0000, B:13:0x00ec] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 double) = (r12v0 double), (r12v4 double) binds: [B:0:0x0000, B:13:0x00ec] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x004a\-\>B:13:0x00ec\l|double r14 = java.lang.Math.sin(r10)\ldouble r16 = java.lang.Math.cos(r10)\ldouble r18 = r4 * r14\ldouble r20 = (r2 * r8) \- ((r6 * r4) * r16)\lr24 = r12\ldouble r12 = java.lang.Math.sqrt((r18 * r18) + (r20 * r20))\l}"];
Node_2 [shape=record,label="{2\:\ 0x006c|if ((r12 \> 0.0d ? 1 : (r12 == 0.0d ? 0 : \-1)) != 0) goto L_0x006f\l}"];
Node_3 [shape=record,label="{3\:\ 0x006e|RETURN\l|return 0.0d\l}"];
Node_4 [shape=record,label="{4\:\ 0x006f|double r22 = r2 * r4\lr27 = r2\ldouble r2 = (r6 * r8) + (r16 * r22)\ldouble r16 = java.lang.Math.atan2(r12, r2)\ldouble r22 = (r22 * r14) \/ r12\ldouble r14 = 1.0d \- (r22 * r22)\lr29 = r4\l}"];
Node_5 [shape=record,label="{5\:\ 0x008f|if ((r14 \> 0.0d ? 1 : (r14 == 0.0d ? 0 : \-1)) == 0) goto L_0x009a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0091|double r31 = r2 \- (((r6 * 2.0d) * r8) \/ r14)\l}"];
Node_7 [shape=record,label="{7\:\ 0x009a|r31 = 0.0d\l}"];
Node_8 [shape=record,label="{8\:\ 0x009c|PHI: r31 \l  PHI: (r31v0 double) = (r31v2 double), (r31v6 double) binds: [B:7:0x009a, B:6:0x0091] A[DONT_GENERATE, DONT_INLINE]\l|double r33 = (2.0955066654671753E\-4d * r14) * (((4.0d \- (3.0d * r14)) * 0.0033528106647474805d) + 4.0d)\ldouble r41 = ((r31 * 2.0d) * r31) + \-1.0d\ldouble r22 = r0 + ((((1.0d \- r33) * 0.0033528106647474805d) * r22) * (r16 + ((r33 * r12) * (r31 + ((r33 * r2) * r41)))))\l}"];
Node_9 [shape=record,label="{9\:\ 0x00e1|if ((java.lang.Math.abs(r22 \- r10) \> 1.0E\-12d ? 1 : (java.lang.Math.abs(r22 \- r10) == 1.0E\-12d ? 0 : \-1)) \<= 0) goto L_0x00f5\l}"];
Node_10 [shape=record,label="{10\:\ 0x00e3|double r10 = r24 \- 1.0d\l}"];
Node_11 [shape=record,label="{11\:\ 0x00e7|if ((r10 \> 0.0d ? 1 : (r10 == 0.0d ? 0 : \-1)) \> 0) goto L_0x00ec\l}"];
Node_12 [shape=record,label="{12\:\ 0x00e9|r24 = r10\l}"];
Node_13 [shape=record,label="{13\:\ 0x00ec|LOOP_END\lLOOP:0: B:1:0x004a\-\>B:13:0x00ec\l|r12 = r10\lr10 = r22\lr2 = r27\lr4 = r29\l}"];
Node_14 [shape=record,label="{14\:\ 0x00f5|PHI: r24 \l  PHI: (r24v1 double) = (r24v0 double), (r24v3 double) binds: [B:19:0x00f5, B:12:0x00e9] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x00f7|if ((r24 \> 0.0d ? 1 : (r24 == 0.0d ? 0 : \-1)) != 0) goto L_0x00fa\l}"];
Node_16 [shape=record,label="{16\:\ 0x00f9|RETURN\l|return 0.0d\l}"];
Node_17 [shape=record,label="{17\:\ 0x00fa|double r14 = (r14 * (java.lang.Math.pow(6378137.0d, 2.0d) \- java.lang.Math.pow(6356752.3142d, 2.0d))) \/ java.lang.Math.pow(6356752.3142d, 2.0d)\ldouble r4 = (r14 \/ 1024.0d) * ((r14 * (((74.0d \- (47.0d * r14)) * r14) + \-128.0d)) + 256.0d)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0179|RETURN\l|return ((((r14 \/ 16384.0d) * (((((320.0d \- (175.0d * r14)) * r14) + \-768.0d) * r14) + 4096.0d)) + 1.0d) * 6356752.3142d) * (r16 \- ((r4 * r12) * (r31 + ((r4 \/ 4.0d) * ((r2 * r41) \- ((((r4 \/ 6.0d) * r31) * (((r12 * 4.0d) * r12) + \-3.0d)) * (((4.0d * r31) * r31) + \-3.0d)))))))\l}"];
Node_19 [shape=record,label="{19\:\ 0x00f5|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x00e9|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x006e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static double org.mapsforge.core.util.LatLongUtils.vincentyDistance((r43v0 org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r44v0 org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_2 -> Node_21[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_19;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_20[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_1;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_14;
Node_20 -> Node_12;
Node_21 -> Node_3;
}

