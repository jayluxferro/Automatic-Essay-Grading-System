digraph "CFG fororg.mapsforge.core.util.LatLongUtils.nearestSegmentPoint(DDDDDD)Lorg\/mapsforge\/core\/model\/Point;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[long, double]) = (r20 I:?[long, double]) \l0x0002: MOVE  (r2 I:?[long, double]) = (r22 I:?[long, double]) \l0x0004: MOVE  (r4 I:?[long, double]) = (r24 I:?[long, double]) \l0x0006: MOVE  (r6 I:?[long, double]) = (r26 I:?[long, double]) \l0x0008: ARITH  (r8 I:double) = (r4 I:double) \- (r0 I:double) \l0x000a: ARITH  (r10 I:double) = (r6 I:double) \- (r2 I:double) \l0x000c: ARITH  (r12 I:double) = (r8 I:double) * (r8 I:double) \l0x000e: ARITH  (r14 I:double) = (r10 I:double) * (r10 I:double) \l0x0010: ARITH  (r12 I:double) = (r12 I:double) + (r14 I:double) \l0x0011: CONST  (r14 I:?[long, double]) = (0 ?[long, double]) \l0x0013: CMP_L  (r16 I:int) = (r12 I:double), (r14 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: IF  (r16 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: NEW_INSTANCE  (r4 I:org.mapsforge.core.model.Point) =  org.mapsforge.core.model.Point \l0x0019: INVOKE  \l  (r4 I:org.mapsforge.core.model.Point)\l  (r0 I:double)\l  (r2 I:double)\l org.mapsforge.core.model.Point.\<init\>(double, double):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: RETURN  (r4 I:org.mapsforge.core.model.Point) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: CONST  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: ARITH  (r16 I:double) = (r28 I:double) \- (r0 I:double) \l0x0021: ARITH  (r16 I:double) = (r16 I:double) * (r8 I:double) \l0x0023: ARITH  (r18 I:double) = (r30 I:double) \- (r2 I:double) \l0x0025: ARITH  (r18 I:double) = (r18 I:double) * (r10 I:double) \l0x0027: ARITH  (r16 I:double) = (r16 I:double) + (r18 I:double) \l0x0029: ARITH  (r16 I:double) = (r16 I:double) \/ (r12 I:double) \l0x002b: CMP_G  (r12 I:int) = (r16 I:double), (r14 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: IF  (r12 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:8:0x0035 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|0x002f: NEW_INSTANCE  (r4 I:org.mapsforge.core.model.Point) =  org.mapsforge.core.model.Point \l0x0031: INVOKE  \l  (r4 I:org.mapsforge.core.model.Point)\l  (r0 I:double)\l  (r2 I:double)\l org.mapsforge.core.model.Point.\<init\>(double, double):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: RETURN  (r4 I:org.mapsforge.core.model.Point) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|0x0035: CONST  (r12 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0037: CMP_L  (r12 I:int) = (r16 I:double), (r12 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|0x0039: IF  (r12 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0041 \l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: NEW_INSTANCE  (r0 I:org.mapsforge.core.model.Point) =  org.mapsforge.core.model.Point \l0x003d: INVOKE  \l  (r0 I:org.mapsforge.core.model.Point)\l  (r4 I:double)\l  (r6 I:double)\l org.mapsforge.core.model.Point.\<init\>(double, double):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: RETURN  (r0 I:org.mapsforge.core.model.Point) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: NEW_INSTANCE  (r4 I:org.mapsforge.core.model.Point) =  org.mapsforge.core.model.Point \l0x0043: ARITH  (r8 I:double) = (r8 I:double) * (r16 I:double) \l0x0045: ARITH  (r0 I:double) = (r0 I:double) + (r8 I:double) \l0x0046: ARITH  (r16 I:double) = (r16 I:double) * (r10 I:double) \l0x0048: ARITH  (r2 I:double) = (r2 I:double) + (r16 I:double) \l0x004a: INVOKE  \l  (r4 I:org.mapsforge.core.model.Point)\l  (r0 I:double)\l  (r2 I:double)\l org.mapsforge.core.model.Point.\<init\>(double, double):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|0x004d: RETURN  (r4 I:org.mapsforge.core.model.Point) \l}"];
MethodNode[shape=record,label="{public static org.mapsforge.core.model.Point org.mapsforge.core.util.LatLongUtils.nearestSegmentPoint((r20 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

