digraph "CFG fororg.mapsforge.core.util.LatLongUtils.sphericalDistance(Lorg\/mapsforge\/core\/model\/LatLong;Lorg\/mapsforge\/core\/model\/LatLong;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double r0 = java.lang.Math.toRadians(r9.latitude \- r8.latitude)\ldouble r2 = java.lang.Math.toRadians(r9.longitude \- r8.longitude)\ldouble r0 = r0 \/ 2.0d\ldouble r2 = r2 \/ 2.0d\ldouble r6 = (java.lang.Math.sin(r0) * java.lang.Math.sin(r0)) + (((java.lang.Math.cos(java.lang.Math.toRadians(r8.latitude)) * java.lang.Math.cos(java.lang.Math.toRadians(r9.latitude))) * java.lang.Math.sin(r2)) * java.lang.Math.sin(r2))\l}"];
Node_1 [shape=record,label="{1\:\ 0x005b|RETURN\l|return (java.lang.Math.atan2(java.lang.Math.sqrt(r6), java.lang.Math.sqrt(1.0d \- r6)) * 2.0d) * 6378137.0d\l}"];
MethodNode[shape=record,label="{public static double org.mapsforge.core.util.LatLongUtils.sphericalDistance((r8v0 org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

