digraph "CFG fororg.mapsforge.core.util.LatLongUtils.zoomForBounds(Lorg\/mapsforge\/core\/model\/Dimension;Lorg\/mapsforge\/core\/model\/BoundingBox;I)B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long r1 = org.mapsforge.core.util.MercatorProjection.getMapSize((byte) 0, r11)\ldouble r9 = java.lang.Math.floor(java.lang.Math.min((\-java.lang.Math.log(java.lang.Math.abs(org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r10.maxLongitude, r1) \- org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r10.minLongitude, r1)) \/ ((double) r9.width))) \/ java.lang.Math.log(2.0d), (\-java.lang.Math.log(java.lang.Math.abs(org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r10.maxLatitude, r1) \- org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r10.minLatitude, r1)) \/ ((double) r9.height))) \/ java.lang.Math.log(2.0d)))\l}"];
Node_1 [shape=record,label="{1\:\ 0x0051|if ((r9 \> 0.0d ? 1 : (r9 == 0.0d ? 0 : \-1)) \>= 0) goto L_0x0054\l}"];
Node_2 [shape=record,label="{2\:\ 0x0053|RETURN\l|return 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0054}"];
Node_4 [shape=record,label="{4\:\ 0x005b|if ((r9 \> 127.0d ? 1 : (r9 == 127.0d ? 0 : \-1)) \<= 0) goto L_0x0060\l}"];
Node_5 [shape=record,label="{5\:\ 0x005d|RETURN\l|return kotlin.jvm.internal.ByteCompanionObject.MAX_VALUE\l}"];
Node_6 [shape=record,label="{6\:\ 0x0060}"];
Node_7 [shape=record,label="{7\:\ 0x0062|RETURN\l|return (byte) ((int) r9)\l}"];
MethodNode[shape=record,label="{public static byte org.mapsforge.core.util.LatLongUtils.zoomForBounds((r9v0 org.mapsforge.core.model.Dimension A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
}

