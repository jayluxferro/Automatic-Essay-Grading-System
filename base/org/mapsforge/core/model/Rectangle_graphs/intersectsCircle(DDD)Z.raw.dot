digraph "CFG fororg.mapsforge.core.model.Rectangle.intersectsCircle(DDD)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r7 I:org.mapsforge.core.model.Rectangle) org.mapsforge.core.model.Rectangle.getWidth():double type: VIRTUAL \l0x0004: CONST  (r2 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0006: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x0007: INVOKE  (r4 I:double) = (r7 I:org.mapsforge.core.model.Rectangle) org.mapsforge.core.model.Rectangle.getHeight():double type: VIRTUAL \l0x000b: ARITH  (r4 I:double) = (r4 I:double) \/ (r2 I:double) \l0x000c: INVOKE  (r2 I:double) = (r7 I:org.mapsforge.core.model.Rectangle) org.mapsforge.core.model.Rectangle.getCenterX():double type: VIRTUAL \l0x0010: ARITH  (r8 I:double) = (r8 I:double) \- (r2 I:double) \l0x0011: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0015: INVOKE  (r2 I:double) = (r7 I:org.mapsforge.core.model.Rectangle) org.mapsforge.core.model.Rectangle.getCenterY():double type: VIRTUAL \l0x0019: ARITH  (r10 I:double) = (r10 I:double) \- (r2 I:double) \l0x001a: INVOKE  (r10 I:double) = (r10 I:double) java.lang.Math.abs(double):double type: STATIC \l0x001e: ARITH  (r2 I:double) = (r0 I:double) + (r12 I:double) \l0x0020: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0021: CMP_L  (r2 I:int) = (r8 I:double), (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0023|0x0023: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0025|0x0025: RETURN  (r6 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0027: ARITH  (r2 I:double) = (r4 I:double) + (r12 I:double) \l0x0029: CMP_L  (r2 I:int) = (r10 I:double), (r2 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002b|0x002b: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x002e \l}"];
Node_5 [shape=record,label="{5\:\ 0x002d|0x002d: RETURN  (r6 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002f: CMP_G  (r3 I:int) = (r8 I:double), (r0 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|0x0031: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:9:0x0034 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0033|0x0033: RETURN  (r2 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: CMP_G  (r3 I:int) = (r10 I:double), (r4 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:12:0x0039 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: RETURN  (r2 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003a: ARITH  (r8 I:double) = (r8 I:double) \- (r0 I:double) \l0x003b: ARITH  (r10 I:double) = (r10 I:double) \- (r4 I:double) \l0x003c: ARITH  (r8 I:double) = (r8 I:double) * (r8 I:double) \l0x003e: ARITH  (r10 I:double) = (r10 I:double) * (r10 I:double) \l0x0040: ARITH  (r8 I:double) = (r8 I:double) + (r10 I:double) \l0x0041: ARITH  (r12 I:double) = (r12 I:double) * (r12 I:double) \l0x0043: CMP_G  (r8 I:int) = (r8 I:double), (r12 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|0x0045: IF  (r8 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:15:0x0048 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.core.model.Rectangle.intersectsCircle((r7 'this' I:org.mapsforge.core.model.Rectangle A[IMMUTABLE_TYPE, THIS]), (r8 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_16[style=dashed];
Node_15 -> Node_16;
}

