digraph "CFG fororg.mapsforge.core.model.LineSegment.clipToRectangle(Lorg\/mapsforge\/core\/model\/Rectangle;)Lorg\/mapsforge\/core\/model\/LineSegment;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.mapsforge.core.model.Point r0 = r13.start\lorg.mapsforge.core.model.Point r1 = r13.end\lint r2 = code(r14, r0)\lint r3 = code(r14, r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|LOOP_START\lPHI: r0 r1 r2 r3 \l  PHI: (r0v1 org.mapsforge.core.model.Point) = (r0v0 org.mapsforge.core.model.Point), (r0v2 org.mapsforge.core.model.Point) binds: [B:0:0x0000, B:28:0x000c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 org.mapsforge.core.model.Point) = (r1v0 org.mapsforge.core.model.Point), (r1v2 org.mapsforge.core.model.Point) binds: [B:0:0x0000, B:28:0x000c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:28:0x000c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:28:0x000c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:28:0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|if ((r2 \| r3) != 0) goto L_0x0016\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010}"];
Node_4 [shape=record,label="{4\:\ 0x0015|RETURN\l|return new org.mapsforge.core.model.LineSegment(r0, r1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016}"];
Node_6 [shape=record,label="{6\:\ 0x0018|if ((r2 & r3) == 0) goto L_0x001c\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|RETURN\l|return null\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|if (r2 == 0) goto L_0x0020\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|r4 = r2\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|r4 = r3\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|PHI: r4 \l  PHI: (r4v2 int) = (r4v3 int), (r4v4 int) binds: [B:10:0x0020, B:9:0x001e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|if ((TOP & r4) == 0) goto L_0x003e\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|double r5 = r0.f266x + (((r1.f266x \- r0.f266x) * (r14.top \- r0.f267y)) \/ (r1.f267y \- r0.f267y))\ldouble r7 = r14.top\l}"];
Node_14 [shape=record,label="{14\:\ 0x003e}"];
Node_15 [shape=record,label="{15\:\ 0x0041|if ((BOTTOM & r4) == 0) goto L_0x005b\l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|double r5 = r0.f266x + (((r1.f266x \- r0.f266x) * (r14.bottom \- r0.f267y)) \/ (r1.f267y \- r0.f267y))\ldouble r7 = r14.bottom\l}"];
Node_17 [shape=record,label="{17\:\ 0x005b}"];
Node_18 [shape=record,label="{18\:\ 0x005e|if ((RIGHT & r4) == 0) goto L_0x0078\l}"];
Node_19 [shape=record,label="{19\:\ 0x0060|double r5 = r0.f267y\ldouble r7 = (((r1.f267y \- r0.f267y) * (r14.right \- r0.f266x)) \/ (r1.f266x \- r0.f266x)) + r5\ldouble r5 = r14.right\l}"];
Node_20 [shape=record,label="{20\:\ 0x0078}"];
Node_21 [shape=record,label="{21\:\ 0x007b|if ((LEFT & r4) == 0) goto L_0x00ac\l}"];
Node_22 [shape=record,label="{22\:\ 0x007d|double r5 = r0.f267y\ldouble r7 = (((r1.f267y \- r0.f267y) * (r14.left \- r0.f266x)) \/ (r1.f266x \- r0.f266x)) + r5\ldouble r5 = r14.left\l}"];
Node_23 [shape=record,label="{23\:\ 0x0094|PHI: r5 r7 \l  PHI: (r5v2 double) = (r5v10 double), (r5v12 double), (r5v14 double), (r5v16 double) binds: [B:22:0x007d, B:19:0x0060, B:16:0x0043, B:13:0x0026] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v0 double) = (r7v5 double), (r7v10 double), (r7v15 double), (r7v20 double) binds: [B:22:0x007d, B:19:0x0060, B:16:0x0043, B:13:0x0026] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 != r2) goto L_0x00a1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0096|org.mapsforge.core.model.Point r0 = new org.mapsforge.core.model.Point(r5, r7)\lint r2 = code(r14, r0)\l}"];
Node_25 [shape=record,label="{25\:\ 0x00a1|org.mapsforge.core.model.Point r1 = new org.mapsforge.core.model.Point(r5, r7)\lint r3 = code(r14, r1)\l}"];
Node_26 [shape=record,label="{26\:\ 0x00ac}"];
Node_27 [shape=record,label="{27\:\ 0x00b3|throw new java.lang.IllegalStateException(\"Should not get here\")\l}"];
Node_28 [shape=record,label="{28\:\ 0x000c|LOOP_END\lSYNTHETIC\lPHI: r0 r1 r2 r3 \l  PHI: (r0v2 org.mapsforge.core.model.Point) = (r0v1 org.mapsforge.core.model.Point), (r0v3 org.mapsforge.core.model.Point) binds: [B:33:0x000c, B:32:0x000c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 org.mapsforge.core.model.Point) = (r1v3 org.mapsforge.core.model.Point), (r1v1 org.mapsforge.core.model.Point) binds: [B:33:0x000c, B:32:0x000c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:33:0x000c, B:32:0x000c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 int) = (r3v3 int), (r3v1 int) binds: [B:33:0x000c, B:32:0x000c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:28:0x000c\l}"];
Node_29 [shape=record,label="{29\:\ 0x0010|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x001a|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x00ac|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x000c|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x000c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.model.LineSegment org.mapsforge.core.model.LineSegment.clipToRectangle((r13v0 'this' org.mapsforge.core.model.LineSegment A[IMMUTABLE_TYPE, THIS]), (r14v0 org.mapsforge.core.model.Rectangle A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_5;
Node_2 -> Node_29[style=dashed];
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_30[style=dashed];
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_23;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_23;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_31;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_32;
Node_25 -> Node_33;
Node_26 -> Node_27;
Node_28 -> Node_1;
Node_29 -> Node_3;
Node_30 -> Node_7;
Node_31 -> Node_26;
Node_32 -> Node_28;
Node_33 -> Node_28;
}

