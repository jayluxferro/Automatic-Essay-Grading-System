digraph "CFG fororg.mapsforge.core.model.LineSegment.pointAlongLineSegment(D)Lorg\/mapsforge\/core\/model\/Point;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.start org.mapsforge.core.model.Point \l0x0002: IGET  (r0 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0004: IGET  (r2 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.end org.mapsforge.core.model.Point \l0x0006: IGET  (r2 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0008: CMP_L  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0036 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r0 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.start org.mapsforge.core.model.Point \l0x000e: IGET  (r0 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0010: IGET  (r2 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.end org.mapsforge.core.model.Point \l0x0012: IGET  (r2 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0014: CMP_L  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x0027 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: NEW_INSTANCE  (r0 I:org.mapsforge.core.model.Point) =  org.mapsforge.core.model.Point \l0x001a: IGET  (r1 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.end org.mapsforge.core.model.Point \l0x001c: IGET  (r1 I:double) = (r1 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x001e: IGET  (r3 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.end org.mapsforge.core.model.Point \l0x0020: IGET  (r3 I:double) = (r3 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0022: ARITH  (r3 I:double) = (r3 I:double) + (r8 I:double) \l0x0023: INVOKE  \l  (r0 I:org.mapsforge.core.model.Point)\l  (r1 I:double)\l  (r3 I:double)\l org.mapsforge.core.model.Point.\<init\>(double, double):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: RETURN  (r0 I:org.mapsforge.core.model.Point) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: NEW_INSTANCE  (r0 I:org.mapsforge.core.model.Point) =  org.mapsforge.core.model.Point \l0x0029: IGET  (r1 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.start org.mapsforge.core.model.Point \l0x002b: IGET  (r1 I:double) = (r1 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x002d: IGET  (r3 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.start org.mapsforge.core.model.Point \l0x002f: IGET  (r3 I:double) = (r3 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0031: ARITH  (r3 I:double) = (r3 I:double) + (r8 I:double) \l0x0032: INVOKE  \l  (r0 I:org.mapsforge.core.model.Point)\l  (r1 I:double)\l  (r3 I:double)\l org.mapsforge.core.model.Point.\<init\>(double, double):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: RETURN  (r0 I:org.mapsforge.core.model.Point) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: IGET  (r0 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.end org.mapsforge.core.model.Point \l0x0038: IGET  (r0 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x003a: IGET  (r2 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.start org.mapsforge.core.model.Point \l0x003c: IGET  (r2 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x003e: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x003f: IGET  (r2 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.end org.mapsforge.core.model.Point \l0x0041: IGET  (r2 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0043: IGET  (r4 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.start org.mapsforge.core.model.Point \l0x0045: IGET  (r4 I:double) = (r4 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0047: ARITH  (r2 I:double) = (r2 I:double) \- (r4 I:double) \l0x0048: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x0049: ARITH  (r8 I:double) = (r8 I:double) * (r8 I:double) \l0x004b: CONST  (r2 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x004d: ARITH  (r4 I:double) = (r0 I:double) * (r0 I:double) \l0x004f: ARITH  (r4 I:double) = (r4 I:double) + (r2 I:double) \l0x0050: ARITH  (r8 I:double) = (r8 I:double) \/ (r4 I:double) \l0x0051: INVOKE  (r8 I:double) = (r8 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0055: IGET  (r2 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.end org.mapsforge.core.model.Point \l0x0057: IGET  (r2 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0059: IGET  (r4 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.start org.mapsforge.core.model.Point \l0x005b: IGET  (r4 I:double) = (r4 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x005d: CMP_G  (r2 I:int) = (r2 I:double), (r4 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x005f|0x005f: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x0065 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0061|0x0061: CONST  (r2 I:?[long, double]) = \l  (\-4616189618054758400(0xbff0000000000000, double:\-1.0) ?[long, double])\l \l0x0063: ARITH  (r8 I:double) = (r8 I:double) * (r2 I:double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0065|0x0065: NEW_INSTANCE  (r2 I:org.mapsforge.core.model.Point) =  org.mapsforge.core.model.Point \l0x0067: IGET  (r3 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.start org.mapsforge.core.model.Point \l0x0069: IGET  (r3 I:double) = (r3 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x006b: ARITH  (r3 I:double) = (r3 I:double) + (r8 I:double) \l0x006c: IGET  (r5 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.LineSegment) org.mapsforge.core.model.LineSegment.start org.mapsforge.core.model.Point \l0x006e: IGET  (r5 I:double) = (r5 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0070: ARITH  (r0 I:double) = (r0 I:double) * (r8 I:double) \l0x0072: ARITH  (r5 I:double) = (r5 I:double) + (r0 I:double) \l0x0073: INVOKE  \l  (r2 I:org.mapsforge.core.model.Point)\l  (r3 I:double)\l  (r5 I:double)\l org.mapsforge.core.model.Point.\<init\>(double, double):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0076|0x0076: RETURN  (r2 I:org.mapsforge.core.model.Point) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.model.Point org.mapsforge.core.model.LineSegment.pointAlongLineSegment((r7 'this' I:org.mapsforge.core.model.LineSegment A[IMMUTABLE_TYPE, THIS]), (r8 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

