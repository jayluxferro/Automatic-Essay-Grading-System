digraph "CFG fororg.mapsforge.core.model.LatLong.compareTo(Lorg\/mapsforge\/core\/model\/LatLong;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:double) = (r4 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double \l0x0002: IGET  (r2 I:double) = (r5 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double \l0x0004: CMP_L  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:14:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:double) = (r4 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x000a: IGET  (r2 I:double) = (r5 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x000c: CMP_L  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IGET  (r0 I:double) = (r4 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double \l0x0013: IGET  (r2 I:double) = (r5 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double \l0x0015: CMP_G  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:12:0x0024 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: IGET  (r0 I:double) = (r4 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x001b: IGET  (r2 I:double) = (r5 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x001d: CMP_G  (r5 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:10:0x0022 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: RETURN  (r5 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|0x0025: RETURN  (r5 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|0x0027: RETURN  (r5 I:int) \l}"];
MethodNode[shape=record,label="{public int org.mapsforge.core.model.LatLong.compareTo((r4 'this' I:org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, THIS]), (r5 I:org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_14[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_12[style=dashed];
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

