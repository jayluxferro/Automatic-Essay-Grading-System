digraph "CFG fororg.mapsforge.core.model.Tile.getMaxTileNumber(B)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r3 \< 0) goto L_0x000e\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3 != 0) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006}"];
Node_4 [shape=record,label="{4\:\ 0x000d|RETURN\l|return (2 \<\< (r3 + \-1)) + \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"zoomLevel must not be negative: \")\lr1.append(r3)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|throw new java.lang.IllegalArgumentException(r1.toString())\l}"];
MethodNode[shape=record,label="{public static int org.mapsforge.core.model.Tile.getMaxTileNumber((r3v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
}

