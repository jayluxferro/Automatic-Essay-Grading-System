digraph "CFG fororg.mapsforge.core.model.Tile.\<init\>(IIBI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:18:0x0093 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r6 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:16:0x007c \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r7 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:14:0x0065 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r0 I:int) = (r7 I:byte) org.mapsforge.core.model.Tile.getMaxTileNumber(byte):int type: STATIC \l0x000d: CAST  (r0 I:long) = (long) (r0 I:int) \l0x000e: CAST  (r2 I:long) = (long) (r5 I:int) \l0x000f: CMP_L  (r2 I:int) = (r2 I:long), (r0 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r2 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:12:0x0046 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: CAST  (r2 I:long) = (long) (r6 I:int) \l0x0014: CMP_L  (r0 I:int) = (r2 I:long), (r0 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:10:0x0027 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IPUT  (r8 I:int), (r4 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileSize int \l0x001a: IPUT  (r5 I:int), (r4 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileX int \l0x001c: IPUT  (r6 I:int), (r4 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileY int \l0x001e: IPUT  (r7 I:byte), (r4 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0020: INVOKE  (r5 I:long) = (r7 I:byte), (r8 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC \l0x0024: IPUT  (r5 I:long), (r4 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.mapSize long \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|0x0027: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0029: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002b: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002e: CONST_STR  (r0 I:java.lang.String) =  \"invalid tileY number on zoom level \" \l0x0030: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0033: INVOKE  (r8 I:java.lang.StringBuilder), (r7 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0036: CONST_STR  (r7 I:java.lang.String) =  \": \" \l0x0038: INVOKE  (r8 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003b: INVOKE  (r8 I:java.lang.StringBuilder), (r6 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x003e: INVOKE  (r6 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0042: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|0x0045: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|0x0046: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0048: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004a: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x004d: CONST_STR  (r0 I:java.lang.String) =  \"invalid tileX number on zoom level \" \l0x004f: INVOKE  (r8 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0052: INVOKE  (r8 I:java.lang.StringBuilder), (r7 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0055: CONST_STR  (r7 I:java.lang.String) =  \": \" \l0x0057: INVOKE  (r8 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005a: INVOKE  (r8 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x005d: INVOKE  (r5 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0061: INVOKE  \l  (r6 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|0x0064: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0065|0x0065: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0067: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0069: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x006c: CONST_STR  (r8 I:java.lang.String) =  \"zoomLevel must not be negative: \" \l0x006e: INVOKE  (r6 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0071: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0074: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0078: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x007b|0x007b: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x007c|0x007c: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x007e: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0080: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0083: CONST_STR  (r8 I:java.lang.String) =  \"tileY must not be negative: \" \l0x0085: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0088: INVOKE  (r7 I:java.lang.StringBuilder), (r6 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x008b: INVOKE  (r6 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008f: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0092|0x0092: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0093|0x0093: NEW_INSTANCE  (r6 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0095: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0097: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x009a: CONST_STR  (r8 I:java.lang.String) =  \"tileX must not be negative: \" \l0x009c: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x009f: INVOKE  (r7 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00a2: INVOKE  (r5 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00a6: INVOKE  \l  (r6 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a9|0x00a9: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.core.model.Tile.\<init\>((r4 'this' I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

