digraph "CFG fororg.mapsforge.core.model.Tile.tileAreasOverlap(Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:byte) = (r2 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0002: IGET  (r1 I:byte) = (r4 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: RETURN  (r2 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: INVOKE  (r0 I:boolean) = \l  (r2 I:org.mapsforge.core.model.Tile)\l  (r4 I:java.lang.Object)\l org.mapsforge.core.model.Tile.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0016 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: INVOKE  (r0 I:boolean) = \l  (r3 I:org.mapsforge.core.model.Tile)\l  (r5 I:java.lang.Object)\l org.mapsforge.core.model.Tile.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0016 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: RETURN  (r2 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: INVOKE  (r2 I:org.mapsforge.core.model.Rectangle) = \l  (r2 I:org.mapsforge.core.model.Tile)\l  (r3 I:org.mapsforge.core.model.Tile)\l org.mapsforge.core.model.Tile.getBoundaryAbsolute(org.mapsforge.core.model.Tile, org.mapsforge.core.model.Tile):org.mapsforge.core.model.Rectangle type: STATIC \l0x001a: INVOKE  (r3 I:org.mapsforge.core.model.Rectangle) = \l  (r4 I:org.mapsforge.core.model.Tile)\l  (r5 I:org.mapsforge.core.model.Tile)\l org.mapsforge.core.model.Tile.getBoundaryAbsolute(org.mapsforge.core.model.Tile, org.mapsforge.core.model.Tile):org.mapsforge.core.model.Rectangle type: STATIC \l0x001e: INVOKE  (r2 I:boolean) = \l  (r2 I:org.mapsforge.core.model.Rectangle)\l  (r3 I:org.mapsforge.core.model.Rectangle)\l org.mapsforge.core.model.Rectangle.intersects(org.mapsforge.core.model.Rectangle):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean org.mapsforge.core.model.Tile.tileAreasOverlap((r2 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

