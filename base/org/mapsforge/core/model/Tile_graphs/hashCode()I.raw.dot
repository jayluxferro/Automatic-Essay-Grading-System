digraph "CFG fororg.mapsforge.core.model.Tile.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileX int \l0x0002: IGET  (r1 I:int) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileX int \l0x0004: ARITH  (r1 I:int) = (r1 I:int) \>\>\> (16 int) \l0x0006: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r1 I:?[int, boolean, short, byte, char]) \l0x0007: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (217(0xd9, float:3.04E\-43) ?[int, float, short, byte, char])\l \l0x0009: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x000a: ARITH  (r1 I:int) = (r1 I:int) * (31 int) \l0x000c: IGET  (r0 I:int) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileY int \l0x000e: IGET  (r2 I:int) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileY int \l0x0010: ARITH  (r2 I:int) = (r2 I:int) \>\>\> (16 int) \l0x0012: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) ^ (r2 I:?[int, boolean, short, byte, char]) \l0x0013: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x0014: ARITH  (r1 I:int) = (r1 I:int) * (31 int) \l0x0016: IGET  (r0 I:byte) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0018: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x0019: ARITH  (r1 I:int) = (r1 I:int) * (31 int) \l0x001b: IGET  (r0 I:int) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileSize int \l0x001d: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public int org.mapsforge.core.model.Tile.hashCode((r3 'this' I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

