digraph "CFG fororg.mapsforge.core.model.Tile.\<init\>(IIBI)V" {
subgraph cluster_Region_2088126580 {
label = "R(1:(2:18|19)(1:(2:16|17)(1:(2:4|(2:12|13)(1:(1:8)(2:10|11)))(2:14|15))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1227018161 {
label = "IF [B:1:0x0003] THEN: R(2:18|19) ELSE: R(1:(2:16|17)(1:(2:4|(2:12|13)(1:(1:8)(2:10|11)))(2:14|15)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5 \< 0) goto L_0x0093\l}"];
subgraph cluster_Region_1170012394 {
label = "R(2:18|19)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0093}"];
Node_19 [shape=record,label="{19\:\ 0x00a9|throw new java.lang.IllegalArgumentException(\"tileX must not be negative: \" + r5)\l}"];
}
subgraph cluster_Region_245476830 {
label = "R(1:(2:16|17)(1:(2:4|(2:12|13)(1:(1:8)(2:10|11)))(2:14|15))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1088057750 {
label = "IF [B:2:0x0005] THEN: R(2:16|17) ELSE: R(1:(2:4|(2:12|13)(1:(1:8)(2:10|11)))(2:14|15)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r6 \< 0) goto L_0x007c\l}"];
subgraph cluster_Region_526016891 {
label = "R(2:16|17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x007c}"];
Node_17 [shape=record,label="{17\:\ 0x0092|throw new java.lang.IllegalArgumentException(\"tileY must not be negative: \" + r6)\l}"];
}
subgraph cluster_Region_1032036818 {
label = "R(1:(2:4|(2:12|13)(1:(1:8)(2:10|11)))(2:14|15)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1045378273 {
label = "IF [B:3:0x0007] THEN: R(2:4|(2:12|13)(1:(1:8)(2:10|11))) ELSE: R(2:14|15) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r7 \>= 0) goto L_0x0009\l}"];
subgraph cluster_Region_99415880 {
label = "R(2:4|(2:12|13)(1:(1:8)(2:10|11)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|long long r0 = (long) getMaxTileNumber(r7)\l}"];
subgraph cluster_IfRegion_1088800784 {
label = "IF [B:5:0x0011] THEN: R(2:12|13) ELSE: R(1:(1:8)(2:10|11))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|if (((long) r5) \> r0) goto L_0x0046\l}"];
subgraph cluster_Region_764060799 {
label = "R(2:12|13)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0046}"];
Node_13 [shape=record,label="{13\:\ 0x0064|throw new java.lang.IllegalArgumentException(\"invalid tileX number on zoom level \" + r7 + \": \" + r5)\l}"];
}
subgraph cluster_Region_1637308684 {
label = "R(1:(1:8)(2:10|11)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_994096068 {
label = "IF [B:7:0x0016] THEN: R(1:8) ELSE: R(2:10|11) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0016|if (((long) r6) \<= r0) goto L_0x0018\l}"];
subgraph cluster_Region_1094384093 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0018|r4.tileSize = r8\lr4.tileX = r5\lr4.tileY = r6\lr4.zoomLevel = r7\lr4.mapSize = org.mapsforge.core.util.MercatorProjection.getMapSize(r7, r8)\l}"];
}
subgraph cluster_Region_110441767 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0027}"];
Node_11 [shape=record,label="{11\:\ 0x0045|throw new java.lang.IllegalArgumentException(\"invalid tileY number on zoom level \" + r7 + \": \" + r6)\l}"];
}
}
}
}
}
subgraph cluster_Region_2126827734 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0065}"];
Node_15 [shape=record,label="{15\:\ 0x007b|throw new java.lang.IllegalArgumentException(\"zoomLevel must not be negative: \" + r7)\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0013}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0026}"];
MethodNode[shape=record,label="{public void org.mapsforge.core.model.Tile.\<init\>((r4v0 'this' org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_18 -> Node_19;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_16 -> Node_17;
Node_3 -> Node_4;
Node_3 -> Node_14[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_12 -> Node_13;
Node_7 -> Node_8;
Node_7 -> Node_10[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_14 -> Node_15;
Node_0 -> Node_1;
Node_6 -> Node_7;
}

