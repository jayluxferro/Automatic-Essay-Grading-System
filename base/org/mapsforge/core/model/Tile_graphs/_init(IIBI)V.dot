digraph "CFG fororg.mapsforge.core.model.Tile.\<init\>(IIBI)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5 \< 0) goto L_0x0093\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r6 \< 0) goto L_0x007c\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r7 \< 0) goto L_0x0065\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|long r0 = (long) getMaxTileNumber(r7)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if ((((long) r5) \> r0 ? 1 : (((long) r5) == r0 ? 0 : \-1)) \> 0) goto L_0x0046\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013}"];
Node_7 [shape=record,label="{7\:\ 0x0016|if ((((long) r6) \> r0 ? 1 : (((long) r6) == r0 ? 0 : \-1)) \> 0) goto L_0x0027\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|r4.tileSize = r8\lr4.tileX = r5\lr4.tileY = r6\lr4.zoomLevel = r7\lr4.mapSize = org.mapsforge.core.util.MercatorProjection.getMapSize(r7, r8)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|java.lang.StringBuilder r8 = new java.lang.StringBuilder()\lr8.append(\"invalid tileY number on zoom level \")\lr8.append(r7)\lr8.append(\": \")\lr8.append(r6)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|throw new java.lang.IllegalArgumentException(r8.toString())\l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|java.lang.StringBuilder r8 = new java.lang.StringBuilder()\lr8.append(\"invalid tileX number on zoom level \")\lr8.append(r7)\lr8.append(\": \")\lr8.append(r5)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|throw new java.lang.IllegalArgumentException(r8.toString())\l}"];
Node_14 [shape=record,label="{14\:\ 0x0065|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"zoomLevel must not be negative: \")\lr6.append(r7)\l}"];
Node_15 [shape=record,label="{15\:\ 0x007b|throw new java.lang.IllegalArgumentException(r6.toString())\l}"];
Node_16 [shape=record,label="{16\:\ 0x007c|java.lang.StringBuilder r7 = new java.lang.StringBuilder()\lr7.append(\"tileY must not be negative: \")\lr7.append(r6)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0092|throw new java.lang.IllegalArgumentException(r7.toString())\l}"];
Node_18 [shape=record,label="{18\:\ 0x0093|java.lang.StringBuilder r7 = new java.lang.StringBuilder()\lr7.append(\"tileX must not be negative: \")\lr7.append(r5)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00a9|throw new java.lang.IllegalArgumentException(r7.toString())\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.core.model.Tile.\<init\>((r4v0 'this' org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

