digraph "CFG fororg.mapsforge.core.model.Tag.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 != r5) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004}"];
Node_4 [shape=record,label="{4\:\ 0x0007|if ((r5 instanceof org.mapsforge.core.model.Tag) != false) goto L_0x000a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|org.mapsforge.core.model.Tag r5 = (org.mapsforge.core.model.Tag) r5\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|if (r4.key != null) goto L_0x0015\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010}"];
Node_9 [shape=record,label="{9\:\ 0x0012|if (r5.key == null) goto L_0x0034\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|RETURN\l|return false\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015}"];
Node_12 [shape=record,label="{12\:\ 0x001d|if (r4.key.equals(r5.key) != false) goto L_0x0020\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|RETURN\l|return false\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020}"];
Node_15 [shape=record,label="{15\:\ 0x0022|if (r4.value != null) goto L_0x0029\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024}"];
Node_17 [shape=record,label="{17\:\ 0x0026|if (r5.value == null) goto L_0x0034\l}"];
Node_18 [shape=record,label="{18\:\ 0x0028|RETURN\l|return false\l}"];
Node_19 [shape=record,label="{19\:\ 0x0029}"];
Node_20 [shape=record,label="{20\:\ 0x0031|if (r4.value.equals(r5.value) != false) goto L_0x0034\l}"];
Node_21 [shape=record,label="{21\:\ 0x0033|RETURN\l|return false\l}"];
Node_22 [shape=record,label="{22\:\ 0x0034|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.core.model.Tag.equals((r4v0 'this' org.mapsforge.core.model.Tag A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_22;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
}

