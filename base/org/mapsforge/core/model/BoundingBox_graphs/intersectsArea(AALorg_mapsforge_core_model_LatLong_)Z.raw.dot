digraph "CFG fororg.mapsforge.core.model.BoundingBox.intersectsArea([[Lorg\/mapsforge\/core\/model\/LatLong;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0004: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x0005: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x008d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: AGET  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x000a: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x0010: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IF  (r4 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:15:0x0029 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: AGET  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0015: ARRAY_LENGTH  (r6 I:int) = (r5 I:?[]) \l0x0016: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IF  (r7 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:14:0x0026 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: AGET  (r8 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r7 I:?[int, short, byte, char]) \l0x001b: INVOKE  (r8 I:boolean) = \l  (r0 I:org.mapsforge.core.model.BoundingBox)\l  (r8 I:org.mapsforge.core.model.LatLong)\l org.mapsforge.core.model.BoundingBox.contains(org.mapsforge.core.model.LatLong):boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0023 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|0x0021: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: RETURN  (r1 I:boolean) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|0x0029: AGET  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x002b: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x002d: IGET  (r4 I:double) = (r2 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double \l0x002f: AGET  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0031: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0033: IGET  (r6 I:double) = (r2 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x0035: AGET  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0037: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0039: IGET  (r8 I:double) = (r2 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double \l0x003b: AGET  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x003d: AGET  (r2 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x003f: IGET  (r10 I:double) = (r2 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x0041: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x0042: MOVE  (r12 I:?[long, double]) = (r10 I:?[long, double]) \l0x0043: MOVE  (r10 I:?[long, double]) = (r8 I:?[long, double]) \l0x0044: MOVE  (r8 I:?[long, double]) = (r6 I:?[long, double]) \l0x0045: MOVE  (r6 I:?[long, double]) = (r4 I:?[long, double]) \l0x0046: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|0x0047: IF  (r4 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:21:0x0082 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0049|0x0049: AGET  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x004b: ARRAY_LENGTH  (r14 I:int) = (r5 I:?[]) \l0x004c: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x004d: MOVE  (r3 I:?[long, double]) = (r12 I:?[long, double]) \l0x004e: MOVE  (r12 I:?[long, double]) = (r8 I:?[long, double]) \l0x004f: MOVE  (r7 I:?[long, double]) = (r6 I:?[long, double]) \l0x0050: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0051|0x0051: IF  (r6 I:?[int, byte, short, char]) \>= (r14 I:?[int, byte, short, char])  \-\> B:20:0x0076 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0053|0x0053: AGET  (r9 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x0055: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: IGET  (r1 I:double) = (r9 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double \l0x0059: INVOKE  (r7 I:double) = (r7 I:double), (r1 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x005d: IGET  (r1 I:double) = (r9 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double \l0x005f: INVOKE  (r10 I:double) = (r10 I:double), (r1 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0063: IGET  (r1 I:double) = (r9 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x0065: INVOKE  (r12 I:double) = (r12 I:double), (r1 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x0069: IGET  (r1 I:double) = (r9 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x006b: INVOKE  (r3 I:double) = (r3 I:double), (r1 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x006f: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l0x0071: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0073: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0076|0x0076: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0078: ARITH  (r1 I:int) = (r15 I:int) + (1 int) \l0x007a: MOVE  (r6 I:?[long, double]) = (r7 I:?[long, double]) \l0x007b: MOVE  (r8 I:?[long, double]) = (r12 I:?[long, double]) \l0x007c: MOVE  (r12 I:?[long, double]) = (r3 I:?[long, double]) \l0x007d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007e: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0082|0x0082: NEW_INSTANCE  (r1 I:org.mapsforge.core.model.BoundingBox) =  org.mapsforge.core.model.BoundingBox \l0x0084: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0085: INVOKE  \l  (r5 I:org.mapsforge.core.model.BoundingBox)\l  (r6 I:double)\l  (r8 I:double)\l  (r10 I:double)\l  (r12 I:double)\l org.mapsforge.core.model.BoundingBox.\<init\>(double, double, double, double):void type: DIRECT \l0x0088: INVOKE  (r1 I:boolean) = \l  (r0 I:org.mapsforge.core.model.BoundingBox)\l  (r1 I:org.mapsforge.core.model.BoundingBox)\l org.mapsforge.core.model.BoundingBox.intersects(org.mapsforge.core.model.BoundingBox):boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x008c|0x008c: RETURN  (r1 I:boolean) \l}"];
Node_23 [shape=record,label="{23\:\ 0x008d|0x008d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x008e|0x008e: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.core.model.BoundingBox.intersectsArea((r17 'this' I:org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, THIS]), (r18 I:org.mapsforge.core.model.LatLong[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_23;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_23[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_8;
Node_14 -> Node_6;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_18;
Node_20 -> Node_16;
Node_21 -> Node_22;
Node_23 -> Node_24;
}

