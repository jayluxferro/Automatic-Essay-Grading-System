digraph "CFG fororg.mapsforge.core.model.BoundingBox.extendMargin(F)Lorg\/mapsforge\/core\/model\/BoundingBox;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0006: CMP_L  (r2 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN  (r0 I:org.mapsforge.core.model.BoundingBox) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: CMP_G  (r2 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r2 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0064 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r2 I:double) = (r19 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.getLatitudeSpan():double type: VIRTUAL \l0x0014: CAST  (r4 I:double) = (double) (r1 I:float) \l0x0015: ARITH  (r2 I:double) = (r2 I:double) * (r4 I:double) \l0x0017: INVOKE  (r6 I:double) = (r19 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.getLatitudeSpan():double type: VIRTUAL \l0x001b: ARITH  (r2 I:double) = (r2 I:double) \- (r6 I:double) \l0x001c: CONST  (r6 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x001e: ARITH  (r2 I:double) = (r2 I:double) * (r6 I:double) \l0x0020: INVOKE  (r8 I:double) = (r19 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.getLongitudeSpan():double type: VIRTUAL \l0x0024: ARITH  (r8 I:double) = (r8 I:double) * (r4 I:double) \l0x0026: INVOKE  (r4 I:double) = (r19 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.getLongitudeSpan():double type: VIRTUAL \l0x002a: ARITH  (r8 I:double) = (r8 I:double) \- (r4 I:double) \l0x002b: ARITH  (r8 I:double) = (r8 I:double) * (r6 I:double) \l0x002d: CONST  (r4 I:?[long, double]) = \l  (\-4587686678794778154(0xc0554345b1a549d6, double:\-85.05112877980659) ?[long, double])\l \l0x0032: IGET  (r6 I:double) = (r0 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.minLatitude double \l0x0034: ARITH  (r6 I:double) = (r6 I:double) \- (r2 I:double) \l0x0035: INVOKE  (r11 I:double) = (r4 I:double), (r6 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0039: CONST  (r4 I:?[long, double]) = \l  (\-4582834833314545664(0xc066800000000000, double:\-180.0) ?[long, double])\l \l0x003e: IGET  (r6 I:double) = (r0 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.minLongitude double \l0x0040: ARITH  (r6 I:double) = (r6 I:double) \- (r8 I:double) \l0x0041: INVOKE  (r13 I:double) = (r4 I:double), (r6 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0045: CONST  (r4 I:?[long, double]) = \l  (4635685358059997654(0x40554345b1a549d6, double:85.05112877980659) ?[long, double])\l \l0x004a: IGET  (r6 I:double) = (r0 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.maxLatitude double \l0x004c: ARITH  (r6 I:double) = (r6 I:double) + (r2 I:double) \l0x004d: INVOKE  (r15 I:double) = (r4 I:double), (r6 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x0051: CONST  (r1 I:?[long, double]) = \l  (4640537203540230144(0x4066800000000000, double:180.0) ?[long, double])\l \l0x0056: IGET  (r3 I:double) = (r0 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.maxLongitude double \l0x0058: ARITH  (r3 I:double) = (r3 I:double) + (r8 I:double) \l0x0059: INVOKE  (r17 I:double) = (r1 I:double), (r3 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x005d: NEW_INSTANCE  (r1 I:org.mapsforge.core.model.BoundingBox) =  org.mapsforge.core.model.BoundingBox \l0x005f: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0060: INVOKE  \l  (r10 I:org.mapsforge.core.model.BoundingBox)\l  (r11 I:double)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l org.mapsforge.core.model.BoundingBox.\<init\>(double, double, double, double):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0063|0x0063: RETURN  (r1 I:org.mapsforge.core.model.BoundingBox) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0064|0x0064: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0066: CONST_STR  (r2 I:java.lang.String) =  \"BoundingBox extend operation does not accept negative or zero values\" \l0x0068: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x006b|0x006b: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.model.BoundingBox org.mapsforge.core.model.BoundingBox.extendMargin((r19 'this' I:org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, THIS]), (r20 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

