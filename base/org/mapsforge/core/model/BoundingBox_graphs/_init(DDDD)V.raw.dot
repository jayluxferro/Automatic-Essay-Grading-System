digraph "CFG fororg.mapsforge.core.model.BoundingBox.\<init\>(DDDD)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r3 I:double) org.mapsforge.core.util.LatLongUtils.validateLatitude(double):double type: STATIC \l0x0006: INVOKE  (r5 I:double) org.mapsforge.core.util.LatLongUtils.validateLongitude(double):double type: STATIC \l0x0009: INVOKE  (r7 I:double) org.mapsforge.core.util.LatLongUtils.validateLatitude(double):double type: STATIC \l0x000c: INVOKE  (r9 I:double) org.mapsforge.core.util.LatLongUtils.validateLongitude(double):double type: STATIC \l0x000f: CONST  (r0 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0011: CMP_L  (r1 I:int) = (r3 I:double), (r7 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r1 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:8:0x003f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: CMP_L  (r1 I:int) = (r5 I:double), (r9 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IF  (r1 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IPUT  (r3 I:double), (r2 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.minLatitude double \l0x001b: IPUT  (r5 I:double), (r2 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.minLongitude double \l0x001d: IPUT  (r7 I:double), (r2 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.maxLatitude double \l0x001f: IPUT  (r9 I:double), (r2 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.maxLongitude double \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0024: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0026: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0029: CONST_STR  (r7 I:java.lang.String) =  \"invalid longitude range: \" \l0x002b: INVOKE  (r4 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002e: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:double) java.lang.StringBuilder.append(double):java.lang.StringBuilder type: VIRTUAL \l0x0031: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  (r4 I:java.lang.StringBuilder), (r9 I:double) java.lang.StringBuilder.append(double):java.lang.StringBuilder type: VIRTUAL \l0x0037: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003b: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x003e|0x003e: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|0x003f: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0041: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0043: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0046: CONST_STR  (r9 I:java.lang.String) =  \"invalid latitude range: \" \l0x0048: INVOKE  (r6 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004b: INVOKE  (r6 I:java.lang.StringBuilder), (r3 I:double) java.lang.StringBuilder.append(double):java.lang.StringBuilder type: VIRTUAL \l0x004e: INVOKE  (r6 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x0051: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:double) java.lang.StringBuilder.append(double):java.lang.StringBuilder type: VIRTUAL \l0x0054: INVOKE  (r3 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0058: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x005b|0x005b: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.core.model.BoundingBox.\<init\>((r2 'this' I:org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, THIS]), (r3 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

