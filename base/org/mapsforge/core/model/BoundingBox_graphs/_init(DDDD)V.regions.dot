digraph "CFG fororg.mapsforge.core.model.BoundingBox.\<init\>(DDDD)V" {
subgraph cluster_Region_2000457818 {
label = "R(2:0|(2:8|9)(1:(1:4)(2:6|7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.mapsforge.core.util.LatLongUtils.validateLatitude(r3)\lorg.mapsforge.core.util.LatLongUtils.validateLongitude(r5)\lorg.mapsforge.core.util.LatLongUtils.validateLatitude(r7)\lorg.mapsforge.core.util.LatLongUtils.validateLongitude(r9)\l}"];
subgraph cluster_IfRegion_2131933083 {
label = "IF [B:1:0x0013] THEN: R(2:8|9) ELSE: R(1:(1:4)(2:6|7))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0013|if (r3 \> r7) goto L_0x003f\l}"];
subgraph cluster_Region_1407322279 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x003f}"];
Node_9 [shape=record,label="{9\:\ 0x005b|throw new java.lang.IllegalArgumentException(\"invalid latitude range: \" + r3 + ' ' + r7)\l}"];
}
subgraph cluster_Region_1235963172 {
label = "R(1:(1:4)(2:6|7)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1518778891 {
label = "IF [B:3:0x0017] THEN: R(1:4) ELSE: R(2:6|7) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0017|if (r5 \<= r9) goto L_0x0019\l}"];
subgraph cluster_Region_809656495 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0019|r2.minLatitude = r3\lr2.minLongitude = r5\lr2.maxLatitude = r7\lr2.maxLongitude = r9\l}"];
}
subgraph cluster_Region_1931927856 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0022}"];
Node_7 [shape=record,label="{7\:\ 0x003e|throw new java.lang.IllegalArgumentException(\"invalid longitude range: \" + r5 + ' ' + r9)\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0015}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0021}"];
MethodNode[shape=record,label="{public void org.mapsforge.core.model.BoundingBox.\<init\>((r2v0 'this' org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, THIS]), (r3v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_8 -> Node_9;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_2 -> Node_3;
}

