digraph "CFG fororg.mapsforge.core.mapelements.WayTextContainer.\<init\>(Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/graphics\/Display;ILjava\/lang\/String;Lorg\/mapsforge\/core\/graphics\/Paint;Lorg\/mapsforge\/core\/graphics\/Paint;D)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0005: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: INVOKE  \l  (r13 I:org.mapsforge.core.mapelements.MapElementContainer)\l  (r14 I:org.mapsforge.core.model.Point)\l  (r3 I:org.mapsforge.core.graphics.Display)\l  (r4 I:int)\l org.mapsforge.core.mapelements.MapElementContainer.\<init\>(org.mapsforge.core.model.Point, org.mapsforge.core.graphics.Display, int):void type: DIRECT \l0x000a: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x000c: IPUT  \l  (r3 I:java.lang.String)\l  (r0 I:org.mapsforge.core.mapelements.WayTextContainer)\l org.mapsforge.core.mapelements.WayTextContainer.text java.lang.String \l0x000e: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x0010: IPUT  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.mapelements.WayTextContainer)\l org.mapsforge.core.mapelements.WayTextContainer.paintFront org.mapsforge.core.graphics.Paint \l0x0012: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0014: IPUT  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.mapelements.WayTextContainer)\l org.mapsforge.core.mapelements.WayTextContainer.paintBack org.mapsforge.core.graphics.Paint \l0x0016: IPUT  \l  (r2 I:org.mapsforge.core.model.Point)\l  (r0 I:org.mapsforge.core.mapelements.WayTextContainer)\l org.mapsforge.core.mapelements.WayTextContainer.end org.mapsforge.core.model.Point \l0x0018: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: IPUT  \l  (r3 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.core.mapelements.WayTextContainer)\l org.mapsforge.core.mapelements.WayTextContainer.boundary org.mapsforge.core.model.Rectangle \l0x001b: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle \l0x001d: IGET  (r4 I:double) = (r1 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x001f: IGET  (r6 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0021: INVOKE  (r5 I:double) = (r4 I:double), (r6 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x0025: IGET  (r7 I:double) = (r1 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0027: IGET  (r9 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0029: INVOKE  (r7 I:double) = (r7 I:double), (r9 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x002d: IGET  (r9 I:double) = (r1 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x002f: IGET  (r11 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0031: INVOKE  (r9 I:double) = (r9 I:double), (r11 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x0035: IGET  (r11 I:double) = (r1 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0037: IGET  (r1 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0039: INVOKE  (r11 I:double) = (r11 I:double), (r1 I:double) java.lang.Math.max(double, double):double type: STATIC \l0x003d: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x003e: INVOKE  \l  (r4 I:org.mapsforge.core.model.Rectangle)\l  (r5 I:double)\l  (r7 I:double)\l  (r9 I:double)\l  (r11 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT \l0x0041: CONST  (r1 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0043: ARITH  (r1 I:double) = (r21 I:double) \/ (r1 I:double) \l0x0045: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0047: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x0049: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x004a: MOVE  (r15 I:?[long, double]) = (r4 I:?[long, double]) \l0x004b: MOVE  (r17 I:?[long, double]) = (r1 I:?[long, double]) \l0x004d: MOVE  (r19 I:?[long, double]) = (r6 I:?[long, double]) \l0x004f: MOVE  (r21 I:?[long, double]) = (r1 I:?[long, double]) \l0x0051: INVOKE  (r1 I:org.mapsforge.core.model.Rectangle) = \l  (r14 I:org.mapsforge.core.model.Rectangle)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l  (r21 I:double)\l org.mapsforge.core.model.Rectangle.enlarge(double, double, double, double):org.mapsforge.core.model.Rectangle type: VIRTUAL \l0x0055: IPUT  \l  (r1 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.core.mapelements.WayTextContainer)\l org.mapsforge.core.mapelements.WayTextContainer.boundaryAbsolute org.mapsforge.core.model.Rectangle \l}"];
Node_1 [shape=record,label="{1\:\ 0x0057|0x0057: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.core.mapelements.WayTextContainer.\<init\>((r13 'this' I:org.mapsforge.core.mapelements.WayTextContainer A[IMMUTABLE_TYPE, THIS]), (r14 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:org.mapsforge.core.graphics.Display A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

