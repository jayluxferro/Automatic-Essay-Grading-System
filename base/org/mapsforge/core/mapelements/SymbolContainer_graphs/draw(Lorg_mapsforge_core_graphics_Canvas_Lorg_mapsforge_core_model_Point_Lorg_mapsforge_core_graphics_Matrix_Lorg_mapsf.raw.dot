digraph "CFG fororg.mapsforge.core.mapelements.SymbolContainer.draw(Lorg\/mapsforge\/core\/graphics\/Canvas;Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/graphics\/Matrix;Lorg\/mapsforge\/core\/graphics\/Filter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r8 I:org.mapsforge.core.graphics.Matrix) org.mapsforge.core.graphics.Matrix.reset():void type: INTERFACE \l0x0003: IGET  (r0 I:org.mapsforge.core.model.Point) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.xy org.mapsforge.core.model.Point \l0x0005: IGET  (r0 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0007: IGET  (r2 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0009: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x000a: IGET  (r2 I:org.mapsforge.core.model.Rectangle) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.boundary org.mapsforge.core.model.Rectangle \l0x000c: IGET  (r2 I:double) = (r2 I:org.mapsforge.core.model.Rectangle) org.mapsforge.core.model.Rectangle.left double \l0x000e: ARITH  (r0 I:double) = (r0 I:double) + (r2 I:double) \l0x000f: CAST  (r0 I:int) = (int) (r0 I:double) \l0x0010: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0011: IGET  (r1 I:org.mapsforge.core.model.Point) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.xy org.mapsforge.core.model.Point \l0x0013: IGET  (r1 I:double) = (r1 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0015: IGET  (r3 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0017: ARITH  (r1 I:double) = (r1 I:double) \- (r3 I:double) \l0x0018: IGET  (r7 I:org.mapsforge.core.model.Rectangle) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.boundary org.mapsforge.core.model.Rectangle \l0x001a: IGET  (r3 I:double) = (r7 I:org.mapsforge.core.model.Rectangle) org.mapsforge.core.model.Rectangle.top double \l0x001c: ARITH  (r1 I:double) = (r1 I:double) + (r3 I:double) \l0x001d: CAST  (r7 I:int) = (int) (r1 I:double) \l0x001e: CAST  (r7 I:float) = (float) (r7 I:int) \l0x001f: INVOKE  \l  (r8 I:org.mapsforge.core.graphics.Matrix)\l  (r0 I:float)\l  (r7 I:float)\l org.mapsforge.core.graphics.Matrix.translate(float, float):void type: INTERFACE \l0x0022: IGET  (r7 I:float) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.theta float \l0x0024: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0025: CMP_L  (r7 I:int) = (r7 I:float), (r0 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0027|0x0027: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x003f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0029|0x0029: IGET  (r7 I:boolean) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.alignCenter boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x002b|0x002b: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x003f \l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|0x002d: IGET  (r7 I:float) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.theta float \l0x002f: IGET  (r0 I:org.mapsforge.core.model.Rectangle) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.boundary org.mapsforge.core.model.Rectangle \l0x0031: IGET  (r0 I:double) = (r0 I:org.mapsforge.core.model.Rectangle) org.mapsforge.core.model.Rectangle.left double \l0x0033: NEG  (r0 I:double) = (r0 I:double) \l0x0034: CAST  (r0 I:float) = (float) (r0 I:double) \l0x0035: IGET  (r1 I:org.mapsforge.core.model.Rectangle) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.boundary org.mapsforge.core.model.Rectangle \l0x0037: IGET  (r1 I:double) = (r1 I:org.mapsforge.core.model.Rectangle) org.mapsforge.core.model.Rectangle.top double \l0x0039: NEG  (r1 I:double) = (r1 I:double) \l0x003a: CAST  (r1 I:float) = (float) (r1 I:double) \l0x003b: INVOKE  \l  (r8 I:org.mapsforge.core.graphics.Matrix)\l  (r7 I:float)\l  (r0 I:float)\l  (r1 I:float)\l org.mapsforge.core.graphics.Matrix.rotate(float, float, float):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x003f|0x003f: IGET  (r7 I:float) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.theta float \l0x0041: INVOKE  (r8 I:org.mapsforge.core.graphics.Matrix), (r7 I:float) org.mapsforge.core.graphics.Matrix.rotate(float):void type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0044|0x0044: IGET  (r7 I:org.mapsforge.core.graphics.Bitmap) = (r5 I:org.mapsforge.core.mapelements.SymbolContainer) org.mapsforge.core.mapelements.SymbolContainer.symbol org.mapsforge.core.graphics.Bitmap \l0x0046: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:org.mapsforge.core.graphics.Bitmap)\l  (r8 I:org.mapsforge.core.graphics.Matrix)\l  (r9 I:org.mapsforge.core.graphics.Filter)\l org.mapsforge.core.graphics.Canvas.drawBitmap(org.mapsforge.core.graphics.Bitmap, org.mapsforge.core.graphics.Matrix, org.mapsforge.core.graphics.Filter):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0049|0x0049: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.core.mapelements.SymbolContainer.draw((r5 'this' I:org.mapsforge.core.mapelements.SymbolContainer A[IMMUTABLE_TYPE, THIS]), (r6 I:org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.mapsforge.core.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.mapsforge.core.graphics.Filter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

