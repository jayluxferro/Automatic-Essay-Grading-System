digraph "CFG fororg.mapsforge.core.mapelements.PointTextContainer.\<init\>(Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/graphics\/Display;ILjava\/lang\/String;Lorg\/mapsforge\/core\/graphics\/Paint;Lorg\/mapsforge\/core\/graphics\/Paint;Lorg\/mapsforge\/core\/mapelements\/SymbolContainer;Lorg\/mapsforge\/core\/graphics\/Position;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r0 I:org.mapsforge.core.mapelements.MapElementContainer)\l  (r1 I:org.mapsforge.core.model.Point)\l  (r2 I:org.mapsforge.core.graphics.Display)\l  (r3 I:int)\l org.mapsforge.core.mapelements.MapElementContainer.\<init\>(org.mapsforge.core.model.Point, org.mapsforge.core.graphics.Display, int):void type: DIRECT \l0x0003: IPUT  \l  (r9 I:int)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.maxTextWidth int \l0x0005: IPUT  \l  (r4 I:java.lang.String)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.text java.lang.String \l0x0007: IPUT  \l  (r7 I:org.mapsforge.core.mapelements.SymbolContainer)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.symbolContainer org.mapsforge.core.mapelements.SymbolContainer \l0x0009: IPUT  \l  (r5 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.paintFront org.mapsforge.core.graphics.Paint \l0x000b: IPUT  \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l0x000d: IPUT  \l  (r8 I:org.mapsforge.core.graphics.Position)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.position org.mapsforge.core.graphics.Position \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: INVOKE  (r1 I:int) = \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r4 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x0015: IPUT  \l  (r1 I:int)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.textWidth int \l0x0017: INVOKE  (r1 I:int) = \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r4 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x001b: IPUT  \l  (r1 I:int)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.textHeight int \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: INVOKE  (r1 I:int) = \l  (r5 I:org.mapsforge.core.graphics.Paint)\l  (r4 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x0022: IPUT  \l  (r1 I:int)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.textWidth int \l0x0024: INVOKE  (r1 I:int) = \l  (r5 I:org.mapsforge.core.graphics.Paint)\l  (r4 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x0028: IPUT  \l  (r1 I:int)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.textHeight int \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: IGET  (r1 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.core.mapelements.PointTextContainer) org.mapsforge.core.mapelements.PointTextContainer.paintFront org.mapsforge.core.graphics.Paint \l0x002c: INVOKE  (r1 I:boolean) = (r1 I:org.mapsforge.core.graphics.Paint) org.mapsforge.core.graphics.Paint.isTransparent():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0030|0x0030: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0041 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|0x0032: IGET  (r1 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.core.mapelements.PointTextContainer) org.mapsforge.core.mapelements.PointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: IGET  (r1 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.core.mapelements.PointTextContainer) org.mapsforge.core.mapelements.PointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l0x0038: INVOKE  (r1 I:boolean) = (r1 I:org.mapsforge.core.graphics.Paint) org.mapsforge.core.graphics.Paint.isTransparent():boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|0x003c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x003f \l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|0x003f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0042|0x0042: IPUT  \l  (r1 I:boolean)\l  (r0 I:org.mapsforge.core.mapelements.PointTextContainer)\l org.mapsforge.core.mapelements.PointTextContainer.isVisible boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|0x0044: RETURN   \l}"];
MethodNode[shape=record,label="{protected void org.mapsforge.core.mapelements.PointTextContainer.\<init\>((r0 'this' I:org.mapsforge.core.mapelements.PointTextContainer A[IMMUTABLE_TYPE, THIS]), (r1 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:org.mapsforge.core.graphics.Display A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.core.mapelements.SymbolContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.mapsforge.core.graphics.Position A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

