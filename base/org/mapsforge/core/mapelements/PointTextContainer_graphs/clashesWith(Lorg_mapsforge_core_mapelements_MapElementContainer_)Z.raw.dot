digraph "CFG fororg.mapsforge.core.mapelements.PointTextContainer.clashesWith(Lorg\/mapsforge\/core\/mapelements\/MapElementContainer;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r7 I:org.mapsforge.core.mapelements.MapElementContainer)\l  (r8 I:org.mapsforge.core.mapelements.MapElementContainer)\l org.mapsforge.core.mapelements.MapElementContainer.clashesWith(org.mapsforge.core.mapelements.MapElementContainer):boolean type: SUPER \l0x0004: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INSTANCE_OF  (r0 I:boolean) = (r8 I:?[OBJECT, ARRAY]) org.mapsforge.core.mapelements.PointTextContainer \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: RETURN  (r2 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: CHECK_CAST  (r8 I:org.mapsforge.core.mapelements.PointTextContainer) = (org.mapsforge.core.mapelements.PointTextContainer) (r8 I:?[OBJECT, ARRAY]) \l0x0010: IGET  (r0 I:java.lang.String) = (r7 I:org.mapsforge.core.mapelements.PointTextContainer) org.mapsforge.core.mapelements.PointTextContainer.text java.lang.String \l0x0012: IGET  (r3 I:java.lang.String) = (r8 I:org.mapsforge.core.mapelements.PointTextContainer) org.mapsforge.core.mapelements.PointTextContainer.text java.lang.String \l0x0014: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0029 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IGET  (r0 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.mapelements.PointTextContainer) org.mapsforge.core.mapelements.PointTextContainer.xy org.mapsforge.core.model.Point \l0x001c: IGET  (r8 I:org.mapsforge.core.model.Point) = (r8 I:org.mapsforge.core.mapelements.PointTextContainer) org.mapsforge.core.mapelements.PointTextContainer.xy org.mapsforge.core.model.Point \l0x001e: INVOKE  (r3 I:double) = \l  (r0 I:org.mapsforge.core.model.Point)\l  (r8 I:org.mapsforge.core.model.Point)\l org.mapsforge.core.model.Point.distance(org.mapsforge.core.model.Point):double type: VIRTUAL \l0x0022: CONST  (r5 I:?[long, double]) = \l  (4641240890982006784(0x4069000000000000, double:200.0) ?[long, double])\l \l0x0024: CMP_G  (r8 I:int) = (r3 I:double), (r5 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0026|0x0026: IF  (r8 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x0029 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: RETURN  (r1 I:boolean) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.core.mapelements.PointTextContainer.clashesWith((r7 'this' I:org.mapsforge.core.mapelements.PointTextContainer A[IMMUTABLE_TYPE, THIS]), (r8 I:org.mapsforge.core.mapelements.MapElementContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
}

