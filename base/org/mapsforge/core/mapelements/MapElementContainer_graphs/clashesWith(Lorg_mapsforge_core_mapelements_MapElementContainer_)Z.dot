digraph "CFG fororg.mapsforge.core.mapelements.MapElementContainer.clashesWith(Lorg\/mapsforge\/core\/mapelements\/MapElementContainer;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (org.mapsforge.core.graphics.Display.ALWAYS == r2.display) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (org.mapsforge.core.graphics.Display.ALWAYS != r3.display) goto L_0x000d\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d}"];
Node_5 [shape=record,label="{5\:\ 0x0019|RETURN\l|return getBoundaryAbsolute().intersects(r3.getBoundaryAbsolute())\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.core.mapelements.MapElementContainer.clashesWith((r2v0 'this' org.mapsforge.core.mapelements.MapElementContainer A[IMMUTABLE_TYPE, THIS]), (r3v0 org.mapsforge.core.mapelements.MapElementContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
}

