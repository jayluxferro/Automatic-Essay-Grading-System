digraph "CFG fororg.mapsforge.core.graphics.GraphicUtils.filterColor(ILorg\/mapsforge\/core\/graphics\/Filter;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN  (r6 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: ARITH  (r0 I:int) = (r6 I:int) \>\>\> (24 int) \l0x0007: ARITH  (r1 I:int) = (r6 I:int) \>\> (16 int) \l0x0009: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x000b: ARITH  (r2 I:int) = (r6 I:int) \>\> (8 int) \l0x000d: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x000f: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) & (255(0xff, float:3.57E\-43) ?[int, float, short, byte, char]) \l0x0011: SGET  (r3 I:int[]) =  org.mapsforge.core.graphics.GraphicUtils.1.$SwitchMap$org$mapsforge$core$graphics$Filter int[] \l0x0013: INVOKE  (r7 I:int) = (r7 I:org.mapsforge.core.graphics.Filter) org.mapsforge.core.graphics.Filter.ordinal():int type: VIRTUAL \l0x0017: AGET  (r7 I:?[int, float]) = (r3 I:?[int, float][]), (r7 I:?[int, short, byte, char]) \l0x0019: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1033073852(0x3d9374bc, float:0.072) ?[int, float, short, byte, char])\l \l0x001c: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1060571709(0x3f370a3d, float:0.715) ?[int, float, short, byte, char])\l \l0x001f: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1046092972(0x3e5a1cac, float:0.213) ?[int, float, short, byte, char])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: SWITCH  \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3] t:[0x003c, 0x002d, 0x0026] \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: ARITH  (r1 I:int) = (255 int) \- (r1 I:int) \l0x0028: ARITH  (r2 I:int) = (255 int) \- (r2 I:int) \l0x002a: ARITH  (r6 I:int) = (255 int) \- (r6 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: CAST  (r7 I:float) = (float) (r1 I:int) \l0x002e: ARITH  (r7 I:float) = (r7 I:float) * (r5 I:float) \l0x0030: CAST  (r1 I:float) = (float) (r2 I:int) \l0x0031: ARITH  (r1 I:float) = (r1 I:float) * (r4 I:float) \l0x0033: ARITH  (r7 I:float) = (r7 I:float) + (r1 I:float) \l0x0034: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0035: ARITH  (r6 I:float) = (r6 I:float) * (r3 I:float) \l0x0037: ARITH  (r7 I:float) = (r7 I:float) + (r6 I:float) \l0x0038: CAST  (r6 I:int) = (int) (r7 I:float) \l0x0039: ARITH  (r1 I:int) = (255 int) \- (r6 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003c|0x003c: CAST  (r7 I:float) = (float) (r1 I:int) \l0x003d: ARITH  (r7 I:float) = (r7 I:float) * (r5 I:float) \l0x003f: CAST  (r1 I:float) = (float) (r2 I:int) \l0x0040: ARITH  (r1 I:float) = (r1 I:float) * (r4 I:float) \l0x0042: ARITH  (r7 I:float) = (r7 I:float) + (r1 I:float) \l0x0043: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0044: ARITH  (r6 I:float) = (r6 I:float) * (r3 I:float) \l0x0046: ARITH  (r7 I:float) = (r7 I:float) + (r6 I:float) \l0x0047: CAST  (r1 I:int) = (int) (r7 I:float) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|0x0048: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0049: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x004a|0x004a: ARITH  (r7 I:int) = (r0 I:int) \<\< (24 int) \l0x004c: ARITH  (r0 I:int) = (r1 I:int) \<\< (16 int) \l0x004e: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) \| (r0 I:?[int, boolean, short, byte, char]) \l0x004f: ARITH  (r0 I:int) = (r2 I:int) \<\< (8 int) \l0x0051: ARITH  (r7 I:?[int, boolean, short, byte, char]) = (r7 I:?[int, boolean, short, byte, char]) \| (r0 I:?[int, boolean, short, byte, char]) \l0x0052: ARITH  (r6 I:?[int, boolean, short, byte, char]) = (r6 I:?[int, boolean, short, byte, char]) \| (r7 I:?[int, boolean, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0053|0x0053: RETURN  (r6 I:int) \l}"];
MethodNode[shape=record,label="{public static int org.mapsforge.core.graphics.GraphicUtils.filterColor((r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.core.graphics.Filter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_7;
Node_4 -> Node_8;
Node_4 -> Node_10;
Node_6 -> Node_10;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

