digraph "CFG fororg.mapsforge.map.util.LayerUtil.getTilePositions(Lorg\/mapsforge\/core\/model\/BoundingBox;BLorg\/mapsforge\/core\/model\/Point;I)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:double) = (r12 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.minLongitude double \l0x0002: INVOKE  (r0 I:int) = (r0 I:double), (r13 I:byte) org.mapsforge.core.util.MercatorProjection.longitudeToTileX(double, byte):int type: STATIC \l0x0006: IGET  (r1 I:double) = (r12 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.maxLatitude double \l0x0008: INVOKE  (r1 I:int) = (r1 I:double), (r13 I:byte) org.mapsforge.core.util.MercatorProjection.latitudeToTileY(double, byte):int type: STATIC \l0x000c: IGET  (r2 I:double) = (r12 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.maxLongitude double \l0x000e: INVOKE  (r2 I:int) = (r2 I:double), (r13 I:byte) org.mapsforge.core.util.MercatorProjection.longitudeToTileX(double, byte):int type: STATIC \l0x0012: IGET  (r3 I:double) = (r12 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.minLatitude double \l0x0014: INVOKE  (r12 I:int) = (r3 I:double), (r13 I:byte) org.mapsforge.core.util.MercatorProjection.latitudeToTileY(double, byte):int type: STATIC \l0x0018: ARITH  (r3 I:int) = (r2 I:int) \- (r0 I:int) \l0x001a: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x001c: ARITH  (r4 I:int) = (r12 I:int) \- (r1 I:int) \l0x001e: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l0x0020: ARITH  (r3 I:int) = (r3 I:int) * (r4 I:int) \l0x0022: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList \l0x0024: INVOKE  (r4 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0027|0x0027: IF  (r1 I:?[int, byte, short, char]) \> (r12 I:?[int, byte, short, char])  \-\> B:6:0x0056 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0029|0x0029: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: IF  (r3 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:5:0x0053 \l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|0x002c: CAST  (r5 I:long) = (long) (r3 I:int) \l0x002d: INVOKE  (r5 I:long) = (r5 I:long), (r15 I:int) org.mapsforge.core.util.MercatorProjection.tileToPixel(long, int):long type: STATIC \l0x0031: CAST  (r5 I:double) = (double) (r5 I:long) \l0x0032: IGET  (r7 I:double) = (r14 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0034: ARITH  (r5 I:double) = (r5 I:double) \- (r7 I:double) \l0x0035: CAST  (r7 I:long) = (long) (r1 I:int) \l0x0036: INVOKE  (r7 I:long) = (r7 I:long), (r15 I:int) org.mapsforge.core.util.MercatorProjection.tileToPixel(long, int):long type: STATIC \l0x003a: CAST  (r7 I:double) = (double) (r7 I:long) \l0x003b: IGET  (r9 I:double) = (r14 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x003d: ARITH  (r7 I:double) = (r7 I:double) \- (r9 I:double) \l0x003e: NEW_INSTANCE  (r9 I:org.mapsforge.map.layer.TilePosition) =  org.mapsforge.map.layer.TilePosition \l0x0040: NEW_INSTANCE  (r10 I:org.mapsforge.core.model.Tile) =  org.mapsforge.core.model.Tile \l0x0042: INVOKE  \l  (r10 I:org.mapsforge.core.model.Tile)\l  (r3 I:int)\l  (r1 I:int)\l  (r13 I:byte)\l  (r15 I:int)\l org.mapsforge.core.model.Tile.\<init\>(int, int, byte, int):void type: DIRECT \l0x0045: NEW_INSTANCE  (r11 I:org.mapsforge.core.model.Point) =  org.mapsforge.core.model.Point \l0x0047: INVOKE  \l  (r11 I:org.mapsforge.core.model.Point)\l  (r5 I:double)\l  (r7 I:double)\l org.mapsforge.core.model.Point.\<init\>(double, double):void type: DIRECT \l0x004a: INVOKE  \l  (r9 I:org.mapsforge.map.layer.TilePosition)\l  (r10 I:org.mapsforge.core.model.Tile)\l  (r11 I:org.mapsforge.core.model.Point)\l org.mapsforge.map.layer.TilePosition.\<init\>(org.mapsforge.core.model.Tile, org.mapsforge.core.model.Point):void type: DIRECT \l0x004d: INVOKE  (r4 I:java.util.List), (r9 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0050: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0053|0x0053: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0056|0x0056: RETURN  (r4 I:java.util.List\<org.mapsforge.map.layer.TilePosition\>) \l}"];
MethodNode[shape=record,label="{public static java.util.List\<org.mapsforge.map.layer.TilePosition\> org.mapsforge.map.util.LayerUtil.getTilePositions((r12 I:org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/core\/model\/BoundingBox;, B, Lorg\/mapsforge\/core\/model\/Point;, I), Ljava\/util\/List\<, Lorg\/mapsforge\/map\/layer\/TilePosition;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_3;
Node_5 -> Node_1;
}

