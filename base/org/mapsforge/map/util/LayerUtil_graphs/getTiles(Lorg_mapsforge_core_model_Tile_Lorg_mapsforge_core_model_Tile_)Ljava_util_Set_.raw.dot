digraph "CFG fororg.mapsforge.map.util.LayerUtil.getTiles(Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;)Ljava\/util\/Set;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet \l0x0002: INVOKE  (r0 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x0005: IGET  (r1 I:int) = (r6 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileY int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IGET  (r2 I:int) = (r7 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileY int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r1 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:8:0x0023 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r2 I:int) = (r6 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileX int \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r3 I:int) = (r7 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileX int \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r2 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Tile) =  org.mapsforge.core.model.Tile \l0x0013: IGET  (r4 I:byte) = (r6 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0015: IGET  (r5 I:int) = (r6 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileSize int \l0x0017: INVOKE  \l  (r3 I:org.mapsforge.core.model.Tile)\l  (r2 I:int)\l  (r1 I:int)\l  (r4 I:byte)\l  (r5 I:int)\l org.mapsforge.core.model.Tile.\<init\>(int, int, byte, int):void type: DIRECT \l0x001a: INVOKE  (r0 I:java.util.Set), (r3 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x001d: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: RETURN  (r0 I:java.util.Set\<org.mapsforge.core.model.Tile\>) \l}"];
MethodNode[shape=record,label="{public static java.util.Set\<org.mapsforge.core.model.Tile\> org.mapsforge.map.util.LayerUtil.getTiles((r6 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/core\/model\/Tile;, Lorg\/mapsforge\/core\/model\/Tile;, ), Ljava\/util\/Set\<, Lorg\/mapsforge\/core\/model\/Tile;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_1;
}

