digraph "CFG fororg.mapsforge.map.util.PausableThread.awaitPausing()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lSYNTHETIC\lLOOP:0: B:1:0x0001\-\>B:16:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (isInterrupted() != false) goto L_0x001b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x000b|if (isPausing() != false) goto L_0x001b\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d}"];
Node_7 [shape=record,label="{7\:\ 0x000f|SYNTHETIC\lSplitter:B:7:0x000f\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ InterruptedException \-\> 0x0013 \}\lSplitter:B:7:0x000f\l|wait(100)     \/\/ Catch:\{ InterruptedException \-\> 0x0013 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|SYNTHETIC\lDONT_GENERATE\l}"];
Node_10 [shape=record,label="{10\:\ ?|java.lang.Thread.currentThread().interrupt()\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|monitor\-exit(r2)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|REMOVE\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x001e|REMOVE\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|REMOVE\l|throw r0\l}"];
Node_16 [shape=record,label="{16\:\ 0x0001|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0001\-\>B:16:0x0001\l}"];
Node_17 [shape=record,label="{17\:\ 0x001b|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x001b|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0001|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0001|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public final void org.mapsforge.map.util.PausableThread.awaitPausing((r2v0 'this' org.mapsforge.map.util.PausableThread A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_17;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_9 -> Node_13;
Node_10 -> Node_20;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_1;
Node_17 -> Node_11;
Node_18 -> Node_11;
Node_19 -> Node_16;
Node_20 -> Node_16;
}

