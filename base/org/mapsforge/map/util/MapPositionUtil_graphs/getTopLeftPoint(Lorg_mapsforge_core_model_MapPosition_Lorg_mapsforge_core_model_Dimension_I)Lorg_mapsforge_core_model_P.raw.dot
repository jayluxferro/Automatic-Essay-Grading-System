digraph "CFG fororg.mapsforge.map.util.MapPositionUtil.getTopLeftPoint(Lorg\/mapsforge\/core\/model\/MapPosition;Lorg\/mapsforge\/core\/model\/Dimension;I)Lorg\/mapsforge\/core\/model\/Point;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.core.model.LatLong) = (r8 I:org.mapsforge.core.model.MapPosition) org.mapsforge.core.model.MapPosition.latLong org.mapsforge.core.model.LatLong \l0x0002: IGET  (r1 I:int) = (r9 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.width int \l0x0004: ARITH  (r1 I:int) = (r1 I:int) \/ (2 int) \l0x0006: IGET  (r9 I:int) = (r9 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.height int \l0x0008: ARITH  (r9 I:int) = (r9 I:int) \/ (2 int) \l0x000a: IGET  (r8 I:byte) = (r8 I:org.mapsforge.core.model.MapPosition) org.mapsforge.core.model.MapPosition.zoomLevel byte \l0x000c: INVOKE  (r2 I:long) = (r8 I:byte), (r10 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC \l0x0010: IGET  (r4 I:double) = (r0 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x0012: INVOKE  (r4 I:double) = (r4 I:double), (r2 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC \l0x0016: INVOKE  (r4 I:long) = (r4 I:double) java.lang.Math.round(double):long type: STATIC \l0x001a: CAST  (r4 I:double) = (double) (r4 I:long) \l0x001b: IGET  (r6 I:double) = (r0 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double \l0x001d: INVOKE  (r2 I:double) = (r6 I:double), (r2 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC \l0x0021: INVOKE  (r2 I:long) = (r2 I:double) java.lang.Math.round(double):long type: STATIC \l0x0025: CAST  (r2 I:double) = (double) (r2 I:long) \l0x0026: NEW_INSTANCE  (r8 I:org.mapsforge.core.model.Point) =  org.mapsforge.core.model.Point \l0x0028: CAST  (r4 I:long) = (long) (r4 I:double) \l0x0029: CAST  (r0 I:long) = (long) (r1 I:int) \l0x002a: ARITH  (r4 I:long) = (r4 I:long) \- (r0 I:long) \l0x002b: CAST  (r0 I:double) = (double) (r4 I:long) \l0x002c: CAST  (r2 I:long) = (long) (r2 I:double) \l0x002d: CAST  (r9 I:long) = (long) (r9 I:int) \l0x002e: ARITH  (r2 I:long) = (r2 I:long) \- (r9 I:long) \l0x002f: CAST  (r9 I:double) = (double) (r2 I:long) \l0x0030: INVOKE  \l  (r8 I:org.mapsforge.core.model.Point)\l  (r0 I:double)\l  (r9 I:double)\l org.mapsforge.core.model.Point.\<init\>(double, double):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0033|0x0033: RETURN  (r8 I:org.mapsforge.core.model.Point) \l}"];
MethodNode[shape=record,label="{public static org.mapsforge.core.model.Point org.mapsforge.map.util.MapPositionUtil.getTopLeftPoint((r8 I:org.mapsforge.core.model.MapPosition A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.mapsforge.core.model.Dimension A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

