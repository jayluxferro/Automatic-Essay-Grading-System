digraph "CFG fororg.mapsforge.map.util.MapViewProjection.getLongitudeSpan()D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.view.MapView) = (r5 I:org.mapsforge.map.util.MapViewProjection) org.mapsforge.map.util.MapViewProjection.mapView org.mapsforge.map.view.MapView \l0x0002: INVOKE  (r0 I:int) = (r0 I:org.mapsforge.map.view.MapView) org.mapsforge.map.view.MapView.getWidth():int type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:org.mapsforge.map.view.MapView) = (r5 I:org.mapsforge.map.util.MapViewProjection) org.mapsforge.map.util.MapViewProjection.mapView org.mapsforge.map.view.MapView \l0x000a: INVOKE  (r0 I:int) = (r0 I:org.mapsforge.map.view.MapView) org.mapsforge.map.view.MapView.getHeight():int type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x002b \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0012: INVOKE  (r2 I:org.mapsforge.core.model.LatLong) = \l  (r5 I:org.mapsforge.map.util.MapViewProjection)\l  (r0 I:double)\l  (r0 I:double)\l org.mapsforge.map.util.MapViewProjection.fromPixels(double, double):org.mapsforge.core.model.LatLong type: VIRTUAL \l0x0016: IGET  (r3 I:org.mapsforge.map.view.MapView) = (r5 I:org.mapsforge.map.util.MapViewProjection) org.mapsforge.map.util.MapViewProjection.mapView org.mapsforge.map.view.MapView \l0x0018: INVOKE  (r3 I:int) = (r3 I:org.mapsforge.map.view.MapView) org.mapsforge.map.view.MapView.getWidth():int type: INTERFACE \l0x001c: CAST  (r3 I:double) = (double) (r3 I:int) \l0x001d: INVOKE  (r0 I:org.mapsforge.core.model.LatLong) = \l  (r5 I:org.mapsforge.map.util.MapViewProjection)\l  (r3 I:double)\l  (r0 I:double)\l org.mapsforge.map.util.MapViewProjection.fromPixels(double, double):org.mapsforge.core.model.LatLong type: VIRTUAL \l0x0021: IGET  (r1 I:double) = (r2 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x0023: IGET  (r3 I:double) = (r0 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x0025: ARITH  (r1 I:double) = (r1 I:double) \- (r3 I:double) \l0x0026: INVOKE  (r0 I:double) = (r1 I:double) java.lang.Math.abs(double):double type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: RETURN  (r0 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x002d: CONST_STR  (r1 I:java.lang.String) =  \"invalid MapView dimensions\" \l0x002f: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|0x0032: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public double org.mapsforge.map.util.MapViewProjection.getLongitudeSpan((r5 'this' I:org.mapsforge.map.util.MapViewProjection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

