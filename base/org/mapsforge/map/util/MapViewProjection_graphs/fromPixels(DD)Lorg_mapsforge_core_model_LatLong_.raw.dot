digraph "CFG fororg.mapsforge.map.util.MapViewProjection.fromPixels(DD)Lorg\/mapsforge\/core\/model\/LatLong;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.view.MapView) = (r11 I:org.mapsforge.map.util.MapViewProjection) org.mapsforge.map.util.MapViewProjection.mapView org.mapsforge.map.view.MapView \l0x0002: INVOKE  (r0 I:int) = (r0 I:org.mapsforge.map.view.MapView) org.mapsforge.map.view.MapView.getWidth():int type: INTERFACE \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x0068 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r0 I:org.mapsforge.map.view.MapView) = (r11 I:org.mapsforge.map.util.MapViewProjection) org.mapsforge.map.util.MapViewProjection.mapView org.mapsforge.map.view.MapView \l0x000b: INVOKE  (r0 I:int) = (r0 I:org.mapsforge.map.view.MapView) org.mapsforge.map.view.MapView.getHeight():int type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IGET  (r0 I:org.mapsforge.map.view.MapView) = (r11 I:org.mapsforge.map.util.MapViewProjection) org.mapsforge.map.util.MapViewProjection.mapView org.mapsforge.map.view.MapView \l0x0014: INVOKE  (r0 I:org.mapsforge.map.model.Model) = (r0 I:org.mapsforge.map.view.MapView) org.mapsforge.map.view.MapView.getModel():org.mapsforge.map.model.Model type: INTERFACE \l0x0018: IGET  (r0 I:org.mapsforge.map.model.FrameBufferModel) = (r0 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.frameBufferModel org.mapsforge.map.model.FrameBufferModel \l0x001a: INVOKE  (r0 I:org.mapsforge.core.model.MapPosition) = (r0 I:org.mapsforge.map.model.FrameBufferModel) org.mapsforge.map.model.FrameBufferModel.getMapPosition():org.mapsforge.core.model.MapPosition type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: RETURN  (r1 I:org.mapsforge.core.model.LatLong) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: IGET  (r2 I:org.mapsforge.core.model.LatLong) = (r0 I:org.mapsforge.core.model.MapPosition) org.mapsforge.core.model.MapPosition.latLong org.mapsforge.core.model.LatLong \l0x0023: IGET  (r0 I:byte) = (r0 I:org.mapsforge.core.model.MapPosition) org.mapsforge.core.model.MapPosition.zoomLevel byte \l0x0025: IGET  (r3 I:org.mapsforge.map.view.MapView) = (r11 I:org.mapsforge.map.util.MapViewProjection) org.mapsforge.map.util.MapViewProjection.mapView org.mapsforge.map.view.MapView \l0x0027: INVOKE  (r3 I:org.mapsforge.map.model.Model) = (r3 I:org.mapsforge.map.view.MapView) org.mapsforge.map.view.MapView.getModel():org.mapsforge.map.model.Model type: INTERFACE \l0x002b: IGET  (r3 I:org.mapsforge.map.model.DisplayModel) = (r3 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.displayModel org.mapsforge.map.model.DisplayModel \l0x002d: INVOKE  (r3 I:int) = (r3 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL \l0x0031: INVOKE  (r3 I:long) = (r0 I:byte), (r3 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC \l0x0035: IGET  (r5 I:double) = (r2 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double \l0x0037: INVOKE  (r5 I:double) = (r5 I:double), (r3 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC \l0x003b: IGET  (r7 I:double) = (r2 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double \l0x003d: INVOKE  (r7 I:double) = (r7 I:double), (r3 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC \l0x0041: IGET  (r0 I:org.mapsforge.map.view.MapView) = (r11 I:org.mapsforge.map.util.MapViewProjection) org.mapsforge.map.util.MapViewProjection.mapView org.mapsforge.map.view.MapView \l0x0043: INVOKE  (r0 I:int) = (r0 I:org.mapsforge.map.view.MapView) org.mapsforge.map.view.MapView.getWidth():int type: INTERFACE \l0x0047: ARITH  (r0 I:int) = (r0 I:int) \>\> (1 int) \l0x0049: CAST  (r9 I:double) = (double) (r0 I:int) \l0x004a: ARITH  (r5 I:double) = (r5 I:double) \- (r9 I:double) \l0x004b: IGET  (r0 I:org.mapsforge.map.view.MapView) = (r11 I:org.mapsforge.map.util.MapViewProjection) org.mapsforge.map.util.MapViewProjection.mapView org.mapsforge.map.view.MapView \l0x004d: INVOKE  (r0 I:int) = (r0 I:org.mapsforge.map.view.MapView) org.mapsforge.map.view.MapView.getHeight():int type: INTERFACE \l0x0051: ARITH  (r0 I:int) = (r0 I:int) \>\> (1 int) \l0x0053: CAST  (r9 I:double) = (double) (r0 I:int) \l0x0054: ARITH  (r7 I:double) = (r7 I:double) \- (r9 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0055|SYNTHETIC\lSplitter:B:9:0x0055\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0055\l|0x0055: NEW_INSTANCE  (r0 I:org.mapsforge.core.model.LatLong) =  org.mapsforge.core.model.LatLong A[Catch:\{ Exception \-\> 0x0067 \}, TRY_ENTER]\l0x0057: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0067 \}]\l0x0058: ARITH  (r7 I:double) = (r7 I:double) + (r14 I:double) A[Catch:\{ Exception \-\> 0x0067 \}]\l0x0059: INVOKE  (r14 I:double) = (r7 I:double), (r3 I:long) org.mapsforge.core.util.MercatorProjection.pixelYToLatitude(double, long):double type: STATIC A[Catch:\{ Exception \-\> 0x0067 \}]\l0x005d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0067 \}]\l0x005e: ARITH  (r5 I:double) = (r5 I:double) + (r12 I:double) A[Catch:\{ Exception \-\> 0x0067 \}]\l0x005f: INVOKE  (r12 I:double) = (r5 I:double), (r3 I:long) org.mapsforge.core.util.MercatorProjection.pixelXToLongitude(double, long):double type: STATIC A[Catch:\{ Exception \-\> 0x0067 \}]\l0x0063: INVOKE  \l  (r0 I:org.mapsforge.core.model.LatLong)\l  (r14 I:double)\l  (r12 I:double)\l org.mapsforge.core.model.LatLong.\<init\>(double, double):void type: DIRECT A[Catch:\{ Exception \-\> 0x0067 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0066|0x0066: RETURN  (r0 I:org.mapsforge.core.model.LatLong) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0067|0x0067: RETURN  (r1 I:org.mapsforge.core.model.LatLong) \l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lExcHandler: Exception null\lSplitter:B:9:0x0055\l}"];
Node_14 [shape=record,label="{14\:\ 0x0068|0x0068: RETURN  (r1 I:org.mapsforge.core.model.LatLong) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.model.LatLong org.mapsforge.map.util.MapViewProjection.fromPixels((r11 'this' I:org.mapsforge.map.util.MapViewProjection A[IMMUTABLE_TYPE, THIS]), (r12 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_14[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_13 -> Node_12;
}

