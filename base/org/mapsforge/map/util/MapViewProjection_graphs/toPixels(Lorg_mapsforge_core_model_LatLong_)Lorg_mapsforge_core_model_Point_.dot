digraph "CFG fororg.mapsforge.map.util.MapViewProjection.toPixels(Lorg\/mapsforge\/core\/model\/LatLong;)Lorg\/mapsforge\/core\/model\/Point;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r10 == null) goto L_0x006f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r9.mapView.getWidth() \<= 0) goto L_0x006f\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r9.mapView.getHeight() \> 0) goto L_0x0014\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|org.mapsforge.core.model.MapPosition r1 = r9.mapView.getModel().mapViewPosition.getMapPosition()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|if (r1 != null) goto L_0x0023\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|RETURN\l|return null\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|org.mapsforge.core.model.LatLong r0 = r1.latLong\llong r1 = org.mapsforge.core.util.MercatorProjection.getMapSize(r1.zoomLevel, r9.mapView.getModel().displayModel.getTileSize())\ldouble r3 = org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r0.longitude, r1)\ldouble r5 = org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r0.latitude, r1)\ldouble r3 = r3 \- ((double) (r9.mapView.getWidth() \>\> 1))\ldouble r5 = r5 \- ((double) (r9.mapView.getHeight() \>\> 1))\l}"];
Node_10 [shape=record,label="{10\:\ 0x006e|RETURN\l|return new org.mapsforge.core.model.Point((double) ((int) (org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r10.longitude, r1) \- r3)), (double) ((int) (org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r10.latitude, r1) \- r5)))\l}"];
Node_11 [shape=record,label="{11\:\ 0x006f|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.model.Point org.mapsforge.map.util.MapViewProjection.toPixels((r9v0 'this' org.mapsforge.map.util.MapViewProjection A[IMMUTABLE_TYPE, THIS]), (r10v0 org.mapsforge.core.model.LatLong A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_11[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
}

