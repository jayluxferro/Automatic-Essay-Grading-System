digraph "CFG fororg.mapsforge.map.datastore.MapDataStore.readPoiData(Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;)Lorg\/mapsforge\/map\/datastore\/MapReadResult;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r7.tileX \> r8.tileX) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r7.tileY \<= r8.tileY) goto L_0x0013\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|java.lang.IllegalArgumentException new java.lang.IllegalArgumentException(\"upperLeft tile must be above and left of lowerRight tile\")\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|org.mapsforge.map.datastore.MapReadResult r0 = new org.mapsforge.map.datastore.MapReadResult()\lint r1 = r7.tileX\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v3 int) binds: [B:5:0x0013, B:12:0x0038] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x001a\-\>B:12:0x0038\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|if (r1 \> r8.tileX) goto L_0x003b\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|int r2 = r7.tileY\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|LOOP_START\lPHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:8:0x001e, B:11:0x0024] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:9:0x0020\-\>B:11:0x0024\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|if (r2 \> r8.tileY) goto L_0x0038\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|LOOP_END\lLOOP:1: B:9:0x0020\-\>B:11:0x0024\l|r0.add(readPoiData(new org.mapsforge.core.model.Tile(r1, r2, r7.zoomLevel, r7.tileSize)), false)\lint r2 = r2 + 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0038|LOOP_END\lLOOP:0: B:6:0x001a\-\>B:12:0x0038\l|int r1 = r1 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|RETURN\l|return r0\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public org.mapsforge.map.datastore.MapReadResult org.mapsforge.map.datastore.MapDataStore.readPoiData((r6v0 'this' org.mapsforge.map.datastore.MapDataStore A[IMMUTABLE_TYPE, THIS]), (r7v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_9;
Node_12 -> Node_6;
Node_14 -> Node_13;
Node_15 -> Node_12;
}

