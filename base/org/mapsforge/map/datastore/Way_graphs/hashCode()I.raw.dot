digraph "CFG fororg.mapsforge.map.datastore.Way.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:byte) = (r3 I:org.mapsforge.map.datastore.Way) org.mapsforge.map.datastore.Way.layer byte \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (31 ?[int, float, short, byte, char]) \l0x0004: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0005: ARITH  (r0 I:int) = (r0 I:int) * (31 int) \l0x0007: IGET  (r2 I:java.util.List\<org.mapsforge.core.model.Tag\>) = (r3 I:org.mapsforge.map.datastore.Way) org.mapsforge.map.datastore.Way.tags java.util.List \l0x0009: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.hashCode():int type: INTERFACE \l0x000d: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x000e: ARITH  (r0 I:int) = (r0 I:int) * (31 int) \l0x0010: IGET  (r1 I:org.mapsforge.core.model.LatLong[][]) = (r3 I:org.mapsforge.map.datastore.Way) org.mapsforge.map.datastore.Way.latLongs org.mapsforge.core.model.LatLong[][] \l0x0012: INVOKE  (r1 I:int) = (r1 I:java.lang.Object[]) java.util.Arrays.deepHashCode(java.lang.Object[]):int type: STATIC \l0x0016: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0017: IGET  (r1 I:org.mapsforge.core.model.LatLong) = (r3 I:org.mapsforge.map.datastore.Way) org.mapsforge.map.datastore.Way.labelPosition org.mapsforge.core.model.LatLong \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0024 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001b|0x001b: ARITH  (r0 I:int) = (r0 I:int) * (31 int) \l0x001d: IGET  (r1 I:org.mapsforge.core.model.LatLong) = (r3 I:org.mapsforge.map.datastore.Way) org.mapsforge.map.datastore.Way.labelPosition org.mapsforge.core.model.LatLong \l0x001f: INVOKE  (r1 I:int) = (r1 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.hashCode():int type: VIRTUAL \l0x0023: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int org.mapsforge.map.datastore.Way.hashCode((r3 'this' I:org.mapsforge.map.datastore.Way A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

