digraph "CFG fororg.mapsforge.map.datastore.Way.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r6 != r7) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004}"];
Node_4 [shape=record,label="{4\:\ 0x0007|if ((r7 instanceof org.mapsforge.map.datastore.Way) != false) goto L_0x000a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|org.mapsforge.map.datastore.Way r7 = (org.mapsforge.map.datastore.Way) r7\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|if (r6.layer == r7.layer) goto L_0x0013\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|RETURN\l|return false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013}"];
Node_10 [shape=record,label="{10\:\ 0x001b|if (r6.tags.equals(r7.tags) != false) goto L_0x001e\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e}"];
Node_13 [shape=record,label="{13\:\ 0x0020|if (r6.labelPosition != null) goto L_0x0027\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022}"];
Node_15 [shape=record,label="{15\:\ 0x0024|if (r7.labelPosition == null) goto L_0x0027\l}"];
Node_16 [shape=record,label="{16\:\ 0x0026|RETURN\l|return false\l}"];
Node_17 [shape=record,label="{17\:\ 0x0027}"];
Node_18 [shape=record,label="{18\:\ 0x0029|if (r6.labelPosition == null) goto L_0x0036\l}"];
Node_19 [shape=record,label="{19\:\ 0x002b}"];
Node_20 [shape=record,label="{20\:\ 0x0033|if (r6.labelPosition.equals(r7.labelPosition) != false) goto L_0x0036\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|RETURN\l|return false\l}"];
Node_22 [shape=record,label="{22\:\ 0x0036}"];
Node_23 [shape=record,label="{23\:\ 0x003c|if (r6.latLongs.length == r7.latLongs.length) goto L_0x003f\l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|RETURN\l|return false\l}"];
Node_25 [shape=record,label="{25\:\ 0x003f|r1 = 0\l}"];
Node_26 [shape=record,label="{26\:\ 0x0040|LOOP_START\lPHI: r1 \l  PHI: (r1v9 int) = (r1v8 int), (r1v10 int) binds: [B:25:0x003f, B:38:0x0070] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:26:0x0040\-\>B:38:0x0070\l}"];
Node_27 [shape=record,label="{27\:\ 0x0043|if (r1 \>= r6.latLongs.length) goto L_0x0073\l}"];
Node_28 [shape=record,label="{28\:\ 0x0045}"];
Node_29 [shape=record,label="{29\:\ 0x004f|if (r6.latLongs[r1].length == r7.latLongs[r1].length) goto L_0x0052\l}"];
Node_30 [shape=record,label="{30\:\ 0x0051|RETURN\l|return false\l}"];
Node_31 [shape=record,label="{31\:\ 0x0052|r3 = 0\l}"];
Node_32 [shape=record,label="{32\:\ 0x0053|LOOP_START\lPHI: r3 \l  PHI: (r3v10 int) = (r3v9 int), (r3v11 int) binds: [B:31:0x0052, B:37:0x006d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:32:0x0053\-\>B:37:0x006d\l}"];
Node_33 [shape=record,label="{33\:\ 0x0058|if (r3 \>= r6.latLongs[r1].length) goto L_0x0070\l}"];
Node_34 [shape=record,label="{34\:\ 0x005a}"];
Node_35 [shape=record,label="{35\:\ 0x006a|if (r6.latLongs[r1][r3].equals(r7.latLongs[r1][r3]) != false) goto L_0x006d\l}"];
Node_36 [shape=record,label="{36\:\ 0x006c|RETURN\l|return false\l}"];
Node_37 [shape=record,label="{37\:\ 0x006d|LOOP_END\lLOOP:1: B:32:0x0053\-\>B:37:0x006d\l|int r3 = r3 + 1\l}"];
Node_38 [shape=record,label="{38\:\ 0x0070|LOOP_END\lLOOP:0: B:26:0x0040\-\>B:38:0x0070\l|int r1 = r1 + 1\l}"];
Node_39 [shape=record,label="{39\:\ 0x0073|RETURN\l|return true\l}"];
Node_40 [shape=record,label="{40\:\ 0x0073|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x006c|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0051|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0070|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.datastore.Way.equals((r6v0 'this' org.mapsforge.map.datastore.Way A[IMMUTABLE_TYPE, THIS]), (r7v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_40;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_42[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_43;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_41[style=dashed];
Node_37 -> Node_32;
Node_38 -> Node_26;
Node_40 -> Node_39;
Node_41 -> Node_36;
Node_42 -> Node_30;
Node_43 -> Node_38;
}

