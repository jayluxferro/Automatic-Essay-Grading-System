digraph "CFG fororg.mapsforge.map.datastore.MultiMapDataStore.getDataTimestamp(Lorg\/mapsforge\/core\/model\/Tile;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|switch(r5.dataPolicy) \{\l    case org.mapsforge.map.datastore.MultiMapDataStore.DataPolicy.RETURN_FIRST :org.mapsforge.map.datastore.MultiMapDataStore$DataPolicy: goto L_0x0039;\l    case org.mapsforge.map.datastore.MultiMapDataStore.DataPolicy.RETURN_ALL :org.mapsforge.map.datastore.MultiMapDataStore$DataPolicy: goto L_0x0017;\l    case org.mapsforge.map.datastore.MultiMapDataStore.DataPolicy.DEDUPLICATE :org.mapsforge.map.datastore.MultiMapDataStore$DataPolicy: goto L_0x0017;\l    default: goto L_0x000f;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f}"];
Node_3 [shape=record,label="{3\:\ 0x0016|throw new java.lang.IllegalStateException(\"Invalid data policy for multi map database\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|java.util.Iterator r0 = r5.mapDatabases.iterator()\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|LOOP_START\lPHI: r1 \l  PHI: (r1v3 long) = (r1v2 long), (r1v4 long) binds: [B:4:0x0017, B:19:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x001d\-\>B:19:0x001d\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|if (r0.hasNext() == false) goto L_0x0038\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|org.mapsforge.map.datastore.MapDataStore r3 = r0.next()\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|if (r3.supportsTile(r6) == false) goto L_0x001d\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|long r1 = java.lang.Math.max(r1, r3.getDataTimestamp(r6))\l}"];
Node_10 [shape=record,label="{10\:\ 0x0038|RETURN\l|return r1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|java.util.Iterator r0 = r5.mapDatabases.iterator()\l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|LOOP_START\lLOOP:1: B:12:0x003f\-\>B:15:0x004f\l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|if (r0.hasNext() == false) goto L_0x0056\l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|org.mapsforge.map.datastore.MapDataStore r3 = r0.next()\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|LOOP_END\lLOOP:1: B:12:0x003f\-\>B:15:0x004f\l|if (r3.supportsTile(r6) == false) goto L_0x003f\l}"];
Node_16 [shape=record,label="{16\:\ 0x0051}"];
Node_17 [shape=record,label="{17\:\ 0x0055|RETURN\l|return r3.getDataTimestamp(r6)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|RETURN\l|return 0\l}"];
Node_19 [shape=record,label="{19\:\ 0x001d|LOOP_END\lSYNTHETIC\lPHI: r1 \l  PHI: (r1v4 long) = (r1v3 long), (r1v5 long) binds: [B:21:0x001d, B:22:0x001d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x001d\-\>B:19:0x001d\l}"];
Node_20 [shape=record,label="{20\:\ 0x0038|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x001d|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x001d|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0056|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0051|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long org.mapsforge.map.datastore.MultiMapDataStore.getDataTimestamp((r5v0 'this' org.mapsforge.map.datastore.MultiMapDataStore A[IMMUTABLE_TYPE, THIS]), (r6v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_21;
Node_9 -> Node_22;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_23;
Node_14 -> Node_15;
Node_15 -> Node_12;
Node_15 -> Node_24[style=dashed];
Node_16 -> Node_17;
Node_19 -> Node_5;
Node_20 -> Node_10;
Node_21 -> Node_19;
Node_22 -> Node_19;
Node_23 -> Node_18;
Node_24 -> Node_16;
}

