digraph "CFG fororg.mapsforge.map.datastore.MultiMapDataStore.addMapDataStore(Lorg\/mapsforge\/map\/datastore\/MapDataStore;ZZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<org.mapsforge.map.datastore.MapDataStore\>) = (r1 I:org.mapsforge.map.datastore.MultiMapDataStore) org.mapsforge.map.datastore.MultiMapDataStore.mapDatabases java.util.List \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:java.util.List), (r2 I:java.lang.Object) java.util.List.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0039 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:java.util.List\<org.mapsforge.map.datastore.MapDataStore\>) = (r1 I:org.mapsforge.map.datastore.MultiMapDataStore) org.mapsforge.map.datastore.MultiMapDataStore.mapDatabases java.util.List \l0x000a: INVOKE  (r0 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: INVOKE  (r3 I:java.lang.Byte) = (r2 I:org.mapsforge.map.datastore.MapDataStore) org.mapsforge.map.datastore.MapDataStore.startZoomLevel():java.lang.Byte type: VIRTUAL \l0x0013: INVOKE  (r3 I:byte) = (r3 I:java.lang.Byte) java.lang.Byte.byteValue():byte type: VIRTUAL \l0x0017: IPUT  \l  (r3 I:byte)\l  (r1 I:org.mapsforge.map.datastore.MultiMapDataStore)\l org.mapsforge.map.datastore.MultiMapDataStore.startZoomLevel byte \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0021 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: INVOKE  (r3 I:org.mapsforge.core.model.LatLong) = (r2 I:org.mapsforge.map.datastore.MapDataStore) org.mapsforge.map.datastore.MapDataStore.startPosition():org.mapsforge.core.model.LatLong type: VIRTUAL \l0x001f: IPUT  \l  (r3 I:org.mapsforge.core.model.LatLong)\l  (r1 I:org.mapsforge.map.datastore.MultiMapDataStore)\l org.mapsforge.map.datastore.MultiMapDataStore.startPosition org.mapsforge.core.model.LatLong \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IGET  (r3 I:org.mapsforge.core.model.BoundingBox) = (r1 I:org.mapsforge.map.datastore.MultiMapDataStore) org.mapsforge.map.datastore.MultiMapDataStore.boundingBox org.mapsforge.core.model.BoundingBox \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: INVOKE  (r2 I:org.mapsforge.core.model.BoundingBox) = (r2 I:org.mapsforge.map.datastore.MapDataStore) org.mapsforge.map.datastore.MapDataStore.boundingBox():org.mapsforge.core.model.BoundingBox type: VIRTUAL \l0x0029: IPUT  \l  (r2 I:org.mapsforge.core.model.BoundingBox)\l  (r1 I:org.mapsforge.map.datastore.MultiMapDataStore)\l org.mapsforge.map.datastore.MultiMapDataStore.boundingBox org.mapsforge.core.model.BoundingBox \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IGET  (r3 I:org.mapsforge.core.model.BoundingBox) = (r1 I:org.mapsforge.map.datastore.MultiMapDataStore) org.mapsforge.map.datastore.MultiMapDataStore.boundingBox org.mapsforge.core.model.BoundingBox \l0x002e: INVOKE  (r2 I:org.mapsforge.core.model.BoundingBox) = (r2 I:org.mapsforge.map.datastore.MapDataStore) org.mapsforge.map.datastore.MapDataStore.boundingBox():org.mapsforge.core.model.BoundingBox type: VIRTUAL \l0x0032: INVOKE  (r2 I:org.mapsforge.core.model.BoundingBox) = \l  (r3 I:org.mapsforge.core.model.BoundingBox)\l  (r2 I:org.mapsforge.core.model.BoundingBox)\l org.mapsforge.core.model.BoundingBox.extendBoundingBox(org.mapsforge.core.model.BoundingBox):org.mapsforge.core.model.BoundingBox type: VIRTUAL \l0x0036: IPUT  \l  (r2 I:org.mapsforge.core.model.BoundingBox)\l  (r1 I:org.mapsforge.map.datastore.MultiMapDataStore)\l org.mapsforge.map.datastore.MultiMapDataStore.boundingBox org.mapsforge.core.model.BoundingBox \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: RETURN   \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x003b: CONST_STR  (r3 I:java.lang.String) =  \"Duplicate map database\" \l0x003d: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|0x0040: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.datastore.MultiMapDataStore.addMapDataStore((r1 'this' I:org.mapsforge.map.datastore.MultiMapDataStore A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.map.datastore.MapDataStore A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

