digraph "CFG fororg.mapsforge.map.android.view.MapView.destroyAll()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r3.layerManager.getLayers().iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lLOOP:0: B:1:0x000a\-\>B:13:0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|if (r0.hasNext() == false) goto L_0x0040\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|org.mapsforge.map.layer.Layer r1 = r0.next()\lr3.layerManager.getLayers().remove(r1)\lr1.onDestroy()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|if ((r1 instanceof org.mapsforge.map.layer.TileLayer) == false) goto L_0x0030\l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|((org.mapsforge.map.layer.TileLayer) r1).getTileCache().destroy()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030}"];
Node_7 [shape=record,label="{7\:\ 0x0032|if ((r1 instanceof org.mapsforge.map.layer.renderer.TileRendererLayer) == false) goto L_0x000a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|org.mapsforge.map.layer.labels.LabelStore r1 = ((org.mapsforge.map.layer.renderer.TileRendererLayer) r1).getLabelStore()\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|if (r1 == null) goto L_0x000a\l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|r1.clear()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|destroy()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x000a|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x000a\-\>B:13:0x000a\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x000a|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.view.MapView.destroyAll((r3v0 'this' org.mapsforge.map.android.view.MapView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_13 -> Node_1;
Node_14 -> Node_11;
Node_15 -> Node_13;
Node_16 -> Node_13;
Node_17 -> Node_13;
}

