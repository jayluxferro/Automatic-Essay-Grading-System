digraph "CFG fororg.mapsforge.map.android.view.MapView.destroy()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.android.input.TouchGestureHandler) = (r2 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.touchGestureHandler org.mapsforge.map.android.input.TouchGestureHandler \l0x0002: INVOKE  (r0 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.destroy():void type: VIRTUAL \l0x0005: IGET  (r0 I:android.os.Handler) = (r2 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.layoutHandler android.os.Handler \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0008: INVOKE  (r0 I:android.os.Handler), (r1 I:java.lang.Object) android.os.Handler.removeCallbacksAndMessages(java.lang.Object):void type: VIRTUAL \l0x000b: IGET  (r0 I:org.mapsforge.map.layer.LayerManager) = (r2 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.layerManager org.mapsforge.map.layer.LayerManager \l0x000d: INVOKE  (r0 I:org.mapsforge.map.layer.LayerManager) org.mapsforge.map.layer.LayerManager.finish():void type: VIRTUAL \l0x0010: IGET  (r0 I:org.mapsforge.map.controller.FrameBufferController) = (r2 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.frameBufferController org.mapsforge.map.controller.FrameBufferController \l0x0012: INVOKE  (r0 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.destroy():void type: VIRTUAL \l0x0015: IGET  (r0 I:org.mapsforge.map.view.FrameBuffer) = (r2 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.frameBuffer org.mapsforge.map.view.FrameBuffer \l0x0017: INVOKE  (r0 I:org.mapsforge.map.view.FrameBuffer) org.mapsforge.map.view.FrameBuffer.destroy():void type: VIRTUAL \l0x001a: IGET  (r0 I:org.mapsforge.map.scalebar.MapScaleBar) = (r2 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.mapScaleBar org.mapsforge.map.scalebar.MapScaleBar \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001e|0x001e: IGET  (r0 I:org.mapsforge.map.scalebar.MapScaleBar) = (r2 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.mapScaleBar org.mapsforge.map.scalebar.MapScaleBar \l0x0020: INVOKE  (r0 I:org.mapsforge.map.scalebar.MapScaleBar) org.mapsforge.map.scalebar.MapScaleBar.destroy():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: IGET  (r0 I:org.mapsforge.map.android.input.MapZoomControls) = (r2 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.mapZoomControls org.mapsforge.map.android.input.MapZoomControls \l0x0025: INVOKE  (r0 I:org.mapsforge.map.android.input.MapZoomControls) org.mapsforge.map.android.input.MapZoomControls.destroy():void type: VIRTUAL \l0x0028: INVOKE  (r0 I:org.mapsforge.map.model.Model) = (r2 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.getModel():org.mapsforge.map.model.Model type: VIRTUAL \l0x002c: IGET  (r0 I:org.mapsforge.map.model.IMapViewPosition) = (r0 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.mapViewPosition org.mapsforge.map.model.IMapViewPosition \l0x002e: INVOKE  (r0 I:org.mapsforge.map.model.IMapViewPosition) org.mapsforge.map.model.IMapViewPosition.destroy():void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.view.MapView.destroy((r2 'this' I:org.mapsforge.map.android.view.MapView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

