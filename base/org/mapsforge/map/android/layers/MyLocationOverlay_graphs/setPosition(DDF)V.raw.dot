digraph "CFG fororg.mapsforge.map.android.layers.MyLocationOverlay.setPosition(DDF)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: NEW_INSTANCE  (r0 I:org.mapsforge.core.model.LatLong) =  org.mapsforge.core.model.LatLong A[Catch:\{ all \-\> 0x001e \}, TRY_ENTER]\l0x0003: INVOKE  \l  (r0 I:org.mapsforge.core.model.LatLong)\l  (r2 I:double)\l  (r4 I:double)\l org.mapsforge.core.model.LatLong.\<init\>(double, double):void type: DIRECT A[Catch:\{ all \-\> 0x001e \}]\l0x0006: IGET  (r2 I:org.mapsforge.map.layer.overlay.Marker) = (r1 I:org.mapsforge.map.android.layers.MyLocationOverlay) org.mapsforge.map.android.layers.MyLocationOverlay.marker org.mapsforge.map.layer.overlay.Marker A[Catch:\{ all \-\> 0x001e \}]\l0x0008: INVOKE  \l  (r2 I:org.mapsforge.map.layer.overlay.Marker)\l  (r0 I:org.mapsforge.core.model.LatLong)\l org.mapsforge.map.layer.overlay.Marker.setLatLong(org.mapsforge.core.model.LatLong):void type: VIRTUAL A[Catch:\{ all \-\> 0x001e \}]\l0x000b: IGET  (r2 I:org.mapsforge.map.layer.overlay.Circle) = (r1 I:org.mapsforge.map.android.layers.MyLocationOverlay) org.mapsforge.map.android.layers.MyLocationOverlay.circle org.mapsforge.map.layer.overlay.Circle A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0019 A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IGET  (r2 I:org.mapsforge.map.layer.overlay.Circle) = (r1 I:org.mapsforge.map.android.layers.MyLocationOverlay) org.mapsforge.map.android.layers.MyLocationOverlay.circle org.mapsforge.map.layer.overlay.Circle A[Catch:\{ all \-\> 0x001e \}]\l0x0011: INVOKE  \l  (r2 I:org.mapsforge.map.layer.overlay.Circle)\l  (r0 I:org.mapsforge.core.model.LatLong)\l org.mapsforge.map.layer.overlay.Circle.setLatLong(org.mapsforge.core.model.LatLong):void type: VIRTUAL A[Catch:\{ all \-\> 0x001e \}]\l0x0014: IGET  (r2 I:org.mapsforge.map.layer.overlay.Circle) = (r1 I:org.mapsforge.map.android.layers.MyLocationOverlay) org.mapsforge.map.android.layers.MyLocationOverlay.circle org.mapsforge.map.layer.overlay.Circle A[Catch:\{ all \-\> 0x001e \}]\l0x0016: INVOKE  (r2 I:org.mapsforge.map.layer.overlay.Circle), (r6 I:float) org.mapsforge.map.layer.overlay.Circle.setRadius(float):void type: VIRTUAL A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: INVOKE  (r1 I:org.mapsforge.map.android.layers.MyLocationOverlay) org.mapsforge.map.android.layers.MyLocationOverlay.requestRedraw():void type: VIRTUAL A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: RETURN   A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x001e: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x001e \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001e \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.layers.MyLocationOverlay.setPosition((r1 'this' I:org.mapsforge.map.android.layers.MyLocationOverlay A[IMMUTABLE_TYPE, THIS]), (r2 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

