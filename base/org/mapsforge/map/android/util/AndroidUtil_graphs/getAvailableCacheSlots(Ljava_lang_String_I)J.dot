digraph "CFG fororg.mapsforge.map.android.util.AndroidUtil.getAvailableCacheSlots(Ljava\/lang\/String;I)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.os.StatFs r0 = new android.os.StatFs(r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (android.os.Build.VERSION.SDK_INT \< 18) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x0011|RETURN\l|return r0.getAvailableBytes() \/ ((long) r3)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|int r2 = java.lang.Math.max(r3 \/ r0.getBlockSize(), 1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|RETURN\l|return (long) (r0.getAvailableBlocks() \/ r2)\l}"];
MethodNode[shape=record,label="{public static long org.mapsforge.map.android.util.AndroidUtil.getAvailableCacheSlots((r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=18\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

