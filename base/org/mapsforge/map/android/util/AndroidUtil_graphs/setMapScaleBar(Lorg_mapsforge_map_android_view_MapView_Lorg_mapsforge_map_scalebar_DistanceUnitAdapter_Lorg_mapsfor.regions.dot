digraph "CFG fororg.mapsforge.map.android.util.AndroidUtil.setMapScaleBar(Lorg\/mapsforge\/map\/android\/view\/MapView;Lorg\/mapsforge\/map\/scalebar\/DistanceUnitAdapter;Lorg\/mapsforge\/map\/scalebar\/DistanceUnitAdapter;)V" {
subgraph cluster_Region_501089628 {
label = "R(1:(2:(2:2|13)|(4:3|(1:5)|(1:(1:9)(1:10))|11)))";
node [shape=record,color=blue];
subgraph cluster_Region_2075533479 {
label = "R(2:(2:2|13)|(4:3|(1:5)|(1:(1:9)(1:10))|11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_306254953 {
label = "IF [B:0:0x0000, B:1:0x0002] THEN: R(2:2|13) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r6 == null) goto L_0x0002\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|ADDED_TO_REGION\l|if (r7 == null) goto L_0x0004\l}"];
subgraph cluster_Region_1490269620 {
label = "R(2:2|13)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|r5.setMapScaleBar((org.mapsforge.map.scalebar.MapScaleBar) null)\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
subgraph cluster_Region_1892549929 {
label = "R(4:3|(1:5)|(1:(1:9)(1:10))|11)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|org.mapsforge.map.scalebar.MapScaleBar org.mapsforge.map.scalebar.MapScaleBar r0 = r5.getMapScaleBar()\l}"];
subgraph cluster_IfRegion_1699334247 {
label = "IF [B:4:0x000d] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r0 == null) goto L_0x000f\l}"];
subgraph cluster_Region_27803559 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|org.mapsforge.map.scalebar.DefaultMapScaleBar r0 = new org.mapsforge.map.scalebar.DefaultMapScaleBar(r5.getModel().mapViewPosition, r5.getModel().mapViewDimension, org.mapsforge.map.android.graphics.AndroidGraphicFactory.INSTANCE, r5.getModel().displayModel)\lr5.setMapScaleBar(r0)\l}"];
}
}
subgraph cluster_IfRegion_556507178 {
label = "IF [B:7:0x002d] THEN: R(1:(1:9)(1:10)) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002d|if ((r0 instanceof org.mapsforge.map.scalebar.DefaultMapScaleBar) == true) goto L_0x002f\l}"];
subgraph cluster_Region_902475543 {
label = "R(1:(1:9)(1:10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2142442001 {
label = "IF [B:8:0x002f] THEN: R(1:9) ELSE: R(1:10)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002f|if (r7 != null) goto L_0x0031\l}"];
subgraph cluster_Region_558636651 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0031|org.mapsforge.map.scalebar.DefaultMapScaleBar org.mapsforge.map.scalebar.DefaultMapScaleBar r5 = (org.mapsforge.map.scalebar.DefaultMapScaleBar) r0\lr5.setScaleBarMode(org.mapsforge.map.scalebar.DefaultMapScaleBar.ScaleBarMode.BOTH)\lr5.setSecondaryDistanceUnitAdapter(r7)\l}"];
}
subgraph cluster_Region_1633241314 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x003d|((org.mapsforge.map.scalebar.DefaultMapScaleBar) r0).setScaleBarMode(org.mapsforge.map.scalebar.DefaultMapScaleBar.ScaleBarMode.SINGLE)\l}"];
}
}
}
}
Node_11 [shape=record,label="{11\:\ 0x0045|r0.setDistanceUnitAdapter(r6)\l}"];
}
}
}
Node_6 [shape=record,color=red,label="{6\:\ 0x002b|PHI: r0 \l  PHI: (r0v1 org.mapsforge.map.scalebar.MapScaleBar) = (r0v0 org.mapsforge.map.scalebar.MapScaleBar), (r0v2 org.mapsforge.map.scalebar.MapScaleBar) binds: [B:4:0x000d, B:5:0x000f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,color=red,label="{12\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{public static void org.mapsforge.map.android.util.AndroidUtil.setMapScaleBar((r5v0 org.mapsforge.map.android.view.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 org.mapsforge.map.scalebar.DistanceUnitAdapter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.mapsforge.map.scalebar.DistanceUnitAdapter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_3[style=dashed];
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_11[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_6 -> Node_7;
}

