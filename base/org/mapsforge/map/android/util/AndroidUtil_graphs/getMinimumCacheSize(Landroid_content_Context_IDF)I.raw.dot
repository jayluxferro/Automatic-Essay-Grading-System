digraph "CFG fororg.mapsforge.map.android.util.AndroidUtil.getMinimumCacheSize(Landroid\/content\/Context;IDF)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"window\" \l0x0002: INVOKE  (r3 I:java.lang.Object) = (r3 I:android.content.Context), (r0 I:java.lang.String) android.content.Context.getSystemService(java.lang.String):java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r3 I:android.view.WindowManager) = (android.view.WindowManager) (r3 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  (r3 I:android.view.Display) = (r3 I:android.view.WindowManager) android.view.WindowManager.getDefaultDisplay():android.view.Display type: INTERFACE \l0x000c: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x000e: CONST  (r1 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:3:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:android.graphics.Point) =  android.graphics.Point \l0x0014: INVOKE  (r0 I:android.graphics.Point) android.graphics.Point.\<init\>():void type: DIRECT \l0x0017: INVOKE  (r3 I:android.view.Display), (r0 I:android.graphics.Point) android.view.Display.getSize(android.graphics.Point):void type: VIRTUAL \l0x001a: IGET  (r3 I:int) = (r0 I:android.graphics.Point) android.graphics.Point.y int \l0x001c: IGET  (r0 I:int) = (r0 I:android.graphics.Point) android.graphics.Point.x int \l0x001e: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0020: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: INVOKE  (r0 I:int) = (r3 I:android.view.Display) android.view.Display.getHeight():int type: VIRTUAL \l0x0026: INVOKE  (r3 I:int) = (r3 I:android.view.Display) android.view.Display.getWidth():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: NEW_INSTANCE  (r1 I:org.mapsforge.core.model.Dimension) =  org.mapsforge.core.model.Dimension \l0x002c: INVOKE  \l  (r1 I:org.mapsforge.core.model.Dimension)\l  (r3 I:int)\l  (r0 I:int)\l org.mapsforge.core.model.Dimension.\<init\>(int, int):void type: DIRECT \l0x002f: INVOKE  (r3 I:org.mapsforge.core.model.Dimension) = (r1 I:org.mapsforge.core.model.Dimension), (r5 I:double) org.mapsforge.map.controller.FrameBufferController.calculateFrameBufferDimension(org.mapsforge.core.model.Dimension, double):org.mapsforge.core.model.Dimension type: STATIC \l0x0033: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1082130432(0x40800000, float:4.0) ?[int, float, short, byte, char])\l \l0x0035: IGET  (r6 I:int) = (r3 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.height int \l0x0037: ARITH  (r6 I:int) = (r6 I:int) \/ (r4 I:int) \l0x0038: ARITH  (r6 I:int) = (r6 I:int) + (2 int) \l0x003a: CAST  (r6 I:float) = (float) (r6 I:int) \l0x003b: ARITH  (r7 I:float) = (r7 I:float) * (r6 I:float) \l0x003d: IGET  (r3 I:int) = (r3 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.width int \l0x003f: ARITH  (r3 I:int) = (r3 I:int) \/ (r4 I:int) \l0x0040: ARITH  (r3 I:int) = (r3 I:int) + (2 int) \l0x0042: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0043: ARITH  (r7 I:float) = (r7 I:float) * (r3 I:float) \l0x0045: INVOKE  (r3 I:float) = (r5 I:float), (r7 I:float) java.lang.Math.max(float, float):float type: STATIC \l0x0049: CAST  (r3 I:int) = (int) (r3 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x004a|0x004a: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{public static int org.mapsforge.map.android.util.AndroidUtil.getMinimumCacheSize((r3 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=13\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

