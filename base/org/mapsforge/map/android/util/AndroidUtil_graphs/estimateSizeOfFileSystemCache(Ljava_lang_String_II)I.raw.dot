digraph "CFG fororg.mapsforge.map.android.util.AndroidUtil.estimateSizeOfFileSystemCache(Ljava\/lang\/String;II)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r0 I:int) = (r6 I:int) * (4 int) \l0x0002: ARITH  (r0 I:int) = (r0 I:int) * (r6 I:int) \l0x0004: INVOKE  (r0 I:long) = (r4 I:java.lang.String), (r0 I:int) org.mapsforge.map.android.util.AndroidUtil.getAvailableCacheSlots(java.lang.String, int):long type: STATIC \l0x0008: CONST  (r2 I:?[long, double]) = (2000(0x7d0, double:9.88E\-321) ?[long, double]) \l0x000a: INVOKE  (r0 I:long) = (r2 I:long), (r0 I:long) java.lang.Math.min(long, long):long type: STATIC \l0x000e: CAST  (r4 I:int) = (int) (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r5 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:3:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{public static int org.mapsforge.map.android.util.AndroidUtil.estimateSizeOfFileSystemCache((r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

