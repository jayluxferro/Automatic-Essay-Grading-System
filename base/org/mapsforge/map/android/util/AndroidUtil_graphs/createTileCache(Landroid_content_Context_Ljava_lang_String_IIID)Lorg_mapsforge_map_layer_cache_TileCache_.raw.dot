digraph "CFG fororg.mapsforge.map.android.util.AndroidUtil.createTileCache(Landroid\/content\/Context;Ljava\/lang\/String;IIID)Lorg\/mapsforge\/map\/layer\/cache\/TileCache;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: MOVE  (r5 I:?[long, double]) = (r13 I:?[long, double]) \l0x0007: INVOKE  (r8 I:org.mapsforge.map.layer.cache.TileCache) = \l  (r0 I:android.content.Context)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:double)\l  (r7 I:boolean)\l org.mapsforge.map.android.util.AndroidUtil.createTileCache(android.content.Context, java.lang.String, int, int, int, double, boolean):org.mapsforge.map.layer.cache.TileCache type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN  (r8 I:org.mapsforge.map.layer.cache.TileCache) \l}"];
MethodNode[shape=record,label="{public static org.mapsforge.map.layer.cache.TileCache org.mapsforge.map.android.util.AndroidUtil.createTileCache((r8 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

