digraph "CFG fororg.mapsforge.map.android.util.AndroidUtil.getMinimumCacheSize(Landroid\/content\/Context;IDF)I" {
subgraph cluster_Region_1038724723 {
label = "R(4:0|(1:2)(1:3)|4|5) | DECL_VAR: int null, int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.view.Display android.view.Display r3 = ((android.view.WindowManager) r3.getSystemService(\"window\")).getDefaultDisplay()\l}"];
subgraph cluster_IfRegion_728810888 {
label = "IF [B:1:0x0010] THEN: R(1:2) ELSE: R(1:3)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0010|if (android.os.Build.VERSION.SDK_INT \>= 13) goto L_0x0012\l}"];
subgraph cluster_Region_1664364797 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0012|android.graphics.Point android.graphics.Point r0 = new android.graphics.Point()\lr3.getSize(r0)\lint int r3 = r0.y\lint r2 = r0.x\lr0 = r3\lr3 = r2\l}"];
}
subgraph cluster_Region_244791078 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0022|int r0 = r3.getHeight()\lint r3 = r3.getWidth()\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x002a|PHI: r0 r3 \l  PHI: (r0v2 int) = (r0v3 int), (r0v6 int) binds: [B:3:0x0022, B:2:0x0012] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 int) = (r3v12 int), (r3v14 int) binds: [B:3:0x0022, B:2:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|org.mapsforge.core.model.Dimension org.mapsforge.core.model.Dimension r3 = org.mapsforge.map.controller.FrameBufferController.calculateFrameBufferDimension(new org.mapsforge.core.model.Dimension(r3, r0), r5)\l}"];
Node_5 [shape=record,label="{5\:\ 0x004a|RETURN\l|return (int) java.lang.Math.max(4.0f, r7 * ((float) ((r3.height \/ r4) + 2)) * ((float) ((r3.width \/ r4) + 2)))\l}"];
}
MethodNode[shape=record,label="{public static int org.mapsforge.map.android.util.AndroidUtil.getMinimumCacheSize((r3v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=13\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

