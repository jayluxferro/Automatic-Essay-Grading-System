digraph "CFG fororg.mapsforge.map.android.util.AndroidUtil.restartActivity(Landroid\/app\/Activity;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r2 I:android.app.Activity) android.app.Activity.recreate():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r0 I:android.content.Intent) = (r2 I:android.app.Activity) android.app.Activity.getIntent():android.content.Intent type: VIRTUAL \l0x000e: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (65536(0x10000, float:9.18355E\-41) ?[int, float, short, byte, char])\l \l0x0010: INVOKE  (r0 I:android.content.Intent), (r1 I:int) android.content.Intent.addFlags(int):android.content.Intent type: VIRTUAL \l0x0013: INVOKE  (r2 I:android.app.Activity) android.app.Activity.finish():void type: VIRTUAL \l0x0016: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: INVOKE  (r2 I:android.app.Activity), (r1 I:int), (r1 I:int) android.app.Activity.overridePendingTransition(int, int):void type: VIRTUAL \l0x001a: INVOKE  (r2 I:android.app.Activity), (r0 I:android.content.Intent) android.app.Activity.startActivity(android.content.Intent):void type: VIRTUAL \l0x001d: INVOKE  (r2 I:android.app.Activity), (r1 I:int), (r1 I:int) android.app.Activity.overridePendingTransition(int, int):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: RETURN   \l}"];
MethodNode[shape=record,label="{public static void org.mapsforge.map.android.util.AndroidUtil.restartActivity((r2 I:android.app.Activity A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=11\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

