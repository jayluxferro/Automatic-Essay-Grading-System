digraph "CFG fororg.mapsforge.map.android.rendertheme.AssetsRenderTheme.\<init\>(Landroid\/content\/Context;Ljava\/lang\/String;Ljava\/lang\/String;Lorg\/mapsforge\/map\/rendertheme\/XmlRenderThemeMenuCallback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r3 I:java.lang.String)\l  (r0 I:org.mapsforge.map.android.rendertheme.AssetsRenderTheme)\l org.mapsforge.map.android.rendertheme.AssetsRenderTheme.assetName java.lang.String \l0x0005: IPUT  \l  (r2 I:java.lang.String)\l  (r0 I:org.mapsforge.map.android.rendertheme.AssetsRenderTheme)\l org.mapsforge.map.android.rendertheme.AssetsRenderTheme.relativePathPrefix java.lang.String \l0x0007: INVOKE  (r1 I:android.content.res.AssetManager) = (r1 I:android.content.Context) android.content.Context.getAssets():android.content.res.AssetManager type: VIRTUAL \l0x000b: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000d: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0010: IGET  (r3 I:java.lang.String) = \l  (r0 I:org.mapsforge.map.android.rendertheme.AssetsRenderTheme)\l org.mapsforge.map.android.rendertheme.AssetsRenderTheme.relativePathPrefix java.lang.String \l0x0012: INVOKE  (r3 I:boolean) = (r3 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: CONST_STR  (r3 I:java.lang.String) =  \"\" \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: IGET  (r3 I:java.lang.String) = \l  (r0 I:org.mapsforge.map.android.rendertheme.AssetsRenderTheme)\l org.mapsforge.map.android.rendertheme.AssetsRenderTheme.relativePathPrefix java.lang.String \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0020: IGET  (r3 I:java.lang.String) = \l  (r0 I:org.mapsforge.map.android.rendertheme.AssetsRenderTheme)\l org.mapsforge.map.android.rendertheme.AssetsRenderTheme.assetName java.lang.String \l0x0022: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0029: INVOKE  (r1 I:java.io.InputStream) = \l  (r1 I:android.content.res.AssetManager)\l  (r2 I:java.lang.String)\l android.content.res.AssetManager.open(java.lang.String):java.io.InputStream type: VIRTUAL \l0x002d: IPUT  \l  (r1 I:java.io.InputStream)\l  (r0 I:org.mapsforge.map.android.rendertheme.AssetsRenderTheme)\l org.mapsforge.map.android.rendertheme.AssetsRenderTheme.inputStream java.io.InputStream \l0x002f: IPUT  \l  (r4 I:org.mapsforge.map.rendertheme.XmlRenderThemeMenuCallback)\l  (r0 I:org.mapsforge.map.android.rendertheme.AssetsRenderTheme)\l org.mapsforge.map.android.rendertheme.AssetsRenderTheme.menuCallback org.mapsforge.map.rendertheme.XmlRenderThemeMenuCallback \l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|0x0031: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.rendertheme.AssetsRenderTheme.\<init\>((r0 'this' I:org.mapsforge.map.android.rendertheme.AssetsRenderTheme A[IMMUTABLE_TYPE, THIS]), (r1 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.map.rendertheme.XmlRenderThemeMenuCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

