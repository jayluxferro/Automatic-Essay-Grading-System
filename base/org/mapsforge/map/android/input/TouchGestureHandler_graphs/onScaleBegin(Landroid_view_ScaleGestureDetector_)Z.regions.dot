digraph "CFG fororg.mapsforge.map.android.input.TouchGestureHandler.onScaleBegin(Landroid\/view\/ScaleGestureDetector;)Z" {
subgraph cluster_Region_1619708389 {
label = "R(1:(2:(1:2)|(3:3|(1:5)(1:6)|7)))";
node [shape=record,color=blue];
subgraph cluster_Region_241012870 {
label = "R(2:(1:2)|(3:3|(1:5)(1:6)|7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_731687657 {
label = "IF [B:1:0x0002] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5.scaleEnabled == false) goto L_0x0004\l}"];
subgraph cluster_Region_837210225 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_118874697 {
label = "R(3:3|(1:5)(1:6)|7)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|r5.isInScale = true\lr5.scaleFactorCumulative = 1.0f\l}"];
subgraph cluster_IfRegion_1697549197 {
label = "IF [B:4:0x000f] THEN: R(1:5) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r5.isInDoubleTap == true) goto L_0x0011\l}"];
subgraph cluster_Region_732671523 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|r5.mapView.onZoomEvent()\lr5.pivot = null\l}"];
}
subgraph cluster_Region_743020159 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|r5.mapView.onMoveEvent()\lr5.mapView.onZoomEvent()\lr5.focusX = r6.getFocusX()\lr5.focusY = r6.getFocusY()\lr5.pivot = r5.mapView.getMapViewProjection().fromPixels((double) r5.focusX, (double) r5.focusY)\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0042|RETURN\l|return true\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.android.input.TouchGestureHandler.onScaleBegin((r5v0 'this' org.mapsforge.map.android.input.TouchGestureHandler A[IMMUTABLE_TYPE, THIS]), (r6v0 android.view.ScaleGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_0 -> Node_1;
}

