digraph "CFG fororg.mapsforge.map.android.input.TouchGestureHandler.onScaleBegin(Landroid\/view\/ScaleGestureDetector;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r5 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.scaleEnabled boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r6 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: IPUT  \l  (r0 I:boolean)\l  (r5 I:org.mapsforge.map.android.input.TouchGestureHandler)\l org.mapsforge.map.android.input.TouchGestureHandler.isInScale boolean \l0x0009: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x000b: IPUT  \l  (r1 I:float)\l  (r5 I:org.mapsforge.map.android.input.TouchGestureHandler)\l org.mapsforge.map.android.input.TouchGestureHandler.scaleFactorCumulative float \l0x000d: IGET  (r1 I:boolean) = (r5 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.isInDoubleTap boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IGET  (r6 I:org.mapsforge.map.android.view.MapView) = (r5 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.mapView org.mapsforge.map.android.view.MapView \l0x0013: INVOKE  (r6 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.onZoomEvent():void type: VIRTUAL \l0x0016: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0017: IPUT  \l  (r6 I:org.mapsforge.core.model.LatLong)\l  (r5 I:org.mapsforge.map.android.input.TouchGestureHandler)\l org.mapsforge.map.android.input.TouchGestureHandler.pivot org.mapsforge.core.model.LatLong \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IGET  (r1 I:org.mapsforge.map.android.view.MapView) = (r5 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.mapView org.mapsforge.map.android.view.MapView \l0x001c: INVOKE  (r1 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.onMoveEvent():void type: VIRTUAL \l0x001f: IGET  (r1 I:org.mapsforge.map.android.view.MapView) = (r5 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.mapView org.mapsforge.map.android.view.MapView \l0x0021: INVOKE  (r1 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.onZoomEvent():void type: VIRTUAL \l0x0024: INVOKE  (r1 I:float) = (r6 I:android.view.ScaleGestureDetector) android.view.ScaleGestureDetector.getFocusX():float type: VIRTUAL \l0x0028: IPUT  \l  (r1 I:float)\l  (r5 I:org.mapsforge.map.android.input.TouchGestureHandler)\l org.mapsforge.map.android.input.TouchGestureHandler.focusX float \l0x002a: INVOKE  (r6 I:float) = (r6 I:android.view.ScaleGestureDetector) android.view.ScaleGestureDetector.getFocusY():float type: VIRTUAL \l0x002e: IPUT  \l  (r6 I:float)\l  (r5 I:org.mapsforge.map.android.input.TouchGestureHandler)\l org.mapsforge.map.android.input.TouchGestureHandler.focusY float \l0x0030: IGET  (r6 I:org.mapsforge.map.android.view.MapView) = (r5 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.mapView org.mapsforge.map.android.view.MapView \l0x0032: INVOKE  (r6 I:org.mapsforge.map.util.MapViewProjection) = (r6 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.getMapViewProjection():org.mapsforge.map.util.MapViewProjection type: VIRTUAL \l0x0036: IGET  (r1 I:float) = (r5 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.focusX float \l0x0038: CAST  (r1 I:double) = (double) (r1 I:float) \l0x0039: IGET  (r3 I:float) = (r5 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.focusY float \l0x003b: CAST  (r3 I:double) = (double) (r3 I:float) \l0x003c: INVOKE  (r6 I:org.mapsforge.core.model.LatLong) = \l  (r6 I:org.mapsforge.map.util.MapViewProjection)\l  (r1 I:double)\l  (r3 I:double)\l org.mapsforge.map.util.MapViewProjection.fromPixels(double, double):org.mapsforge.core.model.LatLong type: VIRTUAL \l0x0040: IPUT  \l  (r6 I:org.mapsforge.core.model.LatLong)\l  (r5 I:org.mapsforge.map.android.input.TouchGestureHandler)\l org.mapsforge.map.android.input.TouchGestureHandler.pivot org.mapsforge.core.model.LatLong \l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|0x0042: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.android.input.TouchGestureHandler.onScaleBegin((r5 'this' I:org.mapsforge.map.android.input.TouchGestureHandler A[IMMUTABLE_TYPE, THIS]), (r6 I:android.view.ScaleGestureDetector A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
}

