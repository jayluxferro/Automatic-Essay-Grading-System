digraph "CFG fororg.mapsforge.map.android.input.TouchGestureHandler.onDoubleTapEvent(Landroid\/view\/MotionEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r14 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.scaleEnabled boolean \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r0 I:int) = (r15 I:android.view.MotionEvent) android.view.MotionEvent.getActionMasked():int type: VIRTUAL \l0x000a: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1] t:[0x0081, 0x000f] \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IGET  (r0 I:boolean) = (r14 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.isInDoubleTap boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0083 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IGET  (r0 I:org.mapsforge.map.android.view.MapView) = (r14 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.mapView org.mapsforge.map.android.view.MapView \l0x0015: INVOKE  (r0 I:org.mapsforge.map.model.Model) = (r0 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.getModel():org.mapsforge.map.model.Model type: VIRTUAL \l0x0019: IGET  (r3 I:org.mapsforge.map.model.IMapViewPosition) = (r0 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.mapViewPosition org.mapsforge.map.model.IMapViewPosition \l0x001b: IGET  (r0 I:boolean) = (r14 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.doubleTapEnabled boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x007e \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: INVOKE  (r0 I:byte) = (r3 I:org.mapsforge.map.model.IMapViewPosition) org.mapsforge.map.model.IMapViewPosition.getZoomLevel():byte type: INTERFACE \l0x0023: INVOKE  (r4 I:byte) = (r3 I:org.mapsforge.map.model.IMapViewPosition) org.mapsforge.map.model.IMapViewPosition.getZoomLevelMax():byte type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|0x0027: IF  (r0 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:15:0x007e \l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|0x0029: IGET  (r0 I:org.mapsforge.map.android.view.MapView) = (r14 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.mapView org.mapsforge.map.android.view.MapView \l0x002b: INVOKE  (r0 I:org.mapsforge.map.model.Model) = (r0 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.getModel():org.mapsforge.map.model.Model type: VIRTUAL \l0x002f: IGET  (r0 I:org.mapsforge.map.model.MapViewDimension) = (r0 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.mapViewDimension org.mapsforge.map.model.MapViewDimension \l0x0031: INVOKE  (r0 I:org.mapsforge.core.model.Dimension) = (r0 I:org.mapsforge.map.model.MapViewDimension) org.mapsforge.map.model.MapViewDimension.getDimension():org.mapsforge.core.model.Dimension type: VIRTUAL \l0x0035: INVOKE  (r0 I:org.mapsforge.core.model.Point) = (r0 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.getCenter():org.mapsforge.core.model.Point type: VIRTUAL \l0x0039: IGET  (r4 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x003b: INVOKE  (r6 I:float) = (r15 I:android.view.MotionEvent) android.view.MotionEvent.getX():float type: VIRTUAL \l0x003f: CAST  (r6 I:double) = (double) (r6 I:float) \l0x0040: ARITH  (r4 I:double) = (r4 I:double) \- (r6 I:double) \l0x0041: CAST  (r6 I:double) = (double) (r2 I:int) \l0x0042: CONST  (r8 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0044: INVOKE  (r10 I:double) = (r8 I:double), (r6 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0048: ARITH  (r4 I:double) = (r4 I:double) \/ (r10 I:double) \l0x0049: IGET  (r10 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x004b: INVOKE  (r0 I:float) = (r15 I:android.view.MotionEvent) android.view.MotionEvent.getY():float type: VIRTUAL \l0x004f: CAST  (r12 I:double) = (double) (r0 I:float) \l0x0050: ARITH  (r10 I:double) = (r10 I:double) \- (r12 I:double) \l0x0051: INVOKE  (r6 I:double) = (r8 I:double), (r6 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0055: ARITH  (r6 I:double) = (r10 I:double) \/ (r6 I:double) \l0x0057: IGET  (r0 I:org.mapsforge.map.android.view.MapView) = (r14 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.mapView org.mapsforge.map.android.view.MapView \l0x0059: INVOKE  (r0 I:org.mapsforge.map.util.MapViewProjection) = (r0 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.getMapViewProjection():org.mapsforge.map.util.MapViewProjection type: VIRTUAL \l0x005d: INVOKE  (r8 I:float) = (r15 I:android.view.MotionEvent) android.view.MotionEvent.getX():float type: VIRTUAL \l0x0061: CAST  (r8 I:double) = (double) (r8 I:float) \l0x0062: INVOKE  (r15 I:float) = (r15 I:android.view.MotionEvent) android.view.MotionEvent.getY():float type: VIRTUAL \l0x0066: CAST  (r10 I:double) = (double) (r15 I:float) \l0x0067: INVOKE  (r15 I:org.mapsforge.core.model.LatLong) = \l  (r0 I:org.mapsforge.map.util.MapViewProjection)\l  (r8 I:double)\l  (r10 I:double)\l org.mapsforge.map.util.MapViewProjection.fromPixels(double, double):org.mapsforge.core.model.LatLong type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x006b|0x006b: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x007e \l}"];
Node_14 [shape=record,label="{14\:\ 0x006d|0x006d: IGET  (r0 I:org.mapsforge.map.android.view.MapView) = (r14 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.mapView org.mapsforge.map.android.view.MapView \l0x006f: INVOKE  (r0 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.onMoveEvent():void type: VIRTUAL \l0x0072: IGET  (r0 I:org.mapsforge.map.android.view.MapView) = (r14 I:org.mapsforge.map.android.input.TouchGestureHandler) org.mapsforge.map.android.input.TouchGestureHandler.mapView org.mapsforge.map.android.view.MapView \l0x0074: INVOKE  (r0 I:org.mapsforge.map.android.view.MapView) org.mapsforge.map.android.view.MapView.onZoomEvent():void type: VIRTUAL \l0x0077: INVOKE  \l  (r3 I:org.mapsforge.map.model.IMapViewPosition)\l  (r15 I:org.mapsforge.core.model.LatLong)\l org.mapsforge.map.model.IMapViewPosition.setPivot(org.mapsforge.core.model.LatLong):void type: INTERFACE \l0x007a: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x007b: INVOKE  \l  (r3 I:org.mapsforge.map.model.IMapViewPosition)\l  (r4 I:double)\l  (r6 I:double)\l  (r8 I:byte)\l org.mapsforge.map.model.IMapViewPosition.moveCenterAndZoom(double, double, byte):void type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x007e|0x007e: IPUT  \l  (r1 I:boolean)\l  (r14 I:org.mapsforge.map.android.input.TouchGestureHandler)\l org.mapsforge.map.android.input.TouchGestureHandler.isInDoubleTap boolean \l}"];
Node_16 [shape=record,label="{16\:\ 0x0080|0x0080: RETURN  (r2 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0081|0x0081: IPUT  \l  (r2 I:boolean)\l  (r14 I:org.mapsforge.map.android.input.TouchGestureHandler)\l org.mapsforge.map.android.input.TouchGestureHandler.isInDoubleTap boolean \l}"];
Node_18 [shape=record,label="{18\:\ 0x0083|0x0083: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.android.input.TouchGestureHandler.onDoubleTapEvent((r14 'this' I:org.mapsforge.map.android.input.TouchGestureHandler A[IMMUTABLE_TYPE, THIS]), (r15 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_17;
Node_4 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

