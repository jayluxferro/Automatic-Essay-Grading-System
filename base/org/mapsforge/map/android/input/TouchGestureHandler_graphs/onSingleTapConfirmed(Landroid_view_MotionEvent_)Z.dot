digraph "CFG fororg.mapsforge.map.android.input.TouchGestureHandler.onSingleTapConfirmed(Landroid\/view\/MotionEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.mapsforge.core.model.Point r0 = new org.mapsforge.core.model.Point((double) r7.getX(), (double) r7.getY())\lorg.mapsforge.core.model.LatLong r7 = r6.mapView.getMapViewProjection().fromPixels(r0.f266x, r0.f267y)\l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|if (r7 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x001f|int r1 = r6.mapView.getLayerManager().getLayers().size() \- 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x002f|LOOP_START\lPHI: r1 \l  PHI: (r1v8 int) = (r1v7 int), (r1v9 int) binds: [B:2:0x001f, B:7:0x0054] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x002f\-\>B:7:0x0054\l|if (r1 \< 0) goto L_0x0057\l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|org.mapsforge.map.layer.Layer r3 = r6.mapView.getLayerManager().getLayers().get(r1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0051|if (r3.onTap(r7, r6.mapView.getMapViewProjection().toPixels(r3.getPosition()), r0) == false) goto L_0x0054\l}"];
Node_6 [shape=record,label="{6\:\ 0x0053|RETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0054|LOOP_END\lLOOP:0: B:3:0x002f\-\>B:7:0x0054\l|int r1 = r1 + \-1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0053|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0057|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.android.input.TouchGestureHandler.onSingleTapConfirmed((r6v0 'this' org.mapsforge.map.android.input.TouchGestureHandler A[IMMUTABLE_TYPE, THIS]), (r7v0 android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_8[style=dashed];
Node_7 -> Node_3;
Node_8 -> Node_6;
Node_9 -> Node_11;
}

