digraph "CFG fororg.mapsforge.map.android.rotation.SmoothCanvas.drawText(Ljava\/lang\/CharSequence;IIFFLandroid\/graphics\/Paint;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.Canvas) = (r7 I:org.mapsforge.map.android.rotation.SmoothCanvas) org.mapsforge.map.android.rotation.SmoothCanvas.delegate android.graphics.Canvas \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0003: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r1 I:java.lang.CharSequence)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:float)\l  (r5 I:float)\l  (r6 I:android.graphics.Paint)\l android.graphics.Canvas.drawText(java.lang.CharSequence, int, int, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.rotation.SmoothCanvas.drawText((r7 'this' I:org.mapsforge.map.android.rotation.SmoothCanvas A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

