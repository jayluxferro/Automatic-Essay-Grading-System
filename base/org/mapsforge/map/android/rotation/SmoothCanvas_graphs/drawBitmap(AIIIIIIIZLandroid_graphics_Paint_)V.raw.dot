digraph "CFG fororg.mapsforge.map.android.rotation.SmoothCanvas.drawBitmap([IIIIIIIZLandroid\/graphics\/Paint;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r1 I:android.graphics.Paint) = (r0 I:org.mapsforge.map.android.rotation.SmoothCanvas) org.mapsforge.map.android.rotation.SmoothCanvas.smooth android.graphics.Paint \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000a: INVOKE  (r1 I:android.graphics.Paint), (r2 I:boolean) android.graphics.Paint.setFilterBitmap(boolean):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IGET  (r3 I:android.graphics.Canvas) = (r0 I:org.mapsforge.map.android.rotation.SmoothCanvas) org.mapsforge.map.android.rotation.SmoothCanvas.delegate android.graphics.Canvas \l0x0010: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0011: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001a: MOVE  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: MOVE  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r4 I:int[])\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:int)\l  (r11 I:boolean)\l  (r12 I:android.graphics.Paint)\l android.graphics.Canvas.drawBitmap(int[], int, int, int, int, int, int, boolean, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.rotation.SmoothCanvas.drawBitmap((r13 'this' I:org.mapsforge.map.android.rotation.SmoothCanvas A[IMMUTABLE_TYPE, THIS]), (r14 I:int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:android.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_4 -> Node_3;
Node_5 -> Node_6;
}

