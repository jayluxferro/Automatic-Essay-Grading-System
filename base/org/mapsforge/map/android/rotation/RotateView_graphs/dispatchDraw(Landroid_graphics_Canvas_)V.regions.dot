digraph "CFG fororg.mapsforge.map.android.rotation.RotateView.dispatchDraw(Landroid\/graphics\/Canvas;)V" {
subgraph cluster_Region_585564644 {
label = "R(1:(2:(2:2|3)|(2:4|(1:(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1087927517 {
label = "R(2:(2:2|3)|(2:4|(1:(1:6))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1072546058 {
label = "IF [B:1:0x0005] THEN: R(2:2|3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r4.heading == 0.0f) goto L_0x0007\l}"];
subgraph cluster_Region_1514131580 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|super.dispatchDraw(r5)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1087177470 {
label = "R(2:4|(1:(1:6)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|r4.saveCount = r5.save()\lr5.rotate(\-r4.heading, ((float) getWidth()) * 0.5f, ((float) getHeight()) * 0.5f)\lr4.smoothCanvas.delegate = r5\lsuper.dispatchDraw(r4.smoothCanvas)\l}"];
subgraph cluster_Region_1127282854 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_310674523 {
label = "IF [B:5:0x0033] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0033|if (r4.saveCount != \-1) goto L_0x0035\l}"];
subgraph cluster_Region_907807303 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0035|r5.restoreToCount(r4.saveCount)\lr4.saveCount = \-1\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void org.mapsforge.map.android.rotation.RotateView.dispatchDraw((r4v0 'this' org.mapsforge.map.android.rotation.RotateView A[IMMUTABLE_TYPE, THIS]), (r5v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
}

