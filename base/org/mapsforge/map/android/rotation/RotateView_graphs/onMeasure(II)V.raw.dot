digraph "CFG fororg.mapsforge.map.android.rotation.RotateView.onMeasure(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r4 I:org.mapsforge.map.android.rotation.RotateView) org.mapsforge.map.android.rotation.RotateView.getSuggestedMinimumWidth():int type: VIRTUAL \l0x0004: INVOKE  (r0 I:int) = (r0 I:int), (r5 I:int) org.mapsforge.map.android.rotation.RotateView.getDefaultSize(int, int):int type: STATIC \l0x0008: INVOKE  (r1 I:int) = (r4 I:org.mapsforge.map.android.rotation.RotateView) org.mapsforge.map.android.rotation.RotateView.getSuggestedMinimumHeight():int type: VIRTUAL \l0x000c: INVOKE  (r1 I:int) = (r1 I:int), (r6 I:int) org.mapsforge.map.android.rotation.RotateView.getDefaultSize(int, int):int type: STATIC \l0x0010: CAST  (r2 I:double) = (double) (r0 I:int) \l0x0011: CAST  (r0 I:double) = (double) (r1 I:int) \l0x0012: INVOKE  (r0 I:double) = (r2 I:double), (r0 I:double) java.lang.Math.hypot(double, double):double type: STATIC \l0x0016: CAST  (r0 I:int) = (int) (r0 I:double) \l0x0017: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x0019: INVOKE  (r0 I:int) = (r0 I:int), (r1 I:int) android.view.View.MeasureSpec.makeMeasureSpec(int, int):int type: STATIC \l0x001d: INVOKE  (r1 I:int) = (r4 I:org.mapsforge.map.android.rotation.RotateView) org.mapsforge.map.android.rotation.RotateView.getChildCount():int type: VIRTUAL \l0x0021: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|0x0022: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0024|0x0024: INVOKE  (r3 I:android.view.View) = \l  (r4 I:org.mapsforge.map.android.rotation.RotateView)\l  (r2 I:int)\l org.mapsforge.map.android.rotation.RotateView.getChildAt(int):android.view.View type: VIRTUAL \l0x0028: INVOKE  (r3 I:android.view.View), (r0 I:int), (r0 I:int) android.view.View.measure(int, int):void type: VIRTUAL \l0x002b: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x002e|0x002e: INVOKE  (r4 I:android.view.ViewGroup), (r5 I:int), (r6 I:int) android.view.ViewGroup.onMeasure(int, int):void type: SUPER \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: RETURN   \l}"];
MethodNode[shape=record,label="{protected void org.mapsforge.map.android.rotation.RotateView.onMeasure((r4 'this' I:org.mapsforge.map.android.rotation.RotateView A[IMMUTABLE_TYPE, THIS]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
}

