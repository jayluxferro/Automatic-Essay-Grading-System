digraph "CFG fororg.mapsforge.map.android.graphics.AndroidPointTextContainer.draw(Lorg\/mapsforge\/core\/graphics\/Canvas;Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/graphics\/Matrix;Lorg\/mapsforge\/core\/graphics\/Filter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r8 I:boolean) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.isVisible boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r6 I:android.graphics.Canvas) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getCanvas(org.mapsforge.core.graphics.Canvas):android.graphics.Canvas type: STATIC \l0x0009: IGET  (r8 I:int) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.textWidth int \l0x000b: IGET  (r0 I:int) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.maxTextWidth int \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r8 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:20:0x0092 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r6 I:android.graphics.Canvas) android.graphics.Canvas.save():int type: VIRTUAL \l0x0012: IGET  (r8 I:org.mapsforge.core.model.Point) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.xy org.mapsforge.core.model.Point \l0x0014: IGET  (r0 I:double) = (r8 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0016: IGET  (r2 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0018: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0019: IGET  (r8 I:org.mapsforge.core.model.Rectangle) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l0x001b: IGET  (r2 I:double) = (r8 I:org.mapsforge.core.model.Rectangle) org.mapsforge.core.model.Rectangle.left double \l0x001d: ARITH  (r0 I:double) = (r0 I:double) + (r2 I:double) \l0x001e: CAST  (r8 I:float) = (float) (r0 I:double) \l0x001f: IGET  (r0 I:org.mapsforge.core.model.Point) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.xy org.mapsforge.core.model.Point \l0x0021: IGET  (r0 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0023: IGET  (r2 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0025: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0026: IGET  (r7 I:org.mapsforge.core.model.Rectangle) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l0x0028: IGET  (r2 I:double) = (r7 I:org.mapsforge.core.model.Rectangle) org.mapsforge.core.model.Rectangle.top double \l0x002a: ARITH  (r0 I:double) = (r0 I:double) + (r2 I:double) \l0x002b: CAST  (r7 I:float) = (float) (r0 I:double) \l0x002c: INVOKE  (r6 I:android.graphics.Canvas), (r8 I:float), (r7 I:float) android.graphics.Canvas.translate(float, float):void type: VIRTUAL \l0x002f: IGET  (r7 I:android.text.StaticLayout) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.backLayout android.text.StaticLayout \l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|0x0031: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0060 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|0x0033: IGET  (r7 I:android.text.StaticLayout) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.backLayout android.text.StaticLayout \l0x0035: INVOKE  (r7 I:android.text.TextPaint) = (r7 I:android.text.StaticLayout) android.text.StaticLayout.getPaint():android.text.TextPaint type: VIRTUAL \l0x0039: INVOKE  (r7 I:int) = (r7 I:android.text.TextPaint) android.text.TextPaint.getColor():int type: VIRTUAL \l0x003d: SGET  (r8 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|0x003f: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004e \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: IGET  (r8 I:android.text.StaticLayout) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.backLayout android.text.StaticLayout \l0x0043: INVOKE  (r8 I:android.text.TextPaint) = (r8 I:android.text.StaticLayout) android.text.StaticLayout.getPaint():android.text.TextPaint type: VIRTUAL \l0x0047: INVOKE  (r0 I:int) = (r7 I:int), (r9 I:org.mapsforge.core.graphics.Filter) org.mapsforge.core.graphics.GraphicUtils.filterColor(int, org.mapsforge.core.graphics.Filter):int type: STATIC \l0x004b: INVOKE  (r8 I:android.text.TextPaint), (r0 I:int) android.text.TextPaint.setColor(int):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|0x004e: IGET  (r8 I:android.text.StaticLayout) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.backLayout android.text.StaticLayout \l0x0050: INVOKE  \l  (r8 I:android.text.StaticLayout)\l  (r6 I:android.graphics.Canvas)\l android.text.StaticLayout.draw(android.graphics.Canvas):void type: VIRTUAL \l0x0053: SGET  (r8 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l}"];
Node_11 [shape=record,label="{11\:\ 0x0055|0x0055: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0060 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0057|0x0057: IGET  (r8 I:android.text.StaticLayout) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.backLayout android.text.StaticLayout \l0x0059: INVOKE  (r8 I:android.text.TextPaint) = (r8 I:android.text.StaticLayout) android.text.StaticLayout.getPaint():android.text.TextPaint type: VIRTUAL \l0x005d: INVOKE  (r8 I:android.text.TextPaint), (r7 I:int) android.text.TextPaint.setColor(int):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0060|0x0060: IGET  (r7 I:android.text.StaticLayout) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.frontLayout android.text.StaticLayout \l0x0062: INVOKE  (r7 I:android.text.TextPaint) = (r7 I:android.text.StaticLayout) android.text.StaticLayout.getPaint():android.text.TextPaint type: VIRTUAL \l0x0066: INVOKE  (r7 I:int) = (r7 I:android.text.TextPaint) android.text.TextPaint.getColor():int type: VIRTUAL \l0x006a: SGET  (r8 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l}"];
Node_14 [shape=record,label="{14\:\ 0x006c|0x006c: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x007b \l}"];
Node_15 [shape=record,label="{15\:\ 0x006e|0x006e: IGET  (r8 I:android.text.StaticLayout) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.frontLayout android.text.StaticLayout \l0x0070: INVOKE  (r8 I:android.text.TextPaint) = (r8 I:android.text.StaticLayout) android.text.StaticLayout.getPaint():android.text.TextPaint type: VIRTUAL \l0x0074: INVOKE  (r0 I:int) = (r7 I:int), (r9 I:org.mapsforge.core.graphics.Filter) org.mapsforge.core.graphics.GraphicUtils.filterColor(int, org.mapsforge.core.graphics.Filter):int type: STATIC \l0x0078: INVOKE  (r8 I:android.text.TextPaint), (r0 I:int) android.text.TextPaint.setColor(int):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x007b|0x007b: IGET  (r8 I:android.text.StaticLayout) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.frontLayout android.text.StaticLayout \l0x007d: INVOKE  \l  (r8 I:android.text.StaticLayout)\l  (r6 I:android.graphics.Canvas)\l android.text.StaticLayout.draw(android.graphics.Canvas):void type: VIRTUAL \l0x0080: SGET  (r8 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l}"];
Node_17 [shape=record,label="{17\:\ 0x0082|0x0082: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x008d \l}"];
Node_18 [shape=record,label="{18\:\ 0x0084|0x0084: IGET  (r8 I:android.text.StaticLayout) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.frontLayout android.text.StaticLayout \l0x0086: INVOKE  (r8 I:android.text.TextPaint) = (r8 I:android.text.StaticLayout) android.text.StaticLayout.getPaint():android.text.TextPaint type: VIRTUAL \l0x008a: INVOKE  (r8 I:android.text.TextPaint), (r7 I:int) android.text.TextPaint.setColor(int):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x008d|0x008d: INVOKE  (r6 I:android.graphics.Canvas) android.graphics.Canvas.restore():void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0092|0x0092: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0093: SGET  (r0 I:int[]) =  org.mapsforge.map.android.graphics.AndroidPointTextContainer.1.$SwitchMap$org$mapsforge$core$graphics$Position int[] \l0x0095: IGET  (r1 I:org.mapsforge.core.graphics.Position) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.position org.mapsforge.core.graphics.Position \l0x0097: INVOKE  (r1 I:int) = (r1 I:org.mapsforge.core.graphics.Position) org.mapsforge.core.graphics.Position.ordinal():int type: VIRTUAL \l0x009b: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x009d|0x009d: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9] t:[0x00a5, 0x00a1, 0x00a1, 0x00a1, 0x00a0, 0x00a0, 0x00a0, 0x00a5, 0x00a5] \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a1|0x00a1: IGET  (r8 I:int) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.textHeight int \l0x00a3: CAST  (r8 I:float) = (float) (r8 I:int) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a5|0x00a5: IGET  (r8 I:int) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.textHeight int \l0x00a7: CAST  (r8 I:float) = (float) (r8 I:int) \l0x00a8: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l0x00aa: ARITH  (r8 I:float) = (r8 I:float) \/ (r0 I:float) \l}"];
Node_25 [shape=record,label="{25\:\ 0x00ab|0x00ab: IGET  (r0 I:org.mapsforge.core.model.Point) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.xy org.mapsforge.core.model.Point \l0x00ad: IGET  (r0 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x00af: IGET  (r2 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x00b1: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x00b2: CAST  (r0 I:float) = (float) (r0 I:double) \l0x00b3: IGET  (r1 I:org.mapsforge.core.model.Point) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.xy org.mapsforge.core.model.Point \l0x00b5: IGET  (r1 I:double) = (r1 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x00b7: IGET  (r3 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x00b9: ARITH  (r1 I:double) = (r1 I:double) \- (r3 I:double) \l0x00ba: CAST  (r7 I:float) = (float) (r1 I:double) \l0x00bb: ARITH  (r7 I:float) = (r7 I:float) + (r8 I:float) \l0x00bc: IGET  (r8 I:org.mapsforge.core.graphics.Paint) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l}"];
Node_26 [shape=record,label="{26\:\ 0x00be|0x00be: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00e7 \l}"];
Node_27 [shape=record,label="{27\:\ 0x00c0|0x00c0: IGET  (r8 I:org.mapsforge.core.graphics.Paint) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l0x00c2: INVOKE  (r8 I:int) = (r8 I:org.mapsforge.core.graphics.Paint) org.mapsforge.core.graphics.Paint.getColor():int type: INTERFACE \l0x00c6: SGET  (r1 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l}"];
Node_28 [shape=record,label="{28\:\ 0x00c8|0x00c8: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x00d3 \l}"];
Node_29 [shape=record,label="{29\:\ 0x00ca|0x00ca: IGET  (r1 I:org.mapsforge.core.graphics.Paint) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l0x00cc: INVOKE  (r2 I:int) = (r8 I:int), (r9 I:org.mapsforge.core.graphics.Filter) org.mapsforge.core.graphics.GraphicUtils.filterColor(int, org.mapsforge.core.graphics.Filter):int type: STATIC \l0x00d0: INVOKE  (r1 I:org.mapsforge.core.graphics.Paint), (r2 I:int) org.mapsforge.core.graphics.Paint.setColor(int):void type: INTERFACE \l}"];
Node_30 [shape=record,label="{30\:\ 0x00d3|0x00d3: IGET  (r1 I:java.lang.String) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.text java.lang.String \l0x00d5: IGET  (r2 I:org.mapsforge.core.graphics.Paint) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l0x00d7: INVOKE  (r2 I:android.graphics.Paint) = (r2 I:org.mapsforge.core.graphics.Paint) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getPaint(org.mapsforge.core.graphics.Paint):android.graphics.Paint type: STATIC \l0x00db: INVOKE  \l  (r6 I:android.graphics.Canvas)\l  (r1 I:java.lang.String)\l  (r0 I:float)\l  (r7 I:float)\l  (r2 I:android.graphics.Paint)\l android.graphics.Canvas.drawText(java.lang.String, float, float, android.graphics.Paint):void type: VIRTUAL \l0x00de: SGET  (r1 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l}"];
Node_31 [shape=record,label="{31\:\ 0x00e0|0x00e0: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x00e7 \l}"];
Node_32 [shape=record,label="{32\:\ 0x00e2|0x00e2: IGET  (r1 I:org.mapsforge.core.graphics.Paint) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l0x00e4: INVOKE  (r1 I:org.mapsforge.core.graphics.Paint), (r8 I:int) org.mapsforge.core.graphics.Paint.setColor(int):void type: INTERFACE \l}"];
Node_33 [shape=record,label="{33\:\ 0x00e7|0x00e7: IGET  (r8 I:org.mapsforge.core.graphics.Paint) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintFront org.mapsforge.core.graphics.Paint \l0x00e9: INVOKE  (r8 I:int) = (r8 I:org.mapsforge.core.graphics.Paint) org.mapsforge.core.graphics.Paint.getColor():int type: INTERFACE \l0x00ed: SGET  (r1 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l}"];
Node_34 [shape=record,label="{34\:\ 0x00ef|0x00ef: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00fa \l}"];
Node_35 [shape=record,label="{35\:\ 0x00f1|0x00f1: IGET  (r1 I:org.mapsforge.core.graphics.Paint) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintFront org.mapsforge.core.graphics.Paint \l0x00f3: INVOKE  (r2 I:int) = (r8 I:int), (r9 I:org.mapsforge.core.graphics.Filter) org.mapsforge.core.graphics.GraphicUtils.filterColor(int, org.mapsforge.core.graphics.Filter):int type: STATIC \l0x00f7: INVOKE  (r1 I:org.mapsforge.core.graphics.Paint), (r2 I:int) org.mapsforge.core.graphics.Paint.setColor(int):void type: INTERFACE \l}"];
Node_36 [shape=record,label="{36\:\ 0x00fa|0x00fa: IGET  (r1 I:java.lang.String) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.text java.lang.String \l0x00fc: IGET  (r2 I:org.mapsforge.core.graphics.Paint) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintFront org.mapsforge.core.graphics.Paint \l0x00fe: INVOKE  (r2 I:android.graphics.Paint) = (r2 I:org.mapsforge.core.graphics.Paint) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getPaint(org.mapsforge.core.graphics.Paint):android.graphics.Paint type: STATIC \l0x0102: INVOKE  \l  (r6 I:android.graphics.Canvas)\l  (r1 I:java.lang.String)\l  (r0 I:float)\l  (r7 I:float)\l  (r2 I:android.graphics.Paint)\l android.graphics.Canvas.drawText(java.lang.String, float, float, android.graphics.Paint):void type: VIRTUAL \l0x0105: SGET  (r6 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l}"];
Node_37 [shape=record,label="{37\:\ 0x0107|0x0107: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:39:0x010e \l}"];
Node_38 [shape=record,label="{38\:\ 0x0109|0x0109: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = \l  (r5 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintFront org.mapsforge.core.graphics.Paint \l0x010b: INVOKE  (r6 I:org.mapsforge.core.graphics.Paint), (r8 I:int) org.mapsforge.core.graphics.Paint.setColor(int):void type: INTERFACE \l}"];
Node_39 [shape=record,label="{39\:\ 0x010e|0x010e: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.graphics.AndroidPointTextContainer.draw((r5 'this' I:org.mapsforge.map.android.graphics.AndroidPointTextContainer A[IMMUTABLE_TYPE, THIS]), (r6 I:org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.mapsforge.core.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.mapsforge.core.graphics.Filter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_20;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_39;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_24;
Node_21 -> Node_25;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
}

