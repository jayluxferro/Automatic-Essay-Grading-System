digraph "CFG fororg.mapsforge.map.android.graphics.AndroidPointTextContainer.\<init\>(Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/graphics\/Display;ILjava\/lang\/String;Lorg\/mapsforge\/core\/graphics\/Paint;Lorg\/mapsforge\/core\/graphics\/Paint;Lorg\/mapsforge\/core\/mapelements\/SymbolContainer;Lorg\/mapsforge\/core\/graphics\/Position;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0001: INVOKE  \l  (r11 I:org.mapsforge.core.mapelements.PointTextContainer)\l  (r12 I:org.mapsforge.core.model.Point)\l  (r13 I:org.mapsforge.core.graphics.Display)\l  (r14 I:int)\l  (r15 I:java.lang.String)\l  (r16 I:org.mapsforge.core.graphics.Paint)\l  (r17 I:org.mapsforge.core.graphics.Paint)\l  (r18 I:org.mapsforge.core.mapelements.SymbolContainer)\l  (r19 I:org.mapsforge.core.graphics.Position)\l  (r20 I:int)\l org.mapsforge.core.mapelements.PointTextContainer.\<init\>(org.mapsforge.core.model.Point, org.mapsforge.core.graphics.Display, int, java.lang.String, org.mapsforge.core.graphics.Paint, org.mapsforge.core.graphics.Paint, org.mapsforge.core.mapelements.SymbolContainer, org.mapsforge.core.graphics.Position, int):void type: DIRECT \l0x0004: IGET  (r1 I:int) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.textWidth int \l0x0006: IGET  (r2 I:int) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.maxTextWidth int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, byte, short, char]) \<= (r2 I:?[int, byte, short, char])  \-\> B:28:0x00ac \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: NEW_INSTANCE  (r1 I:android.text.TextPaint) =  android.text.TextPaint \l0x000c: IGET  (r2 I:org.mapsforge.core.graphics.Paint) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintFront org.mapsforge.core.graphics.Paint \l0x000e: INVOKE  (r2 I:android.graphics.Paint) = (r2 I:org.mapsforge.core.graphics.Paint) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getPaint(org.mapsforge.core.graphics.Paint):android.graphics.Paint type: STATIC \l0x0012: INVOKE  \l  (r1 I:android.text.TextPaint)\l  (r2 I:android.graphics.Paint)\l android.text.TextPaint.\<init\>(android.graphics.Paint):void type: DIRECT \l0x0015: IGET  (r2 I:org.mapsforge.core.graphics.Paint) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l0x0017: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0026 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: NEW_INSTANCE  (r2 I:android.text.TextPaint) =  android.text.TextPaint \l0x001c: IGET  (r4 I:org.mapsforge.core.graphics.Paint) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l0x001e: INVOKE  (r4 I:android.graphics.Paint) = (r4 I:org.mapsforge.core.graphics.Paint) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getPaint(org.mapsforge.core.graphics.Paint):android.graphics.Paint type: STATIC \l0x0022: INVOKE  \l  (r2 I:android.text.TextPaint)\l  (r4 I:android.graphics.Paint)\l android.text.TextPaint.\<init\>(android.graphics.Paint):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|0x0027: SGET  (r4 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_CENTER android.text.Layout$Alignment \l0x0029: SGET  (r5 I:org.mapsforge.core.graphics.Position) =  org.mapsforge.core.graphics.Position.LEFT org.mapsforge.core.graphics.Position \l0x002b: IGET  (r6 I:org.mapsforge.core.graphics.Position) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.position org.mapsforge.core.graphics.Position \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0051 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: SGET  (r5 I:org.mapsforge.core.graphics.Position) =  org.mapsforge.core.graphics.Position.BELOW_LEFT org.mapsforge.core.graphics.Position \l0x0031: IGET  (r6 I:org.mapsforge.core.graphics.Position) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.position org.mapsforge.core.graphics.Position \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0051 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: SGET  (r5 I:org.mapsforge.core.graphics.Position) =  org.mapsforge.core.graphics.Position.ABOVE_LEFT org.mapsforge.core.graphics.Position \l0x0037: IGET  (r6 I:org.mapsforge.core.graphics.Position) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.position org.mapsforge.core.graphics.Position \l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x003c \l}"];
Node_13 [shape=record,label="{13\:\ 0x003c|0x003c: SGET  (r5 I:org.mapsforge.core.graphics.Position) =  org.mapsforge.core.graphics.Position.RIGHT org.mapsforge.core.graphics.Position \l0x003e: IGET  (r6 I:org.mapsforge.core.graphics.Position) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.position org.mapsforge.core.graphics.Position \l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|0x0040: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004e \l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|0x0042: SGET  (r5 I:org.mapsforge.core.graphics.Position) =  org.mapsforge.core.graphics.Position.BELOW_RIGHT org.mapsforge.core.graphics.Position \l0x0044: IGET  (r6 I:org.mapsforge.core.graphics.Position) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.position org.mapsforge.core.graphics.Position \l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|0x0046: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004e \l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: SGET  (r5 I:org.mapsforge.core.graphics.Position) =  org.mapsforge.core.graphics.Position.ABOVE_RIGHT org.mapsforge.core.graphics.Position \l0x004a: IGET  (r6 I:org.mapsforge.core.graphics.Position) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.position org.mapsforge.core.graphics.Position \l}"];
Node_18 [shape=record,label="{18\:\ 0x004c|0x004c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0053 \l}"];
Node_19 [shape=record,label="{19\:\ 0x004e|0x004e: SGET  (r4 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_NORMAL android.text.Layout$Alignment \l}"];
Node_20 [shape=record,label="{20\:\ 0x0051|0x0051: SGET  (r4 I:android.text.Layout$Alignment) =  android.text.Layout.Alignment.ALIGN_OPPOSITE android.text.Layout$Alignment \l}"];
Node_21 [shape=record,label="{21\:\ 0x0053|0x0053: SGET  (r5 I:android.graphics.Paint$Align) =  android.graphics.Paint.Align.LEFT android.graphics.Paint$Align \l0x0055: INVOKE  \l  (r1 I:android.text.TextPaint)\l  (r5 I:android.graphics.Paint$Align)\l android.text.TextPaint.setTextAlign(android.graphics.Paint$Align):void type: VIRTUAL \l0x0058: IGET  (r5 I:org.mapsforge.core.graphics.Paint) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l}"];
Node_22 [shape=record,label="{22\:\ 0x005a|0x005a: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0061 \l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|0x005c: SGET  (r5 I:android.graphics.Paint$Align) =  android.graphics.Paint.Align.LEFT android.graphics.Paint$Align \l0x005e: INVOKE  \l  (r2 I:android.text.TextPaint)\l  (r5 I:android.graphics.Paint$Align)\l android.text.TextPaint.setTextAlign(android.graphics.Paint$Align):void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0061|0x0061: NEW_INSTANCE  (r5 I:android.text.StaticLayout) =  android.text.StaticLayout \l0x0063: IGET  (r6 I:java.lang.String) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.text java.lang.String \l0x0065: IGET  (r7 I:int) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.maxTextWidth int \l0x0067: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0069: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006a: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006b: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x006c: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x006d: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x006e: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006f: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0071: MOVE  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0073: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0075: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0077: INVOKE  \l  (r12 I:android.text.StaticLayout)\l  (r13 I:java.lang.CharSequence)\l  (r14 I:android.text.TextPaint)\l  (r15 I:int)\l  (r16 I:android.text.Layout$Alignment)\l  (r17 I:float)\l  (r18 I:float)\l  (r19 I:boolean)\l android.text.StaticLayout.\<init\>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean):void type: DIRECT \l0x007a: IPUT  \l  (r5 I:android.text.StaticLayout)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.frontLayout android.text.StaticLayout \l0x007c: IPUT  \l  (r3 I:android.text.StaticLayout)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.backLayout android.text.StaticLayout \l0x007e: IGET  (r1 I:org.mapsforge.core.graphics.Paint) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.paintBack org.mapsforge.core.graphics.Paint \l}"];
Node_25 [shape=record,label="{25\:\ 0x0080|0x0080: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x009d \l}"];
Node_26 [shape=record,label="{26\:\ 0x0082|0x0082: NEW_INSTANCE  (r1 I:android.text.StaticLayout) =  android.text.StaticLayout \l0x0084: IGET  (r3 I:java.lang.String) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.text java.lang.String \l0x0086: IGET  (r5 I:int) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.maxTextWidth int \l0x0088: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x008a: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008b: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008c: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x008d: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x008e: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x008f: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0090: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0092: MOVE  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0094: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0096: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0098: INVOKE  \l  (r12 I:android.text.StaticLayout)\l  (r13 I:java.lang.CharSequence)\l  (r14 I:android.text.TextPaint)\l  (r15 I:int)\l  (r16 I:android.text.Layout$Alignment)\l  (r17 I:float)\l  (r18 I:float)\l  (r19 I:boolean)\l android.text.StaticLayout.\<init\>(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout$Alignment, float, float, boolean):void type: DIRECT \l0x009b: IPUT  \l  (r1 I:android.text.StaticLayout)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.backLayout android.text.StaticLayout \l}"];
Node_27 [shape=record,label="{27\:\ 0x009d|0x009d: IGET  (r1 I:android.text.StaticLayout) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.frontLayout android.text.StaticLayout \l0x009f: INVOKE  (r1 I:int) = (r1 I:android.text.StaticLayout) android.text.StaticLayout.getWidth():int type: VIRTUAL \l0x00a3: CAST  (r1 I:float) = (float) (r1 I:int) \l0x00a4: IGET  (r2 I:android.text.StaticLayout) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.frontLayout android.text.StaticLayout \l0x00a6: INVOKE  (r2 I:int) = (r2 I:android.text.StaticLayout) android.text.StaticLayout.getHeight():int type: VIRTUAL \l0x00aa: CAST  (r2 I:float) = (float) (r2 I:int) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00ac|0x00ac: IGET  (r1 I:int) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.textWidth int \l0x00ae: CAST  (r1 I:float) = (float) (r1 I:int) \l0x00af: IGET  (r2 I:int) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.textHeight int \l0x00b1: CAST  (r2 I:float) = (float) (r2 I:int) \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b2|0x00b2: SGET  (r3 I:int[]) =  org.mapsforge.map.android.graphics.AndroidPointTextContainer.1.$SwitchMap$org$mapsforge$core$graphics$Position int[] \l0x00b4: IGET  (r4 I:org.mapsforge.core.graphics.Position) = \l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.position org.mapsforge.core.graphics.Position \l0x00b6: INVOKE  (r4 I:int) = (r4 I:org.mapsforge.core.graphics.Position) org.mapsforge.core.graphics.Position.ordinal():int type: VIRTUAL \l0x00ba: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x00bc: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1073741824(0x40000000, float:2.0) ?[int, float, short, byte, char])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x00be|0x00be: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9] t:[0x017e, 0x0167, 0x0151, 0x013c, 0x0123, 0x010b, 0x00f4, 0x00db, 0x00c3] \l}"];
Node_32 [shape=record,label="{32\:\ 0x00c3|0x00c3: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle \l0x00c5: CONST  (r5 I:?[long, double]) = (0 ?[long, double]) \l0x00c7: NEG  (r7 I:float) = (r2 I:float) \l0x00c8: ARITH  (r7 I:float) = (r7 I:float) \/ (r4 I:float) \l0x00c9: CAST  (r7 I:double) = (double) (r7 I:float) \l0x00ca: CAST  (r9 I:double) = (double) (r1 I:float) \l0x00cb: ARITH  (r2 I:float) = (r2 I:float) \/ (r4 I:float) \l0x00cc: CAST  (r1 I:double) = (double) (r2 I:float) \l0x00cd: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x00ce: MOVE  (r13 I:?[long, double]) = (r5 I:?[long, double]) \l0x00cf: MOVE  (r15 I:?[long, double]) = (r7 I:?[long, double]) \l0x00d0: MOVE  (r17 I:?[long, double]) = (r9 I:?[long, double]) \l0x00d2: MOVE  (r19 I:?[long, double]) = (r1 I:?[long, double]) \l0x00d4: INVOKE  \l  (r12 I:org.mapsforge.core.model.Rectangle)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT \l0x00d7: IPUT  \l  (r3 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l}"];
Node_33 [shape=record,label="{33\:\ 0x00db|0x00db: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle \l0x00dd: NEG  (r1 I:float) = (r1 I:float) \l0x00de: CAST  (r5 I:double) = (double) (r1 I:float) \l0x00df: NEG  (r1 I:float) = (r2 I:float) \l0x00e0: ARITH  (r1 I:float) = (r1 I:float) \/ (r4 I:float) \l0x00e1: CAST  (r7 I:double) = (double) (r1 I:float) \l0x00e2: CONST  (r9 I:?[long, double]) = (0 ?[long, double]) \l0x00e4: ARITH  (r2 I:float) = (r2 I:float) \/ (r4 I:float) \l0x00e5: CAST  (r1 I:double) = (double) (r2 I:float) \l0x00e6: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x00e7: MOVE  (r13 I:?[long, double]) = (r5 I:?[long, double]) \l0x00e8: MOVE  (r15 I:?[long, double]) = (r7 I:?[long, double]) \l0x00e9: MOVE  (r17 I:?[long, double]) = (r9 I:?[long, double]) \l0x00eb: MOVE  (r19 I:?[long, double]) = (r1 I:?[long, double]) \l0x00ed: INVOKE  \l  (r12 I:org.mapsforge.core.model.Rectangle)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT \l0x00f0: IPUT  \l  (r3 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l}"];
Node_34 [shape=record,label="{34\:\ 0x00f4|0x00f4: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle \l0x00f6: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x00f8: NEG  (r2 I:float) = (r2 I:float) \l0x00f9: CAST  (r6 I:double) = (double) (r2 I:float) \l0x00fa: CAST  (r1 I:double) = (double) (r1 I:float) \l0x00fb: CONST  (r8 I:?[long, double]) = (0 ?[long, double]) \l0x00fd: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x00fe: MOVE  (r13 I:?[long, double]) = (r4 I:?[long, double]) \l0x00ff: MOVE  (r15 I:?[long, double]) = (r6 I:?[long, double]) \l0x0100: MOVE  (r17 I:?[long, double]) = (r1 I:?[long, double]) \l0x0102: MOVE  (r19 I:?[long, double]) = (r8 I:?[long, double]) \l0x0104: INVOKE  \l  (r12 I:org.mapsforge.core.model.Rectangle)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT \l0x0107: IPUT  \l  (r3 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l}"];
Node_35 [shape=record,label="{35\:\ 0x010b|0x010b: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle \l0x010d: NEG  (r1 I:float) = (r1 I:float) \l0x010e: CAST  (r4 I:double) = (double) (r1 I:float) \l0x010f: NEG  (r1 I:float) = (r2 I:float) \l0x0110: CAST  (r1 I:double) = (double) (r1 I:float) \l0x0111: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x0113: CONST  (r8 I:?[long, double]) = (0 ?[long, double]) \l0x0115: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0116: MOVE  (r13 I:?[long, double]) = (r4 I:?[long, double]) \l0x0117: MOVE  (r15 I:?[long, double]) = (r1 I:?[long, double]) \l0x0118: MOVE  (r17 I:?[long, double]) = (r6 I:?[long, double]) \l0x011a: MOVE  (r19 I:?[long, double]) = (r8 I:?[long, double]) \l0x011c: INVOKE  \l  (r12 I:org.mapsforge.core.model.Rectangle)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT \l0x011f: IPUT  \l  (r3 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l}"];
Node_36 [shape=record,label="{36\:\ 0x0123|0x0123: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle \l0x0125: NEG  (r5 I:float) = (r1 I:float) \l0x0126: ARITH  (r5 I:float) = (r5 I:float) \/ (r4 I:float) \l0x0127: CAST  (r5 I:double) = (double) (r5 I:float) \l0x0128: NEG  (r2 I:float) = (r2 I:float) \l0x0129: CAST  (r7 I:double) = (double) (r2 I:float) \l0x012a: ARITH  (r1 I:float) = (r1 I:float) \/ (r4 I:float) \l0x012b: CAST  (r1 I:double) = (double) (r1 I:float) \l0x012c: CONST  (r9 I:?[long, double]) = (0 ?[long, double]) \l0x012e: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x012f: MOVE  (r13 I:?[long, double]) = (r5 I:?[long, double]) \l0x0130: MOVE  (r15 I:?[long, double]) = (r7 I:?[long, double]) \l0x0131: MOVE  (r17 I:?[long, double]) = (r1 I:?[long, double]) \l0x0133: MOVE  (r19 I:?[long, double]) = (r9 I:?[long, double]) \l0x0135: INVOKE  \l  (r12 I:org.mapsforge.core.model.Rectangle)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT \l0x0138: IPUT  \l  (r3 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l}"];
Node_37 [shape=record,label="{37\:\ 0x013c|0x013c: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle \l0x013e: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x0140: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x0142: CAST  (r8 I:double) = (double) (r1 I:float) \l0x0143: CAST  (r1 I:double) = (double) (r2 I:float) \l0x0144: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0145: MOVE  (r13 I:?[long, double]) = (r4 I:?[long, double]) \l0x0146: MOVE  (r15 I:?[long, double]) = (r6 I:?[long, double]) \l0x0147: MOVE  (r17 I:?[long, double]) = (r8 I:?[long, double]) \l0x0149: MOVE  (r19 I:?[long, double]) = (r1 I:?[long, double]) \l0x014b: INVOKE  \l  (r12 I:org.mapsforge.core.model.Rectangle)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT \l0x014e: IPUT  \l  (r3 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l}"];
Node_38 [shape=record,label="{38\:\ 0x0151|0x0151: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle \l0x0153: NEG  (r1 I:float) = (r1 I:float) \l0x0154: CAST  (r4 I:double) = (double) (r1 I:float) \l0x0155: CONST  (r6 I:?[long, double]) = (0 ?[long, double]) \l0x0157: CONST  (r8 I:?[long, double]) = (0 ?[long, double]) \l0x0159: CAST  (r1 I:double) = (double) (r2 I:float) \l0x015a: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x015b: MOVE  (r13 I:?[long, double]) = (r4 I:?[long, double]) \l0x015c: MOVE  (r15 I:?[long, double]) = (r6 I:?[long, double]) \l0x015d: MOVE  (r17 I:?[long, double]) = (r8 I:?[long, double]) \l0x015f: MOVE  (r19 I:?[long, double]) = (r1 I:?[long, double]) \l0x0161: INVOKE  \l  (r12 I:org.mapsforge.core.model.Rectangle)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT \l0x0164: IPUT  \l  (r3 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l}"];
Node_39 [shape=record,label="{39\:\ 0x0167|0x0167: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle \l0x0169: NEG  (r5 I:float) = (r1 I:float) \l0x016a: ARITH  (r5 I:float) = (r5 I:float) \/ (r4 I:float) \l0x016b: CAST  (r5 I:double) = (double) (r5 I:float) \l0x016c: CONST  (r7 I:?[long, double]) = (0 ?[long, double]) \l0x016e: ARITH  (r1 I:float) = (r1 I:float) \/ (r4 I:float) \l0x016f: CAST  (r9 I:double) = (double) (r1 I:float) \l0x0170: CAST  (r1 I:double) = (double) (r2 I:float) \l0x0171: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0172: MOVE  (r13 I:?[long, double]) = (r5 I:?[long, double]) \l0x0173: MOVE  (r15 I:?[long, double]) = (r7 I:?[long, double]) \l0x0174: MOVE  (r17 I:?[long, double]) = (r9 I:?[long, double]) \l0x0176: MOVE  (r19 I:?[long, double]) = (r1 I:?[long, double]) \l0x0178: INVOKE  \l  (r12 I:org.mapsforge.core.model.Rectangle)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT \l0x017b: IPUT  \l  (r3 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l}"];
Node_40 [shape=record,label="{40\:\ 0x017e|0x017e: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle \l0x0180: NEG  (r5 I:float) = (r1 I:float) \l0x0181: ARITH  (r5 I:float) = (r5 I:float) \/ (r4 I:float) \l0x0182: CAST  (r5 I:double) = (double) (r5 I:float) \l0x0183: NEG  (r7 I:float) = (r2 I:float) \l0x0184: ARITH  (r7 I:float) = (r7 I:float) \/ (r4 I:float) \l0x0185: CAST  (r7 I:double) = (double) (r7 I:float) \l0x0186: ARITH  (r1 I:float) = (r1 I:float) \/ (r4 I:float) \l0x0187: CAST  (r9 I:double) = (double) (r1 I:float) \l0x0188: ARITH  (r2 I:float) = (r2 I:float) \/ (r4 I:float) \l0x0189: CAST  (r1 I:double) = (double) (r2 I:float) \l0x018a: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x018b: MOVE  (r13 I:?[long, double]) = (r5 I:?[long, double]) \l0x018c: MOVE  (r15 I:?[long, double]) = (r7 I:?[long, double]) \l0x018d: MOVE  (r17 I:?[long, double]) = (r9 I:?[long, double]) \l0x018f: MOVE  (r19 I:?[long, double]) = (r1 I:?[long, double]) \l0x0191: INVOKE  \l  (r12 I:org.mapsforge.core.model.Rectangle)\l  (r13 I:double)\l  (r15 I:double)\l  (r17 I:double)\l  (r19 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT \l0x0194: IPUT  \l  (r3 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.map.android.graphics.AndroidPointTextContainer)\l org.mapsforge.map.android.graphics.AndroidPointTextContainer.boundary org.mapsforge.core.model.Rectangle \l}"];
Node_41 [shape=record,label="{41\:\ 0x0196|0x0196: RETURN   \l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.android.graphics.AndroidPointTextContainer.\<init\>((r11 'this' I:org.mapsforge.map.android.graphics.AndroidPointTextContainer A[IMMUTABLE_TYPE, THIS]), (r12 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:org.mapsforge.core.graphics.Display A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:org.mapsforge.core.mapelements.SymbolContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:org.mapsforge.core.graphics.Position A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_20;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_20[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_30 -> Node_33;
Node_30 -> Node_34;
Node_30 -> Node_35;
Node_30 -> Node_36;
Node_30 -> Node_37;
Node_30 -> Node_38;
Node_30 -> Node_39;
Node_30 -> Node_40;
Node_30 -> Node_41;
Node_32 -> Node_41;
Node_33 -> Node_41;
Node_34 -> Node_41;
Node_35 -> Node_41;
Node_36 -> Node_41;
Node_37 -> Node_41;
Node_38 -> Node_41;
Node_39 -> Node_41;
Node_40 -> Node_41;
}

