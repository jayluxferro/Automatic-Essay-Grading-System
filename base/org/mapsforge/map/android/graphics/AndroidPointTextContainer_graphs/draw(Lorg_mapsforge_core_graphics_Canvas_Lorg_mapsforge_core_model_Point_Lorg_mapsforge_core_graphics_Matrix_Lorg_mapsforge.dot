digraph "CFG fororg.mapsforge.map.android.graphics.AndroidPointTextContainer.draw(Lorg\/mapsforge\/core\/graphics\/Canvas;Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/graphics\/Matrix;Lorg\/mapsforge\/core\/graphics\/Filter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5.isVisible != false) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|android.graphics.Canvas r6 = org.mapsforge.map.android.graphics.AndroidGraphicFactory.getCanvas(r6)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r5.textWidth \<= r5.maxTextWidth) goto L_0x0092\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|r6.save()\lr6.translate((float) ((r5.f265xy.f266x \- r7.f266x) + r5.boundary.left), (float) ((r5.f265xy.f267y \- r7.f267y) + r5.boundary.top))\l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|if (r5.backLayout == null) goto L_0x0060\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|int r7 = r5.backLayout.getPaint().getColor()\l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|if (r9 == org.mapsforge.core.graphics.Filter.NONE) goto L_0x004e\l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|r5.backLayout.getPaint().setColor(org.mapsforge.core.graphics.GraphicUtils.filterColor(r7, r9))\l}"];
Node_10 [shape=record,label="{10\:\ 0x004e|r5.backLayout.draw(r6)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0055|if (r9 == org.mapsforge.core.graphics.Filter.NONE) goto L_0x0060\l}"];
Node_12 [shape=record,label="{12\:\ 0x0057|r5.backLayout.getPaint().setColor(r7)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0060|int r7 = r5.frontLayout.getPaint().getColor()\l}"];
Node_14 [shape=record,label="{14\:\ 0x006c|if (r9 == org.mapsforge.core.graphics.Filter.NONE) goto L_0x007b\l}"];
Node_15 [shape=record,label="{15\:\ 0x006e|r5.frontLayout.getPaint().setColor(org.mapsforge.core.graphics.GraphicUtils.filterColor(r7, r9))\l}"];
Node_16 [shape=record,label="{16\:\ 0x007b|r5.frontLayout.draw(r6)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0082|if (r9 == org.mapsforge.core.graphics.Filter.NONE) goto L_0x008d\l}"];
Node_18 [shape=record,label="{18\:\ 0x0084|r5.frontLayout.getPaint().setColor(r7)\l}"];
Node_19 [shape=record,label="{19\:\ 0x008d|r6.restore()\l}"];
Node_20 [shape=record,label="{20\:\ 0x0092|r8 = 0.0f\l}"];
Node_21 [shape=record,label="{21\:\ 0x009d|switch(r5.position) \{\l    case org.mapsforge.core.graphics.Position.CENTER :org.mapsforge.core.graphics.Position: goto L_0x00a5;\l    case org.mapsforge.core.graphics.Position.BELOW :org.mapsforge.core.graphics.Position: goto L_0x00a1;\l    case org.mapsforge.core.graphics.Position.BELOW_LEFT :org.mapsforge.core.graphics.Position: goto L_0x00a1;\l    case org.mapsforge.core.graphics.Position.BELOW_RIGHT :org.mapsforge.core.graphics.Position: goto L_0x00a1;\l    case org.mapsforge.core.graphics.Position.ABOVE :org.mapsforge.core.graphics.Position: goto L_0x00a0;\l    case org.mapsforge.core.graphics.Position.ABOVE_LEFT :org.mapsforge.core.graphics.Position: goto L_0x00a0;\l    case org.mapsforge.core.graphics.Position.ABOVE_RIGHT :org.mapsforge.core.graphics.Position: goto L_0x00a0;\l    case org.mapsforge.core.graphics.Position.LEFT :org.mapsforge.core.graphics.Position: goto L_0x00a5;\l    case org.mapsforge.core.graphics.Position.RIGHT :org.mapsforge.core.graphics.Position: goto L_0x00a5;\l    default: goto L_0x00a0;\l\}\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a1|float r8 = (float) r5.textHeight\l}"];
Node_23 [shape=record,label="{23\:\ 0x00a5|float r8 = ((float) r5.textHeight) \/ 2.0f\l}"];
Node_24 [shape=record,label="{24\:\ 0x00ab|PHI: r8 \l  PHI: (r8v4 float) = (r8v3 float), (r8v12 float), (r8v14 float) binds: [B:21:0x009d, B:23:0x00a5, B:22:0x00a1] A[DONT_GENERATE, DONT_INLINE]\l|float r0 = (float) (r5.f265xy.f266x \- r7.f266x)\lfloat r7 = ((float) (r5.f265xy.f267y \- r7.f267y)) + r8\l}"];
Node_25 [shape=record,label="{25\:\ 0x00be|if (r5.paintBack == null) goto L_0x00e7\l}"];
Node_26 [shape=record,label="{26\:\ 0x00c0|int r8 = r5.paintBack.getColor()\l}"];
Node_27 [shape=record,label="{27\:\ 0x00c8|if (r9 == org.mapsforge.core.graphics.Filter.NONE) goto L_0x00d3\l}"];
Node_28 [shape=record,label="{28\:\ 0x00ca|r5.paintBack.setColor(org.mapsforge.core.graphics.GraphicUtils.filterColor(r8, r9))\l}"];
Node_29 [shape=record,label="{29\:\ 0x00d3|r6.drawText(r5.text, r0, r7, org.mapsforge.map.android.graphics.AndroidGraphicFactory.getPaint(r5.paintBack))\l}"];
Node_30 [shape=record,label="{30\:\ 0x00e0|if (r9 == org.mapsforge.core.graphics.Filter.NONE) goto L_0x00e7\l}"];
Node_31 [shape=record,label="{31\:\ 0x00e2|r5.paintBack.setColor(r8)\l}"];
Node_32 [shape=record,label="{32\:\ 0x00e7|int r8 = r5.paintFront.getColor()\l}"];
Node_33 [shape=record,label="{33\:\ 0x00ef|if (r9 == org.mapsforge.core.graphics.Filter.NONE) goto L_0x00fa\l}"];
Node_34 [shape=record,label="{34\:\ 0x00f1|r5.paintFront.setColor(org.mapsforge.core.graphics.GraphicUtils.filterColor(r8, r9))\l}"];
Node_35 [shape=record,label="{35\:\ 0x00fa|r6.drawText(r5.text, r0, r7, org.mapsforge.map.android.graphics.AndroidGraphicFactory.getPaint(r5.paintFront))\l}"];
Node_36 [shape=record,label="{36\:\ 0x0107|if (r9 == org.mapsforge.core.graphics.Filter.NONE) goto L_?\l}"];
Node_37 [shape=record,label="{37\:\ 0x0109|r5.paintFront.setColor(r8)\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.graphics.AndroidPointTextContainer.draw((r5v0 'this' org.mapsforge.map.android.graphics.AndroidPointTextContainer A[IMMUTABLE_TYPE, THIS]), (r6v0 org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 org.mapsforge.core.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 org.mapsforge.core.graphics.Filter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_20;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_39;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_21 -> Node_24;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
}

