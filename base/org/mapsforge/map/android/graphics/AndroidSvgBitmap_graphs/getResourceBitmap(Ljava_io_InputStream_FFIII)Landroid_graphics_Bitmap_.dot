digraph "CFG fororg.mapsforge.map.android.graphics.AndroidSvgBitmap.getResourceBitmap(Ljava\/io\/InputStream;FFIII)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ Exception \-\> 0x007d \}\lSplitter:B:0:0x0000\l|android.graphics.Picture r4 = com.caverock.androidsvg.SVG.getFromInputStream(r4).renderToPicture()     \/\/ Catch:\{ Exception \-\> 0x007d \}\ldouble r0 = ((double) r5) \/ java.lang.Math.sqrt((double) (((float) (r4.getHeight() * r4.getWidth())) \/ r6))     \/\/ Catch:\{ Exception \-\> 0x007d \}\lfloat r5 = (float) (((double) r4.getWidth()) * r0)     \/\/ Catch:\{ Exception \-\> 0x007d \}\lfloat r6 = (float) (((double) r4.getHeight()) * r0)     \/\/ Catch:\{ Exception \-\> 0x007d \}\lfloat r1 = (((float) r4.getWidth()) * 1.0f) \/ ((float) r4.getHeight())     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x003a|Catch:\{ Exception \-\> 0x007d \}\l|if (r7 == 0) goto L_0x0041     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x003c|Catch:\{ Exception \-\> 0x007d \}\l|if (r8 == 0) goto L_0x0041     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x003e|Catch:\{ Exception \-\> 0x007d \}\l|float r5 = (float) r7     \/\/ Catch:\{ Exception \-\> 0x007d \}\lfloat r6 = (float) r8     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0041|Catch:\{ Exception \-\> 0x007d \}\l|if (r7 != 0) goto L_0x0049     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0043|Catch:\{ Exception \-\> 0x007d \}\l|if (r8 == 0) goto L_0x0049     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|Catch:\{ Exception \-\> 0x007d \}\l|float r6 = (float) r8     \/\/ Catch:\{ Exception \-\> 0x007d \}\lfloat r5 = r6 * r1     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0049|Catch:\{ Exception \-\> 0x007d \}\l|if (r7 == 0) goto L_0x0050     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|Catch:\{ Exception \-\> 0x007d \}\l|if (r8 != 0) goto L_0x0050     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|Catch:\{ Exception \-\> 0x007d \}\l|float r5 = (float) r7     \/\/ Catch:\{ Exception \-\> 0x007d \}\lfloat r6 = r5 \/ r1     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|Catch:\{ Exception \-\> 0x007d \}\lPHI: r5 r6 \l  PHI: (r5v12 float) = (r5v11 float), (r5v11 float), (r5v15 float), (r5v16 float), (r5v17 float) binds: [B:8:0x0049, B:9:0x004b, B:10:0x004d, B:7:0x0045, B:4:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v3 float) = (r6v2 float), (r6v2 float), (r6v6 float), (r6v7 float), (r6v8 float) binds: [B:8:0x0049, B:9:0x004b, B:10:0x004d, B:7:0x0045, B:4:0x003e] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|Catch:\{ Exception \-\> 0x007d \}\l|if (r9 == 100) goto L_0x005c     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|Catch:\{ Exception \-\> 0x007d \}\l|float r7 = ((float) r9) \/ 100.0f     \/\/ Catch:\{ Exception \-\> 0x007d \}\lfloat r5 = r5 * r7     \/\/ Catch:\{ Exception \-\> 0x007d \}\lfloat r6 = r6 * r7     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x005c|Catch:\{ Exception \-\> 0x007d \}\lPHI: r5 r6 \l  PHI: (r5v13 float) = (r5v12 float), (r5v14 float) binds: [B:12:0x0052, B:13:0x0054] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v4 float) = (r6v3 float), (r6v5 float) binds: [B:12:0x0052, B:13:0x0054] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.Bitmap r7 = android.graphics.Bitmap.createBitmap((int) java.lang.Math.ceil((double) r5), (int) java.lang.Math.ceil((double) r6), org.mapsforge.map.android.graphics.AndroidGraphicFactory.TRANSPARENT_BITMAP)     \/\/ Catch:\{ Exception \-\> 0x007d \}\lnew android.graphics.Canvas(r7).drawPicture(r4, new android.graphics.RectF(0.0f, 0.0f, r5, r6))     \/\/ Catch:\{ Exception \-\> 0x007d \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x007c|RETURN\l|return r7\l}"];
Node_16 [shape=record,label="{16\:\ 0x007d|ExcHandler: Exception (r4v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.Exception r4 = move\-exception\l}"];
Node_17 [shape=record,label="{17\:\ 0x007e}"];
Node_18 [shape=record,label="{18\:\ 0x0083|throw new java.io.IOException(r4)\l}"];
MethodNode[shape=record,label="{public static android.graphics.Bitmap org.mapsforge.map.android.graphics.AndroidSvgBitmap.getResourceBitmap((r4v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_16;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_11;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

