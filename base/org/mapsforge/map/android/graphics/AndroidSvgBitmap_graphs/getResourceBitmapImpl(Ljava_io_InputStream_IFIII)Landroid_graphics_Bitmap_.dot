digraph "CFG fororg.mapsforge.map.android.graphics.AndroidSvgBitmap.getResourceBitmapImpl(Ljava\/io\/InputStream;IFIII)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Map r0 = RESOURCE_BITMAPS\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|android.util.Pair r1 = (android.util.Pair) RESOURCE_BITMAPS.get(java.lang.Integer.valueOf(r10))\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r1 == null) goto L_0x0035\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|android.util.Pair r9 = new android.util.Pair(r1.first, java.lang.Integer.valueOf(((java.lang.Integer) r1.second).intValue() + 1))     \/\/ Catch:\{  \}\lRESOURCE_BITMAPS.put(java.lang.Integer.valueOf(r10), r9)\landroid.graphics.Bitmap r9 = (android.graphics.Bitmap) r1.first\l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|monitor\-exit(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|RETURN\l|return r9\l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|android.graphics.Bitmap r1 = org.mapsforge.map.android.graphics.AndroidSvgBitmapStore.get(r10)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|if (r1 != null) goto L_0x0049\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|r3 = r9\lr4 = r11\landroid.graphics.Bitmap r1 = getResourceBitmap(r3, r4, DEFAULT_SIZE, r12, r13, r14)\lorg.mapsforge.map.android.graphics.AndroidSvgBitmapStore.put(r10, r1)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|PHI: r1 \l  PHI: (r1v4 android.graphics.Bitmap) = (r1v3 android.graphics.Bitmap), (r1v5 android.graphics.Bitmap) binds: [B:9:0x0039, B:10:0x003b] A[DONT_GENERATE, DONT_INLINE]\l|android.util.Pair r9 = new android.util.Pair(r1, 1)     \/\/ Catch:\{  \}\lRESOURCE_BITMAPS.put(java.lang.Integer.valueOf(r10), r9)\l}"];
Node_12 [shape=record,label="{12\:\ 0x005b|monitor\-exit(r0)\l}"];
Node_13 [shape=record,label="{13\:\ 0x005c|RETURN\l|return r1\l}"];
Node_14 [shape=record,label="{14\:\ 0x005d|REMOVE\l|java.lang.Throwable r9 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x005e|REMOVE\l}"];
Node_16 [shape=record,label="{16\:\ 0x005f|REMOVE\l|throw r9\l}"];
MethodNode[shape=record,label="{private static android.graphics.Bitmap org.mapsforge.map.android.graphics.AndroidSvgBitmap.getResourceBitmapImpl((r9v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

