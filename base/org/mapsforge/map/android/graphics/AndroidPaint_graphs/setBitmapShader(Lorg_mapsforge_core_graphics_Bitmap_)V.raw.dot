digraph "CFG fororg.mapsforge.map.android.graphics.AndroidPaint.setBitmapShader(Lorg\/mapsforge\/core\/graphics\/Bitmap;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN   \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r0 I:android.graphics.Bitmap) = (r5 I:org.mapsforge.core.graphics.Bitmap) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getBitmap(org.mapsforge.core.graphics.Bitmap):android.graphics.Bitmap type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: INVOKE  (r1 I:int) = (r5 I:org.mapsforge.core.graphics.Bitmap) org.mapsforge.core.graphics.Bitmap.getWidth():int type: INTERFACE \l0x000e: IPUT  \l  (r1 I:int)\l  (r4 I:org.mapsforge.map.android.graphics.AndroidPaint)\l org.mapsforge.map.android.graphics.AndroidPaint.shaderWidth int \l0x0010: INVOKE  (r5 I:int) = (r5 I:org.mapsforge.core.graphics.Bitmap) org.mapsforge.core.graphics.Bitmap.getHeight():int type: INTERFACE \l0x0014: IPUT  \l  (r5 I:int)\l  (r4 I:org.mapsforge.map.android.graphics.AndroidPaint)\l org.mapsforge.map.android.graphics.AndroidPaint.shaderHeight int \l0x0016: IGET  (r5 I:android.graphics.Paint) = (r4 I:org.mapsforge.map.android.graphics.AndroidPaint) org.mapsforge.map.android.graphics.AndroidPaint.paint android.graphics.Paint \l0x0018: SGET  (r1 I:org.mapsforge.core.graphics.Color) =  org.mapsforge.core.graphics.Color.WHITE org.mapsforge.core.graphics.Color \l0x001a: INVOKE  (r1 I:int) = (r1 I:org.mapsforge.core.graphics.Color) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getColor(org.mapsforge.core.graphics.Color):int type: STATIC \l0x001e: INVOKE  (r5 I:android.graphics.Paint), (r1 I:int) android.graphics.Paint.setColor(int):void type: VIRTUAL \l0x0021: IGET  (r5 I:android.graphics.Paint) = (r4 I:org.mapsforge.map.android.graphics.AndroidPaint) org.mapsforge.map.android.graphics.AndroidPaint.paint android.graphics.Paint \l0x0023: NEW_INSTANCE  (r1 I:android.graphics.BitmapShader) =  android.graphics.BitmapShader \l0x0025: SGET  (r2 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.REPEAT android.graphics.Shader$TileMode \l0x0027: SGET  (r3 I:android.graphics.Shader$TileMode) =  android.graphics.Shader.TileMode.REPEAT android.graphics.Shader$TileMode \l0x0029: INVOKE  \l  (r1 I:android.graphics.BitmapShader)\l  (r0 I:android.graphics.Bitmap)\l  (r2 I:android.graphics.Shader$TileMode)\l  (r3 I:android.graphics.Shader$TileMode)\l android.graphics.BitmapShader.\<init\>(android.graphics.Bitmap, android.graphics.Shader$TileMode, android.graphics.Shader$TileMode):void type: DIRECT \l0x002c: INVOKE  \l  (r5 I:android.graphics.Paint)\l  (r1 I:android.graphics.Shader)\l android.graphics.Paint.setShader(android.graphics.Shader):android.graphics.Shader type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x002f|0x002f: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.graphics.AndroidPaint.setBitmapShader((r4 'this' I:org.mapsforge.map.android.graphics.AndroidPaint A[IMMUTABLE_TYPE, THIS]), (r5 I:org.mapsforge.core.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=11\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
}

