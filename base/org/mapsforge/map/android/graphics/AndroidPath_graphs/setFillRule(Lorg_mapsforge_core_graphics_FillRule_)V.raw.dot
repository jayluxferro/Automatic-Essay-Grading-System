digraph "CFG fororg.mapsforge.map.android.graphics.AndroidPath.setFillRule(Lorg\/mapsforge\/core\/graphics\/FillRule;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.Path) = (r1 I:org.mapsforge.map.android.graphics.AndroidPath) org.mapsforge.map.android.graphics.AndroidPath.path android.graphics.Path \l0x0002: INVOKE  (r2 I:android.graphics.Path$FillType) = (r2 I:org.mapsforge.core.graphics.FillRule) org.mapsforge.map.android.graphics.AndroidPath.getWindingRule(org.mapsforge.core.graphics.FillRule):android.graphics.Path$FillType type: STATIC \l0x0006: INVOKE  \l  (r0 I:android.graphics.Path)\l  (r2 I:android.graphics.Path$FillType)\l android.graphics.Path.setFillType(android.graphics.Path$FillType):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.graphics.AndroidPath.setFillRule((r1 'this' I:org.mapsforge.map.android.graphics.AndroidPath A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.core.graphics.FillRule A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

