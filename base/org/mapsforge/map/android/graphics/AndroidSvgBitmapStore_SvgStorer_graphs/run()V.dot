digraph "CFG fororg.mapsforge.map.android.graphics.AndroidSvgBitmapStore.SvgStorer.run()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = org.mapsforge.map.android.graphics.AndroidSvgBitmapStore.access$000(r5.hash)\lr1 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IllegalStateException \-\> 0x0056, FileNotFoundException \-\> 0x003d \}\lSplitter:B:1:0x0007\l|java.io.FileOutputStream r2 = org.mapsforge.map.android.graphics.AndroidGraphicFactory.INSTANCE.openFileOutput(r0, 0)     \/\/ Catch:\{ IllegalStateException \-\> 0x0056, FileNotFoundException \-\> 0x003d \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|SYNTHETIC\lSplitter:B:3:0x000e\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ IllegalStateException \-\> 0x0039, FileNotFoundException \-\> 0x0037, all \-\> 0x0034 \}\lSplitter:B:3:0x000e\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|Catch:\{ IllegalStateException \-\> 0x0039, FileNotFoundException \-\> 0x0037, all \-\> 0x0034 \}\l|if (r5.bitmap.compress(android.graphics.Bitmap.CompressFormat.PNG, 0, r2) != false) goto L_0x0030     \/\/ Catch:\{ IllegalStateException \-\> 0x0039, FileNotFoundException \-\> 0x0037, all \-\> 0x0034 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|Catch:\{ IllegalStateException \-\> 0x0039, FileNotFoundException \-\> 0x0037, all \-\> 0x0034 \}\l|java.util.logging.Logger r1 = org.mapsforge.map.android.graphics.AndroidSvgBitmapStore.access$100()     \/\/ Catch:\{ IllegalStateException \-\> 0x0039, FileNotFoundException \-\> 0x0037, all \-\> 0x0034 \}\ljava.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ IllegalStateException \-\> 0x0039, FileNotFoundException \-\> 0x0037, all \-\> 0x0034 \}\lr3.append(\"SVG Failed to write svg bitmap \")     \/\/ Catch:\{ IllegalStateException \-\> 0x0039, FileNotFoundException \-\> 0x0037, all \-\> 0x0034 \}\lr3.append(r0)     \/\/ Catch:\{ IllegalStateException \-\> 0x0039, FileNotFoundException \-\> 0x0037, all \-\> 0x0034 \}\lr1.warning(r3.toString())     \/\/ Catch:\{ IllegalStateException \-\> 0x0039, FileNotFoundException \-\> 0x0037, all \-\> 0x0034 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|org.mapsforge.core.util.IOUtils.closeQuietly(r2)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:3:0x000e\l|java.lang.Throwable r0 = th\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|r1 = r2\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|r1 = r2\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lExcHandler: FileNotFoundException (unused java.io.FileNotFoundException)\lSplitter:B:3:0x000e\l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|r1 = r2\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lExcHandler: IllegalStateException (unused java.lang.IllegalStateException)\lSplitter:B:3:0x000e\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:15:0x003d\l|java.lang.Throwable r0 = th\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|SYNTHETIC\lPHI: r1 \l  PHI: (r1v4 java.io.FileOutputStream) = (r1v0 java.io.FileOutputStream), (r1v6 java.io.FileOutputStream) binds: [B:1:0x0007, B:10:0x0037] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:15:0x003d\l}"];
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ all \-\> 0x003b \}\lSplitter:B:15:0x003d\l|java.util.logging.Logger r2 = org.mapsforge.map.android.graphics.AndroidSvgBitmapStore.access$100()     \/\/ Catch:\{ all \-\> 0x003b \}\ljava.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x003b \}\lr3.append(\"SVG Failed to create file for svg bitmap \")     \/\/ Catch:\{ all \-\> 0x003b \}\lr3.append(r0)     \/\/ Catch:\{ all \-\> 0x003b \}\lr2.warning(r3.toString())     \/\/ Catch:\{ all \-\> 0x003b \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|Catch:\{ all \-\> 0x003b \}\lPHI: r1 \l  PHI: (r1v3 java.io.FileOutputStream) = (r1v0 java.io.FileOutputStream), (r1v5 java.io.FileOutputStream) binds: [B:18:?, B:12:0x0039] A[DONT_GENERATE, DONT_INLINE]\l|java.util.logging.Logger r2 = org.mapsforge.map.android.graphics.AndroidSvgBitmapStore.access$100()     \/\/ Catch:\{ all \-\> 0x003b \}\ljava.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x003b \}\lr3.append(\"SVG Failed to stream bitmap to file \")     \/\/ Catch:\{ all \-\> 0x003b \}\lr3.append(r0)     \/\/ Catch:\{ all \-\> 0x003b \}\lr2.warning(r3.toString())     \/\/ Catch:\{ all \-\> 0x003b \}\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lExcHandler: IllegalStateException (unused java.lang.IllegalStateException)\lSplitter:B:1:0x0007\l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|PHI: r1 \l  PHI: (r1v2 java.io.FileOutputStream) = (r1v3 java.io.FileOutputStream), (r1v4 java.io.FileOutputStream) binds: [B:17:0x0056, B:16:?] A[DONT_GENERATE, DONT_INLINE]\l|org.mapsforge.core.util.IOUtils.closeQuietly(r1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0072|PHI: r0 r1 \l  PHI: (r0v2 'th' java.lang.Throwable) = (r0v5 'th' java.lang.Throwable), (r0v6 'th' java.lang.Throwable) binds: [B:14:0x003b, B:9:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 java.io.FileOutputStream) = (r1v4 java.io.FileOutputStream), (r1v7 java.io.FileOutputStream) binds: [B:14:0x003b, B:9:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|org.mapsforge.core.util.IOUtils.closeQuietly(r1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0075|throw r0\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.graphics.AndroidSvgBitmapStore.SvgStorer.run((r5v0 'this' org.mapsforge.map.android.graphics.AndroidSvgBitmapStore$SvgStorer A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18;
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_13;
Node_3 -> Node_11;
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_20;
Node_10 -> Node_15;
Node_11 -> Node_10;
Node_12 -> Node_17;
Node_13 -> Node_12;
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_15 -> Node_14;
Node_16 -> Node_19;
Node_17 -> Node_19;
Node_18 -> Node_17;
Node_19 -> Node_22;
Node_20 -> Node_21;
}

