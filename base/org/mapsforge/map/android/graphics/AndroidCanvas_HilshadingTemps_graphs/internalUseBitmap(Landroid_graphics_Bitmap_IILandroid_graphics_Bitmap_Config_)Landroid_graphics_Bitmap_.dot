digraph "CFG fororg.mapsforge.map.android.graphics.AndroidCanvas.HilshadingTemps.internalUseBitmap(Landroid\/graphics\/Bitmap;IILandroid\/graphics\/Bitmap$Config;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 != null) goto L_0x000c\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|android.graphics.Bitmap r2 = android.graphics.Bitmap.createBitmap(r3, r4, r5)\lr1.tmpCanvas.setBitmap(r2)\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c}"];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r2.getWidth() \< r3) goto L_0x0035\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012}"];
Node_5 [shape=record,label="{5\:\ 0x0016|if (r2.getHeight() \< r4) goto L_0x0035\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018}"];
Node_7 [shape=record,label="{7\:\ 0x0020|if (r2.getConfig().equals(r5) != false) goto L_0x0023\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|r1.tmpCanvas.setBitmap(r2)\lr1.tmpCanvas.drawColor(android.graphics.Color.argb(0, 0, 0, 0), android.graphics.PorterDuff.Mode.SRC)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0035|r2.recycle()\landroid.graphics.Bitmap r2 = android.graphics.Bitmap.createBitmap(r3, r4, r5)\lr1.tmpCanvas.setBitmap(r2)\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return r2\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return r2\l}"];
MethodNode[shape=record,label="{private android.graphics.Bitmap org.mapsforge.map.android.graphics.AndroidCanvas.HilshadingTemps.internalUseBitmap((r1v0 'this' org.mapsforge.map.android.graphics.AndroidCanvas$HilshadingTemps A[IMMUTABLE_TYPE, THIS]), (r2v0 android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.graphics.Bitmap$Config A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
}

