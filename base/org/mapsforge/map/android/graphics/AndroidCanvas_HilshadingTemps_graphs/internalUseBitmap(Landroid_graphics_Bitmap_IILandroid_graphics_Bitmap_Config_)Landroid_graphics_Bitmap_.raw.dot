digraph "CFG fororg.mapsforge.map.android.graphics.AndroidCanvas.HilshadingTemps.internalUseBitmap(Landroid\/graphics\/Bitmap;IILandroid\/graphics\/Bitmap$Config;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000c \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r2 I:android.graphics.Bitmap) = \l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x0006: IGET  (r3 I:android.graphics.Canvas) = \l  (r1 I:org.mapsforge.map.android.graphics.AndroidCanvas$HilshadingTemps)\l org.mapsforge.map.android.graphics.AndroidCanvas.HilshadingTemps.tmpCanvas android.graphics.Canvas \l0x0008: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r2 I:android.graphics.Bitmap)\l android.graphics.Canvas.setBitmap(android.graphics.Bitmap):void type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r0 I:int) = (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r0 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:10:0x0035 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: INVOKE  (r0 I:int) = (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:10:0x0035 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: INVOKE  (r0 I:android.graphics.Bitmap$Config) = (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.getConfig():android.graphics.Bitmap$Config type: VIRTUAL \l0x001c: INVOKE  (r0 I:boolean) = \l  (r0 I:android.graphics.Bitmap$Config)\l  (r5 I:java.lang.Object)\l android.graphics.Bitmap.Config.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0023 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|0x0023: IGET  (r3 I:android.graphics.Canvas) = \l  (r1 I:org.mapsforge.map.android.graphics.AndroidCanvas$HilshadingTemps)\l org.mapsforge.map.android.graphics.AndroidCanvas.HilshadingTemps.tmpCanvas android.graphics.Canvas \l0x0025: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r2 I:android.graphics.Bitmap)\l android.graphics.Canvas.setBitmap(android.graphics.Bitmap):void type: VIRTUAL \l0x0028: IGET  (r3 I:android.graphics.Canvas) = \l  (r1 I:org.mapsforge.map.android.graphics.AndroidCanvas$HilshadingTemps)\l org.mapsforge.map.android.graphics.AndroidCanvas.HilshadingTemps.tmpCanvas android.graphics.Canvas \l0x002a: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: INVOKE  (r4 I:int) = (r4 I:int), (r4 I:int), (r4 I:int), (r4 I:int) android.graphics.Color.argb(int, int, int, int):int type: STATIC \l0x002f: SGET  (r5 I:android.graphics.PorterDuff$Mode) =  android.graphics.PorterDuff.Mode.SRC android.graphics.PorterDuff$Mode \l0x0031: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r4 I:int)\l  (r5 I:android.graphics.PorterDuff$Mode)\l android.graphics.Canvas.drawColor(int, android.graphics.PorterDuff$Mode):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: INVOKE  (r2 I:android.graphics.Bitmap) android.graphics.Bitmap.recycle():void type: VIRTUAL \l0x0038: INVOKE  (r2 I:android.graphics.Bitmap) = \l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x003c: IGET  (r3 I:android.graphics.Canvas) = \l  (r1 I:org.mapsforge.map.android.graphics.AndroidCanvas$HilshadingTemps)\l org.mapsforge.map.android.graphics.AndroidCanvas.HilshadingTemps.tmpCanvas android.graphics.Canvas \l0x003e: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r2 I:android.graphics.Bitmap)\l android.graphics.Canvas.setBitmap(android.graphics.Bitmap):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0041|0x0041: RETURN  (r2 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{private android.graphics.Bitmap org.mapsforge.map.android.graphics.AndroidCanvas.HilshadingTemps.internalUseBitmap((r1 'this' I:org.mapsforge.map.android.graphics.AndroidCanvas$HilshadingTemps A[IMMUTABLE_TYPE, THIS]), (r2 I:android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Bitmap$Config A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
}

