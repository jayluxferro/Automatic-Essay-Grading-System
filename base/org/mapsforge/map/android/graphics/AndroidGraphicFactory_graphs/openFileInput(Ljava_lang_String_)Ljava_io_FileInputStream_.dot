digraph "CFG fororg.mapsforge.map.android.graphics.AndroidGraphicFactory.openFileInput(Ljava\/lang\/String;)Ljava\/io\/FileInputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.svgCacheDir == null) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0010|RETURN\l|return new java.io.FileInputStream(new java.io.File(r3.svgCacheDir, r4))\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011}"];
Node_5 [shape=record,label="{5\:\ 0x0017|RETURN\l|return r3.application.openFileInput(r4)\l}"];
MethodNode[shape=record,label="{public java.io.FileInputStream org.mapsforge.map.android.graphics.AndroidGraphicFactory.openFileInput((r3v0 'this' org.mapsforge.map.android.graphics.AndroidGraphicFactory A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.FileNotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

