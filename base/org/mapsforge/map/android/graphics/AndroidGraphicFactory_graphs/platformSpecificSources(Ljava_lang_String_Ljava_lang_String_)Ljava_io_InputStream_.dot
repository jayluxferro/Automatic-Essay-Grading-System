digraph "CFG fororg.mapsforge.map.android.graphics.AndroidGraphicFactory.platformSpecificSources(Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (android.text.TextUtils.isEmpty(r3) == false) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|java.lang.String r3 = \"\"\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|PHI: r3 \l  PHI: (r3v1 java.lang.String) = (r3v0 java.lang.String), (r3v4 java.lang.String) binds: [B:1:0x0009, B:2:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|r0.append(r3)\lr0.append(r4)\ljava.lang.String r3 = r0.toString()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|SYNTHETIC\lSplitter:B:4:0x0017\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ IOException \-\> 0x0022 \}\lSplitter:B:4:0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|RETURN\l|return r2.application.getAssets().open(r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"invalid resource: \")\lr0.append(r3)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:4:0x0017\l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|throw new java.io.FileNotFoundException(r0.toString())\l}"];
MethodNode[shape=record,label="{public java.io.InputStream org.mapsforge.map.android.graphics.AndroidGraphicFactory.platformSpecificSources((r2v0 'this' org.mapsforge.map.android.graphics.AndroidGraphicFactory A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_7 -> Node_9;
Node_8 -> Node_7;
}

