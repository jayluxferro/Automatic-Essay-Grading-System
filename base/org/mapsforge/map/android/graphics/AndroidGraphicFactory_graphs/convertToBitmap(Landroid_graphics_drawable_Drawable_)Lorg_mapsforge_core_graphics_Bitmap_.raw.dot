digraph "CFG fororg.mapsforge.map.android.graphics.AndroidGraphicFactory.convertToBitmap(Landroid\/graphics\/drawable\/Drawable;)Lorg\/mapsforge\/core\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:org.mapsforge.map.android.graphics.AndroidBitmap) =  org.mapsforge.map.android.graphics.AndroidBitmap \l0x0002: INVOKE  (r1 I:android.graphics.Bitmap) = (r1 I:android.graphics.drawable.Drawable) org.mapsforge.map.android.graphics.AndroidGraphicFactory.convertToAndroidBitmap(android.graphics.drawable.Drawable):android.graphics.Bitmap type: STATIC \l0x0006: INVOKE  \l  (r0 I:org.mapsforge.map.android.graphics.AndroidBitmap)\l  (r1 I:android.graphics.Bitmap)\l org.mapsforge.map.android.graphics.AndroidBitmap.\<init\>(android.graphics.Bitmap):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: RETURN  (r0 I:org.mapsforge.core.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{public static org.mapsforge.core.graphics.Bitmap org.mapsforge.map.android.graphics.AndroidGraphicFactory.convertToBitmap((r1 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

