digraph "CFG fororg.mapsforge.map.android.graphics.AndroidGraphicFactory.convertToAndroidBitmap(Landroid\/graphics\/drawable\/Drawable;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r6 I:?[OBJECT, ARRAY]) android.graphics.drawable.BitmapDrawable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CHECK_CAST  (r6 I:android.graphics.drawable.BitmapDrawable) = (android.graphics.drawable.BitmapDrawable) (r6 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  (r6 I:android.graphics.Bitmap) = (r6 I:android.graphics.drawable.BitmapDrawable) android.graphics.drawable.BitmapDrawable.getBitmap():android.graphics.Bitmap type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r0 I:int) = (r6 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicWidth():int type: VIRTUAL \l0x000f: INVOKE  (r1 I:int) = (r6 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicHeight():int type: VIRTUAL \l0x0013: SGET  (r2 I:android.graphics.Bitmap$Config) =  org.mapsforge.map.android.graphics.AndroidGraphicFactory.TRANSPARENT_BITMAP android.graphics.Bitmap$Config \l0x0015: INVOKE  (r2 I:android.graphics.Bitmap) = \l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x0019: NEW_INSTANCE  (r3 I:android.graphics.Canvas) =  android.graphics.Canvas \l0x001b: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r2 I:android.graphics.Bitmap)\l android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void type: DIRECT \l0x001e: INVOKE  (r4 I:android.graphics.Rect) = (r6 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getBounds():android.graphics.Rect type: VIRTUAL \l0x0022: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: INVOKE  \l  (r6 I:android.graphics.drawable.Drawable)\l  (r5 I:int)\l  (r5 I:int)\l  (r0 I:int)\l  (r1 I:int)\l android.graphics.drawable.Drawable.setBounds(int, int, int, int):void type: VIRTUAL \l0x0026: INVOKE  \l  (r6 I:android.graphics.drawable.Drawable)\l  (r3 I:android.graphics.Canvas)\l android.graphics.drawable.Drawable.draw(android.graphics.Canvas):void type: VIRTUAL \l0x0029: INVOKE  \l  (r6 I:android.graphics.drawable.Drawable)\l  (r4 I:android.graphics.Rect)\l android.graphics.drawable.Drawable.setBounds(android.graphics.Rect):void type: VIRTUAL \l0x002c: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|0x002d: RETURN  (r6 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{public static android.graphics.Bitmap org.mapsforge.map.android.graphics.AndroidGraphicFactory.convertToAndroidBitmap((r6 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

