digraph "CFG fororg.mapsforge.map.android.graphics.AndroidGraphicFactory.openFileOutput(Ljava\/lang\/String;I)Ljava\/io\/FileOutputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.io.File) = \l  (r3 I:org.mapsforge.map.android.graphics.AndroidGraphicFactory)\l org.mapsforge.map.android.graphics.AndroidGraphicFactory.svgCacheDir java.io.File \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:java.io.FileOutputStream) =  java.io.FileOutputStream \l0x0006: NEW_INSTANCE  (r1 I:java.io.File) =  java.io.File \l0x0008: IGET  (r2 I:java.io.File) = \l  (r3 I:org.mapsforge.map.android.graphics.AndroidGraphicFactory)\l org.mapsforge.map.android.graphics.AndroidGraphicFactory.svgCacheDir java.io.File \l0x000a: INVOKE  \l  (r1 I:java.io.File)\l  (r2 I:java.io.File)\l  (r4 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x000d: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (32768(0x8000, float:4.5918E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0014 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  \l  (r0 I:java.io.FileOutputStream)\l  (r1 I:java.io.File)\l  (r4 I:boolean)\l java.io.FileOutputStream.\<init\>(java.io.File, boolean):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: RETURN  (r0 I:java.io.FileOutputStream) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IGET  (r0 I:android.app.Application) = \l  (r3 I:org.mapsforge.map.android.graphics.AndroidGraphicFactory)\l org.mapsforge.map.android.graphics.AndroidGraphicFactory.application android.app.Application \l0x001b: INVOKE  (r4 I:java.io.FileOutputStream) = \l  (r0 I:android.app.Application)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l android.app.Application.openFileOutput(java.lang.String, int):java.io.FileOutputStream type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|0x001f: RETURN  (r4 I:java.io.FileOutputStream) \l}"];
MethodNode[shape=record,label="{public java.io.FileOutputStream org.mapsforge.map.android.graphics.AndroidGraphicFactory.openFileOutput((r3 'this' I:org.mapsforge.map.android.graphics.AndroidGraphicFactory A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.FileNotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

