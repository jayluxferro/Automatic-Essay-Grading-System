digraph "CFG fororg.mapsforge.map.android.graphics.AndroidBitmap.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_CLASS  (r0 I:java.lang.Class\<org.mapsforge.map.android.graphics.AndroidBitmap\>) =  org.mapsforge.map.android.graphics.AndroidBitmap.class \l0x0002: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l0x0006: INVOKE  (r0 I:java.util.logging.Logger) = (r0 I:java.lang.String) java.util.logging.Logger.getLogger(java.lang.String):java.util.logging.Logger type: STATIC \l0x000a: SPUT  (r0 I:java.util.logging.Logger) org.mapsforge.map.android.graphics.AndroidBitmap.LOGGER java.util.logging.Logger \l0x000c: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet \l0x000e: INVOKE  (r0 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x0011: SPUT  \l  (r0 I:java.util.Set\<java.lang.ref.SoftReference\<android.graphics.Bitmap\>\>)\l org.mapsforge.map.android.graphics.AndroidBitmap.REUSABLE_BITMAPS java.util.Set \l0x0013: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: SPUT  \l  (r0 I:java.util.List\<org.mapsforge.map.android.graphics.AndroidBitmap\>)\l org.mapsforge.map.android.graphics.AndroidBitmap.BITMAP_LIST java.util.List \l0x0016: SPUT  (r0 I:java.util.concurrent.atomic.AtomicInteger) org.mapsforge.map.android.graphics.AndroidBitmap.BITMAP_INSTANCES java.util.concurrent.atomic.AtomicInteger \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{static void org.mapsforge.map.android.graphics.AndroidBitmap.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

