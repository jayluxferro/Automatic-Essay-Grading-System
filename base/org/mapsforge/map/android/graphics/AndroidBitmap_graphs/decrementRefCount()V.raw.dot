digraph "CFG fororg.mapsforge.map.android.graphics.AndroidBitmap.decrementRefCount()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicInteger) = (r1 I:org.mapsforge.map.android.graphics.AndroidBitmap) org.mapsforge.map.android.graphics.AndroidBitmap.refCount java.util.concurrent.atomic.AtomicInteger \l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.concurrent.atomic.AtomicInteger) java.util.concurrent.atomic.AtomicInteger.decrementAndGet():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r1 I:org.mapsforge.map.android.graphics.AndroidBitmap) org.mapsforge.map.android.graphics.AndroidBitmap.destroy():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.graphics.AndroidBitmap.decrementRefCount((r1 'this' I:org.mapsforge.map.android.graphics.AndroidBitmap A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

