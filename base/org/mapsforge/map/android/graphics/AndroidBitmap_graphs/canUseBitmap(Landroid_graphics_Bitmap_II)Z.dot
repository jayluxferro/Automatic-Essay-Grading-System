digraph "CFG fororg.mapsforge.map.android.graphics.AndroidBitmap.canUseBitmap(Landroid\/graphics\/Bitmap;II)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r2.getWidth() != r3) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r2.getHeight() != r4) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|RETURN\l|return true\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
MethodNode[shape=record,label="{protected final boolean org.mapsforge.map.android.graphics.AndroidBitmap.canUseBitmap((r1v0 'this' org.mapsforge.map.android.graphics.AndroidBitmap A[IMMUTABLE_TYPE, THIS]), (r2v0 android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
}

