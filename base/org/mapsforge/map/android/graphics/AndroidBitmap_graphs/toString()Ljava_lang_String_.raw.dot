digraph "CFG fororg.mapsforge.map.android.graphics.AndroidBitmap.toString()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.Bitmap) = (r3 I:org.mapsforge.map.android.graphics.AndroidBitmap) org.mapsforge.map.android.graphics.AndroidBitmap.bitmap android.graphics.Bitmap \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.graphics.Bitmap) = (r3 I:org.mapsforge.map.android.graphics.AndroidBitmap) org.mapsforge.map.android.graphics.AndroidBitmap.bitmap android.graphics.Bitmap \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:android.graphics.Bitmap) android.graphics.Bitmap.hasAlpha():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST_STR  (r0 I:java.lang.String) =  \" has alpha\" \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST_STR  (r0 I:java.lang.String) =  \" no alpha\" \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: CONST_STR  (r0 I:java.lang.String) =  \" is recycled\" \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0016: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0019: INVOKE  (r2 I:java.lang.String) = (r3 I:java.lang.Object) java.lang.Object.toString():java.lang.String type: SUPER \l0x001d: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0020: CONST_STR  (r2 I:java.lang.String) =  \" rC \" \l0x0022: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: IGET  (r2 I:java.util.concurrent.atomic.AtomicInteger) = (r3 I:org.mapsforge.map.android.graphics.AndroidBitmap) org.mapsforge.map.android.graphics.AndroidBitmap.refCount java.util.concurrent.atomic.AtomicInteger \l0x0027: INVOKE  (r2 I:int) = (r2 I:java.util.concurrent.atomic.AtomicInteger) java.util.concurrent.atomic.AtomicInteger.get():int type: VIRTUAL \l0x002b: INVOKE  (r2 I:java.lang.String) = (r2 I:int) java.lang.Integer.toString(int):java.lang.String type: STATIC \l0x002f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0032: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0035: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String org.mapsforge.map.android.graphics.AndroidBitmap.toString((r3 'this' I:org.mapsforge.map.android.graphics.AndroidBitmap A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

