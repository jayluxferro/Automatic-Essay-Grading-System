digraph "CFG fororg.mapsforge.map.android.graphics.AndroidTileBitmap.\<init\>(IZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:org.mapsforge.map.android.graphics.AndroidBitmap) org.mapsforge.map.android.graphics.AndroidBitmap.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0005: IPUT  \l  (r0 I:long)\l  (r2 I:org.mapsforge.map.android.graphics.AndroidTileBitmap)\l org.mapsforge.map.android.graphics.AndroidTileBitmap.expiration long \l0x0007: INVOKE  (r0 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC \l0x000b: IPUT  \l  (r0 I:long)\l  (r2 I:org.mapsforge.map.android.graphics.AndroidTileBitmap)\l org.mapsforge.map.android.graphics.AndroidTileBitmap.timestamp long \l0x000d: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x000f: CONST  (r1 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:3:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: INVOKE  (r0 I:android.graphics.Bitmap) = (r3 I:int), (r4 I:boolean) org.mapsforge.map.android.graphics.AndroidTileBitmap.getTileBitmapFromReusableSet(int, boolean):android.graphics.Bitmap type: STATIC \l0x0017: IPUT  \l  (r0 I:android.graphics.Bitmap)\l  (r2 I:org.mapsforge.map.android.graphics.AndroidTileBitmap)\l org.mapsforge.map.android.graphics.AndroidTileBitmap.bitmap android.graphics.Bitmap \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: IGET  (r0 I:android.graphics.Bitmap) = (r2 I:org.mapsforge.map.android.graphics.AndroidTileBitmap) org.mapsforge.map.android.graphics.AndroidTileBitmap.bitmap android.graphics.Bitmap \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002a \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0022 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: SGET  (r4 I:android.graphics.Bitmap$Config) =  org.mapsforge.map.android.graphics.AndroidGraphicFactory.TRANSPARENT_BITMAP android.graphics.Bitmap$Config \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: SGET  (r4 I:android.graphics.Bitmap$Config) =  org.mapsforge.map.android.graphics.AndroidGraphicFactory.NON_TRANSPARENT_BITMAP android.graphics.Bitmap$Config \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: INVOKE  (r3 I:android.graphics.Bitmap) = \l  (r3 I:int)\l  (r3 I:int)\l  (r4 I:android.graphics.Bitmap$Config)\l org.mapsforge.map.android.graphics.AndroidBitmap.createAndroidBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x0028: IPUT  \l  (r3 I:android.graphics.Bitmap)\l  (r2 I:org.mapsforge.map.android.graphics.AndroidTileBitmap)\l org.mapsforge.map.android.graphics.AndroidTileBitmap.bitmap android.graphics.Bitmap \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: RETURN   \l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.android.graphics.AndroidTileBitmap.\<init\>((r2 'this' I:org.mapsforge.map.android.graphics.AndroidTileBitmap A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=11\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

