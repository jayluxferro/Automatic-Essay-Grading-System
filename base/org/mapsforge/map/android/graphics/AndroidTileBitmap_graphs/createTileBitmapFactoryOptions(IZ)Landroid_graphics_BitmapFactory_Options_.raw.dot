digraph "CFG fororg.mapsforge.map.android.graphics.AndroidTileBitmap.createTileBitmapFactoryOptions(IZ)Landroid\/graphics\/BitmapFactory$Options;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:android.graphics.BitmapFactory$Options) =  android.graphics.BitmapFactory$Options \l0x0002: INVOKE  (r0 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: SGET  (r1 I:android.graphics.Bitmap$Config) =  org.mapsforge.map.android.graphics.AndroidGraphicFactory.TRANSPARENT_BITMAP android.graphics.Bitmap$Config \l0x0009: IPUT  \l  (r1 I:android.graphics.Bitmap$Config)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.Options.inPreferredConfig android.graphics.Bitmap$Config \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: SGET  (r1 I:android.graphics.Bitmap$Config) =  org.mapsforge.map.android.graphics.AndroidGraphicFactory.NON_TRANSPARENT_BITMAP android.graphics.Bitmap$Config \l0x000e: IPUT  \l  (r1 I:android.graphics.Bitmap$Config)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.Options.inPreferredConfig android.graphics.Bitmap$Config \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0012: CONST  (r2 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r1 I:?[int, byte, short, char]) \< (r2 I:?[int, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INVOKE  (r1 I:android.graphics.Bitmap) = (r4 I:int), (r5 I:boolean) org.mapsforge.map.android.graphics.AndroidTileBitmap.getTileBitmapFromReusableSet(int, boolean):android.graphics.Bitmap type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001d: IPUT  \l  (r1 I:boolean)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.Options.inMutable boolean \l0x001f: IPUT  (r1 I:int), (r0 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.inSampleSize int \l0x0021: INVOKE  (r4 I:android.graphics.Bitmap) = (r4 I:int), (r5 I:boolean) org.mapsforge.map.android.graphics.AndroidTileBitmap.getTileBitmapFromReusableSet(int, boolean):android.graphics.Bitmap type: STATIC \l0x0025: IPUT  \l  (r4 I:android.graphics.Bitmap)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.Options.inBitmap android.graphics.Bitmap \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: RETURN  (r0 I:android.graphics.BitmapFactory$Options) \l}"];
MethodNode[shape=record,label="{private android.graphics.BitmapFactory$Options org.mapsforge.map.android.graphics.AndroidTileBitmap.createTileBitmapFactoryOptions((r3 'this' I:org.mapsforge.map.android.graphics.AndroidTileBitmap A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.TargetApi, \{value=11\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

