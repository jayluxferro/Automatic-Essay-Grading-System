digraph "CFG fororg.mapsforge.map.android.graphics.AndroidCanvas.drawPath(Lorg\/mapsforge\/core\/graphics\/Path;Lorg\/mapsforge\/core\/graphics\/Paint;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r3 I:org.mapsforge.core.graphics.Paint) org.mapsforge.core.graphics.Paint.isTransparent():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r0 I:android.graphics.Canvas) = (r1 I:org.mapsforge.map.android.graphics.AndroidCanvas) org.mapsforge.map.android.graphics.AndroidCanvas.canvas android.graphics.Canvas \l0x0009: INVOKE  (r2 I:android.graphics.Path) = (r2 I:org.mapsforge.core.graphics.Path) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getPath(org.mapsforge.core.graphics.Path):android.graphics.Path type: STATIC \l0x000d: INVOKE  (r3 I:android.graphics.Paint) = (r3 I:org.mapsforge.core.graphics.Paint) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getPaint(org.mapsforge.core.graphics.Paint):android.graphics.Paint type: STATIC \l0x0011: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r2 I:android.graphics.Path)\l  (r3 I:android.graphics.Paint)\l android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.graphics.AndroidCanvas.drawPath((r1 'this' I:org.mapsforge.map.android.graphics.AndroidCanvas A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.core.graphics.Path A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

