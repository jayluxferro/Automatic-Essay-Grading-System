digraph "CFG fororg.mapsforge.map.android.graphics.AndroidCanvas.setClip(IIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (26 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:android.graphics.Canvas) = (r6 I:org.mapsforge.map.android.graphics.AndroidCanvas) org.mapsforge.map.android.graphics.AndroidCanvas.canvas android.graphics.Canvas \l0x0008: INVOKE  (r0 I:android.graphics.Canvas) android.graphics.Canvas.save():int type: VIRTUAL \l0x000b: IGET  (r0 I:android.graphics.Canvas) = (r6 I:org.mapsforge.map.android.graphics.AndroidCanvas) org.mapsforge.map.android.graphics.AndroidCanvas.canvas android.graphics.Canvas \l0x000d: ARITH  (r9 I:int) = (r9 I:int) + (r7 I:int) \l0x000e: ARITH  (r10 I:int) = (r10 I:int) + (r8 I:int) \l0x000f: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r7 I:int)\l  (r8 I:int)\l  (r9 I:int)\l  (r10 I:int)\l android.graphics.Canvas.clipRect(int, int, int, int):boolean type: VIRTUAL \l0x0012: IGET  (r7 I:android.graphics.Canvas) = (r6 I:org.mapsforge.map.android.graphics.AndroidCanvas) org.mapsforge.map.android.graphics.AndroidCanvas.canvas android.graphics.Canvas \l0x0014: INVOKE  (r7 I:android.graphics.Canvas) android.graphics.Canvas.restore():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: SGET  (r5 I:android.graphics.Region$Op) =  android.graphics.Region.Op.REPLACE android.graphics.Region$Op \l0x001a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x001b: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001d: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: INVOKE  \l  (r0 I:org.mapsforge.map.android.graphics.AndroidCanvas)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:android.graphics.Region$Op)\l org.mapsforge.map.android.graphics.AndroidCanvas.setClipInternal(int, int, int, int, android.graphics.Region$Op):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.graphics.AndroidCanvas.setClip((r6 'this' I:org.mapsforge.map.android.graphics.AndroidCanvas A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

