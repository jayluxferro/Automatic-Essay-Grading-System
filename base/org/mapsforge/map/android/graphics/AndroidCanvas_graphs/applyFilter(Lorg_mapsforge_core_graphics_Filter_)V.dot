digraph "CFG fororg.mapsforge.map.android.graphics.AndroidCanvas.applyFilter(Lorg\/mapsforge\/core\/graphics\/Filter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2 != org.mapsforge.core.graphics.Filter.NONE) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005}"];
Node_4 [shape=record,label="{4\:\ 0x000d|switch(r2) \{\l    case org.mapsforge.core.graphics.Filter.GRAYSCALE :org.mapsforge.core.graphics.Filter: goto L_0x0021;\l    case org.mapsforge.core.graphics.Filter.GRAYSCALE_INVERT :org.mapsforge.core.graphics.Filter: goto L_0x0019;\l    case org.mapsforge.core.graphics.Filter.INVERT :org.mapsforge.core.graphics.Filter: goto L_0x0011;\l    default: goto L_0x0010;\l\}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|r1.bitmapPaint.setColorFilter(r1.invertFilter)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|r1.bitmapPaint.setColorFilter(r1.grayscaleInvertFilter)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|r1.bitmapPaint.setColorFilter(r1.grayscaleFilter)\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.android.graphics.AndroidCanvas.applyFilter((r1v0 'this' org.mapsforge.map.android.graphics.AndroidCanvas A[IMMUTABLE_TYPE, THIS]), (r2v0 org.mapsforge.core.graphics.Filter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6;
Node_4 -> Node_7;
Node_4 -> Node_11;
Node_5 -> Node_9;
Node_6 -> Node_10;
Node_7 -> Node_8;
}

