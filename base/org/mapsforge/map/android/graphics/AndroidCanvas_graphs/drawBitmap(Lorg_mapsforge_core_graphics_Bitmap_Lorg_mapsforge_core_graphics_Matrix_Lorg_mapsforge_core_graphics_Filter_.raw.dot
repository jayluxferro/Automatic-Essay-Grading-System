digraph "CFG fororg.mapsforge.map.android.graphics.AndroidCanvas.drawBitmap(Lorg\/mapsforge\/core\/graphics\/Bitmap;Lorg\/mapsforge\/core\/graphics\/Matrix;Lorg\/mapsforge\/core\/graphics\/Filter;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r2 I:org.mapsforge.map.android.graphics.AndroidCanvas)\l  (r5 I:org.mapsforge.core.graphics.Filter)\l org.mapsforge.map.android.graphics.AndroidCanvas.applyFilter(org.mapsforge.core.graphics.Filter):void type: DIRECT \l0x0003: IGET  (r0 I:android.graphics.Canvas) = (r2 I:org.mapsforge.map.android.graphics.AndroidCanvas) org.mapsforge.map.android.graphics.AndroidCanvas.canvas android.graphics.Canvas \l0x0005: INVOKE  (r3 I:android.graphics.Bitmap) = (r3 I:org.mapsforge.core.graphics.Bitmap) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getBitmap(org.mapsforge.core.graphics.Bitmap):android.graphics.Bitmap type: STATIC \l0x0009: INVOKE  (r4 I:android.graphics.Matrix) = (r4 I:org.mapsforge.core.graphics.Matrix) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getMatrix(org.mapsforge.core.graphics.Matrix):android.graphics.Matrix type: STATIC \l0x000d: IGET  (r1 I:android.graphics.Paint) = (r2 I:org.mapsforge.map.android.graphics.AndroidCanvas) org.mapsforge.map.android.graphics.AndroidCanvas.bitmapPaint android.graphics.Paint \l0x000f: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r3 I:android.graphics.Bitmap)\l  (r4 I:android.graphics.Matrix)\l  (r1 I:android.graphics.Paint)\l android.graphics.Canvas.drawBitmap(android.graphics.Bitmap, android.graphics.Matrix, android.graphics.Paint):void type: VIRTUAL \l0x0012: SGET  (r3 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: IGET  (r3 I:android.graphics.Paint) = (r2 I:org.mapsforge.map.android.graphics.AndroidCanvas) org.mapsforge.map.android.graphics.AndroidCanvas.bitmapPaint android.graphics.Paint \l0x0018: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: INVOKE  \l  (r3 I:android.graphics.Paint)\l  (r4 I:android.graphics.ColorFilter)\l android.graphics.Paint.setColorFilter(android.graphics.ColorFilter):android.graphics.ColorFilter type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.graphics.AndroidCanvas.drawBitmap((r2 'this' I:org.mapsforge.map.android.graphics.AndroidCanvas A[IMMUTABLE_TYPE, THIS]), (r3 I:org.mapsforge.core.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.core.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.mapsforge.core.graphics.Filter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

