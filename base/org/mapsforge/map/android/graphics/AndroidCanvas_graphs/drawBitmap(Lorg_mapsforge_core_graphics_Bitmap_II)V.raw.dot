digraph "CFG fororg.mapsforge.map.android.graphics.AndroidCanvas.drawBitmap(Lorg\/mapsforge\/core\/graphics\/Bitmap;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:android.graphics.Bitmap) = (r4 I:org.mapsforge.core.graphics.Bitmap) org.mapsforge.map.android.graphics.AndroidGraphicFactory.getBitmap(org.mapsforge.core.graphics.Bitmap):android.graphics.Bitmap type: STATIC \l0x0004: SGET  (r0 I:android.graphics.Bitmap$Config) =  org.mapsforge.map.android.graphics.AndroidGraphicFactory.MONO_ALPHA_BITMAP android.graphics.Bitmap$Config \l0x0006: INVOKE  (r1 I:android.graphics.Bitmap$Config) = (r4 I:android.graphics.Bitmap) android.graphics.Bitmap.getConfig():android.graphics.Bitmap$Config type: VIRTUAL \l0x000a: INVOKE  (r0 I:boolean) = \l  (r0 I:android.graphics.Bitmap$Config)\l  (r1 I:java.lang.Object)\l android.graphics.Bitmap.Config.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IGET  (r0 I:android.graphics.Canvas) = (r3 I:org.mapsforge.map.android.graphics.AndroidCanvas) org.mapsforge.map.android.graphics.AndroidCanvas.canvas android.graphics.Canvas \l0x0012: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: INVOKE  (r1 I:int) = (r1 I:int), (r1 I:int), (r1 I:int), (r1 I:int) android.graphics.Color.argb(int, int, int, int):int type: STATIC \l0x0017: SGET  (r2 I:android.graphics.PorterDuff$Mode) =  android.graphics.PorterDuff.Mode.SRC android.graphics.PorterDuff$Mode \l0x0019: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r1 I:int)\l  (r2 I:android.graphics.PorterDuff$Mode)\l android.graphics.Canvas.drawColor(int, android.graphics.PorterDuff$Mode):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IGET  (r0 I:android.graphics.Canvas) = (r3 I:org.mapsforge.map.android.graphics.AndroidCanvas) org.mapsforge.map.android.graphics.AndroidCanvas.canvas android.graphics.Canvas \l0x001e: CAST  (r5 I:float) = (float) (r5 I:int) \l0x001f: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0020: IGET  (r1 I:android.graphics.Paint) = (r3 I:org.mapsforge.map.android.graphics.AndroidCanvas) org.mapsforge.map.android.graphics.AndroidCanvas.bitmapPaint android.graphics.Paint \l0x0022: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r4 I:android.graphics.Bitmap)\l  (r5 I:float)\l  (r6 I:float)\l  (r1 I:android.graphics.Paint)\l android.graphics.Canvas.drawBitmap(android.graphics.Bitmap, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.android.graphics.AndroidCanvas.drawBitmap((r3 'this' I:org.mapsforge.map.android.graphics.AndroidCanvas A[IMMUTABLE_TYPE, THIS]), (r4 I:org.mapsforge.core.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

