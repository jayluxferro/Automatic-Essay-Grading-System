digraph "CFG fororg.mapsforge.map.scalebar.DefaultMapScaleBar.drawScaleBar(Lorg\/mapsforge\/core\/graphics\/Canvas;IILorg\/mapsforge\/core\/graphics\/Paint;F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r22\lr1 = r23\lint r3 = java.lang.Math.max(r22, r23)\l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|switch(r20.scaleBarPosition) \{\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.BOTTOM_CENTER :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x0598;\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.BOTTOM_LEFT :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x0497;\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.BOTTOM_RIGHT :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x034a;\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.TOP_CENTER :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x023d;\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.TOP_LEFT :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x0154;\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.TOP_RIGHT :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x001f;\l    default: goto L_0x001d;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x001f|if (r1 != 0) goto L_0x009c\l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|float r1 = (r25 * STROKE_EXTERNAL) * 0.5f\lfloat r3 = (float) r3\lint r10 = java.lang.Math.round((((float) r21.getWidth()) \- r1) \- r3)\lfloat r0 = r25 * 10.0f\lr9 = r21\lr14 = r24\lr9.drawLine(r10, java.lang.Math.round(r0), java.lang.Math.round(((float) r21.getWidth()) \- r1), java.lang.Math.round(r0), r14)\lr9.drawLine(java.lang.Math.round(((float) r21.getWidth()) \- r1), java.lang.Math.round(r0), java.lang.Math.round(((float) r21.getWidth()) \- r1), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\lr9.drawLine(java.lang.Math.round((((float) r21.getWidth()) \- r1) \- r3), java.lang.Math.round(r0), java.lang.Math.round((((float) r21.getWidth()) \- r1) \- r3), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\l}"];
Node_4 [shape=record,label="{4\:\ 0x009c|float r6 = (STROKE_EXTERNAL * r25) * 0.5f\lr9 = r21\lr14 = r24\lr9.drawLine(java.lang.Math.round(((float) r21.getWidth()) \- r6), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round((((float) r21.getWidth()) \- r6) \- ((float) r3)), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\lfloat r2 = r25 * 10.0f\lr9.drawLine(java.lang.Math.round(((float) r21.getWidth()) \- r6), java.lang.Math.round(r2), java.lang.Math.round(((float) r21.getWidth()) \- r6), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\lfloat r0 = (float) r0\lr9.drawLine(java.lang.Math.round((((float) r21.getWidth()) \- r6) \- r0), java.lang.Math.round(r2), java.lang.Math.round((((float) r21.getWidth()) \- r6) \- r0), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\lfloat r1 = (float) r1\lr9.drawLine(java.lang.Math.round((((float) r21.getWidth()) \- r6) \- r1), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round((((float) r21.getWidth()) \- r6) \- r1), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0154|if (r1 != 0) goto L_0x01b1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0156|float r0 = (r25 * STROKE_EXTERNAL) * 0.5f\lfloat r1 = r25 * 10.0f\lfloat r2 = ((float) r3) + r0\lr9 = r21\lr9.drawLine(java.lang.Math.round(r0), java.lang.Math.round(r1), java.lang.Math.round(r2), java.lang.Math.round(r1), r24)\lr14 = r21\lr14.drawLine(java.lang.Math.round(r0), java.lang.Math.round(r1), java.lang.Math.round(r0), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r24)\lr9.drawLine(java.lang.Math.round(r2), java.lang.Math.round(r1), java.lang.Math.round(r2), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r24)\l}"];
Node_7 [shape=record,label="{7\:\ 0x01b1|float r4 = (r25 * STROKE_EXTERNAL) * 0.5f\lr9 = r21\lr9.drawLine(java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(((float) r3) + r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r24)\lfloat r2 = r25 * 10.0f\lr14 = r21\lr14.drawLine(java.lang.Math.round(r4), java.lang.Math.round(r2), java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) \- r2), r24)\lfloat r0 = ((float) r0) + r4\lr14 = r24\lr9.drawLine(java.lang.Math.round(r0), java.lang.Math.round(r2), java.lang.Math.round(r0), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\lfloat r4 = r4 + ((float) r1)\lr9.drawLine(java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\l}"];
Node_8 [shape=record,label="{8\:\ 0x023d|if (r1 != 0) goto L_0x02be\l}"];
Node_9 [shape=record,label="{9\:\ 0x023f|int r10 = java.lang.Math.round(((float) (r21.getWidth() \- r3)) * 0.5f)\lfloat r0 = r25 * 10.0f\lr9 = r21\lr14 = r24\lr9.drawLine(r10, java.lang.Math.round(r0), java.lang.Math.round(((float) (r21.getWidth() + r3)) * 0.5f), java.lang.Math.round(r0), r14)\lr9.drawLine(java.lang.Math.round(((float) (r21.getWidth() \- r3)) * 0.5f), java.lang.Math.round(r0), java.lang.Math.round(((float) (r21.getWidth() \- r3)) * 0.5f), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\lr9.drawLine(java.lang.Math.round(((float) (r21.getWidth() + r3)) * 0.5f), java.lang.Math.round(r0), java.lang.Math.round(((float) (r21.getWidth() + r3)) * 0.5f), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\l}"];
Node_10 [shape=record,label="{10\:\ 0x02be|float r4 = (r25 * STROKE_EXTERNAL) * 0.5f\lr9 = r21\lr9.drawLine(java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(((float) r3) + r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r24)\lfloat r2 = r25 * 10.0f\lr14 = r21\lr14.drawLine(java.lang.Math.round(r4), java.lang.Math.round(r2), java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) \- r2), r24)\lfloat r0 = ((float) r0) + r4\lr14 = r24\lr9.drawLine(java.lang.Math.round(r0), java.lang.Math.round(r2), java.lang.Math.round(r0), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\lfloat r4 = r4 + ((float) r1)\lr9.drawLine(java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\l}"];
Node_11 [shape=record,label="{11\:\ 0x034a|if (r1 != 0) goto L_0x03df\l}"];
Node_12 [shape=record,label="{12\:\ 0x034c|float r1 = (r25 * STROKE_EXTERNAL) * 0.5f\lfloat r3 = (float) r3\lfloat r2 = r25 * 10.0f\lr9 = r21\lr14 = r24\lr9.drawLine(java.lang.Math.round((((float) r21.getWidth()) \- r1) \- r3), java.lang.Math.round(((float) r21.getHeight()) \- r2), java.lang.Math.round(((float) r21.getWidth()) \- r1), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\lr9.drawLine(java.lang.Math.round(((float) r21.getWidth()) \- r1), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(((float) r21.getWidth()) \- r1), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\lr9.drawLine(java.lang.Math.round((((float) r21.getWidth()) \- r1) \- r3), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round((((float) r21.getWidth()) \- r1) \- r3), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\l}"];
Node_13 [shape=record,label="{13\:\ 0x03df|float r6 = (STROKE_EXTERNAL * r25) * 0.5f\lr9 = r21\lr14 = r24\lr9.drawLine(java.lang.Math.round(((float) r21.getWidth()) \- r6), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round((((float) r21.getWidth()) \- r6) \- ((float) r3)), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\lfloat r2 = r25 * 10.0f\lr9.drawLine(java.lang.Math.round(((float) r21.getWidth()) \- r6), java.lang.Math.round(r2), java.lang.Math.round(((float) r21.getWidth()) \- r6), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\lfloat r0 = (float) r0\lr9.drawLine(java.lang.Math.round((((float) r21.getWidth()) \- r6) \- r0), java.lang.Math.round(r2), java.lang.Math.round((((float) r21.getWidth()) \- r6) \- r0), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\lfloat r1 = (float) r1\lr9.drawLine(java.lang.Math.round((((float) r21.getWidth()) \- r6) \- r1), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round((((float) r21.getWidth()) \- r6) \- r1), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0497|if (r1 != 0) goto L_0x050c\l}"];
Node_15 [shape=record,label="{15\:\ 0x0499|float r0 = (r25 * STROKE_EXTERNAL) * 0.5f\lint r10 = java.lang.Math.round(r0)\lfloat r2 = r25 * 10.0f\lint r11 = java.lang.Math.round(((float) r21.getHeight()) \- r2)\lfloat r1 = ((float) r3) + r0\lr9 = r21\lr9.drawLine(r10, r11, java.lang.Math.round(r1), java.lang.Math.round(((float) r21.getHeight()) \- r2), r24)\lr14 = r21\lr14.drawLine(java.lang.Math.round(r0), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(r0), java.lang.Math.round(((float) r21.getHeight()) \- r2), r24)\lr9.drawLine(java.lang.Math.round(r1), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(r1), java.lang.Math.round(((float) r21.getHeight()) \- r2), r24)\l}"];
Node_16 [shape=record,label="{16\:\ 0x050c|float r4 = (r25 * STROKE_EXTERNAL) * 0.5f\lr9 = r21\lr9.drawLine(java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(((float) r3) + r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r24)\lfloat r2 = r25 * 10.0f\lr14 = r21\lr14.drawLine(java.lang.Math.round(r4), java.lang.Math.round(r2), java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) \- r2), r24)\lfloat r0 = ((float) r0) + r4\lr14 = r24\lr9.drawLine(java.lang.Math.round(r0), java.lang.Math.round(r2), java.lang.Math.round(r0), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\lfloat r4 = r4 + ((float) r1)\lr9.drawLine(java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0598|if (r1 != 0) goto L_0x0631\l}"];
Node_18 [shape=record,label="{18\:\ 0x059a|float r1 = r25 * 10.0f\lr9 = r21\lr14 = r24\lr9.drawLine(java.lang.Math.round(((float) (r21.getWidth() \- r3)) * 0.5f), java.lang.Math.round(((float) r21.getHeight()) \- r1), java.lang.Math.round(((float) (r21.getWidth() + r3)) * 0.5f), java.lang.Math.round(((float) r21.getHeight()) \- r1), r14)\lr9.drawLine(java.lang.Math.round(((float) (r21.getWidth() \- r3)) * 0.5f), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(((float) (r21.getWidth() \- r3)) * 0.5f), java.lang.Math.round(((float) r21.getHeight()) \- r1), r14)\lr9.drawLine(java.lang.Math.round(((float) (r21.getWidth() + r3)) * 0.5f), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(((float) (r21.getWidth() + r3)) * 0.5f), java.lang.Math.round(((float) r21.getHeight()) \- r1), r14)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0631|float r4 = (r25 * STROKE_EXTERNAL) * 0.5f\lr9 = r21\lr9.drawLine(java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(((float) r3) + r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r24)\lfloat r2 = r25 * 10.0f\lr14 = r21\lr14.drawLine(java.lang.Math.round(r4), java.lang.Math.round(r2), java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) \- r2), r24)\lfloat r0 = ((float) r0) + r4\lr14 = r24\lr9.drawLine(java.lang.Math.round(r0), java.lang.Math.round(r2), java.lang.Math.round(r0), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), r14)\lfloat r4 = r4 + ((float) r1)\lr9.drawLine(java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) * 0.5f), java.lang.Math.round(r4), java.lang.Math.round(((float) r21.getHeight()) \- r2), r14)\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.scalebar.DefaultMapScaleBar.drawScaleBar((r20v0 'this' org.mapsforge.map.scalebar.DefaultMapScaleBar A[IMMUTABLE_TYPE, THIS]), (r21v0 org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_1 -> Node_8;
Node_1 -> Node_11;
Node_1 -> Node_14;
Node_1 -> Node_17;
Node_1 -> Node_32;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_21;
Node_4 -> Node_22;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_23;
Node_7 -> Node_24;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_25;
Node_10 -> Node_26;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_27;
Node_13 -> Node_28;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_29;
Node_16 -> Node_30;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_31;
Node_19 -> Node_20;
}

