digraph "CFG fororg.mapsforge.map.scalebar.DefaultMapScaleBar.drawScaleText(Lorg\/mapsforge\/core\/graphics\/Canvas;Ljava\/lang\/String;Ljava\/lang\/String;Lorg\/mapsforge\/core\/graphics\/Paint;F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|switch(r5.scaleBarPosition) \{\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.BOTTOM_CENTER :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x0255;\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.BOTTOM_LEFT :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x01f7;\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.BOTTOM_RIGHT :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x016f;\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.TOP_CENTER :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x0102;\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.TOP_LEFT :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x00a1;\l    case org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.TOP_RIGHT :org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition: goto L_0x0017;\l    default: goto L_0x0015;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0017}"];
Node_3 [shape=record,label="{3\:\ 0x001b|if (r8.length() != 0) goto L_0x004b\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|float r3 = STROKE_EXTERNAL * r10\lfloat r2 = 1.0f * r10\lr6.drawText(r7, java.lang.Math.round(((((float) r6.getWidth()) \- r3) \- r2) \- ((float) r5.paintScaleTextStroke.getTextWidth(r7))), java.lang.Math.round((((r10 * 10.0f) + (r3 * 0.5f)) + r2) + ((float) r5.paintScaleTextStroke.getTextHeight(r7))), r9)\l}"];
Node_5 [shape=record,label="{5\:\ 0x004b|float r3 = STROKE_EXTERNAL * r10\lfloat r10 = r10 * 1.0f\lfloat r2 = r3 * 0.5f\lr6.drawText(r7, java.lang.Math.round(((((float) r6.getWidth()) \- r3) \- r10) \- ((float) r5.paintScaleTextStroke.getTextWidth(r7))), java.lang.Math.round(((((float) r6.getHeight()) * 0.5f) \- r2) \- r10), r9)\lr6.drawText(r8, java.lang.Math.round(((((float) r6.getWidth()) \- r3) \- r10) \- ((float) r5.paintScaleTextStroke.getTextWidth(r8))), java.lang.Math.round((((((float) r6.getHeight()) * 0.5f) + r2) + r10) + ((float) r5.paintScaleTextStroke.getTextHeight(r8))), r9)\l}"];
Node_6 [shape=record,label="{6\:\ 0x00a1}"];
Node_7 [shape=record,label="{7\:\ 0x00a5|if (r8.length() != 0) goto L_0x00c8\l}"];
Node_8 [shape=record,label="{8\:\ 0x00a7|float r3 = STROKE_EXTERNAL * r10\lfloat r2 = 1.0f * r10\lr6.drawText(r7, java.lang.Math.round(r3 + r2), java.lang.Math.round((((r10 * 10.0f) + (r3 * 0.5f)) + r2) + ((float) r5.paintScaleTextStroke.getTextHeight(r7))), r9)\l}"];
Node_9 [shape=record,label="{9\:\ 0x00c8|float r3 = STROKE_EXTERNAL * r10\lfloat r10 = r10 * 1.0f\lfloat r0 = r3 + r10\lfloat r3 = r3 * 0.5f\lr6.drawText(r7, java.lang.Math.round(r0), java.lang.Math.round(((((float) r6.getHeight()) * 0.5f) \- r3) \- r10), r9)\lr6.drawText(r8, java.lang.Math.round(r0), java.lang.Math.round((((((float) r6.getHeight()) * 0.5f) + r3) + r10) + ((float) r5.paintScaleTextStroke.getTextHeight(r8))), r9)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0102}"];
Node_11 [shape=record,label="{11\:\ 0x0106|if (r8.length() != 0) goto L_0x0135\l}"];
Node_12 [shape=record,label="{12\:\ 0x0108|r6.drawText(r7, java.lang.Math.round(((float) (r6.getWidth() \- r5.paintScaleTextStroke.getTextWidth(r7))) * 0.5f), java.lang.Math.round((((10.0f * r10) + ((STROKE_EXTERNAL * r10) * 0.5f)) + (r10 * 1.0f)) + ((float) r5.paintScaleTextStroke.getTextHeight(r7))), r9)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0135|float r3 = STROKE_EXTERNAL * r10\lfloat r10 = r10 * 1.0f\lfloat r0 = r3 + r10\lfloat r3 = r3 * 0.5f\lr6.drawText(r7, java.lang.Math.round(r0), java.lang.Math.round(((((float) r6.getHeight()) * 0.5f) \- r3) \- r10), r9)\lr6.drawText(r8, java.lang.Math.round(r0), java.lang.Math.round((((((float) r6.getHeight()) * 0.5f) + r3) + r10) + ((float) r5.paintScaleTextStroke.getTextHeight(r8))), r9)\l}"];
Node_14 [shape=record,label="{14\:\ 0x016f}"];
Node_15 [shape=record,label="{15\:\ 0x0173|if (r8.length() != 0) goto L_0x01a1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0175|float r3 = STROKE_EXTERNAL * r10\lfloat r2 = 1.0f * r10\lr6.drawText(r7, java.lang.Math.round(((((float) r6.getWidth()) \- r3) \- r2) \- ((float) r5.paintScaleTextStroke.getTextWidth(r7))), java.lang.Math.round(((((float) r6.getHeight()) \- (r10 * 10.0f)) \- (r3 * 0.5f)) \- r2), r9)\l}"];
Node_17 [shape=record,label="{17\:\ 0x01a1|float r3 = STROKE_EXTERNAL * r10\lfloat r10 = r10 * 1.0f\lfloat r2 = r3 * 0.5f\lr6.drawText(r7, java.lang.Math.round(((((float) r6.getWidth()) \- r3) \- r10) \- ((float) r5.paintScaleTextStroke.getTextWidth(r7))), java.lang.Math.round(((((float) r6.getHeight()) * 0.5f) \- r2) \- r10), r9)\lr6.drawText(r8, java.lang.Math.round(((((float) r6.getWidth()) \- r3) \- r10) \- ((float) r5.paintScaleTextStroke.getTextWidth(r8))), java.lang.Math.round((((((float) r6.getHeight()) * 0.5f) + r2) + r10) + ((float) r5.paintScaleTextStroke.getTextHeight(r8))), r9)\l}"];
Node_18 [shape=record,label="{18\:\ 0x01f7}"];
Node_19 [shape=record,label="{19\:\ 0x01fb|if (r8.length() != 0) goto L_0x021c\l}"];
Node_20 [shape=record,label="{20\:\ 0x01fd|float r3 = STROKE_EXTERNAL * r10\lfloat r2 = 1.0f * r10\lr6.drawText(r7, java.lang.Math.round(r3 + r2), java.lang.Math.round(((((float) r6.getHeight()) \- (r10 * 10.0f)) \- (r3 * 0.5f)) \- r2), r9)\l}"];
Node_21 [shape=record,label="{21\:\ 0x021c|float r3 = STROKE_EXTERNAL * r10\lfloat r10 = r10 * 1.0f\lfloat r0 = r3 + r10\lfloat r3 = r3 * 0.5f\lr6.drawText(r7, java.lang.Math.round(r0), java.lang.Math.round(((((float) r6.getHeight()) * 0.5f) \- r3) \- r10), r9)\lr6.drawText(r8, java.lang.Math.round(r0), java.lang.Math.round((((((float) r6.getHeight()) * 0.5f) + r3) + r10) + ((float) r5.paintScaleTextStroke.getTextHeight(r8))), r9)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0255}"];
Node_23 [shape=record,label="{23\:\ 0x0259|if (r8.length() != 0) goto L_0x0285\l}"];
Node_24 [shape=record,label="{24\:\ 0x025b|r6.drawText(r7, java.lang.Math.round(((float) (r6.getWidth() \- r5.paintScaleTextStroke.getTextWidth(r7))) * 0.5f), java.lang.Math.round(((((float) r6.getHeight()) \- (10.0f * r10)) \- ((STROKE_EXTERNAL * r10) * 0.5f)) \- (r10 * 1.0f)), r9)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0285|float r3 = STROKE_EXTERNAL * r10\lfloat r10 = r10 * 1.0f\lfloat r0 = r3 + r10\lfloat r3 = r3 * 0.5f\lr6.drawText(r7, java.lang.Math.round(r0), java.lang.Math.round(((((float) r6.getHeight()) * 0.5f) \- r3) \- r10), r9)\lr6.drawText(r8, java.lang.Math.round(r0), java.lang.Math.round((((((float) r6.getHeight()) * 0.5f) + r3) + r10) + ((float) r5.paintScaleTextStroke.getTextHeight(r8))), r9)\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.scalebar.DefaultMapScaleBar.drawScaleText((r5v0 'this' org.mapsforge.map.scalebar.DefaultMapScaleBar A[IMMUTABLE_TYPE, THIS]), (r6v0 org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_1 -> Node_10;
Node_1 -> Node_14;
Node_1 -> Node_18;
Node_1 -> Node_22;
Node_1 -> Node_38;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_27;
Node_5 -> Node_28;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_29;
Node_9 -> Node_30;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_31;
Node_13 -> Node_32;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_33;
Node_17 -> Node_34;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_35;
Node_21 -> Node_36;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_37;
Node_25 -> Node_26;
}

