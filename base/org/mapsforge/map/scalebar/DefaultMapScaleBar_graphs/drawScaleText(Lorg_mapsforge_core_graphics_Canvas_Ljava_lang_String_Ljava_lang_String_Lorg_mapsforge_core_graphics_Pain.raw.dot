digraph "CFG fororg.mapsforge.map.scalebar.DefaultMapScaleBar.drawScaleText(Lorg\/mapsforge\/core\/graphics\/Canvas;Ljava\/lang\/String;Ljava\/lang\/String;Lorg\/mapsforge\/core\/graphics\/Paint;F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  org.mapsforge.map.scalebar.DefaultMapScaleBar.1.$SwitchMap$org$mapsforge$map$scalebar$MapScaleBar$ScaleBarPosition int[] \l0x0002: IGET  (r1 I:org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.scaleBarPosition org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition \l0x0004: INVOKE  (r1 I:int) = \l  (r1 I:org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition)\l org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.ordinal():int type: VIRTUAL \l0x0008: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l0x000a: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1092616192(0x41200000, float:10.0) ?[int, float, short, byte, char])\l \l0x000c: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x000e: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1082130432(0x40800000, float:4.0) ?[int, float, short, byte, char])\l \l0x0010: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6] t:[0x0255, 0x01f7, 0x016f, 0x0102, 0x00a1, 0x0017] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: INVOKE  (r0 I:int) = (r8 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x004b \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: INVOKE  (r8 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0021: CAST  (r8 I:float) = (float) (r8 I:int) \l0x0022: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x0024: ARITH  (r8 I:float) = (r8 I:float) \- (r3 I:float) \l0x0025: ARITH  (r2 I:float) = (r2 I:float) * (r10 I:float) \l0x0027: ARITH  (r8 I:float) = (r8 I:float) \- (r2 I:float) \l0x0028: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x002a: INVOKE  (r0 I:int) = \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r7 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x002e: CAST  (r0 I:float) = (float) (r0 I:int) \l0x002f: ARITH  (r8 I:float) = (r8 I:float) \- (r0 I:float) \l0x0030: INVOKE  (r8 I:int) = (r8 I:float) java.lang.Math.round(float):int type: STATIC \l0x0034: ARITH  (r10 I:float) = (r10 I:float) * (r1 I:float) \l0x0036: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0038: ARITH  (r10 I:float) = (r10 I:float) + (r3 I:float) \l0x0039: ARITH  (r10 I:float) = (r10 I:float) + (r2 I:float) \l0x003a: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x003c: INVOKE  (r0 I:int) = \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r7 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x0040: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0041: ARITH  (r10 I:float) = (r10 I:float) + (r0 I:float) \l0x0042: INVOKE  (r10 I:int) = (r10 I:float) java.lang.Math.round(float):int type: STATIC \l0x0046: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x004b|0x004b: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x004f: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0050: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x0052: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x0053: ARITH  (r10 I:float) = (r10 I:float) * (r2 I:float) \l0x0055: ARITH  (r0 I:float) = (r0 I:float) \- (r10 I:float) \l0x0056: IGET  (r1 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x0058: INVOKE  (r1 I:int) = \l  (r1 I:org.mapsforge.core.graphics.Paint)\l  (r7 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x005c: CAST  (r1 I:float) = (float) (r1 I:int) \l0x005d: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x005e: INVOKE  (r0 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0062: INVOKE  (r1 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0066: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0067: ARITH  (r1 I:float) = (r1 I:float) * (r4 I:float) \l0x0069: ARITH  (r2 I:float) = (r3 I:float) * (r4 I:float) \l0x006b: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x006c: ARITH  (r1 I:float) = (r1 I:float) \- (r10 I:float) \l0x006d: INVOKE  (r1 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x0071: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0074: INVOKE  (r7 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0078: CAST  (r7 I:float) = (float) (r7 I:int) \l0x0079: ARITH  (r7 I:float) = (r7 I:float) \- (r3 I:float) \l0x007a: ARITH  (r7 I:float) = (r7 I:float) \- (r10 I:float) \l0x007b: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x007d: INVOKE  (r0 I:int) = \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r8 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x0081: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0082: ARITH  (r7 I:float) = (r7 I:float) \- (r0 I:float) \l0x0083: INVOKE  (r7 I:int) = (r7 I:float) java.lang.Math.round(float):int type: STATIC \l0x0087: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x008b: CAST  (r0 I:float) = (float) (r0 I:int) \l0x008c: ARITH  (r0 I:float) = (r0 I:float) * (r4 I:float) \l0x008e: ARITH  (r0 I:float) = (r0 I:float) + (r2 I:float) \l0x008f: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x0090: IGET  (r10 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x0092: INVOKE  (r10 I:int) = \l  (r10 I:org.mapsforge.core.graphics.Paint)\l  (r8 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x0096: CAST  (r10 I:float) = (float) (r10 I:int) \l0x0097: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x0098: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x009c: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r8 I:java.lang.String)\l  (r7 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x00a1|0x00a1: INVOKE  (r0 I:int) = (r8 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x00a5|0x00a5: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x00c8 \l}"];
Node_9 [shape=record,label="{9\:\ 0x00a7|0x00a7: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x00a9: ARITH  (r2 I:float) = (r2 I:float) * (r10 I:float) \l0x00ab: ARITH  (r8 I:float) = (r3 I:float) + (r2 I:float) \l0x00ad: INVOKE  (r8 I:int) = (r8 I:float) java.lang.Math.round(float):int type: STATIC \l0x00b1: ARITH  (r10 I:float) = (r10 I:float) * (r1 I:float) \l0x00b3: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x00b5: ARITH  (r10 I:float) = (r10 I:float) + (r3 I:float) \l0x00b6: ARITH  (r10 I:float) = (r10 I:float) + (r2 I:float) \l0x00b7: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x00b9: INVOKE  (r0 I:int) = \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r7 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x00bd: CAST  (r0 I:float) = (float) (r0 I:int) \l0x00be: ARITH  (r10 I:float) = (r10 I:float) + (r0 I:float) \l0x00bf: INVOKE  (r10 I:int) = (r10 I:float) java.lang.Math.round(float):int type: STATIC \l0x00c3: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x00c8|0x00c8: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x00ca: ARITH  (r10 I:float) = (r10 I:float) * (r2 I:float) \l0x00cc: ARITH  (r0 I:float) = (r3 I:float) + (r10 I:float) \l0x00ce: INVOKE  (r1 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x00d2: INVOKE  (r2 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x00d6: CAST  (r2 I:float) = (float) (r2 I:int) \l0x00d7: ARITH  (r2 I:float) = (r2 I:float) * (r4 I:float) \l0x00d9: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x00db: ARITH  (r2 I:float) = (r2 I:float) \- (r3 I:float) \l0x00dc: ARITH  (r2 I:float) = (r2 I:float) \- (r10 I:float) \l0x00dd: INVOKE  (r2 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x00e1: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x00e4: INVOKE  (r7 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x00e8: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x00ec: CAST  (r0 I:float) = (float) (r0 I:int) \l0x00ed: ARITH  (r0 I:float) = (r0 I:float) * (r4 I:float) \l0x00ef: ARITH  (r0 I:float) = (r0 I:float) + (r3 I:float) \l0x00f0: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x00f1: IGET  (r10 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x00f3: INVOKE  (r10 I:int) = \l  (r10 I:org.mapsforge.core.graphics.Paint)\l  (r8 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x00f7: CAST  (r10 I:float) = (float) (r10 I:int) \l0x00f8: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x00f9: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x00fd: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r8 I:java.lang.String)\l  (r7 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0102|0x0102: INVOKE  (r0 I:int) = (r8 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0106|0x0106: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0135 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0108|0x0108: INVOKE  (r8 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x010c: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x010e: INVOKE  (r0 I:int) = \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r7 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x0112: ARITH  (r8 I:int) = (r8 I:int) \- (r0 I:int) \l0x0113: CAST  (r8 I:float) = (float) (r8 I:int) \l0x0114: ARITH  (r8 I:float) = (r8 I:float) * (r4 I:float) \l0x0116: INVOKE  (r8 I:int) = (r8 I:float) java.lang.Math.round(float):int type: STATIC \l0x011a: ARITH  (r1 I:float) = (r1 I:float) * (r10 I:float) \l0x011c: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x011e: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0120: ARITH  (r1 I:float) = (r1 I:float) + (r3 I:float) \l0x0121: ARITH  (r10 I:float) = (r10 I:float) * (r2 I:float) \l0x0123: ARITH  (r1 I:float) = (r1 I:float) + (r10 I:float) \l0x0124: IGET  (r10 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x0126: INVOKE  (r10 I:int) = \l  (r10 I:org.mapsforge.core.graphics.Paint)\l  (r7 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x012a: CAST  (r10 I:float) = (float) (r10 I:int) \l0x012b: ARITH  (r1 I:float) = (r1 I:float) + (r10 I:float) \l0x012c: INVOKE  (r10 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x0130: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0135|0x0135: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x0137: ARITH  (r10 I:float) = (r10 I:float) * (r2 I:float) \l0x0139: ARITH  (r0 I:float) = (r3 I:float) + (r10 I:float) \l0x013b: INVOKE  (r1 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x013f: INVOKE  (r2 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0143: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0144: ARITH  (r2 I:float) = (r2 I:float) * (r4 I:float) \l0x0146: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0148: ARITH  (r2 I:float) = (r2 I:float) \- (r3 I:float) \l0x0149: ARITH  (r2 I:float) = (r2 I:float) \- (r10 I:float) \l0x014a: INVOKE  (r2 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x014e: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0151: INVOKE  (r7 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0155: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0159: CAST  (r0 I:float) = (float) (r0 I:int) \l0x015a: ARITH  (r0 I:float) = (r0 I:float) * (r4 I:float) \l0x015c: ARITH  (r0 I:float) = (r0 I:float) + (r3 I:float) \l0x015d: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x015e: IGET  (r10 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x0160: INVOKE  (r10 I:int) = \l  (r10 I:org.mapsforge.core.graphics.Paint)\l  (r8 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x0164: CAST  (r10 I:float) = (float) (r10 I:int) \l0x0165: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x0166: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x016a: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r8 I:java.lang.String)\l  (r7 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x016f|0x016f: INVOKE  (r0 I:int) = (r8 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0173|0x0173: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x01a1 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0175|0x0175: INVOKE  (r8 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0179: CAST  (r8 I:float) = (float) (r8 I:int) \l0x017a: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x017c: ARITH  (r8 I:float) = (r8 I:float) \- (r3 I:float) \l0x017d: ARITH  (r2 I:float) = (r2 I:float) * (r10 I:float) \l0x017f: ARITH  (r8 I:float) = (r8 I:float) \- (r2 I:float) \l0x0180: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x0182: INVOKE  (r0 I:int) = \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r7 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x0186: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0187: ARITH  (r8 I:float) = (r8 I:float) \- (r0 I:float) \l0x0188: INVOKE  (r8 I:int) = (r8 I:float) java.lang.Math.round(float):int type: STATIC \l0x018c: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0190: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0191: ARITH  (r10 I:float) = (r10 I:float) * (r1 I:float) \l0x0193: ARITH  (r0 I:float) = (r0 I:float) \- (r10 I:float) \l0x0194: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0196: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x0197: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x0198: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x019c: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x01a1|0x01a1: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x01a5: CAST  (r0 I:float) = (float) (r0 I:int) \l0x01a6: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x01a8: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x01a9: ARITH  (r10 I:float) = (r10 I:float) * (r2 I:float) \l0x01ab: ARITH  (r0 I:float) = (r0 I:float) \- (r10 I:float) \l0x01ac: IGET  (r1 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x01ae: INVOKE  (r1 I:int) = \l  (r1 I:org.mapsforge.core.graphics.Paint)\l  (r7 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x01b2: CAST  (r1 I:float) = (float) (r1 I:int) \l0x01b3: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x01b4: INVOKE  (r0 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x01b8: INVOKE  (r1 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x01bc: CAST  (r1 I:float) = (float) (r1 I:int) \l0x01bd: ARITH  (r1 I:float) = (r1 I:float) * (r4 I:float) \l0x01bf: ARITH  (r2 I:float) = (r3 I:float) * (r4 I:float) \l0x01c1: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x01c2: ARITH  (r1 I:float) = (r1 I:float) \- (r10 I:float) \l0x01c3: INVOKE  (r1 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x01c7: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x01ca: INVOKE  (r7 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x01ce: CAST  (r7 I:float) = (float) (r7 I:int) \l0x01cf: ARITH  (r7 I:float) = (r7 I:float) \- (r3 I:float) \l0x01d0: ARITH  (r7 I:float) = (r7 I:float) \- (r10 I:float) \l0x01d1: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x01d3: INVOKE  (r0 I:int) = \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r8 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x01d7: CAST  (r0 I:float) = (float) (r0 I:int) \l0x01d8: ARITH  (r7 I:float) = (r7 I:float) \- (r0 I:float) \l0x01d9: INVOKE  (r7 I:int) = (r7 I:float) java.lang.Math.round(float):int type: STATIC \l0x01dd: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x01e1: CAST  (r0 I:float) = (float) (r0 I:int) \l0x01e2: ARITH  (r0 I:float) = (r0 I:float) * (r4 I:float) \l0x01e4: ARITH  (r0 I:float) = (r0 I:float) + (r2 I:float) \l0x01e5: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x01e6: IGET  (r10 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x01e8: INVOKE  (r10 I:int) = \l  (r10 I:org.mapsforge.core.graphics.Paint)\l  (r8 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x01ec: CAST  (r10 I:float) = (float) (r10 I:int) \l0x01ed: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x01ee: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x01f2: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r8 I:java.lang.String)\l  (r7 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_19 [shape=record,label="{19\:\ 0x01f7|0x01f7: INVOKE  (r0 I:int) = (r8 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x01fb|0x01fb: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x021c \l}"];
Node_21 [shape=record,label="{21\:\ 0x01fd|0x01fd: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x01ff: ARITH  (r2 I:float) = (r2 I:float) * (r10 I:float) \l0x0201: ARITH  (r8 I:float) = (r3 I:float) + (r2 I:float) \l0x0203: INVOKE  (r8 I:int) = (r8 I:float) java.lang.Math.round(float):int type: STATIC \l0x0207: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x020b: CAST  (r0 I:float) = (float) (r0 I:int) \l0x020c: ARITH  (r10 I:float) = (r10 I:float) * (r1 I:float) \l0x020e: ARITH  (r0 I:float) = (r0 I:float) \- (r10 I:float) \l0x020f: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0211: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x0212: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x0213: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0217: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x021c|0x021c: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x021e: ARITH  (r10 I:float) = (r10 I:float) * (r2 I:float) \l0x0220: ARITH  (r0 I:float) = (r3 I:float) + (r10 I:float) \l0x0222: INVOKE  (r1 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0226: INVOKE  (r2 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x022a: CAST  (r2 I:float) = (float) (r2 I:int) \l0x022b: ARITH  (r2 I:float) = (r2 I:float) * (r4 I:float) \l0x022d: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x022f: ARITH  (r2 I:float) = (r2 I:float) \- (r3 I:float) \l0x0230: ARITH  (r2 I:float) = (r2 I:float) \- (r10 I:float) \l0x0231: INVOKE  (r2 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0235: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0238: INVOKE  (r7 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x023c: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0240: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0241: ARITH  (r0 I:float) = (r0 I:float) * (r4 I:float) \l0x0243: ARITH  (r0 I:float) = (r0 I:float) + (r3 I:float) \l0x0244: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x0245: IGET  (r10 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x0247: INVOKE  (r10 I:int) = \l  (r10 I:org.mapsforge.core.graphics.Paint)\l  (r8 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x024b: CAST  (r10 I:float) = (float) (r10 I:int) \l0x024c: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x024d: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0251: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r8 I:java.lang.String)\l  (r7 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x0255|0x0255: INVOKE  (r0 I:int) = (r8 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0259|0x0259: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0285 \l}"];
Node_25 [shape=record,label="{25\:\ 0x025b|0x025b: INVOKE  (r8 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x025f: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x0261: INVOKE  (r0 I:int) = \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r7 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x0265: ARITH  (r8 I:int) = (r8 I:int) \- (r0 I:int) \l0x0266: CAST  (r8 I:float) = (float) (r8 I:int) \l0x0267: ARITH  (r8 I:float) = (r8 I:float) * (r4 I:float) \l0x0269: INVOKE  (r8 I:int) = (r8 I:float) java.lang.Math.round(float):int type: STATIC \l0x026d: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0271: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0272: ARITH  (r1 I:float) = (r1 I:float) * (r10 I:float) \l0x0274: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x0275: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x0277: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0279: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x027a: ARITH  (r10 I:float) = (r10 I:float) * (r2 I:float) \l0x027c: ARITH  (r0 I:float) = (r0 I:float) \- (r10 I:float) \l0x027d: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0281: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r8 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_26 [shape=record,label="{26\:\ 0x0285|0x0285: ARITH  (r3 I:float) = (r3 I:float) * (r10 I:float) \l0x0287: ARITH  (r10 I:float) = (r10 I:float) * (r2 I:float) \l0x0289: ARITH  (r0 I:float) = (r3 I:float) + (r10 I:float) \l0x028b: INVOKE  (r1 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x028f: INVOKE  (r2 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0293: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0294: ARITH  (r2 I:float) = (r2 I:float) * (r4 I:float) \l0x0296: ARITH  (r3 I:float) = (r3 I:float) * (r4 I:float) \l0x0298: ARITH  (r2 I:float) = (r2 I:float) \- (r3 I:float) \l0x0299: ARITH  (r2 I:float) = (r2 I:float) \- (r10 I:float) \l0x029a: INVOKE  (r2 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x029e: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r7 I:java.lang.String)\l  (r1 I:int)\l  (r2 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x02a1: INVOKE  (r7 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x02a5: INVOKE  (r0 I:int) = (r6 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x02a9: CAST  (r0 I:float) = (float) (r0 I:int) \l0x02aa: ARITH  (r0 I:float) = (r0 I:float) * (r4 I:float) \l0x02ac: ARITH  (r0 I:float) = (r0 I:float) + (r3 I:float) \l0x02ad: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x02ae: IGET  (r10 I:org.mapsforge.core.graphics.Paint) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.paintScaleTextStroke org.mapsforge.core.graphics.Paint \l0x02b0: INVOKE  (r10 I:int) = \l  (r10 I:org.mapsforge.core.graphics.Paint)\l  (r8 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x02b4: CAST  (r10 I:float) = (float) (r10 I:int) \l0x02b5: ARITH  (r0 I:float) = (r0 I:float) + (r10 I:float) \l0x02b6: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x02ba: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Canvas)\l  (r8 I:java.lang.String)\l  (r7 I:int)\l  (r10 I:int)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x02bd|0x02bd: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.scalebar.DefaultMapScaleBar.drawScaleText((r5 'this' I:org.mapsforge.map.scalebar.DefaultMapScaleBar A[IMMUTABLE_TYPE, THIS]), (r6 I:org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_7;
Node_1 -> Node_11;
Node_1 -> Node_15;
Node_1 -> Node_19;
Node_1 -> Node_23;
Node_1 -> Node_27;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_27;
Node_6 -> Node_27;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_27;
Node_10 -> Node_27;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_27;
Node_14 -> Node_27;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_27;
Node_18 -> Node_27;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_27;
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_27;
Node_26 -> Node_27;
}

