digraph "CFG fororg.mapsforge.map.scalebar.DefaultMapScaleBar.drawScaleBar(Lorg\/mapsforge\/core\/graphics\/Canvas;IILorg\/mapsforge\/core\/graphics\/Paint;F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: INVOKE  (r3 I:int) = (r22 I:int), (r23 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x0008: SGET  (r4 I:int[]) =  org.mapsforge.map.scalebar.DefaultMapScaleBar.1.$SwitchMap$org$mapsforge$map$scalebar$MapScaleBar$ScaleBarPosition int[] \l0x000a: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x000c: IGET  (r6 I:org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition) = (r5 I:org.mapsforge.map.scalebar.DefaultMapScaleBar) org.mapsforge.map.scalebar.DefaultMapScaleBar.scaleBarPosition org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition \l0x000e: INVOKE  (r6 I:int) = \l  (r6 I:org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition)\l org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.ordinal():int type: VIRTUAL \l0x0012: AGET  (r4 I:?[int, float]) = (r4 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x0014: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1082130432(0x40800000, float:4.0) ?[int, float, short, byte, char])\l \l0x0016: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1092616192(0x41200000, float:10.0) ?[int, float, short, byte, char])\l \l0x0018: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6] t:[0x0598, 0x0497, 0x034a, 0x023d, 0x0154, 0x001f] \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x009c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0025: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0026: ARITH  (r1 I:float) = (r25 I:float) * (r6 I:float) \l0x0028: ARITH  (r1 I:float) = (r1 I:float) * (r8 I:float) \l0x002a: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x002b: CAST  (r3 I:float) = (float) (r3 I:int) \l0x002c: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x002d: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0031: ARITH  (r0 I:float) = (r25 I:float) * (r7 I:float) \l0x0033: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0037: INVOKE  (r2 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x003b: CAST  (r2 I:float) = (float) (r2 I:int) \l0x003c: ARITH  (r2 I:float) = (r2 I:float) \- (r1 I:float) \l0x003d: INVOKE  (r12 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0041: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0045: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0047: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0049: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x004c: INVOKE  (r2 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0050: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0051: ARITH  (r2 I:float) = (r2 I:float) \- (r1 I:float) \l0x0052: INVOKE  (r10 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0056: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x005a: INVOKE  (r2 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x005e: CAST  (r2 I:float) = (float) (r2 I:int) \l0x005f: ARITH  (r2 I:float) = (r2 I:float) \- (r1 I:float) \l0x0060: INVOKE  (r12 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0064: INVOKE  (r2 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0068: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0069: ARITH  (r2 I:float) = (r2 I:float) * (r8 I:float) \l0x006b: INVOKE  (r13 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x006f: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0072: INVOKE  (r2 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0076: CAST  (r2 I:float) = (float) (r2 I:int) \l0x0077: ARITH  (r2 I:float) = (r2 I:float) \- (r1 I:float) \l0x0078: ARITH  (r2 I:float) = (r2 I:float) \- (r3 I:float) \l0x0079: INVOKE  (r10 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x007d: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0081: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0085: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0086: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x0087: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x0088: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x008c: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0090: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0091: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0093: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0097: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x009c|0x009c: INVOKE  (r4 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x00a0: CAST  (r4 I:float) = (float) (r4 I:int) \l0x00a1: ARITH  (r6 I:float) = (r6 I:float) * (r25 I:float) \l0x00a3: ARITH  (r6 I:float) = (r6 I:float) * (r8 I:float) \l0x00a5: ARITH  (r4 I:float) = (r4 I:float) \- (r6 I:float) \l0x00a6: INVOKE  (r10 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x00aa: INVOKE  (r4 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x00ae: CAST  (r4 I:float) = (float) (r4 I:int) \l0x00af: ARITH  (r4 I:float) = (r4 I:float) * (r8 I:float) \l0x00b1: INVOKE  (r11 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x00b5: INVOKE  (r4 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x00b9: CAST  (r4 I:float) = (float) (r4 I:int) \l0x00ba: ARITH  (r4 I:float) = (r4 I:float) \- (r6 I:float) \l0x00bb: CAST  (r3 I:float) = (float) (r3 I:int) \l0x00bc: ARITH  (r4 I:float) = (r4 I:float) \- (r3 I:float) \l0x00bd: INVOKE  (r12 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x00c1: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x00c5: CAST  (r3 I:float) = (float) (r3 I:int) \l0x00c6: ARITH  (r3 I:float) = (r3 I:float) * (r8 I:float) \l0x00c8: INVOKE  (r13 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x00cc: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00ce: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x00d0: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x00d3: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x00d7: CAST  (r3 I:float) = (float) (r3 I:int) \l0x00d8: ARITH  (r3 I:float) = (r3 I:float) \- (r6 I:float) \l0x00d9: INVOKE  (r10 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x00dd: ARITH  (r2 I:float) = (r25 I:float) * (r7 I:float) \l0x00df: INVOKE  (r11 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x00e3: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x00e7: CAST  (r3 I:float) = (float) (r3 I:int) \l0x00e8: ARITH  (r3 I:float) = (r3 I:float) \- (r6 I:float) \l0x00e9: INVOKE  (r12 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x00ed: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x00f1: CAST  (r3 I:float) = (float) (r3 I:int) \l0x00f2: ARITH  (r3 I:float) = (r3 I:float) \- (r2 I:float) \l0x00f3: INVOKE  (r13 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x00f7: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x00fa: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x00fe: CAST  (r3 I:float) = (float) (r3 I:int) \l0x00ff: ARITH  (r3 I:float) = (r3 I:float) \- (r6 I:float) \l0x0100: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0101: ARITH  (r3 I:float) = (r3 I:float) \- (r0 I:float) \l0x0102: INVOKE  (r10 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0106: INVOKE  (r11 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x010a: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x010e: CAST  (r3 I:float) = (float) (r3 I:int) \l0x010f: ARITH  (r3 I:float) = (r3 I:float) \- (r6 I:float) \l0x0110: ARITH  (r3 I:float) = (r3 I:float) \- (r0 I:float) \l0x0111: INVOKE  (r12 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0115: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0119: CAST  (r0 I:float) = (float) (r0 I:int) \l0x011a: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x011c: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0120: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0123: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0127: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0128: ARITH  (r0 I:float) = (r0 I:float) \- (r6 I:float) \l0x0129: CAST  (r1 I:float) = (float) (r1 I:int) \l0x012a: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x012b: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x012f: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0133: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0134: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0136: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x013a: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x013e: CAST  (r0 I:float) = (float) (r0 I:int) \l0x013f: ARITH  (r0 I:float) = (r0 I:float) \- (r6 I:float) \l0x0140: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x0141: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0145: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0149: CAST  (r0 I:float) = (float) (r0 I:int) \l0x014a: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x014b: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x014f: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0154|0x0154: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x01b1 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0156|0x0156: ARITH  (r0 I:float) = (r25 I:float) * (r6 I:float) \l0x0158: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x015a: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x015e: ARITH  (r1 I:float) = (r25 I:float) * (r7 I:float) \l0x0160: INVOKE  (r11 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x0164: CAST  (r2 I:float) = (float) (r3 I:int) \l0x0165: ARITH  (r2 I:float) = (r2 I:float) + (r0 I:float) \l0x0166: INVOKE  (r12 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x016a: INVOKE  (r13 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x016e: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0170: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0172: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0175: INVOKE  (r15 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0179: INVOKE  (r16 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x017d: INVOKE  (r17 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0181: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0185: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0186: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0188: INVOKE  (r18 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x018c: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x018e: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0190: INVOKE  \l  (r14 I:org.mapsforge.core.graphics.Canvas)\l  (r15 I:int)\l  (r16 I:int)\l  (r17 I:int)\l  (r18 I:int)\l  (r19 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0193: INVOKE  (r10 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0197: INVOKE  (r11 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x019b: INVOKE  (r12 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x019f: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x01a3: CAST  (r0 I:float) = (float) (r0 I:int) \l0x01a4: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x01a6: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x01aa: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x01ac: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x01b1|0x01b1: ARITH  (r4 I:float) = (r25 I:float) * (r6 I:float) \l0x01b3: ARITH  (r4 I:float) = (r4 I:float) * (r8 I:float) \l0x01b5: INVOKE  (r10 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x01b9: INVOKE  (r6 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x01bd: CAST  (r6 I:float) = (float) (r6 I:int) \l0x01be: ARITH  (r6 I:float) = (r6 I:float) * (r8 I:float) \l0x01c0: INVOKE  (r11 I:int) = (r6 I:float) java.lang.Math.round(float):int type: STATIC \l0x01c4: CAST  (r3 I:float) = (float) (r3 I:int) \l0x01c5: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l0x01c6: INVOKE  (r12 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x01ca: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x01ce: CAST  (r3 I:float) = (float) (r3 I:int) \l0x01cf: ARITH  (r3 I:float) = (r3 I:float) * (r8 I:float) \l0x01d1: INVOKE  (r13 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x01d5: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01d7: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x01d9: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x01dc: INVOKE  (r15 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x01e0: ARITH  (r2 I:float) = (r25 I:float) * (r7 I:float) \l0x01e2: INVOKE  (r16 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x01e6: INVOKE  (r17 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x01ea: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x01ee: CAST  (r3 I:float) = (float) (r3 I:int) \l0x01ef: ARITH  (r3 I:float) = (r3 I:float) \- (r2 I:float) \l0x01f0: INVOKE  (r18 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x01f4: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x01f6: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x01f8: INVOKE  \l  (r14 I:org.mapsforge.core.graphics.Canvas)\l  (r15 I:int)\l  (r16 I:int)\l  (r17 I:int)\l  (r18 I:int)\l  (r19 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x01fb: CAST  (r0 I:float) = (float) (r0 I:int) \l0x01fc: ARITH  (r0 I:float) = (r0 I:float) + (r4 I:float) \l0x01fd: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0201: INVOKE  (r11 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0205: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0209: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x020d: CAST  (r0 I:float) = (float) (r0 I:int) \l0x020e: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0210: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0214: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0216: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0219: CAST  (r0 I:float) = (float) (r1 I:int) \l0x021a: ARITH  (r4 I:float) = (r4 I:float) + (r0 I:float) \l0x021b: INVOKE  (r10 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x021f: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0223: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0224: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0226: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x022a: INVOKE  (r12 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x022e: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0232: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0233: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x0234: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0238: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x023d|0x023d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x02be \l}"];
Node_10 [shape=record,label="{10\:\ 0x023f|0x023f: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0243: ARITH  (r0 I:int) = (r0 I:int) \- (r3 I:int) \l0x0244: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0245: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0247: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x024b: ARITH  (r0 I:float) = (r25 I:float) * (r7 I:float) \l0x024d: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0251: INVOKE  (r1 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0255: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l0x0256: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0257: ARITH  (r1 I:float) = (r1 I:float) * (r8 I:float) \l0x0259: INVOKE  (r12 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x025d: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0261: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0263: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0265: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0268: INVOKE  (r1 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x026c: ARITH  (r1 I:int) = (r1 I:int) \- (r3 I:int) \l0x026d: CAST  (r1 I:float) = (float) (r1 I:int) \l0x026e: ARITH  (r1 I:float) = (r1 I:float) * (r8 I:float) \l0x0270: INVOKE  (r10 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x0274: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0278: INVOKE  (r1 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x027c: ARITH  (r1 I:int) = (r1 I:int) \- (r3 I:int) \l0x027d: CAST  (r1 I:float) = (float) (r1 I:int) \l0x027e: ARITH  (r1 I:float) = (r1 I:float) * (r8 I:float) \l0x0280: INVOKE  (r12 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x0284: INVOKE  (r1 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0288: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0289: ARITH  (r1 I:float) = (r1 I:float) * (r8 I:float) \l0x028b: INVOKE  (r13 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x028f: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0292: INVOKE  (r1 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0296: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l0x0297: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0298: ARITH  (r1 I:float) = (r1 I:float) * (r8 I:float) \l0x029a: INVOKE  (r10 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x029e: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x02a2: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x02a6: ARITH  (r0 I:int) = (r0 I:int) + (r3 I:int) \l0x02a7: CAST  (r0 I:float) = (float) (r0 I:int) \l0x02a8: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x02aa: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x02ae: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x02b2: CAST  (r0 I:float) = (float) (r0 I:int) \l0x02b3: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x02b5: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x02b9: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x02be|0x02be: ARITH  (r4 I:float) = (r25 I:float) * (r6 I:float) \l0x02c0: ARITH  (r4 I:float) = (r4 I:float) * (r8 I:float) \l0x02c2: INVOKE  (r10 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x02c6: INVOKE  (r6 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x02ca: CAST  (r6 I:float) = (float) (r6 I:int) \l0x02cb: ARITH  (r6 I:float) = (r6 I:float) * (r8 I:float) \l0x02cd: INVOKE  (r11 I:int) = (r6 I:float) java.lang.Math.round(float):int type: STATIC \l0x02d1: CAST  (r3 I:float) = (float) (r3 I:int) \l0x02d2: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l0x02d3: INVOKE  (r12 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x02d7: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x02db: CAST  (r3 I:float) = (float) (r3 I:int) \l0x02dc: ARITH  (r3 I:float) = (r3 I:float) * (r8 I:float) \l0x02de: INVOKE  (r13 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x02e2: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x02e4: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x02e6: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x02e9: INVOKE  (r15 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x02ed: ARITH  (r2 I:float) = (r25 I:float) * (r7 I:float) \l0x02ef: INVOKE  (r16 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x02f3: INVOKE  (r17 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x02f7: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x02fb: CAST  (r3 I:float) = (float) (r3 I:int) \l0x02fc: ARITH  (r3 I:float) = (r3 I:float) \- (r2 I:float) \l0x02fd: INVOKE  (r18 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0301: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0303: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0305: INVOKE  \l  (r14 I:org.mapsforge.core.graphics.Canvas)\l  (r15 I:int)\l  (r16 I:int)\l  (r17 I:int)\l  (r18 I:int)\l  (r19 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0308: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0309: ARITH  (r0 I:float) = (r0 I:float) + (r4 I:float) \l0x030a: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x030e: INVOKE  (r11 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0312: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0316: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x031a: CAST  (r0 I:float) = (float) (r0 I:int) \l0x031b: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x031d: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0321: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0323: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0326: CAST  (r0 I:float) = (float) (r1 I:int) \l0x0327: ARITH  (r4 I:float) = (r4 I:float) + (r0 I:float) \l0x0328: INVOKE  (r10 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x032c: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0330: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0331: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0333: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0337: INVOKE  (r12 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x033b: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x033f: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0340: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x0341: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0345: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x034a|0x034a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x03df \l}"];
Node_13 [shape=record,label="{13\:\ 0x034c|0x034c: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0350: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0351: ARITH  (r1 I:float) = (r25 I:float) * (r6 I:float) \l0x0353: ARITH  (r1 I:float) = (r1 I:float) * (r8 I:float) \l0x0355: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x0356: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0357: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x0358: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x035c: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0360: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0361: ARITH  (r2 I:float) = (r25 I:float) * (r7 I:float) \l0x0363: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x0364: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0368: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x036c: CAST  (r0 I:float) = (float) (r0 I:int) \l0x036d: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x036e: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0372: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0376: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0377: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x0378: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x037c: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x037e: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0380: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0383: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0387: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0388: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x0389: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x038d: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0391: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0392: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0394: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0398: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x039c: CAST  (r0 I:float) = (float) (r0 I:int) \l0x039d: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x039e: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x03a2: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x03a6: CAST  (r0 I:float) = (float) (r0 I:int) \l0x03a7: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x03a8: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x03ac: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x03af: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x03b3: CAST  (r0 I:float) = (float) (r0 I:int) \l0x03b4: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x03b5: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x03b6: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x03ba: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x03be: CAST  (r0 I:float) = (float) (r0 I:int) \l0x03bf: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x03c1: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x03c5: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x03c9: CAST  (r0 I:float) = (float) (r0 I:int) \l0x03ca: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x03cb: ARITH  (r0 I:float) = (r0 I:float) \- (r3 I:float) \l0x03cc: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x03d0: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x03d4: CAST  (r0 I:float) = (float) (r0 I:int) \l0x03d5: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x03d6: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x03da: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x03df|0x03df: INVOKE  (r4 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x03e3: CAST  (r4 I:float) = (float) (r4 I:int) \l0x03e4: ARITH  (r6 I:float) = (r6 I:float) * (r25 I:float) \l0x03e6: ARITH  (r6 I:float) = (r6 I:float) * (r8 I:float) \l0x03e8: ARITH  (r4 I:float) = (r4 I:float) \- (r6 I:float) \l0x03e9: INVOKE  (r10 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x03ed: INVOKE  (r4 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x03f1: CAST  (r4 I:float) = (float) (r4 I:int) \l0x03f2: ARITH  (r4 I:float) = (r4 I:float) * (r8 I:float) \l0x03f4: INVOKE  (r11 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x03f8: INVOKE  (r4 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x03fc: CAST  (r4 I:float) = (float) (r4 I:int) \l0x03fd: ARITH  (r4 I:float) = (r4 I:float) \- (r6 I:float) \l0x03fe: CAST  (r3 I:float) = (float) (r3 I:int) \l0x03ff: ARITH  (r4 I:float) = (r4 I:float) \- (r3 I:float) \l0x0400: INVOKE  (r12 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x0404: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0408: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0409: ARITH  (r3 I:float) = (r3 I:float) * (r8 I:float) \l0x040b: INVOKE  (r13 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x040f: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0411: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0413: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0416: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x041a: CAST  (r3 I:float) = (float) (r3 I:int) \l0x041b: ARITH  (r3 I:float) = (r3 I:float) \- (r6 I:float) \l0x041c: INVOKE  (r10 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0420: ARITH  (r2 I:float) = (r25 I:float) * (r7 I:float) \l0x0422: INVOKE  (r11 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0426: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x042a: CAST  (r3 I:float) = (float) (r3 I:int) \l0x042b: ARITH  (r3 I:float) = (r3 I:float) \- (r6 I:float) \l0x042c: INVOKE  (r12 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0430: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0434: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0435: ARITH  (r3 I:float) = (r3 I:float) \- (r2 I:float) \l0x0436: INVOKE  (r13 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x043a: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x043d: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0441: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0442: ARITH  (r3 I:float) = (r3 I:float) \- (r6 I:float) \l0x0443: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0444: ARITH  (r3 I:float) = (r3 I:float) \- (r0 I:float) \l0x0445: INVOKE  (r10 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0449: INVOKE  (r11 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x044d: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0451: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0452: ARITH  (r3 I:float) = (r3 I:float) \- (r6 I:float) \l0x0453: ARITH  (r3 I:float) = (r3 I:float) \- (r0 I:float) \l0x0454: INVOKE  (r12 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0458: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x045c: CAST  (r0 I:float) = (float) (r0 I:int) \l0x045d: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x045f: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0463: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0466: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x046a: CAST  (r0 I:float) = (float) (r0 I:int) \l0x046b: ARITH  (r0 I:float) = (r0 I:float) \- (r6 I:float) \l0x046c: CAST  (r1 I:float) = (float) (r1 I:int) \l0x046d: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x046e: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0472: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0476: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0477: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0479: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x047d: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0481: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0482: ARITH  (r0 I:float) = (r0 I:float) \- (r6 I:float) \l0x0483: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x0484: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0488: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x048c: CAST  (r0 I:float) = (float) (r0 I:int) \l0x048d: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x048e: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0492: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0497|0x0497: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x050c \l}"];
Node_16 [shape=record,label="{16\:\ 0x0499|0x0499: ARITH  (r0 I:float) = (r25 I:float) * (r6 I:float) \l0x049b: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x049d: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x04a1: INVOKE  (r1 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x04a5: CAST  (r1 I:float) = (float) (r1 I:int) \l0x04a6: ARITH  (r2 I:float) = (r25 I:float) * (r7 I:float) \l0x04a8: ARITH  (r1 I:float) = (r1 I:float) \- (r2 I:float) \l0x04a9: INVOKE  (r11 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x04ad: CAST  (r1 I:float) = (float) (r3 I:int) \l0x04ae: ARITH  (r1 I:float) = (r1 I:float) + (r0 I:float) \l0x04af: INVOKE  (r12 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x04b3: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x04b7: CAST  (r3 I:float) = (float) (r3 I:int) \l0x04b8: ARITH  (r3 I:float) = (r3 I:float) \- (r2 I:float) \l0x04b9: INVOKE  (r13 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x04bd: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x04bf: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x04c1: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x04c4: INVOKE  (r15 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x04c8: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x04cc: CAST  (r3 I:float) = (float) (r3 I:int) \l0x04cd: ARITH  (r3 I:float) = (r3 I:float) * (r8 I:float) \l0x04cf: INVOKE  (r16 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x04d3: INVOKE  (r17 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x04d7: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x04db: CAST  (r0 I:float) = (float) (r0 I:int) \l0x04dc: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x04dd: INVOKE  (r18 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x04e1: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x04e3: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x04e5: INVOKE  \l  (r14 I:org.mapsforge.core.graphics.Canvas)\l  (r15 I:int)\l  (r16 I:int)\l  (r17 I:int)\l  (r18 I:int)\l  (r19 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x04e8: INVOKE  (r10 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x04ec: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x04f0: CAST  (r0 I:float) = (float) (r0 I:int) \l0x04f1: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x04f3: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x04f7: INVOKE  (r12 I:int) = (r1 I:float) java.lang.Math.round(float):int type: STATIC \l0x04fb: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x04ff: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0500: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x0501: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0505: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0507: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x050c|0x050c: ARITH  (r4 I:float) = (r25 I:float) * (r6 I:float) \l0x050e: ARITH  (r4 I:float) = (r4 I:float) * (r8 I:float) \l0x0510: INVOKE  (r10 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x0514: INVOKE  (r6 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0518: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0519: ARITH  (r6 I:float) = (r6 I:float) * (r8 I:float) \l0x051b: INVOKE  (r11 I:int) = (r6 I:float) java.lang.Math.round(float):int type: STATIC \l0x051f: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0520: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l0x0521: INVOKE  (r12 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0525: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0529: CAST  (r3 I:float) = (float) (r3 I:int) \l0x052a: ARITH  (r3 I:float) = (r3 I:float) * (r8 I:float) \l0x052c: INVOKE  (r13 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0530: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0532: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0534: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0537: INVOKE  (r15 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x053b: ARITH  (r2 I:float) = (r25 I:float) * (r7 I:float) \l0x053d: INVOKE  (r16 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0541: INVOKE  (r17 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x0545: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0549: CAST  (r3 I:float) = (float) (r3 I:int) \l0x054a: ARITH  (r3 I:float) = (r3 I:float) \- (r2 I:float) \l0x054b: INVOKE  (r18 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x054f: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0551: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0553: INVOKE  \l  (r14 I:org.mapsforge.core.graphics.Canvas)\l  (r15 I:int)\l  (r16 I:int)\l  (r17 I:int)\l  (r18 I:int)\l  (r19 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0556: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0557: ARITH  (r0 I:float) = (r0 I:float) + (r4 I:float) \l0x0558: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x055c: INVOKE  (r11 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0560: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0564: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0568: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0569: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x056b: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x056f: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0571: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0574: CAST  (r0 I:float) = (float) (r1 I:int) \l0x0575: ARITH  (r4 I:float) = (r4 I:float) + (r0 I:float) \l0x0576: INVOKE  (r10 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x057a: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x057e: CAST  (r0 I:float) = (float) (r0 I:int) \l0x057f: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0581: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0585: INVOKE  (r12 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x0589: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x058d: CAST  (r0 I:float) = (float) (r0 I:int) \l0x058e: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x058f: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0593: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x0598|0x0598: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0631 \l}"];
Node_19 [shape=record,label="{19\:\ 0x059a|0x059a: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x059e: ARITH  (r0 I:int) = (r0 I:int) \- (r3 I:int) \l0x059f: CAST  (r0 I:float) = (float) (r0 I:int) \l0x05a0: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x05a2: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x05a6: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x05aa: CAST  (r0 I:float) = (float) (r0 I:int) \l0x05ab: ARITH  (r1 I:float) = (r25 I:float) * (r7 I:float) \l0x05ad: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x05ae: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x05b2: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x05b6: ARITH  (r0 I:int) = (r0 I:int) + (r3 I:int) \l0x05b7: CAST  (r0 I:float) = (float) (r0 I:int) \l0x05b8: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x05ba: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x05be: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x05c2: CAST  (r0 I:float) = (float) (r0 I:int) \l0x05c3: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x05c4: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x05c8: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x05ca: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x05cc: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x05cf: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x05d3: ARITH  (r0 I:int) = (r0 I:int) \- (r3 I:int) \l0x05d4: CAST  (r0 I:float) = (float) (r0 I:int) \l0x05d5: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x05d7: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x05db: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x05df: CAST  (r0 I:float) = (float) (r0 I:int) \l0x05e0: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x05e2: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x05e6: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x05ea: ARITH  (r0 I:int) = (r0 I:int) \- (r3 I:int) \l0x05eb: CAST  (r0 I:float) = (float) (r0 I:int) \l0x05ec: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x05ee: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x05f2: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x05f6: CAST  (r0 I:float) = (float) (r0 I:int) \l0x05f7: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x05f8: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x05fc: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x05ff: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0603: ARITH  (r0 I:int) = (r0 I:int) + (r3 I:int) \l0x0604: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0605: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0607: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x060b: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x060f: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0610: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0612: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0616: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x061a: ARITH  (r0 I:int) = (r0 I:int) + (r3 I:int) \l0x061b: CAST  (r0 I:float) = (float) (r0 I:int) \l0x061c: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x061e: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0622: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x0626: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0627: ARITH  (r0 I:float) = (r0 I:float) \- (r1 I:float) \l0x0628: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x062c: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x0631|0x0631: ARITH  (r4 I:float) = (r25 I:float) * (r6 I:float) \l0x0633: ARITH  (r4 I:float) = (r4 I:float) * (r8 I:float) \l0x0635: INVOKE  (r10 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x0639: INVOKE  (r6 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x063d: CAST  (r6 I:float) = (float) (r6 I:int) \l0x063e: ARITH  (r6 I:float) = (r6 I:float) * (r8 I:float) \l0x0640: INVOKE  (r11 I:int) = (r6 I:float) java.lang.Math.round(float):int type: STATIC \l0x0644: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0645: ARITH  (r3 I:float) = (r3 I:float) + (r4 I:float) \l0x0646: INVOKE  (r12 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x064a: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x064e: CAST  (r3 I:float) = (float) (r3 I:int) \l0x064f: ARITH  (r3 I:float) = (r3 I:float) * (r8 I:float) \l0x0651: INVOKE  (r13 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0655: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0657: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0659: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x065c: INVOKE  (r15 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x0660: ARITH  (r2 I:float) = (r25 I:float) * (r7 I:float) \l0x0662: INVOKE  (r16 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0666: INVOKE  (r17 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x066a: INVOKE  (r3 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x066e: CAST  (r3 I:float) = (float) (r3 I:int) \l0x066f: ARITH  (r3 I:float) = (r3 I:float) \- (r2 I:float) \l0x0670: INVOKE  (r18 I:int) = (r3 I:float) java.lang.Math.round(float):int type: STATIC \l0x0674: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0676: MOVE  (r19 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0678: INVOKE  \l  (r14 I:org.mapsforge.core.graphics.Canvas)\l  (r15 I:int)\l  (r16 I:int)\l  (r17 I:int)\l  (r18 I:int)\l  (r19 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x067b: CAST  (r0 I:float) = (float) (r0 I:int) \l0x067c: ARITH  (r0 I:float) = (r0 I:float) + (r4 I:float) \l0x067d: INVOKE  (r10 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0681: INVOKE  (r11 I:int) = (r2 I:float) java.lang.Math.round(float):int type: STATIC \l0x0685: INVOKE  (r12 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0689: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x068d: CAST  (r0 I:float) = (float) (r0 I:int) \l0x068e: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x0690: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x0694: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0696: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0699: CAST  (r0 I:float) = (float) (r1 I:int) \l0x069a: ARITH  (r4 I:float) = (r4 I:float) + (r0 I:float) \l0x069b: INVOKE  (r10 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x069f: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x06a3: CAST  (r0 I:float) = (float) (r0 I:int) \l0x06a4: ARITH  (r0 I:float) = (r0 I:float) * (r8 I:float) \l0x06a6: INVOKE  (r11 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x06aa: INVOKE  (r12 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x06ae: INVOKE  (r0 I:int) = (r21 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x06b2: CAST  (r0 I:float) = (float) (r0 I:int) \l0x06b3: ARITH  (r0 I:float) = (r0 I:float) \- (r2 I:float) \l0x06b4: INVOKE  (r13 I:int) = (r0 I:float) java.lang.Math.round(float):int type: STATIC \l0x06b8: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Canvas)\l  (r10 I:int)\l  (r11 I:int)\l  (r12 I:int)\l  (r13 I:int)\l  (r14 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x06bb|0x06bb: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.scalebar.DefaultMapScaleBar.drawScaleBar((r20 'this' I:org.mapsforge.map.scalebar.DefaultMapScaleBar A[IMMUTABLE_TYPE, THIS]), (r21 I:org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_3;
Node_1 -> Node_6;
Node_1 -> Node_9;
Node_1 -> Node_12;
Node_1 -> Node_15;
Node_1 -> Node_18;
Node_1 -> Node_21;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_21;
Node_5 -> Node_21;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_21;
Node_8 -> Node_21;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_21;
Node_11 -> Node_21;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_21;
Node_14 -> Node_21;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_21;
Node_17 -> Node_21;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
}

