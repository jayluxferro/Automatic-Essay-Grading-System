digraph "CFG fororg.mapsforge.map.scalebar.MapScaleBar.calculatePositionLeft(III)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  org.mapsforge.map.scalebar.MapScaleBar.1.$SwitchMap$org$mapsforge$map$scalebar$MapScaleBar$ScaleBarPosition int[] \l0x0002: IGET  (r1 I:org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition) = (r2 I:org.mapsforge.map.scalebar.MapScaleBar) org.mapsforge.map.scalebar.MapScaleBar.scaleBarPosition org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition \l0x0004: INVOKE  (r1 I:int) = \l  (r1 I:org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition)\l org.mapsforge.map.scalebar.MapScaleBar.ScaleBarPosition.ordinal():int type: VIRTUAL \l0x0008: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6] t:[0x0031, 0x0031, 0x002c, 0x002c, 0x0026, 0x0026] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000f: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0014: CONST_STR  (r5 I:java.lang.String) =  \"unknown horizontal position: \" \l0x0016: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: IGET  (r5 I:org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition) = (r2 I:org.mapsforge.map.scalebar.MapScaleBar) org.mapsforge.map.scalebar.MapScaleBar.scaleBarPosition org.mapsforge.map.scalebar.MapScaleBar$ScaleBarPosition \l0x001b: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0022: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0025|0x0025: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: ARITH  (r4 I:int) = (r4 I:int) \- (r3 I:int) \l0x0027: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x0028: IGET  (r3 I:int) = (r2 I:org.mapsforge.map.scalebar.MapScaleBar) org.mapsforge.map.scalebar.MapScaleBar.marginHorizontal int \l0x002a: ARITH  (r4 I:int) = (r4 I:int) \- (r3 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002b|0x002b: RETURN  (r4 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: ARITH  (r4 I:int) = (r4 I:int) \- (r3 I:int) \l0x002d: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x002e: ARITH  (r4 I:int) = (r4 I:int) \/ (2 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: RETURN  (r4 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: IGET  (r3 I:int) = (r2 I:org.mapsforge.map.scalebar.MapScaleBar) org.mapsforge.map.scalebar.MapScaleBar.marginHorizontal int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{private int org.mapsforge.map.scalebar.MapScaleBar.calculatePositionLeft((r2 'this' I:org.mapsforge.map.scalebar.MapScaleBar A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

