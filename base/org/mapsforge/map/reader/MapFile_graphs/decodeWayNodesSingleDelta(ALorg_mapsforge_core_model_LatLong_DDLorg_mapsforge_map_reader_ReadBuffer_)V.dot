digraph "CFG fororg.mapsforge.map.reader.MapFile.decodeWayNodesSingleDelta([Lorg\/mapsforge\/core\/model\/LatLong;DDLorg\/mapsforge\/map\/reader\/ReadBuffer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double r11 = r11 + org.mapsforge.core.util.LatLongUtils.microdegreesToDegrees(r15.readSignedInt())\ldouble r13 = r13 + org.mapsforge.core.util.LatLongUtils.microdegreesToDegrees(r15.readSignedInt())\lr10[0] = new org.mapsforge.core.model.LatLong(r11, r13)\lr0 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|LOOP_START\lPHI: r0 r11 r13 \l  PHI: (r0v6 int) = (r0v5 int), (r0v7 int) binds: [B:0:0x0000, B:13:0x0056] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v2 double) = (r11v1 double), (r11v3 double) binds: [B:0:0x0000, B:13:0x0056] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 double) = (r13v1 double), (r13v4 double) binds: [B:0:0x0000, B:13:0x0056] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x001b\-\>B:13:0x0056\l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|if (r0 \>= r10.length) goto L_0x0060\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|double r11 = r11 + org.mapsforge.core.util.LatLongUtils.microdegreesToDegrees(r15.readSignedInt())\ldouble r13 = r13 + org.mapsforge.core.util.LatLongUtils.microdegreesToDegrees(r15.readSignedInt())\l}"];
Node_4 [shape=record,label="{4\:\ 0x0041|if ((r13 \> \-180.0d ? 1 : (r13 == \-180.0d ? 0 : \-1)) \>= 0) goto L_0x004b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0043}"];
Node_6 [shape=record,label="{6\:\ 0x0047|if (((\-180.0d \- r13) \> 0.001d ? 1 : ((\-180.0d \- r13) == 0.001d ? 0 : \-1)) \>= 0) goto L_0x004b\l}"];
Node_7 [shape=record,label="{7\:\ 0x0049|r13 = \-180.0d\l}"];
Node_8 [shape=record,label="{8\:\ 0x004b}"];
Node_9 [shape=record,label="{9\:\ 0x004d|if ((r13 \> 180.0d ? 1 : (r13 == 180.0d ? 0 : \-1)) \<= 0) goto L_0x0056\l}"];
Node_10 [shape=record,label="{10\:\ 0x004f}"];
Node_11 [shape=record,label="{11\:\ 0x0053|if (((r13 \- 180.0d) \> 0.001d ? 1 : ((r13 \- 180.0d) == 0.001d ? 0 : \-1)) \>= 0) goto L_0x0056\l}"];
Node_12 [shape=record,label="{12\:\ 0x0055|r13 = 180.0d\l}"];
Node_13 [shape=record,label="{13\:\ 0x0056|LOOP_END\lPHI: r13 \l  PHI: (r13v4 double) = (r13v3 double), (r13v3 double), (r13v5 double), (r13v6 double) binds: [B:18:0x0056, B:19:0x0056, B:16:0x0056, B:17:0x0056] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x001b\-\>B:13:0x0056\l|r10[r0] = new org.mapsforge.core.model.LatLong(r11, r13)\lint r0 = r0 + 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x0060|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ 0x0060|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0056|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ 0x0056|SYNTHETIC\l}"];
Node_19 [shape=record,label="{19\:\ 0x0056|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.reader.MapFile.decodeWayNodesSingleDelta((r9v0 'this' org.mapsforge.map.reader.MapFile A[IMMUTABLE_TYPE, THIS]), (r10v0 org.mapsforge.core.model.LatLong[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 org.mapsforge.map.reader.ReadBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_16;
Node_13 -> Node_1;
Node_15 -> Node_14;
Node_16 -> Node_13;
Node_17 -> Node_13;
Node_18 -> Node_13;
Node_19 -> Node_13;
}

