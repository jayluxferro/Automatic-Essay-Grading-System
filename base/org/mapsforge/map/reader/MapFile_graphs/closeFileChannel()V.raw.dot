digraph "CFG fororg.mapsforge.map.reader.MapFile.closeFileChannel()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:org.mapsforge.map.reader.IndexCache) = (r4 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.databaseIndexCache org.mapsforge.map.reader.IndexCache A[Catch:\{ Exception \-\> 0x0013 \}, TRY_ENTER]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 A[Catch:\{ Exception \-\> 0x0013 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IGET  (r0 I:org.mapsforge.map.reader.IndexCache) = (r4 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.databaseIndexCache org.mapsforge.map.reader.IndexCache A[Catch:\{ Exception \-\> 0x0013 \}]\l0x0006: INVOKE  (r0 I:org.mapsforge.map.reader.IndexCache) org.mapsforge.map.reader.IndexCache.destroy():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0013 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r0 I:java.nio.channels.FileChannel) = (r4 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.inputChannel java.nio.channels.FileChannel A[Catch:\{ Exception \-\> 0x0013 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001f A[Catch:\{ Exception \-\> 0x0013 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IGET  (r0 I:java.nio.channels.FileChannel) = (r4 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.inputChannel java.nio.channels.FileChannel A[Catch:\{ Exception \-\> 0x0013 \}]\l0x000f: INVOKE  (r0 I:java.nio.channels.FileChannel) java.nio.channels.FileChannel.close():void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0013 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x0013: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: SGET  (r1 I:java.util.logging.Logger) =  org.mapsforge.map.reader.MapFile.LOGGER java.util.logging.Logger \l0x0016: SGET  (r2 I:java.util.logging.Level) =  java.util.logging.Level.SEVERE java.util.logging.Level \l0x0018: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.Exception) java.lang.Exception.getMessage():java.lang.String type: VIRTUAL \l0x001c: INVOKE  \l  (r1 I:java.util.logging.Logger)\l  (r2 I:java.util.logging.Level)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.reader.MapFile.closeFileChannel((r4 'this' I:org.mapsforge.map.reader.MapFile A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_8;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

