digraph "CFG fororg.mapsforge.map.reader.MapFile.supportsTile(Lorg\/mapsforge\/core\/model\/Tile;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.mapsforge.core.model.BoundingBox) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.getBoundingBox():org.mapsforge.core.model.BoundingBox type: VIRTUAL \l0x0004: INVOKE  (r1 I:org.mapsforge.map.reader.header.MapFileInfo) = (r2 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.getMapFileInfo():org.mapsforge.map.reader.header.MapFileInfo type: VIRTUAL \l0x0008: IGET  (r1 I:org.mapsforge.core.model.BoundingBox) = (r1 I:org.mapsforge.map.reader.header.MapFileInfo) org.mapsforge.map.reader.header.MapFileInfo.boundingBox org.mapsforge.core.model.BoundingBox \l0x000a: INVOKE  (r0 I:boolean) = \l  (r0 I:org.mapsforge.core.model.BoundingBox)\l  (r1 I:org.mapsforge.core.model.BoundingBox)\l org.mapsforge.core.model.BoundingBox.intersects(org.mapsforge.core.model.BoundingBox):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IGET  (r0 I:byte) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0012: IGET  (r1 I:byte) = (r2 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.zoomLevelMin byte \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IGET  (r3 I:byte) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0018: IGET  (r0 I:byte) = (r2 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.zoomLevelMax byte \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r3 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.reader.MapFile.supportsTile((r2 'this' I:org.mapsforge.map.reader.MapFile A[IMMUTABLE_TYPE, THIS]), (r3 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
}

