digraph "CFG fororg.mapsforge.map.reader.MapFile.\<init\>(Ljava\/io\/File;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r3 I:org.mapsforge.map.datastore.MapDataStore)\l  (r5 I:java.lang.String)\l org.mapsforge.map.datastore.MapDataStore.\<init\>(java.lang.String):void type: DIRECT \l0x0003: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  (r5 I:byte), (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.zoomLevelMin byte \l0x0006: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (127(0x7f, float:1.78E\-43) ?[int, float, short, byte, char])\l \l0x0008: IPUT  (r5 I:byte), (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.zoomLevelMax byte \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x00ab \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|SYNTHETIC\lSplitter:B:2:0x000c\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x000c\l|0x000c: INVOKE  (r5 I:boolean) = (r4 I:java.io.File) java.io.File.exists():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0086 A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: INVOKE  (r5 I:boolean) = (r4 I:java.io.File) java.io.File.isFile():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x006f A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: INVOKE  (r5 I:boolean) = (r4 I:java.io.File) java.io.File.canRead():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0058 A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: NEW_INSTANCE  (r5 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ Exception \-\> 0x009d \}]\l0x0020: INVOKE  (r5 I:java.io.FileInputStream), (r4 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ Exception \-\> 0x009d \}]\l0x0023: INVOKE  (r5 I:java.nio.channels.FileChannel) = (r5 I:java.io.FileInputStream) java.io.FileInputStream.getChannel():java.nio.channels.FileChannel type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x0027: IPUT  \l  (r5 I:java.nio.channels.FileChannel)\l  (r3 I:org.mapsforge.map.reader.MapFile)\l org.mapsforge.map.reader.MapFile.inputChannel java.nio.channels.FileChannel A[Catch:\{ Exception \-\> 0x009d \}]\l0x0029: IGET  (r5 I:java.nio.channels.FileChannel) = (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.inputChannel java.nio.channels.FileChannel A[Catch:\{ Exception \-\> 0x009d \}]\l0x002b: INVOKE  (r0 I:long) = (r5 I:java.nio.channels.FileChannel) java.nio.channels.FileChannel.size():long type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x002f: IPUT  (r0 I:long), (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.fileSize long A[Catch:\{ Exception \-\> 0x009d \}]\l0x0031: NEW_INSTANCE  (r5 I:org.mapsforge.map.reader.ReadBuffer) =  org.mapsforge.map.reader.ReadBuffer A[Catch:\{ Exception \-\> 0x009d \}]\l0x0033: IGET  (r0 I:java.nio.channels.FileChannel) = (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.inputChannel java.nio.channels.FileChannel A[Catch:\{ Exception \-\> 0x009d \}]\l0x0035: INVOKE  \l  (r5 I:org.mapsforge.map.reader.ReadBuffer)\l  (r0 I:java.nio.channels.FileChannel)\l org.mapsforge.map.reader.ReadBuffer.\<init\>(java.nio.channels.FileChannel):void type: DIRECT A[Catch:\{ Exception \-\> 0x009d \}]\l0x0038: NEW_INSTANCE  (r0 I:org.mapsforge.map.reader.header.MapFileHeader) =  org.mapsforge.map.reader.header.MapFileHeader A[Catch:\{ Exception \-\> 0x009d \}]\l0x003a: INVOKE  (r0 I:org.mapsforge.map.reader.header.MapFileHeader) org.mapsforge.map.reader.header.MapFileHeader.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x009d \}]\l0x003d: IPUT  \l  (r0 I:org.mapsforge.map.reader.header.MapFileHeader)\l  (r3 I:org.mapsforge.map.reader.MapFile)\l org.mapsforge.map.reader.MapFile.mapFileHeader org.mapsforge.map.reader.header.MapFileHeader A[Catch:\{ Exception \-\> 0x009d \}]\l0x003f: IGET  (r0 I:org.mapsforge.map.reader.header.MapFileHeader) = (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.mapFileHeader org.mapsforge.map.reader.header.MapFileHeader A[Catch:\{ Exception \-\> 0x009d \}]\l0x0041: IGET  (r1 I:long) = (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.fileSize long A[Catch:\{ Exception \-\> 0x009d \}]\l0x0043: INVOKE  \l  (r0 I:org.mapsforge.map.reader.header.MapFileHeader)\l  (r5 I:org.mapsforge.map.reader.ReadBuffer)\l  (r1 I:long)\l org.mapsforge.map.reader.header.MapFileHeader.readHeader(org.mapsforge.map.reader.ReadBuffer, long):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x0046: NEW_INSTANCE  (r5 I:org.mapsforge.map.reader.IndexCache) =  org.mapsforge.map.reader.IndexCache A[Catch:\{ Exception \-\> 0x009d \}]\l0x0048: IGET  (r0 I:java.nio.channels.FileChannel) = (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.inputChannel java.nio.channels.FileChannel A[Catch:\{ Exception \-\> 0x009d \}]\l0x004a: CONST  (r1 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x009d \}]\l0x004c: INVOKE  \l  (r5 I:org.mapsforge.map.reader.IndexCache)\l  (r0 I:java.nio.channels.FileChannel)\l  (r1 I:int)\l org.mapsforge.map.reader.IndexCache.\<init\>(java.nio.channels.FileChannel, int):void type: DIRECT A[Catch:\{ Exception \-\> 0x009d \}]\l0x004f: IPUT  \l  (r5 I:org.mapsforge.map.reader.IndexCache)\l  (r3 I:org.mapsforge.map.reader.MapFile)\l org.mapsforge.map.reader.MapFile.databaseIndexCache org.mapsforge.map.reader.IndexCache A[Catch:\{ Exception \-\> 0x009d \}]\l0x0051: INVOKE  (r4 I:long) = (r4 I:java.io.File) java.io.File.lastModified():long type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x0055: IPUT  (r4 I:long), (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.timestamp long A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0057|0x0057: RETURN   A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0058|0x0058: NEW_INSTANCE  (r5 I:org.mapsforge.map.reader.header.MapFileException) =  org.mapsforge.map.reader.header.MapFileException A[Catch:\{ Exception \-\> 0x009d \}]\l0x005a: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x009d \}]\l0x005c: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x009d \}]\l0x005f: CONST_STR  (r1 I:java.lang.String) =  \"cannot read file: \" A[Catch:\{ Exception \-\> 0x009d \}]\l0x0061: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x0064: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x0067: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x006b: INVOKE  \l  (r5 I:org.mapsforge.map.reader.header.MapFileException)\l  (r4 I:java.lang.String)\l org.mapsforge.map.reader.header.MapFileException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x006e|0x006e: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x006f|0x006f: NEW_INSTANCE  (r5 I:org.mapsforge.map.reader.header.MapFileException) =  org.mapsforge.map.reader.header.MapFileException A[Catch:\{ Exception \-\> 0x009d \}]\l0x0071: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x009d \}]\l0x0073: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x009d \}]\l0x0076: CONST_STR  (r1 I:java.lang.String) =  \"not a file: \" A[Catch:\{ Exception \-\> 0x009d \}]\l0x0078: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x007b: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x007e: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x0082: INVOKE  \l  (r5 I:org.mapsforge.map.reader.header.MapFileException)\l  (r4 I:java.lang.String)\l org.mapsforge.map.reader.header.MapFileException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0085|0x0085: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0086|0x0086: NEW_INSTANCE  (r5 I:org.mapsforge.map.reader.header.MapFileException) =  org.mapsforge.map.reader.header.MapFileException A[Catch:\{ Exception \-\> 0x009d \}]\l0x0088: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x009d \}]\l0x008a: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x009d \}]\l0x008d: CONST_STR  (r1 I:java.lang.String) =  \"file does not exist: \" A[Catch:\{ Exception \-\> 0x009d \}]\l0x008f: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x0092: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x0095: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x009d \}]\l0x0099: INVOKE  \l  (r5 I:org.mapsforge.map.reader.header.MapFileException)\l  (r4 I:java.lang.String)\l org.mapsforge.map.reader.header.MapFileException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ Exception \-\> 0x009d \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x009c|0x009c: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ Exception \-\> 0x009d \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x009d|ExcHandler: Exception null\lSplitter:B:2:0x000c\l|0x009d: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x009e|0x009e: INVOKE  (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.closeFileChannel():void type: DIRECT \l0x00a1: NEW_INSTANCE  (r5 I:org.mapsforge.map.reader.header.MapFileException) =  org.mapsforge.map.reader.header.MapFileException \l0x00a3: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.Exception) java.lang.Exception.getMessage():java.lang.String type: VIRTUAL \l0x00a7: INVOKE  \l  (r5 I:org.mapsforge.map.reader.header.MapFileException)\l  (r4 I:java.lang.String)\l org.mapsforge.map.reader.header.MapFileException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x00aa|0x00aa: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00ab|0x00ab: NEW_INSTANCE  (r4 I:org.mapsforge.map.reader.header.MapFileException) =  org.mapsforge.map.reader.header.MapFileException \l0x00ad: CONST_STR  (r5 I:java.lang.String) =  \"mapFile must not be null\" \l0x00af: INVOKE  \l  (r4 I:org.mapsforge.map.reader.header.MapFileException)\l  (r5 I:java.lang.String)\l org.mapsforge.map.reader.header.MapFileException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x00b2|0x00b2: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.reader.MapFile.\<init\>((r3 'this' I:org.mapsforge.map.reader.MapFile A[IMMUTABLE_TYPE, THIS]), (r4 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
}

