digraph "CFG fororg.mapsforge.map.reader.MapFile.processWays(Lorg\/mapsforge\/map\/reader\/QueryParameters;ILorg\/mapsforge\/core\/model\/BoundingBox;ZDDLorg\/mapsforge\/map\/reader\/MapFile$Selector;Lorg\/mapsforge\/map\/reader\/ReadBuffer;)Ljava\/util\/List;" {
subgraph cluster_Region_897474242 {
label = "R(3:0|(3:(2:4|(2:6|7))|8|(2:(2:10|11)|(3:(3:(1:16)|19|(2:(1:21)|(13:22|23|27|31|35|39|43|(1:47)|(1:49)|(1:51)|52|55|(2:(2:57|58)|(2:59|(3:61|(1:79)(1:(1:78)(0))|80))))))(3:18|19|(0)(0))|17|81)))|82) | DECL_VAR: java.util.List\<org.mapsforge.core.model.Tag\> null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.mapsforge.map.reader.MapFile r7 = r27\lorg.mapsforge.map.reader.QueryParameters r8 = r28\lorg.mapsforge.map.reader.ReadBuffer r9 = r37\ljava.util.ArrayList java.util.ArrayList r10 = new java.util.ArrayList()\lorg.mapsforge.core.model.Tag[] org.mapsforge.core.model.Tag[] r11 = r7.mapFileHeader.getMapFileInfo().wayTags\lorg.mapsforge.core.model.BoundingBox org.mapsforge.core.model.BoundingBox r12 = r30.extendMeters(wayFilterDistance)\lint r13 = r29\l}"];
subgraph cluster_LoopRegion_1896793252 {
label = "LOOP:0: (3:(2:4|(2:6|7))|8|(2:(2:10|11)|(3:(3:(1:16)|19|(2:(1:21)|(13:22|23|27|31|35|39|43|(1:47)|(1:49)|(1:51)|52|55|(2:(2:57|58)|(2:59|(3:61|(1:79)(1:(1:78)(0))|80))))))(3:18|19|(0)(0))|17|81)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x001d|LOOP_START\lPHI: r7 r13 \l  PHI: (r7v1 org.mapsforge.map.reader.MapFile) = (r7v0 org.mapsforge.map.reader.MapFile), (r7v4 org.mapsforge.map.reader.MapFile) binds: [B:0:0x0000, B:81:0x01a1] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 int) = (r13v0 int), (r13v2 int) binds: [B:0:0x0000, B:81:0x01a1] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x001d\-\>B:81:0x01a1\l|if (r13 != 0) goto L_0x001f\l}"];
subgraph cluster_Region_753033253 {
label = "R(3:(2:4|(2:6|7))|8|(2:(2:10|11)|(3:(3:(1:16)|19|(2:(1:21)|(13:22|23|27|31|35|39|43|(1:47)|(1:49)|(1:51)|52|55|(2:(2:57|58)|(2:59|(3:61|(1:79)(1:(1:78)(0))|80))))))(3:18|19|(0)(0))|17|81)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_473889408 {
label = "IF [B:3:0x0028] THEN: R(2:4|(2:6|7)) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0028|if (r7.mapFileHeader.getMapFileInfo().debugFile == true) goto L_0x002a\l}"];
subgraph cluster_Region_1708727706 {
label = "R(2:4|(2:6|7))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x002a|java.lang.String java.lang.String r0 = r9.readUTF8EncodedString(32)\l}"];
subgraph cluster_IfRegion_1033344009 {
label = "IF [B:5:0x0036] THEN: R(2:6|7) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0036|if (r0.startsWith(\"\-\-\-WayStart\") == false) goto L_0x0038\l}"];
subgraph cluster_Region_287637495 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0038|LOGGER.warning(\"invalid way signature: \" + r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x004e|RETURN\l|return null\l}"];
}
}
}
}
Node_8 [shape=record,label="{8\:\ 0x004f|int int r0 = r37.readUnsignedInt()\l}"];
subgraph cluster_Region_175324769 {
label = "R(2:(2:10|11)|(3:(3:(1:16)|19|(2:(1:21)|(13:22|23|27|31|35|39|43|(1:47)|(1:49)|(1:51)|52|55|(2:(2:57|58)|(2:59|(3:61|(1:79)(1:(1:78)(0))|80))))))(3:18|19|(0)(0))|17|81))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_463561168 {
label = "IF [B:9:0x0053] THEN: R(2:10|11) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0053|if (r0 \< 0) goto L_0x0055\l}"];
subgraph cluster_Region_1674003545 {
label = "R(2:10|11)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0055|LOGGER.warning(\"invalid way data size: \" + r0)\l}"];
Node_11 [shape=record,label="{11\:\ 0x006b|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1050852271 {
label = "R(3:(3:(1:16)|19|(2:(1:21)|(13:22|23|27|31|35|39|43|(1:47)|(1:49)|(1:51)|52|55|(2:(2:57|58)|(2:59|(3:61|(1:79)(1:(1:78)(0))|80))))))(3:18|19|(0)(0))|17|81)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1848334376 {
label = "IF [B:13:0x006e] THEN: R(3:(1:16)|19|(2:(1:21)|(13:22|23|27|31|35|39|43|(1:47)|(1:49)|(1:51)|52|55|(2:(2:57|58)|(2:59|(3:61|(1:79)(1:(1:78)(0))|80)))))) ELSE: R(3:18|19|(0)(0))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x006e|if (r8.useTileBitmask == true) goto L_0x0070\l}"];
subgraph cluster_Region_113080394 {
label = "R(3:(1:16)|19|(2:(1:21)|(13:22|23|27|31|35|39|43|(1:47)|(1:49)|(1:51)|52|55|(2:(2:57|58)|(2:59|(3:61|(1:79)(1:(1:78)(0))|80))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1022668545 {
label = "IF [B:15:0x0077] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0077|if ((r37.readShort() & r8.queryTileBitmask) == 0) goto L_0x0079\l}"];
subgraph cluster_Region_853773350 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0079|r9.skipBytes(r0 \- 2)\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x0086|byte byte r0 = r37.readByte()\lbyte byte r15 = (byte) ((r0 & 240) \>\>\> 4)\ljava.util.List r6 = r9.readTags(r11, (byte) (r0 & 15))\l}"];
subgraph cluster_Region_980461010 {
label = "R(2:(1:21)|(13:22|23|27|31|35|39|43|(1:47)|(1:49)|(1:51)|52|55|(2:(2:57|58)|(2:59|(3:61|(1:79)(1:(1:78)(0))|80)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1693161313 {
label = "IF [B:20:0x0096] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0096|if (r6 != null) goto L_0x0099\l}"];
subgraph cluster_Region_876749768 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0098|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_780071252 {
label = "R(13:22|23|27|31|35|39|43|(1:47)|(1:49)|(1:51)|52|55|(2:(2:57|58)|(2:59|(3:61|(1:79)(1:(1:78)(0))|80))))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0099|byte byte r0 = r37.readByte()\l}"];
Node_23 [shape=record,label="{23\:\ 0x00a2|boolean r17 = (r0 & kotlin.jvm.internal.ByteCompanionObject.MIN_VALUE) != 0\l}"];
Node_27 [shape=record,label="{27\:\ 0x00ab|boolean r18 = (r0 & 64) != 0\l}"];
Node_31 [shape=record,label="{31\:\ 0x00b4|boolean r19 = (r0 & 32) != 0\l}"];
Node_35 [shape=record,label="{35\:\ 0x00bd|boolean r1 = (r0 & 16) != 0\l}"];
Node_39 [shape=record,label="{39\:\ 0x00c4|boolean r2 = (r0 & 8) != 0\l}"];
Node_43 [shape=record,label="{43\:\ 0x00cb|boolean r20 = (r0 & 4) != 0\l}"];
subgraph cluster_IfRegion_719116506 {
label = "IF [B:46:0x00d2] THEN: R(1:47) ELSE: null";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x00d2|PHI: r20 \l  PHI: (r20v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|if (r17 == true) goto L_0x00d4\l}"];
subgraph cluster_Region_1534148491 {
label = "R(1:47)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x00d4|r6.add(new org.mapsforge.core.model.Tag(\"name\", r7.extractLocalized(r37.readUTF8EncodedString())))\l}"];
}
}
subgraph cluster_IfRegion_1217251000 {
label = "IF [B:48:0x00e6] THEN: R(1:49) ELSE: null";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x00e6|if (r18 == true) goto L_0x00e8\l}"];
subgraph cluster_Region_1538728081 {
label = "R(1:49)";
node [shape=record,color=blue];
Node_49 [shape=record,label="{49\:\ 0x00e8|r6.add(new org.mapsforge.core.model.Tag(TAG_KEY_HOUSE_NUMBER, r37.readUTF8EncodedString()))\l}"];
}
}
subgraph cluster_IfRegion_1084435626 {
label = "IF [B:50:0x00f6] THEN: R(1:51) ELSE: null";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x00f6|if (r19 == true) goto L_0x00f8\l}"];
subgraph cluster_Region_1258841558 {
label = "R(1:51)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x00f8|r6.add(new org.mapsforge.core.model.Tag(TAG_KEY_REF, r37.readUTF8EncodedString()))\l}"];
}
}
Node_52 [shape=record,label="{52\:\ 0x0106|int[] r21 = r1 ? r7.readOptionalLabelPosition(r9) : null\l}"];
Node_55 [shape=record,label="{55\:\ 0x0111|PHI: r21 \l  PHI: (r21v0 int[]) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r3 = r7.readOptionalWayDataBlocksByte(r2, r9)\l}"];
subgraph cluster_Region_2144277158 {
label = "R(2:(2:57|58)|(2:59|(3:61|(1:79)(1:(1:78)(0))|80)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1921924809 {
label = "IF [B:56:0x0115] THEN: R(2:57|58) ELSE: null";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0115|if (r3 \< 1) goto L_0x0117\l}"];
subgraph cluster_Region_1045967434 {
label = "R(2:57|58)";
node [shape=record,color=blue];
Node_57 [shape=record,label="{57\:\ 0x0117|LOGGER.warning(\"invalid number of way data blocks: \" + r3)\l}"];
Node_58 [shape=record,label="{58\:\ 0x012d|RETURN\l|return null\l}"];
}
}
subgraph cluster_Region_1096360673 {
label = "R(2:59|(3:61|(1:79)(1:(1:78)(0))|80))";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x012e|int r4 = 0\l}"];
subgraph cluster_LoopRegion_407276351 {
label = "LOOP:1: (3:61|(1:79)(1:(1:78)(0))|80)";
node [shape=record,color=blue];
Node_60 [shape=record,label="{60\:\ 0x012f|LOOP_START\lPHI: r3 r4 r6 r7 \l  PHI: (r3v2 int) = (r3v1 int), (r3v4 int) binds: [B:59:0x012e, B:80:0x0197] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:59:0x012e, B:80:0x0197] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v1 java.util.List\<org.mapsforge.core.model.Tag\>) = (r6v0 java.util.List\<org.mapsforge.core.model.Tag\>), (r6v3 java.util.List\<org.mapsforge.core.model.Tag\>) binds: [B:59:0x012e, B:80:0x0197] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 org.mapsforge.map.reader.MapFile) = (r7v1 org.mapsforge.map.reader.MapFile), (r7v3 org.mapsforge.map.reader.MapFile) binds: [B:59:0x012e, B:80:0x0197] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:60:0x012f\-\>B:80:0x0197\l|if (r4 \< r3) goto L_0x0131\l}"];
subgraph cluster_Region_1124523934 {
label = "R(3:61|(1:79)(1:(1:78)(0))|80)";
node [shape=record,color=blue];
Node_61 [shape=record,label="{61\:\ 0x0131|int r22 = r3\lint r23 = r4\ljava.util.List\<org.mapsforge.core.model.Tag\> r14 = r6\lorg.mapsforge.core.model.LatLong[][] org.mapsforge.core.model.LatLong[][] r0 = processWayDataBlock(r32, r34, r20, r37)\l}"];
subgraph cluster_IfRegion_471633989 {
label = "IF [B:62:0x0146, B:63:0x0148, B:65:0x014c, B:67:0x0152] THEN: R(1:79) ELSE: R(1:(1:78)(0))";
node [shape=record,color=blue];
Node_62 [shape=record,label="{62\:\ 0x0146|if (r0 == null) goto L_0x0195\l}"];
Node_63 [shape=record,label="{63\:\ 0x0148|ADDED_TO_REGION\l|if (r31 == true) goto L_0x014a\l}"];
Node_65 [shape=record,label="{65\:\ 0x014c|ADDED_TO_REGION\l|if (wayFilterEnabled == true) goto L_0x014e\l}"];
Node_67 [shape=record,label="{67\:\ 0x0152|ADDED_TO_REGION\l|if (r12.intersectsArea(r0) == false) goto L_0x0195\l}"];
subgraph cluster_Region_1117922421 {
label = "R(1:79)";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x0195|org.mapsforge.map.reader.MapFile.Selector r3 = r36\l}"];
}
subgraph cluster_Region_1826405128 {
label = "R(1:(1:78)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_86657271 {
label = "IF [B:69:0x0159, B:70:0x015b, B:71:0x015d, B:72:0x015f, B:74:0x0165] THEN: R(1:78) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_69 [shape=record,label="{69\:\ 0x0159|if (org.mapsforge.map.reader.MapFile.Selector.ALL == r36) goto L_0x0167\l}"];
Node_70 [shape=record,label="{70\:\ 0x015b|ADDED_TO_REGION\l|if (r17 == true) goto L_0x0167\l}"];
Node_71 [shape=record,label="{71\:\ 0x015d|ADDED_TO_REGION\l|if (r18 == true) goto L_0x0167\l}"];
Node_72 [shape=record,label="{72\:\ 0x015f|ADDED_TO_REGION\l|if (r19 == true) goto L_0x0167\l}"];
Node_74 [shape=record,label="{74\:\ 0x0165|ADDED_TO_REGION\l|if (r7.wayAsLabelTagFilter(r14) == true) goto L_0x0167\l}"];
subgraph cluster_Region_850438281 {
label = "R(1:78)";
node [shape=record,color=blue];
Node_78 [shape=record,label="{78\:\ 0x018c|PHI: r2 \l  PHI: (r2v5 org.mapsforge.core.model.LatLong) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r10.add(new org.mapsforge.map.datastore.Way(r15, r14, r0, r21 != null ? new org.mapsforge.core.model.LatLong(r0[0][0].latitude + org.mapsforge.core.util.LatLongUtils.microdegreesToDegrees(r21[1]), r0[0][0].longitude + org.mapsforge.core.util.LatLongUtils.microdegreesToDegrees(r21[0])) : null))\l}"];
}
subgraph cluster_Region_1404951924 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_80 [shape=record,label="{80\:\ 0x0197|LOOP_END\lLOOP:1: B:60:0x012f\-\>B:80:0x0197\l|int r4 = r23 + 1\lr6 = r14\lr3 = r22\lr7 = r27\l}"];
}
}
}
}
}
}
}
subgraph cluster_Region_522732347 {
label = "R(3:18|19|(0)(0))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0082|r9.skipBytes(2)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0086|byte byte r0 = r37.readByte()\lbyte byte r15 = (byte) ((r0 & 240) \>\>\> 4)\ljava.util.List r6 = r9.readTags(r11, (byte) (r0 & 15))\l}"];
subgraph cluster_IfRegion_305399138 {
label = "IF [B:20:0x0096] THEN: R(0) ELSE: R(0)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0096|if (r6 != null) goto L_0x0099\l}"];
subgraph cluster_Region_1984227496 {
label = "R(0)";
node [shape=record,color=blue];
}
subgraph cluster_Region_1905888996 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_17 [shape=record,label="{17\:\ 0x007e|org.mapsforge.map.reader.MapFile.Selector r3 = r36\l}"];
Node_81 [shape=record,label="{81\:\ 0x01a1|LOOP_END\lLOOP:0: B:1:0x001d\-\>B:81:0x01a1\l|r13\-\-\lr7 = r27\l}"];
}
}
}
}
Node_82 [shape=record,label="{82\:\ 0x01a7|RETURN\l|return r10\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x001f}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x006c}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0070}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x00a4}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x00a7}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x00a9|PHI: r17 \l  PHI: (r17v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x00ad}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x00b0}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x00b2|PHI: r18 \l  PHI: (r18v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x00b6}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00b9}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x00bb|PHI: r19 \l  PHI: (r19v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x00bf}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00c1}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x00c2|PHI: r1 \l  PHI: (r1v9 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00c6}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00c8}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00c9|PHI: r2 \l  PHI: (r2v2 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x00cd}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x00d0}"];
Node_53 [shape=record,color=red,label="{53\:\ 0x0108}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x010f}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x014a}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x014e}"];
Node_68 [shape=record,color=red,label="{68\:\ 0x0155}"];
Node_73 [shape=record,color=red,label="{73\:\ 0x0161}"];
Node_75 [shape=record,color=red,label="{75\:\ 0x0167}"];
Node_76 [shape=record,color=red,label="{76\:\ 0x0169}"];
Node_77 [shape=record,color=red,label="{77\:\ 0x018b}"];
Node_83 [shape=record,color=red,label="{83\:\ 0x0117|SYNTHETIC\l}"];
Node_84 [shape=record,color=red,label="{84\:\ 0x0098|SYNTHETIC\l}"];
Node_85 [shape=record,color=red,label="{85\:\ 0x01a7|SYNTHETIC\l}"];
Node_86 [shape=record,color=red,label="{86\:\ 0x0038|SYNTHETIC\l}"];
Node_87 [shape=record,color=red,label="{87\:\ 0x0055|SYNTHETIC\l}"];
Node_88 [shape=record,color=red,label="{88\:\ 0x007e|SYNTHETIC\l}"];
Node_89 [shape=record,color=red,label="{89\:\ 0x0197|SYNTHETIC\l}"];
Node_90 [shape=record,color=red,label="{90\:\ 0x0197|SYNTHETIC\l}"];
Node_91 [shape=record,color=red,label="{91\:\ 0x0197|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private java.util.List\<org.mapsforge.map.datastore.Way\> org.mapsforge.map.reader.MapFile.processWays((r27v0 'this' org.mapsforge.map.reader.MapFile A[IMMUTABLE_TYPE, THIS]), (r28v0 org.mapsforge.map.reader.QueryParameters A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36v0 org.mapsforge.map.reader.MapFile$Selector A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r37v0 org.mapsforge.map.reader.ReadBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lRemoved duplicated region for block: B:22:0x0099 \lRemoved duplicated region for block: B:84:0x0098 A[SYNTHETIC]\lAnnotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/map\/reader\/QueryParameters;, I, Lorg\/mapsforge\/core\/model\/BoundingBox;, ZDD, Lorg\/mapsforge\/map\/reader\/MapFile$Selector;, Lorg\/mapsforge\/map\/reader\/ReadBuffer;, ), Ljava\/util\/List\<, Lorg\/mapsforge\/map\/datastore\/Way;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_85[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_8[style=dashed];
Node_5 -> Node_86;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_12[style=dashed];
Node_9 -> Node_87;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_19[style=dashed];
Node_16 -> Node_17;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_84[style=dashed];
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_25;
Node_27 -> Node_28;
Node_27 -> Node_29;
Node_31 -> Node_32;
Node_31 -> Node_33;
Node_35 -> Node_36;
Node_35 -> Node_37;
Node_39 -> Node_40;
Node_39 -> Node_41;
Node_43 -> Node_44;
Node_43 -> Node_45;
Node_46 -> Node_47;
Node_46 -> Node_48[style=dashed];
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_48 -> Node_50[style=dashed];
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_50 -> Node_52[style=dashed];
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_52 -> Node_54;
Node_55 -> Node_56;
Node_56 -> Node_59[style=dashed];
Node_56 -> Node_83;
Node_57 -> Node_58;
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_60 -> Node_88[style=dashed];
Node_61 -> Node_62;
Node_62 -> Node_63[style=dashed];
Node_62 -> Node_79;
Node_63 -> Node_64;
Node_63 -> Node_68[style=dashed];
Node_65 -> Node_66;
Node_65 -> Node_68[style=dashed];
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_79;
Node_79 -> Node_89;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_75;
Node_70 -> Node_71[style=dashed];
Node_70 -> Node_75;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_75;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_75;
Node_74 -> Node_75;
Node_74 -> Node_90[style=dashed];
Node_78 -> Node_91;
Node_80 -> Node_60;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_22;
Node_20 -> Node_84[style=dashed];
Node_17 -> Node_81;
Node_81 -> Node_1;
Node_2 -> Node_3;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_64 -> Node_65;
Node_66 -> Node_67;
Node_68 -> Node_69;
Node_73 -> Node_74;
Node_75 -> Node_76;
Node_75 -> Node_77;
Node_76 -> Node_78;
Node_77 -> Node_78;
Node_83 -> Node_57;
Node_84 -> Node_21;
Node_85 -> Node_82;
Node_86 -> Node_6;
Node_87 -> Node_10;
Node_88 -> Node_17;
Node_89 -> Node_80;
Node_90 -> Node_80;
Node_91 -> Node_80;
}

