digraph "CFG fororg.mapsforge.map.reader.MapFile.processPOIs(DDILorg\/mapsforge\/core\/model\/BoundingBox;ZLorg\/mapsforge\/map\/reader\/ReadBuffer;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r16\lr1 = r24\ljava.util.ArrayList r2 = new java.util.ArrayList()\lorg.mapsforge.core.model.Tag[] r3 = r0.mapFileHeader.getMapFileInfo().poiTags\lr4 = r21\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|LOOP_START\lPHI: r1 r3 r4 \l  PHI: (r1v1 org.mapsforge.map.reader.ReadBuffer) = (r1v0 org.mapsforge.map.reader.ReadBuffer), (r1v5 org.mapsforge.map.reader.ReadBuffer) binds: [B:0:0x0000, B:35:0x00da] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 org.mapsforge.core.model.Tag[]) = (r3v2 org.mapsforge.core.model.Tag[]), (r3v4 org.mapsforge.core.model.Tag[]) binds: [B:0:0x0000, B:35:0x00da] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:35:0x00da] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0013\-\>B:35:0x00da\l|if (r4 == 0) goto L_0x00e1\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015}"];
Node_3 [shape=record,label="{3\:\ 0x001e|if (r0.mapFileHeader.getMapFileInfo().debugFile == false) goto L_0x0045\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|java.lang.String r5 = r1.readUTF8EncodedString(32)\l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|if (r5.startsWith(\"***POIStart\") != false) goto L_0x0045\l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|java.util.logging.Logger r1 = LOGGER\ljava.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"invalid POI signature: \")\lr2.append(r5)\lr1.warning(r2.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|RETURN\l|return null\l}"];
Node_8 [shape=record,label="{8\:\ 0x0045|double r7 = r17 + org.mapsforge.core.util.LatLongUtils.microdegreesToDegrees(r24.readSignedInt())\ldouble r9 = r19 + org.mapsforge.core.util.LatLongUtils.microdegreesToDegrees(r24.readSignedInt())\lbyte r5 = r24.readByte()\lbyte r11 = (byte) ((r5 & 240) \>\>\> 4)\ljava.util.List r5 = r1.readTags(r3, (byte) (r5 & 15))\l}"];
Node_9 [shape=record,label="{9\:\ 0x0069|if (r5 != null) goto L_0x006c\l}"];
Node_10 [shape=record,label="{10\:\ 0x006b|RETURN\l|return null\l}"];
Node_11 [shape=record,label="{11\:\ 0x006c|byte r6 = r24.readByte()\lr12 = false\l}"];
Node_12 [shape=record,label="{12\:\ 0x0074|if ((r6 & kotlin.jvm.internal.ByteCompanionObject.MIN_VALUE) == 0) goto L_0x0078\l}"];
Node_13 [shape=record,label="{13\:\ 0x0076|r1 = true\l}"];
Node_14 [shape=record,label="{14\:\ 0x0078|r1 = false\l}"];
Node_15 [shape=record,label="{15\:\ 0x0079|PHI: r1 \l  PHI: (r1v3 boolean) = (r1v9 boolean), (r1v10 boolean) binds: [B:14:0x0078, B:13:0x0076] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x007b|if ((r6 & 64) == 0) goto L_0x007f\l}"];
Node_17 [shape=record,label="{17\:\ 0x007d|r14 = true\l}"];
Node_18 [shape=record,label="{18\:\ 0x007f|r14 = false\l}"];
Node_19 [shape=record,label="{19\:\ 0x0080|PHI: r14 \l  PHI: (r14v1 boolean) = (r14v2 boolean), (r14v3 boolean) binds: [B:18:0x007f, B:17:0x007d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0082|if ((r6 & 32) == 0) goto L_0x0085\l}"];
Node_21 [shape=record,label="{21\:\ 0x0084|r12 = true\l}"];
Node_22 [shape=record,label="{22\:\ 0x0085|PHI: r12 \l  PHI: (r12v1 boolean) = (r12v0 boolean), (r12v2 boolean) binds: [B:20:0x0082, B:21:0x0084] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == false) goto L_0x009b\l}"];
Node_23 [shape=record,label="{23\:\ 0x0087|r15 = r3\lr5.add(new org.mapsforge.core.model.Tag(\"name\", extractLocalized(r24.readUTF8EncodedString())))\l}"];
Node_24 [shape=record,label="{24\:\ 0x009b|r15 = r3\l}"];
Node_25 [shape=record,label="{25\:\ 0x009c|PHI: r15 \l  PHI: (r15v0 org.mapsforge.core.model.Tag[]) = (r15v1 org.mapsforge.core.model.Tag[]), (r15v2 org.mapsforge.core.model.Tag[]) binds: [B:24:0x009b, B:23:0x0087] A[DONT_GENERATE, DONT_INLINE]\l|if (r14 == false) goto L_0x00ac\l}"];
Node_26 [shape=record,label="{26\:\ 0x009e|r5.add(new org.mapsforge.core.model.Tag(TAG_KEY_HOUSE_NUMBER, r24.readUTF8EncodedString()))\l}"];
Node_27 [shape=record,label="{27\:\ 0x00ac|if (r12 == false) goto L_0x00c0\l}"];
Node_28 [shape=record,label="{28\:\ 0x00ae|r5.add(new org.mapsforge.core.model.Tag(TAG_KEY_ELE, java.lang.Integer.toString(r24.readSignedInt())))\l}"];
Node_29 [shape=record,label="{29\:\ 0x00c0|org.mapsforge.core.model.LatLong r1 = new org.mapsforge.core.model.LatLong(r7, r9)\l}"];
Node_30 [shape=record,label="{30\:\ 0x00c5|if (r23 == false) goto L_0x00d0\l}"];
Node_31 [shape=record,label="{31\:\ 0x00c7}"];
Node_32 [shape=record,label="{32\:\ 0x00cd|if (r22.contains(r1) == false) goto L_0x00da\l}"];
Node_33 [shape=record,label="{33\:\ 0x00d0|r6 = r22\l}"];
Node_34 [shape=record,label="{34\:\ 0x00d2|r2.add(new org.mapsforge.map.datastore.PointOfInterest(r11, r5, r1))\l}"];
Node_35 [shape=record,label="{35\:\ 0x00da|LOOP_END\lLOOP:0: B:1:0x0013\-\>B:35:0x00da\l|int r4 = r4 + \-1\lr3 = r15\lr1 = r24\l}"];
Node_36 [shape=record,label="{36\:\ 0x00e1|RETURN\l|return r2\l}"];
Node_37 [shape=record,label="{37\:\ 0x00e1|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x006b|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x002e|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x00da|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x00da|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private java.util.List\<org.mapsforge.map.datastore.PointOfInterest\> org.mapsforge.map.reader.MapFile.processPOIs((r16v0 'this' org.mapsforge.map.reader.MapFile A[IMMUTABLE_TYPE, THIS]), (r17v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 org.mapsforge.map.reader.ReadBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(DDI, Lorg\/mapsforge\/core\/model\/BoundingBox;, Z, Lorg\/mapsforge\/map\/reader\/ReadBuffer;, ), Ljava\/util\/List\<, Lorg\/mapsforge\/map\/datastore\/PointOfInterest;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_37;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_8;
Node_5 -> Node_39[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_38[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_34[style=dashed];
Node_32 -> Node_41;
Node_33 -> Node_34;
Node_34 -> Node_40;
Node_35 -> Node_1;
Node_37 -> Node_36;
Node_38 -> Node_10;
Node_39 -> Node_6;
Node_40 -> Node_35;
Node_41 -> Node_35;
}

