digraph "CFG fororg.mapsforge.map.reader.MapFile.processBlockSignature(Lorg\/mapsforge\/map\/reader\/ReadBuffer;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.reader.header.MapFileHeader) = (r3 I:org.mapsforge.map.reader.MapFile) org.mapsforge.map.reader.MapFile.mapFileHeader org.mapsforge.map.reader.header.MapFileHeader \l0x0002: INVOKE  (r0 I:org.mapsforge.map.reader.header.MapFileInfo) = (r0 I:org.mapsforge.map.reader.header.MapFileHeader) org.mapsforge.map.reader.header.MapFileHeader.getMapFileInfo():org.mapsforge.map.reader.header.MapFileInfo type: VIRTUAL \l0x0006: IGET  (r0 I:boolean) = (r0 I:org.mapsforge.map.reader.header.MapFileInfo) org.mapsforge.map.reader.header.MapFileInfo.debugFile boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0030 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST  (r0 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x000c: INVOKE  (r4 I:java.lang.String) = (r4 I:org.mapsforge.map.reader.ReadBuffer), (r0 I:int) org.mapsforge.map.reader.ReadBuffer.readUTF8EncodedString(int):java.lang.String type: VIRTUAL \l0x0010: CONST_STR  (r0 I:java.lang.String) =  \"###TileStart\" \l0x0012: INVOKE  (r0 I:boolean) = (r4 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.startsWith(java.lang.String):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0030 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: SGET  (r0 I:java.util.logging.Logger) =  org.mapsforge.map.reader.MapFile.LOGGER java.util.logging.Logger \l0x001a: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001c: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001f: CONST_STR  (r2 I:java.lang.String) =  \"invalid block signature: \" \l0x0021: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0024: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0027: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002b: INVOKE  (r0 I:java.util.logging.Logger), (r4 I:java.lang.String) java.util.logging.Logger.warning(java.lang.String):void type: VIRTUAL \l0x002e: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|0x002f: RETURN  (r4 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0031|0x0031: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean org.mapsforge.map.reader.MapFile.processBlockSignature((r3 'this' I:org.mapsforge.map.reader.MapFile A[IMMUTABLE_TYPE, THIS]), (r4 I:org.mapsforge.map.reader.ReadBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

