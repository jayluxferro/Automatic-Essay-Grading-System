digraph "CFG fororg.mapsforge.map.reader.QueryCalculations.calculateTileBitmask(Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r6 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileX int \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IGET  (r2 I:int) = (r7 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileX int \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r0 I:?[int, byte, short, char]) \> (r2 I:?[int, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r2 I:int) = (r6 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileY int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r3 I:int) = (r7 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileY int \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r2 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Tile) =  org.mapsforge.core.model.Tile \l0x000f: IGET  (r4 I:byte) = (r6 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0011: IGET  (r5 I:int) = (r6 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileSize int \l0x0013: INVOKE  \l  (r3 I:org.mapsforge.core.model.Tile)\l  (r0 I:int)\l  (r2 I:int)\l  (r4 I:byte)\l  (r5 I:int)\l org.mapsforge.core.model.Tile.\<init\>(int, int, byte, int):void type: DIRECT \l0x0016: INVOKE  (r3 I:int) = (r3 I:org.mapsforge.core.model.Tile), (r8 I:int) org.mapsforge.map.reader.QueryCalculations.calculateTileBitmask(org.mapsforge.core.model.Tile, int):int type: STATIC \l0x001a: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) \| (r3 I:?[int, boolean, short, byte, char]) \l0x001b: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{static int org.mapsforge.map.reader.QueryCalculations.calculateTileBitmask((r6 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_1;
}

