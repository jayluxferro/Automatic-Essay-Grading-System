digraph "CFG fororg.mapsforge.map.reader.QueryCalculations.calculateTileBitmask(Lorg\/mapsforge\/core\/model\/Tile;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: INVOKE  (r13 I:int) = (r13 I:org.mapsforge.core.model.Tile) org.mapsforge.map.reader.QueryCalculations.getFirstLevelTileBitmask(org.mapsforge.core.model.Tile):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: RETURN  (r13 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r1 I:int) = (r13 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileX int \l0x000a: ARITH  (r14 I:int) = (r14 I:int) + (\-2 int) \l0x000c: ARITH  (r1 I:int) = (r1 I:int) \>\>\> (r14 I:int) \l0x000d: CAST  (r1 I:long) = (long) (r1 I:int) \l0x000e: IGET  (r13 I:int) = (r13 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileY int \l0x0010: ARITH  (r13 I:int) = (r13 I:int) \>\>\> (r14 I:int) \l0x0011: CAST  (r13 I:long) = (long) (r13 I:int) \l0x0012: ARITH  (r3 I:long) = (r1 I:long) \>\>\> (r0 I:long) \l0x0014: ARITH  (r5 I:long) = (r13 I:long) \>\>\> (r0 I:long) \l0x0016: CONST  (r7 I:?[long, double]) = (2 ?[long, double]) \l0x0018: ARITH  (r3 I:long) = (r3 I:long) % (r7 I:long) \l0x0019: CONST  (r9 I:?[long, double]) = (0 ?[long, double]) \l0x001b: CMP_L  (r0 I:int) = (r3 I:long), (r9 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002a \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: ARITH  (r11 I:long) = (r5 I:long) % (r7 I:long) \l0x0021: CMP_L  (r11 I:int) = (r11 I:long), (r9 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002a \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: INVOKE  (r13 I:int) = (r1 I:long), (r13 I:long) org.mapsforge.map.reader.QueryCalculations.getSecondLevelTileBitmaskUpperLeft(long, long):int type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: RETURN  (r13 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: CONST  (r11 I:?[long, double]) = (1 ?[long, double]) \l0x002c: CMP_L  (r3 I:int) = (r3 I:long), (r11 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: ARITH  (r3 I:long) = (r5 I:long) % (r7 I:long) \l0x0032: CMP_L  (r3 I:int) = (r3 I:long), (r9 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|0x0034: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x003b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0036|0x0036: INVOKE  (r13 I:int) = (r1 I:long), (r13 I:long) org.mapsforge.map.reader.QueryCalculations.getSecondLevelTileBitmaskUpperRight(long, long):int type: STATIC \l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|0x003a: RETURN  (r13 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|0x003b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0047 \l}"];
Node_17 [shape=record,label="{17\:\ 0x003d|0x003d: ARITH  (r5 I:long) = (r5 I:long) % (r7 I:long) \l0x003e: CMP_L  (r0 I:int) = (r5 I:long), (r11 I:long) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|0x0040: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0047 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|0x0042: INVOKE  (r13 I:int) = (r1 I:long), (r13 I:long) org.mapsforge.map.reader.QueryCalculations.getSecondLevelTileBitmaskLowerLeft(long, long):int type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x0046|0x0046: RETURN  (r13 I:int) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0047|0x0047: INVOKE  (r13 I:int) = (r1 I:long), (r13 I:long) org.mapsforge.map.reader.QueryCalculations.getSecondLevelTileBitmaskLowerRight(long, long):int type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x004b|0x004b: RETURN  (r13 I:int) \l}"];
MethodNode[shape=record,label="{static int org.mapsforge.map.reader.QueryCalculations.calculateTileBitmask((r13 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_21 -> Node_22;
}

