digraph "CFG fororg.mapsforge.map.reader.IndexCacheEntryKey.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r7 != r8) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004}"];
Node_4 [shape=record,label="{4\:\ 0x0007|if ((r8 instanceof org.mapsforge.map.reader.IndexCacheEntryKey) != false) goto L_0x000a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|org.mapsforge.map.reader.IndexCacheEntryKey r8 = (org.mapsforge.map.reader.IndexCacheEntryKey) r8\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|if (r7.subFileParameter != null) goto L_0x0015\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010}"];
Node_9 [shape=record,label="{9\:\ 0x0012|if (r8.subFileParameter == null) goto L_0x0015\l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|RETURN\l|return false\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015}"];
Node_12 [shape=record,label="{12\:\ 0x0017|if (r7.subFileParameter == null) goto L_0x0024\l}"];
Node_13 [shape=record,label="{13\:\ 0x0019}"];
Node_14 [shape=record,label="{14\:\ 0x0021|if (r7.subFileParameter.equals(r8.subFileParameter) != false) goto L_0x0024\l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|RETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024}"];
Node_17 [shape=record,label="{17\:\ 0x002a|if ((r7.indexBlockNumber \> r8.indexBlockNumber ? 1 : (r7.indexBlockNumber == r8.indexBlockNumber ? 0 : \-1)) == 0) goto L_0x002d\l}"];
Node_18 [shape=record,label="{18\:\ 0x002c|RETURN\l|return false\l}"];
Node_19 [shape=record,label="{19\:\ 0x002d|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.reader.IndexCacheEntryKey.equals((r7v0 'this' org.mapsforge.map.reader.IndexCacheEntryKey A[IMMUTABLE_TYPE, THIS]), (r8v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
}

