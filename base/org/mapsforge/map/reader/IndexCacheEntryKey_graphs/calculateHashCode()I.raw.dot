digraph "CFG fororg.mapsforge.map.reader.IndexCacheEntryKey.calculateHashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.reader.header.SubFileParameter) = (r6 I:org.mapsforge.map.reader.IndexCacheEntryKey) org.mapsforge.map.reader.IndexCacheEntryKey.subFileParameter org.mapsforge.map.reader.header.SubFileParameter \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r0 I:org.mapsforge.map.reader.header.SubFileParameter) = (r6 I:org.mapsforge.map.reader.IndexCacheEntryKey) org.mapsforge.map.reader.IndexCacheEntryKey.subFileParameter org.mapsforge.map.reader.header.SubFileParameter \l0x0008: INVOKE  (r0 I:int) = (r0 I:org.mapsforge.map.reader.header.SubFileParameter) org.mapsforge.map.reader.header.SubFileParameter.hashCode():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (217(0xd9, float:3.04E\-43) ?[int, float, short, byte, char])\l \l0x000e: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x000f: ARITH  (r1 I:int) = (r1 I:int) * (31 int) \l0x0011: IGET  (r2 I:long) = (r6 I:org.mapsforge.map.reader.IndexCacheEntryKey) org.mapsforge.map.reader.IndexCacheEntryKey.indexBlockNumber long \l0x0013: IGET  (r4 I:long) = (r6 I:org.mapsforge.map.reader.IndexCacheEntryKey) org.mapsforge.map.reader.IndexCacheEntryKey.indexBlockNumber long \l0x0015: CONST  (r0 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0017: ARITH  (r4 I:long) = (r4 I:long) \>\>\> (r0 I:long) \l0x0018: ARITH  (r2 I:long) = (r2 I:long) ^ (r4 I:long) \l0x0019: CAST  (r0 I:int) = (int) (r2 I:long) \l0x001a: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private int org.mapsforge.map.reader.IndexCacheEntryKey.calculateHashCode((r6 'this' I:org.mapsforge.map.reader.IndexCacheEntryKey A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

