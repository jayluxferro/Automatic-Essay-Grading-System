digraph "CFG fororg.mapsforge.map.reader.Deserializer.getFiveBytesLong([BI)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: AGET  (r0 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l \l0x0002: CAST  (r0 I:long) = (long) (r0 I:int) \l0x0003: CONST  (r2 I:?[long, double]) = (255(0xff, double:1.26E\-321) ?[long, double]) \l0x0005: ARITH  (r0 I:long) = (r0 I:long) & (r2 I:long) \l0x0006: CONST  (r4 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0008: ARITH  (r0 I:long) = (r0 I:long) \<\< (r4 I:long) \l0x0009: ARITH  (r4 I:int) = (r8 I:int) + (1 int) \l0x000b: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x000d: CAST  (r4 I:long) = (long) (r4 I:int) \l0x000e: ARITH  (r4 I:long) = (r4 I:long) & (r2 I:long) \l0x000f: CONST  (r6 I:?[int, float, short, byte, char]) = (24 ?[int, float, short, byte, char]) \l0x0011: ARITH  (r4 I:long) = (r4 I:long) \<\< (r6 I:long) \l0x0012: ARITH  (r0 I:long) = (r0 I:long) \| (r4 I:long) \l0x0013: ARITH  (r4 I:int) = (r8 I:int) + (2 int) \l0x0015: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x0017: CAST  (r4 I:long) = (long) (r4 I:int) \l0x0018: ARITH  (r4 I:long) = (r4 I:long) & (r2 I:long) \l0x0019: CONST  (r6 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x001b: ARITH  (r4 I:long) = (r4 I:long) \<\< (r6 I:long) \l0x001c: ARITH  (r0 I:long) = (r0 I:long) \| (r4 I:long) \l0x001d: ARITH  (r4 I:int) = (r8 I:int) + (3 int) \l0x001f: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l0x0021: CAST  (r4 I:long) = (long) (r4 I:int) \l0x0022: ARITH  (r4 I:long) = (r4 I:long) & (r2 I:long) \l0x0023: CONST  (r6 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0025: ARITH  (r4 I:long) = (r4 I:long) \<\< (r6 I:long) \l0x0026: ARITH  (r0 I:long) = (r0 I:long) \| (r4 I:long) \l0x0027: ARITH  (r8 I:int) = (r8 I:int) + (4 int) \l0x0029: AGET  (r7 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l \l0x002b: CAST  (r7 I:long) = (long) (r7 I:int) \l0x002c: ARITH  (r7 I:long) = (r7 I:long) & (r2 I:long) \l0x002d: ARITH  (r7 I:long) = (r7 I:long) \| (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x002e|0x002e: RETURN  (r7 I:long) \l}"];
MethodNode[shape=record,label="{static long org.mapsforge.map.reader.Deserializer.getFiveBytesLong((r7 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

