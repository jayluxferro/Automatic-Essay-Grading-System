digraph "CFG fororg.mapsforge.map.reader.QueryParameters.calculateBaseTiles(Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/map\/reader\/header\/SubFileParameter;)V" {
subgraph cluster_Region_576276287 {
label = "R(1:(1:2)(1:(1:5)(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1324843808 {
label = "IF [B:1:0x0006] THEN: R(1:2) ELSE: R(1:(1:5)(1:6))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r7.zoomLevel \< r9.baseZoomLevel) goto L_0x0008\l}"];
subgraph cluster_Region_2114636736 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|int int r9 = r9.baseZoomLevel \- r7.zoomLevel\lr6.fromBaseTileX = (long) (r7.tileX \<\< r9)\lr6.fromBaseTileY = (long) (r7.tileY \<\< r9)\lint int r0 = 1 \<\< r9\lr6.toBaseTileX = (long) (((r8.tileX \<\< r9) + r0) \- 1)\lr6.toBaseTileY = (long) (((r8.tileY \<\< r9) + r0) \- 1)\lr6.useTileBitmask = false\l}"];
}
subgraph cluster_Region_1320694855 {
label = "R(1:(1:5)(1:6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1989753661 {
label = "IF [B:4:0x0032] THEN: R(1:5) ELSE: R(1:6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0032|if (r7.zoomLevel \> r9.baseZoomLevel) goto L_0x0034\l}"];
subgraph cluster_Region_323367444 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0034|int int r0 = r7.zoomLevel \- r9.baseZoomLevel\lr6.fromBaseTileX = (long) (r7.tileX \>\>\> r0)\lr6.fromBaseTileY = (long) (r7.tileY \>\>\> r0)\lr6.toBaseTileX = (long) (r8.tileX \>\>\> r0)\lr6.toBaseTileY = (long) (r8.tileY \>\>\> r0)\lr6.useTileBitmask = true\lr6.queryTileBitmask = org.mapsforge.map.reader.QueryCalculations.calculateTileBitmask(r7, r8, r0)\l}"];
}
subgraph cluster_Region_504494702 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x005a|r6.fromBaseTileX = (long) r7.tileX\lr6.fromBaseTileY = (long) r7.tileY\lr6.toBaseTileX = (long) r8.tileX\lr6.toBaseTileY = (long) r8.tileY\lr6.useTileBitmask = false\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x002e}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.reader.QueryParameters.calculateBaseTiles((r6v0 'this' org.mapsforge.map.reader.QueryParameters A[IMMUTABLE_TYPE, THIS]), (r7v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 org.mapsforge.map.reader.header.SubFileParameter A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

