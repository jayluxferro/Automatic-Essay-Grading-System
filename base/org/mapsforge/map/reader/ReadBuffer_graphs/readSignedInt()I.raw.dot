digraph "CFG fororg.mapsforge.map.reader.ReadBuffer.readSignedInt()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r2 I:byte[]) = (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferData byte[] \l0x0004: IGET  (r3 I:int) = (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x0006: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0008: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001e \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r2 I:byte[]) = (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferData byte[] \l0x000e: IGET  (r3 I:int) = (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x0010: ARITH  (r4 I:int) = (r3 I:int) + (1 int) \l0x0012: IPUT  (r4 I:int), (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x0014: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0016: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (127(0x7f, float:1.78E\-43) ?[int, float, short, byte, char]) \l0x0018: ARITH  (r2 I:int) = (r2 I:int) \<\< (r1 I:int) \l0x0019: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r2 I:?[int, boolean, short, byte, char]) \l0x001a: ARITH  (r1 I:int) = (r1 I:int) + (7 int) \l0x001c: CAST  (r1 I:byte) = (byte) (r1 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: IGET  (r2 I:byte[]) = (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferData byte[] \l0x0020: IGET  (r3 I:int) = (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x0022: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0024: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (64 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0039 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IGET  (r2 I:byte[]) = (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferData byte[] \l0x002a: IGET  (r3 I:int) = (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x002c: ARITH  (r4 I:int) = (r3 I:int) + (1 int) \l0x002e: IPUT  (r4 I:int), (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x0030: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0032: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x0034: ARITH  (r1 I:int) = (r2 I:int) \<\< (r1 I:int) \l0x0036: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l0x0037: NEG  (r0 I:int) = (r0 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|0x0038: RETURN  (r0 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: IGET  (r2 I:byte[]) = (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferData byte[] \l0x003b: IGET  (r3 I:int) = (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x003d: ARITH  (r4 I:int) = (r3 I:int) + (1 int) \l0x003f: IPUT  (r4 I:int), (r5 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x0041: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r3 I:?[int, short, byte, char])\l \l0x0043: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r2 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x0045: ARITH  (r1 I:int) = (r2 I:int) \<\< (r1 I:int) \l0x0047: ARITH  (r0 I:?[int, boolean, short, byte, char]) = (r0 I:?[int, boolean, short, byte, char]) \| (r1 I:?[int, boolean, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|0x0048: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int org.mapsforge.map.reader.ReadBuffer.readSignedInt((r5 'this' I:org.mapsforge.map.reader.ReadBuffer A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

