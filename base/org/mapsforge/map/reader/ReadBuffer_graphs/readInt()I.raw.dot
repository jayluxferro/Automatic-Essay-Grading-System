digraph "CFG fororg.mapsforge.map.reader.ReadBuffer.readInt()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r2 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x0002: ARITH  (r0 I:int) = (r0 I:int) + (4 int) \l0x0004: IPUT  (r0 I:int), (r2 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x0006: IGET  (r0 I:byte[]) = (r2 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferData byte[] \l0x0008: IGET  (r1 I:int) = (r2 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.bufferPosition int \l0x000a: ARITH  (r1 I:int) = (r1 I:int) + (\-4 int) \l0x000c: INVOKE  (r0 I:int) = (r0 I:byte[]), (r1 I:int) org.mapsforge.map.reader.Deserializer.getInt(byte[], int):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int org.mapsforge.map.reader.ReadBuffer.readInt((r2 'this' I:org.mapsforge.map.reader.ReadBuffer A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

