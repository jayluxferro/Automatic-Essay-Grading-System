digraph "CFG fororg.mapsforge.map.reader.header.SubFileParameter.calculateHashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:long) = (r7 I:org.mapsforge.map.reader.header.SubFileParameter) org.mapsforge.map.reader.header.SubFileParameter.startAddress long \l0x0002: IGET  (r2 I:long) = (r7 I:org.mapsforge.map.reader.header.SubFileParameter) org.mapsforge.map.reader.header.SubFileParameter.startAddress long \l0x0004: CONST  (r4 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l0x0006: ARITH  (r2 I:long) = (r2 I:long) \>\>\> (r4 I:long) \l0x0007: ARITH  (r0 I:long) = (r0 I:long) ^ (r2 I:long) \l0x0008: CAST  (r0 I:int) = (int) (r0 I:long) \l0x0009: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (217(0xd9, float:3.04E\-43) ?[int, float, short, byte, char])\l \l0x000b: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x000c: ARITH  (r1 I:int) = (r1 I:int) * (31 int) \l0x000e: IGET  (r2 I:long) = (r7 I:org.mapsforge.map.reader.header.SubFileParameter) org.mapsforge.map.reader.header.SubFileParameter.subFileSize long \l0x0010: IGET  (r5 I:long) = (r7 I:org.mapsforge.map.reader.header.SubFileParameter) org.mapsforge.map.reader.header.SubFileParameter.subFileSize long \l0x0012: ARITH  (r4 I:long) = (r5 I:long) \>\>\> (r4 I:long) \l0x0014: ARITH  (r2 I:long) = (r2 I:long) ^ (r4 I:long) \l0x0015: CAST  (r0 I:int) = (int) (r2 I:long) \l0x0016: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l0x0017: ARITH  (r1 I:int) = (r1 I:int) * (31 int) \l0x0019: IGET  (r0 I:byte) = (r7 I:org.mapsforge.map.reader.header.SubFileParameter) org.mapsforge.map.reader.header.SubFileParameter.baseZoomLevel byte \l0x001b: ARITH  (r1 I:int) = (r1 I:int) + (r0 I:int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{private int org.mapsforge.map.reader.header.SubFileParameter.calculateHashCode((r7 'this' I:org.mapsforge.map.reader.header.SubFileParameter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

