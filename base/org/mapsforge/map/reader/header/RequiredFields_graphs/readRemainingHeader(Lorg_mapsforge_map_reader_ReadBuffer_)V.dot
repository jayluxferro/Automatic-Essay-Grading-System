digraph "CFG fororg.mapsforge.map.reader.header.RequiredFields.readRemainingHeader(Lorg\/mapsforge\/map\/reader\/ReadBuffer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r3.readInt()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r0 \< 70) goto L_0x002b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r0 \> HEADER_SIZE_MAX) goto L_0x002b\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d}"];
Node_5 [shape=record,label="{5\:\ 0x0011|if (r3.readFromFile(r0) == false) goto L_0x0014\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"reading header data has failed: \")\lr1.append(r0)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|throw new org.mapsforge.map.reader.header.MapFileException(r1.toString())\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"invalid remaining header size: \")\lr1.append(r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|throw new org.mapsforge.map.reader.header.MapFileException(r1.toString())\l}"];
MethodNode[shape=record,label="{static void org.mapsforge.map.reader.header.RequiredFields.readRemainingHeader((r3v0 org.mapsforge.map.reader.ReadBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
}

