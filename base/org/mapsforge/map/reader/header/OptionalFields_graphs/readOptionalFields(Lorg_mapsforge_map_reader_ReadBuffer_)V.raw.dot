digraph "CFG fororg.mapsforge.map.reader.header.OptionalFields.readOptionalFields(Lorg\/mapsforge\/map\/reader\/ReadBuffer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r1 I:org.mapsforge.map.reader.header.OptionalFields)\l  (r2 I:org.mapsforge.map.reader.ReadBuffer)\l org.mapsforge.map.reader.header.OptionalFields.readMapStartPosition(org.mapsforge.map.reader.ReadBuffer):void type: DIRECT \l0x0003: INVOKE  \l  (r1 I:org.mapsforge.map.reader.header.OptionalFields)\l  (r2 I:org.mapsforge.map.reader.ReadBuffer)\l org.mapsforge.map.reader.header.OptionalFields.readMapStartZoomLevel(org.mapsforge.map.reader.ReadBuffer):void type: DIRECT \l0x0006: INVOKE  \l  (r1 I:org.mapsforge.map.reader.header.OptionalFields)\l  (r2 I:org.mapsforge.map.reader.ReadBuffer)\l org.mapsforge.map.reader.header.OptionalFields.readLanguagesPreference(org.mapsforge.map.reader.ReadBuffer):void type: DIRECT \l0x0009: IGET  (r0 I:boolean) = (r1 I:org.mapsforge.map.reader.header.OptionalFields) org.mapsforge.map.reader.header.OptionalFields.hasComment boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: INVOKE  (r0 I:java.lang.String) = (r2 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.readUTF8EncodedString():java.lang.String type: VIRTUAL \l0x0011: IPUT  \l  (r0 I:java.lang.String)\l  (r1 I:org.mapsforge.map.reader.header.OptionalFields)\l org.mapsforge.map.reader.header.OptionalFields.comment java.lang.String \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IGET  (r0 I:boolean) = (r1 I:org.mapsforge.map.reader.header.OptionalFields) org.mapsforge.map.reader.header.OptionalFields.hasCreatedBy boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: INVOKE  (r2 I:java.lang.String) = (r2 I:org.mapsforge.map.reader.ReadBuffer) org.mapsforge.map.reader.ReadBuffer.readUTF8EncodedString():java.lang.String type: VIRTUAL \l0x001b: IPUT  \l  (r2 I:java.lang.String)\l  (r1 I:org.mapsforge.map.reader.header.OptionalFields)\l org.mapsforge.map.reader.header.OptionalFields.createdBy java.lang.String \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.reader.header.OptionalFields.readOptionalFields((r1 'this' I:org.mapsforge.map.reader.header.OptionalFields A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.map.reader.ReadBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

