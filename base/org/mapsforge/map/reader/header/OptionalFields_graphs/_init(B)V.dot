digraph "CFG fororg.mapsforge.map.reader.header.OptionalFields.\<init\>(B)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if ((r4 & kotlin.jvm.internal.ByteCompanionObject.MIN_VALUE) == 0) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|r0 = true\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|r0 = false\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v18 boolean), (r0v19 boolean) binds: [B:3:0x000b, B:2:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|r3.isDebugFile = r0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if ((r4 & 64) == 0) goto L_0x0014\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|r0 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|r0 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|PHI: r0 \l  PHI: (r0v3 boolean) = (r0v16 boolean), (r0v17 boolean) binds: [B:7:0x0014, B:6:0x0012] A[DONT_GENERATE, DONT_INLINE]\l|r3.hasStartPosition = r0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|if ((r4 & 32) == 0) goto L_0x001d\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|r0 = true\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|r0 = false\l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|PHI: r0 \l  PHI: (r0v5 boolean) = (r0v14 boolean), (r0v15 boolean) binds: [B:11:0x001d, B:10:0x001b] A[DONT_GENERATE, DONT_INLINE]\l|r3.hasStartZoomLevel = r0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|if ((r4 & 16) == 0) goto L_0x0026\l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|r0 = true\l}"];
Node_15 [shape=record,label="{15\:\ 0x0026|r0 = false\l}"];
Node_16 [shape=record,label="{16\:\ 0x0027|PHI: r0 \l  PHI: (r0v7 boolean) = (r0v12 boolean), (r0v13 boolean) binds: [B:15:0x0026, B:14:0x0024] A[DONT_GENERATE, DONT_INLINE]\l|r3.hasLanguagesPreference = r0\l}"];
Node_17 [shape=record,label="{17\:\ 0x002b|if ((r4 & 8) == 0) goto L_0x002f\l}"];
Node_18 [shape=record,label="{18\:\ 0x002d|r0 = true\l}"];
Node_19 [shape=record,label="{19\:\ 0x002f|r0 = false\l}"];
Node_20 [shape=record,label="{20\:\ 0x0030|PHI: r0 \l  PHI: (r0v9 boolean) = (r0v10 boolean), (r0v11 boolean) binds: [B:19:0x002f, B:18:0x002d] A[DONT_GENERATE, DONT_INLINE]\l|r3.hasComment = r0\l}"];
Node_21 [shape=record,label="{21\:\ 0x0034|if ((r4 & 4) == 0) goto L_0x0037\l}"];
Node_22 [shape=record,label="{22\:\ 0x0036|r1 = true\l}"];
Node_23 [shape=record,label="{23\:\ 0x0037|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:21:0x0034, B:22:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|r3.hasCreatedBy = r1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0039|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.reader.header.OptionalFields.\<init\>((r3v0 'this' org.mapsforge.map.reader.header.OptionalFields A[IMMUTABLE_TYPE, THIS]), (r4v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

