digraph "CFG fororg.mapsforge.map.controller.FrameBufferController.calculateFrameBufferDimension(Lorg\/mapsforge\/core\/model\/Dimension;D)Lorg\/mapsforge\/core\/model\/Dimension;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = (int) (((double) r3.width) * r4)\lint r4 = (int) (((double) r3.height) * r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (org.mapsforge.core.util.Parameters.SQUARE_FRAME_BUFFER == false) goto L_0x002b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|float r5 = ((float) r3.width) \/ ((float) r3.height)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|if ((r5 \> maxAspectRatio ? 1 : (r5 == maxAspectRatio ? 0 : \-1)) \>= 0) goto L_0x002b\l}"];
Node_4 [shape=record,label="{4\:\ 0x001d}"];
Node_5 [shape=record,label="{5\:\ 0x0024|if ((r5 \> (1.0f \/ maxAspectRatio) ? 1 : (r5 == (1.0f \/ maxAspectRatio) ? 0 : \-1)) \<= 0) goto L_0x002b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|int r0 = java.lang.Math.max(r0, r4)\lr4 = r0\l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|PHI: r0 r4 \l  PHI: (r0v4 int) = (r0v3 int), (r0v3 int), (r0v3 int), (r0v5 int) binds: [B:1:0x000e, B:3:0x001b, B:5:0x0024, B:6:0x0026] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 int) = (r4v1 int), (r4v1 int), (r4v1 int), (r4v3 int) binds: [B:1:0x000e, B:3:0x001b, B:5:0x0024, B:6:0x0026] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|RETURN\l|return new org.mapsforge.core.model.Dimension(r0, r4)\l}"];
MethodNode[shape=record,label="{public static org.mapsforge.core.model.Dimension org.mapsforge.map.controller.FrameBufferController.calculateFrameBufferDimension((r3v0 org.mapsforge.core.model.Dimension A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

