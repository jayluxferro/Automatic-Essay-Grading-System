digraph "CFG fororg.mapsforge.map.controller.FrameBufferController.onChange()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.model.Model) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.model org.mapsforge.map.model.Model \l0x0002: IGET  (r0 I:org.mapsforge.map.model.MapViewDimension) = (r0 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.mapViewDimension org.mapsforge.map.model.MapViewDimension \l0x0004: INVOKE  (r3 I:org.mapsforge.core.model.Dimension) = (r0 I:org.mapsforge.map.model.MapViewDimension) org.mapsforge.map.model.MapViewDimension.getDimension():org.mapsforge.core.model.Dimension type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r0 I:org.mapsforge.map.model.Model) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.model org.mapsforge.map.model.Model \l0x000d: IGET  (r0 I:org.mapsforge.map.model.FrameBufferModel) = (r0 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.frameBufferModel org.mapsforge.map.model.FrameBufferModel \l0x000f: INVOKE  (r0 I:double) = (r0 I:org.mapsforge.map.model.FrameBufferModel) org.mapsforge.map.model.FrameBufferModel.getOverdrawFactor():double type: VIRTUAL \l0x0013: INVOKE  (r2 I:boolean) = \l  (r8 I:org.mapsforge.map.controller.FrameBufferController)\l  (r3 I:org.mapsforge.core.model.Dimension)\l  (r0 I:double)\l org.mapsforge.map.controller.FrameBufferController.dimensionChangeNeeded(org.mapsforge.core.model.Dimension, double):boolean type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: INVOKE  (r2 I:org.mapsforge.core.model.Dimension) = (r3 I:org.mapsforge.core.model.Dimension), (r0 I:double) org.mapsforge.map.controller.FrameBufferController.calculateFrameBufferDimension(org.mapsforge.core.model.Dimension, double):org.mapsforge.core.model.Dimension type: STATIC \l0x001d: SGET  (r4 I:boolean) =  org.mapsforge.core.util.Parameters.SQUARE_FRAME_BUFFER boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0041 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IGET  (r4 I:org.mapsforge.map.view.FrameBuffer) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.frameBuffer org.mapsforge.map.view.FrameBuffer \l0x0023: INVOKE  (r4 I:org.mapsforge.core.model.Dimension) = (r4 I:org.mapsforge.map.view.FrameBuffer) org.mapsforge.map.view.FrameBuffer.getDimension():org.mapsforge.core.model.Dimension type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0041 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: IGET  (r4 I:int) = (r2 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.width int \l0x002b: IGET  (r5 I:org.mapsforge.map.view.FrameBuffer) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.frameBuffer org.mapsforge.map.view.FrameBuffer \l0x002d: INVOKE  (r5 I:org.mapsforge.core.model.Dimension) = (r5 I:org.mapsforge.map.view.FrameBuffer) org.mapsforge.map.view.FrameBuffer.getDimension():org.mapsforge.core.model.Dimension type: VIRTUAL \l0x0031: IGET  (r5 I:int) = (r5 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.width int \l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|0x0033: IF  (r4 I:?[int, byte, short, char]) \> (r5 I:?[int, byte, short, char])  \-\> B:13:0x0041 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0035|0x0035: IGET  (r4 I:int) = (r2 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.height int \l0x0037: IGET  (r5 I:org.mapsforge.map.view.FrameBuffer) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.frameBuffer org.mapsforge.map.view.FrameBuffer \l0x0039: INVOKE  (r5 I:org.mapsforge.core.model.Dimension) = (r5 I:org.mapsforge.map.view.FrameBuffer) org.mapsforge.map.view.FrameBuffer.getDimension():org.mapsforge.core.model.Dimension type: VIRTUAL \l0x003d: IGET  (r5 I:int) = (r5 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.height int \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: IF  (r4 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:14:0x0046 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: IGET  (r4 I:org.mapsforge.map.view.FrameBuffer) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.frameBuffer org.mapsforge.map.view.FrameBuffer \l0x0043: INVOKE  \l  (r4 I:org.mapsforge.map.view.FrameBuffer)\l  (r2 I:org.mapsforge.core.model.Dimension)\l org.mapsforge.map.view.FrameBuffer.setDimension(org.mapsforge.core.model.Dimension):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: IPUT  \l  (r3 I:org.mapsforge.core.model.Dimension)\l  (r8 I:org.mapsforge.map.controller.FrameBufferController)\l org.mapsforge.map.controller.FrameBufferController.lastMapViewDimension org.mapsforge.core.model.Dimension \l0x0048: IPUT  \l  (r0 I:double)\l  (r8 I:org.mapsforge.map.controller.FrameBufferController)\l org.mapsforge.map.controller.FrameBufferController.lastOverdrawFactor double \l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|0x004a: IGET  (r0 I:org.mapsforge.map.model.Model) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.model org.mapsforge.map.model.Model \l0x004c: IGET  (r0 I:org.mapsforge.map.model.IMapViewPosition) = (r0 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.mapViewPosition org.mapsforge.map.model.IMapViewPosition \l}"];
Node_16 [shape=record,label="{16\:\ 0x004e|0x004e: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x004f|SYNTHETIC\lSplitter:B:17:0x004f\l}"];
Node_18 [shape=record,label="{18\:\ ?|Splitter:B:17:0x004f\l|0x004f: IGET  (r7 I:org.mapsforge.map.view.FrameBuffer) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.frameBuffer org.mapsforge.map.view.FrameBuffer A[Catch:\{ all \-\> 0x0076 \}, TRY_ENTER]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0051|0x0051: MONITOR_ENTER  (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0076 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0052|SYNTHETIC\lSplitter:B:20:0x0052\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x0052\l|0x0052: IGET  (r1 I:org.mapsforge.map.model.Model) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.model org.mapsforge.map.model.Model A[Catch:\{ all \-\> 0x0073 \}, TRY_ENTER]\l0x0054: IGET  (r1 I:org.mapsforge.map.model.FrameBufferModel) = (r1 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.frameBufferModel org.mapsforge.map.model.FrameBufferModel A[Catch:\{ all \-\> 0x0073 \}]\l0x0056: INVOKE  (r2 I:org.mapsforge.core.model.MapPosition) = (r1 I:org.mapsforge.map.model.FrameBufferModel) org.mapsforge.map.model.FrameBufferModel.getMapPosition():org.mapsforge.core.model.MapPosition type: VIRTUAL A[Catch:\{ all \-\> 0x0073 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x005a|0x005a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0070 A[Catch:\{ all \-\> 0x0073 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|0x005c: IGET  (r1 I:org.mapsforge.map.model.Model) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.model org.mapsforge.map.model.Model A[Catch:\{ all \-\> 0x0073 \}]\l0x005e: IGET  (r1 I:org.mapsforge.map.model.IMapViewPosition) = (r1 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.mapViewPosition org.mapsforge.map.model.IMapViewPosition A[Catch:\{ all \-\> 0x0073 \}]\l0x0060: INVOKE  (r4 I:double) = (r1 I:org.mapsforge.map.model.IMapViewPosition) org.mapsforge.map.model.IMapViewPosition.getScaleFactor():double type: INTERFACE A[Catch:\{ all \-\> 0x0073 \}]\l0x0064: IGET  (r1 I:org.mapsforge.map.model.Model) = (r8 I:org.mapsforge.map.controller.FrameBufferController) org.mapsforge.map.controller.FrameBufferController.model org.mapsforge.map.model.Model A[Catch:\{ all \-\> 0x0073 \}]\l0x0066: IGET  (r1 I:org.mapsforge.map.model.IMapViewPosition) = (r1 I:org.mapsforge.map.model.Model) org.mapsforge.map.model.Model.mapViewPosition org.mapsforge.map.model.IMapViewPosition A[Catch:\{ all \-\> 0x0073 \}]\l0x0068: INVOKE  (r6 I:org.mapsforge.core.model.LatLong) = (r1 I:org.mapsforge.map.model.IMapViewPosition) org.mapsforge.map.model.IMapViewPosition.getPivot():org.mapsforge.core.model.LatLong type: INTERFACE A[Catch:\{ all \-\> 0x0073 \}]\l0x006c: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0073 \}]\l0x006d: INVOKE  \l  (r1 I:org.mapsforge.map.controller.FrameBufferController)\l  (r2 I:org.mapsforge.core.model.MapPosition)\l  (r3 I:org.mapsforge.core.model.Dimension)\l  (r4 I:double)\l  (r6 I:org.mapsforge.core.model.LatLong)\l org.mapsforge.map.controller.FrameBufferController.adjustFrameBufferMatrix(org.mapsforge.core.model.MapPosition, org.mapsforge.core.model.Dimension, double, org.mapsforge.core.model.LatLong):void type: DIRECT A[Catch:\{ all \-\> 0x0073 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0070|0x0070: MONITOR_EXIT  (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0073 \}, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0071|SYNTHETIC\lSplitter:B:25:0x0071\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x0071\l|0x0071: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0076 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0072|0x0072: RETURN   \l}"];
Node_28 [shape=record,label="{28\:\ 0x0073|ExcHandler: all null\lSplitter:B:20:0x0052\l|0x0073: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_29 [shape=record,label="{29\:\ 0x0074|SYNTHETIC\lSplitter:B:29:0x0074\l}"];
Node_30 [shape=record,label="{30\:\ ?|Splitter:B:29:0x0074\l|0x0074: MONITOR_EXIT  (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0073 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0075|SYNTHETIC\lSplitter:B:31:0x0075\l}"];
Node_32 [shape=record,label="{32\:\ ?|Splitter:B:31:0x0075\l|0x0075: THROW  (r1 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0076 \}, TRY_ENTER]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0076|ExcHandler: all null\lSplitter:B:17:0x004f\l|0x0076: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0076 \}]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0077|0x0077: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0076 \}, TRY_LEAVE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0078|0x0078: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.controller.FrameBufferController.onChange((r8 'this' I:org.mapsforge.map.controller.FrameBufferController A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_33;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_33;
Node_26 -> Node_27;
Node_26 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_28;
Node_30 -> Node_31;
Node_30 -> Node_28;
Node_31 -> Node_32;
Node_31 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
}

