digraph "CFG fororg.mapsforge.map.controller.FrameBufferController.calculateFrameBufferDimension(Lorg\/mapsforge\/core\/model\/Dimension;D)Lorg\/mapsforge\/core\/model\/Dimension;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r3 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.width int \l0x0002: CAST  (r0 I:double) = (double) (r0 I:int) \l0x0003: ARITH  (r0 I:double) = (r0 I:double) * (r4 I:double) \l0x0005: CAST  (r0 I:int) = (int) (r0 I:double) \l0x0006: IGET  (r1 I:int) = (r3 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.height int \l0x0008: CAST  (r1 I:double) = (double) (r1 I:int) \l0x0009: ARITH  (r1 I:double) = (r1 I:double) * (r4 I:double) \l0x000b: CAST  (r4 I:int) = (int) (r1 I:double) \l0x000c: SGET  (r5 I:boolean) =  org.mapsforge.core.util.Parameters.SQUARE_FRAME_BUFFER boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IGET  (r5 I:int) = (r3 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.width int \l0x0012: CAST  (r5 I:float) = (float) (r5 I:int) \l0x0013: IGET  (r3 I:int) = (r3 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.height int \l0x0015: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0016: ARITH  (r5 I:float) = (r5 I:float) \/ (r3 I:float) \l0x0017: SGET  (r3 I:float) =  org.mapsforge.map.controller.FrameBufferController.maxAspectRatio float \l0x0019: CMP_G  (r3 I:int) = (r5 I:float), (r3 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: IF  (r3 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:7:0x002b \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x001f: SGET  (r1 I:float) =  org.mapsforge.map.controller.FrameBufferController.maxAspectRatio float \l0x0021: ARITH  (r3 I:float) = (r3 I:float) \/ (r1 I:float) \l0x0022: CMP_L  (r3 I:int) = (r5 I:float), (r3 I:float) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x002b \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: INVOKE  (r0 I:int) = (r0 I:int), (r4 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x002a: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Dimension) =  org.mapsforge.core.model.Dimension \l0x002d: INVOKE  \l  (r3 I:org.mapsforge.core.model.Dimension)\l  (r0 I:int)\l  (r4 I:int)\l org.mapsforge.core.model.Dimension.\<init\>(int, int):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: RETURN  (r3 I:org.mapsforge.core.model.Dimension) \l}"];
MethodNode[shape=record,label="{public static org.mapsforge.core.model.Dimension org.mapsforge.map.controller.FrameBufferController.calculateFrameBufferDimension((r3 I:org.mapsforge.core.model.Dimension A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

