digraph "CFG fororg.mapsforge.map.rendertheme.ExternalRenderTheme.\<init\>(Ljava\/io\/File;Lorg\/mapsforge\/map\/rendertheme\/XmlRenderThemeMenuCallback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: INVOKE  (r0 I:boolean) = (r5 I:java.io.File) java.io.File.exists():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0079 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: INVOKE  (r0 I:boolean) = (r5 I:java.io.File) java.io.File.isFile():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x005e \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: INVOKE  (r0 I:boolean) = (r5 I:java.io.File) java.io.File.canRead():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0043 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r0 I:long) = (r5 I:java.io.File) java.io.File.lastModified():long type: VIRTUAL \l0x0019: IPUT  \l  (r0 I:long)\l  (r4 I:org.mapsforge.map.rendertheme.ExternalRenderTheme)\l org.mapsforge.map.rendertheme.ExternalRenderTheme.lastModifiedTime long \l0x001b: IGET  (r0 I:long) = (r4 I:org.mapsforge.map.rendertheme.ExternalRenderTheme) org.mapsforge.map.rendertheme.ExternalRenderTheme.lastModifiedTime long \l0x001d: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x001f: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0028 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IPUT  \l  (r5 I:java.io.File)\l  (r4 I:org.mapsforge.map.rendertheme.ExternalRenderTheme)\l org.mapsforge.map.rendertheme.ExternalRenderTheme.renderThemeFile java.io.File \l0x0025: IPUT  \l  (r6 I:org.mapsforge.map.rendertheme.XmlRenderThemeMenuCallback)\l  (r4 I:org.mapsforge.map.rendertheme.ExternalRenderTheme)\l org.mapsforge.map.rendertheme.ExternalRenderTheme.menuCallback org.mapsforge.map.rendertheme.XmlRenderThemeMenuCallback \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0028|0x0028: NEW_INSTANCE  (r6 I:java.io.FileNotFoundException) =  java.io.FileNotFoundException \l0x002a: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002c: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002f: CONST_STR  (r1 I:java.lang.String) =  \"cannot read last modified time: \" \l0x0031: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  (r5 I:java.lang.String) = (r5 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x0038: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003b: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003f: INVOKE  \l  (r6 I:java.io.FileNotFoundException)\l  (r5 I:java.lang.String)\l java.io.FileNotFoundException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|0x0043: NEW_INSTANCE  (r6 I:java.io.FileNotFoundException) =  java.io.FileNotFoundException \l0x0045: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0047: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x004a: CONST_STR  (r1 I:java.lang.String) =  \"cannot read file: \" \l0x004c: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004f: INVOKE  (r5 I:java.lang.String) = (r5 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x0053: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0056: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005a: INVOKE  \l  (r6 I:java.io.FileNotFoundException)\l  (r5 I:java.lang.String)\l java.io.FileNotFoundException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x005d|0x005d: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x005e|0x005e: NEW_INSTANCE  (r6 I:java.io.FileNotFoundException) =  java.io.FileNotFoundException \l0x0060: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0062: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0065: CONST_STR  (r1 I:java.lang.String) =  \"not a file: \" \l0x0067: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006a: INVOKE  (r5 I:java.lang.String) = (r5 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x006e: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0071: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0075: INVOKE  \l  (r6 I:java.io.FileNotFoundException)\l  (r5 I:java.lang.String)\l java.io.FileNotFoundException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x0078|0x0078: THROW  (r6 I:java.lang.Throwable) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0079|0x0079: NEW_INSTANCE  (r6 I:java.io.FileNotFoundException) =  java.io.FileNotFoundException \l0x007b: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x007d: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0080: CONST_STR  (r1 I:java.lang.String) =  \"file does not exist: \" \l0x0082: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0085: INVOKE  (r5 I:java.lang.String) = (r5 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x0089: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008c: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0090: INVOKE  \l  (r6 I:java.io.FileNotFoundException)\l  (r5 I:java.lang.String)\l java.io.FileNotFoundException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x0093|0x0093: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.ExternalRenderTheme.\<init\>((r4 'this' I:org.mapsforge.map.rendertheme.ExternalRenderTheme A[IMMUTABLE_TYPE, THIS]), (r5 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.mapsforge.map.rendertheme.XmlRenderThemeMenuCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.FileNotFoundException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

