digraph "CFG fororg.mapsforge.map.rendertheme.rule.Rule.RuleVisitor.apply(Lorg\/mapsforge\/map\/rendertheme\/rule\/Rule;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r2 I:java.util.ArrayList\<org.mapsforge.map.rendertheme.rule.Rule\>) = (r2 I:org.mapsforge.map.rendertheme.rule.Rule) org.mapsforge.map.rendertheme.rule.Rule.subRules java.util.ArrayList \l0x0002: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.ArrayList) java.util.ArrayList.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r0 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0016 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r0 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r0 I:org.mapsforge.map.rendertheme.rule.Rule) = (org.mapsforge.map.rendertheme.rule.Rule) (r0 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  \l  (r1 I:org.mapsforge.map.rendertheme.rule.Rule$RuleVisitor)\l  (r0 I:org.mapsforge.map.rendertheme.rule.Rule)\l org.mapsforge.map.rendertheme.rule.Rule.RuleVisitor.apply(org.mapsforge.map.rendertheme.rule.Rule):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.rule.Rule.RuleVisitor.apply((r1 'this' I:org.mapsforge.map.rendertheme.rule.Rule$RuleVisitor A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.map.rendertheme.rule.Rule A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

