digraph "CFG fororg.mapsforge.map.rendertheme.rule.RenderThemeFuture.RenderThemeCallable.call()Lorg\/mapsforge\/map\/rendertheme\/rule\/RenderTheme;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.rendertheme.XmlRenderTheme) = \l  (r3 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture$RenderThemeCallable)\l org.mapsforge.map.rendertheme.rule.RenderThemeFuture.RenderThemeCallable.xmlRenderTheme org.mapsforge.map.rendertheme.XmlRenderTheme \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:org.mapsforge.map.model.DisplayModel) = \l  (r3 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture$RenderThemeCallable)\l org.mapsforge.map.rendertheme.rule.RenderThemeFuture.RenderThemeCallable.displayModel org.mapsforge.map.model.DisplayModel \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0009 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|SYNTHETIC\lSplitter:B:5:0x0009\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0009\l|0x0009: IGET  (r0 I:org.mapsforge.core.graphics.GraphicFactory) = \l  (r3 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture$RenderThemeCallable)\l org.mapsforge.map.rendertheme.rule.RenderThemeFuture.RenderThemeCallable.graphicFactory org.mapsforge.core.graphics.GraphicFactory A[Catch:\{ XmlPullParserException \-\> 0x001d, IOException \-\> 0x0014 \}, TRY_ENTER]\l0x000b: IGET  (r1 I:org.mapsforge.map.model.DisplayModel) = \l  (r3 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture$RenderThemeCallable)\l org.mapsforge.map.rendertheme.rule.RenderThemeFuture.RenderThemeCallable.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ XmlPullParserException \-\> 0x001d, IOException \-\> 0x0014 \}]\l0x000d: IGET  (r2 I:org.mapsforge.map.rendertheme.XmlRenderTheme) = \l  (r3 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture$RenderThemeCallable)\l org.mapsforge.map.rendertheme.rule.RenderThemeFuture.RenderThemeCallable.xmlRenderTheme org.mapsforge.map.rendertheme.XmlRenderTheme A[Catch:\{ XmlPullParserException \-\> 0x001d, IOException \-\> 0x0014 \}]\l0x000f: INVOKE  (r0 I:org.mapsforge.map.rendertheme.rule.RenderTheme) = \l  (r0 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r1 I:org.mapsforge.map.model.DisplayModel)\l  (r2 I:org.mapsforge.map.rendertheme.XmlRenderTheme)\l org.mapsforge.map.rendertheme.rule.RenderThemeHandler.getRenderTheme(org.mapsforge.core.graphics.GraphicFactory, org.mapsforge.map.model.DisplayModel, org.mapsforge.map.rendertheme.XmlRenderTheme):org.mapsforge.map.rendertheme.rule.RenderTheme type: STATIC A[Catch:\{ XmlPullParserException \-\> 0x001d, IOException \-\> 0x0014 \}]\l0x0012: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: RETURN  (r0 I:org.mapsforge.map.rendertheme.rule.RenderTheme) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|ExcHandler: IOException null\lSplitter:B:5:0x0009\l|0x0014: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0017: CONST_STR  (r2 I:java.lang.String) =  \"File error for XML rendertheme\" \l0x0019: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001d|ExcHandler: XmlPullParserException null\lSplitter:B:5:0x0009\l|0x001d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x001e|0x001e: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0020: CONST_STR  (r2 I:java.lang.String) =  \"Parse error for XML rendertheme\" \l0x0022: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|0x0025: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0026|0x0026: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|0x0027: RETURN  (r0 I:org.mapsforge.map.rendertheme.rule.RenderTheme) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.map.rendertheme.rule.RenderTheme org.mapsforge.map.rendertheme.rule.RenderThemeFuture.RenderThemeCallable.call((r3 'this' I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture$RenderThemeCallable A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_14[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_11;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

