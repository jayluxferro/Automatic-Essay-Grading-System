digraph "CFG fororg.mapsforge.map.rendertheme.rule.RenderThemeFuture.RenderThemeCallable.call()Lorg\/mapsforge\/map\/rendertheme\/rule\/RenderTheme;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3.xmlRenderTheme == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if (r3.displayModel != null) goto L_0x0009\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|SYNTHETIC\lSplitter:B:4:0x0009\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ XmlPullParserException \-\> 0x001d, IOException \-\> 0x0014 \}\lSplitter:B:4:0x0009\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|RETURN\l|return org.mapsforge.map.rendertheme.rule.RenderThemeHandler.getRenderTheme(r3.graphicFactory, r3.displayModel, r3.xmlRenderTheme)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|ExcHandler: IOException (r0v5 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:4:0x0009\l|java.io.IOException r0 = move\-exception\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015}"];
Node_9 [shape=record,label="{9\:\ 0x001c|throw new java.lang.IllegalArgumentException(\"File error for XML rendertheme\", r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|ExcHandler: XmlPullParserException (r0v4 'e' org.xmlpull.v1.XmlPullParserException A[CUSTOM_DECLARE])\lSplitter:B:4:0x0009\l|org.xmlpull.v1.XmlPullParserException r0 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e}"];
Node_12 [shape=record,label="{12\:\ 0x0025|throw new java.lang.IllegalArgumentException(\"Parse error for XML rendertheme\", r0)\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{public org.mapsforge.map.rendertheme.rule.RenderTheme org.mapsforge.map.rendertheme.rule.RenderThemeFuture.RenderThemeCallable.call((r3v0 'this' org.mapsforge.map.rendertheme.rule.RenderThemeFuture$RenderThemeCallable A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_14[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_10;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

