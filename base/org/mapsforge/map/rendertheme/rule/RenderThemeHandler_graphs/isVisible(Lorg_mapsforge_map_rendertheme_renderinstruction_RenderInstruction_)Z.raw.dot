digraph "CFG fororg.mapsforge.map.rendertheme.rule.RenderThemeHandler.isVisible(Lorg\/mapsforge\/map\/rendertheme\/renderinstruction\/RenderInstruction;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Set\<java.lang.String\>) = \l  (r1 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler)\l org.mapsforge.map.rendertheme.rule.RenderThemeHandler.categories java.util.Set \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0019 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:java.lang.String) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction)\l org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.getCategory():java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0019 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r0 I:java.util.Set\<java.lang.String\>) = \l  (r1 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler)\l org.mapsforge.map.rendertheme.rule.RenderThemeHandler.categories java.util.Set \l0x000c: INVOKE  (r2 I:java.lang.String) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction)\l org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.getCategory():java.lang.String type: VIRTUAL \l0x0010: INVOKE  (r2 I:boolean) = (r0 I:java.util.Set), (r2 I:java.lang.Object) java.util.Set.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean org.mapsforge.map.rendertheme.rule.RenderThemeHandler.isVisible((r1 'this' I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_7;
Node_5 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

