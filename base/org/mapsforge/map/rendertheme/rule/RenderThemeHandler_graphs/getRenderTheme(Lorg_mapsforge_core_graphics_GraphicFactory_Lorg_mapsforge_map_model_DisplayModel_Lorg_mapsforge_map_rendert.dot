digraph "CFG fororg.mapsforge.map.rendertheme.rule.RenderThemeHandler.getRenderTheme(Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/model\/DisplayModel;Lorg\/mapsforge\/map\/rendertheme\/XmlRenderTheme;)Lorg\/mapsforge\/map\/rendertheme\/rule\/RenderTheme;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.xmlpull.v1.XmlPullParser r0 = getXmlPullParserFactory().newPullParser()\lr2 = r9\lr3 = r10\lorg.mapsforge.map.rendertheme.rule.RenderThemeHandler r1 = new org.mapsforge.map.rendertheme.rule.RenderThemeHandler(r2, r3, r11.getRelativePathPrefix(), r11, r0)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|SYNTHETIC\lSplitter:B:1:0x0017\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0029 \}\lSplitter:B:1:0x0017\l|java.io.InputStream r10 = r11.getRenderThemeAsStream()     \/\/ Catch:\{ all \-\> 0x0029 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|SYNTHETIC\lSplitter:B:3:0x001b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ all \-\> 0x0027 \}\lSplitter:B:3:0x001b\l|r0.setInput(r10, (java.lang.String) null)     \/\/ Catch:\{ all \-\> 0x0027 \}\lr1.processRenderTheme()     \/\/ Catch:\{ all \-\> 0x0027 \}\lorg.mapsforge.map.rendertheme.rule.RenderTheme r9 = r1.renderTheme     \/\/ Catch:\{ all \-\> 0x0027 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|org.mapsforge.core.util.IOUtils.closeQuietly(r10)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|RETURN\l|return r9\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:3:0x001b\l|java.lang.Throwable r9 = th\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|ExcHandler: all (r10v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0017\l|java.lang.Throwable r10 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|r8 = r10\lr10 = null\lr9 = r8\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|PHI: r9 r10 \l  PHI: (r9v2 'th' java.lang.Throwable) = (r9v3 'th' java.lang.Throwable), (r9v4 'th' java.lang.Throwable) binds: [B:9:0x002a, B:7:0x0027] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 java.io.InputStream) = (r10v3 java.io.InputStream), (r10v4 java.io.InputStream) binds: [B:9:0x002a, B:7:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|org.mapsforge.core.util.IOUtils.closeQuietly(r10)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|throw r9\l}"];
MethodNode[shape=record,label="{public static org.mapsforge.map.rendertheme.rule.RenderTheme org.mapsforge.map.rendertheme.rule.RenderThemeHandler.getRenderTheme((r9v0 org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 org.mapsforge.map.rendertheme.XmlRenderTheme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

