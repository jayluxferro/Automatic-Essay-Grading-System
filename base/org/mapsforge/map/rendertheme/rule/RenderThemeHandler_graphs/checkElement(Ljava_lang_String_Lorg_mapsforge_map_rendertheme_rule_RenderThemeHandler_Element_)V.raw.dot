digraph "CFG fororg.mapsforge.map.rendertheme.rule.RenderThemeHandler.checkElement(Ljava\/lang\/String;Lorg\/mapsforge\/map\/rendertheme\/rule\/RenderThemeHandler$Element;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:int[]) =  org.mapsforge.map.rendertheme.rule.RenderThemeHandler.1.$SwitchMap$org$mapsforge$map$rendertheme$rule$RenderThemeHandler$Element int[] \l0x0002: INVOKE  (r1 I:int) = \l  (r4 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element)\l org.mapsforge.map.rendertheme.rule.RenderThemeHandler.Element.ordinal():int type: VIRTUAL \l0x0006: AGET  (r0 I:?[int, float]) = (r0 I:?[int, float][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4] t:[0x006e, 0x0045, 0x0023, 0x0022] \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: NEW_INSTANCE  (r3 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x000d: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000f: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0012: CONST_STR  (r1 I:java.lang.String) =  \"unknown enum value: \" \l0x0014: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0017: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x001a: INVOKE  (r4 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x001e: INVOKE  \l  (r3 I:org.xmlpull.v1.XmlPullParserException)\l  (r4 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|0x0021: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: IGET  (r4 I:java.util.Stack\<org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element\>) = \l  (r2 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler)\l org.mapsforge.map.rendertheme.rule.RenderThemeHandler.elementStack java.util.Stack \l0x0025: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Stack) java.util.Stack.peek():java.lang.Object type: VIRTUAL \l0x0029: SGET  (r0 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element) =  org.mapsforge.map.rendertheme.rule.RenderThemeHandler.Element.RULE org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002e \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: NEW_INSTANCE  (r4 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0030: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0032: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0035: CONST_STR  (r1 I:java.lang.String) =  \"unexpected element: \" \l0x0037: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003d: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0041: INVOKE  \l  (r4 I:org.xmlpull.v1.XmlPullParserException)\l  (r3 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|0x0044: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|0x0045: IGET  (r4 I:java.util.Stack\<org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element\>) = \l  (r2 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler)\l org.mapsforge.map.rendertheme.rule.RenderThemeHandler.elementStack java.util.Stack \l0x0047: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Stack) java.util.Stack.peek():java.lang.Object type: VIRTUAL \l0x004b: CHECK_CAST  (r4 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element) = (org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element) (r4 I:?[OBJECT, ARRAY]) \l0x004d: SGET  (r0 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element) =  org.mapsforge.map.rendertheme.rule.RenderThemeHandler.Element.RENDER_THEME org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element \l}"];
Node_11 [shape=record,label="{11\:\ 0x004f|0x004f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x006d \l}"];
Node_12 [shape=record,label="{12\:\ 0x0051|0x0051: SGET  (r0 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element) =  org.mapsforge.map.rendertheme.rule.RenderThemeHandler.Element.RULE org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element \l}"];
Node_13 [shape=record,label="{13\:\ 0x0053|0x0053: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0056 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|0x0056: NEW_INSTANCE  (r4 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0058: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x005a: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x005d: CONST_STR  (r1 I:java.lang.String) =  \"unexpected element: \" \l0x005f: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0062: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0065: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0069: INVOKE  \l  (r4 I:org.xmlpull.v1.XmlPullParserException)\l  (r3 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x006c|0x006c: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x006d|0x006d: RETURN   \l}"];
Node_18 [shape=record,label="{18\:\ 0x006e|0x006e: IGET  (r4 I:java.util.Stack\<org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element\>) = \l  (r2 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler)\l org.mapsforge.map.rendertheme.rule.RenderThemeHandler.elementStack java.util.Stack \l0x0070: INVOKE  (r4 I:boolean) = (r4 I:java.util.Stack) java.util.Stack.empty():boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0074|0x0074: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0077 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0076|0x0076: RETURN   \l}"];
Node_21 [shape=record,label="{21\:\ 0x0077|0x0077: NEW_INSTANCE  (r4 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0079: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x007b: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x007e: CONST_STR  (r1 I:java.lang.String) =  \"unexpected element: \" \l0x0080: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0083: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0086: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x008a: INVOKE  \l  (r4 I:org.xmlpull.v1.XmlPullParserException)\l  (r3 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x008d|0x008d: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.rendertheme.rule.RenderThemeHandler.checkElement((r2 'this' I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_5;
Node_1 -> Node_10;
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_22;
}

