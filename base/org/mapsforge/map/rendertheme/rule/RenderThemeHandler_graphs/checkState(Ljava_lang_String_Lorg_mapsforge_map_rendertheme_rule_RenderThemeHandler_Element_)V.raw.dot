digraph "CFG fororg.mapsforge.map.rendertheme.rule.RenderThemeHandler.checkState(Ljava\/lang\/String;Lorg\/mapsforge\/map\/rendertheme\/rule\/RenderThemeHandler$Element;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r0 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler)\l  (r1 I:java.lang.String)\l  (r2 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element)\l org.mapsforge.map.rendertheme.rule.RenderThemeHandler.checkElement(java.lang.String, org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element):void type: DIRECT \l0x0003: IGET  (r1 I:java.util.Stack\<org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element\>) = \l  (r0 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler)\l org.mapsforge.map.rendertheme.rule.RenderThemeHandler.elementStack java.util.Stack \l0x0005: INVOKE  (r1 I:java.util.Stack), (r2 I:java.lang.Object) java.util.Stack.push(java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.rendertheme.rule.RenderThemeHandler.checkState((r0 'this' I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:org.mapsforge.map.rendertheme.rule.RenderThemeHandler$Element A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

