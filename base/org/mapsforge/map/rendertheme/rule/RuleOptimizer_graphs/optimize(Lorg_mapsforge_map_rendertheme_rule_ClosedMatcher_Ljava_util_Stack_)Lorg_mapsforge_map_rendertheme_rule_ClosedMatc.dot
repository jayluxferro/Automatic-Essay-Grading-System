digraph "CFG fororg.mapsforge.map.rendertheme.rule.RuleOptimizer.optimize(Lorg\/mapsforge\/map\/rendertheme\/rule\/ClosedMatcher;Ljava\/util\/Stack;)Lorg\/mapsforge\/map\/rendertheme\/rule\/ClosedMatcher;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r4 instanceof org.mapsforge.map.rendertheme.rule.AnyMatcher) == false) goto L_0x0005\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|RETURN\l|return r4\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|r0 = 0\lint r1 = r5.size()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|LOOP_START\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:3:0x0005, B:12:0x0032] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000a\-\>B:12:0x0032\l|if (r0 \>= r1) goto L_0x0035\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c}"];
Node_6 [shape=record,label="{6\:\ 0x0018|if (((org.mapsforge.map.rendertheme.rule.Rule) r5.get(r0)).closedMatcher.isCoveredBy(r4) == false) goto L_0x001d\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a}"];
Node_8 [shape=record,label="{8\:\ 0x001c|RETURN\l|return org.mapsforge.map.rendertheme.rule.AnyMatcher.INSTANCE\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d}"];
Node_10 [shape=record,label="{10\:\ 0x0029|if (r4.isCoveredBy(((org.mapsforge.map.rendertheme.rule.Rule) r5.get(r0)).closedMatcher) != false) goto L_0x0032\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|LOGGER.warning(\"unreachable rule (closed)\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|LOOP_END\lLOOP:0: B:4:0x000a\-\>B:12:0x0032\l|int r0 = r0 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|RETURN\l|return r4\l}"];
Node_14 [shape=record,label="{14\:\ 0x001a|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0032|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static org.mapsforge.map.rendertheme.rule.ClosedMatcher org.mapsforge.map.rendertheme.rule.RuleOptimizer.optimize((r4v0 org.mapsforge.map.rendertheme.rule.ClosedMatcher A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.Stack\<org.mapsforge.map.rendertheme.rule.Rule\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/map\/rendertheme\/rule\/ClosedMatcher;, Ljava\/util\/Stack\<, Lorg\/mapsforge\/map\/rendertheme\/rule\/Rule;, \>;), Lorg\/mapsforge\/map\/rendertheme\/rule\/ClosedMatcher;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_9;
Node_6 -> Node_14[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_16;
Node_12 -> Node_4;
Node_14 -> Node_7;
Node_15 -> Node_13;
Node_16 -> Node_12;
Node_17 -> Node_12;
}

