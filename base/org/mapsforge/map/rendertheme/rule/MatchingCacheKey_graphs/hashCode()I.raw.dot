digraph "CFG fororg.mapsforge.map.rendertheme.rule.MatchingCacheKey.hashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.rendertheme.rule.Closed) = (r3 I:org.mapsforge.map.rendertheme.rule.MatchingCacheKey) org.mapsforge.map.rendertheme.rule.MatchingCacheKey.closed org.mapsforge.map.rendertheme.rule.Closed \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r0 I:org.mapsforge.map.rendertheme.rule.Closed) = (r3 I:org.mapsforge.map.rendertheme.rule.MatchingCacheKey) org.mapsforge.map.rendertheme.rule.MatchingCacheKey.closed org.mapsforge.map.rendertheme.rule.Closed \l0x0008: INVOKE  (r0 I:int) = (r0 I:org.mapsforge.map.rendertheme.rule.Closed) org.mapsforge.map.rendertheme.rule.Closed.hashCode():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r1 I:?[int, float, short, byte, char]) = (31 ?[int, float, short, byte, char]) \l0x000e: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x000f: ARITH  (r0 I:int) = (r0 I:int) * (31 int) \l0x0011: IGET  (r2 I:java.util.Set\<org.mapsforge.core.model.Tag\>) = (r3 I:org.mapsforge.map.rendertheme.rule.MatchingCacheKey) org.mapsforge.map.rendertheme.rule.MatchingCacheKey.tagsWithoutName java.util.Set \l0x0013: INVOKE  (r2 I:int) = (r2 I:java.util.Set) java.util.Set.hashCode():int type: INTERFACE \l0x0017: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x0018: ARITH  (r0 I:int) = (r0 I:int) * (31 int) \l0x001a: IGET  (r1 I:byte) = (r3 I:org.mapsforge.map.rendertheme.rule.MatchingCacheKey) org.mapsforge.map.rendertheme.rule.MatchingCacheKey.zoomLevel byte \l0x001c: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{public int org.mapsforge.map.rendertheme.rule.MatchingCacheKey.hashCode((r3 'this' I:org.mapsforge.map.rendertheme.rule.MatchingCacheKey A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

