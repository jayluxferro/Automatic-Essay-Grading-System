digraph "CFG fororg.mapsforge.map.rendertheme.rule.NegativeMatcher.matches(Ljava\/util\/List;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (keyListDoesNotContainKeys(r7) == false) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|int r0 = r7.size()\lr3 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:3:0x0008, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000e\-\>B:8:0x0021\l|if (r3 \>= r0) goto L_0x0024\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010}"];
Node_6 [shape=record,label="{6\:\ 0x001e|if (r6.valueList.contains(r7.get(r3).value) == false) goto L_0x0021\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|RETURN\l|return true\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|LOOP_END\lLOOP:0: B:4:0x000e\-\>B:8:0x0021\l|int r3 = r3 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|RETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.rendertheme.rule.NegativeMatcher.matches((r6v0 'this' org.mapsforge.map.rendertheme.rule.NegativeMatcher A[IMMUTABLE_TYPE, THIS]), (r7v0 java.util.List\<org.mapsforge.core.model.Tag\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/model\/Tag;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_11[style=dashed];
Node_8 -> Node_4;
Node_10 -> Node_9;
Node_11 -> Node_7;
}

