digraph "CFG fororg.mapsforge.map.rendertheme.rule.NegativeMatcher.matches(Ljava\/util\/List;)Z" {
subgraph cluster_Region_773864269 {
label = "R(1:(2:(1:2)|(3:3|(1:(2:(1:7)|(1:8)))|9)))";
node [shape=record,color=blue];
subgraph cluster_Region_296908679 {
label = "R(2:(1:2)|(3:3|(1:(2:(1:7)|(1:8)))|9))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1581040962 {
label = "IF [B:1:0x0005] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005|if (keyListDoesNotContainKeys(r7) == true) goto L_0x0007\l}"];
subgraph cluster_Region_1479773519 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1373598230 {
label = "R(3:3|(1:(2:(1:7)|(1:8)))|9)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|int int r0 = r7.size()\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_701501370 {
label = "LOOP:0: (1:(2:(1:7)|(1:8)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:3:0x0008, B:8:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000e\-\>B:8:0x0021\l|if (r3 \< r0) goto L_0x0010\l}"];
subgraph cluster_Region_2011574103 {
label = "R(1:(2:(1:7)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1969905763 {
label = "R(2:(1:7)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1510117752 {
label = "IF [B:6:0x001e] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001e|if (r6.valueList.contains(r7.get(r3).value) == true) goto L_0x0020\l}"];
subgraph cluster_Region_1304739161 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0020|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1961420381 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0021|LOOP_END\lLOOP:0: B:4:0x000e\-\>B:8:0x0021\l|r3++\l}"];
}
}
}
}
Node_9 [shape=record,label="{9\:\ 0x0024|RETURN\l|return false\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0010}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0024|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0020|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.rendertheme.rule.NegativeMatcher.matches((r6v0 'this' org.mapsforge.map.rendertheme.rule.NegativeMatcher A[IMMUTABLE_TYPE, THIS]), (r7v0 java.util.List\<org.mapsforge.core.model.Tag\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/model\/Tag;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_6 -> Node_8[style=dashed];
Node_6 -> Node_11;
Node_8 -> Node_4;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_10 -> Node_9;
Node_11 -> Node_7;
}

