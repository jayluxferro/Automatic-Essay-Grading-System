digraph "CFG fororg.mapsforge.map.rendertheme.rule.RenderTheme.scaleTextSize(FB)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.Map\<java.lang.Byte, java.lang.Float\>) = (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.textScales java.util.Map A[Catch:\{ all \-\> 0x0053 \}, TRY_ENTER]\l0x0003: INVOKE  (r1 I:java.lang.Byte) = (r6 I:byte) java.lang.Byte.valueOf(byte):java.lang.Byte type: STATIC A[Catch:\{ all \-\> 0x0053 \}]\l0x0007: INVOKE  (r0 I:boolean) = (r0 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.containsKey(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0021 A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r0 I:java.util.Map\<java.lang.Byte, java.lang.Float\>) = (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.textScales java.util.Map A[Catch:\{ all \-\> 0x0053 \}]\l0x000f: INVOKE  (r1 I:java.lang.Byte) = (r6 I:byte) java.lang.Byte.valueOf(byte):java.lang.Byte type: STATIC A[Catch:\{ all \-\> 0x0053 \}]\l0x0013: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0053 \}]\l0x0017: CHECK_CAST  (r0 I:java.lang.Float) = (java.lang.Float) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0053 \}]\l0x0019: INVOKE  (r0 I:float) = (r0 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL A[Catch:\{ all \-\> 0x0053 \}]\l0x001d: CMP_L  (r0 I:int) = (r5 I:float), (r0 I:float) A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0051 A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0053 \}]\l0x0022: IGET  (r1 I:java.util.ArrayList\<org.mapsforge.map.rendertheme.rule.Rule\>) = (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.rulesList java.util.ArrayList A[Catch:\{ all \-\> 0x0053 \}]\l0x0024: INVOKE  (r1 I:int) = (r1 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:14:0x0044 A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: IGET  (r2 I:java.util.ArrayList\<org.mapsforge.map.rendertheme.rule.Rule\>) = (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.rulesList java.util.ArrayList A[Catch:\{ all \-\> 0x0053 \}]\l0x002c: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.ArrayList), (r0 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0053 \}]\l0x0030: CHECK_CAST  (r2 I:org.mapsforge.map.rendertheme.rule.Rule) = (org.mapsforge.map.rendertheme.rule.Rule) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0053 \}]\l0x0032: IGET  (r3 I:byte) = (r2 I:org.mapsforge.map.rendertheme.rule.Rule) org.mapsforge.map.rendertheme.rule.Rule.zoomMin byte A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|0x0034: IF  (r3 I:?[int, byte, short, char]) \> (r6 I:?[int, byte, short, char])  \-\> B:13:0x0041 A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|0x0036: IGET  (r3 I:byte) = (r2 I:org.mapsforge.map.rendertheme.rule.Rule) org.mapsforge.map.rendertheme.rule.Rule.zoomMax byte A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: IF  (r3 I:?[int, byte, short, char]) \< (r6 I:?[int, byte, short, char])  \-\> B:13:0x0041 A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: IGET  (r3 I:float) = (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.baseTextSize float A[Catch:\{ all \-\> 0x0053 \}]\l0x003c: ARITH  (r3 I:float) = (r3 I:float) * (r5 I:float) A[Catch:\{ all \-\> 0x0053 \}]\l0x003e: INVOKE  \l  (r2 I:org.mapsforge.map.rendertheme.rule.Rule)\l  (r3 I:float)\l  (r6 I:byte)\l org.mapsforge.map.rendertheme.rule.Rule.scaleTextSize(float, byte):void type: VIRTUAL A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: ARITH  (r0 I:int) = (r0 I:int) + (1 int) A[Catch:\{ all \-\> 0x0053 \}]\l0x0043: GOTO  \-\> 0x0028 A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0044|0x0044: IGET  (r0 I:java.util.Map\<java.lang.Byte, java.lang.Float\>) = (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.textScales java.util.Map A[Catch:\{ all \-\> 0x0053 \}]\l0x0046: INVOKE  (r6 I:java.lang.Byte) = (r6 I:byte) java.lang.Byte.valueOf(byte):java.lang.Byte type: STATIC A[Catch:\{ all \-\> 0x0053 \}]\l0x004a: INVOKE  (r5 I:java.lang.Float) = (r5 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC A[Catch:\{ all \-\> 0x0053 \}]\l0x004e: INVOKE  \l  (r0 I:java.util.Map)\l  (r6 I:java.lang.Object)\l  (r5 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0053 \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0051|0x0051: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|0x0052: RETURN   \l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0053: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0054|0x0054: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|0x0055: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.rendertheme.rule.RenderTheme.scaleTextSize((r4 'this' I:org.mapsforge.map.rendertheme.rule.RenderTheme A[IMMUTABLE_TYPE, THIS]), (r5 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_7;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

