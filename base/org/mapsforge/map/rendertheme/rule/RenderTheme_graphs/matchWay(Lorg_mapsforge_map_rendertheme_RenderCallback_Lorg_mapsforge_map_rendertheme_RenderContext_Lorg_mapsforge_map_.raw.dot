digraph "CFG fororg.mapsforge.map.rendertheme.rule.RenderTheme.matchWay(Lorg\/mapsforge\/map\/rendertheme\/RenderCallback;Lorg\/mapsforge\/map\/rendertheme\/RenderContext;Lorg\/mapsforge\/map\/rendertheme\/rule\/Closed;Lorg\/mapsforge\/map\/layer\/renderer\/PolylineContainer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: NEW_INSTANCE  (r0 I:org.mapsforge.map.rendertheme.rule.MatchingCacheKey) =  org.mapsforge.map.rendertheme.rule.MatchingCacheKey A[Catch:\{ all \-\> 0x005b \}, TRY_ENTER]\l0x0003: INVOKE  (r1 I:java.util.List) = (r15 I:org.mapsforge.map.layer.renderer.PolylineContainer) org.mapsforge.map.layer.renderer.PolylineContainer.getTags():java.util.List type: VIRTUAL A[Catch:\{ all \-\> 0x005b \}]\l0x0007: INVOKE  (r2 I:org.mapsforge.core.model.Tile) = (r15 I:org.mapsforge.map.layer.renderer.PolylineContainer) org.mapsforge.map.layer.renderer.PolylineContainer.getUpperLeft():org.mapsforge.core.model.Tile type: VIRTUAL A[Catch:\{ all \-\> 0x005b \}]\l0x000b: IGET  (r2 I:byte) = (r2 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte A[Catch:\{ all \-\> 0x005b \}]\l0x000d: INVOKE  \l  (r0 I:org.mapsforge.map.rendertheme.rule.MatchingCacheKey)\l  (r1 I:java.util.List)\l  (r2 I:byte)\l  (r14 I:org.mapsforge.map.rendertheme.rule.Closed)\l org.mapsforge.map.rendertheme.rule.MatchingCacheKey.\<init\>(java.util.List, byte, org.mapsforge.map.rendertheme.rule.Closed):void type: DIRECT A[Catch:\{ all \-\> 0x005b \}]\l0x0010: IGET  (r1 I:org.mapsforge.core.util.LRUCache\<org.mapsforge.map.rendertheme.rule.MatchingCacheKey, java.util.List\<org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction\>\>) = (r11 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.wayMatchingCache org.mapsforge.core.util.LRUCache A[Catch:\{ all \-\> 0x005b \}]\l0x0012: INVOKE  (r1 I:java.lang.Object) = \l  (r1 I:org.mapsforge.core.util.LRUCache)\l  (r0 I:java.lang.Object)\l org.mapsforge.core.util.LRUCache.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x005b \}]\l0x0016: CHECK_CAST  (r1 I:java.util.List) = (java.util.List) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005b \}]\l0x0018: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x005b \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002f A[Catch:\{ all \-\> 0x005b \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: INVOKE  (r14 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE A[Catch:\{ all \-\> 0x005b \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: IF  (r2 I:?[int, byte, short, char]) \>= (r14 I:?[int, byte, short, char])  \-\> B:8:0x002d A[Catch:\{ all \-\> 0x005b \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: INVOKE  (r0 I:java.lang.Object) = (r1 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x005b \}]\l0x0025: CHECK_CAST  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction) = (org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005b \}]\l0x0027: INVOKE  \l  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction)\l  (r12 I:org.mapsforge.map.rendertheme.RenderCallback)\l  (r13 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r15 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.renderWay(org.mapsforge.map.rendertheme.RenderCallback, org.mapsforge.map.rendertheme.RenderContext, org.mapsforge.map.layer.renderer.PolylineContainer):void type: VIRTUAL A[Catch:\{ all \-\> 0x005b \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: MONITOR_EXIT  (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|SYNTHETIC\lSplitter:B:10:0x002f\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x002f\l|0x002f: NEW_INSTANCE  (r8 I:java.util.ArrayList) =  java.util.ArrayList A[Catch:\{ all \-\> 0x005b \}, TRY_ENTER]\l0x0031: INVOKE  (r8 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x005b \}]\l0x0034: IGET  (r1 I:java.util.ArrayList\<org.mapsforge.map.rendertheme.rule.Rule\>) = (r11 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.rulesList java.util.ArrayList A[Catch:\{ all \-\> 0x005b \}]\l0x0036: INVOKE  (r9 I:int) = (r1 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x005b \}]\l0x003a: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x005b \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IF  (r10 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:14:0x0054 A[Catch:\{ all \-\> 0x005b \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: IGET  (r1 I:java.util.ArrayList\<org.mapsforge.map.rendertheme.rule.Rule\>) = (r11 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.rulesList java.util.ArrayList A[Catch:\{ all \-\> 0x005b \}]\l0x003f: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.ArrayList), (r10 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x005b \}]\l0x0043: CHECK_CAST  (r1 I:org.mapsforge.map.rendertheme.rule.Rule) = (org.mapsforge.map.rendertheme.rule.Rule) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005b \}]\l0x0045: INVOKE  (r4 I:org.mapsforge.core.model.Tile) = (r15 I:org.mapsforge.map.layer.renderer.PolylineContainer) org.mapsforge.map.layer.renderer.PolylineContainer.getUpperLeft():org.mapsforge.core.model.Tile type: VIRTUAL A[Catch:\{ all \-\> 0x005b \}]\l0x0049: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005b \}]\l0x004a: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005b \}]\l0x004b: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005b \}]\l0x004c: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005b \}]\l0x004d: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x005b \}]\l0x004e: INVOKE  \l  (r1 I:org.mapsforge.map.rendertheme.rule.Rule)\l  (r2 I:org.mapsforge.map.rendertheme.RenderCallback)\l  (r3 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l  (r4 I:org.mapsforge.core.model.Tile)\l  (r5 I:org.mapsforge.map.rendertheme.rule.Closed)\l  (r6 I:java.util.List)\l  (r7 I:org.mapsforge.map.rendertheme.RenderContext)\l org.mapsforge.map.rendertheme.rule.Rule.matchWay(org.mapsforge.map.rendertheme.RenderCallback, org.mapsforge.map.layer.renderer.PolylineContainer, org.mapsforge.core.model.Tile, org.mapsforge.map.rendertheme.rule.Closed, java.util.List, org.mapsforge.map.rendertheme.RenderContext):void type: VIRTUAL A[Catch:\{ all \-\> 0x005b \}]\l0x0051: ARITH  (r10 I:int) = (r10 I:int) + (1 int) A[Catch:\{ all \-\> 0x005b \}]\l0x0053: GOTO  \-\> 0x003b A[Catch:\{ all \-\> 0x005b \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|0x0054: IGET  (r12 I:org.mapsforge.core.util.LRUCache\<org.mapsforge.map.rendertheme.rule.MatchingCacheKey, java.util.List\<org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction\>\>) = (r11 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.wayMatchingCache org.mapsforge.core.util.LRUCache A[Catch:\{ all \-\> 0x005b \}]\l0x0056: INVOKE  \l  (r12 I:org.mapsforge.core.util.LRUCache)\l  (r0 I:java.lang.Object)\l  (r8 I:java.lang.Object)\l org.mapsforge.core.util.LRUCache.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x005b \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0059|0x0059: MONITOR_EXIT  (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x005a|0x005a: RETURN   \l}"];
Node_17 [shape=record,label="{17\:\ 0x005b|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x005b: MOVE_EXCEPTION  (r12 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x005c|0x005c: MONITOR_EXIT  (r11 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x005d|0x005d: THROW  (r12 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private synchronized void org.mapsforge.map.rendertheme.rule.RenderTheme.matchWay((r11 'this' I:org.mapsforge.map.rendertheme.rule.RenderTheme A[IMMUTABLE_TYPE, THIS]), (r12 I:org.mapsforge.map.rendertheme.RenderCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:org.mapsforge.map.rendertheme.rule.Closed A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:org.mapsforge.map.layer.renderer.PolylineContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_12;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

