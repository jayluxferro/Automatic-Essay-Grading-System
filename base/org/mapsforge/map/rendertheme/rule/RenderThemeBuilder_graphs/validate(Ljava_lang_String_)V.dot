digraph "CFG fororg.mapsforge.map.rendertheme.rule.RenderThemeBuilder.validate(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.mapsforge.map.rendertheme.XmlUtils.checkMandatoryAttribute(r3, VERSION, r2.version)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r2.version.intValue() \> 6) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"unsupported render theme version: \")\lr0.append(r2.version)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|throw new org.xmlpull.p030v1.XmlPullParserException(r0.toString())\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.rendertheme.rule.RenderThemeBuilder.validate((r2v0 'this' org.mapsforge.map.rendertheme.rule.RenderThemeBuilder A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

