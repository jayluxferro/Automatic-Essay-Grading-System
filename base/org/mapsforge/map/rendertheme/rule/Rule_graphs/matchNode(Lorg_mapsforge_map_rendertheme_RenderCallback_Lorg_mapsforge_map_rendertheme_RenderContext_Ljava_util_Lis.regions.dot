digraph "CFG fororg.mapsforge.map.rendertheme.rule.Rule.matchNode(Lorg\/mapsforge\/map\/rendertheme\/RenderCallback;Lorg\/mapsforge\/map\/rendertheme\/RenderContext;Ljava\/util\/List;Lorg\/mapsforge\/map\/datastore\/PointOfInterest;)V" {
subgraph cluster_Region_839247714 {
label = "R(1:(1:(4:2|(1:4)|5|(1:7))))";
node [shape=record,color=blue];
subgraph cluster_Region_2070830856 {
label = "R(1:(4:2|(1:4)|5|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1543048325 {
label = "IF [B:1:0x000c] THEN: R(4:2|(1:4)|5|(1:7)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000c|if (matchesNode(r8.tags, r6.rendererJob.tile.zoomLevel) == true) goto L_0x000e\l}"];
subgraph cluster_Region_1047170737 {
label = "R(4:2|(1:4)|5|(1:7))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000e|int int r0 = r4.renderInstructions.size()\lint r1 = 0\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1071923730 {
label = "LOOP:0: (1:4)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0016|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v5 int) binds: [B:2:0x000e, B:4:0x0018] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0016\-\>B:4:0x0018\l|if (r2 \< r0) goto L_0x0018\l}"];
subgraph cluster_Region_979745210 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0018|LOOP_END\lLOOP:0: B:3:0x0016\-\>B:4:0x0018\l|r4.renderInstructions.get(r2).renderNode(r5, r6, r8)\lr7.add(r4.renderInstructions.get(r2))\lr2++\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x002f|int int r0 = r4.subRules.size()\l}"];
subgraph cluster_LoopRegion_349796848 {
label = "LOOP:1: (1:7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0035|LOOP_START\lPHI: r1 \l  PHI: (r1v4 int) = (r1v3 int), (r1v5 int) binds: [B:5:0x002f, B:7:0x0037] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:6:0x0035\-\>B:7:0x0037\l|if (r1 \< r0) goto L_0x0037\l}"];
subgraph cluster_Region_1343273487 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0037|LOOP_END\lLOOP:1: B:6:0x0035\-\>B:7:0x0037\l|r4.subRules.get(r1).matchNode(r5, r6, r7, r8)\lr1++\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002f|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0045|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.rendertheme.rule.Rule.matchNode((r4v0 'this' org.mapsforge.map.rendertheme.rule.Rule A[IMMUTABLE_TYPE, THIS]), (r5v0 org.mapsforge.map.rendertheme.RenderCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.util.List\<org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 org.mapsforge.map.datastore.PointOfInterest A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/map\/rendertheme\/RenderCallback;, Lorg\/mapsforge\/map\/rendertheme\/RenderContext;, Ljava\/util\/List\<, Lorg\/mapsforge\/map\/rendertheme\/renderinstruction\/RenderInstruction;, \>;, Lorg\/mapsforge\/map\/datastore\/PointOfInterest;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_10[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_8[style=dashed];
Node_4 -> Node_3;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_6;
Node_0 -> Node_1;
Node_8 -> Node_5;
Node_9 -> Node_11;
}

