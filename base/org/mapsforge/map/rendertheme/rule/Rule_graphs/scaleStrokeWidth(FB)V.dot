digraph "CFG fororg.mapsforge.map.rendertheme.rule.Rule.scaleStrokeWidth(FB)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r4.renderInstructions.size()\lr1 = 0\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v5 int) binds: [B:0:0x0000, B:2:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0008\-\>B:2:0x000a\l|if (r2 \>= r0) goto L_0x0018\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|LOOP_END\lLOOP:0: B:1:0x0008\-\>B:2:0x000a\l|r4.renderInstructions.get(r2).scaleStrokeWidth(r5, r6)\lint r2 = r2 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|int r0 = r4.subRules.size()\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:3:0x0018, B:5:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:4:0x001e\-\>B:5:0x0020\l|if (r1 \>= r0) goto L_0x002e\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|LOOP_END\lLOOP:1: B:4:0x001e\-\>B:5:0x0020\l|r4.subRules.get(r1).scaleStrokeWidth(r5, r6)\lint r1 = r1 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|SYNTHETIC\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.rendertheme.rule.Rule.scaleStrokeWidth((r4v0 'this' org.mapsforge.map.rendertheme.rule.Rule A[IMMUTABLE_TYPE, THIS]), (r5v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_4;
Node_7 -> Node_3;
Node_8 -> Node_6;
}

