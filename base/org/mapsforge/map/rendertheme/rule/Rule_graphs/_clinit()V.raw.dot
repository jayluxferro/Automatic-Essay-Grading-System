digraph "CFG fororg.mapsforge.map.rendertheme.rule.Rule.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0002: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0005: SPUT  \l  (r0 I:java.util.Map\<java.util.List\<java.lang.String\>, org.mapsforge.map.rendertheme.rule.AttributeMatcher\>)\l org.mapsforge.map.rendertheme.rule.Rule.MATCHERS_CACHE_KEY java.util.Map \l0x0007: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0009: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x000c: SPUT  \l  (r0 I:java.util.Map\<java.util.List\<java.lang.String\>, org.mapsforge.map.rendertheme.rule.AttributeMatcher\>)\l org.mapsforge.map.rendertheme.rule.Rule.MATCHERS_CACHE_VALUE java.util.Map \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN   \l}"];
MethodNode[shape=record,label="{static void org.mapsforge.map.rendertheme.rule.Rule.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

