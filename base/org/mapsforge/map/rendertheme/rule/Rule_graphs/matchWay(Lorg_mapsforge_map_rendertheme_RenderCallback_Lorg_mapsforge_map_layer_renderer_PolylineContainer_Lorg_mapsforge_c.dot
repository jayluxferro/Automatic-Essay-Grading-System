digraph "CFG fororg.mapsforge.map.rendertheme.rule.Rule.matchWay(Lorg\/mapsforge\/map\/rendertheme\/RenderCallback;Lorg\/mapsforge\/map\/layer\/renderer\/PolylineContainer;Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/map\/rendertheme\/rule\/Closed;Ljava\/util\/List;Lorg\/mapsforge\/map\/rendertheme\/RenderContext;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r16\l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|if (matchesWay(r18.getTags(), r19.zoomLevel, r20) == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|int r1 = r0.renderInstructions.size()\lr3 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v3 int) binds: [B:2:0x0012, B:4:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x001a\-\>B:4:0x001c\l|if (r3 \>= r1) goto L_0x003b\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|LOOP_END\lLOOP:0: B:3:0x001a\-\>B:4:0x001c\l|r13 = r22\lr0.renderInstructions.get(r3).renderWay(r17, r13, r18)\lr14 = r21\lr14.add(r0.renderInstructions.get(r3))\lint r3 = r3 + 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x003b|r11 = r17\lr12 = r18\lr14 = r21\lr13 = r22\lint r1 = r0.subRules.size()\lr15 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x004a|LOOP_START\lPHI: r15 \l  PHI: (r15v1 int) = (r15v0 int), (r15v2 int) binds: [B:5:0x003b, B:7:0x004c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:6:0x004a\-\>B:7:0x004c\l|if (r15 \>= r1) goto L_0x0066\l}"];
Node_7 [shape=record,label="{7\:\ 0x004c|LOOP_END\lLOOP:1: B:6:0x004a\-\>B:7:0x004c\l|r0.subRules.get(r15).matchWay(r17, r18, r19, r20, r21, r22)\lint r15 = r15 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0066|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.rendertheme.rule.Rule.matchWay((r16v0 'this' org.mapsforge.map.rendertheme.rule.Rule A[IMMUTABLE_TYPE, THIS]), (r17v0 org.mapsforge.map.rendertheme.RenderCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 org.mapsforge.map.layer.renderer.PolylineContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 org.mapsforge.map.rendertheme.rule.Closed A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 java.util.List\<org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/map\/rendertheme\/RenderCallback;, Lorg\/mapsforge\/map\/layer\/renderer\/PolylineContainer;, Lorg\/mapsforge\/core\/model\/Tile;, Lorg\/mapsforge\/map\/rendertheme\/rule\/Closed;, Ljava\/util\/List\<, Lorg\/mapsforge\/map\/rendertheme\/renderinstruction\/RenderInstruction;, \>;, Lorg\/mapsforge\/map\/rendertheme\/RenderContext;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_3;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_6;
Node_8 -> Node_5;
Node_9 -> Node_11;
}

