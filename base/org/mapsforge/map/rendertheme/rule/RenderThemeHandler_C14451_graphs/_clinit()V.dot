digraph "CFG fororg.mapsforge.map.rendertheme.rule.RenderThemeHandler.1.\<clinit\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|f284x3c9777ea = new int[org.mapsforge.map.rendertheme.rule.RenderThemeHandler.Element.values().length]\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|SYNTHETIC\lSplitter:B:1:0x0009\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ NoSuchFieldError \-\> 0x0014 \}\lSplitter:B:1:0x0009\l|f284x3c9777ea[org.mapsforge.map.rendertheme.rule.RenderThemeHandler.Element.RENDER_THEME.ordinal()] = 1     \/\/ Catch:\{ NoSuchFieldError \-\> 0x0014 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|SYNTHETIC\lSplitter:B:3:0x0014\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ NoSuchFieldError \-\> 0x001f \}\lSplitter:B:3:0x0014\l|f284x3c9777ea[org.mapsforge.map.rendertheme.rule.RenderThemeHandler.Element.RULE.ordinal()] = 2     \/\/ Catch:\{ NoSuchFieldError \-\> 0x001f \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|SYNTHETIC\lSplitter:B:5:0x001f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ NoSuchFieldError \-\> 0x002a \}\lSplitter:B:5:0x001f\l|f284x3c9777ea[org.mapsforge.map.rendertheme.rule.RenderThemeHandler.Element.RENDERING_INSTRUCTION.ordinal()] = 3     \/\/ Catch:\{ NoSuchFieldError \-\> 0x002a \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|SYNTHETIC\lSplitter:B:7:0x002a\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ NoSuchFieldError \-\> 0x0035 \}\lSplitter:B:7:0x002a\l|f284x3c9777ea[org.mapsforge.map.rendertheme.rule.RenderThemeHandler.Element.RENDERING_STYLE.ordinal()] = 4     \/\/ Catch:\{ NoSuchFieldError \-\> 0x0035 \}\l}"];
Node_9 [shape=record,label="{9\:\ ?|SYNTHETIC\lExcHandler: NoSuchFieldError (unused java.lang.NoSuchFieldError)\lSplitter:B:7:0x002a\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{static void org.mapsforge.map.rendertheme.rule.RenderThemeHandler.1.\<clinit\>() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_11;
}

