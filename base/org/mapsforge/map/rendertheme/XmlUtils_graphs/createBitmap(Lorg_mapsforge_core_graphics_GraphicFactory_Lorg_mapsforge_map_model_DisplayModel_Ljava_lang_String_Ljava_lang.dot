digraph "CFG fororg.mapsforge.map.rendertheme.XmlUtils.createBitmap(Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/model\/DisplayModel;Ljava\/lang\/String;Ljava\/lang\/String;III)Lorg\/mapsforge\/core\/graphics\/ResourceBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r11 == null) goto L_?\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r11.length() != 0) goto L_0x000a\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|java.io.InputStream r0 = createInputStream(r8, r10, r11)\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|SYNTHETIC\lSplitter:B:4:0x000e\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lSplitter:B:4:0x000e\l|java.lang.String r10 = getAbsoluteName(r10, r11)     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\ljava.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lr1.append(r10)     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lr1.append(r12)     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lr1.append(r13)     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lr1.append(r14)     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lint r7 = r1.toString().hashCode()     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|if (r11.toLowerCase(java.util.Locale.ENGLISH).endsWith(\".svg\") == false) goto L_0x0062\l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|SYNTHETIC\lSplitter:B:7:0x0039\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lSplitter:B:7:0x0039\l|r1 = r8     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lr2 = r0     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lorg.mapsforge.core.graphics.ResourceBitmap r8 = r1.renderSvg(r2, r9.getScaleFactor(), r12, r13, r14, r7)     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|r0.close()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0049|RETURN\l|return r8\l}"];
Node_11 [shape=record,label="{11\:\ 0x004a|ExcHandler: IOException (r8v6 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:7:0x0039\l|java.io.IOException r8 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|SYNTHETIC\lSplitter:B:12:0x004b\l}"];
Node_13 [shape=record,label="{13\:\ ?|Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lSplitter:B:12:0x004b\l|java.lang.StringBuilder r10 = new java.lang.StringBuilder()     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lr10.append(\"SVG render failed \")     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lr10.append(r11)     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0061|Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\l|throw new java.io.IOException(r10.toString(), r8)     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0062|SYNTHETIC\lSplitter:B:15:0x0062\l}"];
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lSplitter:B:15:0x0062\l|org.mapsforge.core.graphics.ResourceBitmap r8 = r8.createResourceBitmap(r0, r10.hashCode())     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x006a|r0.close()\l}"];
Node_18 [shape=record,label="{18\:\ 0x006d|RETURN\l|return r8\l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|ExcHandler: IOException (r8v4 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:15:0x0062\l|java.io.IOException r8 = move\-exception\l}"];
Node_20 [shape=record,label="{20\:\ 0x006f|SYNTHETIC\lSplitter:B:20:0x006f\l}"];
Node_21 [shape=record,label="{21\:\ ?|Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lSplitter:B:20:0x006f\l|java.lang.StringBuilder r10 = new java.lang.StringBuilder()     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lr10.append(\"Reading bitmap file failed \")     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\lr10.append(r11)     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0085|Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\l|throw new java.io.IOException(r10.toString(), r8)     \/\/ Catch:\{ IOException \-\> 0x006e, IOException \-\> 0x004a, all \-\> 0x0086 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x0086|ExcHandler: all (r8v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:4:0x000e\l|java.lang.Throwable r8 = move\-exception\l}"];
Node_24 [shape=record,label="{24\:\ 0x0087|r0.close()\l}"];
Node_25 [shape=record,label="{25\:\ 0x008a|throw r8\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{public static org.mapsforge.core.graphics.ResourceBitmap org.mapsforge.map.rendertheme.XmlUtils.createBitmap((r8v0 org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_26;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_27[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_23;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_23;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_25;
}

