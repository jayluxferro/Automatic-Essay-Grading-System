digraph "CFG fororg.mapsforge.map.rendertheme.XmlUtils.checkForNegativeValue(Ljava\/lang\/String;F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if ((r4 \> 0.0f ? 1 : (r4 == 0.0f ? 0 : \-1)) \< 0) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Attribute '\")\lr1.append(r3)\lr1.append(\"' must not be negative: \")\lr1.append(r4)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|throw new org.xmlpull.p030v1.XmlPullParserException(r1.toString())\l}"];
MethodNode[shape=record,label="{private static void org.mapsforge.map.rendertheme.XmlUtils.checkForNegativeValue((r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

