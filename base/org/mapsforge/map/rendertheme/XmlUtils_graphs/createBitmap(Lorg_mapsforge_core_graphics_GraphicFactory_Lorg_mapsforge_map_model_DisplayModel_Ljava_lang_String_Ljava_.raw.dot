digraph "CFG fororg.mapsforge.map.rendertheme.XmlUtils.createBitmap(Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/model\/DisplayModel;Ljava\/lang\/String;Ljava\/lang\/String;III)Lorg\/mapsforge\/core\/graphics\/ResourceBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x008b \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r11 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r0 I:java.io.InputStream) = \l  (r8 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r10 I:java.lang.String)\l  (r11 I:java.lang.String)\l org.mapsforge.map.rendertheme.XmlUtils.createInputStream(org.mapsforge.core.graphics.GraphicFactory, java.lang.String, java.lang.String):java.io.InputStream type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|SYNTHETIC\lSplitter:B:5:0x000e\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000e\l|0x000e: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.String), (r11 I:java.lang.String) org.mapsforge.map.rendertheme.XmlUtils.getAbsoluteName(java.lang.String, java.lang.String):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x0086 \}, TRY_ENTER]\l0x0012: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0086 \}]\l0x0014: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0086 \}]\l0x0017: INVOKE  (r1 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x001a: INVOKE  (r1 I:java.lang.StringBuilder), (r12 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x001d: INVOKE  (r1 I:java.lang.StringBuilder), (r13 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x0020: INVOKE  (r1 I:java.lang.StringBuilder), (r14 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x0023: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x0027: INVOKE  (r7 I:int) = (r1 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x002b: SGET  (r1 I:java.util.Locale) =  java.util.Locale.ENGLISH java.util.Locale A[Catch:\{ all \-\> 0x0086 \}]\l0x002d: INVOKE  (r1 I:java.lang.String) = (r11 I:java.lang.String), (r1 I:java.util.Locale) java.lang.String.toLowerCase(java.util.Locale):java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x0031: CONST_STR  (r2 I:java.lang.String) =  \".svg\" A[Catch:\{ all \-\> 0x0086 \}]\l0x0033: INVOKE  (r1 I:boolean) = (r1 I:java.lang.String), (r2 I:java.lang.String) java.lang.String.endsWith(java.lang.String):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x0036: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0037|0x0037: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0062 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|SYNTHETIC\lSplitter:B:8:0x0039\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0039\l|0x0039: INVOKE  (r3 I:float) = (r9 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getScaleFactor():float type: VIRTUAL A[Catch:\{ IOException \-\> 0x004a \}, TRY_ENTER]\l0x003d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x004a \}]\l0x003e: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x004a \}]\l0x003f: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x004a \}]\l0x0040: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x004a \}]\l0x0041: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x004a \}]\l0x0042: INVOKE  (r8 I:org.mapsforge.core.graphics.ResourceBitmap) = \l  (r1 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r2 I:java.io.InputStream)\l  (r3 I:float)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l org.mapsforge.core.graphics.GraphicFactory.renderSvg(java.io.InputStream, float, int, int, int, int):org.mapsforge.core.graphics.ResourceBitmap type: INTERFACE A[Catch:\{ IOException \-\> 0x004a \}]\l0x0045: NOP   A[TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|0x0046: INVOKE  (r0 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|0x0049: RETURN  (r8 I:org.mapsforge.core.graphics.ResourceBitmap) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|ExcHandler: IOException null\lSplitter:B:8:0x0039\l|0x004a: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|SYNTHETIC\lSplitter:B:13:0x004b\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x004b\l|0x004b: NEW_INSTANCE  (r9 I:java.io.IOException) =  java.io.IOException A[Catch:\{ all \-\> 0x0086 \}, TRY_ENTER]\l0x004d: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0086 \}]\l0x004f: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0086 \}]\l0x0052: CONST_STR  (r12 I:java.lang.String) =  \"SVG render failed \" A[Catch:\{ all \-\> 0x0086 \}]\l0x0054: INVOKE  (r10 I:java.lang.StringBuilder), (r12 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x0057: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x005a: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x005e: INVOKE  \l  (r9 I:java.io.IOException)\l  (r10 I:java.lang.String)\l  (r8 I:java.lang.Throwable)\l java.io.IOException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0086 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0061|0x0061: THROW  (r9 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0086 \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0062|SYNTHETIC\lSplitter:B:16:0x0062\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0062\l|0x0062: INVOKE  (r9 I:int) = (r10 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x006e \}, TRY_ENTER]\l0x0066: INVOKE  (r8 I:org.mapsforge.core.graphics.ResourceBitmap) = \l  (r8 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r0 I:java.io.InputStream)\l  (r9 I:int)\l org.mapsforge.core.graphics.GraphicFactory.createResourceBitmap(java.io.InputStream, int):org.mapsforge.core.graphics.ResourceBitmap type: INTERFACE A[Catch:\{ IOException \-\> 0x006e \}]\l0x0069: NOP   A[TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x006a|0x006a: INVOKE  (r0 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x006d|0x006d: RETURN  (r8 I:org.mapsforge.core.graphics.ResourceBitmap) \l}"];
Node_20 [shape=record,label="{20\:\ 0x006e|ExcHandler: IOException null\lSplitter:B:16:0x0062\l|0x006e: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x006f|SYNTHETIC\lSplitter:B:21:0x006f\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x006f\l|0x006f: NEW_INSTANCE  (r9 I:java.io.IOException) =  java.io.IOException A[Catch:\{ all \-\> 0x0086 \}, TRY_ENTER]\l0x0071: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0086 \}]\l0x0073: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0086 \}]\l0x0076: CONST_STR  (r12 I:java.lang.String) =  \"Reading bitmap file failed \" A[Catch:\{ all \-\> 0x0086 \}]\l0x0078: INVOKE  (r10 I:java.lang.StringBuilder), (r12 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x007b: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x007e: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0086 \}]\l0x0082: INVOKE  \l  (r9 I:java.io.IOException)\l  (r10 I:java.lang.String)\l  (r8 I:java.lang.Throwable)\l java.io.IOException.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0086 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0085|0x0085: THROW  (r9 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0086 \}, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0086|ExcHandler: all null\lSplitter:B:5:0x000e\l|0x0086: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x0087|0x0087: INVOKE  (r0 I:java.io.InputStream) java.io.InputStream.close():void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x008a|0x008a: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_27 [shape=record,label="{27\:\ 0x008b|0x008b: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ 0x008c|0x008c: RETURN  (r8 I:org.mapsforge.core.graphics.ResourceBitmap) \l}"];
MethodNode[shape=record,label="{public static org.mapsforge.core.graphics.ResourceBitmap org.mapsforge.map.rendertheme.XmlUtils.createBitmap((r8 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_27;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_2 -> Node_27[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_24;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_24;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_28;
}

