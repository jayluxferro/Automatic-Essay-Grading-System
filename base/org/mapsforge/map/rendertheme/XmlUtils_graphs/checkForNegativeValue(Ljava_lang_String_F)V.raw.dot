digraph "CFG fororg.mapsforge.map.rendertheme.XmlUtils.checkForNegativeValue(Ljava\/lang\/String;F)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CMP_G  (r0 I:int) = (r4 I:float), (r0 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: NEW_INSTANCE  (r0 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0008: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000a: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x000d: CONST_STR  (r2 I:java.lang.String) =  \"Attribute '\" \l0x000f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0012: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0015: CONST_STR  (r3 I:java.lang.String) =  \"' must not be negative: \" \l0x0017: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001a: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:float) java.lang.StringBuilder.append(float):java.lang.StringBuilder type: VIRTUAL \l0x001d: INVOKE  (r3 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0021: INVOKE  \l  (r0 I:org.xmlpull.v1.XmlPullParserException)\l  (r3 I:java.lang.String)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private static void org.mapsforge.map.rendertheme.XmlUtils.checkForNegativeValue((r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

