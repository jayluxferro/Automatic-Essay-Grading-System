digraph "CFG fororg.mapsforge.map.rendertheme.XmlUtils.inputStreamFromFile(Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.File r0 = getFile(r4, r5)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r0.exists() != false) goto L_0x002a\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r5.length() \<= 0) goto L_0x0023\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011}"];
Node_5 [shape=record,label="{5\:\ 0x0018|if (r5.charAt(0) != java.io.File.separatorChar) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|java.io.File r0 = getFile(r4, r5.substring(1))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|PHI: r0 \l  PHI: (r0v3 java.io.File) = (r0v0 java.io.File), (r0v0 java.io.File), (r0v5 java.io.File) binds: [B:3:0x000f, B:5:0x0018, B:6:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|if (r0.exists() != false) goto L_0x0037\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a}"];
Node_10 [shape=record,label="{10\:\ 0x002e|if (r0.isFile() == false) goto L_0x0036\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030}"];
Node_12 [shape=record,label="{12\:\ 0x0034|if (r0.canRead() != false) goto L_0x0037\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|r0 = null\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|PHI: r0 \l  PHI: (r0v1 java.io.File) = (r0v2 java.io.File), (r0v0 java.io.File), (r0v3 java.io.File) binds: [B:13:0x0036, B:12:0x0034, B:8:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == null) goto L_0x003f\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039}"];
Node_16 [shape=record,label="{16\:\ 0x003e|RETURN\l|return new java.io.FileInputStream(r0)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{private static java.io.InputStream org.mapsforge.map.rendertheme.XmlUtils.inputStreamFromFile((r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_14;
Node_8 -> Node_13[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
}

