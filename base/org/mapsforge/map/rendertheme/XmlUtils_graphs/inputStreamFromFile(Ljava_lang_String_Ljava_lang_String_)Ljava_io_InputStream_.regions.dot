digraph "CFG fororg.mapsforge.map.rendertheme.XmlUtils.inputStreamFromFile(Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/io\/InputStream;" {
subgraph cluster_Region_2056657417 {
label = "R(4:0|(1:(1:6))(1:(0))|13|(2:(1:16)|(1:17)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.File java.io.File r0 = getFile(r4, r5)\l}"];
subgraph cluster_IfRegion_145094354 {
label = "IF [B:1:0x0009] THEN: R(1:(1:6)) ELSE: R(1:(0))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r0.exists() == false) goto L_0x000b\l}"];
subgraph cluster_Region_535019236 {
label = "R(1:(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1529916797 {
label = "IF [B:3:0x000f, B:5:0x0018] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000f|ADDED_TO_REGION\l|if (r5.length() \> 0) goto L_0x0011\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|ADDED_TO_REGION\l|if (r5.charAt(0) == java.io.File.separatorChar) goto L_0x001a\l}"];
subgraph cluster_Region_1737804763 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|java.io.File r0 = getFile(r4, r5.substring(1))\l}"];
}
}
}
subgraph cluster_Region_1871422818 {
label = "R(1:(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1685690787 {
label = "IF [B:10:0x002e] THEN: R(0) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002e|if (r0.isFile() == true) goto L_0x0030\l}"];
subgraph cluster_Region_1671459531 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_13 [shape=record,label="{13\:\ 0x0036|r0 = null\l}"];
subgraph cluster_Region_1639380165 {
label = "R(2:(1:16)|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_787841399 {
label = "IF [B:14:0x0037] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0037|PHI: r0 \l  PHI: (r0v1 java.io.File) = (r0v2 java.io.File), (r0v0 java.io.File), (r0v3 java.io.File) binds: [B:13:0x0036, B:12:0x0034, B:8:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 != null) goto L_0x0039\l}"];
subgraph cluster_Region_1878936929 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x003e|RETURN\l|return new java.io.FileInputStream(r0)\l}"];
}
}
subgraph cluster_Region_1060366027 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x003f|RETURN\l|return null\l}"];
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000b}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0011}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0023|PHI: r0 \l  PHI: (r0v3 java.io.File) = (r0v0 java.io.File), (r0v0 java.io.File), (r0v5 java.io.File) binds: [B:3:0x000f, B:5:0x0018, B:6:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0027|if (r0.exists() == false) goto L_0x0036\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002a}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0030}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0034|if (r0.canRead() != false) goto L_0x0037\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0039}"];
MethodNode[shape=record,label="{private static java.io.InputStream org.mapsforge.map.rendertheme.XmlUtils.inputStreamFromFile((r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lCode restructure failed: missing block: B:8:0x0027, code lost:\l    if (r0.exists() == false) goto L_0x0036;\l\lCode restructure failed: missing block: B:12:0x0034, code lost:\l    if (r0.canRead() != false) goto L_0x0037;\l\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_14[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_15 -> Node_16;
}

