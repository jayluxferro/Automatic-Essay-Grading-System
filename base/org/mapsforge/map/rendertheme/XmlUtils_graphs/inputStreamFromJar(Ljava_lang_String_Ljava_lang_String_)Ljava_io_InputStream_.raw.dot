digraph "CFG fororg.mapsforge.map.rendertheme.XmlUtils.inputStreamFromJar(Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.String), (r1 I:java.lang.String) org.mapsforge.map.rendertheme.XmlUtils.getAbsoluteName(java.lang.String, java.lang.String):java.lang.String type: STATIC \l0x0004: CONST_CLASS  (r1 I:java.lang.Class\<org.mapsforge.map.rendertheme.XmlUtils\>) =  org.mapsforge.map.rendertheme.XmlUtils.class \l0x0006: INVOKE  (r0 I:java.io.InputStream) = (r1 I:java.lang.Class), (r0 I:java.lang.String) java.lang.Class.getResourceAsStream(java.lang.String):java.io.InputStream type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN  (r0 I:java.io.InputStream) \l}"];
MethodNode[shape=record,label="{private static java.io.InputStream org.mapsforge.map.rendertheme.XmlUtils.inputStreamFromJar((r0 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

