digraph "CFG fororg.mapsforge.map.rendertheme.XmlUtils.createInputStream(Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.startsWith(PREFIX_ASSETS) == false) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|java.lang.String r4 = r4.substring(PREFIX_ASSETS.length())\ljava.io.InputStream r2 = inputStreamFromAssets(r2, r3, r4)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017}"];
Node_4 [shape=record,label="{4\:\ 0x001d|if (r4.startsWith(PREFIX_FILE) == false) goto L_0x002e\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|java.lang.String r4 = r4.substring(PREFIX_FILE.length())\ljava.io.InputStream r2 = inputStreamFromFile(r3, r4)\l}"];
Node_6 [shape=record,label="{6\:\ 0x002e}"];
Node_7 [shape=record,label="{7\:\ 0x0034|if (r4.startsWith(PREFIX_JAR) != false) goto L_0x0052\l}"];
Node_8 [shape=record,label="{8\:\ 0x0036}"];
Node_9 [shape=record,label="{9\:\ 0x003c|if (r4.startsWith(PREFIX_JAR_V1) == false) goto L_0x003f\l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|java.io.InputStream r0 = inputStreamFromFile(r3, r4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|if (r0 != null) goto L_0x004a\l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|java.io.InputStream r2 = inputStreamFromAssets(r2, r3, r4)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004a|r2 = r0\l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|PHI: r2 \l  PHI: (r2v16 java.io.InputStream) = (r2v18 java.io.InputStream), (r2v19 java.io.InputStream) binds: [B:13:0x004a, B:12:0x0045] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != null) goto L_0x007b\l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|java.io.InputStream r2 = inputStreamFromJar(r3, r4)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0052}"];
Node_17 [shape=record,label="{17\:\ 0x0058|if (r4.startsWith(PREFIX_JAR) == false) goto L_0x0065\l}"];
Node_18 [shape=record,label="{18\:\ 0x005a|java.lang.String r4 = r4.substring(PREFIX_JAR.length())\l}"];
Node_19 [shape=record,label="{19\:\ 0x0065}"];
Node_20 [shape=record,label="{20\:\ 0x006b|if (r4.startsWith(PREFIX_JAR_V1) == false) goto L_0x0077\l}"];
Node_21 [shape=record,label="{21\:\ 0x006d|java.lang.String r4 = r4.substring(PREFIX_JAR_V1.length())\l}"];
Node_22 [shape=record,label="{22\:\ 0x0077|PHI: r4 \l  PHI: (r4v2 java.lang.String) = (r4v0 java.lang.String), (r4v3 java.lang.String), (r4v4 java.lang.String) binds: [B:20:0x006b, B:21:0x006d, B:18:0x005a] A[DONT_GENERATE, DONT_INLINE]\l|java.io.InputStream r2 = inputStreamFromJar(r3, r4)\l}"];
Node_23 [shape=record,label="{23\:\ 0x007b|PHI: r2 r4 \l  PHI: (r2v1 java.io.InputStream) = (r2v9 java.io.InputStream), (r2v16 java.io.InputStream), (r2v17 java.io.InputStream), (r2v22 java.io.InputStream), (r2v23 java.io.InputStream) binds: [B:22:0x0077, B:14:0x004b, B:15:0x004d, B:5:0x001f, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 java.lang.String) = (r4v2 java.lang.String), (r4v0 java.lang.String), (r4v0 java.lang.String), (r4v5 java.lang.String), (r4v6 java.lang.String) binds: [B:22:0x0077, B:14:0x004b, B:15:0x004d, B:5:0x001f, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != null) goto L_0x009b\l}"];
Node_24 [shape=record,label="{24\:\ 0x007d|java.io.InputStream r2 = inputStreamFromJar(\"\/assets\/\", r4)\l}"];
Node_25 [shape=record,label="{25\:\ 0x0083|if (r2 == null) goto L_0x009b\l}"];
Node_26 [shape=record,label="{26\:\ 0x0085|java.util.logging.Logger r3 = LOGGER\ljava.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"internal resource: \")\lr0.append(r4)\lr3.info(r0.toString())\l}"];
Node_27 [shape=record,label="{27\:\ 0x009b|PHI: r2 \l  PHI: (r2v2 java.io.InputStream) = (r2v1 java.io.InputStream), (r2v6 java.io.InputStream), (r2v6 java.io.InputStream) binds: [B:23:0x007b, B:25:0x0083, B:26:0x0085] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == null) goto L_0x009e\l}"];
Node_28 [shape=record,label="{28\:\ 0x009d|RETURN\l|return r2\l}"];
Node_29 [shape=record,label="{29\:\ 0x009e|java.util.logging.Logger r2 = LOGGER\ljava.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"invalid resource: \")\lr3.append(r4)\lr2.severe(r3.toString())\ljava.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"invalid resource: \")\lr3.append(r4)\l}"];
Node_30 [shape=record,label="{30\:\ 0x00ca|throw new java.io.FileNotFoundException(r3.toString())\l}"];
MethodNode[shape=record,label="{private static java.io.InputStream org.mapsforge.map.rendertheme.XmlUtils.createInputStream((r2v0 org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_23;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_23;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_16[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_23;
Node_15 -> Node_23;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_29 -> Node_30;
}

