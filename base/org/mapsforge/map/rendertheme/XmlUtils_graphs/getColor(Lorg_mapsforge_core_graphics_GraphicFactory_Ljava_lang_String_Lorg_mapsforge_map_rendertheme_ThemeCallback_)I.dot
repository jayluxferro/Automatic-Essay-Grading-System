digraph "CFG fororg.mapsforge.map.rendertheme.XmlUtils.getColor(Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Ljava\/lang\/String;Lorg\/mapsforge\/map\/rendertheme\/ThemeCallback;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r4.isEmpty() != false) goto L_0x004d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r4.charAt(0) != '#') goto L_0x004d\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if (r4.length() != 7) goto L_0x001e\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017}"];
Node_7 [shape=record,label="{7\:\ 0x001d|RETURN\l|return getColor(r3, r4, 255, 1, r5)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e}"];
Node_9 [shape=record,label="{9\:\ 0x0024|if (r4.length() != 9) goto L_0x0036\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026}"];
Node_11 [shape=record,label="{11\:\ 0x0035|RETURN\l|return getColor(r3, r4, java.lang.Integer.parseInt(r4.substring(1, 3), 16), 3, r5)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(UNSUPPORTED_COLOR_FORMAT)\lr5.append(r4)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|throw new java.lang.IllegalArgumentException(r5.toString())\l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(UNSUPPORTED_COLOR_FORMAT)\lr5.append(r4)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0063|throw new java.lang.IllegalArgumentException(r5.toString())\l}"];
MethodNode[shape=record,label="{public static int org.mapsforge.map.rendertheme.XmlUtils.getColor((r3v0 org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 org.mapsforge.map.rendertheme.ThemeCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_14;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_14;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

