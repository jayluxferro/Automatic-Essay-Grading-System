digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.Circle.extractValues(Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/model\/DisplayModel;Ljava\/lang\/String;Lorg\/xmlpull\/v1\/XmlPullParser;)V" {
subgraph cluster_Region_1374889913 {
label = "R(3:0|(3:3|(1:24)(1:(1:9)(1:(1:12)(1:(1:15)(1:(1:18)(1:(1:21)(1:23))))))|25)|26)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
subgraph cluster_LoopRegion_513182572 {
label = "LOOP:0: (3:3|(1:24)(1:(1:9)(1:(1:12)(1:(1:15)(1:(1:18)(1:(1:21)(1:23))))))|25)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r0 \< r8.getAttributeCount()) goto L_0x0007\l}"];
subgraph cluster_Region_823035213 {
label = "R(3:3|(1:24)(1:(1:9)(1:(1:12)(1:(1:15)(1:(1:18)(1:(1:21)(1:23))))))|25)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|java.lang.String java.lang.String r1 = r8.getAttributeName(r0)\ljava.lang.String java.lang.String r2 = r8.getAttributeValue(r0)\l}"];
subgraph cluster_IfRegion_1449469418 {
label = "IF [B:4:0x0015, B:6:0x001d] THEN: R(1:24) ELSE: R(1:(1:9)(1:(1:12)(1:(1:15)(1:(1:18)(1:(1:21)(1:23))))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|if (\"radius\".equals(r1) == true) goto L_0x0080\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|ADDED_TO_REGION\l|if (\"r\".equals(r1) == true) goto L_0x0080\l}"];
subgraph cluster_Region_2080512417 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0080|r4.radius = org.mapsforge.map.rendertheme.XmlUtils.parseNonNegativeFloat(r1, r2) * r6.getScaleFactor()\l}"];
}
subgraph cluster_Region_581916267 {
label = "R(1:(1:9)(1:(1:12)(1:(1:15)(1:(1:18)(1:(1:21)(1:23)))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_962846593 {
label = "IF [B:8:0x0026] THEN: R(1:9) ELSE: R(1:(1:12)(1:(1:15)(1:(1:18)(1:(1:21)(1:23))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0026|if (\"cat\".equals(r1) == true) goto L_0x0028\l}"];
subgraph cluster_Region_1572024362 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0028|r4.category = r2\l}"];
}
subgraph cluster_Region_1021794279 {
label = "R(1:(1:12)(1:(1:15)(1:(1:18)(1:(1:21)(1:23))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1060964186 {
label = "IF [B:11:0x0031] THEN: R(1:12) ELSE: R(1:(1:15)(1:(1:18)(1:(1:21)(1:23)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0031|if (\"fill\".equals(r1) == true) goto L_0x0033\l}"];
subgraph cluster_Region_782708222 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0033|r4.fill.setColor(org.mapsforge.map.rendertheme.XmlUtils.getColor(r5, r2, r6.getThemeCallback()))\l}"];
}
subgraph cluster_Region_1023782898 {
label = "R(1:(1:15)(1:(1:18)(1:(1:21)(1:23)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1082670882 {
label = "IF [B:14:0x0047] THEN: R(1:15) ELSE: R(1:(1:18)(1:(1:21)(1:23))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0047|if (\"scale\-radius\".equals(r1) == true) goto L_0x0049\l}"];
subgraph cluster_Region_939572574 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0049|r4.scaleRadius = java.lang.Boolean.parseBoolean(r2)\l}"];
}
subgraph cluster_Region_1574223758 {
label = "R(1:(1:18)(1:(1:21)(1:23))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_741079427 {
label = "IF [B:17:0x0056] THEN: R(1:18) ELSE: R(1:(1:21)(1:23)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0056|if (\"stroke\".equals(r1) == true) goto L_0x0058\l}"];
subgraph cluster_Region_2133445100 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0058|r4.stroke.setColor(org.mapsforge.map.rendertheme.XmlUtils.getColor(r5, r2, r6.getThemeCallback()))\l}"];
}
subgraph cluster_Region_84981329 {
label = "R(1:(1:21)(1:23)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_194225232 {
label = "IF [B:20:0x006c] THEN: R(1:21) ELSE: R(1:23) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x006c|if (\"stroke\-width\".equals(r1) == true) goto L_0x006e\l}"];
subgraph cluster_Region_1547920815 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x006e|r4.strokeWidth = org.mapsforge.map.rendertheme.XmlUtils.parseNonNegativeFloat(r1, r2) * r6.getScaleFactor()\l}"];
}
subgraph cluster_Region_509806448 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x007f|throw org.mapsforge.map.rendertheme.XmlUtils.createXmlPullParserException(r7, r1, r2, r0)\l}"];
}
}
}
}
}
}
}
}
}
}
}
}
Node_25 [shape=record,label="{25\:\ 0x008c|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:25:0x008c\l|r0++\l}"];
}
}
Node_26 [shape=record,label="{26\:\ 0x0090|org.mapsforge.map.rendertheme.XmlUtils.checkMandatoryAttribute(r7, \"radius\", java.lang.Float.valueOf(r4.radius))\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:25:0x008c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:25:0x008c\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0017}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0020}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002b}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0041}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0050}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0066}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x007b}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x009b}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0090|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x007b|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x008c|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x008c|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x008c|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x008c|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x008c|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x008c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.rendertheme.renderinstruction.Circle.extractValues((r4v0 'this' org.mapsforge.map.rendertheme.renderinstruction.Circle A[IMMUTABLE_TYPE, THIS]), (r5v0 org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_28[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_24;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_24;
Node_24 -> Node_30;
Node_8 -> Node_9;
Node_8 -> Node_10[style=dashed];
Node_9 -> Node_31;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_32;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_33;
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_18 -> Node_34;
Node_20 -> Node_21;
Node_20 -> Node_29[style=dashed];
Node_21 -> Node_35;
Node_25 -> Node_1;
Node_26 -> Node_27;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_10 -> Node_11;
Node_13 -> Node_14;
Node_16 -> Node_17;
Node_19 -> Node_20;
Node_22 -> Node_23;
Node_28 -> Node_26;
Node_29 -> Node_22;
Node_30 -> Node_25;
Node_31 -> Node_25;
Node_32 -> Node_25;
Node_33 -> Node_25;
Node_34 -> Node_25;
Node_35 -> Node_25;
}

