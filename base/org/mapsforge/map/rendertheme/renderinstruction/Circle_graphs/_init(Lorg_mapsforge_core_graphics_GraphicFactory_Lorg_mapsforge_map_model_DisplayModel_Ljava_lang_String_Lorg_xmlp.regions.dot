digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.Circle.\<init\>(Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/model\/DisplayModel;Ljava\/lang\/String;Lorg\/xmlpull\/v1\/XmlPullParser;I)V" {
subgraph cluster_Region_866705031 {
label = "R(2:0|(1:(1:2)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r2, r3)\lr1.level = r6\lr1.fill = r2.createPaint()\lr1.fill.setColor(org.mapsforge.core.graphics.Color.TRANSPARENT)\lr1.fill.setStyle(org.mapsforge.core.graphics.Style.FILL)\lr1.stroke = r2.createPaint()\lr1.stroke.setColor(org.mapsforge.core.graphics.Color.TRANSPARENT)\lr1.stroke.setStyle(org.mapsforge.core.graphics.Style.STROKE)\lr1.strokes = new java.util.HashMap()\lr1.renderRadiusScaled = new java.util.HashMap()\lextractValues(r2, r3, r4, r5)\l}"];
subgraph cluster_Region_1850610458 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1011332245 {
label = "IF [B:1:0x0047] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0047|if (r1.scaleRadius == false) goto L_0x0049\l}"];
subgraph cluster_Region_1468462842 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0049|r1.renderRadius = r1.radius\lr1.stroke.setStrokeWidth(r1.strokeWidth)\l}"];
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.renderinstruction.Circle.\<init\>((r1v0 'this' org.mapsforge.map.rendertheme.renderinstruction.Circle A[IMMUTABLE_TYPE, THIS]), (r2v0 org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_2 -> Node_3;
}

