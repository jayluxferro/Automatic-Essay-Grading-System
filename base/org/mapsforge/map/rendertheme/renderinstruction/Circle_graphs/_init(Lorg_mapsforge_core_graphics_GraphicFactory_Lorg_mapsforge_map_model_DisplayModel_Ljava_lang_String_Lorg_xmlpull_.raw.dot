digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.Circle.\<init\>(Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/model\/DisplayModel;Ljava\/lang\/String;Lorg\/xmlpull\/v1\/XmlPullParser;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction)\l  (r2 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r3 I:org.mapsforge.map.model.DisplayModel)\l org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.\<init\>(org.mapsforge.core.graphics.GraphicFactory, org.mapsforge.map.model.DisplayModel):void type: DIRECT \l0x0003: IPUT  \l  (r6 I:int)\l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.level int \l0x0005: INVOKE  (r6 I:org.mapsforge.core.graphics.Paint) = (r2 I:org.mapsforge.core.graphics.GraphicFactory) org.mapsforge.core.graphics.GraphicFactory.createPaint():org.mapsforge.core.graphics.Paint type: INTERFACE \l0x0009: IPUT  \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.fill org.mapsforge.core.graphics.Paint \l0x000b: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = \l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.fill org.mapsforge.core.graphics.Paint \l0x000d: SGET  (r0 I:org.mapsforge.core.graphics.Color) =  org.mapsforge.core.graphics.Color.TRANSPARENT org.mapsforge.core.graphics.Color \l0x000f: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.graphics.Color)\l org.mapsforge.core.graphics.Paint.setColor(org.mapsforge.core.graphics.Color):void type: INTERFACE \l0x0012: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = \l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.fill org.mapsforge.core.graphics.Paint \l0x0014: SGET  (r0 I:org.mapsforge.core.graphics.Style) =  org.mapsforge.core.graphics.Style.FILL org.mapsforge.core.graphics.Style \l0x0016: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.graphics.Style)\l org.mapsforge.core.graphics.Paint.setStyle(org.mapsforge.core.graphics.Style):void type: INTERFACE \l0x0019: NEW_INSTANCE  (r6 I:java.util.HashMap) =  java.util.HashMap \l0x001b: INVOKE  (r6 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x001e: IPUT  \l  (r6 I:java.util.Map\<java.lang.Byte, org.mapsforge.core.graphics.Paint\>)\l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.fills java.util.Map \l0x0020: INVOKE  (r6 I:org.mapsforge.core.graphics.Paint) = (r2 I:org.mapsforge.core.graphics.GraphicFactory) org.mapsforge.core.graphics.GraphicFactory.createPaint():org.mapsforge.core.graphics.Paint type: INTERFACE \l0x0024: IPUT  \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.stroke org.mapsforge.core.graphics.Paint \l0x0026: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = \l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.stroke org.mapsforge.core.graphics.Paint \l0x0028: SGET  (r0 I:org.mapsforge.core.graphics.Color) =  org.mapsforge.core.graphics.Color.TRANSPARENT org.mapsforge.core.graphics.Color \l0x002a: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.graphics.Color)\l org.mapsforge.core.graphics.Paint.setColor(org.mapsforge.core.graphics.Color):void type: INTERFACE \l0x002d: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = \l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.stroke org.mapsforge.core.graphics.Paint \l0x002f: SGET  (r0 I:org.mapsforge.core.graphics.Style) =  org.mapsforge.core.graphics.Style.STROKE org.mapsforge.core.graphics.Style \l0x0031: INVOKE  \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.graphics.Style)\l org.mapsforge.core.graphics.Paint.setStyle(org.mapsforge.core.graphics.Style):void type: INTERFACE \l0x0034: NEW_INSTANCE  (r6 I:java.util.HashMap) =  java.util.HashMap \l0x0036: INVOKE  (r6 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0039: IPUT  \l  (r6 I:java.util.Map\<java.lang.Byte, org.mapsforge.core.graphics.Paint\>)\l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.strokes java.util.Map \l0x003b: NEW_INSTANCE  (r6 I:java.util.HashMap) =  java.util.HashMap \l0x003d: INVOKE  (r6 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0040: IPUT  \l  (r6 I:java.util.Map\<java.lang.Byte, java.lang.Float\>)\l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.renderRadiusScaled java.util.Map \l0x0042: INVOKE  \l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l  (r2 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r3 I:org.mapsforge.map.model.DisplayModel)\l  (r4 I:java.lang.String)\l  (r5 I:org.xmlpull.v1.XmlPullParser)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.extractValues(org.mapsforge.core.graphics.GraphicFactory, org.mapsforge.map.model.DisplayModel, java.lang.String, org.xmlpull.v1.XmlPullParser):void type: DIRECT \l0x0045: IGET  (r2 I:boolean) = \l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.scaleRadius boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0047|0x0047: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0054 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0049|0x0049: IGET  (r2 I:float) = \l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.radius float \l0x004b: IPUT  \l  (r2 I:float)\l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.renderRadius float \l0x004d: IGET  (r2 I:org.mapsforge.core.graphics.Paint) = \l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.stroke org.mapsforge.core.graphics.Paint \l0x004f: IGET  (r3 I:float) = \l  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.strokeWidth float \l0x0051: INVOKE  (r2 I:org.mapsforge.core.graphics.Paint), (r3 I:float) org.mapsforge.core.graphics.Paint.setStrokeWidth(float):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0054|0x0054: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.renderinstruction.Circle.\<init\>((r1 'this' I:org.mapsforge.map.rendertheme.renderinstruction.Circle A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

