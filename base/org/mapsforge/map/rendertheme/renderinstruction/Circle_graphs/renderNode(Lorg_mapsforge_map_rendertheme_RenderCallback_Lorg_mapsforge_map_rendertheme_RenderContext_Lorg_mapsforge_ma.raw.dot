digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.Circle.renderNode(Lorg\/mapsforge\/map\/rendertheme\/RenderCallback;Lorg\/mapsforge\/map\/rendertheme\/RenderContext;Lorg\/mapsforge\/map\/datastore\/PointOfInterest;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.layer.renderer.RendererJob) = (r10 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob \l0x0002: IGET  (r0 I:org.mapsforge.core.model.Tile) = (r0 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile \l0x0004: IGET  (r0 I:byte) = (r0 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0006: INVOKE  (r3 I:float) = \l  (r8 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l  (r0 I:byte)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.getRenderRadius(byte):float type: DIRECT \l0x000a: IGET  (r0 I:org.mapsforge.map.layer.renderer.RendererJob) = (r10 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob \l0x000c: IGET  (r0 I:org.mapsforge.core.model.Tile) = (r0 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile \l0x000e: IGET  (r0 I:byte) = (r0 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0010: INVOKE  (r4 I:org.mapsforge.core.graphics.Paint) = \l  (r8 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l  (r0 I:byte)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.getFillPaint(byte):org.mapsforge.core.graphics.Paint type: DIRECT \l0x0014: IGET  (r0 I:org.mapsforge.map.layer.renderer.RendererJob) = (r10 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob \l0x0016: IGET  (r0 I:org.mapsforge.core.model.Tile) = (r0 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile \l0x0018: IGET  (r0 I:byte) = (r0 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x001a: INVOKE  (r5 I:org.mapsforge.core.graphics.Paint) = \l  (r8 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l  (r0 I:byte)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.getStrokePaint(byte):org.mapsforge.core.graphics.Paint type: DIRECT \l0x001e: IGET  (r6 I:int) = \l  (r8 I:org.mapsforge.map.rendertheme.renderinstruction.Circle)\l org.mapsforge.map.rendertheme.renderinstruction.Circle.level int \l0x0020: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0021: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0022: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0023: INVOKE  \l  (r1 I:org.mapsforge.map.rendertheme.RenderCallback)\l  (r2 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r3 I:float)\l  (r4 I:org.mapsforge.core.graphics.Paint)\l  (r5 I:org.mapsforge.core.graphics.Paint)\l  (r6 I:int)\l  (r7 I:org.mapsforge.map.datastore.PointOfInterest)\l org.mapsforge.map.rendertheme.RenderCallback.renderPointOfInterestCircle(org.mapsforge.map.rendertheme.RenderContext, float, org.mapsforge.core.graphics.Paint, org.mapsforge.core.graphics.Paint, int, org.mapsforge.map.datastore.PointOfInterest):void type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|0x0026: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.renderinstruction.Circle.renderNode((r8 'this' I:org.mapsforge.map.rendertheme.renderinstruction.Circle A[IMMUTABLE_TYPE, THIS]), (r9 I:org.mapsforge.map.rendertheme.RenderCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:org.mapsforge.map.datastore.PointOfInterest A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

