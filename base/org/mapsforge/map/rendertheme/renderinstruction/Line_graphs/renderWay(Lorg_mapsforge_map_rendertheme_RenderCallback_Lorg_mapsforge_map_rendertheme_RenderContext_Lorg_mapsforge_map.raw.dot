digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.Line.renderWay(Lorg\/mapsforge\/map\/rendertheme\/RenderCallback;Lorg\/mapsforge\/map\/rendertheme\/RenderContext;Lorg\/mapsforge\/map\/layer\/renderer\/PolylineContainer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:boolean) = (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.bitmapCreated boolean A[Catch:\{ all \-\> 0x0058 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|SYNTHETIC\lSplitter:B:4:0x0005\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x0005\l|0x0005: IGET  (r0 I:java.lang.String) = (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.relativePathPrefix java.lang.String A[Catch:\{ IOException \-\> 0x000f \}, TRY_ENTER]\l0x0007: IGET  (r1 I:java.lang.String) = (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.src java.lang.String A[Catch:\{ IOException \-\> 0x000f \}]\l0x0009: INVOKE  (r0 I:org.mapsforge.core.graphics.Bitmap) = \l  (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l org.mapsforge.map.rendertheme.renderinstruction.Line.createBitmap(java.lang.String, java.lang.String):org.mapsforge.core.graphics.Bitmap type: VIRTUAL A[Catch:\{ IOException \-\> 0x000f \}]\l0x000d: IPUT  \l  (r0 I:org.mapsforge.core.graphics.Bitmap)\l  (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line)\l org.mapsforge.map.rendertheme.renderinstruction.Line.shaderBitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ IOException \-\> 0x000f \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:4:0x0005\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|SYNTHETIC\lSplitter:B:8:0x0010\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x0010\l|0x0010: IPUT  \l  (r0 I:boolean)\l  (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line)\l org.mapsforge.map.rendertheme.renderinstruction.Line.bitmapCreated boolean A[Catch:\{ all \-\> 0x0058 \}, TRY_ENTER]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|0x0012: IGET  (r0 I:org.mapsforge.map.layer.renderer.RendererJob) = (r9 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob A[Catch:\{ all \-\> 0x0058 \}]\l0x0014: IGET  (r0 I:org.mapsforge.core.model.Tile) = (r0 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile A[Catch:\{ all \-\> 0x0058 \}]\l0x0016: IGET  (r0 I:byte) = (r0 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte A[Catch:\{ all \-\> 0x0058 \}]\l0x0018: INVOKE  (r3 I:org.mapsforge.core.graphics.Paint) = \l  (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line)\l  (r0 I:byte)\l org.mapsforge.map.rendertheme.renderinstruction.Line.getStrokePaint(byte):org.mapsforge.core.graphics.Paint type: DIRECT A[Catch:\{ all \-\> 0x0058 \}]\l0x001c: IGET  (r0 I:org.mapsforge.core.graphics.Bitmap) = (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.shaderBitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ all \-\> 0x0058 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0030 A[Catch:\{ all \-\> 0x0058 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: IGET  (r0 I:org.mapsforge.core.graphics.Bitmap) = (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.shaderBitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ all \-\> 0x0058 \}]\l0x0022: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.graphics.Bitmap)\l org.mapsforge.core.graphics.Paint.setBitmapShader(org.mapsforge.core.graphics.Bitmap):void type: INTERFACE A[Catch:\{ all \-\> 0x0058 \}]\l0x0025: INVOKE  (r0 I:org.mapsforge.core.model.Tile) = (r10 I:org.mapsforge.map.layer.renderer.PolylineContainer) org.mapsforge.map.layer.renderer.PolylineContainer.getUpperLeft():org.mapsforge.core.model.Tile type: VIRTUAL A[Catch:\{ all \-\> 0x0058 \}]\l0x0029: INVOKE  (r0 I:org.mapsforge.core.model.Point) = (r0 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.getOrigin():org.mapsforge.core.model.Point type: VIRTUAL A[Catch:\{ all \-\> 0x0058 \}]\l0x002d: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.model.Point)\l org.mapsforge.core.graphics.Paint.setBitmapShaderShift(org.mapsforge.core.model.Point):void type: INTERFACE A[Catch:\{ all \-\> 0x0058 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|0x0030: IGET  (r0 I:java.util.Map\<java.lang.Byte, java.lang.Float\>) = (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.dyScaled java.util.Map A[Catch:\{ all \-\> 0x0058 \}]\l0x0032: IGET  (r1 I:org.mapsforge.map.layer.renderer.RendererJob) = (r9 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob A[Catch:\{ all \-\> 0x0058 \}]\l0x0034: IGET  (r1 I:org.mapsforge.core.model.Tile) = (r1 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile A[Catch:\{ all \-\> 0x0058 \}]\l0x0036: IGET  (r1 I:byte) = (r1 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte A[Catch:\{ all \-\> 0x0058 \}]\l0x0038: INVOKE  (r1 I:java.lang.Byte) = (r1 I:byte) java.lang.Byte.valueOf(byte):java.lang.Byte type: STATIC A[Catch:\{ all \-\> 0x0058 \}]\l0x003c: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0058 \}]\l0x0040: CHECK_CAST  (r0 I:java.lang.Float) = (java.lang.Float) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0058 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|0x0042: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004a A[Catch:\{ all \-\> 0x0058 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0044|0x0044: IGET  (r0 I:float) = (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.dy float A[Catch:\{ all \-\> 0x0058 \}]\l0x0046: INVOKE  (r0 I:java.lang.Float) = (r0 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC A[Catch:\{ all \-\> 0x0058 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|0x004a: INVOKE  (r4 I:float) = (r0 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL A[Catch:\{ all \-\> 0x0058 \}]\l0x004e: IGET  (r5 I:int) = (r7 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.level int A[Catch:\{ all \-\> 0x0058 \}]\l0x0050: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0058 \}]\l0x0051: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0058 \}]\l0x0052: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0058 \}]\l0x0053: INVOKE  \l  (r1 I:org.mapsforge.map.rendertheme.RenderCallback)\l  (r2 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r4 I:float)\l  (r5 I:int)\l  (r6 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.rendertheme.RenderCallback.renderWay(org.mapsforge.map.rendertheme.RenderContext, org.mapsforge.core.graphics.Paint, float, int, org.mapsforge.map.layer.renderer.PolylineContainer):void type: INTERFACE A[Catch:\{ all \-\> 0x0058 \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0056|0x0056: MONITOR_EXIT  (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0057|0x0057: RETURN   \l}"];
Node_19 [shape=record,label="{19\:\ 0x0058|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0058: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|0x0059: MONITOR_EXIT  (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x005a|0x005a: THROW  (r8 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.rendertheme.renderinstruction.Line.renderWay((r7 'this' I:org.mapsforge.map.rendertheme.renderinstruction.Line A[IMMUTABLE_TYPE, THIS]), (r8 I:org.mapsforge.map.rendertheme.RenderCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:org.mapsforge.map.layer.renderer.PolylineContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_2 -> Node_19;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_6;
Node_8 -> Node_9;
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
}

