digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.Line.scaleStrokeWidth(FB)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.scale org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale \l0x0002: SGET  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale) =  org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.Scale.NONE org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.stroke org.mapsforge.core.graphics.Paint \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0043 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: IGET  (r0 I:org.mapsforge.core.graphics.GraphicFactory) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.graphicFactory org.mapsforge.core.graphics.GraphicFactory \l0x000e: IGET  (r1 I:org.mapsforge.core.graphics.Paint) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.stroke org.mapsforge.core.graphics.Paint \l0x0010: INVOKE  (r0 I:org.mapsforge.core.graphics.Paint) = \l  (r0 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r1 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.GraphicFactory.createPaint(org.mapsforge.core.graphics.Paint):org.mapsforge.core.graphics.Paint type: INTERFACE \l0x0014: IGET  (r1 I:float) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.strokeWidth float \l0x0016: ARITH  (r1 I:float) = (r1 I:float) * (r5 I:float) \l0x0018: INVOKE  (r0 I:org.mapsforge.core.graphics.Paint), (r1 I:float) org.mapsforge.core.graphics.Paint.setStrokeWidth(float):void type: INTERFACE \l0x001b: IGET  (r1 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.scale org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale \l0x001d: SGET  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale) =  org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.Scale.ALL org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: IGET  (r1 I:float[]) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.strokeDasharray float[] \l0x0023: ARRAY_LENGTH  (r1 I:int) = (r1 I:?[]) \l0x0024: NEW_ARRAY  (r1 I:float[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x0026: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IGET  (r3 I:float[]) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.strokeDasharray float[] \l0x0029: ARRAY_LENGTH  (r3 I:int) = (r3 I:?[]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:11:0x0037 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|0x002c: IGET  (r3 I:float[]) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.strokeDasharray float[] \l0x002e: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l0x0030: ARITH  (r3 I:float) = (r3 I:float) * (r5 I:float) \l0x0032: APUT  \l  (r1 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x0034: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0037|0x0037: INVOKE  (r0 I:org.mapsforge.core.graphics.Paint), (r1 I:float[]) org.mapsforge.core.graphics.Paint.setDashPathEffect(float[]):void type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|0x003a: IGET  (r1 I:java.util.Map\<java.lang.Byte, org.mapsforge.core.graphics.Paint\>) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.strokes java.util.Map \l0x003c: INVOKE  (r2 I:java.lang.Byte) = (r6 I:byte) java.lang.Byte.valueOf(byte):java.lang.Byte type: STATIC \l0x0040: INVOKE  \l  (r1 I:java.util.Map)\l  (r2 I:java.lang.Object)\l  (r0 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: IGET  (r0 I:java.util.Map\<java.lang.Byte, java.lang.Float\>) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.dyScaled java.util.Map \l0x0045: INVOKE  (r6 I:java.lang.Byte) = (r6 I:byte) java.lang.Byte.valueOf(byte):java.lang.Byte type: STATIC \l0x0049: IGET  (r1 I:float) = (r4 I:org.mapsforge.map.rendertheme.renderinstruction.Line) org.mapsforge.map.rendertheme.renderinstruction.Line.dy float \l0x004b: ARITH  (r1 I:float) = (r1 I:float) * (r5 I:float) \l0x004d: INVOKE  (r5 I:java.lang.Float) = (r1 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC \l0x0051: INVOKE  \l  (r0 I:java.util.Map)\l  (r6 I:java.lang.Object)\l  (r5 I:java.lang.Object)\l java.util.Map.put(java.lang.Object, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0054|0x0054: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.renderinstruction.Line.scaleStrokeWidth((r4 'this' I:org.mapsforge.map.rendertheme.renderinstruction.Line A[IMMUTABLE_TYPE, THIS]), (r5 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
}

