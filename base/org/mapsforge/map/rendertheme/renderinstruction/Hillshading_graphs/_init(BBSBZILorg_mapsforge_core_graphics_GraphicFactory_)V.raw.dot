digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.Hillshading.\<init\>(BBSBZILorg\/mapsforge\/core\/graphics\/GraphicFactory;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r5 I:boolean)\l  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.Hillshading)\l org.mapsforge.map.rendertheme.renderinstruction.Hillshading.always boolean \l0x0005: IPUT  \l  (r6 I:int)\l  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.Hillshading)\l org.mapsforge.map.rendertheme.renderinstruction.Hillshading.level int \l0x0007: IPUT  \l  (r4 I:byte)\l  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.Hillshading)\l org.mapsforge.map.rendertheme.renderinstruction.Hillshading.layer byte \l0x0009: IPUT  \l  (r1 I:byte)\l  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.Hillshading)\l org.mapsforge.map.rendertheme.renderinstruction.Hillshading.minZoom byte \l0x000b: IPUT  \l  (r2 I:byte)\l  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.Hillshading)\l org.mapsforge.map.rendertheme.renderinstruction.Hillshading.maxZoom byte \l0x000d: CAST  (r1 I:float) = (float) (r3 I:int) \l0x000e: IPUT  \l  (r1 I:float)\l  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.Hillshading)\l org.mapsforge.map.rendertheme.renderinstruction.Hillshading.magnitude float \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|0x0010: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.renderinstruction.Hillshading.\<init\>((r0 'this' I:org.mapsforge.map.rendertheme.renderinstruction.Hillshading A[IMMUTABLE_TYPE, THIS]), (r1 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:short A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

