digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.Area.renderWay(Lorg\/mapsforge\/map\/rendertheme\/RenderCallback;Lorg\/mapsforge\/map\/rendertheme\/RenderContext;Lorg\/mapsforge\/map\/layer\/renderer\/PolylineContainer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r2 I:org.mapsforge.core.graphics.Paint) = (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area) org.mapsforge.map.rendertheme.renderinstruction.Area.getFillPaint():org.mapsforge.core.graphics.Paint type: DIRECT A[Catch:\{ all \-\> 0x0048 \}, TRY_ENTER]\l0x0005: IGET  (r0 I:org.mapsforge.core.graphics.Bitmap) = (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area) org.mapsforge.map.rendertheme.renderinstruction.Area.shaderBitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0029 A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r0 I:boolean) = (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area) org.mapsforge.map.rendertheme.renderinstruction.Area.bitmapInvalid boolean A[Catch:\{ all \-\> 0x0048 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0029 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|SYNTHETIC\lSplitter:B:6:0x000d\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x000d\l|0x000d: IGET  (r0 I:java.lang.String) = (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area) org.mapsforge.map.rendertheme.renderinstruction.Area.relativePathPrefix java.lang.String A[Catch:\{ IOException \-\> 0x0026 \}, TRY_ENTER]\l0x000f: IGET  (r1 I:java.lang.String) = (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area) org.mapsforge.map.rendertheme.renderinstruction.Area.src java.lang.String A[Catch:\{ IOException \-\> 0x0026 \}]\l0x0011: INVOKE  (r0 I:org.mapsforge.core.graphics.Bitmap) = \l  (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l org.mapsforge.map.rendertheme.renderinstruction.Area.createBitmap(java.lang.String, java.lang.String):org.mapsforge.core.graphics.Bitmap type: VIRTUAL A[Catch:\{ IOException \-\> 0x0026 \}]\l0x0015: IPUT  \l  (r0 I:org.mapsforge.core.graphics.Bitmap)\l  (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area)\l org.mapsforge.map.rendertheme.renderinstruction.Area.shaderBitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ IOException \-\> 0x0026 \}]\l0x0017: IGET  (r0 I:org.mapsforge.core.graphics.Bitmap) = (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area) org.mapsforge.map.rendertheme.renderinstruction.Area.shaderBitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ IOException \-\> 0x0026 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0029 A[Catch:\{ IOException \-\> 0x0026 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IGET  (r0 I:org.mapsforge.core.graphics.Bitmap) = (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area) org.mapsforge.map.rendertheme.renderinstruction.Area.shaderBitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ IOException \-\> 0x0026 \}]\l0x001d: INVOKE  \l  (r2 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.graphics.Bitmap)\l org.mapsforge.core.graphics.Paint.setBitmapShader(org.mapsforge.core.graphics.Bitmap):void type: INTERFACE A[Catch:\{ IOException \-\> 0x0026 \}]\l0x0020: IGET  (r0 I:org.mapsforge.core.graphics.Bitmap) = (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area) org.mapsforge.map.rendertheme.renderinstruction.Area.shaderBitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ IOException \-\> 0x0026 \}]\l0x0022: INVOKE  (r0 I:org.mapsforge.core.graphics.Bitmap) org.mapsforge.core.graphics.Bitmap.decrementRefCount():void type: INTERFACE A[Catch:\{ IOException \-\> 0x0026 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:6:0x000d\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|SYNTHETIC\lSplitter:B:13:0x0027\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0027\l|0x0027: IPUT  \l  (r0 I:boolean)\l  (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area)\l org.mapsforge.map.rendertheme.renderinstruction.Area.bitmapInvalid boolean A[Catch:\{ all \-\> 0x0048 \}, TRY_ENTER]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|0x0029: INVOKE  (r0 I:org.mapsforge.core.model.Tile) = (r9 I:org.mapsforge.map.layer.renderer.PolylineContainer) org.mapsforge.map.layer.renderer.PolylineContainer.getUpperLeft():org.mapsforge.core.model.Tile type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x002d: INVOKE  (r0 I:org.mapsforge.core.model.Point) = (r0 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.getOrigin():org.mapsforge.core.model.Point type: VIRTUAL A[Catch:\{ all \-\> 0x0048 \}]\l0x0031: INVOKE  \l  (r2 I:org.mapsforge.core.graphics.Paint)\l  (r0 I:org.mapsforge.core.model.Point)\l org.mapsforge.core.graphics.Paint.setBitmapShaderShift(org.mapsforge.core.model.Point):void type: INTERFACE A[Catch:\{ all \-\> 0x0048 \}]\l0x0034: IGET  (r0 I:org.mapsforge.map.layer.renderer.RendererJob) = (r8 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob A[Catch:\{ all \-\> 0x0048 \}]\l0x0036: IGET  (r0 I:org.mapsforge.core.model.Tile) = (r0 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile A[Catch:\{ all \-\> 0x0048 \}]\l0x0038: IGET  (r0 I:byte) = (r0 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte A[Catch:\{ all \-\> 0x0048 \}]\l0x003a: INVOKE  (r3 I:org.mapsforge.core.graphics.Paint) = \l  (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area)\l  (r0 I:byte)\l org.mapsforge.map.rendertheme.renderinstruction.Area.getStrokePaint(byte):org.mapsforge.core.graphics.Paint type: DIRECT A[Catch:\{ all \-\> 0x0048 \}]\l0x003e: IGET  (r4 I:int) = (r6 I:org.mapsforge.map.rendertheme.renderinstruction.Area) org.mapsforge.map.rendertheme.renderinstruction.Area.level int A[Catch:\{ all \-\> 0x0048 \}]\l0x0040: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l0x0041: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l0x0042: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l0x0043: INVOKE  \l  (r0 I:org.mapsforge.map.rendertheme.RenderCallback)\l  (r1 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r2 I:org.mapsforge.core.graphics.Paint)\l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r4 I:int)\l  (r5 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.rendertheme.RenderCallback.renderArea(org.mapsforge.map.rendertheme.RenderContext, org.mapsforge.core.graphics.Paint, org.mapsforge.core.graphics.Paint, int, org.mapsforge.map.layer.renderer.PolylineContainer):void type: INTERFACE A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|0x0046: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0047|0x0047: RETURN   A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0048|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0048: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0048 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0049|0x0049: MONITOR_EXIT  (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0048 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x004a|0x004a: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.renderinstruction.Area.renderWay((r6 'this' I:org.mapsforge.map.rendertheme.renderinstruction.Area A[IMMUTABLE_TYPE, THIS]), (r7 I:org.mapsforge.map.rendertheme.RenderCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.mapsforge.map.layer.renderer.PolylineContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_15;
Node_11 -> Node_13;
Node_12 -> Node_11;
Node_13 -> Node_14;
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

