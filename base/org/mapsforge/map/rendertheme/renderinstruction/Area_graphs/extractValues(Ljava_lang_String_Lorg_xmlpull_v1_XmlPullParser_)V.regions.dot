digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.Area.extractValues(Ljava\/lang\/String;Lorg\/xmlpull\/v1\/XmlPullParser;)V" {
subgraph cluster_Region_885650360 {
label = "R(2:0|(3:3|(1:5)(1:(1:8)(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34))))))))))|32))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
subgraph cluster_LoopRegion_1772674714 {
label = "LOOP:0: (3:3|(1:5)(1:(1:8)(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34))))))))))|32)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|if (r0 \< r7.getAttributeCount()) goto L_0x0007\l}"];
subgraph cluster_Region_1515486734 {
label = "R(3:3|(1:5)(1:(1:8)(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34))))))))))|32)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|java.lang.String java.lang.String r1 = r7.getAttributeName(r0)\ljava.lang.String java.lang.String r2 = r7.getAttributeValue(r0)\l}"];
subgraph cluster_IfRegion_1419607311 {
label = "IF [B:4:0x0015] THEN: R(1:5) ELSE: R(1:(1:8)(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34))))))))))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|if (\"src\".equals(r1) == true) goto L_0x0017\l}"];
subgraph cluster_Region_857220347 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|r5.src = r2\l}"];
}
subgraph cluster_Region_1992165495 {
label = "R(1:(1:8)(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34)))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2079204616 {
label = "IF [B:7:0x0021] THEN: R(1:8) ELSE: R(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|if (\"cat\".equals(r1) == true) goto L_0x0023\l}"];
subgraph cluster_Region_304601291 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0023|r5.category = r2\l}"];
}
subgraph cluster_Region_317346978 {
label = "R(1:(1:11)(1:(1:14)(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34))))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_45318261 {
label = "IF [B:10:0x002d] THEN: R(1:11) ELSE: R(1:(1:14)(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34)))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x002d|if (\"fill\".equals(r1) == true) goto L_0x002f\l}"];
subgraph cluster_Region_1396703743 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x002f|r5.fill.setColor(org.mapsforge.map.rendertheme.XmlUtils.getColor(r5.graphicFactory, r2, r5.displayModel.getThemeCallback()))\l}"];
}
subgraph cluster_Region_2068218853 {
label = "R(1:(1:14)(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34)))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1036371550 {
label = "IF [B:13:0x0048] THEN: R(1:14) ELSE: R(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0048|if (\"scale\".equals(r1) == true) goto L_0x004a\l}"];
subgraph cluster_Region_889203038 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004a|r5.scale = scaleFromValue(r2)\l}"];
}
subgraph cluster_Region_1325283709 {
label = "R(1:(1:17)(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34))))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_34578924 {
label = "IF [B:16:0x0058] THEN: R(1:17) ELSE: R(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34)))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0058|if (\"stroke\".equals(r1) == true) goto L_0x005a\l}"];
subgraph cluster_Region_1204681977 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x005a|r5.stroke.setColor(org.mapsforge.map.rendertheme.XmlUtils.getColor(r5.graphicFactory, r2, r5.displayModel.getThemeCallback()))\l}"];
}
subgraph cluster_Region_1216707941 {
label = "R(1:(1:20)(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34)))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_146997952 {
label = "IF [B:19:0x0072] THEN: R(1:20) ELSE: R(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0072|if (\"stroke\-width\".equals(r1) == true) goto L_0x0074\l}"];
subgraph cluster_Region_376281989 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0074|r5.strokeWidth = org.mapsforge.map.rendertheme.XmlUtils.parseNonNegativeFloat(r1, r2) * r5.displayModel.getScaleFactor()\l}"];
}
subgraph cluster_Region_143290259 {
label = "R(1:(1:23)(1:(1:26)(1:(1:47)(1:(1:31)(1:34))))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_84498464 {
label = "IF [B:22:0x0089] THEN: R(1:23) ELSE: R(1:(1:26)(1:(1:47)(1:(1:31)(1:34)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0089|if (\"symbol\-height\".equals(r1) == true) goto L_0x008b\l}"];
subgraph cluster_Region_2054588844 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x008b|r5.height = ((float) org.mapsforge.map.rendertheme.XmlUtils.parseNonNegativeInteger(r1, r2)) * r5.displayModel.getScaleFactor()\l}"];
}
subgraph cluster_Region_1193053388 {
label = "R(1:(1:26)(1:(1:47)(1:(1:31)(1:34)))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1790132512 {
label = "IF [B:25:0x00a1] THEN: R(1:26) ELSE: R(1:(1:47)(1:(1:31)(1:34))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x00a1|if (\"symbol\-percent\".equals(r1) == true) goto L_0x00a3\l}"];
subgraph cluster_Region_276323904 {
label = "R(1:26)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00a3|r5.percent = org.mapsforge.map.rendertheme.XmlUtils.parseNonNegativeInteger(r1, r2)\l}"];
}
subgraph cluster_Region_2023121027 {
label = "R(1:(1:47)(1:(1:31)(1:34))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1602214967 {
label = "IF [B:28:0x00b0] THEN: R(1:47) ELSE: R(1:(1:31)(1:34)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x00b0|if (\"symbol\-scaling\".equals(r1) != false) goto L_0x00ca\l}"];
subgraph cluster_Region_454771873 {
label = "R(1:47)";
node [shape=record,color=blue];
Node_47 [shape=record,label="{47\:\ 0x00ca|SYNTHETIC\l|continue\l}"];
}
subgraph cluster_Region_1077298854 {
label = "R(1:(1:31)(1:34)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_285869469 {
label = "IF [B:30:0x00b9] THEN: R(1:31) ELSE: R(1:34) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00b9|if (\"symbol\-width\".equals(r1) == true) goto L_0x00bb\l}"];
subgraph cluster_Region_1640037597 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x00bb|r5.width = ((float) org.mapsforge.map.rendertheme.XmlUtils.parseNonNegativeInteger(r1, r2)) * r5.displayModel.getScaleFactor()\l}"];
}
subgraph cluster_Region_791809890 {
label = "R(1:34)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00d2|throw org.mapsforge.map.rendertheme.XmlUtils.createXmlPullParserException(r6, r1, r2, r0)\l}"];
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
Node_32 [shape=record,label="{32\:\ 0x00ca|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:32:0x00ca\l|r0++\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:32:0x00ca] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:32:0x00ca\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001b}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0027}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0042}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0052}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x006c}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0083}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x009b}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x00aa}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x00b3}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00ce}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x00d3}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x00d3|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00ce|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x00ca|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x00ca|SYNTHETIC\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00ca|SYNTHETIC\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00ca|SYNTHETIC\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x00ca|SYNTHETIC\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x00ca|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x00ca|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x00ca|SYNTHETIC\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x00ca|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.rendertheme.renderinstruction.Area.extractValues((r5v0 'this' org.mapsforge.map.rendertheme.renderinstruction.Area A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_36[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_39;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_40;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_41;
Node_13 -> Node_14;
Node_13 -> Node_15[style=dashed];
Node_14 -> Node_42;
Node_16 -> Node_17;
Node_16 -> Node_18[style=dashed];
Node_17 -> Node_43;
Node_19 -> Node_20;
Node_19 -> Node_21[style=dashed];
Node_20 -> Node_44;
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_45;
Node_25 -> Node_26;
Node_25 -> Node_27[style=dashed];
Node_26 -> Node_46;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_47;
Node_47 -> Node_32;
Node_30 -> Node_31;
Node_30 -> Node_37[style=dashed];
Node_31 -> Node_38;
Node_32 -> Node_1;
Node_1 -> Node_2;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_15 -> Node_16;
Node_18 -> Node_19;
Node_21 -> Node_22;
Node_24 -> Node_25;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_33 -> Node_34;
Node_36 -> Node_35;
Node_37 -> Node_33;
Node_38 -> Node_32;
Node_39 -> Node_32;
Node_40 -> Node_32;
Node_41 -> Node_32;
Node_42 -> Node_32;
Node_43 -> Node_32;
Node_44 -> Node_32;
Node_45 -> Node_32;
Node_46 -> Node_32;
}

