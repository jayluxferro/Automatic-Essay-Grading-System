digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.PathText.renderWay(Lorg\/mapsforge\/map\/rendertheme\/RenderCallback;Lorg\/mapsforge\/map\/rendertheme\/RenderContext;Lorg\/mapsforge\/map\/layer\/renderer\/PolylineContainer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r14\lr2 = r16\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (org.mapsforge.core.graphics.Display.NEVER != r0.display) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|java.lang.String r5 = r0.textKey.getValue(r17.getTags())\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|if (r5 != null) goto L_0x0017\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|java.lang.Float r1 = r0.dyScaled.get(java.lang.Byte.valueOf(r2.rendererJob.tile.zoomLevel))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|if (r1 != null) goto L_0x0031\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|java.lang.Float r1 = java.lang.Float.valueOf(r0.f277dy)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|PHI: r1 \l  PHI: (r1v5 java.lang.Float) = (r1v4 java.lang.Float), (r1v14 java.lang.Float) binds: [B:7:0x0029, B:8:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r15\lr2 = r16\lr1.renderWayText(r2, r0.display, r0.priority, r5, r1.floatValue(), getFillPaint(r2.rendererJob.tile.zoomLevel), getStrokePaint(r2.rendererJob.tile.zoomLevel), r0.repeat, r0.repeatGap, r0.repeatStart, r0.rotate, r17)\l}"];
Node_10 [shape=record,label="{10\:\ 0x005d|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.renderinstruction.PathText.renderWay((r14v0 'this' org.mapsforge.map.rendertheme.renderinstruction.PathText A[IMMUTABLE_TYPE, THIS]), (r15v0 org.mapsforge.map.rendertheme.RenderCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 org.mapsforge.map.layer.renderer.PolylineContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

