digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.TextKey.getValue(Ljava\/util\/List;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:7:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r2 I:java.lang.String) = \l  (r4 I:org.mapsforge.map.rendertheme.renderinstruction.TextKey)\l org.mapsforge.map.rendertheme.renderinstruction.TextKey.key java.lang.String \l0x0009: INVOKE  (r3 I:java.lang.Object) = (r5 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x000d: CHECK_CAST  (r3 I:org.mapsforge.core.model.Tag) = (org.mapsforge.core.model.Tag) (r3 I:?[OBJECT, ARRAY]) \l0x000f: IGET  (r3 I:java.lang.String) = (r3 I:org.mapsforge.core.model.Tag) org.mapsforge.core.model.Tag.key java.lang.String \l0x0011: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r3 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0020 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: INVOKE  (r5 I:java.lang.Object) = (r5 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x001b: CHECK_CAST  (r5 I:org.mapsforge.core.model.Tag) = (org.mapsforge.core.model.Tag) (r5 I:?[OBJECT, ARRAY]) \l0x001d: IGET  (r5 I:java.lang.String) = (r5 I:org.mapsforge.core.model.Tag) org.mapsforge.core.model.Tag.value java.lang.String \l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: RETURN  (r5 I:java.lang.String) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: RETURN  (r5 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{java.lang.String org.mapsforge.map.rendertheme.renderinstruction.TextKey.getValue((r4 'this' I:org.mapsforge.map.rendertheme.renderinstruction.TextKey A[IMMUTABLE_TYPE, THIS]), (r5 I:java.util.List\<org.mapsforge.core.model.Tag\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/model\/Tag;, \>;), Ljava\/lang\/String;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_1;
Node_7 -> Node_8;
}

