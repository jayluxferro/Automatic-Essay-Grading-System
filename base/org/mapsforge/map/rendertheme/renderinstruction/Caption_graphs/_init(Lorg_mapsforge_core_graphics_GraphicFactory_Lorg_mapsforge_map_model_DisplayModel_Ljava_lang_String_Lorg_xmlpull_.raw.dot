digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.Caption.\<init\>(Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/model\/DisplayModel;Ljava\/lang\/String;Lorg\/xmlpull\/v1\/XmlPullParser;Ljava\/util\/Map;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction)\l  (r3 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r4 I:org.mapsforge.map.model.DisplayModel)\l org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.\<init\>(org.mapsforge.core.graphics.GraphicFactory, org.mapsforge.map.model.DisplayModel):void type: DIRECT \l0x0003: INVOKE  (r0 I:org.mapsforge.core.graphics.Paint) = (r3 I:org.mapsforge.core.graphics.GraphicFactory) org.mapsforge.core.graphics.GraphicFactory.createPaint():org.mapsforge.core.graphics.Paint type: INTERFACE \l0x0007: IPUT  \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.fill org.mapsforge.core.graphics.Paint \l0x0009: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.fill org.mapsforge.core.graphics.Paint \l0x000b: SGET  (r1 I:org.mapsforge.core.graphics.Color) =  org.mapsforge.core.graphics.Color.BLACK org.mapsforge.core.graphics.Color \l0x000d: INVOKE  \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r1 I:org.mapsforge.core.graphics.Color)\l org.mapsforge.core.graphics.Paint.setColor(org.mapsforge.core.graphics.Color):void type: INTERFACE \l0x0010: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.fill org.mapsforge.core.graphics.Paint \l0x0012: SGET  (r1 I:org.mapsforge.core.graphics.Style) =  org.mapsforge.core.graphics.Style.FILL org.mapsforge.core.graphics.Style \l0x0014: INVOKE  \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r1 I:org.mapsforge.core.graphics.Style)\l org.mapsforge.core.graphics.Paint.setStyle(org.mapsforge.core.graphics.Style):void type: INTERFACE \l0x0017: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0019: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x001c: IPUT  \l  (r0 I:java.util.Map\<java.lang.Byte, org.mapsforge.core.graphics.Paint\>)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.fills java.util.Map \l0x001e: INVOKE  (r0 I:org.mapsforge.core.graphics.Paint) = (r3 I:org.mapsforge.core.graphics.GraphicFactory) org.mapsforge.core.graphics.GraphicFactory.createPaint():org.mapsforge.core.graphics.Paint type: INTERFACE \l0x0022: IPUT  \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.stroke org.mapsforge.core.graphics.Paint \l0x0024: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.stroke org.mapsforge.core.graphics.Paint \l0x0026: SGET  (r1 I:org.mapsforge.core.graphics.Color) =  org.mapsforge.core.graphics.Color.BLACK org.mapsforge.core.graphics.Color \l0x0028: INVOKE  \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r1 I:org.mapsforge.core.graphics.Color)\l org.mapsforge.core.graphics.Paint.setColor(org.mapsforge.core.graphics.Color):void type: INTERFACE \l0x002b: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.stroke org.mapsforge.core.graphics.Paint \l0x002d: SGET  (r1 I:org.mapsforge.core.graphics.Style) =  org.mapsforge.core.graphics.Style.STROKE org.mapsforge.core.graphics.Style \l0x002f: INVOKE  \l  (r0 I:org.mapsforge.core.graphics.Paint)\l  (r1 I:org.mapsforge.core.graphics.Style)\l org.mapsforge.core.graphics.Paint.setStyle(org.mapsforge.core.graphics.Style):void type: INTERFACE \l0x0032: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0034: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0037: IPUT  \l  (r0 I:java.util.Map\<java.lang.Byte, org.mapsforge.core.graphics.Paint\>)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.strokes java.util.Map \l0x0039: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x003b: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x003e: IPUT  \l  (r0 I:java.util.Map\<java.lang.Byte, java.lang.Float\>)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.dyScaled java.util.Map \l0x0040: SGET  (r0 I:org.mapsforge.core.graphics.Display) =  org.mapsforge.core.graphics.Display.IFSPACE org.mapsforge.core.graphics.Display \l0x0042: IPUT  \l  (r0 I:org.mapsforge.core.graphics.Display)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.display org.mapsforge.core.graphics.Display \l0x0044: INVOKE  (r0 I:float) = (r4 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getScaleFactor():float type: VIRTUAL \l0x0048: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1084227584(0x40a00000, float:5.0) ?[int, float, short, byte, char])\l \l0x004a: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x004c: IPUT  \l  (r0 I:float)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.gap float \l0x004e: INVOKE  \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l  (r3 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r4 I:org.mapsforge.map.model.DisplayModel)\l  (r5 I:java.lang.String)\l  (r6 I:org.xmlpull.v1.XmlPullParser)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.extractValues(org.mapsforge.core.graphics.GraphicFactory, org.mapsforge.map.model.DisplayModel, java.lang.String, org.xmlpull.v1.XmlPullParser):void type: DIRECT \l0x0051: IGET  (r3 I:java.lang.String) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.symbolId java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0053|0x0053: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0065 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0055|0x0055: IGET  (r3 I:java.lang.String) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.symbolId java.lang.String \l0x0057: INVOKE  (r3 I:java.lang.Object) = (r7 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x005b: CHECK_CAST  (r3 I:org.mapsforge.map.rendertheme.renderinstruction.Symbol) = (org.mapsforge.map.rendertheme.renderinstruction.Symbol) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x005d|0x005d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0065 \l}"];
Node_4 [shape=record,label="{4\:\ 0x005f|0x005f: INVOKE  (r3 I:org.mapsforge.core.graphics.Bitmap) = \l  (r3 I:org.mapsforge.map.rendertheme.renderinstruction.Symbol)\l org.mapsforge.map.rendertheme.renderinstruction.Symbol.getBitmap():org.mapsforge.core.graphics.Bitmap type: VIRTUAL \l0x0063: IPUT  \l  (r3 I:org.mapsforge.core.graphics.Bitmap)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.bitmap org.mapsforge.core.graphics.Bitmap \l}"];
Node_5 [shape=record,label="{5\:\ 0x0065|0x0065: IGET  (r3 I:org.mapsforge.core.graphics.Position) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.position org.mapsforge.core.graphics.Position \l}"];
Node_6 [shape=record,label="{6\:\ 0x0067|0x0067: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0076 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0069|0x0069: IGET  (r3 I:org.mapsforge.core.graphics.Bitmap) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.bitmap org.mapsforge.core.graphics.Bitmap \l}"];
Node_8 [shape=record,label="{8\:\ 0x006b|0x006b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0072 \l}"];
Node_9 [shape=record,label="{9\:\ 0x006d|0x006d: SGET  (r3 I:org.mapsforge.core.graphics.Position) =  org.mapsforge.core.graphics.Position.CENTER org.mapsforge.core.graphics.Position \l0x006f: IPUT  \l  (r3 I:org.mapsforge.core.graphics.Position)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.position org.mapsforge.core.graphics.Position \l}"];
Node_10 [shape=record,label="{10\:\ 0x0072|0x0072: SGET  (r3 I:org.mapsforge.core.graphics.Position) =  org.mapsforge.core.graphics.Position.BELOW org.mapsforge.core.graphics.Position \l0x0074: IPUT  \l  (r3 I:org.mapsforge.core.graphics.Position)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.position org.mapsforge.core.graphics.Position \l}"];
Node_11 [shape=record,label="{11\:\ 0x0076|0x0076: SGET  (r3 I:int[]) =  org.mapsforge.map.rendertheme.renderinstruction.Caption.1.$SwitchMap$org$mapsforge$core$graphics$Position int[] \l0x0078: IGET  (r5 I:org.mapsforge.core.graphics.Position) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.position org.mapsforge.core.graphics.Position \l0x007a: INVOKE  (r5 I:int) = (r5 I:org.mapsforge.core.graphics.Position) org.mapsforge.core.graphics.Position.ordinal():int type: VIRTUAL \l0x007e: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0080|0x0080: SWITCH  \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4, 5, 6, 7, 8, 9] t:[0x00a9, 0x00a9, 0x00a9, 0x009a, 0x009a, 0x009a, 0x008b, 0x008b, 0x008b] \l}"];
Node_13 [shape=record,label="{13\:\ 0x0083|0x0083: NEW_INSTANCE  (r3 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0085: CONST_STR  (r4 I:java.lang.String) =  \"Position invalid\" \l0x0087: INVOKE  \l  (r3 I:java.lang.IllegalArgumentException)\l  (r4 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x008a|0x008a: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_15 [shape=record,label="{15\:\ 0x008b|0x008b: IGET  (r3 I:org.mapsforge.core.graphics.Paint) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.stroke org.mapsforge.core.graphics.Paint \l0x008d: SGET  (r5 I:org.mapsforge.core.graphics.Align) =  org.mapsforge.core.graphics.Align.LEFT org.mapsforge.core.graphics.Align \l0x008f: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r5 I:org.mapsforge.core.graphics.Align)\l org.mapsforge.core.graphics.Paint.setTextAlign(org.mapsforge.core.graphics.Align):void type: INTERFACE \l0x0092: IGET  (r3 I:org.mapsforge.core.graphics.Paint) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.fill org.mapsforge.core.graphics.Paint \l0x0094: SGET  (r5 I:org.mapsforge.core.graphics.Align) =  org.mapsforge.core.graphics.Align.LEFT org.mapsforge.core.graphics.Align \l0x0096: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r5 I:org.mapsforge.core.graphics.Align)\l org.mapsforge.core.graphics.Paint.setTextAlign(org.mapsforge.core.graphics.Align):void type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x009a|0x009a: IGET  (r3 I:org.mapsforge.core.graphics.Paint) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.stroke org.mapsforge.core.graphics.Paint \l0x009c: SGET  (r5 I:org.mapsforge.core.graphics.Align) =  org.mapsforge.core.graphics.Align.RIGHT org.mapsforge.core.graphics.Align \l0x009e: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r5 I:org.mapsforge.core.graphics.Align)\l org.mapsforge.core.graphics.Paint.setTextAlign(org.mapsforge.core.graphics.Align):void type: INTERFACE \l0x00a1: IGET  (r3 I:org.mapsforge.core.graphics.Paint) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.fill org.mapsforge.core.graphics.Paint \l0x00a3: SGET  (r5 I:org.mapsforge.core.graphics.Align) =  org.mapsforge.core.graphics.Align.RIGHT org.mapsforge.core.graphics.Align \l0x00a5: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r5 I:org.mapsforge.core.graphics.Align)\l org.mapsforge.core.graphics.Paint.setTextAlign(org.mapsforge.core.graphics.Align):void type: INTERFACE \l}"];
Node_17 [shape=record,label="{17\:\ 0x00a9|0x00a9: IGET  (r3 I:org.mapsforge.core.graphics.Paint) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.stroke org.mapsforge.core.graphics.Paint \l0x00ab: SGET  (r5 I:org.mapsforge.core.graphics.Align) =  org.mapsforge.core.graphics.Align.CENTER org.mapsforge.core.graphics.Align \l0x00ad: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r5 I:org.mapsforge.core.graphics.Align)\l org.mapsforge.core.graphics.Paint.setTextAlign(org.mapsforge.core.graphics.Align):void type: INTERFACE \l0x00b0: IGET  (r3 I:org.mapsforge.core.graphics.Paint) = \l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.fill org.mapsforge.core.graphics.Paint \l0x00b2: SGET  (r5 I:org.mapsforge.core.graphics.Align) =  org.mapsforge.core.graphics.Align.CENTER org.mapsforge.core.graphics.Align \l0x00b4: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r5 I:org.mapsforge.core.graphics.Align)\l org.mapsforge.core.graphics.Paint.setTextAlign(org.mapsforge.core.graphics.Align):void type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x00b7|0x00b7: INVOKE  (r3 I:int) = (r4 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getMaxTextWidth():int type: VIRTUAL \l0x00bb: IPUT  \l  (r3 I:int)\l  (r2 I:org.mapsforge.map.rendertheme.renderinstruction.Caption)\l org.mapsforge.map.rendertheme.renderinstruction.Caption.maxTextWidth int \l}"];
Node_19 [shape=record,label="{19\:\ 0x00bd|0x00bd: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.renderinstruction.Caption.\<init\>((r2 'this' I:org.mapsforge.map.rendertheme.renderinstruction.Caption A[IMMUTABLE_TYPE, THIS]), (r3 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.Map\<java.lang.String, org.mapsforge.map.rendertheme.renderinstruction.Symbol\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/core\/graphics\/GraphicFactory;, Lorg\/mapsforge\/map\/model\/DisplayModel;, Ljava\/lang\/String;, Lorg\/xmlpull\/v1\/XmlPullParser;, Ljava\/util\/Map\<, Ljava\/lang\/String;, Lorg\/mapsforge\/map\/rendertheme\/renderinstruction\/Symbol;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_15;
Node_12 -> Node_16;
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_15 -> Node_18;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

