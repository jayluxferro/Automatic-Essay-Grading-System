digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.createBitmap(Ljava\/lang\/String;Ljava\/lang\/String;)Lorg\/mapsforge\/core\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001c \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:boolean) = (r10 I:java.lang.String) java.lang.String.isEmpty():boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r1 I:org.mapsforge.core.graphics.GraphicFactory) = \l  (r8 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction)\l org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.graphicFactory org.mapsforge.core.graphics.GraphicFactory \l0x000b: IGET  (r2 I:org.mapsforge.map.model.DisplayModel) = \l  (r8 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction)\l org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.displayModel org.mapsforge.map.model.DisplayModel \l0x000d: IGET  (r0 I:float) = \l  (r8 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction)\l org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.width float \l0x000f: CAST  (r5 I:int) = (int) (r0 I:float) \l0x0010: IGET  (r0 I:float) = \l  (r8 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction)\l org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.height float \l0x0012: CAST  (r6 I:int) = (int) (r0 I:float) \l0x0013: IGET  (r7 I:int) = \l  (r8 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction)\l org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.percent int \l0x0015: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0016: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0017: INVOKE  (r9 I:org.mapsforge.core.graphics.ResourceBitmap) = \l  (r1 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r2 I:org.mapsforge.map.model.DisplayModel)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l org.mapsforge.map.rendertheme.XmlUtils.createBitmap(org.mapsforge.core.graphics.GraphicFactory, org.mapsforge.map.model.DisplayModel, java.lang.String, java.lang.String, int, int, int):org.mapsforge.core.graphics.ResourceBitmap type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: RETURN  (r9 I:org.mapsforge.core.graphics.Bitmap) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: RETURN  (r9 I:org.mapsforge.core.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{protected org.mapsforge.core.graphics.Bitmap org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.createBitmap((r8 'this' I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_2 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
}

