digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.Scale.values()[Lorg\/mapsforge\/map\/rendertheme\/renderinstruction\/RenderInstruction$Scale;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale[]) =  org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.Scale.$VALUES org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale[] \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.Object) java.lang.Object.clone():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale[]) = (org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale[]) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN  \l  (r0 I:org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale[])\l \l}"];
MethodNode[shape=record,label="{public static org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction$Scale[] org.mapsforge.map.rendertheme.renderinstruction.RenderInstruction.Scale.values() }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

