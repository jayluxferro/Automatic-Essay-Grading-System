digraph "CFG fororg.mapsforge.map.rendertheme.renderinstruction.LineSymbol.renderWay(Lorg\/mapsforge\/map\/rendertheme\/RenderCallback;Lorg\/mapsforge\/map\/rendertheme\/RenderContext;Lorg\/mapsforge\/map\/layer\/renderer\/PolylineContainer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r14\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (org.mapsforge.core.graphics.Display.NEVER != r0.display) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000a|if (r0.bitmap != null) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c}"];
Node_6 [shape=record,label="{6\:\ 0x000e|if (r0.bitmapInvalid != false) goto L_0x001e\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|SYNTHETIC\lSplitter:B:7:0x0010\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ IOException \-\> 0x001b \}\lSplitter:B:7:0x0010\l|r0.bitmap = createBitmap(r0.relativePathPrefix, r0.src)     \/\/ Catch:\{ IOException \-\> 0x001b \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|r0.bitmapInvalid = true\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:7:0x0010\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|java.lang.Float r1 = r0.dyScaled.get(java.lang.Byte.valueOf(r16.rendererJob.tile.zoomLevel))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|if (r1 != null) goto L_0x003a\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|java.lang.Float r1 = java.lang.Float.valueOf(r0.f276dy)\l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|PHI: r1 \l  PHI: (r1v5 java.lang.Float) = (r1v4 java.lang.Float), (r1v7 java.lang.Float) binds: [B:12:0x0032, B:13:0x0034] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|if (r0.bitmap == null) goto L_?\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|r2 = r15\lr3 = r16\lr2.renderWaySymbol(r3, r0.display, r0.priority, r0.bitmap, r1.floatValue(), r0.alignCenter, r0.repeat, r0.repeatGap, r0.repeatStart, r0.rotate, r17)\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.rendertheme.renderinstruction.LineSymbol.renderWay((r14v0 'this' org.mapsforge.map.rendertheme.renderinstruction.LineSymbol A[IMMUTABLE_TYPE, THIS]), (r15v0 org.mapsforge.map.rendertheme.RenderCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 org.mapsforge.map.layer.renderer.PolylineContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_10;
Node_8 -> Node_11;
Node_9 -> Node_11;
Node_10 -> Node_9;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
}

