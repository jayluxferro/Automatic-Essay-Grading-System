digraph "CFG fororg.mapsforge.map.model.DisplayModel.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INSTANCE_OF  (r1 I:boolean) = (r5 I:?[OBJECT, ARRAY]) org.mapsforge.map.model.DisplayModel \l0x0006: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: RETURN  (r2 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: CHECK_CAST  (r5 I:org.mapsforge.map.model.DisplayModel) = (org.mapsforge.map.model.DisplayModel) (r5 I:?[OBJECT, ARRAY]) \l0x000c: IGET  (r1 I:int) = (r4 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.backgroundColor int \l0x000e: IGET  (r3 I:int) = (r5 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.backgroundColor int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0013 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: RETURN  (r2 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IGET  (r1 I:org.mapsforge.core.graphics.Filter) = (r4 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.filter org.mapsforge.core.graphics.Filter \l0x0015: IGET  (r3 I:org.mapsforge.core.graphics.Filter) = (r5 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.filter org.mapsforge.core.graphics.Filter \l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x001a \l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: RETURN  (r2 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001a|0x001a: IGET  (r1 I:int) = (r4 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.fixedTileSize int \l0x001c: IGET  (r3 I:int) = (r5 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.fixedTileSize int \l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|0x001e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0021 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|0x0020: RETURN  (r2 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|0x0021: IGET  (r1 I:int) = (r4 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.maxTextWidth int \l0x0023: IGET  (r3 I:int) = (r5 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.maxTextWidth int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0025|0x0025: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0028 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0027|0x0027: RETURN  (r2 I:boolean) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0028|0x0028: IGET  (r1 I:float) = (r4 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.maxTextWidthFactor float \l0x002a: INVOKE  (r1 I:int) = (r1 I:float) java.lang.Float.floatToIntBits(float):int type: STATIC \l0x002e: IGET  (r3 I:float) = (r5 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.maxTextWidthFactor float \l0x0030: INVOKE  (r3 I:int) = (r3 I:float) java.lang.Float.floatToIntBits(float):int type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0037 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0036|0x0036: RETURN  (r2 I:boolean) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0037|0x0037: IGET  (r1 I:int) = (r4 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.tileSize int \l0x0039: IGET  (r3 I:int) = (r5 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.tileSize int \l}"];
Node_22 [shape=record,label="{22\:\ 0x003b|0x003b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x003e \l}"];
Node_23 [shape=record,label="{23\:\ 0x003d|0x003d: RETURN  (r2 I:boolean) \l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|0x003e: IGET  (r1 I:int) = (r4 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.tileSizeMultiple int \l0x0040: IGET  (r3 I:int) = (r5 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.tileSizeMultiple int \l}"];
Node_25 [shape=record,label="{25\:\ 0x0042|0x0042: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0045 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0044|0x0044: RETURN  (r2 I:boolean) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0045|0x0045: IGET  (r1 I:float) = (r4 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.userScaleFactor float \l0x0047: INVOKE  (r1 I:int) = (r1 I:float) java.lang.Float.floatToIntBits(float):int type: STATIC \l0x004b: IGET  (r5 I:float) = (r5 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.userScaleFactor float \l0x004d: INVOKE  (r5 I:int) = (r5 I:float) java.lang.Float.floatToIntBits(float):int type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x0051|0x0051: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0054 \l}"];
Node_29 [shape=record,label="{29\:\ 0x0053|0x0053: RETURN  (r2 I:boolean) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0054|0x0054: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.model.DisplayModel.equals((r4 'this' I:org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
}

