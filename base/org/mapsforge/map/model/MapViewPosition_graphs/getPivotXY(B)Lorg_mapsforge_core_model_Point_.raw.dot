digraph "CFG fororg.mapsforge.map.model.MapViewPosition.getPivotXY(B)Lorg\/mapsforge\/core\/model\/Point;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:org.mapsforge.core.model.LatLong) = (r3 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.pivot org.mapsforge.core.model.LatLong A[Catch:\{ all \-\> 0x001a \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 A[Catch:\{ all \-\> 0x001a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IGET  (r0 I:org.mapsforge.core.model.LatLong) = (r3 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.pivot org.mapsforge.core.model.LatLong A[Catch:\{ all \-\> 0x001a \}]\l0x0007: IGET  (r1 I:org.mapsforge.map.model.DisplayModel) = (r3 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ all \-\> 0x001a \}]\l0x0009: INVOKE  (r1 I:int) = (r1 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL A[Catch:\{ all \-\> 0x001a \}]\l0x000d: INVOKE  (r1 I:long) = (r4 I:byte), (r1 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC A[Catch:\{ all \-\> 0x001a \}]\l0x0011: INVOKE  (r4 I:org.mapsforge.core.model.Point) = (r0 I:org.mapsforge.core.model.LatLong), (r1 I:long) org.mapsforge.core.util.MercatorProjection.getPixel(org.mapsforge.core.model.LatLong, long):org.mapsforge.core.model.Point type: STATIC A[Catch:\{ all \-\> 0x001a \}]\l0x0014: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: RETURN  (r4 I:org.mapsforge.core.model.Point) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: RETURN  (r4 I:org.mapsforge.core.model.Point) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x001a: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|0x001c: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized org.mapsforge.core.model.Point org.mapsforge.map.model.MapViewPosition.getPivotXY((r3 'this' I:org.mapsforge.map.model.MapViewPosition A[IMMUTABLE_TYPE, THIS]), (r4 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

