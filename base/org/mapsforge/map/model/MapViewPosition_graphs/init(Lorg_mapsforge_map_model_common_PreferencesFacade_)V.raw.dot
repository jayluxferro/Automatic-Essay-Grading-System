digraph "CFG fororg.mapsforge.map.model.MapViewPosition.init(Lorg\/mapsforge\/map\/model\/common\/PreferencesFacade;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: CONST_STR  (r0 I:java.lang.String) =  \"latitude\" \l0x0003: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\lSplitter:B:2:0x0005\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0005\l|0x0005: INVOKE  (r3 I:double) = \l  (r13 I:org.mapsforge.map.model.common.PreferencesFacade)\l  (r0 I:java.lang.String)\l  (r1 I:double)\l org.mapsforge.map.model.common.PreferencesFacade.getDouble(java.lang.String, double):double type: INTERFACE A[Catch:\{ all \-\> 0x0075 \}, TRY_ENTER]\l0x0009: IPUT  \l  (r3 I:double)\l  (r12 I:org.mapsforge.map.model.MapViewPosition)\l org.mapsforge.map.model.MapViewPosition.latitude double A[Catch:\{ all \-\> 0x0075 \}]\l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"longitude\" A[Catch:\{ all \-\> 0x0075 \}]\l0x000d: INVOKE  (r0 I:double) = \l  (r13 I:org.mapsforge.map.model.common.PreferencesFacade)\l  (r0 I:java.lang.String)\l  (r1 I:double)\l org.mapsforge.map.model.common.PreferencesFacade.getDouble(java.lang.String, double):double type: INTERFACE A[Catch:\{ all \-\> 0x0075 \}]\l0x0011: IPUT  \l  (r0 I:double)\l  (r12 I:org.mapsforge.map.model.MapViewPosition)\l org.mapsforge.map.model.MapViewPosition.longitude double A[Catch:\{ all \-\> 0x0075 \}]\l0x0013: CONST_STR  (r0 I:java.lang.String) =  \"latitudeMax\" A[Catch:\{ all \-\> 0x0075 \}]\l0x0015: CONST  (r1 I:?[long, double]) = \l  (9221120237041090560(0x7ff8000000000000, double:NaN) ?[long, double])\l A[Catch:\{ all \-\> 0x0075 \}]\l0x0017: INVOKE  (r8 I:double) = \l  (r13 I:org.mapsforge.map.model.common.PreferencesFacade)\l  (r0 I:java.lang.String)\l  (r1 I:double)\l org.mapsforge.map.model.common.PreferencesFacade.getDouble(java.lang.String, double):double type: INTERFACE A[Catch:\{ all \-\> 0x0075 \}]\l0x001b: CONST_STR  (r0 I:java.lang.String) =  \"latitudeMin\" A[Catch:\{ all \-\> 0x0075 \}]\l0x001d: INVOKE  (r4 I:double) = \l  (r13 I:org.mapsforge.map.model.common.PreferencesFacade)\l  (r0 I:java.lang.String)\l  (r1 I:double)\l org.mapsforge.map.model.common.PreferencesFacade.getDouble(java.lang.String, double):double type: INTERFACE A[Catch:\{ all \-\> 0x0075 \}]\l0x0021: CONST_STR  (r0 I:java.lang.String) =  \"longitudeMax\" A[Catch:\{ all \-\> 0x0075 \}]\l0x0023: INVOKE  (r10 I:double) = \l  (r13 I:org.mapsforge.map.model.common.PreferencesFacade)\l  (r0 I:java.lang.String)\l  (r1 I:double)\l org.mapsforge.map.model.common.PreferencesFacade.getDouble(java.lang.String, double):double type: INTERFACE A[Catch:\{ all \-\> 0x0075 \}]\l0x0027: CONST_STR  (r0 I:java.lang.String) =  \"longitudeMin\" A[Catch:\{ all \-\> 0x0075 \}]\l0x0029: INVOKE  (r6 I:double) = \l  (r13 I:org.mapsforge.map.model.common.PreferencesFacade)\l  (r0 I:java.lang.String)\l  (r1 I:double)\l org.mapsforge.map.model.common.PreferencesFacade.getDouble(java.lang.String, double):double type: INTERFACE A[Catch:\{ all \-\> 0x0075 \}]\l0x002d: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0075 \}]\l0x002e: NEW_ARRAY  (r0 I:double[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: double[] A[Catch:\{ all \-\> 0x0075 \}]\l0x0030: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0075 \}]\l0x0031: APUT  \l  (r0 I:?[long, double][])\l  (r1 I:?[int, short, byte, char])\l  (r8 I:?[long, double])\l A[Catch:\{ all \-\> 0x0075 \}]\l0x0033: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0075 \}]\l0x0034: APUT  \l  (r0 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r4 I:?[long, double])\l A[Catch:\{ all \-\> 0x0075 \}]\l0x0036: CONST  (r2 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0075 \}]\l0x0037: APUT  \l  (r0 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r10 I:?[long, double])\l A[Catch:\{ all \-\> 0x0075 \}]\l0x0039: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0075 \}]\l0x003a: APUT  \l  (r0 I:?[long, double][])\l  (r2 I:?[int, short, byte, char])\l  (r6 I:?[long, double])\l A[Catch:\{ all \-\> 0x0075 \}]\l0x003c: INVOKE  (r0 I:boolean) = (r0 I:double[]) org.mapsforge.map.model.MapViewPosition.isNan(double[]):boolean type: STATIC A[Catch:\{ all \-\> 0x0075 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0040|0x0040: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0046 A[Catch:\{ all \-\> 0x0075 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0042|0x0042: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0075 \}]\l0x0043: IPUT  \l  (r0 I:org.mapsforge.core.model.BoundingBox)\l  (r12 I:org.mapsforge.map.model.MapViewPosition)\l org.mapsforge.map.model.MapViewPosition.mapLimit org.mapsforge.core.model.BoundingBox A[Catch:\{ all \-\> 0x0075 \}]\l0x0045: GOTO  \-\> 0x004e A[Catch:\{ all \-\> 0x0075 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0046|0x0046: NEW_INSTANCE  (r0 I:org.mapsforge.core.model.BoundingBox) =  org.mapsforge.core.model.BoundingBox A[Catch:\{ all \-\> 0x0075 \}]\l0x0048: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0075 \}]\l0x0049: INVOKE  \l  (r3 I:org.mapsforge.core.model.BoundingBox)\l  (r4 I:double)\l  (r6 I:double)\l  (r8 I:double)\l  (r10 I:double)\l org.mapsforge.core.model.BoundingBox.\<init\>(double, double, double, double):void type: DIRECT A[Catch:\{ all \-\> 0x0075 \}]\l0x004c: IPUT  \l  (r0 I:org.mapsforge.core.model.BoundingBox)\l  (r12 I:org.mapsforge.map.model.MapViewPosition)\l org.mapsforge.map.model.MapViewPosition.mapLimit org.mapsforge.core.model.BoundingBox A[Catch:\{ all \-\> 0x0075 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x004e|0x004e: CONST_STR  (r0 I:java.lang.String) =  \"zoomLevel\" A[Catch:\{ all \-\> 0x0075 \}]\l0x0050: INVOKE  (r0 I:byte) = \l  (r13 I:org.mapsforge.map.model.common.PreferencesFacade)\l  (r0 I:java.lang.String)\l  (r1 I:byte)\l org.mapsforge.map.model.common.PreferencesFacade.getByte(java.lang.String, byte):byte type: INTERFACE A[Catch:\{ all \-\> 0x0075 \}]\l0x0054: IPUT  \l  (r0 I:byte)\l  (r12 I:org.mapsforge.map.model.MapViewPosition)\l org.mapsforge.map.model.MapViewPosition.zoomLevel byte A[Catch:\{ all \-\> 0x0075 \}]\l0x0056: CONST_STR  (r0 I:java.lang.String) =  \"zoomLevelMax\" A[Catch:\{ all \-\> 0x0075 \}]\l0x0058: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (127(0x7f, float:1.78E\-43) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x0075 \}]\l0x005a: INVOKE  (r0 I:byte) = \l  (r13 I:org.mapsforge.map.model.common.PreferencesFacade)\l  (r0 I:java.lang.String)\l  (r2 I:byte)\l org.mapsforge.map.model.common.PreferencesFacade.getByte(java.lang.String, byte):byte type: INTERFACE A[Catch:\{ all \-\> 0x0075 \}]\l0x005e: IPUT  \l  (r0 I:byte)\l  (r12 I:org.mapsforge.map.model.MapViewPosition)\l org.mapsforge.map.model.MapViewPosition.zoomLevelMax byte A[Catch:\{ all \-\> 0x0075 \}]\l0x0060: CONST_STR  (r0 I:java.lang.String) =  \"zoomLevelMin\" A[Catch:\{ all \-\> 0x0075 \}]\l0x0062: INVOKE  (r13 I:byte) = \l  (r13 I:org.mapsforge.map.model.common.PreferencesFacade)\l  (r0 I:java.lang.String)\l  (r1 I:byte)\l org.mapsforge.map.model.common.PreferencesFacade.getByte(java.lang.String, byte):byte type: INTERFACE A[Catch:\{ all \-\> 0x0075 \}]\l0x0066: IPUT  \l  (r13 I:byte)\l  (r12 I:org.mapsforge.map.model.MapViewPosition)\l org.mapsforge.map.model.MapViewPosition.zoomLevelMin byte A[Catch:\{ all \-\> 0x0075 \}]\l0x0068: CONST  (r0 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l A[Catch:\{ all \-\> 0x0075 \}]\l0x006a: IGET  (r13 I:byte) = (r12 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.zoomLevel byte A[Catch:\{ all \-\> 0x0075 \}]\l0x006c: CAST  (r2 I:double) = (double) (r13 I:int) A[Catch:\{ all \-\> 0x0075 \}]\l0x006d: INVOKE  (r0 I:double) = (r0 I:double), (r2 I:double) java.lang.Math.pow(double, double):double type: STATIC A[Catch:\{ all \-\> 0x0075 \}]\l0x0071: IPUT  \l  (r0 I:double)\l  (r12 I:org.mapsforge.map.model.MapViewPosition)\l org.mapsforge.map.model.MapViewPosition.scaleFactor double A[Catch:\{ all \-\> 0x0075 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0073|0x0073: MONITOR_EXIT  (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0074|0x0074: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0075|ExcHandler: all null\lSplitter:B:2:0x0005\l|0x0075: MOVE_EXCEPTION  (r13 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0076|0x0076: MONITOR_EXIT  (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0077|0x0077: THROW  (r13 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.model.MapViewPosition.init((r12 'this' I:org.mapsforge.map.model.MapViewPosition A[IMMUTABLE_TYPE, THIS]), (r13 I:org.mapsforge.map.model.common.PreferencesFacade A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

