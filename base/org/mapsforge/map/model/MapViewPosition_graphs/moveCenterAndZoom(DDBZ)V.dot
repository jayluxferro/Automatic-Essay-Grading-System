digraph "CFG fororg.mapsforge.map.model.MapViewPosition.moveCenterAndZoom(DDBZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r6)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|long r0 = org.mapsforge.core.util.MercatorProjection.getMapSize(r6.zoomLevel, r6.displayModel.getTileSize())\ldouble r2 = org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r6.longitude, r0) \- r7\ldouble r4 = (double) r0\ldouble r2 = java.lang.Math.min(java.lang.Math.max(0.0d, r2), r4)\lsetCenterInternal(org.mapsforge.core.util.MercatorProjection.pixelYToLatitude(java.lang.Math.min(java.lang.Math.max(0.0d, org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r6.latitude, r0) \- r9), r4), r0), org.mapsforge.core.util.MercatorProjection.pixelXToLongitude(r2, r0))\lsetZoomLevelInternal(r6.zoomLevel + r11, r12)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0041|monitor\-exit(r6)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0042|notifyObservers()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0045|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x0046|LOOP_START\lREMOVE\lLOOP:0: B:6:0x0046\-\>B:10:0x0046\l|java.lang.Throwable r7 = move\-exception\l}"];
Node_7 [shape=record,label="{7\:\ 0x0047|SYNTHETIC\lREMOVE\lSplitter:B:7:0x0047\l}"];
Node_8 [shape=record,label="{8\:\ ?|REMOVE\lSplitter:B:7:0x0047\l}"];
Node_9 [shape=record,label="{9\:\ 0x0048|REMOVE\l|throw r7\l}"];
Node_10 [shape=record,label="{10\:\ 0x0046|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:6:0x0046\-\>B:10:0x0046\l}"];
Node_11 [shape=record,label="{11\:\ 0x0048|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.model.MapViewPosition.moveCenterAndZoom((r6v0 'this' org.mapsforge.map.model.MapViewPosition A[IMMUTABLE_TYPE, THIS]), (r7v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_11;
Node_8 -> Node_12;
Node_10 -> Node_6;
Node_11 -> Node_9;
Node_12 -> Node_10;
}

