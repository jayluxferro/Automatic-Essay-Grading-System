digraph "CFG fororg.mapsforge.map.model.MapViewPosition.setScaleFactorAdjustment(D)V" {
subgraph cluster_Region_1662810608 {
label = "R(2:0|5)";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_1513765467 {
label = "Synchronized:R(2:0|(1:3))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_Region_1029918343 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|setScaleFactor(java.lang.Math.pow(2.0d, (double) r4.zoomLevel) * r5)\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0010|notifyObservers()\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000f|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x000f: MONITOR_EXIT  \l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0013}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0014|LOOP_START\lREMOVE\lLOOP:0: B:7:0x0014\-\>B:11:0x0014\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0015|SYNTHETIC\lREMOVE\lSplitter:B:8:0x0015\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|REMOVE\lSplitter:B:8:0x0015\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0016|REMOVE\l|throw r5\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0014|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:7:0x0014\-\>B:11:0x0014\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0016|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0014|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.model.MapViewPosition.setScaleFactorAdjustment((r4v0 'this' org.mapsforge.map.model.MapViewPosition A[IMMUTABLE_TYPE, THIS]), (r5v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_7;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_12;
Node_9 -> Node_13;
Node_11 -> Node_7;
Node_12 -> Node_10;
Node_13 -> Node_11;
}

