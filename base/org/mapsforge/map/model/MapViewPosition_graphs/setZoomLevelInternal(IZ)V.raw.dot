digraph "CFG fororg.mapsforge.map.model.MapViewPosition.setZoomLevelInternal(IZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:byte) = (r6 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.zoomLevelMax byte \l0x0002: INVOKE  (r7 I:int) = (r7 I:int), (r0 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x0006: IGET  (r0 I:byte) = (r6 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.zoomLevelMin byte \l0x0008: INVOKE  (r7 I:int) = (r7 I:int), (r0 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x000c: CAST  (r7 I:byte) = (byte) (r7 I:int) \l0x000d: IPUT  (r7 I:byte), (r6 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.zoomLevel byte \l0x000f: CONST  (r0 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0024 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IGET  (r7 I:org.mapsforge.map.model.MapViewPosition$Animator) = (r6 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.animator org.mapsforge.map.model.MapViewPosition$Animator \l0x0015: INVOKE  (r2 I:double) = (r6 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.getScaleFactor():double type: VIRTUAL \l0x0019: IGET  (r8 I:byte) = (r6 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.zoomLevel byte \l0x001b: CAST  (r4 I:double) = (double) (r8 I:int) \l0x001c: INVOKE  (r0 I:double) = (r0 I:double), (r4 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0020: INVOKE  \l  (r7 I:org.mapsforge.map.model.MapViewPosition$Animator)\l  (r2 I:double)\l  (r0 I:double)\l org.mapsforge.map.model.MapViewPosition.Animator.startAnimationZoom(double, double):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: IGET  (r7 I:byte) = (r6 I:org.mapsforge.map.model.MapViewPosition) org.mapsforge.map.model.MapViewPosition.zoomLevel byte \l0x0026: CAST  (r7 I:double) = (double) (r7 I:int) \l0x0027: INVOKE  (r7 I:double) = (r0 I:double), (r7 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x002b: INVOKE  \l  (r6 I:org.mapsforge.map.model.MapViewPosition)\l  (r7 I:double)\l org.mapsforge.map.model.MapViewPosition.setScaleFactor(double):void type: VIRTUAL \l0x002e: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: INVOKE  \l  (r6 I:org.mapsforge.map.model.MapViewPosition)\l  (r7 I:org.mapsforge.core.model.LatLong)\l org.mapsforge.map.model.MapViewPosition.setPivot(org.mapsforge.core.model.LatLong):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|0x0032: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.model.MapViewPosition.setZoomLevelInternal((r6 'this' I:org.mapsforge.map.model.MapViewPosition A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

