digraph "CFG fororg.mapsforge.map.model.MapViewPosition.save(Lorg\/mapsforge\/map\/model\/common\/PreferencesFacade;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|r4.putDouble(LATITUDE, r3.latitude)\lr4.putDouble(LONGITUDE, r3.longitude)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|if (r3.mapLimit != null) goto L_0x002a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|r4.putDouble(LATITUDE_MAX, Double.NaN)\lr4.putDouble(LATITUDE_MIN, Double.NaN)\lr4.putDouble(LONGITUDE_MAX, Double.NaN)\lr4.putDouble(LONGITUDE_MIN, Double.NaN)\l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|r4.putDouble(LATITUDE_MAX, r3.mapLimit.maxLatitude)\lr4.putDouble(LATITUDE_MIN, r3.mapLimit.minLatitude)\lr4.putDouble(LONGITUDE_MAX, r3.mapLimit.maxLongitude)\lr4.putDouble(LONGITUDE_MIN, r3.mapLimit.minLongitude)\l}"];
Node_7 [shape=record,label="{7\:\ 0x004e|r4.putByte(ZOOM_LEVEL, r3.zoomLevel)\lr4.putByte(ZOOM_LEVEL_MAX, r3.zoomLevelMax)\lr4.putByte(ZOOM_LEVEL_MIN, r3.zoomLevelMin)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0063|monitor\-exit(r3)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0064|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x0065|REMOVE\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x0066|REMOVE\l}"];
Node_12 [shape=record,label="{12\:\ 0x0067|REMOVE\l|throw r4\l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.model.MapViewPosition.save((r3v0 'this' org.mapsforge.map.model.MapViewPosition A[IMMUTABLE_TYPE, THIS]), (r4v0 org.mapsforge.map.model.common.PreferencesFacade A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

