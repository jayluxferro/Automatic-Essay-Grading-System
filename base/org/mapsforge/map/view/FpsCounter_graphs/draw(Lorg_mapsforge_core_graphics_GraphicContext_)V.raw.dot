digraph "CFG fororg.mapsforge.map.view.FpsCounter.draw(Lorg\/mapsforge\/core\/graphics\/GraphicContext;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.visible boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: INVOKE  (r0 I:long) =  java.lang.System.nanoTime():long type: STATIC \l0x0009: IGET  (r2 I:long) = (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.lastTime long \l0x000b: ARITH  (r2 I:long) = (r0 I:long) \- (r2 I:long) \l0x000d: SGET  (r4 I:long) =  org.mapsforge.map.view.FpsCounter.ONE_SECOND long \l0x000f: CMP_L  (r4 I:int) = (r2 I:long), (r4 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x002c \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r4 I:int) = (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.frameCounter int \l0x0015: CAST  (r4 I:long) = (long) (r4 I:int) \l0x0016: SGET  (r6 I:long) =  org.mapsforge.map.view.FpsCounter.ONE_SECOND long \l0x0018: ARITH  (r4 I:long) = (r4 I:long) * (r6 I:long) \l0x001a: CAST  (r4 I:float) = (float) (r4 I:long) \l0x001b: CAST  (r2 I:float) = (float) (r2 I:long) \l0x001c: ARITH  (r4 I:float) = (r4 I:float) \/ (r2 I:float) \l0x001d: INVOKE  (r2 I:int) = (r4 I:float) java.lang.Math.round(float):int type: STATIC \l0x0021: INVOKE  (r2 I:java.lang.String) = (r2 I:int) java.lang.String.valueOf(int):java.lang.String type: STATIC \l0x0025: IPUT  \l  (r2 I:java.lang.String)\l  (r8 I:org.mapsforge.map.view.FpsCounter)\l org.mapsforge.map.view.FpsCounter.fps java.lang.String \l0x0027: IPUT  (r0 I:long), (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.lastTime long \l0x0029: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002a: IPUT  (r0 I:int), (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.frameCounter int \l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1101004800(0x41a00000, float:20.0) ?[int, float, short, byte, char])\l \l0x002e: IGET  (r1 I:org.mapsforge.map.model.DisplayModel) = (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.displayModel org.mapsforge.map.model.DisplayModel \l0x0030: INVOKE  (r1 I:float) = (r1 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getScaleFactor():float type: VIRTUAL \l0x0034: ARITH  (r1 I:float) = (r1 I:float) * (r0 I:float) \l0x0036: CAST  (r0 I:int) = (int) (r1 I:float) \l0x0037: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1109393408(0x42200000, float:40.0) ?[int, float, short, byte, char])\l \l0x0039: IGET  (r2 I:org.mapsforge.map.model.DisplayModel) = (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.displayModel org.mapsforge.map.model.DisplayModel \l0x003b: INVOKE  (r2 I:float) = (r2 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getScaleFactor():float type: VIRTUAL \l0x003f: ARITH  (r2 I:float) = (r2 I:float) * (r1 I:float) \l0x0041: CAST  (r1 I:int) = (int) (r2 I:float) \l0x0042: IGET  (r2 I:java.lang.String) = (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.fps java.lang.String \l0x0044: IGET  (r3 I:org.mapsforge.core.graphics.Paint) = (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.paintBack org.mapsforge.core.graphics.Paint \l0x0046: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.GraphicContext)\l  (r2 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:int)\l  (r3 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.GraphicContext.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0049: IGET  (r2 I:java.lang.String) = (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.fps java.lang.String \l0x004b: IGET  (r3 I:org.mapsforge.core.graphics.Paint) = (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.paintFront org.mapsforge.core.graphics.Paint \l0x004d: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.GraphicContext)\l  (r2 I:java.lang.String)\l  (r0 I:int)\l  (r1 I:int)\l  (r3 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.GraphicContext.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0050: IGET  (r9 I:int) = (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.frameCounter int \l0x0052: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l0x0054: IPUT  (r9 I:int), (r8 I:org.mapsforge.map.view.FpsCounter) org.mapsforge.map.view.FpsCounter.frameCounter int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0056|0x0056: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.view.FpsCounter.draw((r8 'this' I:org.mapsforge.map.view.FpsCounter A[IMMUTABLE_TYPE, THIS]), (r9 I:org.mapsforge.core.graphics.GraphicContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

