digraph "CFG fororg.mapsforge.map.view.FrameBuffer.setDimension(Lorg\/mapsforge\/core\/model\/Dimension;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?}"];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r4.dimension == null) goto L_0x000f\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005}"];
Node_5 [shape=record,label="{5\:\ 0x000b|if (r4.dimension.equals(r5) == false) goto L_0x000f\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|monitor\-exit(r4)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|SYNTHETIC\lSplitter:B:8:0x000f\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x000f\l|r4.dimension = r5\ldestroyBitmaps()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|if (r5.width \<= 0) goto L_0x0035\l}"];
Node_11 [shape=record,label="{11\:\ 0x0018}"];
Node_12 [shape=record,label="{12\:\ 0x001a|if (r5.height \<= 0) goto L_0x0035\l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|r4.odBitmap = r4.graphicFactory.createBitmap(r5.width, r5.height, false)\lr4.lmBitmap = r4.graphicFactory.createBitmap(r5.width, r5.height, false)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|monitor\-exit(r4)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|REMOVE\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_17 [shape=record,label="{17\:\ 0x0038|REMOVE\l}"];
Node_18 [shape=record,label="{18\:\ 0x0039|REMOVE\l|throw r5\l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.view.FrameBuffer.setDimension((r4v0 'this' org.mapsforge.map.view.FrameBuffer A[IMMUTABLE_TYPE, THIS]), (r5v0 org.mapsforge.core.model.Dimension A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

