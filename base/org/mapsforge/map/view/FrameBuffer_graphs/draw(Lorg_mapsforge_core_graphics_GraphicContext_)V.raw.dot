digraph "CFG fororg.mapsforge.map.view.FrameBuffer.draw(Lorg\/mapsforge\/core\/graphics\/GraphicContext;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:org.mapsforge.map.model.DisplayModel) = (r2 I:org.mapsforge.map.view.FrameBuffer) org.mapsforge.map.view.FrameBuffer.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ all \-\> 0x0017 \}, TRY_ENTER]\l0x0003: INVOKE  (r0 I:int) = (r0 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getBackgroundColor():int type: VIRTUAL A[Catch:\{ all \-\> 0x0017 \}]\l0x0007: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.GraphicContext)\l  (r0 I:int)\l org.mapsforge.core.graphics.GraphicContext.fillColor(int):void type: INTERFACE A[Catch:\{ all \-\> 0x0017 \}]\l0x000a: IGET  (r0 I:org.mapsforge.core.graphics.Bitmap) = (r2 I:org.mapsforge.map.view.FrameBuffer) org.mapsforge.map.view.FrameBuffer.odBitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:org.mapsforge.core.graphics.Bitmap) = (r2 I:org.mapsforge.map.view.FrameBuffer) org.mapsforge.map.view.FrameBuffer.odBitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ all \-\> 0x0017 \}]\l0x0010: IGET  (r1 I:org.mapsforge.core.graphics.Matrix) = (r2 I:org.mapsforge.map.view.FrameBuffer) org.mapsforge.map.view.FrameBuffer.matrix org.mapsforge.core.graphics.Matrix A[Catch:\{ all \-\> 0x0017 \}]\l0x0012: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.GraphicContext)\l  (r0 I:org.mapsforge.core.graphics.Bitmap)\l  (r1 I:org.mapsforge.core.graphics.Matrix)\l org.mapsforge.core.graphics.GraphicContext.drawBitmap(org.mapsforge.core.graphics.Bitmap, org.mapsforge.core.graphics.Matrix):void type: INTERFACE A[Catch:\{ all \-\> 0x0017 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0017: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.view.FrameBuffer.draw((r2 'this' I:org.mapsforge.map.view.FrameBuffer A[IMMUTABLE_TYPE, THIS]), (r3 I:org.mapsforge.core.graphics.GraphicContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

