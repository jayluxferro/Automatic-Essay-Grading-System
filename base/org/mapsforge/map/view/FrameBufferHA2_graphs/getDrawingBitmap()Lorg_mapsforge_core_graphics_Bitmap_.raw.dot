digraph "CFG fororg.mapsforge.map.view.FrameBufferHA2.getDrawingBitmap()Lorg\/mapsforge\/core\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.view.FrameBufferBitmap$Lock) = (r3 I:org.mapsforge.map.view.FrameBufferHA2) org.mapsforge.map.view.FrameBufferHA2.allowSwap org.mapsforge.map.view.FrameBufferBitmap$Lock \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:org.mapsforge.map.view.FrameBufferBitmap$Lock) = (r3 I:org.mapsforge.map.view.FrameBufferHA2) org.mapsforge.map.view.FrameBufferHA2.allowSwap org.mapsforge.map.view.FrameBufferBitmap$Lock A[Catch:\{ all \-\> 0x001b \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:org.mapsforge.map.view.FrameBufferBitmap$Lock) org.mapsforge.map.view.FrameBufferBitmap.Lock.waitDisabled():void type: VIRTUAL A[Catch:\{ all \-\> 0x001b \}]\l0x0008: IGET  (r1 I:org.mapsforge.map.view.FrameBufferBitmap) = (r3 I:org.mapsforge.map.view.FrameBufferHA2) org.mapsforge.map.view.FrameBufferHA2.lmBitmap org.mapsforge.map.view.FrameBufferBitmap A[Catch:\{ all \-\> 0x001b \}]\l0x000a: INVOKE  (r1 I:org.mapsforge.core.graphics.Bitmap) = (r1 I:org.mapsforge.map.view.FrameBufferBitmap) org.mapsforge.map.view.FrameBufferBitmap.lock():org.mapsforge.core.graphics.Bitmap type: VIRTUAL A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IGET  (r2 I:org.mapsforge.map.model.DisplayModel) = (r3 I:org.mapsforge.map.view.FrameBufferHA2) org.mapsforge.map.view.FrameBufferHA2.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ all \-\> 0x001b \}]\l0x0012: INVOKE  (r2 I:int) = (r2 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getBackgroundColor():int type: VIRTUAL A[Catch:\{ all \-\> 0x001b \}]\l0x0016: INVOKE  (r1 I:org.mapsforge.core.graphics.Bitmap), (r2 I:int) org.mapsforge.core.graphics.Bitmap.setBackgroundColor(int):void type: INTERFACE A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: RETURN  (r1 I:org.mapsforge.core.graphics.Bitmap) A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x001b: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.graphics.Bitmap org.mapsforge.map.view.FrameBufferHA2.getDrawingBitmap((r3 'this' I:org.mapsforge.map.view.FrameBufferHA2 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

