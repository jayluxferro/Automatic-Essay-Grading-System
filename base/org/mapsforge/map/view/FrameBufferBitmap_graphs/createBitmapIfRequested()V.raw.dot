digraph "CFG fororg.mapsforge.map.view.FrameBufferBitmap.createBitmapIfRequested()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r2 I:org.mapsforge.map.view.FrameBufferBitmap) org.mapsforge.map.view.FrameBufferBitmap.bitmapRequestSync java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest) = (r2 I:org.mapsforge.map.view.FrameBufferBitmap) org.mapsforge.map.view.FrameBufferBitmap.bitmapRequest org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest A[Catch:\{ all \-\> 0x0017 \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0015 A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: INVOKE  (r2 I:org.mapsforge.map.view.FrameBufferBitmap) org.mapsforge.map.view.FrameBufferBitmap.destroyBitmap():void type: DIRECT A[Catch:\{ all \-\> 0x0017 \}]\l0x000a: IGET  (r1 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest) = (r2 I:org.mapsforge.map.view.FrameBufferBitmap) org.mapsforge.map.view.FrameBufferBitmap.bitmapRequest org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest A[Catch:\{ all \-\> 0x0017 \}]\l0x000c: INVOKE  (r1 I:org.mapsforge.core.graphics.Bitmap) = \l  (r1 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest)\l org.mapsforge.map.view.FrameBufferBitmap.BitmapRequest.create():org.mapsforge.core.graphics.Bitmap type: VIRTUAL A[Catch:\{ all \-\> 0x0017 \}]\l0x0010: IPUT  \l  (r1 I:org.mapsforge.core.graphics.Bitmap)\l  (r2 I:org.mapsforge.map.view.FrameBufferBitmap)\l org.mapsforge.map.view.FrameBufferBitmap.bitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ all \-\> 0x0017 \}]\l0x0012: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0017 \}]\l0x0013: IPUT  \l  (r1 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest)\l  (r2 I:org.mapsforge.map.view.FrameBufferBitmap)\l org.mapsforge.map.view.FrameBufferBitmap.bitmapRequest org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: RETURN   A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0017: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0017 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0017 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.view.FrameBufferBitmap.createBitmapIfRequested((r2 'this' I:org.mapsforge.map.view.FrameBufferBitmap A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

