digraph "CFG fororg.mapsforge.map.view.FrameBufferBitmap.BitmapRequest.create()Lorg\/mapsforge\/core\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.core.model.Dimension) = \l  (r4 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest)\l org.mapsforge.map.view.FrameBufferBitmap.BitmapRequest.dimension org.mapsforge.core.model.Dimension \l0x0002: IGET  (r0 I:int) = (r0 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.width int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:org.mapsforge.core.model.Dimension) = \l  (r4 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest)\l org.mapsforge.map.view.FrameBufferBitmap.BitmapRequest.dimension org.mapsforge.core.model.Dimension \l0x0008: IGET  (r0 I:int) = (r0 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.height int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IGET  (r0 I:org.mapsforge.core.graphics.GraphicFactory) = \l  (r4 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest)\l org.mapsforge.map.view.FrameBufferBitmap.BitmapRequest.factory org.mapsforge.core.graphics.GraphicFactory \l0x000e: IGET  (r1 I:org.mapsforge.core.model.Dimension) = \l  (r4 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest)\l org.mapsforge.map.view.FrameBufferBitmap.BitmapRequest.dimension org.mapsforge.core.model.Dimension \l0x0010: IGET  (r1 I:int) = (r1 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.width int \l0x0012: IGET  (r2 I:org.mapsforge.core.model.Dimension) = \l  (r4 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest)\l org.mapsforge.map.view.FrameBufferBitmap.BitmapRequest.dimension org.mapsforge.core.model.Dimension \l0x0014: IGET  (r2 I:int) = (r2 I:org.mapsforge.core.model.Dimension) org.mapsforge.core.model.Dimension.height int \l0x0016: IGET  (r3 I:boolean) = \l  (r4 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest)\l org.mapsforge.map.view.FrameBufferBitmap.BitmapRequest.isTransparent boolean \l0x0018: INVOKE  (r0 I:org.mapsforge.core.graphics.Bitmap) = \l  (r0 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:boolean)\l org.mapsforge.core.graphics.GraphicFactory.createBitmap(int, int, boolean):org.mapsforge.core.graphics.Bitmap type: INTERFACE \l0x001c: IGET  (r1 I:int) = \l  (r4 I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest)\l org.mapsforge.map.view.FrameBufferBitmap.BitmapRequest.color int \l0x001e: INVOKE  (r0 I:org.mapsforge.core.graphics.Bitmap), (r1 I:int) org.mapsforge.core.graphics.Bitmap.setBackgroundColor(int):void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: RETURN  (r0 I:org.mapsforge.core.graphics.Bitmap) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: RETURN  (r0 I:org.mapsforge.core.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{org.mapsforge.core.graphics.Bitmap org.mapsforge.map.view.FrameBufferBitmap.BitmapRequest.create((r4 'this' I:org.mapsforge.map.view.FrameBufferBitmap$BitmapRequest A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

