digraph "CFG fororg.mapsforge.map.layer.renderer.DatabaseRenderer.executeJob(Lorg\/mapsforge\/map\/layer\/renderer\/RendererJob;)Lorg\/mapsforge\/core\/graphics\/TileBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: NEW_INSTANCE  (r1 I:org.mapsforge.map.rendertheme.RenderContext) =  org.mapsforge.map.rendertheme.RenderContext A[Catch:\{ Exception \-\> 0x00c7, all \-\> 0x00c4 \}, TRY_ENTER]\l0x0003: NEW_INSTANCE  (r2 I:org.mapsforge.map.layer.renderer.CanvasRasterer) =  org.mapsforge.map.layer.renderer.CanvasRasterer A[Catch:\{ Exception \-\> 0x00c7, all \-\> 0x00c4 \}]\l0x0005: IGET  (r3 I:org.mapsforge.core.graphics.GraphicFactory) = (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) org.mapsforge.map.layer.renderer.DatabaseRenderer.graphicFactory org.mapsforge.core.graphics.GraphicFactory A[Catch:\{ Exception \-\> 0x00c7, all \-\> 0x00c4 \}]\l0x0007: INVOKE  \l  (r2 I:org.mapsforge.map.layer.renderer.CanvasRasterer)\l  (r3 I:org.mapsforge.core.graphics.GraphicFactory)\l org.mapsforge.map.layer.renderer.CanvasRasterer.\<init\>(org.mapsforge.core.graphics.GraphicFactory):void type: DIRECT A[Catch:\{ Exception \-\> 0x00c7, all \-\> 0x00c4 \}]\l0x000a: INVOKE  \l  (r1 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r7 I:org.mapsforge.map.layer.renderer.RendererJob)\l  (r2 I:org.mapsforge.map.layer.renderer.CanvasRasterer)\l org.mapsforge.map.rendertheme.RenderContext.\<init\>(org.mapsforge.map.layer.renderer.RendererJob, org.mapsforge.map.layer.renderer.CanvasRasterer):void type: DIRECT A[Catch:\{ Exception \-\> 0x00c7, all \-\> 0x00c4 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|SYNTHETIC\lSplitter:B:3:0x000d\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x000d\l|0x000d: INVOKE  (r2 I:boolean) = \l  (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l  (r1 I:org.mapsforge.map.rendertheme.RenderContext)\l org.mapsforge.map.layer.renderer.DatabaseRenderer.renderBitmap(org.mapsforge.map.rendertheme.RenderContext):boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}, TRY_ENTER]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:34:0x00ba A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IGET  (r2 I:org.mapsforge.map.datastore.MapDataStore) = (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) org.mapsforge.map.layer.renderer.DatabaseRenderer.mapDataStore org.mapsforge.map.datastore.MapDataStore A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022 A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: IGET  (r2 I:org.mapsforge.map.datastore.MapDataStore) = (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) org.mapsforge.map.layer.renderer.DatabaseRenderer.mapDataStore org.mapsforge.map.datastore.MapDataStore A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0019: IGET  (r3 I:org.mapsforge.core.model.Tile) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x001b: INVOKE  (r2 I:org.mapsforge.map.datastore.MapReadResult) = \l  (r2 I:org.mapsforge.map.datastore.MapDataStore)\l  (r3 I:org.mapsforge.core.model.Tile)\l org.mapsforge.map.datastore.MapDataStore.readMapData(org.mapsforge.core.model.Tile):org.mapsforge.map.datastore.MapReadResult type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x001f: INVOKE  \l  (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l  (r1 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r2 I:org.mapsforge.map.datastore.MapReadResult)\l org.mapsforge.map.layer.renderer.DatabaseRenderer.processReadMapData(org.mapsforge.map.rendertheme.RenderContext, org.mapsforge.map.datastore.MapReadResult):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: IGET  (r2 I:boolean) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.labelsOnly boolean A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x006a A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IGET  (r2 I:org.mapsforge.map.rendertheme.rule.RenderTheme) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.renderTheme org.mapsforge.map.rendertheme.rule.RenderTheme A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0028: INVOKE  \l  (r2 I:org.mapsforge.map.rendertheme.rule.RenderTheme)\l  (r6 I:org.mapsforge.map.layer.renderer.StandardRenderer)\l  (r1 I:org.mapsforge.map.rendertheme.RenderContext)\l org.mapsforge.map.rendertheme.rule.RenderTheme.matchHillShadings(org.mapsforge.map.layer.renderer.StandardRenderer, org.mapsforge.map.rendertheme.RenderContext):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x002b: IGET  (r2 I:org.mapsforge.core.graphics.GraphicFactory) = (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) org.mapsforge.map.layer.renderer.DatabaseRenderer.graphicFactory org.mapsforge.core.graphics.GraphicFactory A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x002d: IGET  (r3 I:org.mapsforge.core.model.Tile) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x002f: IGET  (r3 I:int) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileSize int A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0031: IGET  (r4 I:boolean) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.hasAlpha boolean A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0033: INVOKE  (r2 I:org.mapsforge.core.graphics.TileBitmap) = \l  (r2 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r3 I:int)\l  (r4 I:boolean)\l org.mapsforge.core.graphics.GraphicFactory.createTileBitmap(int, boolean):org.mapsforge.core.graphics.TileBitmap type: INTERFACE A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0037: IGET  (r3 I:org.mapsforge.map.datastore.MapDataStore) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.mapDataStore org.mapsforge.map.datastore.MapDataStore A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0039: IGET  (r4 I:org.mapsforge.core.model.Tile) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x003b: INVOKE  (r3 I:long) = \l  (r3 I:org.mapsforge.map.datastore.MapDataStore)\l  (r4 I:org.mapsforge.core.model.Tile)\l org.mapsforge.map.datastore.MapDataStore.getDataTimestamp(org.mapsforge.core.model.Tile):long type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x003f: INVOKE  (r2 I:org.mapsforge.core.graphics.TileBitmap), (r3 I:long) org.mapsforge.core.graphics.TileBitmap.setTimestamp(long):void type: INTERFACE A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0042: IGET  (r3 I:org.mapsforge.map.layer.renderer.CanvasRasterer) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.canvasRasterer org.mapsforge.map.layer.renderer.CanvasRasterer A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0044: INVOKE  \l  (r3 I:org.mapsforge.map.layer.renderer.CanvasRasterer)\l  (r2 I:org.mapsforge.core.graphics.Bitmap)\l org.mapsforge.map.layer.renderer.CanvasRasterer.setCanvasBitmap(org.mapsforge.core.graphics.Bitmap):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0047: IGET  (r3 I:boolean) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.hasAlpha boolean A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|0x0049: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0064 A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|0x004b: IGET  (r3 I:org.mapsforge.map.model.DisplayModel) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x004d: INVOKE  (r3 I:int) = (r3 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getBackgroundColor():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0051: IGET  (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.renderTheme org.mapsforge.map.rendertheme.rule.RenderTheme A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0053: INVOKE  (r4 I:int) = (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.getMapBackground():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|0x0057: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0064 A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0059|0x0059: IGET  (r3 I:org.mapsforge.map.layer.renderer.CanvasRasterer) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.canvasRasterer org.mapsforge.map.layer.renderer.CanvasRasterer A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x005b: IGET  (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.renderTheme org.mapsforge.map.rendertheme.rule.RenderTheme A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x005d: INVOKE  (r4 I:int) = (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.getMapBackground():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0061: INVOKE  \l  (r3 I:org.mapsforge.map.layer.renderer.CanvasRasterer)\l  (r4 I:int)\l org.mapsforge.map.layer.renderer.CanvasRasterer.fill(int):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|0x0064: IGET  (r3 I:org.mapsforge.map.layer.renderer.CanvasRasterer) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.canvasRasterer org.mapsforge.map.layer.renderer.CanvasRasterer A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0066: INVOKE  \l  (r3 I:org.mapsforge.map.layer.renderer.CanvasRasterer)\l  (r1 I:org.mapsforge.map.rendertheme.RenderContext)\l org.mapsforge.map.layer.renderer.CanvasRasterer.drawWays(org.mapsforge.map.rendertheme.RenderContext):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0069: GOTO  \-\> 0x006b A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x006a|0x006a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x006b|0x006b: IGET  (r3 I:boolean) = (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) org.mapsforge.map.layer.renderer.DatabaseRenderer.renderLabels boolean A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x006d|0x006d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x007a A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x006f|0x006f: INVOKE  (r3 I:java.util.Set) = \l  (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l  (r1 I:org.mapsforge.map.rendertheme.RenderContext)\l org.mapsforge.map.layer.renderer.DatabaseRenderer.processLabels(org.mapsforge.map.rendertheme.RenderContext):java.util.Set type: DIRECT A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0073: IGET  (r4 I:org.mapsforge.map.layer.renderer.CanvasRasterer) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.canvasRasterer org.mapsforge.map.layer.renderer.CanvasRasterer A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0075: IGET  (r5 I:org.mapsforge.core.model.Tile) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0077: INVOKE  \l  (r4 I:org.mapsforge.map.layer.renderer.CanvasRasterer)\l  (r3 I:java.util.Set)\l  (r5 I:org.mapsforge.core.model.Tile)\l org.mapsforge.map.layer.renderer.CanvasRasterer.drawMapElements(java.util.Set, org.mapsforge.core.model.Tile):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x007a|0x007a: IGET  (r3 I:org.mapsforge.map.layer.labels.TileBasedLabelStore) = (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) org.mapsforge.map.layer.renderer.DatabaseRenderer.labelStore org.mapsforge.map.layer.labels.TileBasedLabelStore A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x007c|0x007c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0087 A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x007e|0x007e: IGET  (r3 I:org.mapsforge.map.layer.labels.TileBasedLabelStore) = (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) org.mapsforge.map.layer.renderer.DatabaseRenderer.labelStore org.mapsforge.map.layer.labels.TileBasedLabelStore A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0080: IGET  (r4 I:org.mapsforge.core.model.Tile) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0082: IGET  (r5 I:java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\>) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.labels java.util.List A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0084: INVOKE  \l  (r3 I:org.mapsforge.map.layer.labels.TileBasedLabelStore)\l  (r4 I:org.mapsforge.core.model.Tile)\l  (r5 I:java.util.List)\l org.mapsforge.map.layer.labels.TileBasedLabelStore.storeMapItems(org.mapsforge.core.model.Tile, java.util.List):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0087|0x0087: IGET  (r3 I:boolean) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.labelsOnly boolean A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0089|0x0089: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00b6 A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x008b|0x008b: IGET  (r3 I:org.mapsforge.map.rendertheme.rule.RenderTheme) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.renderTheme org.mapsforge.map.rendertheme.rule.RenderTheme A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x008d: INVOKE  (r3 I:boolean) = (r3 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.hasMapBackgroundOutside():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0091|0x0091: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x00b6 A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x0093|0x0093: IGET  (r3 I:org.mapsforge.map.datastore.MapDataStore) = (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) org.mapsforge.map.layer.renderer.DatabaseRenderer.mapDataStore org.mapsforge.map.datastore.MapDataStore A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0095: INVOKE  (r3 I:org.mapsforge.core.model.BoundingBox) = (r3 I:org.mapsforge.map.datastore.MapDataStore) org.mapsforge.map.datastore.MapDataStore.boundingBox():org.mapsforge.core.model.BoundingBox type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x0099: IGET  (r4 I:org.mapsforge.core.model.Tile) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x009b: INVOKE  (r3 I:org.mapsforge.core.model.Rectangle) = \l  (r3 I:org.mapsforge.core.model.BoundingBox)\l  (r4 I:org.mapsforge.core.model.Tile)\l org.mapsforge.core.model.BoundingBox.getPositionRelativeToTile(org.mapsforge.core.model.Tile):org.mapsforge.core.model.Rectangle type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x009f: IGET  (r7 I:boolean) = (r7 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.hasAlpha boolean A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x00a1|0x00a1: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00af A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x00a3|0x00a3: IGET  (r7 I:org.mapsforge.map.layer.renderer.CanvasRasterer) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.canvasRasterer org.mapsforge.map.layer.renderer.CanvasRasterer A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x00a5: IGET  (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.renderTheme org.mapsforge.map.rendertheme.rule.RenderTheme A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x00a7: INVOKE  (r4 I:int) = (r4 I:org.mapsforge.map.rendertheme.rule.RenderTheme) org.mapsforge.map.rendertheme.rule.RenderTheme.getMapBackgroundOutside():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x00ab: INVOKE  \l  (r7 I:org.mapsforge.map.layer.renderer.CanvasRasterer)\l  (r4 I:int)\l  (r3 I:org.mapsforge.core.model.Rectangle)\l org.mapsforge.map.layer.renderer.CanvasRasterer.fillOutsideAreas(int, org.mapsforge.core.model.Rectangle):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x00ae: GOTO  \-\> 0x00b6 A[Catch:\{ Exception \-\> 0x00c2 \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x00af|0x00af: IGET  (r7 I:org.mapsforge.map.layer.renderer.CanvasRasterer) = (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.canvasRasterer org.mapsforge.map.layer.renderer.CanvasRasterer A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x00b1: SGET  (r4 I:org.mapsforge.core.graphics.Color) =  org.mapsforge.core.graphics.Color.TRANSPARENT org.mapsforge.core.graphics.Color A[Catch:\{ Exception \-\> 0x00c2 \}]\l0x00b3: INVOKE  \l  (r7 I:org.mapsforge.map.layer.renderer.CanvasRasterer)\l  (r4 I:org.mapsforge.core.graphics.Color)\l  (r3 I:org.mapsforge.core.model.Rectangle)\l org.mapsforge.map.layer.renderer.CanvasRasterer.fillOutsideAreas(org.mapsforge.core.graphics.Color, org.mapsforge.core.model.Rectangle):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c2 \}, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x00b6|0x00b6: INVOKE  (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.destroy():void type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x00b9|0x00b9: RETURN  (r2 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_34 [shape=record,label="{34\:\ 0x00ba|SYNTHETIC\lSplitter:B:34:0x00ba\l}"];
Node_35 [shape=record,label="{35\:\ ?|Splitter:B:34:0x00ba\l|0x00ba: INVOKE  (r7 I:org.mapsforge.core.graphics.TileBitmap) = \l  (r6 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l  (r1 I:org.mapsforge.map.rendertheme.RenderContext)\l org.mapsforge.map.layer.renderer.DatabaseRenderer.createBackgroundBitmap(org.mapsforge.map.rendertheme.RenderContext):org.mapsforge.core.graphics.TileBitmap type: DIRECT A[Catch:\{ Exception \-\> 0x00c2 \}, TRY_ENTER]\l0x00bd: NOP   A[TRY_LEAVE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x00be|0x00be: INVOKE  (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.destroy():void type: VIRTUAL \l}"];
Node_37 [shape=record,label="{37\:\ 0x00c1|0x00c1: RETURN  (r7 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_38 [shape=record,label="{38\:\ 0x00c2|ExcHandler: Exception null\lSplitter:B:3:0x000d\l|0x00c2: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_40 [shape=record,label="{40\:\ 0x00c4|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x00c4: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_41 [shape=record,label="{41\:\ 0x00c5|0x00c5: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x00c7|ExcHandler: Exception null\lSplitter:B:1:0x0001\l|0x00c7: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_43 [shape=record,label="{43\:\ 0x00c8|0x00c8: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_44 [shape=record,label="{44\:\ 0x00c9|SYNTHETIC\lSplitter:B:44:0x00c9\l}"];
Node_45 [shape=record,label="{45\:\ ?|Splitter:B:44:0x00c9\l|0x00c9: SGET  (r2 I:java.util.logging.Logger) =  org.mapsforge.map.layer.renderer.DatabaseRenderer.LOGGER java.util.logging.Logger A[Catch:\{ all \-\> 0x00e9 \}, TRY_ENTER]\l0x00cb: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x00e9 \}]\l0x00cd: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00e9 \}]\l0x00d0: CONST_STR  (r4 I:java.lang.String) =  \"Exception: \" A[Catch:\{ all \-\> 0x00e9 \}]\l0x00d2: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00e9 \}]\l0x00d5: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.Exception) java.lang.Exception.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00e9 \}]\l0x00d9: INVOKE  (r3 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00e9 \}]\l0x00dc: INVOKE  (r7 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00e9 \}]\l0x00e0: INVOKE  (r2 I:java.util.logging.Logger), (r7 I:java.lang.String) java.util.logging.Logger.warning(java.lang.String):void type: VIRTUAL A[Catch:\{ all \-\> 0x00e9 \}, TRY_LEAVE]\l}"];
Node_46 [shape=record,label="{46\:\ 0x00e3|0x00e3: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00e8 \l}"];
Node_47 [shape=record,label="{47\:\ 0x00e5|0x00e5: INVOKE  (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.destroy():void type: VIRTUAL \l}"];
Node_48 [shape=record,label="{48\:\ 0x00e8|0x00e8: RETURN  (r0 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_49 [shape=record,label="{49\:\ 0x00e9|ExcHandler: all null\lSplitter:B:44:0x00c9\l|0x00e9: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_50 [shape=record,label="{50\:\ 0x00ea|0x00ea: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x00ef \l}"];
Node_51 [shape=record,label="{51\:\ 0x00ec|0x00ec: INVOKE  (r1 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.destroy():void type: VIRTUAL \l}"];
Node_52 [shape=record,label="{52\:\ 0x00ef|0x00ef: THROW  (r7 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.graphics.TileBitmap org.mapsforge.map.layer.renderer.DatabaseRenderer.executeJob((r6 'this' I:org.mapsforge.map.layer.renderer.DatabaseRenderer A[IMMUTABLE_TYPE, THIS]), (r7 I:org.mapsforge.map.layer.renderer.RendererJob A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_42;
Node_1 -> Node_40;
Node_2 -> Node_3;
Node_2 -> Node_42;
Node_2 -> Node_40;
Node_3 -> Node_4;
Node_3 -> Node_38;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_34;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_38 -> Node_44;
Node_40 -> Node_41;
Node_41 -> Node_50;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_44 -> Node_49;
Node_45 -> Node_46;
Node_45 -> Node_49;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_48;
Node_49 -> Node_50;
Node_50 -> Node_51[style=dashed];
Node_50 -> Node_52;
Node_51 -> Node_52;
}

