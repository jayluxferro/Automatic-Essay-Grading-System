digraph "CFG fororg.mapsforge.map.layer.renderer.DatabaseRenderer.processLabels(Lorg\/mapsforge\/map\/rendertheme\/RenderContext;)Ljava\/util\/Set;" {
subgraph cluster_Region_717497351 {
label = "R(3:0|7|38)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.HashSet java.util.HashSet\<org.mapsforge.core.mapelements.MapElementContainer\> r0 = new java.util.HashSet\<\>()\l}"];
subgraph cluster_SynchronizedRegion_84860514 {
label = "Synchronized:R(2:1|(6:3|(5:6|(1:(1:11)(0))|12|(2:15|(1:17)(0))|18)|19|(2:22|(1:(1:(2:27|53))(1:52)))|28|(2:31|(2:34|(1:36)(0)))))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007}"];
subgraph cluster_Region_1859611432 {
label = "R(6:3|(5:6|(1:(1:11)(0))|12|(2:15|(1:17)(0))|18)|19|(2:22|(1:(1:(2:27|53))(1:52)))|28|(2:31|(2:34|(1:36)(0))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|java.util.Set java.util.Set\<org.mapsforge.core.model.Tile\> r2 = r10.rendererJob.tile.getNeighbours()\ljava.util.Iterator java.util.Iterator\<org.mapsforge.core.model.Tile\> r3 = r2.iterator()\ljava.util.HashSet java.util.HashSet r4 = new java.util.HashSet()     \/\/ Catch:\{  \}\lr9.tileDependencies.addTileInProgress(r10.rendererJob.tile)\l}"];
subgraph cluster_LoopRegion_353916341 {
label = "LOOP:0: (5:6|(1:(1:11)(0))|12|(2:15|(1:17)(0))|18)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0026|if (r3.hasNext() != false) goto L_0x0028\l}"];
subgraph cluster_Region_795600748 {
label = "R(5:6|(1:(1:11)(0))|12|(2:15|(1:17)(0))|18)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0028|org.mapsforge.core.model.Tile org.mapsforge.core.model.Tile r5 = r3.next()\l}"];
subgraph cluster_IfRegion_781457229 {
label = "IF [B:7:0x0034] THEN: R(1:(1:11)(0)) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0034|if (r9.tileDependencies.isTileInProgress(r5) == false) goto L_0x0036\l}"];
subgraph cluster_Region_1497501205 {
label = "R(1:(1:11)(0))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_450197542 {
label = "IF [B:9:0x0042] THEN: R(1:11) ELSE: R(0)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0042|if (r9.tileCache.containsKey(r10.rendererJob.otherTile(r5)) != true) goto L_0x0045\l}"];
subgraph cluster_Region_1795182130 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0045|r9.tileDependencies.removeTileData(r5)\l}"];
}
subgraph cluster_Region_854136391 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_12 [shape=record,label="{12\:\ 0x004b|r0.addAll(r9.tileDependencies.getOverlappingElements(r5, r10.rendererJob.tile))\ljava.util.Iterator r6 = r10.labels.iterator()\l}"];
subgraph cluster_LoopRegion_1417492524 {
label = "LOOP:1: (2:15|(1:17)(0))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0062|if (r6.hasNext() != false) goto L_0x0064\l}"];
subgraph cluster_Region_661852431 {
label = "R(2:15|(1:17)(0))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0064|org.mapsforge.core.mapelements.MapElementContainer r7 = r6.next()\l}"];
subgraph cluster_IfRegion_954329576 {
label = "IF [B:16:0x0072] THEN: R(1:17) ELSE: R(0)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0072|if (r7.intersects(r5.getBoundaryAbsolute()) == true) goto L_0x0074\l}"];
subgraph cluster_Region_87890209 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0074|r4.add(r7)\l}"];
}
subgraph cluster_Region_1846051154 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_18 [shape=record,label="{18\:\ 0x0078|r3.remove()\l}"];
}
}
Node_19 [shape=record,label="{19\:\ 0x007c|r10.labels.removeAll(r4)\ljava.util.List java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\> r3 = org.mapsforge.map.util.LayerUtil.collisionFreeOrdered(r10.labels)\ljava.util.Iterator java.util.Iterator\<org.mapsforge.core.mapelements.MapElementContainer\> r4 = r3.iterator()\l}"];
subgraph cluster_LoopRegion_1357294725 {
label = "LOOP:2: (2:22|(1:(1:(2:27|53))(1:52)))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x008f|if (r4.hasNext() != false) goto L_0x0091\l}"];
subgraph cluster_Region_1819249500 {
label = "R(2:22|(1:(1:(2:27|53))(1:52)))";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0091|org.mapsforge.core.mapelements.MapElementContainer org.mapsforge.core.mapelements.MapElementContainer r5 = r4.next()\ljava.util.Iterator java.util.Iterator r6 = r0.iterator()\l}"];
subgraph cluster_LoopRegion_346683898 {
label = "LOOP:3: (1:(1:(2:27|53))(1:52))";
node [shape=record,color=blue];
subgraph cluster_Region_690491163 {
label = "R(1:(1:(2:27|53))(1:52))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1274222642 {
label = "IF [B:24:0x009f] THEN: R(1:(2:27|53)) ELSE: R(1:52)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x009f|if (r6.hasNext() != false) goto L_0x00a1\l}"];
subgraph cluster_Region_376211544 {
label = "R(1:(2:27|53))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_644544975 {
label = "IF [B:26:0x00ab] THEN: R(2:27|53) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00ab|LOOP_END\lLOOP:3: B:23:0x009b\-\>B:26:0x00ab\l|if (((org.mapsforge.core.mapelements.MapElementContainer) r6.next()).clashesWith(r5) == true) goto L_0x00ad\l}"];
subgraph cluster_Region_1904787382 {
label = "R(2:27|53)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x00ad|r4.remove()\l}"];
Node_53 [shape=record,label="{53\:\ 0x008b|SYNTHETIC\lEDGE_INSN: B:53:0x008b\-\>B:50:0x008b ?: BREAK  \l|break\l}"];
}
}
}
subgraph cluster_Region_1011128790 {
label = "R(1:52)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x008b|SYNTHETIC\lEDGE_INSN: B:52:0x008b\-\>B:50:0x008b ?: BREAK  \l|break\l}"];
}
}
}
}
}
}
Node_28 [shape=record,label="{28\:\ 0x00b1|r0.addAll(r3)\ljava.util.Iterator r2 = r2.iterator()\l}"];
subgraph cluster_LoopRegion_1744425357 {
label = "LOOP:4: (2:31|(2:34|(1:36)(0)))";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00bc|if (r2.hasNext() != false) goto L_0x00be\l}"];
subgraph cluster_Region_1706594025 {
label = "R(2:31|(2:34|(1:36)(0)))";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x00be|org.mapsforge.core.model.Tile r3 = r2.next()\lr9.tileDependencies.removeTileData(r10.rendererJob.tile, r3)\ljava.util.Iterator r4 = r0.iterator()\l}"];
subgraph cluster_LoopRegion_239094462 {
label = "LOOP:5: (2:34|(1:36)(0))";
node [shape=record,color=blue];
Node_33 [shape=record,label="{33\:\ 0x00d5|if (r4.hasNext() != false) goto L_0x00d7\l}"];
subgraph cluster_Region_2082221414 {
label = "R(2:34|(1:36)(0))";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x00d7|org.mapsforge.core.mapelements.MapElementContainer r5 = (org.mapsforge.core.mapelements.MapElementContainer) r4.next()\l}"];
subgraph cluster_IfRegion_1687060762 {
label = "IF [B:35:0x00e5] THEN: R(1:36) ELSE: R(0)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x00e5|if (r5.intersects(r3.getBoundaryAbsolute()) == true) goto L_0x00e7\l}"];
subgraph cluster_Region_1305625023 {
label = "R(1:36)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x00e7|r9.tileDependencies.addOverlappingElement(r10.rendererJob.tile, r3, r5)\l}"];
}
subgraph cluster_Region_1103881985 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
}
Node_38 [shape=record,label="{38\:\ 0x00f2|RETURN\l|return r0\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0008|SYNTHETIC\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0022|LOOP_START\lLOOP:0: B:4:0x0022\-\>B:42:0x0022\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0036}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0044}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x005e|LOOP_START\lLOOP:1: B:13:0x005e\-\>B:46:0x005e\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x008b|LOOP_START\lLOOP:2: B:20:0x008b\-\>B:50:0x008b\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x009b|LOOP_START\lLOOP:3: B:23:0x009b\-\>B:26:0x00ab\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x00a1}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x00b8|LOOP_START\lLOOP:4: B:29:0x00b8\-\>B:57:0x00b8\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x00d1|LOOP_START\lLOOP:5: B:32:0x00d1\-\>B:56:0x00d1\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00f1|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x00f1: MONITOR_EXIT  \l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x00f3|REMOVE\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00f4|REMOVE\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x00f5|REMOVE\l|throw r10\l}"];
Node_42 [shape=record,color=red,label="{42\:\ 0x0022|LOOP_END\lSYNTHETIC\lLOOP:0: B:4:0x0022\-\>B:42:0x0022\l}"];
Node_43 [shape=record,color=red,label="{43\:\ 0x007c|SYNTHETIC\l}"];
Node_44 [shape=record,color=red,label="{44\:\ 0x0022|SYNTHETIC\l}"];
Node_45 [shape=record,color=red,label="{45\:\ 0x0022|SYNTHETIC\l}"];
Node_46 [shape=record,color=red,label="{46\:\ 0x005e|LOOP_END\lSYNTHETIC\lLOOP:1: B:13:0x005e\-\>B:46:0x005e\l}"];
Node_47 [shape=record,color=red,label="{47\:\ 0x0078|SYNTHETIC\l}"];
Node_48 [shape=record,color=red,label="{48\:\ 0x005e|SYNTHETIC\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x005e|SYNTHETIC\l}"];
Node_50 [shape=record,color=red,label="{50\:\ 0x008b|LOOP_END\lSYNTHETIC\lEDGE_INSN: B:53:0x008b\-\>B:50:0x008b ?: BREAK  \lEDGE_INSN: B:52:0x008b\-\>B:50:0x008b ?: BREAK  \lLOOP:2: B:20:0x008b\-\>B:50:0x008b\l}"];
Node_51 [shape=record,color=red,label="{51\:\ 0x00b1|SYNTHETIC\l}"];
Node_54 [shape=record,color=red,label="{54\:\ 0x00ad|SYNTHETIC\l}"];
Node_55 [shape=record,color=red,label="{55\:\ 0x00f1|SYNTHETIC\l}"];
Node_56 [shape=record,color=red,label="{56\:\ 0x00d1|LOOP_END\lSYNTHETIC\lLOOP:5: B:32:0x00d1\-\>B:56:0x00d1\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x00b8|LOOP_END\lSYNTHETIC\lLOOP:4: B:29:0x00b8\-\>B:57:0x00b8\l}"];
Node_58 [shape=record,color=red,label="{58\:\ 0x00d1|SYNTHETIC\l}"];
Node_59 [shape=record,color=red,label="{59\:\ 0x00d1|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private java.util.Set\<org.mapsforge.core.mapelements.MapElementContainer\> org.mapsforge.map.layer.renderer.DatabaseRenderer.processLabels((r9v0 'this' org.mapsforge.map.layer.renderer.DatabaseRenderer A[IMMUTABLE_TYPE, THIS]), (r10v0 org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/map\/rendertheme\/RenderContext;, ), Ljava\/util\/Set\<, Lorg\/mapsforge\/core\/mapelements\/MapElementContainer;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_43[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_12[style=dashed];
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_11 -> Node_44;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_47[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_48[style=dashed];
Node_17 -> Node_49;
Node_18 -> Node_45;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_21 -> Node_51[style=dashed];
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_24 -> Node_52[style=dashed];
Node_26 -> Node_23[style=dashed];
Node_26 -> Node_54;
Node_27 -> Node_53;
Node_53 -> Node_50;
Node_52 -> Node_50;
Node_28 -> Node_29;
Node_30 -> Node_31;
Node_30 -> Node_55[style=dashed];
Node_31 -> Node_32;
Node_33 -> Node_34;
Node_33 -> Node_57[style=dashed];
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_58[style=dashed];
Node_36 -> Node_59;
Node_2 -> Node_3;
Node_2 -> Node_39;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_12;
Node_13 -> Node_14;
Node_20 -> Node_21;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_29 -> Node_30;
Node_32 -> Node_33;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_42 -> Node_4;
Node_43 -> Node_19;
Node_44 -> Node_42;
Node_45 -> Node_42;
Node_46 -> Node_13;
Node_47 -> Node_18;
Node_48 -> Node_46;
Node_49 -> Node_46;
Node_50 -> Node_20;
Node_51 -> Node_28;
Node_54 -> Node_27;
Node_55 -> Node_37;
Node_56 -> Node_32;
Node_57 -> Node_29;
Node_58 -> Node_56;
Node_59 -> Node_56;
}

