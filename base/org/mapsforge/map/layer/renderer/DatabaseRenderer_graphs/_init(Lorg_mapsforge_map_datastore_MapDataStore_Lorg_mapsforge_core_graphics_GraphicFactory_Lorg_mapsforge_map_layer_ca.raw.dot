digraph "CFG fororg.mapsforge.map.layer.renderer.DatabaseRenderer.\<init\>(Lorg\/mapsforge\/map\/datastore\/MapDataStore;Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/layer\/cache\/TileCache;Lorg\/mapsforge\/map\/layer\/labels\/TileBasedLabelStore;ZZLorg\/mapsforge\/map\/layer\/hills\/HillsRenderConfig;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: INVOKE  \l  (r0 I:org.mapsforge.map.layer.renderer.StandardRenderer)\l  (r1 I:org.mapsforge.map.datastore.MapDataStore)\l  (r2 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r6 I:boolean)\l  (r7 I:org.mapsforge.map.layer.hills.HillsRenderConfig)\l org.mapsforge.map.layer.renderer.StandardRenderer.\<init\>(org.mapsforge.map.datastore.MapDataStore, org.mapsforge.core.graphics.GraphicFactory, boolean, org.mapsforge.map.layer.hills.HillsRenderConfig):void type: DIRECT \l0x000b: IPUT  \l  (r3 I:org.mapsforge.map.layer.cache.TileCache)\l  (r0 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l org.mapsforge.map.layer.renderer.DatabaseRenderer.tileCache org.mapsforge.map.layer.cache.TileCache \l0x000d: IPUT  \l  (r4 I:org.mapsforge.map.layer.labels.TileBasedLabelStore)\l  (r0 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l org.mapsforge.map.layer.renderer.DatabaseRenderer.labelStore org.mapsforge.map.layer.labels.TileBasedLabelStore \l0x000f: IPUT  \l  (r5 I:boolean)\l  (r0 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l org.mapsforge.map.layer.renderer.DatabaseRenderer.renderLabels boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0017 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|0x0013: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: IPUT  \l  (r1 I:org.mapsforge.map.layer.renderer.TileDependencies)\l  (r0 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l org.mapsforge.map.layer.renderer.DatabaseRenderer.tileDependencies org.mapsforge.map.layer.renderer.TileDependencies \l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|0x0017: NEW_INSTANCE  (r1 I:org.mapsforge.map.layer.renderer.TileDependencies) =  org.mapsforge.map.layer.renderer.TileDependencies \l0x0019: INVOKE  (r1 I:org.mapsforge.map.layer.renderer.TileDependencies) org.mapsforge.map.layer.renderer.TileDependencies.\<init\>():void type: DIRECT \l0x001c: IPUT  \l  (r1 I:org.mapsforge.map.layer.renderer.TileDependencies)\l  (r0 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l org.mapsforge.map.layer.renderer.DatabaseRenderer.tileDependencies org.mapsforge.map.layer.renderer.TileDependencies \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.renderer.DatabaseRenderer.\<init\>((r0 'this' I:org.mapsforge.map.layer.renderer.DatabaseRenderer A[IMMUTABLE_TYPE, THIS]), (r1 I:org.mapsforge.map.datastore.MapDataStore A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.mapsforge.map.layer.cache.TileCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.map.layer.labels.TileBasedLabelStore A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.map.layer.hills.HillsRenderConfig A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_1 -> Node_3;
Node_1 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

