digraph "CFG fororg.mapsforge.map.layer.renderer.DatabaseRenderer.executeJob(Lorg\/mapsforge\/map\/layer\/renderer\/RendererJob;)Lorg\/mapsforge\/core\/graphics\/TileBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x00c7, all \-\> 0x00c4 \}\lSplitter:B:1:0x0001\l|org.mapsforge.map.rendertheme.RenderContext r1 = new org.mapsforge.map.rendertheme.RenderContext(r7, new org.mapsforge.map.layer.renderer.CanvasRasterer(r6.graphicFactory))     \/\/ Catch:\{ Exception \-\> 0x00c7, all \-\> 0x00c4 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|SYNTHETIC\lSplitter:B:3:0x000d\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ Exception \-\> 0x00c2 \}\lSplitter:B:3:0x000d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|Catch:\{ Exception \-\> 0x00c2 \}\l|if (renderBitmap(r1) == false) goto L_0x00ba     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|Catch:\{ Exception \-\> 0x00c2 \}\l|if (r6.mapDataStore == null) goto L_0x0022     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0017|Catch:\{ Exception \-\> 0x00c2 \}\l|processReadMapData(r1, r6.mapDataStore.readMapData(r7.tile))     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|Catch:\{ Exception \-\> 0x00c2 \}\l|if (r7.labelsOnly != false) goto L_0x006a     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|Catch:\{ Exception \-\> 0x00c2 \}\l|r1.renderTheme.matchHillShadings(r6, r1)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\lorg.mapsforge.core.graphics.TileBitmap r2 = r6.graphicFactory.createTileBitmap(r7.tile.tileSize, r7.hasAlpha)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\lr2.setTimestamp(r7.mapDataStore.getDataTimestamp(r7.tile))     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\lr1.canvasRasterer.setCanvasBitmap(r2)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|Catch:\{ Exception \-\> 0x00c2 \}\l|if (r7.hasAlpha != false) goto L_0x0064     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|Catch:\{ Exception \-\> 0x00c2 \}\l|if (r7.displayModel.getBackgroundColor() == r1.renderTheme.getMapBackground()) goto L_0x0064     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0059|Catch:\{ Exception \-\> 0x00c2 \}\l|r1.canvasRasterer.fill(r1.renderTheme.getMapBackground())     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0064|Catch:\{ Exception \-\> 0x00c2 \}\l|r1.canvasRasterer.drawWays(r1)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x006a|Catch:\{ Exception \-\> 0x00c2 \}\l|r2 = null     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x006b|Catch:\{ Exception \-\> 0x00c2 \}\lPHI: r2 \l  PHI: (r2v5 org.mapsforge.core.graphics.TileBitmap) = (r2v6 org.mapsforge.core.graphics.TileBitmap), (r2v9 org.mapsforge.core.graphics.TileBitmap) binds: [B:17:0x006a, B:16:0x0064] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x006d|Catch:\{ Exception \-\> 0x00c2 \}\l|if (r6.renderLabels == false) goto L_0x007a     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x006f|Catch:\{ Exception \-\> 0x00c2 \}\l|java.util.Set r3 = processLabels(r1)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\lr1.canvasRasterer.drawMapElements(r3, r7.tile)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x007a|Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x007c|Catch:\{ Exception \-\> 0x00c2 \}\l|if (r6.labelStore == null) goto L_0x0087     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x007e|Catch:\{ Exception \-\> 0x00c2 \}\l|r6.labelStore.storeMapItems(r7.tile, r1.labels)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0087|Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x0089|Catch:\{ Exception \-\> 0x00c2 \}\l|if (r7.labelsOnly != false) goto L_0x00b6     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x008b|Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x0091|Catch:\{ Exception \-\> 0x00c2 \}\l|if (r1.renderTheme.hasMapBackgroundOutside() == false) goto L_0x00b6     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x0093|Catch:\{ Exception \-\> 0x00c2 \}\l|org.mapsforge.core.model.Rectangle r3 = r6.mapDataStore.boundingBox().getPositionRelativeToTile(r7.tile)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x00a1|Catch:\{ Exception \-\> 0x00c2 \}\l|if (r7.hasAlpha != false) goto L_0x00af     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x00a3|Catch:\{ Exception \-\> 0x00c2 \}\l|r1.canvasRasterer.fillOutsideAreas(r1.renderTheme.getMapBackgroundOutside(), r3)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_31 [shape=record,label="{31\:\ 0x00af|Catch:\{ Exception \-\> 0x00c2 \}\l|r1.canvasRasterer.fillOutsideAreas(org.mapsforge.core.graphics.Color.TRANSPARENT, r3)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_32 [shape=record,label="{32\:\ 0x00b6|r1.destroy()\l}"];
Node_33 [shape=record,label="{33\:\ 0x00b9|RETURN\l|return r2\l}"];
Node_34 [shape=record,label="{34\:\ 0x00ba|SYNTHETIC\lSplitter:B:34:0x00ba\l}"];
Node_35 [shape=record,label="{35\:\ ?|Catch:\{ Exception \-\> 0x00c2 \}\lSplitter:B:34:0x00ba\l|org.mapsforge.core.graphics.TileBitmap r7 = createBackgroundBitmap(r1)     \/\/ Catch:\{ Exception \-\> 0x00c2 \}\l}"];
Node_36 [shape=record,label="{36\:\ 0x00be|r1.destroy()\l}"];
Node_37 [shape=record,label="{37\:\ 0x00c1|RETURN\l|return r7\l}"];
Node_38 [shape=record,label="{38\:\ 0x00c2|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:3:0x000d\l|java.lang.Exception r7 = e\l}"];
Node_39 [shape=record,label="{39\:\ 0x00c4|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:1:0x0001\l|java.lang.Throwable r7 = th\l}"];
Node_40 [shape=record,label="{40\:\ 0x00c5|r1 = null\l}"];
Node_41 [shape=record,label="{41\:\ 0x00c7|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:1:0x0001\l|java.lang.Exception r7 = e\l}"];
Node_42 [shape=record,label="{42\:\ 0x00c8|r1 = null\l}"];
Node_43 [shape=record,label="{43\:\ 0x00c9|SYNTHETIC\lPHI: r1 r7 \l  PHI: (r1v1 org.mapsforge.map.rendertheme.RenderContext) = (r1v2 org.mapsforge.map.rendertheme.RenderContext), (r1v4 org.mapsforge.map.rendertheme.RenderContext) binds: [B:42:0x00c8, B:38:0x00c2] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 'e' java.lang.Exception) = (r7v6 'e' java.lang.Exception), (r7v8 'e' java.lang.Exception) binds: [B:42:0x00c8, B:38:0x00c2] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:43:0x00c9\l}"];
Node_44 [shape=record,label="{44\:\ ?|Catch:\{ all \-\> 0x00e9 \}\lSplitter:B:43:0x00c9\l|java.util.logging.Logger r2 = LOGGER     \/\/ Catch:\{ all \-\> 0x00e9 \}\ljava.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x00e9 \}\lr3.append(\"Exception: \")     \/\/ Catch:\{ all \-\> 0x00e9 \}\lr3.append(r7.getMessage())     \/\/ Catch:\{ all \-\> 0x00e9 \}\lr2.warning(r3.toString())     \/\/ Catch:\{ all \-\> 0x00e9 \}\l}"];
Node_45 [shape=record,label="{45\:\ 0x00e3|if (r1 == null) goto L_0x00e8\l}"];
Node_46 [shape=record,label="{46\:\ 0x00e5|r1.destroy()\l}"];
Node_47 [shape=record,label="{47\:\ 0x00e8|RETURN\l|return null\l}"];
Node_48 [shape=record,label="{48\:\ 0x00e9|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:43:0x00c9\l|java.lang.Throwable r7 = th\l}"];
Node_49 [shape=record,label="{49\:\ 0x00ea|PHI: r1 r7 \l  PHI: (r1v0 org.mapsforge.map.rendertheme.RenderContext) = (r1v1 org.mapsforge.map.rendertheme.RenderContext), (r1v3 org.mapsforge.map.rendertheme.RenderContext) binds: [B:48:0x00e9, B:40:0x00c5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 'th' java.lang.Throwable) = (r7v3 'th' java.lang.Throwable), (r7v7 'th' java.lang.Throwable) binds: [B:48:0x00e9, B:40:0x00c5] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L_0x00ef\l}"];
Node_50 [shape=record,label="{50\:\ 0x00ec|r1.destroy()\l}"];
Node_51 [shape=record,label="{51\:\ 0x00ef|throw r7\l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.graphics.TileBitmap org.mapsforge.map.layer.renderer.DatabaseRenderer.executeJob((r6v0 'this' org.mapsforge.map.layer.renderer.DatabaseRenderer A[IMMUTABLE_TYPE, THIS]), (r7v0 org.mapsforge.map.layer.renderer.RendererJob A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_41;
Node_1 -> Node_39;
Node_2 -> Node_3;
Node_2 -> Node_41;
Node_2 -> Node_39;
Node_3 -> Node_4;
Node_3 -> Node_38;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_34;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_32;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_34 -> Node_38;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_38 -> Node_43;
Node_39 -> Node_40;
Node_40 -> Node_49;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_43 -> Node_48;
Node_44 -> Node_45;
Node_44 -> Node_48;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_51;
}

