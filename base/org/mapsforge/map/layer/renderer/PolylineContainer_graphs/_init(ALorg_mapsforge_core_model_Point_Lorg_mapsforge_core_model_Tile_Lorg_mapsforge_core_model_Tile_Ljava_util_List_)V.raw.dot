digraph "CFG fororg.mapsforge.map.layer.renderer.PolylineContainer.\<init\>([Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0004: NEW_ARRAY  (r1 I:org.mapsforge.core.model.Point[][]) = (r0 I:int A[IMMUTABLE_TYPE]) type: org.mapsforge.core.model.Point[][] \l0x0006: IPUT  \l  (r1 I:org.mapsforge.core.model.Point[][])\l  (r4 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.layer.renderer.PolylineContainer.coordinatesAbsolute org.mapsforge.core.model.Point[][] \l0x0008: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CHECK_CAST  (r1 I:org.mapsforge.core.model.Point[][]) = (org.mapsforge.core.model.Point[][]) (r1 I:?[OBJECT, ARRAY]) \l0x000b: IPUT  \l  (r1 I:org.mapsforge.core.model.Point[][])\l  (r4 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.layer.renderer.PolylineContainer.coordinatesRelativeToTile org.mapsforge.core.model.Point[][] \l0x000d: IGET  (r1 I:org.mapsforge.core.model.Point[][]) = (r4 I:org.mapsforge.map.layer.renderer.PolylineContainer) org.mapsforge.map.layer.renderer.PolylineContainer.coordinatesAbsolute org.mapsforge.core.model.Point[][] \l0x000f: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[]) \l0x0010: NEW_ARRAY  (r2 I:org.mapsforge.core.model.Point[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: org.mapsforge.core.model.Point[] \l0x0012: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0015: IGET  (r1 I:org.mapsforge.core.model.Point[][]) = (r4 I:org.mapsforge.map.layer.renderer.PolylineContainer) org.mapsforge.map.layer.renderer.PolylineContainer.coordinatesAbsolute org.mapsforge.core.model.Point[][] \l0x0017: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0019: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[]) \l0x001a: INVOKE  \l  (r5 I:java.lang.Object)\l  (r3 I:int)\l  (r1 I:java.lang.Object)\l  (r3 I:int)\l  (r2 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x001d: IPUT  \l  (r8 I:java.util.List\<org.mapsforge.core.model.Tag\>)\l  (r4 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.layer.renderer.PolylineContainer.tags java.util.List \l0x001f: IPUT  \l  (r6 I:org.mapsforge.core.model.Tile)\l  (r4 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.layer.renderer.PolylineContainer.upperLeft org.mapsforge.core.model.Tile \l0x0021: IPUT  \l  (r7 I:org.mapsforge.core.model.Tile)\l  (r4 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.layer.renderer.PolylineContainer.lowerRight org.mapsforge.core.model.Tile \l0x0023: IPUT  \l  (r3 I:byte)\l  (r4 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.layer.renderer.PolylineContainer.layer byte \l0x0025: AGET  (r6 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0027: ARRAY_LENGTH  (r7 I:int) = (r5 I:?[]) \l0x0028: ARITH  (r7 I:int) = (r7 I:int) \- (r0 I:int) \l0x0029: AGET  (r5 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r7 I:?[int, short, byte, char]) \l0x002b: INVOKE  (r5 I:boolean) = \l  (r6 I:org.mapsforge.core.model.Point)\l  (r5 I:java.lang.Object)\l org.mapsforge.core.model.Point.equals(java.lang.Object):boolean type: VIRTUAL \l0x002f: IPUT  \l  (r5 I:boolean)\l  (r4 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.layer.renderer.PolylineContainer.isClosedWay boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0031|0x0031: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.renderer.PolylineContainer.\<init\>((r4 'this' I:org.mapsforge.map.layer.renderer.PolylineContainer A[IMMUTABLE_TYPE, THIS]), (r5 I:org.mapsforge.core.model.Point[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.util.List\<org.mapsforge.core.model.Tag\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[([, Lorg\/mapsforge\/core\/model\/Point;, Lorg\/mapsforge\/core\/model\/Tile;, Lorg\/mapsforge\/core\/model\/Tile;, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/model\/Tag;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

