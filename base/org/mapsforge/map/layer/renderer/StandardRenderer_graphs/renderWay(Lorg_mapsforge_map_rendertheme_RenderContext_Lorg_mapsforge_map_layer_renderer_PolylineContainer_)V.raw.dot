digraph "CFG fororg.mapsforge.map.layer.renderer.StandardRenderer.renderWay(Lorg\/mapsforge\/map\/rendertheme\/RenderContext;Lorg\/mapsforge\/map\/layer\/renderer\/PolylineContainer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:byte) = (r3 I:org.mapsforge.map.layer.renderer.PolylineContainer) org.mapsforge.map.layer.renderer.PolylineContainer.getLayer():byte type: VIRTUAL \l0x0004: INVOKE  \l  (r2 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r0 I:byte)\l org.mapsforge.map.rendertheme.RenderContext.setDrawingLayers(byte):void type: VIRTUAL \l0x0007: INVOKE  (r0 I:boolean) = (r3 I:org.mapsforge.map.layer.renderer.PolylineContainer) org.mapsforge.map.layer.renderer.PolylineContainer.isClosedWay():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IGET  (r0 I:org.mapsforge.map.rendertheme.rule.RenderTheme) = (r2 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.renderTheme org.mapsforge.map.rendertheme.rule.RenderTheme \l0x000f: INVOKE  \l  (r0 I:org.mapsforge.map.rendertheme.rule.RenderTheme)\l  (r1 I:org.mapsforge.map.rendertheme.RenderCallback)\l  (r2 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r3 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.rendertheme.rule.RenderTheme.matchClosedWay(org.mapsforge.map.rendertheme.RenderCallback, org.mapsforge.map.rendertheme.RenderContext, org.mapsforge.map.layer.renderer.PolylineContainer):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IGET  (r0 I:org.mapsforge.map.rendertheme.rule.RenderTheme) = (r2 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.renderTheme org.mapsforge.map.rendertheme.rule.RenderTheme \l0x0015: INVOKE  \l  (r0 I:org.mapsforge.map.rendertheme.rule.RenderTheme)\l  (r1 I:org.mapsforge.map.rendertheme.RenderCallback)\l  (r2 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r3 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.rendertheme.rule.RenderTheme.matchLinearWay(org.mapsforge.map.rendertheme.RenderCallback, org.mapsforge.map.rendertheme.RenderContext, org.mapsforge.map.layer.renderer.PolylineContainer):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: RETURN   \l}"];
MethodNode[shape=record,label="{protected void org.mapsforge.map.layer.renderer.StandardRenderer.renderWay((r1 'this' I:org.mapsforge.map.layer.renderer.StandardRenderer A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.mapsforge.map.layer.renderer.PolylineContainer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

