digraph "CFG fororg.mapsforge.map.layer.renderer.StandardRenderer.processReadMapData(Lorg\/mapsforge\/map\/rendertheme\/RenderContext;Lorg\/mapsforge\/map\/datastore\/MapReadResult;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN   \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IGET  (r0 I:java.util.List\<org.mapsforge.map.datastore.PointOfInterest\>) = (r7 I:org.mapsforge.map.datastore.MapReadResult) org.mapsforge.map.datastore.MapReadResult.pointOfInterests java.util.List \l0x0005: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0019 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r1 I:org.mapsforge.map.datastore.PointOfInterest) = (org.mapsforge.map.datastore.PointOfInterest) (r1 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  \l  (r5 I:org.mapsforge.map.layer.renderer.StandardRenderer)\l  (r6 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r1 I:org.mapsforge.map.datastore.PointOfInterest)\l org.mapsforge.map.layer.renderer.StandardRenderer.renderPointOfInterest(org.mapsforge.map.rendertheme.RenderContext, org.mapsforge.map.datastore.PointOfInterest):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IGET  (r0 I:java.util.List\<org.mapsforge.map.datastore.Way\>) = (r7 I:org.mapsforge.map.datastore.MapReadResult) org.mapsforge.map.datastore.MapReadResult.ways java.util.List \l0x001b: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0029: CHECK_CAST  (r1 I:org.mapsforge.map.datastore.Way) = (org.mapsforge.map.datastore.Way) (r1 I:?[OBJECT, ARRAY]) \l0x002b: NEW_INSTANCE  (r2 I:org.mapsforge.map.layer.renderer.PolylineContainer) =  org.mapsforge.map.layer.renderer.PolylineContainer \l0x002d: IGET  (r3 I:org.mapsforge.map.layer.renderer.RendererJob) = (r6 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob \l0x002f: IGET  (r3 I:org.mapsforge.core.model.Tile) = (r3 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile \l0x0031: IGET  (r4 I:org.mapsforge.map.layer.renderer.RendererJob) = (r6 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob \l0x0033: IGET  (r4 I:org.mapsforge.core.model.Tile) = (r4 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile \l0x0035: INVOKE  \l  (r2 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l  (r1 I:org.mapsforge.map.datastore.Way)\l  (r3 I:org.mapsforge.core.model.Tile)\l  (r4 I:org.mapsforge.core.model.Tile)\l org.mapsforge.map.layer.renderer.PolylineContainer.\<init\>(org.mapsforge.map.datastore.Way, org.mapsforge.core.model.Tile, org.mapsforge.core.model.Tile):void type: DIRECT \l0x0038: INVOKE  \l  (r5 I:org.mapsforge.map.layer.renderer.StandardRenderer)\l  (r6 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r2 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.layer.renderer.StandardRenderer.renderWay(org.mapsforge.map.rendertheme.RenderContext, org.mapsforge.map.layer.renderer.PolylineContainer):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|0x003c: IGET  (r7 I:boolean) = (r7 I:org.mapsforge.map.datastore.MapReadResult) org.mapsforge.map.datastore.MapReadResult.isWater boolean \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0043 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: INVOKE  \l  (r5 I:org.mapsforge.map.layer.renderer.StandardRenderer)\l  (r6 I:org.mapsforge.map.rendertheme.RenderContext)\l org.mapsforge.map.layer.renderer.StandardRenderer.renderWaterBackground(org.mapsforge.map.rendertheme.RenderContext):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: RETURN   \l}"];
MethodNode[shape=record,label="{protected void org.mapsforge.map.layer.renderer.StandardRenderer.processReadMapData((r5 'this' I:org.mapsforge.map.layer.renderer.StandardRenderer A[IMMUTABLE_TYPE, THIS]), (r6 I:org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.map.datastore.MapReadResult A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
}

