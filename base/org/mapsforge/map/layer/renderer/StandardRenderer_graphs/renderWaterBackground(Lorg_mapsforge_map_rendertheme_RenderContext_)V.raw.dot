digraph "CFG fororg.mapsforge.map.layer.renderer.StandardRenderer.renderWaterBackground(Lorg\/mapsforge\/map\/rendertheme\/RenderContext;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  \l  (r9 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r0 I:byte)\l org.mapsforge.map.rendertheme.RenderContext.setDrawingLayers(byte):void type: VIRTUAL \l0x0004: IGET  (r1 I:org.mapsforge.map.layer.renderer.RendererJob) = (r9 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob \l0x0006: IGET  (r1 I:org.mapsforge.core.model.Tile) = (r1 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile \l0x0008: IGET  (r1 I:int) = (r1 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileSize int \l0x000a: INVOKE  (r1 I:org.mapsforge.core.model.Point[]) = (r1 I:int) org.mapsforge.map.layer.renderer.StandardRenderer.getTilePixelCoordinates(int):org.mapsforge.core.model.Point[] type: STATIC \l0x000e: IGET  (r2 I:org.mapsforge.map.layer.renderer.RendererJob) = (r9 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob \l0x0010: IGET  (r2 I:org.mapsforge.core.model.Tile) = (r2 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile \l0x0012: INVOKE  (r2 I:org.mapsforge.core.model.Point) = (r2 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.getOrigin():org.mapsforge.core.model.Point type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: ARRAY_LENGTH  (r3 I:int) = (r1 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: IF  (r0 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:4:0x0028 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0019|0x0019: AGET  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x001b: IGET  (r4 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x001d: IGET  (r6 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x001f: INVOKE  (r3 I:org.mapsforge.core.model.Point) = \l  (r3 I:org.mapsforge.core.model.Point)\l  (r4 I:double)\l  (r6 I:double)\l org.mapsforge.core.model.Point.offset(double, double):org.mapsforge.core.model.Point type: VIRTUAL \l0x0023: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0025: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: NEW_INSTANCE  (r0 I:org.mapsforge.map.layer.renderer.PolylineContainer) =  org.mapsforge.map.layer.renderer.PolylineContainer \l0x002a: IGET  (r2 I:org.mapsforge.map.layer.renderer.RendererJob) = (r9 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob \l0x002c: IGET  (r2 I:org.mapsforge.core.model.Tile) = (r2 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile \l0x002e: IGET  (r3 I:org.mapsforge.map.layer.renderer.RendererJob) = (r9 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.rendererJob org.mapsforge.map.layer.renderer.RendererJob \l0x0030: IGET  (r3 I:org.mapsforge.core.model.Tile) = (r3 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.tile org.mapsforge.core.model.Tile \l0x0032: SGET  (r4 I:org.mapsforge.core.model.Tag) =  org.mapsforge.map.layer.renderer.StandardRenderer.TAG_NATURAL_WATER org.mapsforge.core.model.Tag \l0x0034: INVOKE  (r4 I:java.util.List) = (r4 I:java.lang.Object) java.util.Collections.singletonList(java.lang.Object):java.util.List type: STATIC \l0x0038: INVOKE  \l  (r0 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l  (r1 I:org.mapsforge.core.model.Point[])\l  (r2 I:org.mapsforge.core.model.Tile)\l  (r3 I:org.mapsforge.core.model.Tile)\l  (r4 I:java.util.List)\l org.mapsforge.map.layer.renderer.PolylineContainer.\<init\>(org.mapsforge.core.model.Point[], org.mapsforge.core.model.Tile, org.mapsforge.core.model.Tile, java.util.List):void type: DIRECT \l0x003b: IGET  (r1 I:org.mapsforge.map.rendertheme.rule.RenderTheme) = (r9 I:org.mapsforge.map.rendertheme.RenderContext) org.mapsforge.map.rendertheme.RenderContext.renderTheme org.mapsforge.map.rendertheme.rule.RenderTheme \l0x003d: INVOKE  \l  (r1 I:org.mapsforge.map.rendertheme.rule.RenderTheme)\l  (r8 I:org.mapsforge.map.rendertheme.RenderCallback)\l  (r9 I:org.mapsforge.map.rendertheme.RenderContext)\l  (r0 I:org.mapsforge.map.layer.renderer.PolylineContainer)\l org.mapsforge.map.rendertheme.rule.RenderTheme.matchClosedWay(org.mapsforge.map.rendertheme.RenderCallback, org.mapsforge.map.rendertheme.RenderContext, org.mapsforge.map.layer.renderer.PolylineContainer):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0040|0x0040: RETURN   \l}"];
MethodNode[shape=record,label="{protected void org.mapsforge.map.layer.renderer.StandardRenderer.renderWaterBackground((r8 'this' I:org.mapsforge.map.layer.renderer.StandardRenderer A[IMMUTABLE_TYPE, THIS]), (r9 I:org.mapsforge.map.rendertheme.RenderContext A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

