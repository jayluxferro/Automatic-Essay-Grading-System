digraph "CFG fororg.mapsforge.map.layer.renderer.CanvasRasterer.drawMapElements(Ljava\/util\/Set;Lorg\/mapsforge\/core\/model\/Tile;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList), (r6 I:java.util.Collection) java.util.ArrayList.\<init\>(java.util.Collection):void type: DIRECT \l0x0005: INVOKE  (r0 I:java.util.List) java.util.Collections.sort(java.util.List):void type: STATIC \l0x0008: INVOKE  (r6 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: INVOKE  (r0 I:boolean) = (r6 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0026 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|0x0012: INVOKE  (r0 I:java.lang.Object) = (r6 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0016: CHECK_CAST  (r0 I:org.mapsforge.core.mapelements.MapElementContainer) = (org.mapsforge.core.mapelements.MapElementContainer) (r0 I:?[OBJECT, ARRAY]) \l0x0018: IGET  (r1 I:org.mapsforge.core.graphics.Canvas) = (r5 I:org.mapsforge.map.layer.renderer.CanvasRasterer) org.mapsforge.map.layer.renderer.CanvasRasterer.canvas org.mapsforge.core.graphics.Canvas \l0x001a: INVOKE  (r2 I:org.mapsforge.core.model.Point) = (r7 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.getOrigin():org.mapsforge.core.model.Point type: VIRTUAL \l0x001e: IGET  (r3 I:org.mapsforge.core.graphics.Matrix) = (r5 I:org.mapsforge.map.layer.renderer.CanvasRasterer) org.mapsforge.map.layer.renderer.CanvasRasterer.symbolMatrix org.mapsforge.core.graphics.Matrix \l0x0020: SGET  (r4 I:org.mapsforge.core.graphics.Filter) =  org.mapsforge.core.graphics.Filter.NONE org.mapsforge.core.graphics.Filter \l0x0022: INVOKE  \l  (r0 I:org.mapsforge.core.mapelements.MapElementContainer)\l  (r1 I:org.mapsforge.core.graphics.Canvas)\l  (r2 I:org.mapsforge.core.model.Point)\l  (r3 I:org.mapsforge.core.graphics.Matrix)\l  (r4 I:org.mapsforge.core.graphics.Filter)\l org.mapsforge.core.mapelements.MapElementContainer.draw(org.mapsforge.core.graphics.Canvas, org.mapsforge.core.model.Point, org.mapsforge.core.graphics.Matrix, org.mapsforge.core.graphics.Filter):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: RETURN   \l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.layer.renderer.CanvasRasterer.drawMapElements((r5 'this' I:org.mapsforge.map.layer.renderer.CanvasRasterer A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.Set\<org.mapsforge.core.mapelements.MapElementContainer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Set\<, Lorg\/mapsforge\/core\/mapelements\/MapElementContainer;, \>;, Lorg\/mapsforge\/core\/model\/Tile;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

