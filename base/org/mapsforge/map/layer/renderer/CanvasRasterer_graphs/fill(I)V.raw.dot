digraph "CFG fororg.mapsforge.map.layer.renderer.CanvasRasterer.fill(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r2 I:int) org.mapsforge.core.graphics.GraphicUtils.getAlpha(int):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:org.mapsforge.core.graphics.Canvas) = (r1 I:org.mapsforge.map.layer.renderer.CanvasRasterer) org.mapsforge.map.layer.renderer.CanvasRasterer.canvas org.mapsforge.core.graphics.Canvas \l0x0008: INVOKE  (r0 I:org.mapsforge.core.graphics.Canvas), (r2 I:int) org.mapsforge.core.graphics.Canvas.fillColor(int):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: RETURN   \l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.layer.renderer.CanvasRasterer.fill((r1 'this' I:org.mapsforge.map.layer.renderer.CanvasRasterer A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

