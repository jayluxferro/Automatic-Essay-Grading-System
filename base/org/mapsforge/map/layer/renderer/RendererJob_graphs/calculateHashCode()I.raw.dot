digraph "CFG fororg.mapsforge.map.layer.renderer.RendererJob.calculateHashCode()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r2 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.hashCode():int type: SUPER \l0x0004: ARITH  (r0 I:int) = (r0 I:int) * (31 int) \l0x0006: IGET  (r1 I:org.mapsforge.map.datastore.MapDataStore) = (r2 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.mapDataStore org.mapsforge.map.datastore.MapDataStore \l0x0008: INVOKE  (r1 I:int) = (r1 I:java.lang.Object) java.lang.Object.hashCode():int type: VIRTUAL \l0x000c: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x000d: ARITH  (r0 I:int) = (r0 I:int) * (31 int) \l0x000f: IGET  (r1 I:float) = (r2 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.textScale float \l0x0011: INVOKE  (r1 I:int) = (r1 I:float) java.lang.Float.floatToIntBits(float):int type: STATIC \l0x0015: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0016: IGET  (r1 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture) = (r2 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.renderThemeFuture org.mapsforge.map.rendertheme.rule.RenderThemeFuture \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: ARITH  (r0 I:int) = (r0 I:int) * (31 int) \l0x001c: IGET  (r1 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture) = (r2 I:org.mapsforge.map.layer.renderer.RendererJob) org.mapsforge.map.layer.renderer.RendererJob.renderThemeFuture org.mapsforge.map.rendertheme.rule.RenderThemeFuture \l0x001e: INVOKE  (r1 I:int) = (r1 I:java.lang.Object) java.lang.Object.hashCode():int type: VIRTUAL \l0x0022: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: RETURN  (r0 I:int) \l}"];
MethodNode[shape=record,label="{private int org.mapsforge.map.layer.renderer.RendererJob.calculateHashCode((r2 'this' I:org.mapsforge.map.layer.renderer.RendererJob A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
}

