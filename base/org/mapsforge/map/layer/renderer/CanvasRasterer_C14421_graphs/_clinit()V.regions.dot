digraph "CFG fororg.mapsforge.map.layer.renderer.CanvasRasterer.1.\<clinit\>()V" {
subgraph cluster_Region_1041151308 {
label = "R(4:0|2|4|(1:6))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|$SwitchMap$org$mapsforge$map$layer$renderer$ShapeType = new int[org.mapsforge.map.layer.renderer.ShapeType.values().length]\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ NoSuchFieldError \-\> 0x0014 \}\lSplitter:B:1:0x0009\l|$SwitchMap$org$mapsforge$map$layer$renderer$ShapeType[org.mapsforge.map.layer.renderer.ShapeType.CIRCLE.ordinal()] = 1     \/\/ Catch:\{ NoSuchFieldError \-\> 0x0014 \}\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ NoSuchFieldError \-\> 0x001f \}\lSplitter:B:3:0x0014\l|$SwitchMap$org$mapsforge$map$layer$renderer$ShapeType[org.mapsforge.map.layer.renderer.ShapeType.HILLSHADING.ordinal()] = 2     \/\/ Catch:\{ NoSuchFieldError \-\> 0x001f \}\l}"];
subgraph cluster_TryCatchRegion_401429776 {
label = "Try: R(1:6) catches: R(0)";
node [shape=record,color=blue];
subgraph cluster_Region_1299133329 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ NoSuchFieldError \-\> 0x002a \}\lSplitter:B:5:0x001f\l|$SwitchMap$org$mapsforge$map$layer$renderer$ShapeType[org.mapsforge.map.layer.renderer.ShapeType.POLYLINE.ordinal()] = 3     \/\/ Catch:\{ NoSuchFieldError \-\> 0x002a \}\l}"];
}
subgraph cluster_Region_1040928537 {
label = "R(0) | ExcHandler: NoSuchFieldError (unused java.lang.NoSuchFieldError)\l";
node [shape=record,color=blue];
}
}
}
subgraph cluster_Region_1969502529 {
label = "R(5:3|4|5|6|8)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0014|SYNTHETIC\lSplitter:B:3:0x0014\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ NoSuchFieldError \-\> 0x001f \}\lSplitter:B:3:0x0014\l|$SwitchMap$org$mapsforge$map$layer$renderer$ShapeType[org.mapsforge.map.layer.renderer.ShapeType.HILLSHADING.ordinal()] = 2     \/\/ Catch:\{ NoSuchFieldError \-\> 0x001f \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|SYNTHETIC\lSplitter:B:5:0x001f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ NoSuchFieldError \-\> 0x002a \}\lSplitter:B:5:0x001f\l|$SwitchMap$org$mapsforge$map$layer$renderer$ShapeType[org.mapsforge.map.layer.renderer.ShapeType.POLYLINE.ordinal()] = 3     \/\/ Catch:\{ NoSuchFieldError \-\> 0x002a \}\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
}
subgraph cluster_Region_140293928 {
label = "R(3:5|6|8)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001f|SYNTHETIC\lSplitter:B:5:0x001f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ NoSuchFieldError \-\> 0x002a \}\lSplitter:B:5:0x001f\l|$SwitchMap$org$mapsforge$map$layer$renderer$ShapeType[org.mapsforge.map.layer.renderer.ShapeType.POLYLINE.ordinal()] = 3     \/\/ Catch:\{ NoSuchFieldError \-\> 0x002a \}\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
}
subgraph cluster_Region_1040928537 {
label = "R(0) | ExcHandler: NoSuchFieldError (unused java.lang.NoSuchFieldError)\l";
node [shape=record,color=blue];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0009|SYNTHETIC\lSplitter:B:1:0x0009\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lExcHandler: NoSuchFieldError (unused java.lang.NoSuchFieldError)\lSplitter:B:5:0x001f\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void org.mapsforge.map.layer.renderer.CanvasRasterer.1.\<clinit\>()  | INCONSISTENT_CODE\lMissing exception handler attribute for start block: B:5:0x001f\lMissing exception handler attribute for start block: B:3:0x0014\lFailed to process nested try\/catch\lCan't wrap try\/catch for region: R(8:0\|1\|2\|3\|4\|5\|6\|8)\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_7 -> Node_9;
}

