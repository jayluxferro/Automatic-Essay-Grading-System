digraph "CFG fororg.mapsforge.map.layer.renderer.WayDecorator.renderSymbol(Lorg\/mapsforge\/core\/graphics\/Bitmap;Lorg\/mapsforge\/core\/graphics\/Display;IFZZFFZ[[Lorg\/mapsforge\/core\/model\/Point;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r36 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r40 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: CAST  (r3 I:int) = (int) (r1 I:float) \l0x0005: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CMP_L  (r6 I:int) = (r0 I:float), (r4 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: AGET  (r0 I:?[OBJECT, ARRAY]) = \l  (r42 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: AGET  (r2 I:?[OBJECT, ARRAY]) = \l  (r42 I:?[OBJECT, ARRAY][])\l  (r5 I:?[int, short, byte, char])\l \l0x0010: CAST  (r6 I:double) = (double) (r0 I:float) \l0x0011: INVOKE  (r0 I:org.mapsforge.core.model.Point[]) = (r2 I:org.mapsforge.core.model.Point[]), (r6 I:double) org.mapsforge.map.layer.renderer.RendererUtils.parallelPath(org.mapsforge.core.model.Point[], double):org.mapsforge.core.model.Point[] type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: AGET  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x0017: IGET  (r6 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0019: AGET  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) \l0x001b: IGET  (r8 I:double) = (r2 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x001d: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001e: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001f: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: ARRAY_LENGTH  (r10 I:int) = (r0 I:?[]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: IF  (r2 I:?[int, byte, short, char]) \>= (r10 I:?[int, byte, short, char])  \-\> B:22:0x00aa \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: AGET  (r10 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0025: IGET  (r10 I:double) = (r10 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0027: AGET  (r12 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0029: IGET  (r12 I:double) = (r12 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x002b: ARITH  (r14 I:double) = (r10 I:double) \- (r6 I:double) \l0x002d: ARITH  (r16 I:double) = (r12 I:double) \- (r8 I:double) \l0x002f: ARITH  (r18 I:double) = (r14 I:double) * (r14 I:double) \l0x0031: ARITH  (r20 I:double) = (r16 I:double) * (r16 I:double) \l0x0033: ARITH  (r18 I:double) = (r18 I:double) + (r20 I:double) \l0x0035: MOVE  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0037: MOVE  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0039: INVOKE  (r3 I:double) = (r18 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x003d: CAST  (r3 I:float) = (float) (r3 I:double) \l0x003e: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|0x0040: CAST  (r4 I:float) = (float) (r4 I:int) \l0x0041: ARITH  (r18 I:float) = (r3 I:float) \- (r4 I:float) \l0x0043: CMP_L  (r19 I:int) = (r18 I:float), (r1 I:float) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|0x0045: IF  (r19 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:17:0x008f \l}"];
Node_10 [shape=record,label="{10\:\ 0x0047|0x0047: ARITH  (r4 I:float) = (r4 I:float) \/ (r3 I:float) \l0x0048: CAST  (r3 I:double) = (double) (r4 I:float) \l0x0049: ARITH  (r14 I:double) = (r14 I:double) * (r3 I:double) \l0x004b: ARITH  (r6 I:double) = (r6 I:double) + (r14 I:double) \l0x004c: ARITH  (r16 I:double) = (r16 I:double) * (r3 I:double) \l0x004e: ARITH  (r8 I:double) = (r8 I:double) + (r16 I:double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|0x0050: IF  (r41 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x005b \l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|0x0052: ARITH  (r3 I:double) = (r12 I:double) \- (r8 I:double) \l0x0054: ARITH  (r14 I:double) = (r10 I:double) \- (r6 I:double) \l0x0056: INVOKE  (r3 I:double) = (r3 I:double), (r14 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x005a: CAST  (r5 I:float) = (float) (r3 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x005b|0x005b: NEW_INSTANCE  (r3 I:org.mapsforge.core.model.Point) =  org.mapsforge.core.model.Point \l0x005d: INVOKE  \l  (r3 I:org.mapsforge.core.model.Point)\l  (r6 I:double)\l  (r8 I:double)\l org.mapsforge.core.model.Point.\<init\>(double, double):void type: DIRECT \l0x0060: NEW_INSTANCE  (r4 I:org.mapsforge.core.mapelements.SymbolContainer) =  org.mapsforge.core.mapelements.SymbolContainer \l0x0062: MOVE  (r23 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0064: MOVE  (r24 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0066: MOVE  (r25 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0068: MOVE  (r26 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r35 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006a: MOVE  (r27 I:?[OBJECT, ARRAY]) = (r33 I:?[OBJECT, ARRAY]) \l0x006c: MOVE  (r28 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x006e: MOVE  (r29 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r37 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0070: INVOKE  \l  (r23 I:org.mapsforge.core.mapelements.SymbolContainer)\l  (r24 I:org.mapsforge.core.model.Point)\l  (r25 I:org.mapsforge.core.graphics.Display)\l  (r26 I:int)\l  (r27 I:org.mapsforge.core.graphics.Bitmap)\l  (r28 I:float)\l  (r29 I:boolean)\l org.mapsforge.core.mapelements.SymbolContainer.\<init\>(org.mapsforge.core.model.Point, org.mapsforge.core.graphics.Display, int, org.mapsforge.core.graphics.Bitmap, float, boolean):void type: DIRECT \l0x0073: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r43 I:?[OBJECT, ARRAY]) \l0x0075: INVOKE  (r14 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0078|0x0078: IF  (r38 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x007b \l}"];
Node_15 [shape=record,label="{15\:\ 0x007a|0x007a: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ 0x007b|0x007b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007c: ARITH  (r3 I:double) = (r10 I:double) \- (r6 I:double) \l0x007e: ARITH  (r16 I:double) = (r12 I:double) \- (r8 I:double) \l0x0080: MOVE  (r30 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0082: MOVE  (r31 I:?[long, double]) = (r3 I:?[long, double]) \l0x0084: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r39 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0086: CAST  (r3 I:int) = (int) (r0 I:float) \l0x0087: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0088: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r30 I:?[OBJECT, ARRAY]) \l0x008c: MOVE  (r14 I:?[long, double]) = (r31 I:?[long, double]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x008f|0x008f: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r43 I:?[OBJECT, ARRAY]) \l0x0091: MOVE  (r30 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0093: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r39 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0095: ARITH  (r4 I:float) = (r4 I:float) \- (r3 I:float) \l0x0096: CAST  (r3 I:int) = (int) (r4 I:float) \l0x0097: CAST  (r4 I:float) = (float) (r3 I:int) \l0x0098: CMP_G  (r4 I:int) = (r4 I:float), (r1 I:float) \l}"];
Node_18 [shape=record,label="{18\:\ 0x009a|0x009a: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:20:0x009f \l}"];
Node_19 [shape=record,label="{19\:\ 0x009c|0x009c: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_20 [shape=record,label="{20\:\ 0x009f|0x009f: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_21 [shape=record,label="{21\:\ 0x00a0|0x00a0: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x00a2: MOVE  (r6 I:?[long, double]) = (r10 I:?[long, double]) \l0x00a3: MOVE  (r8 I:?[long, double]) = (r12 I:?[long, double]) \l0x00a4: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a6: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r30 I:?[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x00aa|0x00aa: RETURN   \l}"];
MethodNode[shape=record,label="{static void org.mapsforge.map.layer.renderer.WayDecorator.renderSymbol((r33 I:org.mapsforge.core.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:org.mapsforge.core.graphics.Display A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r37 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r38 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r39 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r40 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r41 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r42 I:org.mapsforge.core.model.Point[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r43 I:java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/core\/graphics\/Bitmap;, Lorg\/mapsforge\/core\/graphics\/Display;, IFZZFFZ[[, Lorg\/mapsforge\/core\/model\/Point;, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/mapelements\/MapElementContainer;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_22;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_16 -> Node_8;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_5;
}

