digraph "CFG fororg.mapsforge.map.layer.renderer.WayDecorator.renderText(Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;Ljava\/lang\/String;Lorg\/mapsforge\/core\/graphics\/Display;IFLorg\/mapsforge\/core\/graphics\/Paint;Lorg\/mapsforge\/core\/graphics\/Paint;ZFFZ[[Lorg\/mapsforge\/core\/model\/Point;Ljava\/util\/List;)V" {
subgraph cluster_Region_1143755314 {
label = "R(8:0|3|7|9|(1:11)(1:13)|12|14|(4:17|(2:19|(2:23|(3:26|(1:28)(1:29)|(2:31|32)(1:38))))|25|32)) | DECL_VAR: org.mapsforge.core.model.Point[] null, org.mapsforge.core.model.Point[] null, org.mapsforge.core.model.Rectangle null, int null, org.mapsforge.core.model.LineSegment null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r10 = r23\lfloat r0 = r26\lorg.mapsforge.core.graphics.Paint r11 = r27\lorg.mapsforge.core.graphics.Paint r12 = r28\lfloat r13 = r31\ljava.util.List\<org.mapsforge.core.mapelements.MapElementContainer\> r14 = r34\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|PHI: r2 \l  PHI: (r2v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int r15 = (r12 == null ? r11.getTextWidth(r10) : r12.getTextWidth(r10)) + ((int) r13)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|PHI: r2 \l  PHI: (r2v4 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|double r16 = (double) (r12 == null ? r11.getTextHeight(r10) : r12.getTextHeight(r10))\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|org.mapsforge.core.model.Rectangle org.mapsforge.core.model.Rectangle r8 = org.mapsforge.core.model.Tile.getBoundaryAbsolute(r21, r22)\lint r3 = 0\l}"];
subgraph cluster_IfRegion_2061043842 {
label = "IF [B:10:0x0032] THEN: R(1:11) ELSE: R(1:13)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0032|if (r0 == 0.0f) goto L_0x0034\l}"];
subgraph cluster_Region_117663259 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0034|r0 = r33[0]\l}"];
}
subgraph cluster_Region_480834284 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0038|org.mapsforge.core.model.Point[] r0 = org.mapsforge.map.layer.renderer.RendererUtils.parallelPath(r33[0], (double) r0)\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0036|PHI: r0 \l  PHI: (r0v2 org.mapsforge.core.model.Point[]) = (r0v1 org.mapsforge.core.model.Point[]), (r0v10 org.mapsforge.core.model.Point[]) binds: [B:13:0x0038, B:11:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|org.mapsforge.core.model.Point[] r9 = r0\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|int r7 = 1\l}"];
subgraph cluster_LoopRegion_47879452 {
label = "LOOP:0: (4:17|(2:19|(2:23|(3:26|(1:28)(1:29)|(2:31|32)(1:38))))|25|32)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0043|if (r7 \< r9.length) goto L_0x0045\l}"];
subgraph cluster_Region_841412424 {
label = "R(4:17|(2:19|(2:23|(3:26|(1:28)(1:29)|(2:31|32)(1:38))))|25|32)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0045|org.mapsforge.core.model.LineSegment org.mapsforge.core.model.LineSegment r0 = new org.mapsforge.core.model.LineSegment(r9[r7 \- 1], r9[r7])\ldouble double r1 = r0.length()\lint r3 = (int) (((double) r3) \- r1)\l}"];
subgraph cluster_IfRegion_1279486612 {
label = "IF [B:18:0x0057] THEN: R(2:19|(2:23|(3:26|(1:28)(1:29)|(2:31|32)(1:38)))) ELSE: null";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0057|if (r3 \<= 0) goto L_0x005a\l}"];
subgraph cluster_Region_1337955170 {
label = "R(2:19|(2:23|(3:26|(1:28)(1:29)|(2:31|32)(1:38))))";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x005a|double double r4 = (double) r15\l}"];
subgraph cluster_IfRegion_2144649871 {
label = "IF [B:20:0x005d, B:22:0x0064] THEN: R(2:23|(3:26|(1:28)(1:29)|(2:31|32)(1:38))) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x005d|ADDED_TO_REGION\l|if (r1 \>= r4) goto L_0x0060\l}"];
Node_22 [shape=record,label="{22\:\ 0x0064|ADDED_TO_REGION\l|if ((r0 = r0.clipToRectangle(r8)) != null) goto L_0x0067\l}"];
subgraph cluster_Region_201533780 {
label = "R(2:23|(3:26|(1:28)(1:29)|(2:31|32)(1:38)))";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0067|double double r1 = r0.length()\l}"];
subgraph cluster_IfRegion_1539571570 {
label = "IF [B:24:0x006d] THEN: R(3:26|(1:28)(1:29)|(2:31|32)(1:38)) ELSE: null";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x006d|if (r1 \>= r4) goto L_0x0079\l}"];
subgraph cluster_Region_15712830 {
label = "R(3:26|(1:28)(1:29)|(2:31|32)(1:38))";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0079|org.mapsforge.core.model.LineSegment org.mapsforge.core.model.LineSegment r0 = r0.subSegment(((r1 \- r4) \/ 2.0d) + ((double) (r13 \/ 2.0f)), (double) (((float) r15) \- r13))\l}"];
subgraph cluster_IfRegion_271365489 {
label = "IF [B:27:0x0095] THEN: R(1:28) ELSE: R(1:29)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x0095|if (r0.start.f266x \<= r0.end.f266x) goto L_0x0097\l}"];
subgraph cluster_Region_645184979 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0097|org.mapsforge.core.mapelements.WayTextContainer r10 = r0\lr18 = r7\lr19 = r8\lr20 = r9\lorg.mapsforge.core.mapelements.WayTextContainer org.mapsforge.core.mapelements.WayTextContainer r0 = new org.mapsforge.core.mapelements.WayTextContainer(r0.start, r0.end, r24, r25, r23, r27, r28, r16)\lr14.add(r10)\l}"];
}
subgraph cluster_Region_349912199 {
label = "R(1:29)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00b8|r18 = r7\lr19 = r8\lr20 = r9\lr14.add(new org.mapsforge.core.mapelements.WayTextContainer(r0.end, r0.start, r24, r25, r23, r27, r28, r16))\l}"];
}
}
subgraph cluster_IfRegion_615118816 {
label = "IF [B:30:0x00d7] THEN: R(2:31|32) ELSE: R(1:38)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00d7|PHI: r18 r19 r20 \l  PHI: (r18v2 int) = (r18v3 int), (r18v4 int) binds: [B:29:0x00b8, B:28:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r19v2 org.mapsforge.core.model.Rectangle) = (r19v3 org.mapsforge.core.model.Rectangle), (r19v4 org.mapsforge.core.model.Rectangle) binds: [B:29:0x00b8, B:28:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v2 org.mapsforge.core.model.Point[]) = (r20v3 org.mapsforge.core.model.Point[]), (r20v4 org.mapsforge.core.model.Point[]) binds: [B:29:0x00b8, B:28:0x0097] A[DONT_GENERATE, DONT_INLINE]\l|if (r29 != false) goto L_0x00da\l}"];
subgraph cluster_Region_826234521 {
label = "R(2:31|32)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x00da|r3 = (int) r30\l}"];
Node_32 [shape=record,label="{32\:\ 0x00de|LOOP_END\lPHI: r3 r18 r19 r20 \l  PHI: (r3v6 int) = (r3v5 int), (r3v17 int) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v0 int) = (r18v1 int), (r18v2 int) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r19v0 org.mapsforge.core.model.Rectangle) = (r19v1 org.mapsforge.core.model.Rectangle), (r19v2 org.mapsforge.core.model.Rectangle) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v0 org.mapsforge.core.model.Point[]) = (r20v1 org.mapsforge.core.model.Point[]), (r20v2 org.mapsforge.core.model.Point[]) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x0042\-\>B:32:0x00de\l|int r7 = r18 + 1\lr8 = r19\lr9 = r20\ljava.lang.String r10 = r23\l}"];
}
subgraph cluster_Region_1271434851 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
}
}
}
}
Node_25 [shape=record,label="{25\:\ 0x006f|float r1 = r30\lr18 = r7\lr19 = r8\lr20 = r9\l}"];
Node_32 [shape=record,label="{32\:\ 0x00de|LOOP_END\lPHI: r3 r18 r19 r20 \l  PHI: (r3v6 int) = (r3v5 int), (r3v17 int) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v0 int) = (r18v1 int), (r18v2 int) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r19v0 org.mapsforge.core.model.Rectangle) = (r19v1 org.mapsforge.core.model.Rectangle), (r19v2 org.mapsforge.core.model.Rectangle) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v0 org.mapsforge.core.model.Point[]) = (r20v1 org.mapsforge.core.model.Point[]), (r20v2 org.mapsforge.core.model.Point[]) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x0042\-\>B:32:0x00de\l|int r7 = r18 + 1\lr8 = r19\lr9 = r20\ljava.lang.String r10 = r23\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000c}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x000e}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0016}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001b}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001d}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0025}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0042|LOOP_START\lPHI: r3 r7 r8 r9 \l  PHI: (r3v2 int) = (r3v1 int), (r3v6 int) binds: [B:14:0x0040, B:32:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:14:0x0040, B:32:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 org.mapsforge.core.model.Rectangle) = (r8v0 org.mapsforge.core.model.Rectangle), (r8v2 org.mapsforge.core.model.Rectangle) binds: [B:14:0x0040, B:32:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 org.mapsforge.core.model.Point[]) = (r9v0 org.mapsforge.core.model.Point[]), (r9v2 org.mapsforge.core.model.Point[]) binds: [B:14:0x0040, B:32:0x00de] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x0042\-\>B:32:0x00de\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0060}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00e8|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x00e8|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x00de|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x00de|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{static void org.mapsforge.map.layer.renderer.WayDecorator.renderText((r21v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 org.mapsforge.core.graphics.Display A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33v0 org.mapsforge.core.model.Point[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/core\/model\/Tile;, Lorg\/mapsforge\/core\/model\/Tile;, Ljava\/lang\/String;, Lorg\/mapsforge\/core\/graphics\/Display;, IF, Lorg\/mapsforge\/core\/graphics\/Paint;, Lorg\/mapsforge\/core\/graphics\/Paint;, ZFFZ[[, Lorg\/mapsforge\/core\/model\/Point;, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/mapelements\/MapElementContainer;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_5;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13[style=dashed];
Node_11 -> Node_12;
Node_13 -> Node_12;
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_33[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_25[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_25[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_25[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_34[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_15;
Node_25 -> Node_36;
Node_32 -> Node_15;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_7;
Node_15 -> Node_16;
Node_21 -> Node_22;
Node_33 -> Node_37;
Node_34 -> Node_38;
Node_35 -> Node_32;
Node_36 -> Node_32;
}

