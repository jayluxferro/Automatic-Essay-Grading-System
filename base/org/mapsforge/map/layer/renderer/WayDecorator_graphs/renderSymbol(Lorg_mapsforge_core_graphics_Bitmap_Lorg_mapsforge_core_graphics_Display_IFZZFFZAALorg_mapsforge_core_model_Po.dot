digraph "CFG fororg.mapsforge.map.layer.renderer.WayDecorator.renderSymbol(Lorg\/mapsforge\/core\/graphics\/Bitmap;Lorg\/mapsforge\/core\/graphics\/Display;IFZZFFZ[[Lorg\/mapsforge\/core\/model\/Point;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r36\lr1 = r40\lint r3 = (int) r1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if ((r0 \> 0.0f ? 1 : (r0 == 0.0f ? 0 : \-1)) != 0) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|r0 = r42[0]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|org.mapsforge.core.model.Point[] r0 = org.mapsforge.map.layer.renderer.RendererUtils.parallelPath(r42[0], (double) r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|PHI: r0 \l  PHI: (r0v1 org.mapsforge.core.model.Point[]) = (r0v8 org.mapsforge.core.model.Point[]), (r0v9 org.mapsforge.core.model.Point[]) binds: [B:3:0x000e, B:2:0x000b] A[DONT_GENERATE, DONT_INLINE]\l|double r6 = r0[0].f266x\ldouble r8 = r0[0].f267y\lr2 = 1\lr4 = r3\lr5 = 0.0f\l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|LOOP_START\lPHI: r0 r2 r3 r4 r5 r6 r8 \l  PHI: (r0v2 org.mapsforge.core.model.Point[]) = (r0v1 org.mapsforge.core.model.Point[]), (r0v5 org.mapsforge.core.model.Point[]) binds: [B:4:0x0015, B:21:0x00a0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v3 int) = (r2v2 int), (r2v4 int) binds: [B:4:0x0015, B:21:0x00a0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v6 int) binds: [B:4:0x0015, B:21:0x00a0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 int) = (r4v1 int), (r4v9 int) binds: [B:4:0x0015, B:21:0x00a0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 float) = (r5v1 float), (r5v3 float) binds: [B:4:0x0015, B:21:0x00a0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v2 double) = (r6v1 double), (r6v4 double) binds: [B:4:0x0015, B:21:0x00a0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 double) = (r8v0 double), (r8v3 double) binds: [B:4:0x0015, B:21:0x00a0] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0020\-\>B:21:0x00a0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|if (r2 \>= r0.length) goto L_0x00aa\l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|double r10 = r0[r2].f266x\ldouble r12 = r0[r2].f267y\ldouble r14 = r10 \- r6\ldouble r16 = r12 \- r8\lr22 = r3\lfloat r3 = (float) java.lang.Math.sqrt((r14 * r14) + (r16 * r16))\lr4 = r4\l}"];
Node_8 [shape=record,label="{8\:\ 0x0040|LOOP_START\lPHI: r0 r3 r4 r5 r6 r8 r14 r16 \l  PHI: (r0v3 org.mapsforge.core.model.Point[]) = (r0v2 org.mapsforge.core.model.Point[]), (r0v7 org.mapsforge.core.model.Point[]) binds: [B:7:0x0023, B:16:0x007b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v4 float) = (r3v3 float), (r3v12 float) binds: [B:7:0x0023, B:16:0x007b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 int) = (r4v3 int), (r4v14 int) binds: [B:7:0x0023, B:16:0x007b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v3 float) = (r5v2 float), (r5v4 float) binds: [B:7:0x0023, B:16:0x007b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v3 double) = (r6v2 double), (r6v5 double) binds: [B:7:0x0023, B:16:0x007b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 double) = (r8v1 double), (r8v4 double) binds: [B:7:0x0023, B:16:0x007b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 double) = (r14v0 double), (r14v5 double) binds: [B:7:0x0023, B:16:0x007b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r16v1 double) = (r16v0 double), (r16v3 double) binds: [B:7:0x0023, B:16:0x007b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:8:0x0040\-\>B:16:0x007b\l|float r4 = (float) r4\lfloat r18 = r3 \- r4\l}"];
Node_9 [shape=record,label="{9\:\ 0x0045|if ((r18 \> r1 ? 1 : (r18 == r1 ? 0 : \-1)) \<= 0) goto L_0x008f\l}"];
Node_10 [shape=record,label="{10\:\ 0x0047|double r3 = (double) (r4 \/ r3)\ldouble r6 = r6 + (r14 * r3)\ldouble r8 = r8 + (r16 * r3)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|if (r41 == false) goto L_0x005b\l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|float r5 = (float) java.lang.Math.atan2(r12 \- r8, r10 \- r6)\l}"];
Node_13 [shape=record,label="{13\:\ 0x005b|PHI: r5 \l  PHI: (r5v4 float) = (r5v3 float), (r5v5 float) binds: [B:11:0x0050, B:12:0x0052] A[DONT_GENERATE, DONT_INLINE]\l|r14 = r43\lr14.add(new org.mapsforge.core.mapelements.SymbolContainer(new org.mapsforge.core.model.Point(r6, r8), r34, r35, r33, r5, r37))\l}"];
Node_14 [shape=record,label="{14\:\ 0x0078|if (r38 != false) goto L_0x007b\l}"];
Node_15 [shape=record,label="{15\:\ 0x007a|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ 0x007b|LOOP_END\lLOOP:1: B:8:0x0040\-\>B:16:0x007b\l|double r16 = r12 \- r8\lr30 = r0\lr31 = r10 \- r6\lr4 = (int) r39\lr3 = r18\lr0 = r30\lr14 = r31\l}"];
Node_17 [shape=record,label="{17\:\ 0x008f|r14 = r43\lr30 = r0\lr0 = r39\lint r3 = (int) (r4 \- r3)\l}"];
Node_18 [shape=record,label="{18\:\ 0x009a|if ((((float) r3) \> r1 ? 1 : (((float) r3) == r1 ? 0 : \-1)) \>= 0) goto L_0x009f\l}"];
Node_19 [shape=record,label="{19\:\ 0x009c|r4 = r22\l}"];
Node_20 [shape=record,label="{20\:\ 0x009f|r4 = r3\l}"];
Node_21 [shape=record,label="{21\:\ 0x00a0|LOOP_END\lPHI: r4 \l  PHI: (r4v9 int) = (r4v10 int), (r4v11 int) binds: [B:25:0x00a0, B:26:0x00a0] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0020\-\>B:21:0x00a0\l|int r2 = r2 + 1\lr6 = r10\lr8 = r12\lr3 = r22\lr0 = r30\l}"];
Node_22 [shape=record,label="{22\:\ 0x00aa|RETURN\l|return\l}"];
Node_23 [shape=record,label="{23\:\ 0x00aa|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x007a|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x00a0|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a0|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x008f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{static void org.mapsforge.map.layer.renderer.WayDecorator.renderSymbol((r33v0 org.mapsforge.core.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 org.mapsforge.core.graphics.Display A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r36v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r37v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r38v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r39v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r40v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r41v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r42v0 org.mapsforge.core.model.Point[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r43v0 java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/core\/graphics\/Bitmap;, Lorg\/mapsforge\/core\/graphics\/Display;, IFZZFFZ[[, Lorg\/mapsforge\/core\/model\/Point;, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/mapelements\/MapElementContainer;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_23;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_27;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_14 -> Node_24[style=dashed];
Node_16 -> Node_8;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_26;
Node_20 -> Node_25;
Node_21 -> Node_5;
Node_23 -> Node_22;
Node_24 -> Node_15;
Node_25 -> Node_21;
Node_26 -> Node_21;
Node_27 -> Node_17;
}

