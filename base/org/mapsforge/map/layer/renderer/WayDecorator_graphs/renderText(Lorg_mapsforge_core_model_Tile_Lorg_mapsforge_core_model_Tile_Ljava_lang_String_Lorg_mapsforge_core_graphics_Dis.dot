digraph "CFG fororg.mapsforge.map.layer.renderer.WayDecorator.renderText(Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;Ljava\/lang\/String;Lorg\/mapsforge\/core\/graphics\/Display;IFLorg\/mapsforge\/core\/graphics\/Paint;Lorg\/mapsforge\/core\/graphics\/Paint;ZFFZ[[Lorg\/mapsforge\/core\/model\/Point;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r10 = r23\lr0 = r26\lr11 = r27\lr12 = r28\lr13 = r31\lr14 = r34\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r12 != null) goto L_0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|int r2 = r11.getTextWidth(r10)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0012|PHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v13 int) binds: [B:4:0x0016, B:2:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r15 = r2 + ((int) r13)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|int r2 = r12.getTextWidth(r10)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|if (r12 != null) goto L_0x0025\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|int r2 = r11.getTextHeight(r10)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|PHI: r2 \l  PHI: (r2v4 int) = (r2v3 int), (r2v12 int) binds: [B:8:0x0025, B:6:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|r16 = (double) r2\l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|int r2 = r12.getTextHeight(r10)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|org.mapsforge.core.model.Rectangle r8 = org.mapsforge.core.model.Tile.getBoundaryAbsolute(r21, r22)\lr3 = 0\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|if ((r0 \> 0.0f ? 1 : (r0 == 0.0f ? 0 : \-1)) != 0) goto L_0x0038\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|r0 = r33[0]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|PHI: r0 \l  PHI: (r0v2 org.mapsforge.core.model.Point[]) = (r0v1 org.mapsforge.core.model.Point[]), (r0v10 org.mapsforge.core.model.Point[]) binds: [B:13:0x0038, B:11:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|r9 = r0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0038|org.mapsforge.core.model.Point[] r0 = org.mapsforge.map.layer.renderer.RendererUtils.parallelPath(r33[0], (double) r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|r7 = 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|LOOP_START\lPHI: r3 r7 r8 r9 \l  PHI: (r3v2 int) = (r3v1 int), (r3v6 int) binds: [B:14:0x0040, B:32:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 int) = (r7v0 int), (r7v2 int) binds: [B:14:0x0040, B:32:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 org.mapsforge.core.model.Rectangle) = (r8v0 org.mapsforge.core.model.Rectangle), (r8v2 org.mapsforge.core.model.Rectangle) binds: [B:14:0x0040, B:32:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 org.mapsforge.core.model.Point[]) = (r9v0 org.mapsforge.core.model.Point[]), (r9v2 org.mapsforge.core.model.Point[]) binds: [B:14:0x0040, B:32:0x00de] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x0042\-\>B:32:0x00de\l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|if (r7 \>= r9.length) goto L_0x00e8\l}"];
Node_17 [shape=record,label="{17\:\ 0x0045|org.mapsforge.core.model.LineSegment r0 = new org.mapsforge.core.model.LineSegment(r9[r7 + \-1], r9[r7])\ldouble r1 = r0.length()\lint r3 = (int) (((double) r3) \- r1)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0057|if (r3 \<= 0) goto L_0x005a\l}"];
Node_19 [shape=record,label="{19\:\ 0x005a|double r4 = (double) r15\l}"];
Node_20 [shape=record,label="{20\:\ 0x005d|if ((r1 \> r4 ? 1 : (r1 == r4 ? 0 : \-1)) \>= 0) goto L_0x0060\l}"];
Node_21 [shape=record,label="{21\:\ 0x0060|org.mapsforge.core.model.LineSegment r0 = r0.clipToRectangle(r8)\l}"];
Node_22 [shape=record,label="{22\:\ 0x0064|if (r0 != null) goto L_0x0067\l}"];
Node_23 [shape=record,label="{23\:\ 0x0067|double r1 = r0.length()\l}"];
Node_24 [shape=record,label="{24\:\ 0x006d|if ((r1 \> r4 ? 1 : (r1 == r4 ? 0 : \-1)) \>= 0) goto L_0x0079\l}"];
Node_25 [shape=record,label="{25\:\ 0x006f|r1 = r30\lr18 = r7\lr19 = r8\lr20 = r9\l}"];
Node_26 [shape=record,label="{26\:\ 0x0079|org.mapsforge.core.model.LineSegment r0 = r0.subSegment(((r1 \- r4) \/ 2.0d) + ((double) (r13 \/ 2.0f)), (double) (((float) r15) \- r13))\l}"];
Node_27 [shape=record,label="{27\:\ 0x0095|if ((r0.start.f266x \> r0.end.f266x ? 1 : (r0.start.f266x == r0.end.f266x ? 0 : \-1)) \> 0) goto L_0x00b8\l}"];
Node_28 [shape=record,label="{28\:\ 0x0097|r10 = r0\lr18 = r7\lr19 = r8\lr20 = r9\lorg.mapsforge.core.mapelements.WayTextContainer r0 = new org.mapsforge.core.mapelements.WayTextContainer(r0.start, r0.end, r24, r25, r23, r27, r28, r16)\lr14.add(r10)\l}"];
Node_29 [shape=record,label="{29\:\ 0x00b8|r18 = r7\lr19 = r8\lr20 = r9\lr14.add(new org.mapsforge.core.mapelements.WayTextContainer(r0.end, r0.start, r24, r25, r23, r27, r28, r16))\l}"];
Node_30 [shape=record,label="{30\:\ 0x00d7|PHI: r18 r19 r20 \l  PHI: (r18v2 int) = (r18v3 int), (r18v4 int) binds: [B:29:0x00b8, B:28:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r19v2 org.mapsforge.core.model.Rectangle) = (r19v3 org.mapsforge.core.model.Rectangle), (r19v4 org.mapsforge.core.model.Rectangle) binds: [B:29:0x00b8, B:28:0x0097] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v2 org.mapsforge.core.model.Point[]) = (r20v3 org.mapsforge.core.model.Point[]), (r20v4 org.mapsforge.core.model.Point[]) binds: [B:29:0x00b8, B:28:0x0097] A[DONT_GENERATE, DONT_INLINE]\l|if (r29 != false) goto L_0x00da\l}"];
Node_31 [shape=record,label="{31\:\ 0x00da|r3 = (int) r30\l}"];
Node_32 [shape=record,label="{32\:\ 0x00de|LOOP_END\lPHI: r3 r18 r19 r20 \l  PHI: (r3v6 int) = (r3v5 int), (r3v17 int) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v0 int) = (r18v1 int), (r18v2 int) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r19v0 org.mapsforge.core.model.Rectangle) = (r19v1 org.mapsforge.core.model.Rectangle), (r19v2 org.mapsforge.core.model.Rectangle) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r20v0 org.mapsforge.core.model.Point[]) = (r20v1 org.mapsforge.core.model.Point[]), (r20v2 org.mapsforge.core.model.Point[]) binds: [B:36:0x00de, B:35:0x00de] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x0042\-\>B:32:0x00de\l|int r7 = r18 + 1\lr8 = r19\lr9 = r20\lr10 = r23\l}"];
Node_33 [shape=record,label="{33\:\ 0x00e8|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x00e8|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x00de|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x00de|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{static void org.mapsforge.map.layer.renderer.WayDecorator.renderText((r21v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 org.mapsforge.core.graphics.Display A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33v0 org.mapsforge.core.model.Point[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/core\/model\/Tile;, Lorg\/mapsforge\/core\/model\/Tile;, Ljava\/lang\/String;, Lorg\/mapsforge\/core\/graphics\/Display;, IF, Lorg\/mapsforge\/core\/graphics\/Paint;, Lorg\/mapsforge\/core\/graphics\/Paint;, ZFFZ[[, Lorg\/mapsforge\/core\/model\/Point;, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/mapelements\/MapElementContainer;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_4 -> Node_3;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_8 -> Node_7;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_13 -> Node_12;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_33;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_25[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_25[style=dashed];
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_25[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_36;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_30;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_34[style=dashed];
Node_31 -> Node_35;
Node_32 -> Node_15;
Node_33 -> Node_37;
Node_34 -> Node_38;
Node_35 -> Node_32;
Node_36 -> Node_32;
}

