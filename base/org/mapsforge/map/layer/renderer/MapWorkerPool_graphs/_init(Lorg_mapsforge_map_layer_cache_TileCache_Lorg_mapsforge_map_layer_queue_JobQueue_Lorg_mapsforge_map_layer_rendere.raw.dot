digraph "CFG fororg.mapsforge.map.layer.renderer.MapWorkerPool.\<init\>(Lorg\/mapsforge\/map\/layer\/cache\/TileCache;Lorg\/mapsforge\/map\/layer\/queue\/JobQueue;Lorg\/mapsforge\/map\/layer\/renderer\/DatabaseRenderer;Lorg\/mapsforge\/map\/layer\/Layer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.util.concurrent.atomic.AtomicInteger) =  java.util.concurrent.atomic.AtomicInteger \l0x0005: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicInteger) java.util.concurrent.atomic.AtomicInteger.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.util.concurrent.atomic.AtomicInteger)\l  (r1 I:org.mapsforge.map.layer.renderer.MapWorkerPool)\l org.mapsforge.map.layer.renderer.MapWorkerPool.concurrentJobs java.util.concurrent.atomic.AtomicInteger \l0x000a: NEW_INSTANCE  (r0 I:java.util.concurrent.atomic.AtomicLong) =  java.util.concurrent.atomic.AtomicLong \l0x000c: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicLong) java.util.concurrent.atomic.AtomicLong.\<init\>():void type: DIRECT \l0x000f: IPUT  \l  (r0 I:java.util.concurrent.atomic.AtomicLong)\l  (r1 I:org.mapsforge.map.layer.renderer.MapWorkerPool)\l org.mapsforge.map.layer.renderer.MapWorkerPool.totalExecutions java.util.concurrent.atomic.AtomicLong \l0x0011: NEW_INSTANCE  (r0 I:java.util.concurrent.atomic.AtomicLong) =  java.util.concurrent.atomic.AtomicLong \l0x0013: INVOKE  (r0 I:java.util.concurrent.atomic.AtomicLong) java.util.concurrent.atomic.AtomicLong.\<init\>():void type: DIRECT \l0x0016: IPUT  \l  (r0 I:java.util.concurrent.atomic.AtomicLong)\l  (r1 I:org.mapsforge.map.layer.renderer.MapWorkerPool)\l org.mapsforge.map.layer.renderer.MapWorkerPool.totalTime java.util.concurrent.atomic.AtomicLong \l0x0018: IPUT  \l  (r2 I:org.mapsforge.map.layer.cache.TileCache)\l  (r1 I:org.mapsforge.map.layer.renderer.MapWorkerPool)\l org.mapsforge.map.layer.renderer.MapWorkerPool.tileCache org.mapsforge.map.layer.cache.TileCache \l0x001a: IPUT  \l  (r3 I:org.mapsforge.map.layer.queue.JobQueue\<org.mapsforge.map.layer.renderer.RendererJob\>)\l  (r1 I:org.mapsforge.map.layer.renderer.MapWorkerPool)\l org.mapsforge.map.layer.renderer.MapWorkerPool.jobQueue org.mapsforge.map.layer.queue.JobQueue \l0x001c: IPUT  \l  (r4 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l  (r1 I:org.mapsforge.map.layer.renderer.MapWorkerPool)\l org.mapsforge.map.layer.renderer.MapWorkerPool.databaseRenderer org.mapsforge.map.layer.renderer.DatabaseRenderer \l0x001e: IPUT  \l  (r5 I:org.mapsforge.map.layer.Layer)\l  (r1 I:org.mapsforge.map.layer.renderer.MapWorkerPool)\l org.mapsforge.map.layer.renderer.MapWorkerPool.layer org.mapsforge.map.layer.Layer \l0x0020: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0021: IPUT  \l  (r2 I:boolean)\l  (r1 I:org.mapsforge.map.layer.renderer.MapWorkerPool)\l org.mapsforge.map.layer.renderer.MapWorkerPool.inShutdown boolean \l0x0023: IPUT  \l  (r2 I:boolean)\l  (r1 I:org.mapsforge.map.layer.renderer.MapWorkerPool)\l org.mapsforge.map.layer.renderer.MapWorkerPool.isRunning boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0025|0x0025: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.renderer.MapWorkerPool.\<init\>((r1 'this' I:org.mapsforge.map.layer.renderer.MapWorkerPool A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.map.layer.cache.TileCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.mapsforge.map.layer.queue.JobQueue\<org.mapsforge.map.layer.renderer.RendererJob\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.map.layer.renderer.DatabaseRenderer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.mapsforge.map.layer.Layer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/map\/layer\/cache\/TileCache;, Lorg\/mapsforge\/map\/layer\/queue\/JobQueue\<, Lorg\/mapsforge\/map\/layer\/renderer\/RendererJob;, \>;, Lorg\/mapsforge\/map\/layer\/renderer\/DatabaseRenderer;, Lorg\/mapsforge\/map\/layer\/Layer;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

