digraph "CFG fororg.mapsforge.map.layer.TileLayer.setDisplayModel(Lorg\/mapsforge\/map\/model\/DisplayModel;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  \l  (r2 I:org.mapsforge.map.layer.Layer)\l  (r3 I:org.mapsforge.map.model.DisplayModel)\l org.mapsforge.map.layer.Layer.setDisplayModel(org.mapsforge.map.model.DisplayModel):void type: SUPER A[Catch:\{ all \-\> 0x001b \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0016 A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r3 I:boolean) = (r2 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.hasJobQueue boolean A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0016 A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: NEW_INSTANCE  (r3 I:org.mapsforge.map.layer.queue.JobQueue) =  org.mapsforge.map.layer.queue.JobQueue A[Catch:\{ all \-\> 0x001b \}]\l0x000c: IGET  (r0 I:org.mapsforge.map.model.IMapViewPosition) = (r2 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.mapViewPosition org.mapsforge.map.model.IMapViewPosition A[Catch:\{ all \-\> 0x001b \}]\l0x000e: IGET  (r1 I:org.mapsforge.map.model.DisplayModel) = (r2 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ all \-\> 0x001b \}]\l0x0010: INVOKE  \l  (r3 I:org.mapsforge.map.layer.queue.JobQueue)\l  (r0 I:org.mapsforge.map.model.IMapViewPosition)\l  (r1 I:org.mapsforge.map.model.DisplayModel)\l org.mapsforge.map.layer.queue.JobQueue.\<init\>(org.mapsforge.map.model.IMapViewPosition, org.mapsforge.map.model.DisplayModel):void type: DIRECT A[Catch:\{ all \-\> 0x001b \}]\l0x0013: IPUT  \l  (r3 I:org.mapsforge.map.layer.queue.JobQueue\<T\>)\l  (r2 I:org.mapsforge.map.layer.TileLayer)\l org.mapsforge.map.layer.TileLayer.jobQueue org.mapsforge.map.layer.queue.JobQueue A[Catch:\{ all \-\> 0x001b \}]\l0x0015: GOTO  \-\> 0x0019 A[Catch:\{ all \-\> 0x001b \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x001b \}]\l0x0017: IPUT  \l  (r3 I:org.mapsforge.map.layer.queue.JobQueue\<T\>)\l  (r2 I:org.mapsforge.map.layer.TileLayer)\l org.mapsforge.map.layer.TileLayer.jobQueue org.mapsforge.map.layer.queue.JobQueue A[Catch:\{ all \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|0x0019: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x001b: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x001c|0x001c: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.layer.TileLayer.setDisplayModel((r2 'this' I:org.mapsforge.map.layer.TileLayer A[IMMUTABLE_TYPE, THIS]), (r3 I:org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

