digraph "CFG fororg.mapsforge.map.layer.TileLayer.\<init\>(Lorg\/mapsforge\/map\/layer\/cache\/TileCache;Lorg\/mapsforge\/map\/model\/IMapViewPosition;Lorg\/mapsforge\/core\/graphics\/Matrix;ZZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.mapsforge.map.layer.Layer) org.mapsforge.map.layer.Layer.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IPUT  (r5 I:boolean), (r0 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.hasJobQueue boolean \l0x0009: IPUT  \l  (r1 I:org.mapsforge.map.layer.cache.TileCache)\l  (r0 I:org.mapsforge.map.layer.TileLayer)\l org.mapsforge.map.layer.TileLayer.tileCache org.mapsforge.map.layer.cache.TileCache \l0x000b: IPUT  \l  (r2 I:org.mapsforge.map.model.IMapViewPosition)\l  (r0 I:org.mapsforge.map.layer.TileLayer)\l org.mapsforge.map.layer.TileLayer.mapViewPosition org.mapsforge.map.model.IMapViewPosition \l0x000d: IPUT  \l  (r3 I:org.mapsforge.core.graphics.Matrix)\l  (r0 I:org.mapsforge.map.layer.TileLayer)\l org.mapsforge.map.layer.TileLayer.matrix org.mapsforge.core.graphics.Matrix \l0x000f: IPUT  (r4 I:boolean), (r0 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.isTransparent boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0014: CONST_STR  (r2 I:java.lang.String) =  \"mapViewPosition must not be null\" \l0x0016: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001c: CONST_STR  (r2 I:java.lang.String) =  \"tileCache must not be null\" \l0x001e: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.TileLayer.\<init\>((r0 'this' I:org.mapsforge.map.layer.TileLayer A[IMMUTABLE_TYPE, THIS]), (r1 I:org.mapsforge.map.layer.cache.TileCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:org.mapsforge.map.model.IMapViewPosition A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.mapsforge.core.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

