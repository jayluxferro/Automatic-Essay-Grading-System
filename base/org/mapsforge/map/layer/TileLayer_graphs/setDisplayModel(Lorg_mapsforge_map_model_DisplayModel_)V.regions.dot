digraph "CFG fororg.mapsforge.map.layer.TileLayer.setDisplayModel(Lorg\/mapsforge\/map\/model\/DisplayModel;)V" {
subgraph cluster_Region_115409517 {
label = "R(1:(1:(2:2|(1:7)(1:6))))";
node [shape=record,color=blue];
subgraph cluster_Region_796211863 {
label = "R(1:(2:2|(1:7)(1:6)))";
node [shape=record,color=blue];
subgraph cluster_Region_1307922479 {
label = "R(2:2|(1:7)(1:6))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|super.setDisplayModel(r3)\l}"];
subgraph cluster_IfRegion_219123569 {
label = "IF [B:3:0x0004, B:5:0x0008] THEN: R(1:7) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0004|if (r3 == null) goto L_0x0016\l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|ADDED_TO_REGION\l|if (r2.hasJobQueue == false) goto L_0x0016\l}"];
subgraph cluster_Region_57874135 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0016|r2.jobQueue = null\l}"];
}
subgraph cluster_Region_89400748 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000a|r2.jobQueue = new org.mapsforge.map.layer.queue.JobQueue\<\>(r2.mapViewPosition, r2.displayModel)\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0006}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0019|DONT_GENERATE\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001a}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001b|REMOVE\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001c|REMOVE\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001d|REMOVE\l|throw r3\l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.layer.TileLayer.setDisplayModel((r2v0 'this' org.mapsforge.map.layer.TileLayer A[IMMUTABLE_TYPE, THIS]), (r3v0 org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_6 -> Node_8;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

