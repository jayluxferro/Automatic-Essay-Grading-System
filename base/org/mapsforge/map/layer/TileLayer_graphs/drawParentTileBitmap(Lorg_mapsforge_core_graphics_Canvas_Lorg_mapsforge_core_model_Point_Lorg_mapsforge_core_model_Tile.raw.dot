digraph "CFG fororg.mapsforge.map.layer.TileLayer.drawParentTileBitmap(Lorg\/mapsforge\/core\/graphics\/Canvas;Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/model\/Tile;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0001: INVOKE  (r0 I:org.mapsforge.core.model.Tile) = \l  (r11 I:org.mapsforge.map.layer.TileLayer)\l  (r14 I:org.mapsforge.core.model.Tile)\l  (r0 I:int)\l org.mapsforge.map.layer.TileLayer.getCachedParentTile(org.mapsforge.core.model.Tile, int):org.mapsforge.core.model.Tile type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0078 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IGET  (r1 I:org.mapsforge.map.layer.cache.TileCache) = (r11 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.tileCache org.mapsforge.map.layer.cache.TileCache \l0x0009: INVOKE  (r2 I:org.mapsforge.map.layer.queue.Job) = \l  (r11 I:org.mapsforge.map.layer.TileLayer)\l  (r0 I:org.mapsforge.core.model.Tile)\l org.mapsforge.map.layer.TileLayer.createJob(org.mapsforge.core.model.Tile):org.mapsforge.map.layer.queue.Job type: VIRTUAL \l0x000d: INVOKE  (r1 I:org.mapsforge.core.graphics.TileBitmap) = \l  (r1 I:org.mapsforge.map.layer.cache.TileCache)\l  (r2 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.cache.TileCache.getImmediately(org.mapsforge.map.layer.queue.Job):org.mapsforge.core.graphics.TileBitmap type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0078 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IGET  (r2 I:org.mapsforge.map.model.DisplayModel) = (r11 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.displayModel org.mapsforge.map.model.DisplayModel \l0x0015: INVOKE  (r2 I:int) = (r2 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL \l0x0019: INVOKE  (r3 I:int) = \l  (r14 I:org.mapsforge.core.model.Tile)\l  (r0 I:org.mapsforge.core.model.Tile)\l org.mapsforge.core.model.Tile.getShiftX(org.mapsforge.core.model.Tile):int type: VIRTUAL \l0x001d: ARITH  (r3 I:int) = (r3 I:int) * (r2 I:int) \l0x001f: CAST  (r3 I:long) = (long) (r3 I:int) \l0x0020: INVOKE  (r5 I:int) = \l  (r14 I:org.mapsforge.core.model.Tile)\l  (r0 I:org.mapsforge.core.model.Tile)\l org.mapsforge.core.model.Tile.getShiftY(org.mapsforge.core.model.Tile):int type: VIRTUAL \l0x0024: ARITH  (r5 I:int) = (r5 I:int) * (r2 I:int) \l0x0026: CAST  (r5 I:long) = (long) (r5 I:int) \l0x0027: IGET  (r14 I:byte) = (r14 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0029: IGET  (r0 I:byte) = (r0 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x002b: ARITH  (r14 I:int) = (r14 I:int) \- (r0 I:int) \l0x002c: CAST  (r14 I:byte) = (byte) (r14 I:int) \l0x002d: CONST  (r7 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x002f: CAST  (r9 I:double) = (double) (r14 I:int) \l0x0030: INVOKE  (r7 I:double) = (r7 I:double), (r9 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0034: CAST  (r14 I:float) = (float) (r7 I:double) \l0x0035: IGET  (r7 I:double) = (r13 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0037: INVOKE  (r7 I:long) = (r7 I:double) java.lang.Math.round(double):long type: STATIC \l0x003b: CAST  (r0 I:int) = (int) (r7 I:long) \l0x003c: IGET  (r7 I:double) = (r13 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x003e: INVOKE  (r7 I:long) = (r7 I:double) java.lang.Math.round(double):long type: STATIC \l0x0042: CAST  (r13 I:int) = (int) (r7 I:long) \l0x0043: IGET  (r2 I:org.mapsforge.core.graphics.Matrix) = (r11 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.matrix org.mapsforge.core.graphics.Matrix \l0x0045: INVOKE  (r2 I:org.mapsforge.core.graphics.Matrix) org.mapsforge.core.graphics.Matrix.reset():void type: INTERFACE \l0x0048: IGET  (r2 I:org.mapsforge.core.graphics.Matrix) = (r11 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.matrix org.mapsforge.core.graphics.Matrix \l0x004a: CAST  (r7 I:long) = (long) (r0 I:int) \l0x004b: ARITH  (r7 I:long) = (r7 I:long) \- (r3 I:long) \l0x004c: CAST  (r3 I:float) = (float) (r7 I:long) \l0x004d: CAST  (r7 I:long) = (long) (r13 I:int) \l0x004e: ARITH  (r7 I:long) = (r7 I:long) \- (r5 I:long) \l0x004f: CAST  (r4 I:float) = (float) (r7 I:long) \l0x0050: INVOKE  \l  (r2 I:org.mapsforge.core.graphics.Matrix)\l  (r3 I:float)\l  (r4 I:float)\l org.mapsforge.core.graphics.Matrix.translate(float, float):void type: INTERFACE \l0x0053: IGET  (r2 I:org.mapsforge.core.graphics.Matrix) = (r11 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.matrix org.mapsforge.core.graphics.Matrix \l0x0055: INVOKE  \l  (r2 I:org.mapsforge.core.graphics.Matrix)\l  (r14 I:float)\l  (r14 I:float)\l org.mapsforge.core.graphics.Matrix.scale(float, float):void type: INTERFACE \l0x0058: IGET  (r14 I:org.mapsforge.map.model.DisplayModel) = (r11 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.displayModel org.mapsforge.map.model.DisplayModel \l0x005a: INVOKE  (r14 I:int) = (r14 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL \l0x005e: IGET  (r2 I:org.mapsforge.map.model.DisplayModel) = (r11 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.displayModel org.mapsforge.map.model.DisplayModel \l0x0060: INVOKE  (r2 I:int) = (r2 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL \l0x0064: INVOKE  \l  (r12 I:org.mapsforge.core.graphics.Canvas)\l  (r0 I:int)\l  (r13 I:int)\l  (r14 I:int)\l  (r2 I:int)\l org.mapsforge.core.graphics.Canvas.setClip(int, int, int, int):void type: INTERFACE \l0x0067: IGET  (r13 I:org.mapsforge.core.graphics.Matrix) = (r11 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.matrix org.mapsforge.core.graphics.Matrix \l0x0069: IGET  (r14 I:org.mapsforge.map.model.DisplayModel) = (r11 I:org.mapsforge.map.layer.TileLayer) org.mapsforge.map.layer.TileLayer.displayModel org.mapsforge.map.model.DisplayModel \l0x006b: INVOKE  (r14 I:org.mapsforge.core.graphics.Filter) = (r14 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getFilter():org.mapsforge.core.graphics.Filter type: VIRTUAL \l0x006f: INVOKE  \l  (r12 I:org.mapsforge.core.graphics.Canvas)\l  (r1 I:org.mapsforge.core.graphics.Bitmap)\l  (r13 I:org.mapsforge.core.graphics.Matrix)\l  (r14 I:org.mapsforge.core.graphics.Filter)\l org.mapsforge.core.graphics.Canvas.drawBitmap(org.mapsforge.core.graphics.Bitmap, org.mapsforge.core.graphics.Matrix, org.mapsforge.core.graphics.Filter):void type: INTERFACE \l0x0072: INVOKE  (r12 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.resetClip():void type: INTERFACE \l0x0075: INVOKE  (r1 I:org.mapsforge.core.graphics.Bitmap) org.mapsforge.core.graphics.Bitmap.decrementRefCount():void type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0078|0x0078: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.layer.TileLayer.drawParentTileBitmap((r11 'this' I:org.mapsforge.map.layer.TileLayer A[IMMUTABLE_TYPE, THIS]), (r12 I:org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

