digraph "CFG fororg.mapsforge.map.layer.Layer.unassign()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:org.mapsforge.map.layer.Redrawer) = (r2 I:org.mapsforge.map.layer.Layer) org.mapsforge.map.layer.Layer.assignedRedrawer org.mapsforge.map.layer.Redrawer A[Catch:\{ all \-\> 0x0015 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000d A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0015 \}]\l0x0006: IPUT  \l  (r0 I:org.mapsforge.map.layer.Redrawer)\l  (r2 I:org.mapsforge.map.layer.Layer)\l org.mapsforge.map.layer.Layer.assignedRedrawer org.mapsforge.map.layer.Redrawer A[Catch:\{ all \-\> 0x0015 \}]\l0x0008: INVOKE  (r2 I:org.mapsforge.map.layer.Layer) org.mapsforge.map.layer.Layer.onRemove():void type: VIRTUAL A[Catch:\{ all \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|SYNTHETIC\lSplitter:B:7:0x000d\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x000d\l|0x000d: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x0015 \}, TRY_ENTER]\l0x000f: CONST_STR  (r1 I:java.lang.String) =  \"layer is not assigned\" A[Catch:\{ all \-\> 0x0015 \}]\l0x0011: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0015 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|0x0014: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0015 \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0015: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0016|0x0016: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0017|0x0017: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{final synchronized void org.mapsforge.map.layer.Layer.unassign((r2 'this' I:org.mapsforge.map.layer.Layer A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

