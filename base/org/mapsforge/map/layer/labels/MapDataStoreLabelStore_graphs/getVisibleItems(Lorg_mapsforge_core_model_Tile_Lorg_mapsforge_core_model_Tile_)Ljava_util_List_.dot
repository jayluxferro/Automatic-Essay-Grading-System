digraph "CFG fororg.mapsforge.map.layer.labels.MapDataStoreLabelStore.getVisibleItems(Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r9)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x0094 \}\lSplitter:B:1:0x0001\l|r1 = r10     \/\/ Catch:\{ Exception \-\> 0x0094 \}\lorg.mapsforge.map.rendertheme.RenderContext r0 = new org.mapsforge.map.rendertheme.RenderContext(new org.mapsforge.map.layer.renderer.RendererJob(r1, r9.standardRenderer.mapDataStore, r9.renderThemeFuture, r9.displayModel, r9.textScale, true, true), new org.mapsforge.map.layer.renderer.CanvasRasterer(r9.standardRenderer.graphicFactory))     \/\/ Catch:\{ Exception \-\> 0x0094 \}\lorg.mapsforge.map.datastore.MapReadResult r1 = r9.standardRenderer.mapDataStore.readLabels(r10, r11)     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|Catch:\{ Exception \-\> 0x0094 \}\l|if (r1 != null) goto L_0x0033     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|Catch:\{ Exception \-\> 0x0094 \}\l|java.util.ArrayList r10 = new java.util.ArrayList()     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0031|monitor\-exit(r9)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0032|RETURN\l|return r10\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|SYNTHETIC\lSplitter:B:7:0x0033\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ Exception \-\> 0x0094 \}\lSplitter:B:7:0x0033\l|java.util.Iterator r2 = r1.pointOfInterests.iterator()     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|LOOP_START\lCatch:\{ Exception \-\> 0x0094 \}\lLOOP:0: B:9:0x0039\-\>B:11:0x003f\l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|Catch:\{ Exception \-\> 0x0094 \}\l|if (r2.hasNext() == false) goto L_0x005a     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|LOOP_END\lCatch:\{ Exception \-\> 0x0094 \}\lLOOP:0: B:9:0x0039\-\>B:11:0x003f\l|org.mapsforge.map.datastore.PointOfInterest r3 = r2.next()     \/\/ Catch:\{ Exception \-\> 0x0094 \}\lr0.setDrawingLayers(r3.layer)     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l((org.mapsforge.map.rendertheme.rule.RenderTheme) r0.rendererJob.renderThemeFuture.get()).matchNode(r9.standardRenderer, r0, r3)     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x005a|Catch:\{ Exception \-\> 0x0094 \}\l|java.util.Iterator r1 = r1.ways.iterator()     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0060|LOOP_START\lCatch:\{ Exception \-\> 0x0094 \}\lLOOP:1: B:13:0x0060\-\>B:30:0x0060\l}"];
Node_14 [shape=record,label="{14\:\ 0x0064|Catch:\{ Exception \-\> 0x0094 \}\l|if (r1.hasNext() == false) goto L_0x008e     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0066|Catch:\{ Exception \-\> 0x0094 \}\l|org.mapsforge.map.layer.renderer.PolylineContainer r3 = new org.mapsforge.map.layer.renderer.PolylineContainer(r1.next(), r10, r11)     \/\/ Catch:\{ Exception \-\> 0x0094 \}\lr0.setDrawingLayers(r3.getLayer())     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x007c|Catch:\{ Exception \-\> 0x0094 \}\l|if (r3.isClosedWay() == false) goto L_0x0086     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x007e|Catch:\{ Exception \-\> 0x0094 \}\l|r0.renderTheme.matchClosedWay(r9.standardRenderer, r0, r3)     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0086|Catch:\{ Exception \-\> 0x0094 \}\l|r0.renderTheme.matchLinearWay(r9.standardRenderer, r0, r3)     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x008e|Catch:\{ Exception \-\> 0x0094 \}\l|java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\> r10 = r0.labels     \/\/ Catch:\{ Exception \-\> 0x0094 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0090|monitor\-exit(r9)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0091|RETURN\l|return r10\l}"];
Node_22 [shape=record,label="{22\:\ 0x0092|REMOVE\l|java.lang.Throwable r10 = move\-exception\l}"];
Node_23 [shape=record,label="{23\:\ 0x0094|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ ?|java.util.ArrayList r10 = new java.util.ArrayList()     \/\/ Catch:\{  \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x0099|monitor\-exit(r9)\l}"];
Node_26 [shape=record,label="{26\:\ 0x009a|RETURN\l|return r10\l}"];
Node_27 [shape=record,label="{27\:\ 0x009b|REMOVE\l}"];
Node_28 [shape=record,label="{28\:\ 0x009c|REMOVE\l|throw r10\l}"];
Node_29 [shape=record,label="{29\:\ 0x005a|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x0060|LOOP_END\lSYNTHETIC\lLOOP:1: B:13:0x0060\-\>B:30:0x0060\l}"];
Node_31 [shape=record,label="{31\:\ 0x008e|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0060|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0060|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public synchronized java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\> org.mapsforge.map.layer.labels.MapDataStoreLabelStore.getVisibleItems((r9v0 'this' org.mapsforge.map.layer.labels.MapDataStoreLabelStore A[IMMUTABLE_TYPE, THIS]), (r10v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/core\/model\/Tile;, Lorg\/mapsforge\/core\/model\/Tile;, ), Ljava\/util\/List\<, Lorg\/mapsforge\/core\/mapelements\/MapElementContainer;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_23;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_23;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_29;
Node_11 -> Node_9;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_31;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_32;
Node_18 -> Node_33;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_23 -> Node_22;
Node_24 -> Node_25;
Node_24 -> Node_22;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_29 -> Node_12;
Node_30 -> Node_13;
Node_31 -> Node_19;
Node_32 -> Node_30;
Node_33 -> Node_30;
}

