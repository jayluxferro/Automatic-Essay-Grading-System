digraph "CFG fororg.mapsforge.map.layer.labels.TileBasedLabelStore.requiresTile(Lorg\/mapsforge\/core\/model\/Tile;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.Set\<org.mapsforge.core.model.Tile\>) = (r1 I:org.mapsforge.map.layer.labels.TileBasedLabelStore) org.mapsforge.map.layer.labels.TileBasedLabelStore.lastVisibleTileSet java.util.Set A[Catch:\{ all \-\> 0x0014 \}, TRY_ENTER]\l0x0003: INVOKE  (r0 I:boolean) = (r0 I:java.util.Set), (r2 I:java.lang.Object) java.util.Set.contains(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0014 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 A[Catch:\{ all \-\> 0x0014 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r2 I:boolean) = \l  (r1 I:org.mapsforge.map.layer.labels.TileBasedLabelStore)\l  (r2 I:java.lang.Object)\l org.mapsforge.map.layer.labels.TileBasedLabelStore.containsKey(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0014 \}]\l0x000c: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: RETURN  (r2 I:boolean) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0014: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0016|0x0016: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized boolean org.mapsforge.map.layer.labels.TileBasedLabelStore.requiresTile((r1 'this' I:org.mapsforge.map.layer.labels.TileBasedLabelStore A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

