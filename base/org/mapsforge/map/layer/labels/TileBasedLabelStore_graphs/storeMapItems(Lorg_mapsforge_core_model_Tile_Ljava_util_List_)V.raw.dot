digraph "CFG fororg.mapsforge.map.layer.labels.TileBasedLabelStore.storeMapItems(Lorg\/mapsforge\/core\/model\/Tile;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r2 I:java.util.List) = (r2 I:java.util.List) org.mapsforge.map.util.LayerUtil.collisionFreeOrdered(java.util.List):java.util.List type: STATIC A[Catch:\{ all \-\> 0x0010 \}, TRY_ENTER]\l0x0005: INVOKE  \l  (r0 I:org.mapsforge.map.layer.labels.TileBasedLabelStore)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l org.mapsforge.map.layer.labels.TileBasedLabelStore.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l0x0008: IGET  (r1 I:int) = (r0 I:org.mapsforge.map.layer.labels.TileBasedLabelStore) org.mapsforge.map.layer.labels.TileBasedLabelStore.version int A[Catch:\{ all \-\> 0x0010 \}]\l0x000a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) A[Catch:\{ all \-\> 0x0010 \}]\l0x000c: IPUT  \l  (r1 I:int)\l  (r0 I:org.mapsforge.map.layer.labels.TileBasedLabelStore)\l org.mapsforge.map.layer.labels.TileBasedLabelStore.version int A[Catch:\{ all \-\> 0x0010 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0010: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.layer.labels.TileBasedLabelStore.storeMapItems((r0 'this' I:org.mapsforge.map.layer.labels.TileBasedLabelStore A[IMMUTABLE_TYPE, THIS]), (r1 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/mapsforge\/core\/model\/Tile;, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/mapelements\/MapElementContainer;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

