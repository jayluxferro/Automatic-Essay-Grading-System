digraph "CFG fororg.mapsforge.map.layer.labels.LabelLayer.draw(Lorg\/mapsforge\/core\/model\/BoundingBox;BLorg\/mapsforge\/core\/graphics\/Canvas;Lorg\/mapsforge\/core\/model\/Point;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.model.DisplayModel) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.displayModel org.mapsforge.map.model.DisplayModel \l0x0002: INVOKE  (r0 I:int) = (r0 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL \l0x0006: INVOKE  (r0 I:org.mapsforge.core.model.Tile) = \l  (r3 I:org.mapsforge.core.model.BoundingBox)\l  (r4 I:byte)\l  (r0 I:int)\l org.mapsforge.map.util.LayerUtil.getUpperLeft(org.mapsforge.core.model.BoundingBox, byte, int):org.mapsforge.core.model.Tile type: STATIC \l0x000a: IGET  (r1 I:org.mapsforge.map.model.DisplayModel) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.displayModel org.mapsforge.map.model.DisplayModel \l0x000c: INVOKE  (r1 I:int) = (r1 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL \l0x0010: INVOKE  (r3 I:org.mapsforge.core.model.Tile) = \l  (r3 I:org.mapsforge.core.model.BoundingBox)\l  (r4 I:byte)\l  (r1 I:int)\l org.mapsforge.map.util.LayerUtil.getLowerRight(org.mapsforge.core.model.BoundingBox, byte, int):org.mapsforge.core.model.Tile type: STATIC \l0x0014: IGET  (r4 I:org.mapsforge.core.model.Tile) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.upperLeft org.mapsforge.core.model.Tile \l0x0016: INVOKE  (r4 I:boolean) = \l  (r0 I:org.mapsforge.core.model.Tile)\l  (r4 I:java.lang.Object)\l org.mapsforge.core.model.Tile.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x001c|0x001c: IGET  (r4 I:org.mapsforge.core.model.Tile) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.lowerRight org.mapsforge.core.model.Tile \l0x001e: INVOKE  (r4 I:boolean) = \l  (r3 I:org.mapsforge.core.model.Tile)\l  (r4 I:java.lang.Object)\l org.mapsforge.core.model.Tile.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: IGET  (r4 I:int) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.lastLabelStoreVersion int \l0x0026: IGET  (r1 I:org.mapsforge.map.layer.labels.LabelStore) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.labelStore org.mapsforge.map.layer.labels.LabelStore \l0x0028: INVOKE  (r1 I:int) = (r1 I:org.mapsforge.map.layer.labels.LabelStore) org.mapsforge.map.layer.labels.LabelStore.getVersion():int type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x004f \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: IPUT  \l  (r0 I:org.mapsforge.core.model.Tile)\l  (r2 I:org.mapsforge.map.layer.labels.LabelLayer)\l org.mapsforge.map.layer.labels.LabelLayer.upperLeft org.mapsforge.core.model.Tile \l0x0030: IPUT  \l  (r3 I:org.mapsforge.core.model.Tile)\l  (r2 I:org.mapsforge.map.layer.labels.LabelLayer)\l org.mapsforge.map.layer.labels.LabelLayer.lowerRight org.mapsforge.core.model.Tile \l0x0032: IGET  (r3 I:org.mapsforge.map.layer.labels.LabelStore) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.labelStore org.mapsforge.map.layer.labels.LabelStore \l0x0034: INVOKE  (r3 I:int) = (r3 I:org.mapsforge.map.layer.labels.LabelStore) org.mapsforge.map.layer.labels.LabelStore.getVersion():int type: INTERFACE \l0x0038: IPUT  \l  (r3 I:int)\l  (r2 I:org.mapsforge.map.layer.labels.LabelLayer)\l org.mapsforge.map.layer.labels.LabelLayer.lastLabelStoreVersion int \l0x003a: IGET  (r3 I:org.mapsforge.map.layer.labels.LabelStore) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.labelStore org.mapsforge.map.layer.labels.LabelStore \l0x003c: IGET  (r4 I:org.mapsforge.core.model.Tile) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.upperLeft org.mapsforge.core.model.Tile \l0x003e: IGET  (r0 I:org.mapsforge.core.model.Tile) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.lowerRight org.mapsforge.core.model.Tile \l0x0040: INVOKE  (r3 I:java.util.List) = \l  (r3 I:org.mapsforge.map.layer.labels.LabelStore)\l  (r4 I:org.mapsforge.core.model.Tile)\l  (r0 I:org.mapsforge.core.model.Tile)\l org.mapsforge.map.layer.labels.LabelStore.getVisibleItems(org.mapsforge.core.model.Tile, org.mapsforge.core.model.Tile):java.util.List type: INTERFACE \l0x0044: INVOKE  (r3 I:java.util.List) = (r3 I:java.util.List) org.mapsforge.map.util.LayerUtil.collisionFreeOrdered(java.util.List):java.util.List type: STATIC \l0x0048: IPUT  \l  (r3 I:java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\>)\l  (r2 I:org.mapsforge.map.layer.labels.LabelLayer)\l org.mapsforge.map.layer.labels.LabelLayer.elementsToDraw java.util.List \l0x004a: IGET  (r3 I:java.util.List\<org.mapsforge.core.mapelements.MapElementContainer\>) = (r2 I:org.mapsforge.map.layer.labels.LabelLayer) org.mapsforge.map.layer.labels.LabelLayer.elementsToDraw java.util.List \l0x004c: INVOKE  (r3 I:java.util.List) java.util.Collections.sort(java.util.List):void type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x004f|0x004f: INVOKE  \l  (r2 I:org.mapsforge.map.layer.labels.LabelLayer)\l  (r5 I:org.mapsforge.core.graphics.Canvas)\l  (r6 I:org.mapsforge.core.model.Point)\l org.mapsforge.map.layer.labels.LabelLayer.draw(org.mapsforge.core.graphics.Canvas, org.mapsforge.core.model.Point):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0052|0x0052: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.labels.LabelLayer.draw((r2 'this' I:org.mapsforge.map.layer.labels.LabelLayer A[IMMUTABLE_TYPE, THIS]), (r3 I:org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

