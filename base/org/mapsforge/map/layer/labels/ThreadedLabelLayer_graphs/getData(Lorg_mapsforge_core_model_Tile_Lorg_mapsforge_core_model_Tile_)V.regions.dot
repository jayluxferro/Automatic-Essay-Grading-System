digraph "CFG fororg.mapsforge.map.layer.labels.ThreadedLabelLayer.getData(Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/Tile;)V" {
subgraph cluster_Region_838956775 {
label = "R(1:(1:(3:5|(1:7)|8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1604827360 {
label = "R(1:(3:5|(1:7)|8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_415049611 {
label = "IF [B:1:0x0006, B:3:0x000e] THEN: R(3:5|(1:7)|8) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r3.equals(r2.requestedUpperLeft) == false) goto L_0x0011\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|ADDED_TO_REGION\l|if (r4.equals(r2.requestedLowerRight) == false) goto L_0x0011\l}"];
subgraph cluster_Region_682811482 {
label = "R(3:5|(1:7)|8)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|r2.requestedUpperLeft = r3\lr2.requestedLowerRight = r4\l}"];
subgraph cluster_IfRegion_297606629 {
label = "IF [B:6:0x0017] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|if (r2.future != null) goto L_0x0019\l}"];
subgraph cluster_Region_1941952394 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|r2.future.cancel(false)\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x001f|r2.future = r2.executorService.submit(new org.mapsforge.map.layer.labels.ThreadedLabelLayer.C14411())\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0008}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0010}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002c}"];
MethodNode[shape=record,label="{protected void org.mapsforge.map.layer.labels.ThreadedLabelLayer.getData((r2v0 'this' org.mapsforge.map.layer.labels.ThreadedLabelLayer A[IMMUTABLE_TYPE, THIS]), (r3v0 org.mapsforge.core.model.Tile A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 org.mapsforge.core.model.Tile A[DONT_INLINE, IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_0 -> Node_1;
Node_2 -> Node_3;
}

