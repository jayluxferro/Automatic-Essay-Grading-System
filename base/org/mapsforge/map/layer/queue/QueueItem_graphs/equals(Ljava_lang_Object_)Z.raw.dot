digraph "CFG fororg.mapsforge.map.layer.queue.QueueItem.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r2 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) org.mapsforge.map.layer.queue.QueueItem \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: RETURN  (r2 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|0x000a: CHECK_CAST  (r2 I:org.mapsforge.map.layer.queue.QueueItem) = (org.mapsforge.map.layer.queue.QueueItem) (r2 I:?[OBJECT, ARRAY]) \l0x000c: IGET  (r0 I:T) = (r1 I:org.mapsforge.map.layer.queue.QueueItem) org.mapsforge.map.layer.queue.QueueItem.object org.mapsforge.map.layer.queue.Job \l0x000e: IGET  (r2 I:T) = (r2 I:org.mapsforge.map.layer.queue.QueueItem) org.mapsforge.map.layer.queue.QueueItem.object org.mapsforge.map.layer.queue.Job \l0x0010: INVOKE  (r2 I:boolean) = \l  (r0 I:org.mapsforge.map.layer.queue.Job)\l  (r2 I:java.lang.Object)\l org.mapsforge.map.layer.queue.Job.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.layer.queue.QueueItem.equals((r1 'this' I:org.mapsforge.map.layer.queue.QueueItem A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

