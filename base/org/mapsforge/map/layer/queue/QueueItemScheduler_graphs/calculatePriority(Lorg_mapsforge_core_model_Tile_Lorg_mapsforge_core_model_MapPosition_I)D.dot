digraph "CFG fororg.mapsforge.map.layer.queue.QueueItemScheduler.calculatePriority(Lorg\/mapsforge\/core\/model\/Tile;Lorg\/mapsforge\/core\/model\/MapPosition;I)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double r0 = org.mapsforge.core.util.MercatorProjection.tileYToLatitude((long) r11.tileY, r11.zoomLevel)\ldouble r2 = org.mapsforge.core.util.MercatorProjection.tileXToLongitude((long) r11.tileX, r11.zoomLevel)\llong r5 = org.mapsforge.core.util.MercatorProjection.getMapSize(r12.zoomLevel, r13)\ldouble r7 = (double) (r13 \/ 2)\ldouble r2 = org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r2, r5) + r7\ldouble r0 = org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r0, r5) + r7\lorg.mapsforge.core.model.LatLong r4 = r12.latLong\ldouble r7 = org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r4.longitude, r5)\ldouble r0 = java.lang.Math.hypot(r2 \- r7, r0 \- org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r4.latitude, r5))\lint r11 = java.lang.Math.abs(r11.zoomLevel \- r12.zoomLevel)\l}"];
Node_1 [shape=record,label="{1\:\ 0x004b|RETURN\l|return r0 + ((((double) r13) * PENALTY_PER_ZOOM_LEVEL) * ((double) r11))\l}"];
MethodNode[shape=record,label="{private static double org.mapsforge.map.layer.queue.QueueItemScheduler.calculatePriority((r11v0 org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 org.mapsforge.core.model.MapPosition A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

