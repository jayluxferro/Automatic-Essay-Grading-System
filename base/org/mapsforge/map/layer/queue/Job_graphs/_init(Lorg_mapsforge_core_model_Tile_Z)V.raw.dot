digraph "CFG fororg.mapsforge.map.layer.queue.Job.\<init\>(Lorg\/mapsforge\/core\/model\/Tile;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IPUT  \l  (r5 I:org.mapsforge.core.model.Tile)\l  (r4 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.queue.Job.tile org.mapsforge.core.model.Tile \l0x0007: IPUT  (r6 I:boolean), (r4 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.hasAlpha boolean \l0x0009: IGET  (r5 I:org.mapsforge.core.model.Tile) = (r4 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.tile org.mapsforge.core.model.Tile \l0x000b: IGET  (r5 I:byte) = (r5 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x000d: IGET  (r6 I:org.mapsforge.core.model.Tile) = (r4 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.tile org.mapsforge.core.model.Tile \l0x000f: IGET  (r6 I:int) = (r6 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileX int \l0x0011: CAST  (r0 I:long) = (long) (r6 I:int) \l0x0012: IGET  (r6 I:org.mapsforge.core.model.Tile) = (r4 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.tile org.mapsforge.core.model.Tile \l0x0014: IGET  (r6 I:int) = (r6 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileY int \l0x0016: CAST  (r2 I:long) = (long) (r6 I:int) \l0x0017: INVOKE  (r5 I:java.lang.String) = (r5 I:byte), (r0 I:long), (r2 I:long) org.mapsforge.map.layer.queue.Job.composeKey(byte, long, long):java.lang.String type: STATIC \l0x001b: IPUT  \l  (r5 I:java.lang.String)\l  (r4 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.queue.Job.key java.lang.String \l}"];
Node_3 [shape=record,label="{3\:\ 0x001d|0x001d: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: NEW_INSTANCE  (r5 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0020: CONST_STR  (r6 I:java.lang.String) =  \"tile must not be null\" \l0x0022: INVOKE  \l  (r5 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.queue.Job.\<init\>((r4 'this' I:org.mapsforge.map.layer.queue.Job A[IMMUTABLE_TYPE, THIS]), (r5 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

