digraph "CFG fororg.mapsforge.map.layer.queue.JobQueue.get(I)Lorg\/mapsforge\/map\/layer\/queue\/Job;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|LOOP_START\lSYNTHETIC\lLOOP:0: B:1:0x0001\-\>B:16:0x003a\l}"];
Node_2 [shape=record,label="{2\:\ ?}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r4.queueItems.isEmpty() != false) goto L_0x0033\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r4.assignedJobs.size() \< r5) goto L_0x0013\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012}"];
Node_7 [shape=record,label="{7\:\ 0x0013}"];
Node_8 [shape=record,label="{8\:\ 0x0015|if (r4.scheduleNeeded == false) goto L_0x0022\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|r4.scheduleNeeded = false\lschedule(r4.displayModel.getTileSize())\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|T r5 = r4.queueItems.remove(0).object\lr4.assignedJobs.add(r5)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|monitor\-exit(r4)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0032|RETURN\l|return r5\l}"];
Node_13 [shape=record,label="{13\:\ 0x0033}"];
Node_14 [shape=record,label="{14\:\ 0x0035|SYNTHETIC\lSplitter:B:14:0x0035\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x0035\l|wait(200)\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:16:0x003a\l|if (r4.isInterrupted == false) goto L_0x0001\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|r4.isInterrupted = false\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e}"];
Node_19 [shape=record,label="{19\:\ 0x003f|monitor\-exit(r4)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0040|RETURN\l|return null\l}"];
Node_21 [shape=record,label="{21\:\ 0x0041|REMOVE\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_22 [shape=record,label="{22\:\ 0x0042|REMOVE\l}"];
Node_23 [shape=record,label="{23\:\ 0x0043|REMOVE\l|throw r5\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x003c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public synchronized T org.mapsforge.map.layer.queue.JobQueue.get((r4v0 'this' org.mapsforge.map.layer.queue.JobQueue A[IMMUTABLE_TYPE, THIS]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(I)TT;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_24;
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_16 -> Node_25[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_7;
Node_25 -> Node_17;
}

