digraph "CFG fororg.mapsforge.map.layer.queue.JobQueue.trimToSize()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r2.queueItems.size()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:0:0x0000, B:3:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:3:0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r0 \<= 128) goto L_0x0012\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|LOOP_END\lLOOP:0: B:1:0x0006\-\>B:3:0x000a\l|int r0 = r0 + \-1\lr2.queueItems.remove(r0)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.layer.queue.JobQueue.trimToSize((r2v0 'this' org.mapsforge.map.layer.queue.JobQueue A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_1;
Node_5 -> Node_4;
}

