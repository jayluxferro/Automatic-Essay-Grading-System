digraph "CFG fororg.mapsforge.map.layer.queue.JobQueue.add(Lorg\/mapsforge\/map\/layer\/queue\/Job;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.List\<T\>) = (r1 I:org.mapsforge.map.layer.queue.JobQueue) org.mapsforge.map.layer.queue.JobQueue.assignedJobs java.util.List A[Catch:\{ all \-\> 0x0023 \}, TRY_ENTER]\l0x0003: INVOKE  (r0 I:boolean) = (r0 I:java.util.List), (r2 I:java.lang.Object) java.util.List.contains(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0023 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0021 A[Catch:\{ all \-\> 0x0023 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r0 I:org.mapsforge.map.layer.queue.QueueItem) =  org.mapsforge.map.layer.queue.QueueItem A[Catch:\{ all \-\> 0x0023 \}]\l0x000b: INVOKE  \l  (r0 I:org.mapsforge.map.layer.queue.QueueItem)\l  (r2 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.queue.QueueItem.\<init\>(org.mapsforge.map.layer.queue.Job):void type: DIRECT A[Catch:\{ all \-\> 0x0023 \}]\l0x000e: IGET  (r2 I:java.util.List\<org.mapsforge.map.layer.queue.QueueItem\<T\>\>) = (r1 I:org.mapsforge.map.layer.queue.JobQueue) org.mapsforge.map.layer.queue.JobQueue.queueItems java.util.List A[Catch:\{ all \-\> 0x0023 \}]\l0x0010: INVOKE  (r2 I:boolean) = (r2 I:java.util.List), (r0 I:java.lang.Object) java.util.List.contains(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0023 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0021 A[Catch:\{ all \-\> 0x0023 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IGET  (r2 I:java.util.List\<org.mapsforge.map.layer.queue.QueueItem\<T\>\>) = (r1 I:org.mapsforge.map.layer.queue.JobQueue) org.mapsforge.map.layer.queue.JobQueue.queueItems java.util.List A[Catch:\{ all \-\> 0x0023 \}]\l0x0018: INVOKE  (r2 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0023 \}]\l0x001b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x0023 \}]\l0x001c: IPUT  \l  (r2 I:boolean)\l  (r1 I:org.mapsforge.map.layer.queue.JobQueue)\l org.mapsforge.map.layer.queue.JobQueue.scheduleNeeded boolean A[Catch:\{ all \-\> 0x0023 \}]\l0x001e: INVOKE  (r1 I:org.mapsforge.map.layer.queue.JobQueue) org.mapsforge.map.layer.queue.JobQueue.notifyWorkers():void type: VIRTUAL A[Catch:\{ all \-\> 0x0023 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|0x0021: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0023: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|0x0024: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.layer.queue.JobQueue.add((r1 'this' I:org.mapsforge.map.layer.queue.JobQueue A[IMMUTABLE_TYPE, THIS]), (r2 I:T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

