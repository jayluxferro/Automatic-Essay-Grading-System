digraph "CFG fororg.mapsforge.map.layer.queue.JobQueue.add(Lorg\/mapsforge\/map\/layer\/queue\/Job;)V" {
subgraph cluster_Region_1890781362 {
label = "R(1:(1:(1:(2:4|(1:6)))))";
node [shape=record,color=blue];
subgraph cluster_Region_141570652 {
label = "R(1:(1:(2:4|(1:6))))";
node [shape=record,color=blue];
subgraph cluster_Region_963587852 {
label = "R(1:(2:4|(1:6)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_456899293 {
label = "IF [B:3:0x0007] THEN: R(2:4|(1:6)) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r1.assignedJobs.contains(r2) == false) goto L_0x0009\l}"];
subgraph cluster_Region_1859272764 {
label = "R(2:4|(1:6))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0009|org.mapsforge.map.layer.queue.QueueItem org.mapsforge.map.layer.queue.QueueItem r0 = new org.mapsforge.map.layer.queue.QueueItem(r2)     \/\/ Catch:\{  \}\l}"];
subgraph cluster_IfRegion_4129280 {
label = "IF [B:5:0x0014] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r1.queueItems.contains(r0) == false) goto L_0x0016\l}"];
subgraph cluster_Region_908513848 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|r1.queueItems.add(r0)\lr1.scheduleNeeded = true\lnotifyWorkers()\l}"];
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0021|DONT_GENERATE\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0022}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0023|REMOVE\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0024|REMOVE\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0025|REMOVE\l|throw r2\l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.layer.queue.JobQueue.add((r1v0 'this' org.mapsforge.map.layer.queue.JobQueue A[IMMUTABLE_TYPE, THIS]), (r2v0 T A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TT;)V]\}]\l}"];
MethodNode -> Node_0;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

