digraph "CFG fororg.mapsforge.map.layer.hills.HgtCache.1.crawl(Ljava\/io\/File;Ljava\/util\/regex\/Matcher;Ljava\/util\/Map;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r23\lr1 = r25\lr2 = r26\lr3 = r27\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r24.exists() == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e}"];
Node_3 [shape=record,label="{3\:\ 0x0012|if (r24.isFile() == false) goto L_0x00c0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014}"];
Node_5 [shape=record,label="{5\:\ 0x0020|if (r1.reset(r24.getName()).matches() == false) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|int r4 = java.lang.Integer.parseInt(r1.group(2))\lint r5 = java.lang.Integer.parseInt(r1.group(4))\l}"];
Node_7 [shape=record,label="{7\:\ 0x0043|if (\"n\".equals(r1.group(1).toLowerCase()) == false) goto L_0x0046\l}"];
Node_8 [shape=record,label="{8\:\ 0x0046|int r4 = \-r4\l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|PHI: r4 \l  PHI: (r4v10 int) = (r4v9 int), (r4v12 int) binds: [B:7:0x0043, B:8:0x0046] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0056|if (\"e\".equals(r1.group(3).toLowerCase()) == false) goto L_0x0059\l}"];
Node_11 [shape=record,label="{11\:\ 0x0059|int r5 = \-r5\l}"];
Node_12 [shape=record,label="{12\:\ 0x005a|PHI: r5 \l  PHI: (r5v4 int) = (r5v3 int), (r5v6 int) binds: [B:10:0x0056, B:11:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|long r8 = r24.length()\llong r10 = r8 \/ 2\llong r12 = (long) java.lang.Math.sqrt((double) r10)\l}"];
Node_13 [shape=record,label="{13\:\ 0x006c|if (((r12 * r12) \> r10 ? 1 : ((r12 * r12) == r10 ? 0 : \-1)) == 0) goto L_0x008f\l}"];
Node_14 [shape=record,label="{14\:\ 0x006e|if (r3 == null) goto L_?\l}"];
Node_15 [shape=record,label="{15\:\ 0x0070|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(r24)\lr1.append(\" length in shorts (\")\lr1.append(r10)\lr1.append(\") is not a square number\")\lr3.add(r1.toString())\l}"];
Node_16 [shape=record,label="{16\:\ 0x008f|r6 = r24\lorg.mapsforge.map.layer.hills.HgtCache$TileKey r1 = new org.mapsforge.map.layer.hills.HgtCache.TileKey(r4, r5)\lorg.mapsforge.map.layer.hills.HgtCache$HgtFileInfo r3 = r2.get(r1)\l}"];
Node_17 [shape=record,label="{17\:\ 0x009c|if (r3 == null) goto L_0x00a4\l}"];
Node_18 [shape=record,label="{18\:\ 0x009e}"];
Node_19 [shape=record,label="{19\:\ 0x00a2|if ((r3.size \> r8 ? 1 : (r3.size == r8 ? 0 : \-1)) \>= 0) goto L_?\l}"];
Node_20 [shape=record,label="{20\:\ 0x00a4|double r10 = (double) r5\ldouble r14 = (double) r4\lr19 = r14\lr2.put(r1, new org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo(r0.this$0, r24, (double) (r4 + \-1), r10, r19, (double) (r5 + 1)))\l}"];
Node_21 [shape=record,label="{21\:\ 0x00c0|r6 = r24\l}"];
Node_22 [shape=record,label="{22\:\ 0x00c6|if (r24.isDirectory() == false) goto L_?\l}"];
Node_23 [shape=record,label="{23\:\ 0x00c8|java.io.File[] r4 = r24.listFiles()\l}"];
Node_24 [shape=record,label="{24\:\ 0x00cc|if (r4 == null) goto L_?\l}"];
Node_25 [shape=record,label="{25\:\ 0x00ce|int r5 = r4.length\lr6 = 0\l}"];
Node_26 [shape=record,label="{26\:\ 0x00d0|LOOP_START\lPHI: r6 \l  PHI: (r6v2 int) = (r6v1 int), (r6v3 int) binds: [B:25:0x00ce, B:27:0x00d2] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:26:0x00d0\-\>B:27:0x00d2\l|if (r6 \>= r5) goto L_0x00da\l}"];
Node_27 [shape=record,label="{27\:\ 0x00d2|LOOP_END\lLOOP:0: B:26:0x00d0\-\>B:27:0x00d2\l|crawl(r4[r6], r1, r2, r3)\lint r6 = r6 + 1\l}"];
Node_28 [shape=record,label="{28\:\ 0x00da|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_32 [shape=record,label="{32\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_34 [shape=record,label="{34\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.layer.hills.HgtCache.1.crawl((r23v0 'this' org.mapsforge.map.layer.hills.HgtCache$1 A[IMMUTABLE_TYPE, THIS]), (r24v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 java.util.regex.Matcher A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 java.util.Map\<org.mapsforge.map.layer.hills.HgtCache$TileKey, org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 java.util.List\<java.lang.String\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/io\/File;, Ljava\/util\/regex\/Matcher;, Ljava\/util\/Map\<, Lorg\/mapsforge\/map\/layer\/hills\/HgtCache$TileKey;, Lorg\/mapsforge\/map\/layer\/hills\/HgtCache$HgtFileInfo;, \>;, Ljava\/util\/List\<, Ljava\/lang\/String;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_29;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_21;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_30;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_31;
Node_15 -> Node_32;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_33;
Node_20 -> Node_34;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_35;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_36;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_26;
Node_28 -> Node_37;
}

