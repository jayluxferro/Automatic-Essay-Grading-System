digraph "CFG fororg.mapsforge.map.layer.hills.LatchedLazyFuture.cancel(Z)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicReference\<java.util.concurrent.ExecutionException\>) = (r4 I:org.mapsforge.map.layer.hills.LatchedLazyFuture) org.mapsforge.map.layer.hills.LatchedLazyFuture.state java.util.concurrent.atomic.AtomicReference \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.concurrent.atomic.AtomicReference) java.util.concurrent.atomic.AtomicReference.get():java.lang.Object type: VIRTUAL \l0x0006: SGET  (r1 I:java.util.concurrent.ExecutionException) =  org.mapsforge.map.layer.hills.LatchedLazyFuture.CANCELLED java.util.concurrent.ExecutionException \l0x0008: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: RETURN  (r2 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r0 I:java.util.concurrent.atomic.AtomicReference\<java.util.concurrent.ExecutionException\>) = (r4 I:org.mapsforge.map.layer.hills.LatchedLazyFuture) org.mapsforge.map.layer.hills.LatchedLazyFuture.state java.util.concurrent.atomic.AtomicReference \l0x000e: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.concurrent.atomic.AtomicReference) java.util.concurrent.atomic.AtomicReference.get():java.lang.Object type: VIRTUAL \l0x0012: SGET  (r1 I:java.util.concurrent.ExecutionException) =  org.mapsforge.map.layer.hills.LatchedLazyFuture.DONE java.util.concurrent.ExecutionException \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: RETURN  (r5 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IGET  (r5 I:java.lang.Thread) = (r4 I:org.mapsforge.map.layer.hills.LatchedLazyFuture) org.mapsforge.map.layer.hills.LatchedLazyFuture.thread java.lang.Thread \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: IGET  (r0 I:java.util.concurrent.atomic.AtomicReference\<java.util.concurrent.ExecutionException\>) = (r4 I:org.mapsforge.map.layer.hills.LatchedLazyFuture) org.mapsforge.map.layer.hills.LatchedLazyFuture.state java.util.concurrent.atomic.AtomicReference \l0x0020: SGET  (r1 I:java.util.concurrent.ExecutionException) =  org.mapsforge.map.layer.hills.LatchedLazyFuture.STARTED java.util.concurrent.ExecutionException \l0x0022: SGET  (r3 I:java.util.concurrent.ExecutionException) =  org.mapsforge.map.layer.hills.LatchedLazyFuture.CANCELLED java.util.concurrent.ExecutionException \l0x0024: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.concurrent.atomic.AtomicReference)\l  (r1 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.concurrent.atomic.AtomicReference.compareAndSet(java.lang.Object, java.lang.Object):boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x002e \l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|0x002a: INVOKE  (r5 I:java.lang.Thread) java.lang.Thread.interrupt():void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: RETURN  (r2 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: IGET  (r5 I:java.util.concurrent.atomic.AtomicReference\<java.util.concurrent.ExecutionException\>) = (r4 I:org.mapsforge.map.layer.hills.LatchedLazyFuture) org.mapsforge.map.layer.hills.LatchedLazyFuture.state java.util.concurrent.atomic.AtomicReference \l0x0030: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0031: SGET  (r1 I:java.util.concurrent.ExecutionException) =  org.mapsforge.map.layer.hills.LatchedLazyFuture.CANCELLED java.util.concurrent.ExecutionException \l0x0033: INVOKE  (r5 I:boolean) = \l  (r5 I:java.util.concurrent.atomic.AtomicReference)\l  (r0 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.concurrent.atomic.AtomicReference.compareAndSet(java.lang.Object, java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.layer.hills.LatchedLazyFuture.cancel((r4 'this' I:org.mapsforge.map.layer.hills.LatchedLazyFuture A[IMMUTABLE_TYPE, THIS]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
}

