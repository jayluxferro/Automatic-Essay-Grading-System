digraph "CFG fororg.mapsforge.map.layer.hills.LatchedLazyFuture.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.util.concurrent.atomic.AtomicReference) =  java.util.concurrent.atomic.AtomicReference \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: INVOKE  \l  (r0 I:java.util.concurrent.atomic.AtomicReference)\l  (r1 I:java.lang.Object)\l java.util.concurrent.atomic.AtomicReference.\<init\>(java.lang.Object):void type: DIRECT \l0x0009: IPUT  \l  (r0 I:java.util.concurrent.atomic.AtomicReference\<java.util.concurrent.ExecutionException\>)\l  (r2 I:org.mapsforge.map.layer.hills.LatchedLazyFuture)\l org.mapsforge.map.layer.hills.LatchedLazyFuture.state java.util.concurrent.atomic.AtomicReference \l0x000b: NEW_INSTANCE  (r0 I:java.util.concurrent.CountDownLatch) =  java.util.concurrent.CountDownLatch \l0x000d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000e: INVOKE  (r0 I:java.util.concurrent.CountDownLatch), (r1 I:int) java.util.concurrent.CountDownLatch.\<init\>(int):void type: DIRECT \l0x0011: IPUT  \l  (r0 I:java.util.concurrent.CountDownLatch)\l  (r2 I:org.mapsforge.map.layer.hills.LatchedLazyFuture)\l org.mapsforge.map.layer.hills.LatchedLazyFuture.latch java.util.concurrent.CountDownLatch \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.hills.LatchedLazyFuture.\<init\>((r2 'this' I:org.mapsforge.map.layer.hills.LatchedLazyFuture A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

