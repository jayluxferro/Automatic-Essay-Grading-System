digraph "CFG fororg.mapsforge.map.layer.hills.LatchedLazyFuture.get()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicReference\<java.util.concurrent.ExecutionException\>) = (r3 I:org.mapsforge.map.layer.hills.LatchedLazyFuture) org.mapsforge.map.layer.hills.LatchedLazyFuture.state java.util.concurrent.atomic.AtomicReference \l0x0002: SGET  (r1 I:java.util.concurrent.ExecutionException) =  org.mapsforge.map.layer.hills.LatchedLazyFuture.STARTED java.util.concurrent.ExecutionException \l0x0004: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.concurrent.atomic.AtomicReference)\l  (r2 I:java.lang.Object)\l  (r1 I:java.lang.Object)\l java.util.concurrent.atomic.AtomicReference.compareAndSet(java.lang.Object, java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: INVOKE  (r3 I:org.mapsforge.map.layer.hills.LatchedLazyFuture) org.mapsforge.map.layer.hills.LatchedLazyFuture.internalCalc():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IGET  (r0 I:java.util.concurrent.CountDownLatch) = (r3 I:org.mapsforge.map.layer.hills.LatchedLazyFuture) org.mapsforge.map.layer.hills.LatchedLazyFuture.latch java.util.concurrent.CountDownLatch \l0x0011: INVOKE  (r0 I:java.util.concurrent.CountDownLatch) java.util.concurrent.CountDownLatch.await():void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: INVOKE  (r3 I:org.mapsforge.map.layer.hills.LatchedLazyFuture) org.mapsforge.map.layer.hills.LatchedLazyFuture.throwIfException():void type: DIRECT \l0x0017: IGET  (r0 I:X) = (r3 I:org.mapsforge.map.layer.hills.LatchedLazyFuture) org.mapsforge.map.layer.hills.LatchedLazyFuture.result java.lang.Object \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: RETURN  (r0 I:X) \l}"];
MethodNode[shape=record,label="{public X org.mapsforge.map.layer.hills.LatchedLazyFuture.get((r3 'this' I:org.mapsforge.map.layer.hills.LatchedLazyFuture A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException, java.util.concurrent.ExecutionException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TX;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

