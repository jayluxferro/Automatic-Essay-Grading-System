digraph "CFG fororg.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.calculate(DD)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double r5 = calculateRaw(r5, r7) \- r4.neutral\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if ((r5 \> 0.0d ? 1 : (r5 == 0.0d ? 0 : \-1)) \>= 0) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d}"];
Node_3 [shape=record,label="{3\:\ 0x0019|RETURN\l|return (int) java.lang.Math.round((r5 \/ r4.neutral) * 128.0d)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a}"];
Node_5 [shape=record,label="{5\:\ 0x001c|if ((r5 \> 0.0d ? 1 : (r5 == 0.0d ? 0 : \-1)) \<= 0) goto L_0x0031\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e}"];
Node_7 [shape=record,label="{7\:\ 0x0030|RETURN\l|return (int) java.lang.Math.round((r5 \/ (1.0d \- r4.neutral)) * 127.0d)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|RETURN\l|return 0\l}"];
MethodNode[shape=record,label="{int org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.calculate((r4v0 'this' org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm A[IMMUTABLE_TYPE, THIS]), (r5v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
}

