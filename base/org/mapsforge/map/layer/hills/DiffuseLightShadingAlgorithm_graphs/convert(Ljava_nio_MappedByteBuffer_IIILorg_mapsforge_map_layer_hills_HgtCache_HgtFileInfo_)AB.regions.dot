digraph "CFG fororg.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.convert(Ljava\/nio\/MappedByteBuffer;IIILorg\/mapsforge\/map\/layer\/hills\/HgtCache$HgtFileInfo;)[B" {
subgraph cluster_Region_347711032 {
label = "R(6:0|(1:2)|3|(4:(1:6)|7|(1:9)|10)|11|12) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.nio.MappedByteBuffer r0 = r25\lint r1 = r26\lint r2 = r27\lshort[] short[] r4 = new short[r2]\lint int r5 = r28 * 2\lint int r6 = r1 + r5\lbyte[] byte[] r7 = new byte[(r6 * r6)]\lint int r6 = (r6 * r28) + r28\lint r8 = 0\lshort r9 = 0\lint r10 = 0\l}"];
subgraph cluster_LoopRegion_11100203 {
label = "LOOP:0: (1:2)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0017|LOOP_START\lPHI: r8 r9 r10 \l  PHI: (r8v1 int) = (r8v0 int), (r8v12 int) binds: [B:0:0x0000, B:2:0x0019] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v1 short) = (r9v0 short), (r9v2 short) binds: [B:0:0x0000, B:2:0x0019] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 int) = (r10v0 int), (r10v12 int) binds: [B:0:0x0000, B:2:0x0019] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0017\-\>B:2:0x0019\l|if (r8 \< r2) goto L_0x0019\l}"];
subgraph cluster_Region_561080090 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0019|LOOP_END\lLOOP:0: B:1:0x0017\-\>B:2:0x0019\l|short r9 = readNext(r0, r9)\lr4[r10] = r9\lr8++\lr10 = r10 + 1\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0025|long long r11 = (long) (r1 * 170)\ldouble double r8 = org.mapsforge.core.util.MercatorProjection.calculateGroundResolution(r29.southLat(), r11)\ldouble double r13 = (double) (r1 * 2)\ldouble double r8 = r8 \/ r13\ldouble double r11 = org.mapsforge.core.util.MercatorProjection.calculateGroundResolution(r29.northLat(), r11) \/ r13\lint r14 = r6\lint r6 = 1\l}"];
subgraph cluster_LoopRegion_2015403370 {
label = "LOOP:1: (4:(1:6)|7|(1:9)|10)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x003f|LOOP_START\lPHI: r0 r1 r4 r6 r8 r10 r14 \l  PHI: (r0v1 java.nio.MappedByteBuffer) = (r0v0 java.nio.MappedByteBuffer), (r0v3 java.nio.MappedByteBuffer) binds: [B:3:0x0025, B:10:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v4 int) binds: [B:3:0x0025, B:10:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 short[]) = (r4v0 short[]), (r4v2 short[]) binds: [B:3:0x0025, B:10:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v4 int) = (r6v3 int), (r6v5 int) binds: [B:3:0x0025, B:10:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v5 double) = (r8v4 double), (r8v6 double) binds: [B:3:0x0025, B:10:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 int) = (r10v1 int), (r10v6 int) binds: [B:3:0x0025, B:10:0x00a7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 int) = (r14v0 int), (r14v2 int) binds: [B:3:0x0025, B:10:0x00a7] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:4:0x003f\-\>B:10:0x00a7\l|if (r6 \<= r1) goto L_0x0041\l}"];
subgraph cluster_Region_1278320306 {
label = "R(4:(1:6)|7|(1:9)|10)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_717921939 {
label = "IF [B:5:0x0041] THEN: R(1:6) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0041|if (r10 \>= r2) goto L_0x0043\l}"];
subgraph cluster_Region_1451072877 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0043|r10 = 0\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x0044|PHI: r10 \l  PHI: (r10v3 int) = (r10v2 int), (r10v11 int) binds: [B:5:0x0041, B:6:0x0043] A[DONT_GENERATE, DONT_INLINE]\l|short short r15 = r4[r10]\lshort short r16 = readNext(r0, r15)\lr4[r10] = r16\lint r18 = r14\lshort[] r19 = r4\ldouble double r13 = (((double) r6) * r8) + (((double) (r1 \- r6)) * r11)\lr10++\lint r3 = 1\l}"];
subgraph cluster_LoopRegion_941906130 {
label = "LOOP:2: (1:9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x005e|LOOP_START\lPHI: r0 r1 r3 r8 r10 r15 r16 r18 \l  PHI: (r0v2 java.nio.MappedByteBuffer) = (r0v1 java.nio.MappedByteBuffer), (r0v12 java.nio.MappedByteBuffer) binds: [B:7:0x0044, B:9:0x0060] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 int) = (r1v1 int), (r1v6 int) binds: [B:7:0x0044, B:9:0x0060] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 int) = (r3v2 int), (r3v4 int) binds: [B:7:0x0044, B:9:0x0060] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v6 double) = (r8v5 double), (r8v11 double) binds: [B:7:0x0044, B:9:0x0060] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v6 int) = (r10v5 int), (r10v10 int) binds: [B:7:0x0044, B:9:0x0060] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v2 short) = (r15v1 short), (r15v8 short) binds: [B:7:0x0044, B:9:0x0060] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r16v1 short) = (r16v0 short), (r16v3 short) binds: [B:7:0x0044, B:9:0x0060] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r18v1 int) = (r18v0 int), (r18v2 int) binds: [B:7:0x0044, B:9:0x0060] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:8:0x005e\-\>B:9:0x0060\l|if (r3 \<= r1) goto L_0x0060\l}"];
subgraph cluster_Region_690103015 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0060|LOOP_END\lLOOP:2: B:8:0x005e\-\>B:9:0x0060\l|short short r4 = r19[r10]\lshort short r17 = readNext(r0, r4)\lr19[r10] = r17\lr7[r18] = (byte) (java.lang.Math.min(255, java.lang.Math.max(0, calculate(((double) (\-((r17 \- r4) + (r16 \- r15)))) \/ r13, ((double) (\-((r4 \- r15) + (r17 \- r16)))) \/ r13) + 127)) & 255)\lr3++\lr15 = r4\lr18++\lr16 = r17\lr10++\lr8 = r8\lr0 = r25\lr1 = r26\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x00a7|LOOP_END\lLOOP:1: B:4:0x003f\-\>B:10:0x00a7\l|double r22 = r8\lint r14 = r18 + r5\lr6++\lr4 = r19\lr0 = r25\lr1 = r26\l}"];
}
}
Node_11 [shape=record,label="{11\:\ 0x00b7}"];
Node_12 [shape=record,label="{12\:\ 0x00b9|RETURN\l|return r7\l}"];
}
Node_13 [shape=record,color=red,label="{13\:\ 0x0025|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x00b7|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x00a7|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private byte[] org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.convert((r24v0 'this' org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm A[IMMUTABLE_TYPE, THIS]), (r25v0 java.nio.MappedByteBuffer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29v0 org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_13[style=dashed];
Node_2 -> Node_1;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_14[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_7[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_15[style=dashed];
Node_9 -> Node_8;
Node_10 -> Node_4;
Node_11 -> Node_12;
Node_13 -> Node_3;
Node_14 -> Node_11;
Node_15 -> Node_10;
}

