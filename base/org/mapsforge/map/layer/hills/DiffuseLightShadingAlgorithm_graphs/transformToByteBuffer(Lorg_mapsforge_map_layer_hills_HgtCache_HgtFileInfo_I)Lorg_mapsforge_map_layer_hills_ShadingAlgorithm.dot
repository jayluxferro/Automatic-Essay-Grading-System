digraph "CFG fororg.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.transformToByteBuffer(Lorg\/mapsforge\/map\/layer\/hills\/HgtCache$HgtFileInfo;I)Lorg\/mapsforge\/map\/layer\/hills\/ShadingAlgorithm$RawShadingResult;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = getAxisLenght(r17)\lint r4 = r0 + 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x005b, all \-\> 0x0056 \}\lSplitter:B:1:0x0007\l|java.io.File r1 = r17.getFile()     \/\/ Catch:\{ IOException \-\> 0x005b, all \-\> 0x0056 \}\ljava.io.FileInputStream r8 = new java.io.FileInputStream(r1)     \/\/ Catch:\{ IOException \-\> 0x005b, all \-\> 0x0056 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|SYNTHETIC\lSplitter:B:3:0x0010\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ IOException \-\> 0x0053, all \-\> 0x004f \}\lSplitter:B:3:0x0010\l|java.nio.channels.FileChannel r15 = r8.getChannel()     \/\/ Catch:\{ IOException \-\> 0x0053, all \-\> 0x004f \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|SYNTHETIC\lSplitter:B:5:0x0014\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ IOException \-\> 0x004d \}\lSplitter:B:5:0x0014\l|r9 = r15     \/\/ Catch:\{ IOException \-\> 0x004d \}\ljava.nio.MappedByteBuffer r2 = r9.map(java.nio.channels.FileChannel.MapMode.READ_ONLY, 0, r1.length())     \/\/ Catch:\{ IOException \-\> 0x004d \}\lr2.order(java.nio.ByteOrder.BIG_ENDIAN)     \/\/ Catch:\{ IOException \-\> 0x004d \}\lorg.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult r2 = new org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult(convert(r2, r0, r4, r18, r17), r0, r0, r18)     \/\/ Catch:\{ IOException \-\> 0x004d \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|if (r15 == null) goto L_0x0043\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|SYNTHETIC\lSplitter:B:8:0x003a\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ IOException \-\> 0x003e \}\lSplitter:B:8:0x003a\l|r15.close()     \/\/ Catch:\{ IOException \-\> 0x003e \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|ExcHandler: IOException (r0v13 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:8:0x003a\l|java.io.IOException r0 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|r0.printStackTrace()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|SYNTHETIC\lSplitter:B:12:0x0043\l}"];
Node_13 [shape=record,label="{13\:\ ?|Catch:\{ IOException \-\> 0x0047 \}\lSplitter:B:12:0x0043\l|r8.close()     \/\/ Catch:\{ IOException \-\> 0x0047 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0047|ExcHandler: IOException (r0v12 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:12:0x0043\l|java.io.IOException r0 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|r0.printStackTrace()\l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|RETURN\l|return r2\l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:5:0x0014\l|java.io.IOException r0 = e\l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|ExcHandler: all (r0v10 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:3:0x0010\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_19 [shape=record,label="{19\:\ 0x0050|r1 = r0\lr15 = null\l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:3:0x0010\l|java.io.IOException r0 = e\l}"];
Node_21 [shape=record,label="{21\:\ 0x0054|r15 = null\l}"];
Node_22 [shape=record,label="{22\:\ 0x0056|ExcHandler: all (r0v8 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0007\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_23 [shape=record,label="{23\:\ 0x0057|r1 = r0\lr8 = null\lr15 = null\l}"];
Node_24 [shape=record,label="{24\:\ 0x005b|ExcHandler: IOException (e java.io.IOException)\lSplitter:B:1:0x0007\l|java.io.IOException r0 = e\l}"];
Node_25 [shape=record,label="{25\:\ 0x005c|r8 = null\lr15 = null\l}"];
Node_26 [shape=record,label="{26\:\ 0x005e|SYNTHETIC\lPHI: r0 r8 r15 \l  PHI: (r0v3 'e' java.io.IOException) = (r0v7 'e' java.io.IOException), (r0v9 'e' java.io.IOException), (r0v11 'e' java.io.IOException) binds: [B:25:0x005c, B:21:0x0054, B:17:0x004d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 java.io.FileInputStream) = (r8v2 java.io.FileInputStream), (r8v4 java.io.FileInputStream), (r8v4 java.io.FileInputStream) binds: [B:25:0x005c, B:21:0x0054, B:17:0x004d] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v1 java.nio.channels.FileChannel) = (r15v2 java.nio.channels.FileChannel), (r15v4 java.nio.channels.FileChannel), (r15v6 java.nio.channels.FileChannel) binds: [B:25:0x005c, B:21:0x0054, B:17:0x004d] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:26:0x005e\l}"];
Node_27 [shape=record,label="{27\:\ ?|Catch:\{ all \-\> 0x0080 \}\lSplitter:B:26:0x005e\l|LOGGER.log(java.util.logging.Level.SEVERE, r0.getMessage(), r0)     \/\/ Catch:\{ all \-\> 0x0080 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x0069|if (r15 == null) goto L_0x0074\l}"];
Node_29 [shape=record,label="{29\:\ 0x006b|SYNTHETIC\lSplitter:B:29:0x006b\l}"];
Node_30 [shape=record,label="{30\:\ ?|Catch:\{ IOException \-\> 0x006f \}\lSplitter:B:29:0x006b\l|r15.close()     \/\/ Catch:\{ IOException \-\> 0x006f \}\l}"];
Node_31 [shape=record,label="{31\:\ 0x006f|ExcHandler: IOException (r0v6 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:29:0x006b\l|java.io.IOException r0 = move\-exception\l}"];
Node_32 [shape=record,label="{32\:\ 0x0070|r0.printStackTrace()\l}"];
Node_33 [shape=record,label="{33\:\ 0x0074|if (r8 == null) goto L_0x007f\l}"];
Node_34 [shape=record,label="{34\:\ 0x0076|SYNTHETIC\lSplitter:B:34:0x0076\l}"];
Node_35 [shape=record,label="{35\:\ ?|Catch:\{ IOException \-\> 0x007a \}\lSplitter:B:34:0x0076\l|r8.close()     \/\/ Catch:\{ IOException \-\> 0x007a \}\l}"];
Node_36 [shape=record,label="{36\:\ 0x007a|ExcHandler: IOException (r0v5 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:34:0x0076\l|java.io.IOException r0 = move\-exception\l}"];
Node_37 [shape=record,label="{37\:\ 0x007b|r0.printStackTrace()\l}"];
Node_38 [shape=record,label="{38\:\ 0x007f|RETURN\l|return null\l}"];
Node_39 [shape=record,label="{39\:\ 0x0080|ExcHandler: all (r0v4 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:26:0x005e\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_40 [shape=record,label="{40\:\ 0x0081|r1 = r0\l}"];
Node_41 [shape=record,label="{41\:\ 0x0082|PHI: r1 r8 r15 \l  PHI: (r1v0 java.lang.Throwable) = (r1v1 java.lang.Throwable), (r1v5 java.lang.Throwable), (r1v7 java.lang.Throwable) binds: [B:40:0x0081, B:23:0x0057, B:19:0x0050] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v0 java.io.FileInputStream) = (r8v1 java.io.FileInputStream), (r8v3 java.io.FileInputStream), (r8v4 java.io.FileInputStream) binds: [B:40:0x0081, B:23:0x0057, B:19:0x0050] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r15v0 java.nio.channels.FileChannel) = (r15v1 java.nio.channels.FileChannel), (r15v3 java.nio.channels.FileChannel), (r15v5 java.nio.channels.FileChannel) binds: [B:40:0x0081, B:23:0x0057, B:19:0x0050] A[DONT_GENERATE, DONT_INLINE]\l|if (r15 == null) goto L_0x008d\l}"];
Node_42 [shape=record,label="{42\:\ 0x0084|SYNTHETIC\lSplitter:B:42:0x0084\l}"];
Node_43 [shape=record,label="{43\:\ ?|Catch:\{ IOException \-\> 0x0088 \}\lSplitter:B:42:0x0084\l|r15.close()     \/\/ Catch:\{ IOException \-\> 0x0088 \}\l}"];
Node_44 [shape=record,label="{44\:\ 0x0088|ExcHandler: IOException (r0v2 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:42:0x0084\l|java.io.IOException r0 = move\-exception\l}"];
Node_45 [shape=record,label="{45\:\ 0x0089|r0.printStackTrace()\l}"];
Node_46 [shape=record,label="{46\:\ 0x008d|if (r8 == null) goto L_0x0098\l}"];
Node_47 [shape=record,label="{47\:\ 0x008f|SYNTHETIC\lSplitter:B:47:0x008f\l}"];
Node_48 [shape=record,label="{48\:\ ?|Catch:\{ IOException \-\> 0x0093 \}\lSplitter:B:47:0x008f\l|r8.close()     \/\/ Catch:\{ IOException \-\> 0x0093 \}\l}"];
Node_49 [shape=record,label="{49\:\ 0x0093|ExcHandler: IOException (r0v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:47:0x008f\l|java.io.IOException r0 = move\-exception\l}"];
Node_50 [shape=record,label="{50\:\ 0x0094|r0.printStackTrace()\l}"];
Node_51 [shape=record,label="{51\:\ 0x0098|throw r1\l}"];
MethodNode[shape=record,label="{public org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.transformToByteBuffer((r16v0 'this' org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm A[IMMUTABLE_TYPE, THIS]), (r17v0 org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_24;
Node_1 -> Node_22;
Node_2 -> Node_3;
Node_2 -> Node_24;
Node_2 -> Node_22;
Node_3 -> Node_4;
Node_3 -> Node_20;
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_6 -> Node_17;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_41;
Node_20 -> Node_21;
Node_21 -> Node_26;
Node_22 -> Node_23;
Node_23 -> Node_41;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_39;
Node_27 -> Node_28;
Node_27 -> Node_39;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_33;
Node_29 -> Node_30;
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_30 -> Node_33;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_38;
Node_34 -> Node_35;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_35 -> Node_38;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_46;
Node_42 -> Node_43;
Node_42 -> Node_44;
Node_43 -> Node_44;
Node_43 -> Node_46;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_51;
Node_47 -> Node_48;
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_48 -> Node_51;
Node_49 -> Node_50;
Node_50 -> Node_51;
}

