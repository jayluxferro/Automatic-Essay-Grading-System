digraph "CFG fororg.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.transformToByteBuffer(Lorg\/mapsforge\/map\/layer\/hills\/HgtCache$HgtFileInfo;I)Lorg\/mapsforge\/map\/layer\/hills\/ShadingAlgorithm$RawShadingResult;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = \l  (r16 I:org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm)\l  (r17 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo)\l org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.getAxisLenght(org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo):int type: VIRTUAL \l0x0004: ARITH  (r4 I:int) = (r0 I:int) + (1 int) \l0x0006: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|SYNTHETIC\lSplitter:B:1:0x0007\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0007\l|0x0007: INVOKE  (r1 I:java.io.File) = (r17 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.getFile():java.io.File type: VIRTUAL A[Catch:\{ IOException \-\> 0x005b, all \-\> 0x0056 \}, TRY_ENTER]\l0x000b: NEW_INSTANCE  (r8 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ IOException \-\> 0x005b, all \-\> 0x0056 \}]\l0x000d: INVOKE  (r8 I:java.io.FileInputStream), (r1 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ IOException \-\> 0x005b, all \-\> 0x0056 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|SYNTHETIC\lSplitter:B:3:0x0010\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0010\l|0x0010: INVOKE  (r15 I:java.nio.channels.FileChannel) = (r8 I:java.io.FileInputStream) java.io.FileInputStream.getChannel():java.nio.channels.FileChannel type: VIRTUAL A[Catch:\{ IOException \-\> 0x0053, all \-\> 0x004f \}, TRY_ENTER]\l0x0013: NOP   A[TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|SYNTHETIC\lSplitter:B:5:0x0014\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0014\l|0x0014: SGET  (r10 I:java.nio.channels.FileChannel$MapMode) =  java.nio.channels.FileChannel.MapMode.READ_ONLY java.nio.channels.FileChannel$MapMode A[Catch:\{ IOException \-\> 0x004d \}, TRY_ENTER]\l0x0016: CONST  (r11 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ IOException \-\> 0x004d \}]\l0x0018: INVOKE  (r13 I:long) = (r1 I:java.io.File) java.io.File.length():long type: VIRTUAL A[Catch:\{ IOException \-\> 0x004d \}]\l0x001c: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x004d \}]\l0x001d: INVOKE  (r2 I:java.nio.MappedByteBuffer) = \l  (r9 I:java.nio.channels.FileChannel)\l  (r10 I:java.nio.channels.FileChannel$MapMode)\l  (r11 I:long)\l  (r13 I:long)\l java.nio.channels.FileChannel.map(java.nio.channels.FileChannel$MapMode, long, long):java.nio.MappedByteBuffer type: VIRTUAL A[Catch:\{ IOException \-\> 0x004d \}]\l0x0021: SGET  (r1 I:java.nio.ByteOrder) =  java.nio.ByteOrder.BIG_ENDIAN java.nio.ByteOrder A[Catch:\{ IOException \-\> 0x004d \}]\l0x0023: INVOKE  (r2 I:java.nio.MappedByteBuffer), (r1 I:java.nio.ByteOrder) java.nio.MappedByteBuffer.order(java.nio.ByteOrder):java.nio.ByteBuffer type: VIRTUAL A[Catch:\{ IOException \-\> 0x004d \}]\l0x0026: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x004d \}]\l0x0028: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x004d \}]\l0x0029: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x004d \}]\l0x002b: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x004d \}]\l0x002d: INVOKE  (r1 I:byte[]) = \l  (r1 I:org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm)\l  (r2 I:java.nio.MappedByteBuffer)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo)\l org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.convert(java.nio.MappedByteBuffer, int, int, int, org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo):byte[] type: DIRECT A[Catch:\{ IOException \-\> 0x004d \}]\l0x0031: NEW_INSTANCE  (r2 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult) =  org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult A[Catch:\{ IOException \-\> 0x004d \}]\l0x0033: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x004d \}]\l0x0035: INVOKE  \l  (r2 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l  (r1 I:byte[])\l  (r0 I:int)\l  (r0 I:int)\l  (r3 I:int)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.\<init\>(byte[], int, int, int):void type: DIRECT A[Catch:\{ IOException \-\> 0x004d \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|0x0038: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0043 \l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|SYNTHETIC\lSplitter:B:8:0x003a\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x003a\l|0x003a: INVOKE  (r15 I:java.nio.channels.FileChannel) java.nio.channels.FileChannel.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x003e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|ExcHandler: IOException null\lSplitter:B:8:0x003a\l|0x003e: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0040: INVOKE  (r1 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|SYNTHETIC\lSplitter:B:13:0x0043\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0043\l|0x0043: INVOKE  (r8 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0047 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|ExcHandler: IOException null\lSplitter:B:13:0x0043\l|0x0047: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0049: INVOKE  (r1 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x004c|0x004c: RETURN  \l  (r2 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x004d|ExcHandler: IOException null\lSplitter:B:5:0x0014\l|0x004d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x004f|ExcHandler: all null\lSplitter:B:3:0x0010\l|0x004f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_22 [shape=record,label="{22\:\ 0x0050|0x0050: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0051: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0053|ExcHandler: IOException null\lSplitter:B:3:0x0010\l|0x0053: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_24 [shape=record,label="{24\:\ 0x0054|0x0054: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0056|ExcHandler: all null\lSplitter:B:1:0x0007\l|0x0056: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_26 [shape=record,label="{26\:\ 0x0057|0x0057: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0058: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0059: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x005b|ExcHandler: IOException null\lSplitter:B:1:0x0007\l|0x005b: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_28 [shape=record,label="{28\:\ 0x005c|0x005c: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x005d: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ 0x005e|SYNTHETIC\lSplitter:B:29:0x005e\l}"];
Node_30 [shape=record,label="{30\:\ ?|Splitter:B:29:0x005e\l|0x005e: SGET  (r1 I:java.util.logging.Logger) =  org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.LOGGER java.util.logging.Logger A[Catch:\{ all \-\> 0x0080 \}, TRY_ENTER]\l0x0060: SGET  (r2 I:java.util.logging.Level) =  java.util.logging.Level.SEVERE java.util.logging.Level A[Catch:\{ all \-\> 0x0080 \}]\l0x0062: INVOKE  (r3 I:java.lang.String) = (r0 I:java.io.IOException) java.io.IOException.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}]\l0x0066: INVOKE  \l  (r1 I:java.util.logging.Logger)\l  (r2 I:java.util.logging.Level)\l  (r3 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable):void type: VIRTUAL A[Catch:\{ all \-\> 0x0080 \}, TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0069|0x0069: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0074 \l}"];
Node_32 [shape=record,label="{32\:\ 0x006b|SYNTHETIC\lSplitter:B:32:0x006b\l}"];
Node_33 [shape=record,label="{33\:\ ?|Splitter:B:32:0x006b\l|0x006b: INVOKE  (r15 I:java.nio.channels.FileChannel) java.nio.channels.FileChannel.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x006f \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x006f|ExcHandler: IOException null\lSplitter:B:32:0x006b\l|0x006f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_36 [shape=record,label="{36\:\ 0x0070|0x0070: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0071: INVOKE  (r1 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_37 [shape=record,label="{37\:\ 0x0074|0x0074: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x007f \l}"];
Node_38 [shape=record,label="{38\:\ 0x0076|SYNTHETIC\lSplitter:B:38:0x0076\l}"];
Node_39 [shape=record,label="{39\:\ ?|Splitter:B:38:0x0076\l|0x0076: INVOKE  (r8 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x007a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_41 [shape=record,label="{41\:\ 0x007a|ExcHandler: IOException null\lSplitter:B:38:0x0076\l|0x007a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_42 [shape=record,label="{42\:\ 0x007b|0x007b: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x007c: INVOKE  (r1 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_43 [shape=record,label="{43\:\ 0x007f|0x007f: RETURN  \l  (r7 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l \l}"];
Node_44 [shape=record,label="{44\:\ 0x0080|ExcHandler: all null\lSplitter:B:29:0x005e\l|0x0080: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_45 [shape=record,label="{45\:\ 0x0081|0x0081: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x0082|0x0082: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x008d \l}"];
Node_47 [shape=record,label="{47\:\ 0x0084|SYNTHETIC\lSplitter:B:47:0x0084\l}"];
Node_48 [shape=record,label="{48\:\ ?|Splitter:B:47:0x0084\l|0x0084: INVOKE  (r15 I:java.nio.channels.FileChannel) java.nio.channels.FileChannel.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0088 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_50 [shape=record,label="{50\:\ 0x0088|ExcHandler: IOException null\lSplitter:B:47:0x0084\l|0x0088: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_51 [shape=record,label="{51\:\ 0x0089|0x0089: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x008a: INVOKE  (r2 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_52 [shape=record,label="{52\:\ 0x008d|0x008d: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0098 \l}"];
Node_53 [shape=record,label="{53\:\ 0x008f|SYNTHETIC\lSplitter:B:53:0x008f\l}"];
Node_54 [shape=record,label="{54\:\ ?|Splitter:B:53:0x008f\l|0x008f: INVOKE  (r8 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0093 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_56 [shape=record,label="{56\:\ 0x0093|ExcHandler: IOException null\lSplitter:B:53:0x008f\l|0x0093: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_57 [shape=record,label="{57\:\ 0x0094|0x0094: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0095: INVOKE  (r2 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_58 [shape=record,label="{58\:\ 0x0098|0x0098: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.transformToByteBuffer((r16 'this' I:org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm A[IMMUTABLE_TYPE, THIS]), (r17 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_27;
Node_1 -> Node_25;
Node_2 -> Node_3;
Node_2 -> Node_27;
Node_2 -> Node_25;
Node_3 -> Node_4;
Node_3 -> Node_23;
Node_3 -> Node_21;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_19;
Node_6 -> Node_7;
Node_6 -> Node_19;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_11;
Node_9 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_16;
Node_14 -> Node_16;
Node_14 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_19 -> Node_29;
Node_21 -> Node_22;
Node_22 -> Node_46;
Node_23 -> Node_24;
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_46;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_44;
Node_30 -> Node_31;
Node_30 -> Node_44;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_37;
Node_32 -> Node_33;
Node_32 -> Node_35;
Node_33 -> Node_35;
Node_33 -> Node_37;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_43;
Node_38 -> Node_39;
Node_38 -> Node_41;
Node_39 -> Node_41;
Node_39 -> Node_43;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_52;
Node_47 -> Node_48;
Node_47 -> Node_50;
Node_48 -> Node_50;
Node_48 -> Node_52;
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_58;
Node_53 -> Node_54;
Node_53 -> Node_56;
Node_54 -> Node_56;
Node_54 -> Node_58;
Node_56 -> Node_57;
Node_57 -> Node_58;
}

