digraph "CFG fororg.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.equals(Ljava\/lang\/Object;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0021 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: INVOKE  (r2 I:java.lang.Class) = (r6 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x000b: INVOKE  (r3 I:java.lang.Class) = (r7 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0012 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: CHECK_CAST  (r7 I:org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm) = (org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm) (r7 I:?[OBJECT, ARRAY]) \l0x0014: IGET  (r2 I:double) = \l  (r7 I:org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm)\l org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.a double \l0x0016: IGET  (r4 I:double) = \l  (r6 I:org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm)\l org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.a double \l0x0018: INVOKE  (r7 I:int) = (r2 I:double), (r4 I:double) java.lang.Double.compare(double, double):int type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001f \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: RETURN  (r0 I:boolean) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0021|0x0021: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.equals((r6 'this' I:org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_13[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_12[style=dashed];
Node_11 -> Node_12;
}

