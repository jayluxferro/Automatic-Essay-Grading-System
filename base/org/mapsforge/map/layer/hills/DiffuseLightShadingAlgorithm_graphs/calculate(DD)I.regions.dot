digraph "CFG fororg.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.calculate(DD)I" {
subgraph cluster_Region_1890997015 {
label = "R(2:0|(2:(1:3)|(1:(2:(1:7)|(1:8)))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double double r5 = calculateRaw(r5, r7) \- r4.neutral\l}"];
subgraph cluster_Region_709246246 {
label = "R(2:(1:3)|(1:(2:(1:7)|(1:8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1918146534 {
label = "IF [B:1:0x000b] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r5 \< 0.0d) goto L_0x000d\l}"];
subgraph cluster_Region_1406063297 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0019|RETURN\l|return (int) java.lang.Math.round((r5 \/ r4.neutral) * 128.0d)\l}"];
}
}
subgraph cluster_Region_442664320 {
label = "R(1:(2:(1:7)|(1:8)))";
node [shape=record,color=blue];
subgraph cluster_Region_1358929735 {
label = "R(2:(1:7)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_235385370 {
label = "IF [B:5:0x001c] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001c|if (r5 \> 0.0d) goto L_0x001e\l}"];
subgraph cluster_Region_1290499622 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0030|RETURN\l|return (int) java.lang.Math.round((r5 \/ (1.0d \- r4.neutral)) * 127.0d)\l}"];
}
}
subgraph cluster_Region_1126783898 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0031|RETURN\l|return 0\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000d}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001a}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001e}"];
MethodNode[shape=record,label="{int org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm.calculate((r4v0 'this' org.mapsforge.map.layer.hills.DiffuseLightShadingAlgorithm A[IMMUTABLE_TYPE, THIS]), (r5v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_8[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

