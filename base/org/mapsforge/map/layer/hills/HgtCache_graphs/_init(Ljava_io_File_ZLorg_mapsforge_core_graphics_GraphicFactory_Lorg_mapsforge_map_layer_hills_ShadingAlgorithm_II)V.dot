digraph "CFG fororg.mapsforge.map.layer.hills.HgtCache.\<init\>(Ljava\/io\/File;ZLorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/layer\/hills\/ShadingAlgorithm;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.problems = new java.util.ArrayList()\lr1.demFolder = r2\lr1.interpolatorOverlap = r3\lr1.graphicsFactory = r4\lr1.algorithm = r5\lr1.mainCacheSize = r6\lr1.neighborCacheSize = r7\lr1.mainLru = new org.mapsforge.map.layer.hills.HgtCache.Lru(r1, r1.mainCacheSize)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|if (r1.interpolatorOverlap == false) goto L_0x0029\l}"];
Node_2 [shape=record,label="{2\:\ 0x0023|org.mapsforge.map.layer.hills.HgtCache$Lru r2 = new org.mapsforge.map.layer.hills.HgtCache.Lru(r1, r7)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|r2 = null\l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|PHI: r2 \l  PHI: (r2v3 org.mapsforge.map.layer.hills.HgtCache$Lru) = (r2v5 org.mapsforge.map.layer.hills.HgtCache$Lru), (r2v6 org.mapsforge.map.layer.hills.HgtCache$Lru) binds: [B:3:0x0029, B:2:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|r1.secondaryLru = r2\lr1.hgtFiles = new org.mapsforge.map.layer.hills.HgtCache.C14371(r1)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.layer.hills.HgtCache.\<init\>((r1v0 'this' org.mapsforge.map.layer.hills.HgtCache A[IMMUTABLE_TYPE, THIS]), (r2v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 org.mapsforge.map.layer.hills.ShadingAlgorithm A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

