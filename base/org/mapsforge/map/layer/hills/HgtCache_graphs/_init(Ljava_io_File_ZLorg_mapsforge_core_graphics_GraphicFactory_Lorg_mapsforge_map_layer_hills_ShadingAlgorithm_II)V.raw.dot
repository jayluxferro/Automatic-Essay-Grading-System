digraph "CFG fororg.mapsforge.map.layer.hills.HgtCache.\<init\>(Ljava\/io\/File;ZLorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/layer\/hills\/ShadingAlgorithm;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0005: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.util.List\<java.lang.String\>)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l org.mapsforge.map.layer.hills.HgtCache.problems java.util.List \l0x000a: IPUT  \l  (r2 I:java.io.File)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l org.mapsforge.map.layer.hills.HgtCache.demFolder java.io.File \l0x000c: IPUT  \l  (r3 I:boolean)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l org.mapsforge.map.layer.hills.HgtCache.interpolatorOverlap boolean \l0x000e: IPUT  \l  (r4 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l org.mapsforge.map.layer.hills.HgtCache.graphicsFactory org.mapsforge.core.graphics.GraphicFactory \l0x0010: IPUT  \l  (r5 I:org.mapsforge.map.layer.hills.ShadingAlgorithm)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l org.mapsforge.map.layer.hills.HgtCache.algorithm org.mapsforge.map.layer.hills.ShadingAlgorithm \l0x0012: IPUT  (r6 I:int), (r1 I:org.mapsforge.map.layer.hills.HgtCache) org.mapsforge.map.layer.hills.HgtCache.mainCacheSize int \l0x0014: IPUT  (r7 I:int), (r1 I:org.mapsforge.map.layer.hills.HgtCache) org.mapsforge.map.layer.hills.HgtCache.neighborCacheSize int \l0x0016: NEW_INSTANCE  (r2 I:org.mapsforge.map.layer.hills.HgtCache$Lru) =  org.mapsforge.map.layer.hills.HgtCache$Lru \l0x0018: IGET  (r3 I:int) = (r1 I:org.mapsforge.map.layer.hills.HgtCache) org.mapsforge.map.layer.hills.HgtCache.mainCacheSize int \l0x001a: INVOKE  \l  (r2 I:org.mapsforge.map.layer.hills.HgtCache$Lru)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l  (r3 I:int)\l org.mapsforge.map.layer.hills.HgtCache.Lru.\<init\>(org.mapsforge.map.layer.hills.HgtCache, int):void type: DIRECT \l0x001d: IPUT  \l  (r2 I:org.mapsforge.map.layer.hills.HgtCache$Lru)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l org.mapsforge.map.layer.hills.HgtCache.mainLru org.mapsforge.map.layer.hills.HgtCache$Lru \l0x001f: IGET  (r2 I:boolean) = (r1 I:org.mapsforge.map.layer.hills.HgtCache) org.mapsforge.map.layer.hills.HgtCache.interpolatorOverlap boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0029 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0023|0x0023: NEW_INSTANCE  (r2 I:org.mapsforge.map.layer.hills.HgtCache$Lru) =  org.mapsforge.map.layer.hills.HgtCache$Lru \l0x0025: INVOKE  \l  (r2 I:org.mapsforge.map.layer.hills.HgtCache$Lru)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l  (r7 I:int)\l org.mapsforge.map.layer.hills.HgtCache.Lru.\<init\>(org.mapsforge.map.layer.hills.HgtCache, int):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|0x0029: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x002a|0x002a: IPUT  \l  (r2 I:org.mapsforge.map.layer.hills.HgtCache$Lru)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l org.mapsforge.map.layer.hills.HgtCache.secondaryLru org.mapsforge.map.layer.hills.HgtCache$Lru \l0x002c: NEW_INSTANCE  (r2 I:org.mapsforge.map.layer.hills.HgtCache$1) =  org.mapsforge.map.layer.hills.HgtCache$1 \l0x002e: INVOKE  \l  (r2 I:org.mapsforge.map.layer.hills.HgtCache$1)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l org.mapsforge.map.layer.hills.HgtCache.1.\<init\>(org.mapsforge.map.layer.hills.HgtCache):void type: DIRECT \l0x0031: IPUT  \l  (r2 I:org.mapsforge.map.layer.hills.LazyFuture\<java.util.Map\<org.mapsforge.map.layer.hills.HgtCache$TileKey, org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo\>\>)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l org.mapsforge.map.layer.hills.HgtCache.hgtFiles org.mapsforge.map.layer.hills.LazyFuture \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: RETURN   \l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.layer.hills.HgtCache.\<init\>((r1 'this' I:org.mapsforge.map.layer.hills.HgtCache A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.mapsforge.map.layer.hills.ShadingAlgorithm A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

