digraph "CFG fororg.mapsforge.map.layer.hills.HgtCache.getHillshadingBitmap(IIDD)Lorg\/mapsforge\/core\/graphics\/HillshadingBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.layer.hills.LazyFuture\<java.util.Map\<org.mapsforge.map.layer.hills.HgtCache$TileKey, org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo\>\>) = (r2 I:org.mapsforge.map.layer.hills.HgtCache) org.mapsforge.map.layer.hills.HgtCache.hgtFiles org.mapsforge.map.layer.hills.LazyFuture \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:org.mapsforge.map.layer.hills.LazyFuture) org.mapsforge.map.layer.hills.LazyFuture.get():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:java.util.Map) = (java.util.Map) (r0 I:?[OBJECT, ARRAY]) \l0x0008: NEW_INSTANCE  (r1 I:org.mapsforge.map.layer.hills.HgtCache$TileKey) =  org.mapsforge.map.layer.hills.HgtCache$TileKey \l0x000a: INVOKE  \l  (r1 I:org.mapsforge.map.layer.hills.HgtCache$TileKey)\l  (r3 I:int)\l  (r4 I:int)\l org.mapsforge.map.layer.hills.HgtCache.TileKey.\<init\>(int, int):void type: DIRECT \l0x000d: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.Map), (r1 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0011: CHECK_CAST  (r3 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) = (org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: RETURN  (r3 I:org.mapsforge.core.graphics.HillshadingBitmap) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: INVOKE  (r3 I:java.util.concurrent.Future) = \l  (r3 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo)\l  (r5 I:double)\l  (r7 I:double)\l org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.getBitmapFuture(double, double):java.util.concurrent.Future type: VIRTUAL \l0x001b: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.concurrent.Future) java.util.concurrent.Future.get():java.lang.Object type: INTERFACE \l0x001f: CHECK_CAST  (r3 I:org.mapsforge.core.graphics.HillshadingBitmap) = (org.mapsforge.core.graphics.HillshadingBitmap) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: RETURN  (r3 I:org.mapsforge.core.graphics.HillshadingBitmap) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.graphics.HillshadingBitmap org.mapsforge.map.layer.hills.HgtCache.getHillshadingBitmap((r2 'this' I:org.mapsforge.map.layer.hills.HgtCache A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException, java.util.concurrent.ExecutionException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

