digraph "CFG fororg.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.getNeighbor(Lorg\/mapsforge\/core\/graphics\/HillshadingBitmap$Border;)Lorg\/mapsforge\/map\/layer\/hills\/HgtCache$HgtFileInfo;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.layer.hills.HgtCache) = (r4 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.this$0 org.mapsforge.map.layer.hills.HgtCache \l0x0002: INVOKE  (r0 I:org.mapsforge.map.layer.hills.LazyFuture) = (r0 I:org.mapsforge.map.layer.hills.HgtCache) org.mapsforge.map.layer.hills.HgtCache.access$600(org.mapsforge.map.layer.hills.HgtCache):org.mapsforge.map.layer.hills.LazyFuture type: STATIC \l0x0006: INVOKE  (r0 I:java.lang.Object) = (r0 I:org.mapsforge.map.layer.hills.LazyFuture) org.mapsforge.map.layer.hills.LazyFuture.get():java.lang.Object type: VIRTUAL \l0x000a: CHECK_CAST  (r0 I:java.util.Map) = (java.util.Map) (r0 I:?[OBJECT, ARRAY]) \l0x000c: SGET  (r1 I:int[]) =  org.mapsforge.map.layer.hills.HgtCache.2.$SwitchMap$org$mapsforge$core$graphics$HillshadingBitmap$Border int[] \l0x000e: INVOKE  (r5 I:int) = (r5 I:org.mapsforge.core.graphics.HillshadingBitmap$Border) org.mapsforge.core.graphics.HillshadingBitmap.Border.ordinal():int type: VIRTUAL \l0x0012: AGET  (r5 I:?[int, float]) = (r1 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: SWITCH  \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4] t:[0x0055, 0x0041, 0x002d, 0x0019] \l}"];
Node_2 [shape=record,label="{2\:\ 0x0017|0x0017: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: RETURN  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: NEW_INSTANCE  (r5 I:org.mapsforge.map.layer.hills.HgtCache$TileKey) =  org.mapsforge.map.layer.hills.HgtCache$TileKey \l0x001b: IGET  (r1 I:double) = (r4 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.maxLatitude double \l0x001d: CAST  (r1 I:int) = (int) (r1 I:double) \l0x001e: IGET  (r2 I:double) = (r4 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.minLongitude double \l0x0020: CAST  (r2 I:int) = (int) (r2 I:double) \l0x0021: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l0x0023: INVOKE  \l  (r5 I:org.mapsforge.map.layer.hills.HgtCache$TileKey)\l  (r1 I:int)\l  (r2 I:int)\l org.mapsforge.map.layer.hills.HgtCache.TileKey.\<init\>(int, int):void type: DIRECT \l0x0026: INVOKE  (r5 I:java.lang.Object) = (r0 I:java.util.Map), (r5 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x002a: CHECK_CAST  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) = (org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: RETURN  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: NEW_INSTANCE  (r5 I:org.mapsforge.map.layer.hills.HgtCache$TileKey) =  org.mapsforge.map.layer.hills.HgtCache$TileKey \l0x002f: IGET  (r1 I:double) = (r4 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.maxLatitude double \l0x0031: CAST  (r1 I:int) = (int) (r1 I:double) \l0x0032: IGET  (r2 I:double) = (r4 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.minLongitude double \l0x0034: CAST  (r2 I:int) = (int) (r2 I:double) \l0x0035: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x0037: INVOKE  \l  (r5 I:org.mapsforge.map.layer.hills.HgtCache$TileKey)\l  (r1 I:int)\l  (r2 I:int)\l org.mapsforge.map.layer.hills.HgtCache.TileKey.\<init\>(int, int):void type: DIRECT \l0x003a: INVOKE  (r5 I:java.lang.Object) = (r0 I:java.util.Map), (r5 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x003e: CHECK_CAST  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) = (org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|0x0040: RETURN  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0041|0x0041: NEW_INSTANCE  (r5 I:org.mapsforge.map.layer.hills.HgtCache$TileKey) =  org.mapsforge.map.layer.hills.HgtCache$TileKey \l0x0043: IGET  (r1 I:double) = (r4 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.maxLatitude double \l0x0045: CAST  (r1 I:int) = (int) (r1 I:double) \l0x0046: ARITH  (r1 I:int) = (r1 I:int) + (\-1 int) \l0x0048: IGET  (r2 I:double) = (r4 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.minLongitude double \l0x004a: CAST  (r2 I:int) = (int) (r2 I:double) \l0x004b: INVOKE  \l  (r5 I:org.mapsforge.map.layer.hills.HgtCache$TileKey)\l  (r1 I:int)\l  (r2 I:int)\l org.mapsforge.map.layer.hills.HgtCache.TileKey.\<init\>(int, int):void type: DIRECT \l0x004e: INVOKE  (r5 I:java.lang.Object) = (r0 I:java.util.Map), (r5 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0052: CHECK_CAST  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) = (org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0054|0x0054: RETURN  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0055|0x0055: NEW_INSTANCE  (r5 I:org.mapsforge.map.layer.hills.HgtCache$TileKey) =  org.mapsforge.map.layer.hills.HgtCache$TileKey \l0x0057: IGET  (r1 I:double) = (r4 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.maxLatitude double \l0x0059: CAST  (r1 I:int) = (int) (r1 I:double) \l0x005a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l0x005c: IGET  (r2 I:double) = (r4 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.minLongitude double \l0x005e: CAST  (r2 I:int) = (int) (r2 I:double) \l0x005f: INVOKE  \l  (r5 I:org.mapsforge.map.layer.hills.HgtCache$TileKey)\l  (r1 I:int)\l  (r2 I:int)\l org.mapsforge.map.layer.hills.HgtCache.TileKey.\<init\>(int, int):void type: DIRECT \l0x0062: INVOKE  (r5 I:java.lang.Object) = (r0 I:java.util.Map), (r5 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0066: CHECK_CAST  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) = (org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0068|0x0068: RETURN  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) \l}"];
MethodNode[shape=record,label="{private org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.getNeighbor((r4 'this' I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo A[IMMUTABLE_TYPE, THIS]), (r5 I:org.mapsforge.core.graphics.HillshadingBitmap$Border A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.util.concurrent.ExecutionException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_1 -> Node_6;
Node_1 -> Node_8;
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

