digraph "CFG fororg.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.getFinishedConverted()Lorg\/mapsforge\/core\/graphics\/HillshadingBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.ref.WeakReference\<java.util.concurrent.Future\<org.mapsforge.core.graphics.HillshadingBitmap\>\> r0 = r2.weakRef\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r0 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|java.util.concurrent.Future r0 = (java.util.concurrent.Future) r0.get()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r0 == null) goto L_?\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r0.isDone() == false) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|SYNTHETIC\lSplitter:B:6:0x0012\l}"];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ InterruptedException \| ExecutionException \-\> 0x0019 \}\lSplitter:B:6:0x0012\l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|RETURN\l|return (org.mapsforge.core.graphics.HillshadingBitmap) r0.get()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|ExcHandler: InterruptedException \| ExecutionException (r0v6 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:6:0x0012\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|r0.printStackTrace()\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.graphics.HillshadingBitmap org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.getFinishedConverted((r2v0 'this' org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

