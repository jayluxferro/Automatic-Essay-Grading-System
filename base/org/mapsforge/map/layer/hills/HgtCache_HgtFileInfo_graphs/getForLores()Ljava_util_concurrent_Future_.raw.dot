digraph "CFG fororg.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.getForLores()Ljava\/util\/concurrent\/Future;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.ref.WeakReference\<java.util.concurrent.Future\<org.mapsforge.core.graphics.HillshadingBitmap\>\>) = (r3 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.weakRef java.lang.ref.WeakReference \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.lang.ref.WeakReference) java.lang.ref.WeakReference.get():java.lang.Object type: VIRTUAL \l0x000a: CHECK_CAST  (r0 I:java.util.concurrent.Future) = (java.util.concurrent.Future) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: NEW_INSTANCE  (r0 I:org.mapsforge.map.layer.hills.HgtCache$LoadUnmergedFuture) =  org.mapsforge.map.layer.hills.HgtCache$LoadUnmergedFuture \l0x0010: IGET  (r1 I:org.mapsforge.map.layer.hills.HgtCache) = (r3 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.this$0 org.mapsforge.map.layer.hills.HgtCache \l0x0012: INVOKE  \l  (r0 I:org.mapsforge.map.layer.hills.HgtCache$LoadUnmergedFuture)\l  (r1 I:org.mapsforge.map.layer.hills.HgtCache)\l  (r3 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo)\l org.mapsforge.map.layer.hills.HgtCache.LoadUnmergedFuture.\<init\>(org.mapsforge.map.layer.hills.HgtCache, org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo):void type: DIRECT \l0x0015: NEW_INSTANCE  (r1 I:java.lang.ref.WeakReference) =  java.lang.ref.WeakReference \l0x0017: INVOKE  (r1 I:java.lang.ref.WeakReference), (r0 I:java.lang.Object) java.lang.ref.WeakReference.\<init\>(java.lang.Object):void type: DIRECT \l0x001a: IPUT  \l  (r1 I:java.lang.ref.WeakReference\<java.util.concurrent.Future\<org.mapsforge.core.graphics.HillshadingBitmap\>\>)\l  (r3 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo)\l org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.weakRef java.lang.ref.WeakReference \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IGET  (r1 I:org.mapsforge.map.layer.hills.HgtCache) = (r3 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.this$0 org.mapsforge.map.layer.hills.HgtCache \l0x001e: INVOKE  (r1 I:org.mapsforge.map.layer.hills.HgtCache$Lru) = (r1 I:org.mapsforge.map.layer.hills.HgtCache) org.mapsforge.map.layer.hills.HgtCache.access$500(org.mapsforge.map.layer.hills.HgtCache):org.mapsforge.map.layer.hills.HgtCache$Lru type: STATIC \l0x0022: INVOKE  (r1 I:java.util.concurrent.Future) = \l  (r1 I:org.mapsforge.map.layer.hills.HgtCache$Lru)\l  (r0 I:java.util.concurrent.Future)\l org.mapsforge.map.layer.hills.HgtCache.Lru.markUsed(java.util.concurrent.Future):java.util.concurrent.Future type: VIRTUAL \l0x0026: IGET  (r2 I:org.mapsforge.map.layer.hills.HgtCache) = (r3 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.this$0 org.mapsforge.map.layer.hills.HgtCache \l0x0028: INVOKE  (r2 I:org.mapsforge.map.layer.hills.HgtCache$Lru) = (r2 I:org.mapsforge.map.layer.hills.HgtCache) org.mapsforge.map.layer.hills.HgtCache.access$400(org.mapsforge.map.layer.hills.HgtCache):org.mapsforge.map.layer.hills.HgtCache$Lru type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0037 \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: IGET  (r2 I:org.mapsforge.map.layer.hills.HgtCache) = (r3 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.this$0 org.mapsforge.map.layer.hills.HgtCache \l0x0030: INVOKE  (r2 I:org.mapsforge.map.layer.hills.HgtCache$Lru) = (r2 I:org.mapsforge.map.layer.hills.HgtCache) org.mapsforge.map.layer.hills.HgtCache.access$400(org.mapsforge.map.layer.hills.HgtCache):org.mapsforge.map.layer.hills.HgtCache$Lru type: STATIC \l0x0034: INVOKE  \l  (r2 I:org.mapsforge.map.layer.hills.HgtCache$Lru)\l  (r1 I:java.util.concurrent.Future)\l org.mapsforge.map.layer.hills.HgtCache.Lru.markUsed(java.util.concurrent.Future):java.util.concurrent.Future type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|0x0037: RETURN  \l  (r0 I:java.util.concurrent.Future\<org.mapsforge.core.graphics.HillshadingBitmap\>)\l \l}"];
MethodNode[shape=record,label="{private java.util.concurrent.Future\<org.mapsforge.core.graphics.HillshadingBitmap\> org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.getForLores((r3 'this' I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/concurrent\/Future\<, Lorg\/mapsforge\/core\/graphics\/HillshadingBitmap;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
}

