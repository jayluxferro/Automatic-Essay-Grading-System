digraph "CFG fororg.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.fillPadding()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: SGET  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap$Border) =  org.mapsforge.core.graphics.HillshadingBitmap.Border.EAST org.mapsforge.core.graphics.HillshadingBitmap$Border \l0x0008: INVOKE  \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap$Border)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.fillPadding(org.mapsforge.core.graphics.HillshadingBitmap$Border):void type: VIRTUAL \l0x000b: SGET  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap$Border) =  org.mapsforge.core.graphics.HillshadingBitmap.Border.WEST org.mapsforge.core.graphics.HillshadingBitmap$Border \l0x000d: INVOKE  \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap$Border)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.fillPadding(org.mapsforge.core.graphics.HillshadingBitmap$Border):void type: VIRTUAL \l0x0010: SGET  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap$Border) =  org.mapsforge.core.graphics.HillshadingBitmap.Border.NORTH org.mapsforge.core.graphics.HillshadingBitmap$Border \l0x0012: INVOKE  \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap$Border)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.fillPadding(org.mapsforge.core.graphics.HillshadingBitmap$Border):void type: VIRTUAL \l0x0015: SGET  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap$Border) =  org.mapsforge.core.graphics.HillshadingBitmap.Border.SOUTH org.mapsforge.core.graphics.HillshadingBitmap$Border \l0x0017: INVOKE  \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap$Border)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.fillPadding(org.mapsforge.core.graphics.HillshadingBitmap$Border):void type: VIRTUAL \l0x001a: IGET  (r0 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x001c: ARITH  (r0 I:int) = (r0 I:int) * (2 int) \l0x001e: IGET  (r2 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.width int \l0x0020: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x0021: IGET  (r2 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.width int \l0x0023: IGET  (r3 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0025: ARITH  (r2 I:int) = (r2 I:int) + (r3 I:int) \l0x0026: IGET  (r3 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.height int \l0x0028: IGET  (r4 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x002a: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x002b: IGET  (r4 I:byte[]) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.bytes byte[] \l0x002d: IGET  (r5 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x002f: ARITH  (r5 I:int) = (r5 I:int) * (r0 I:int) \l0x0031: IGET  (r6 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0033: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x0034: AGET  (r4 I:byte A[IMMUTABLE_TYPE]) = \l  (r4 I:byte[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l0x0036: IGET  (r5 I:byte[]) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.bytes byte[] \l0x0038: IGET  (r6 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x003a: ARITH  (r6 I:int) = (r6 I:int) * (r0 I:int) \l0x003c: ARITH  (r6 I:int) = (r6 I:int) + (r2 I:int) \l0x003d: ARITH  (r6 I:int) = (r6 I:int) \- (r1 I:int) \l0x003e: AGET  (r1 I:byte A[IMMUTABLE_TYPE]) = \l  (r5 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x0040: IGET  (r5 I:byte[]) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.bytes byte[] \l0x0042: ARITH  (r6 I:int) = (r3 I:int) + (\-1 int) \l0x0044: ARITH  (r6 I:int) = (r6 I:int) * (r0 I:int) \l0x0046: IGET  (r7 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0048: ARITH  (r7 I:int) = (r7 I:int) + (r6 I:int) \l0x0049: AGET  (r5 I:byte A[IMMUTABLE_TYPE]) = \l  (r5 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l \l0x004b: IGET  (r7 I:byte[]) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.bytes byte[] \l0x004d: ARITH  (r8 I:int) = (r2 I:int) + (\-1 int) \l0x004f: ARITH  (r6 I:int) = (r6 I:int) + (r8 I:int) \l0x0050: AGET  (r6 I:byte A[IMMUTABLE_TYPE]) = \l  (r7 I:byte[] A[IMMUTABLE_TYPE])\l  (r6 I:?[int, short, byte, char])\l \l0x0052: ARITH  (r3 I:int) = (r3 I:int) * (r0 I:int) \l0x0054: ARITH  (r7 I:int) = (r3 I:int) + (r2 I:int) \l0x0056: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0058|0x0058: IGET  (r10 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l}"];
Node_5 [shape=record,label="{5\:\ 0x005a|0x005a: IF  (r9 I:?[int, byte, short, char]) \>= (r10 I:?[int, byte, short, char])  \-\> B:11:0x0080 \l}"];
Node_6 [shape=record,label="{6\:\ 0x005c|0x005c: ARITH  (r10 I:int) = (r0 I:int) * (r9 I:int) \l0x005e: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x005f|0x005f: IGET  (r12 I:int) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l}"];
Node_8 [shape=record,label="{8\:\ 0x0061|0x0061: IF  (r11 I:?[int, byte, short, char]) \>= (r12 I:?[int, byte, short, char])  \-\> B:10:0x007d \l}"];
Node_9 [shape=record,label="{9\:\ 0x0063|0x0063: IGET  (r12 I:byte[]) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.bytes byte[] \l0x0065: ARITH  (r13 I:int) = (r11 I:int) + (r10 I:int) \l0x0067: APUT  \l  (r12 I:byte[] A[IMMUTABLE_TYPE])\l  (r13 I:?[int, short, byte, char])\l  (r4 I:byte A[IMMUTABLE_TYPE])\l \l0x0069: IGET  (r12 I:byte[]) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.bytes byte[] \l0x006b: ARITH  (r14 I:int) = (r13 I:int) + (r2 I:int) \l0x006d: APUT  \l  (r12 I:byte[] A[IMMUTABLE_TYPE])\l  (r14 I:?[int, short, byte, char])\l  (r1 I:byte A[IMMUTABLE_TYPE])\l \l0x006f: IGET  (r12 I:byte[]) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.bytes byte[] \l0x0071: ARITH  (r14 I:int) = (r13 I:int) + (r3 I:int) \l0x0073: APUT  \l  (r12 I:byte[] A[IMMUTABLE_TYPE])\l  (r14 I:?[int, short, byte, char])\l  (r5 I:byte A[IMMUTABLE_TYPE])\l \l0x0075: IGET  (r12 I:byte[]) = \l  (r15 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.bytes byte[] \l0x0077: ARITH  (r13 I:int) = (r13 I:int) + (r7 I:int) \l0x0078: APUT  \l  (r12 I:byte[] A[IMMUTABLE_TYPE])\l  (r13 I:?[int, short, byte, char])\l  (r6 I:byte A[IMMUTABLE_TYPE])\l \l0x007a: ARITH  (r11 I:int) = (r11 I:int) + (1 int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x007d|0x007d: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0080|0x0080: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.fillPadding((r15 'this' I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_4;
}

