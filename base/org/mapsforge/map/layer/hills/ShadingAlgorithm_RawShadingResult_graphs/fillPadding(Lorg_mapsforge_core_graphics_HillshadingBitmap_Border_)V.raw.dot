digraph "CFG fororg.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.fillPadding(Lorg\/mapsforge\/core\/graphics\/HillshadingBitmap$Border;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0002: ARITH  (r0 I:int) = (r0 I:int) * (2 int) \l0x0004: IGET  (r1 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.width int \l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (r1 I:int) \l0x0007: IGET  (r1 I:boolean) = \l  (r12 I:org.mapsforge.core.graphics.HillshadingBitmap$Border)\l org.mapsforge.core.graphics.HillshadingBitmap.Border.vertical boolean \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x002f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r1 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x000e: IGET  (r3 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.width int \l0x0010: IGET  (r4 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0012: ARITH  (r3 I:int) = (r3 I:int) + (r4 I:int) \l0x0013: IGET  (r4 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.height int \l0x0015: SGET  (r5 I:org.mapsforge.core.graphics.HillshadingBitmap$Border) =  org.mapsforge.core.graphics.HillshadingBitmap.Border.WEST org.mapsforge.core.graphics.HillshadingBitmap$Border \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0021 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IGET  (r12 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x001b: ARITH  (r12 I:int) = (r12 I:int) * (r0 I:int) \l0x001d: IGET  (r5 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x001f: ARITH  (r5 I:int) = (r5 I:int) + (r12 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IGET  (r12 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0023: ARITH  (r12 I:int) = (r12 I:int) * (r0 I:int) \l0x0025: IGET  (r5 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0027: ARITH  (r12 I:int) = (r12 I:int) + (r5 I:int) \l0x0028: IGET  (r5 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.width int \l0x002a: ARITH  (r12 I:int) = (r12 I:int) + (r5 I:int) \l0x002b: ARITH  (r5 I:int) = (r12 I:int) + (\-1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x002f|0x002f: IGET  (r1 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.width int \l0x0031: IGET  (r3 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0033: ARITH  (r3 I:int) = (r3 I:int) * (2 int) \l0x0035: IGET  (r4 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0037: SGET  (r5 I:org.mapsforge.core.graphics.HillshadingBitmap$Border) =  org.mapsforge.core.graphics.HillshadingBitmap.Border.NORTH org.mapsforge.core.graphics.HillshadingBitmap$Border \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0043 \l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|0x003b: IGET  (r12 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x003d: IGET  (r5 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x003f: ARITH  (r5 I:int) = (r5 I:int) * (r0 I:int) \l0x0041: ARITH  (r5 I:int) = (r5 I:int) + (r12 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|0x0043: IGET  (r12 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.height int \l0x0045: IGET  (r5 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x0047: ARITH  (r12 I:int) = (r12 I:int) + (r5 I:int) \l0x0048: ARITH  (r12 I:int) = (r12 I:int) * (r0 I:int) \l0x004a: IGET  (r5 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.padding int \l0x004c: ARITH  (r12 I:int) = (r12 I:int) + (r5 I:int) \l0x004d: ARITH  (r0 I:int) = (r12 I:int) \- (r0 I:int) \l0x004f: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|0x0050: IGET  (r0 I:int) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.width int \l0x0052: NEG  (r0 I:int) = (r0 I:int) \l0x0053: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0054|0x0054: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0055: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0056: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0057|0x0057: IF  (r12 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:18:0x0073 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0059|0x0059: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005a: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005b: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x005c|0x005c: IF  (r5 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:17:0x006c \l}"];
Node_16 [shape=record,label="{16\:\ 0x005e|0x005e: IGET  (r9 I:byte[]) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.bytes byte[] \l0x0060: IGET  (r10 I:byte[]) = \l  (r11 I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult)\l org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.bytes byte[] \l0x0062: AGET  (r10 I:byte A[IMMUTABLE_TYPE]) = \l  (r10 I:byte[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l \l0x0064: APUT  \l  (r9 I:byte[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l  (r10 I:byte A[IMMUTABLE_TYPE])\l \l0x0066: ARITH  (r7 I:int) = (r7 I:int) + (1 int) \l0x0068: ARITH  (r8 I:int) = (r8 I:int) + (r6 I:int) \l0x0069: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x006c|0x006c: ARITH  (r5 I:int) = (r7 I:int) + (r3 I:int) \l0x006e: ARITH  (r7 I:int) = (r8 I:int) + (r0 I:int) \l0x0070: ARITH  (r12 I:int) = (r12 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0073|0x0073: RETURN   \l}"];
MethodNode[shape=record,label="{void org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.fillPadding((r11 'this' I:org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult A[IMMUTABLE_TYPE, THIS]), (r12 I:org.mapsforge.core.graphics.HillshadingBitmap$Border A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_15;
Node_17 -> Node_13;
}

