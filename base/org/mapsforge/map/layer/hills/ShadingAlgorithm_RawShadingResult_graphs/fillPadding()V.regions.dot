digraph "CFG fororg.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.fillPadding()V" {
subgraph cluster_Region_1396995515 {
label = "R(1:(1:(2:3|(3:6|(1:9)|10))))";
node [shape=record,color=blue];
subgraph cluster_Region_567824904 {
label = "R(1:(2:3|(3:6|(1:9)|10)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1553351534 {
label = "IF [B:1:0x0003] THEN: R(2:3|(3:6|(1:9)|10)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r15.padding \>= 1) goto L_0x0006\l}"];
subgraph cluster_Region_1026124065 {
label = "R(2:3|(3:6|(1:9)|10))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|fillPadding(org.mapsforge.core.graphics.HillshadingBitmap.Border.EAST)\lfillPadding(org.mapsforge.core.graphics.HillshadingBitmap.Border.WEST)\lfillPadding(org.mapsforge.core.graphics.HillshadingBitmap.Border.NORTH)\lfillPadding(org.mapsforge.core.graphics.HillshadingBitmap.Border.SOUTH)\lint int r0 = (r15.padding * 2) + r15.width\lint int r2 = r15.width + r15.padding\lint int r3 = r15.height + r15.padding\lbyte byte r4 = r15.bytes[(r15.padding * r0) + r15.padding]\lbyte byte r1 = r15.bytes[((r15.padding * r0) + r2) \- 1]\lint int r6 = (r3 \- 1) * r0\lbyte byte r5 = r15.bytes[r15.padding + r6]\lbyte byte r6 = r15.bytes[r6 + (r2 \- 1)]\lint int r3 = r3 * r0\lint int r7 = r3 + r2\lint r9 = 0\l}"];
subgraph cluster_LoopRegion_2017248712 {
label = "LOOP:0: (3:6|(1:9)|10)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x005a|if (r9 \< r15.padding) goto L_0x005c\l}"];
subgraph cluster_Region_955324830 {
label = "R(3:6|(1:9)|10)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x005c|int int r10 = r0 * r9\lint r11 = 0\l}"];
subgraph cluster_LoopRegion_237685647 {
label = "LOOP:1: (1:9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0061|if (r11 \< r15.padding) goto L_0x0063\l}"];
subgraph cluster_Region_534907022 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0063|LOOP_END\lLOOP:1: B:7:0x005f\-\>B:9:0x0063\l|int int r13 = r11 + r10\lr15.bytes[r13] = r4\lr15.bytes[r13 + r2] = r1\lr15.bytes[r13 + r3] = r5\lr15.bytes[r13 + r7] = r6\lr11++\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x007d|LOOP_END\lLOOP:0: B:4:0x0058\-\>B:10:0x007d\l|r9++\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0005}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0058|LOOP_START\lPHI: r9 \l  PHI: (r9v1 int) = (r9v0 int), (r9v2 int) binds: [B:3:0x0006, B:10:0x007d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0058\-\>B:10:0x007d\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x005f|LOOP_START\lPHI: r11 \l  PHI: (r11v1 int) = (r11v0 int), (r11v2 int) binds: [B:6:0x005c, B:9:0x0063] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x005f\-\>B:9:0x0063\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0080}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0080|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x007d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.hills.ShadingAlgorithm.RawShadingResult.fillPadding((r15v0 'this' org.mapsforge.map.layer.hills.ShadingAlgorithm$RawShadingResult A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_12[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_13[style=dashed];
Node_9 -> Node_7;
Node_10 -> Node_4;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_12 -> Node_11;
Node_13 -> Node_10;
}

