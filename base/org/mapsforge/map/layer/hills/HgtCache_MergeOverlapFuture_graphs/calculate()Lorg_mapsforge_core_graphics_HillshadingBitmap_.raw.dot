digraph "CFG fororg.mapsforge.map.layer.hills.HgtCache.MergeOverlapFuture.calculate()Lorg\/mapsforge\/core\/graphics\/HillshadingBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.layer.hills.HgtCache$LoadUnmergedFuture) = \l  (r6 I:org.mapsforge.map.layer.hills.HgtCache$MergeOverlapFuture)\l org.mapsforge.map.layer.hills.HgtCache.MergeOverlapFuture.loadFuture org.mapsforge.map.layer.hills.HgtCache$LoadUnmergedFuture \l0x0002: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:org.mapsforge.map.layer.hills.HgtCache$LoadUnmergedFuture)\l org.mapsforge.map.layer.hills.HgtCache.LoadUnmergedFuture.get():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap) = (org.mapsforge.core.graphics.HillshadingBitmap) (r0 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  (r1 I:org.mapsforge.core.graphics.HillshadingBitmap$Border[]) =  org.mapsforge.core.graphics.HillshadingBitmap.Border.values():org.mapsforge.core.graphics.HillshadingBitmap$Border[] type: STATIC \l0x000c: ARRAY_LENGTH  (r2 I:int) = (r1 I:?[]) \l0x000d: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0010|0x0010: AGET  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0012: IGET  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) = \l  (r6 I:org.mapsforge.map.layer.hills.HgtCache$MergeOverlapFuture)\l org.mapsforge.map.layer.hills.HgtCache.MergeOverlapFuture.hgtFileInfo org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo \l0x0014: INVOKE  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo) = \l  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo)\l  (r4 I:org.mapsforge.core.graphics.HillshadingBitmap$Border)\l org.mapsforge.map.layer.hills.HgtCache.HgtFileInfo.access$200(org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo, org.mapsforge.core.graphics.HillshadingBitmap$Border):org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo type: STATIC \l0x0018: INVOKE  \l  (r6 I:org.mapsforge.map.layer.hills.HgtCache$MergeOverlapFuture)\l  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap)\l  (r5 I:org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo)\l  (r4 I:org.mapsforge.core.graphics.HillshadingBitmap$Border)\l org.mapsforge.map.layer.hills.HgtCache.MergeOverlapFuture.mergePaddingOnBitmap(org.mapsforge.core.graphics.HillshadingBitmap, org.mapsforge.map.layer.hills.HgtCache$HgtFileInfo, org.mapsforge.core.graphics.HillshadingBitmap$Border):void type: DIRECT \l0x001b: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: RETURN  (r0 I:org.mapsforge.core.graphics.HillshadingBitmap) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.graphics.HillshadingBitmap org.mapsforge.map.layer.hills.HgtCache.MergeOverlapFuture.calculate((r6 'this' I:org.mapsforge.map.layer.hills.HgtCache$MergeOverlapFuture A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.util.concurrent.ExecutionException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

