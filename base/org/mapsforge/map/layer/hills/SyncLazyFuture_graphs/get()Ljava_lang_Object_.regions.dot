digraph "CFG fororg.mapsforge.map.layer.hills.SyncLazyFuture.get()Ljava\/lang\/Object;" {
subgraph cluster_Region_388002424 {
label = "R(3:0|6|7)";
node [shape=record,color=blue];
subgraph cluster_SynchronizedRegion_582370779 {
label = "Synchronized:R(2:0|(1:(1:4)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
subgraph cluster_Region_952625702 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_4932125 {
label = "IF [B:3:0x0003] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0003|if (r1.state == null) goto L_0x0005\l}"];
subgraph cluster_Region_351028190 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0005|r1.state = STARTED\linternalCalc()\l}"];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x000d|throwIfException()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|RETURN\l|return r1.result\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000c|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x000c: MONITOR_EXIT  \l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0013|LOOP_START\lREMOVE\lLOOP:0: B:8:0x0013\-\>B:12:0x0013\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0014|SYNTHETIC\lREMOVE\lSplitter:B:9:0x0014\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|REMOVE\lSplitter:B:9:0x0014\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0015|REMOVE\l|throw r0\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0013|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:8:0x0013\-\>B:12:0x0013\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0015|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0013|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
MethodNode[shape=record,label="{public X org.mapsforge.map.layer.hills.SyncLazyFuture.get((r1v0 'this' org.mapsforge.map.layer.hills.SyncLazyFuture A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException, java.util.concurrent.ExecutionException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TX;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_12;
Node_10 -> Node_13;
Node_10 -> Node_14;
Node_12 -> Node_8;
Node_13 -> Node_11;
Node_14 -> Node_12;
}

