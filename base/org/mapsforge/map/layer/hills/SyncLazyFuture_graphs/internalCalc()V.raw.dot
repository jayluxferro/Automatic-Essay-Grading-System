digraph "CFG fororg.mapsforge.map.layer.hills.SyncLazyFuture.internalCalc()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:java.util.concurrent.ExecutionException) =  org.mapsforge.map.layer.hills.SyncLazyFuture.STARTED java.util.concurrent.ExecutionException \l0x0002: IPUT  \l  (r0 I:java.util.concurrent.ExecutionException)\l  (r3 I:org.mapsforge.map.layer.hills.SyncLazyFuture)\l org.mapsforge.map.layer.hills.SyncLazyFuture.state java.util.concurrent.ExecutionException \l0x0004: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0005\l|0x0005: INVOKE  (r1 I:java.lang.Thread) =  java.lang.Thread.currentThread():java.lang.Thread type: STATIC A[Catch:\{ RuntimeException \-\> 0x001e, ExecutionException \-\> 0x0018 \}, TRY_ENTER]\l0x0009: IPUT  \l  (r1 I:java.lang.Thread)\l  (r3 I:org.mapsforge.map.layer.hills.SyncLazyFuture)\l org.mapsforge.map.layer.hills.SyncLazyFuture.thread java.lang.Thread A[Catch:\{ RuntimeException \-\> 0x001e, ExecutionException \-\> 0x0018 \}]\l0x000b: INVOKE  (r1 I:java.lang.Object) = (r3 I:org.mapsforge.map.layer.hills.SyncLazyFuture) org.mapsforge.map.layer.hills.SyncLazyFuture.calculate():java.lang.Object type: VIRTUAL A[Catch:\{ RuntimeException \-\> 0x001e, ExecutionException \-\> 0x0018 \}]\l0x000f: IPUT  \l  (r1 I:X)\l  (r3 I:org.mapsforge.map.layer.hills.SyncLazyFuture)\l org.mapsforge.map.layer.hills.SyncLazyFuture.result java.lang.Object A[Catch:\{ RuntimeException \-\> 0x001e, ExecutionException \-\> 0x0018 \}]\l0x0011: SGET  (r1 I:java.util.concurrent.ExecutionException) =  org.mapsforge.map.layer.hills.SyncLazyFuture.DONE java.util.concurrent.ExecutionException A[Catch:\{ RuntimeException \-\> 0x001e, ExecutionException \-\> 0x0018 \}]\l0x0013: IPUT  \l  (r1 I:java.util.concurrent.ExecutionException)\l  (r3 I:org.mapsforge.map.layer.hills.SyncLazyFuture)\l org.mapsforge.map.layer.hills.SyncLazyFuture.state java.util.concurrent.ExecutionException A[Catch:\{ RuntimeException \-\> 0x001e, ExecutionException \-\> 0x0018 \}, TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|ExcHandler: all null\lSplitter:B:7:0x0019\l|0x0016: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|ExcHandler: ExecutionException null\lSplitter:B:1:0x0005\l|0x0018: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|SYNTHETIC\lSplitter:B:7:0x0019\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0019\l|0x0019: IPUT  \l  (r1 I:java.util.concurrent.ExecutionException)\l  (r3 I:org.mapsforge.map.layer.hills.SyncLazyFuture)\l org.mapsforge.map.layer.hills.SyncLazyFuture.state java.util.concurrent.ExecutionException A[Catch:\{ all \-\> 0x0016 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: IPUT  \l  (r0 I:java.lang.Thread)\l  (r3 I:org.mapsforge.map.layer.hills.SyncLazyFuture)\l org.mapsforge.map.layer.hills.SyncLazyFuture.thread java.lang.Thread \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|ExcHandler: RuntimeException null\lSplitter:B:1:0x0005\l|0x001e: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|SYNTHETIC\lSplitter:B:11:0x001f\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x001f\l|0x001f: NEW_INSTANCE  (r2 I:java.util.concurrent.ExecutionException) =  java.util.concurrent.ExecutionException A[Catch:\{ all \-\> 0x0016 \}, TRY_ENTER]\l0x0021: INVOKE  \l  (r2 I:java.util.concurrent.ExecutionException)\l  (r1 I:java.lang.Throwable)\l java.util.concurrent.ExecutionException.\<init\>(java.lang.Throwable):void type: DIRECT A[Catch:\{ all \-\> 0x0016 \}]\l0x0024: IPUT  \l  (r2 I:java.util.concurrent.ExecutionException)\l  (r3 I:org.mapsforge.map.layer.hills.SyncLazyFuture)\l org.mapsforge.map.layer.hills.SyncLazyFuture.state java.util.concurrent.ExecutionException A[Catch:\{ all \-\> 0x0016 \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|0x0027: RETURN   \l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|0x0028: IPUT  \l  (r0 I:java.lang.Thread)\l  (r3 I:org.mapsforge.map.layer.hills.SyncLazyFuture)\l org.mapsforge.map.layer.hills.SyncLazyFuture.thread java.lang.Thread \l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|0x002a: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.layer.hills.SyncLazyFuture.internalCalc((r3 'this' I:org.mapsforge.map.layer.hills.SyncLazyFuture A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.util.concurrent.ExecutionException, java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_10;
Node_1 -> Node_6;
Node_2 -> Node_10;
Node_2 -> Node_6;
Node_2 -> Node_9;
Node_4 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_4;
Node_8 -> Node_9;
Node_8 -> Node_4;
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_4;
Node_12 -> Node_4;
Node_12 -> Node_9;
Node_15 -> Node_16;
}

