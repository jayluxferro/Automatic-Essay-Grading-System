digraph "CFG fororg.mapsforge.map.layer.hills.SyncLazyFuture.get()Ljava\/lang\/Object;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.concurrent.ExecutionException) = (r1 I:org.mapsforge.map.layer.hills.SyncLazyFuture) org.mapsforge.map.layer.hills.SyncLazyFuture.state java.util.concurrent.ExecutionException A[Catch:\{ all \-\> 0x0013 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c A[Catch:\{ all \-\> 0x0013 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: SGET  (r0 I:java.util.concurrent.ExecutionException) =  org.mapsforge.map.layer.hills.SyncLazyFuture.STARTED java.util.concurrent.ExecutionException A[Catch:\{ all \-\> 0x0013 \}]\l0x0007: IPUT  \l  (r0 I:java.util.concurrent.ExecutionException)\l  (r1 I:org.mapsforge.map.layer.hills.SyncLazyFuture)\l org.mapsforge.map.layer.hills.SyncLazyFuture.state java.util.concurrent.ExecutionException A[Catch:\{ all \-\> 0x0013 \}]\l0x0009: INVOKE  (r1 I:org.mapsforge.map.layer.hills.SyncLazyFuture) org.mapsforge.map.layer.hills.SyncLazyFuture.internalCalc():void type: DIRECT A[Catch:\{ all \-\> 0x0013 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0013 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: INVOKE  (r1 I:org.mapsforge.map.layer.hills.SyncLazyFuture) org.mapsforge.map.layer.hills.SyncLazyFuture.throwIfException():void type: DIRECT \l0x0010: IGET  (r0 I:X) = (r1 I:org.mapsforge.map.layer.hills.SyncLazyFuture) org.mapsforge.map.layer.hills.SyncLazyFuture.result java.lang.Object \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: RETURN  (r0 I:X) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0013: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|SYNTHETIC\lSplitter:B:9:0x0014\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x0014\l|0x0014: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0013 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0015|0x0015: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public X org.mapsforge.map.layer.hills.SyncLazyFuture.get((r1 'this' I:org.mapsforge.map.layer.hills.SyncLazyFuture A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException, java.util.concurrent.ExecutionException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[()TX;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_8;
Node_10 -> Node_11;
Node_10 -> Node_8;
}

