digraph "CFG fororg.mapsforge.map.layer.hills.SimpleShadingAlgorithm.exaggerate([BI)B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l0x0001: ARITH  (r0 I:int) = (r0 I:int) + (\-1 int) \l0x0003: IGET  (r1 I:int) = (r2 I:org.mapsforge.map.layer.hills.SimpleShadingAlgorithm) org.mapsforge.map.layer.hills.SimpleShadingAlgorithm.lookupOffset int \l0x0005: ARITH  (r4 I:int) = (r4 I:int) + (r1 I:int) \l0x0006: INVOKE  (r4 I:int) = (r0 I:int), (r4 I:int) java.lang.Math.min(int, int):int type: STATIC \l0x000a: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: INVOKE  (r4 I:int) = (r0 I:int), (r4 I:int) java.lang.Math.max(int, int):int type: STATIC \l0x000f: AGET  (r3 I:byte A[IMMUTABLE_TYPE]) = \l  (r3 I:byte[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: RETURN  (r3 I:byte) \l}"];
MethodNode[shape=record,label="{private byte org.mapsforge.map.layer.hills.SimpleShadingAlgorithm.exaggerate((r2 'this' I:org.mapsforge.map.layer.hills.SimpleShadingAlgorithm A[IMMUTABLE_TYPE, THIS]), (r3 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

