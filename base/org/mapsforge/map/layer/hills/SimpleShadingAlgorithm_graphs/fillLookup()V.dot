digraph "CFG fororg.mapsforge.map.layer.hills.SimpleShadingAlgorithm.fillLookup()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 0\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:7:0x0020] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:7:0x0020\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|if (r1 \<= \-1024) goto L_0x0023\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|double r7 = (double) java.lang.Math.round(exaggerate((double) r1))\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|if ((r7 \> \-128.0d ? 1 : (r7 == \-128.0d ? 0 : \-1)) \<= 0) goto L_0x0023\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b}"];
Node_6 [shape=record,label="{6\:\ 0x001d|if ((r7 \> 127.0d ? 1 : (r7 == 127.0d ? 0 : \-1)) \< 0) goto L_0x0020\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|LOOP_END\lLOOP:0: B:1:0x0002\-\>B:7:0x0020\l|int r1 = r1 + \-1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|r2 = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|LOOP_START\lPHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v5 int) binds: [B:8:0x0023, B:15:0x003b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:9:0x0024\-\>B:15:0x003b\l}"];
Node_10 [shape=record,label="{10\:\ 0x0026|if (r2 \>= 1024) goto L_0x003e\l}"];
Node_11 [shape=record,label="{11\:\ 0x0028|double r7 = (double) java.lang.Math.round(exaggerate((double) r2))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|if ((r7 \> \-128.0d ? 1 : (r7 == \-128.0d ? 0 : \-1)) \<= 0) goto L_0x003e\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036}"];
Node_14 [shape=record,label="{14\:\ 0x0038|if ((r7 \> 127.0d ? 1 : (r7 == 127.0d ? 0 : \-1)) \< 0) goto L_0x003b\l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|LOOP_END\lLOOP:1: B:9:0x0024\-\>B:15:0x003b\l|int r2 = r2 + 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|int r2 = (r2 + 1) \- r1\lbyte[] r3 = new byte[r2]\lr4 = r1\l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|LOOP_START\lPHI: r0 r4 \l  PHI: (r0v1 int) = (r0v0 int), (r0v3 int) binds: [B:16:0x003e, B:18:0x0046] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:16:0x003e, B:18:0x0046] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:17:0x0044\-\>B:18:0x0046\l|if (r0 \>= r2) goto L_0x0058\l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|LOOP_END\lLOOP:2: B:17:0x0044\-\>B:18:0x0046\l|r3[r0] = (byte) ((int) java.lang.Math.round(exaggerate((double) r4)))\lint r4 = r4 + 1\lint r0 = r0 + 1\l}"];
Node_19 [shape=record,label="{19\:\ 0x0058|r10.lookup = r3\lr10.lookupOffset = \-r1\l}"];
Node_20 [shape=record,label="{20\:\ 0x005d|RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ 0x0023|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0023|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0023|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x003e|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x003e|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x003e|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0058|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.layer.hills.SimpleShadingAlgorithm.fillLookup((r10v0 'this' org.mapsforge.map.layer.hills.SimpleShadingAlgorithm A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_22;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_21;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_23[style=dashed];
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_25;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_24;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_26[style=dashed];
Node_15 -> Node_9;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_27;
Node_18 -> Node_17;
Node_19 -> Node_20;
Node_21 -> Node_8;
Node_22 -> Node_8;
Node_23 -> Node_8;
Node_24 -> Node_16;
Node_25 -> Node_16;
Node_26 -> Node_16;
Node_27 -> Node_19;
}

