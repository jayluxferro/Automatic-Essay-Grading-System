digraph "CFG fororg.mapsforge.map.layer.hills.HillsRenderConfig.\<init\>(Ljava\/io\/File;Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Lorg\/mapsforge\/map\/layer\/hills\/ShadeTileSource;Lorg\/mapsforge\/map\/layer\/hills\/ShadingAlgorithm;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0005: IPUT  \l  (r0 I:float)\l  (r1 I:org.mapsforge.map.layer.hills.HillsRenderConfig)\l org.mapsforge.map.layer.hills.HillsRenderConfig.maginuteScaleFactor float \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: NEW_INSTANCE  (r4 I:org.mapsforge.map.layer.hills.MemoryCachingHgtReaderTileSource) =  org.mapsforge.map.layer.hills.MemoryCachingHgtReaderTileSource \l0x000b: INVOKE  \l  (r4 I:org.mapsforge.map.layer.hills.MemoryCachingHgtReaderTileSource)\l  (r2 I:java.io.File)\l  (r5 I:org.mapsforge.map.layer.hills.ShadingAlgorithm)\l  (r3 I:org.mapsforge.core.graphics.GraphicFactory)\l org.mapsforge.map.layer.hills.MemoryCachingHgtReaderTileSource.\<init\>(java.io.File, org.mapsforge.map.layer.hills.ShadingAlgorithm, org.mapsforge.core.graphics.GraphicFactory):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IPUT  \l  (r4 I:org.mapsforge.map.layer.hills.ShadeTileSource)\l  (r1 I:org.mapsforge.map.layer.hills.HillsRenderConfig)\l org.mapsforge.map.layer.hills.HillsRenderConfig.tileSource org.mapsforge.map.layer.hills.ShadeTileSource \l0x0010: IGET  (r3 I:org.mapsforge.map.layer.hills.ShadeTileSource) = (r1 I:org.mapsforge.map.layer.hills.HillsRenderConfig) org.mapsforge.map.layer.hills.HillsRenderConfig.tileSource org.mapsforge.map.layer.hills.ShadeTileSource \l0x0012: INVOKE  \l  (r3 I:org.mapsforge.map.layer.hills.ShadeTileSource)\l  (r2 I:java.io.File)\l org.mapsforge.map.layer.hills.ShadeTileSource.setDemFolder(java.io.File):void type: INTERFACE \l0x0015: IGET  (r2 I:org.mapsforge.map.layer.hills.ShadeTileSource) = (r1 I:org.mapsforge.map.layer.hills.HillsRenderConfig) org.mapsforge.map.layer.hills.HillsRenderConfig.tileSource org.mapsforge.map.layer.hills.ShadeTileSource \l0x0017: INVOKE  \l  (r2 I:org.mapsforge.map.layer.hills.ShadeTileSource)\l  (r5 I:org.mapsforge.map.layer.hills.ShadingAlgorithm)\l org.mapsforge.map.layer.hills.ShadeTileSource.setShadingAlgorithm(org.mapsforge.map.layer.hills.ShadingAlgorithm):void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.hills.HillsRenderConfig.\<init\>((r1 'this' I:org.mapsforge.map.layer.hills.HillsRenderConfig A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.map.layer.hills.ShadeTileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.mapsforge.map.layer.hills.ShadingAlgorithm A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

