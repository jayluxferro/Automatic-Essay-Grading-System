digraph "CFG fororg.mapsforge.map.layer.overlay.Polygon.\<init\>(Lorg\/mapsforge\/core\/graphics\/Paint;Lorg\/mapsforge\/core\/graphics\/Paint;Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:org.mapsforge.map.layer.Layer) org.mapsforge.map.layer.Layer.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.util.concurrent.CopyOnWriteArrayList) =  java.util.concurrent.CopyOnWriteArrayList \l0x0005: INVOKE  (r0 I:java.util.concurrent.CopyOnWriteArrayList) java.util.concurrent.CopyOnWriteArrayList.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.util.List\<org.mapsforge.core.model.LatLong\>)\l  (r1 I:org.mapsforge.map.layer.overlay.Polygon)\l org.mapsforge.map.layer.overlay.Polygon.latLongs java.util.List \l0x000a: IPUT  \l  (r5 I:boolean)\l  (r1 I:org.mapsforge.map.layer.overlay.Polygon)\l org.mapsforge.map.layer.overlay.Polygon.keepAligned boolean \l0x000c: IPUT  \l  (r2 I:org.mapsforge.core.graphics.Paint)\l  (r1 I:org.mapsforge.map.layer.overlay.Polygon)\l org.mapsforge.map.layer.overlay.Polygon.paintFill org.mapsforge.core.graphics.Paint \l0x000e: IPUT  \l  (r3 I:org.mapsforge.core.graphics.Paint)\l  (r1 I:org.mapsforge.map.layer.overlay.Polygon)\l org.mapsforge.map.layer.overlay.Polygon.paintStroke org.mapsforge.core.graphics.Paint \l0x0010: IPUT  \l  (r4 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r1 I:org.mapsforge.map.layer.overlay.Polygon)\l org.mapsforge.map.layer.overlay.Polygon.graphicFactory org.mapsforge.core.graphics.GraphicFactory \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.overlay.Polygon.\<init\>((r1 'this' I:org.mapsforge.map.layer.overlay.Polygon A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.mapsforge.core.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

