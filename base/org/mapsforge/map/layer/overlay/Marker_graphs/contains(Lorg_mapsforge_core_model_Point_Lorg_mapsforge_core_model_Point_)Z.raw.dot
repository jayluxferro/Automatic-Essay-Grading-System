digraph "CFG fororg.mapsforge.map.layer.overlay.Marker.contains(Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/model\/Point;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: MONITOR_ENTER  (r16 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\lSplitter:B:2:0x0005\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0005\l|0x0005: IGET  (r2 I:org.mapsforge.map.model.DisplayModel) = (r1 I:org.mapsforge.map.layer.overlay.Marker) org.mapsforge.map.layer.overlay.Marker.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ all \-\> 0x0065 \}, TRY_ENTER]\l0x0007: INVOKE  (r2 I:float) = (r2 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getScaleFactor():float type: VIRTUAL A[Catch:\{ all \-\> 0x0065 \}]\l0x000b: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1101004800(0x41a00000, float:20.0) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x0065 \}]\l0x000d: ARITH  (r2 I:float) = (r2 I:float) * (r3 I:float) A[Catch:\{ all \-\> 0x0065 \}]\l0x000f: IGET  (r4 I:org.mapsforge.core.graphics.Bitmap) = (r1 I:org.mapsforge.map.layer.overlay.Marker) org.mapsforge.map.layer.overlay.Marker.bitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ all \-\> 0x0065 \}]\l0x0011: INVOKE  (r4 I:int) = (r4 I:org.mapsforge.core.graphics.Bitmap) org.mapsforge.core.graphics.Bitmap.getWidth():int type: INTERFACE A[Catch:\{ all \-\> 0x0065 \}]\l0x0015: CAST  (r4 I:float) = (float) (r4 I:int) A[Catch:\{ all \-\> 0x0065 \}]\l0x0016: INVOKE  (r2 I:float) = (r2 I:float), (r4 I:float) java.lang.Math.max(float, float):float type: STATIC A[Catch:\{ all \-\> 0x0065 \}]\l0x001a: CAST  (r4 I:double) = (double) (r2 I:float) A[Catch:\{ all \-\> 0x0065 \}]\l0x001b: IGET  (r2 I:org.mapsforge.map.model.DisplayModel) = (r1 I:org.mapsforge.map.layer.overlay.Marker) org.mapsforge.map.layer.overlay.Marker.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ all \-\> 0x0065 \}]\l0x001d: INVOKE  (r2 I:float) = (r2 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getScaleFactor():float type: VIRTUAL A[Catch:\{ all \-\> 0x0065 \}]\l0x0021: ARITH  (r2 I:float) = (r2 I:float) * (r3 I:float) A[Catch:\{ all \-\> 0x0065 \}]\l0x0023: IGET  (r3 I:org.mapsforge.core.graphics.Bitmap) = (r1 I:org.mapsforge.map.layer.overlay.Marker) org.mapsforge.map.layer.overlay.Marker.bitmap org.mapsforge.core.graphics.Bitmap A[Catch:\{ all \-\> 0x0065 \}]\l0x0025: INVOKE  (r3 I:int) = (r3 I:org.mapsforge.core.graphics.Bitmap) org.mapsforge.core.graphics.Bitmap.getHeight():int type: INTERFACE A[Catch:\{ all \-\> 0x0065 \}]\l0x0029: CAST  (r3 I:float) = (float) (r3 I:int) A[Catch:\{ all \-\> 0x0065 \}]\l0x002a: INVOKE  (r2 I:float) = (r2 I:float), (r3 I:float) java.lang.Math.max(float, float):float type: STATIC A[Catch:\{ all \-\> 0x0065 \}]\l0x002e: CAST  (r2 I:double) = (double) (r2 I:float) A[Catch:\{ all \-\> 0x0065 \}]\l0x002f: NEW_INSTANCE  (r15 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle A[Catch:\{ all \-\> 0x0065 \}]\l0x0031: IGET  (r6 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double A[Catch:\{ all \-\> 0x0065 \}]\l0x0033: CONST  (r8 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l A[Catch:\{ all \-\> 0x0065 \}]\l0x0035: ARITH  (r4 I:double) = (r4 I:double) \/ (r8 I:double) A[Catch:\{ all \-\> 0x0065 \}]\l0x0036: ARITH  (r6 I:double) = (r6 I:double) \- (r4 I:double) A[Catch:\{ all \-\> 0x0065 \}]\l0x0037: IGET  (r10 I:int) = (r1 I:org.mapsforge.map.layer.overlay.Marker) org.mapsforge.map.layer.overlay.Marker.horizontalOffset int A[Catch:\{ all \-\> 0x0065 \}]\l0x0039: CAST  (r10 I:double) = (double) (r10 I:int) A[Catch:\{ all \-\> 0x0065 \}]\l0x003a: ARITH  (r10 I:double) = (r10 I:double) + (r6 I:double) A[Catch:\{ all \-\> 0x0065 \}]\l0x003b: IGET  (r6 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double A[Catch:\{ all \-\> 0x0065 \}]\l0x003d: ARITH  (r2 I:double) = (r2 I:double) \/ (r8 I:double) A[Catch:\{ all \-\> 0x0065 \}]\l0x003e: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0065 \}]\l0x003f: ARITH  (r6 I:double) = (r6 I:double) \- (r2 I:double) A[Catch:\{ all \-\> 0x0065 \}]\l0x0040: IGET  (r8 I:int) = (r1 I:org.mapsforge.map.layer.overlay.Marker) org.mapsforge.map.layer.overlay.Marker.verticalOffset int A[Catch:\{ all \-\> 0x0065 \}]\l0x0042: CAST  (r8 I:double) = (double) (r8 I:int) A[Catch:\{ all \-\> 0x0065 \}]\l0x0043: ARITH  (r12 I:double) = (r6 I:double) + (r8 I:double) A[Catch:\{ all \-\> 0x0065 \}]\l0x0045: IGET  (r6 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double A[Catch:\{ all \-\> 0x0065 \}]\l0x0047: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0065 \}]\l0x0048: ARITH  (r6 I:double) = (r6 I:double) + (r4 I:double) A[Catch:\{ all \-\> 0x0065 \}]\l0x0049: IGET  (r4 I:int) = (r1 I:org.mapsforge.map.layer.overlay.Marker) org.mapsforge.map.layer.overlay.Marker.horizontalOffset int A[Catch:\{ all \-\> 0x0065 \}]\l0x004b: CAST  (r4 I:double) = (double) (r4 I:int) A[Catch:\{ all \-\> 0x0065 \}]\l0x004c: ARITH  (r4 I:double) = (r4 I:double) + (r6 I:double) A[Catch:\{ all \-\> 0x0065 \}]\l0x004d: IGET  (r6 I:double) = (r0 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double A[Catch:\{ all \-\> 0x0065 \}]\l0x004f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0065 \}]\l0x0050: ARITH  (r6 I:double) = (r6 I:double) + (r2 I:double) A[Catch:\{ all \-\> 0x0065 \}]\l0x0051: IGET  (r0 I:int) = (r1 I:org.mapsforge.map.layer.overlay.Marker) org.mapsforge.map.layer.overlay.Marker.verticalOffset int A[Catch:\{ all \-\> 0x0065 \}]\l0x0053: CAST  (r2 I:double) = (double) (r0 I:int) A[Catch:\{ all \-\> 0x0065 \}]\l0x0054: ARITH  (r2 I:double) = (r2 I:double) + (r6 I:double) A[Catch:\{ all \-\> 0x0065 \}]\l0x0055: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0065 \}]\l0x0056: MOVE  (r7 I:?[long, double]) = (r10 I:?[long, double]) A[Catch:\{ all \-\> 0x0065 \}]\l0x0057: MOVE  (r9 I:?[long, double]) = (r12 I:?[long, double]) A[Catch:\{ all \-\> 0x0065 \}]\l0x0058: MOVE  (r11 I:?[long, double]) = (r4 I:?[long, double]) A[Catch:\{ all \-\> 0x0065 \}]\l0x0059: MOVE  (r13 I:?[long, double]) = (r2 I:?[long, double]) A[Catch:\{ all \-\> 0x0065 \}]\l0x005a: INVOKE  \l  (r6 I:org.mapsforge.core.model.Rectangle)\l  (r7 I:double)\l  (r9 I:double)\l  (r11 I:double)\l  (r13 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT A[Catch:\{ all \-\> 0x0065 \}]\l0x005d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0065 \}]\l0x005f: INVOKE  (r0 I:boolean) = \l  (r15 I:org.mapsforge.core.model.Rectangle)\l  (r0 I:org.mapsforge.core.model.Point)\l org.mapsforge.core.model.Rectangle.contains(org.mapsforge.core.model.Point):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0065 \}]\l0x0062: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0063|0x0063: MONITOR_EXIT  (r16 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0064|0x0064: RETURN  (r0 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0065|ExcHandler: all null\lSplitter:B:2:0x0005\l|0x0065: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0066|0x0066: MONITOR_EXIT  (r16 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0067|0x0067: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized boolean org.mapsforge.map.layer.overlay.Marker.contains((r16 'this' I:org.mapsforge.map.layer.overlay.Marker A[IMMUTABLE_TYPE, THIS]), (r17 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

