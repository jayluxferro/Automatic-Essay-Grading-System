digraph "CFG fororg.mapsforge.map.layer.overlay.Circle.draw(Lorg\/mapsforge\/core\/model\/BoundingBox;BLorg\/mapsforge\/core\/graphics\/Canvas;Lorg\/mapsforge\/core\/model\/Point;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: MONITOR_ENTER  (r17 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|SYNTHETIC\lSplitter:B:2:0x0009\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0009\l|0x0009: IGET  (r4 I:org.mapsforge.core.model.LatLong) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.latLong org.mapsforge.core.model.LatLong A[Catch:\{ all \-\> 0x0087 \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0085 A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r4 I:org.mapsforge.core.graphics.Paint) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.paintStroke org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0016 A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: IGET  (r4 I:org.mapsforge.core.graphics.Paint) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.paintFill org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0016 A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0015|0x0015: GOTO  \-\> 0x0085 A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0016|0x0016: IGET  (r4 I:org.mapsforge.core.model.LatLong) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.latLong org.mapsforge.core.model.LatLong A[Catch:\{ all \-\> 0x0087 \}]\l0x0018: IGET  (r4 I:double) = (r4 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double A[Catch:\{ all \-\> 0x0087 \}]\l0x001a: IGET  (r6 I:org.mapsforge.core.model.LatLong) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.latLong org.mapsforge.core.model.LatLong A[Catch:\{ all \-\> 0x0087 \}]\l0x001c: IGET  (r6 I:double) = (r6 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double A[Catch:\{ all \-\> 0x0087 \}]\l0x001e: IGET  (r8 I:org.mapsforge.map.model.DisplayModel) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ all \-\> 0x0087 \}]\l0x0020: INVOKE  (r8 I:int) = (r8 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL A[Catch:\{ all \-\> 0x0087 \}]\l0x0024: INVOKE  (r8 I:long) = (r0 I:byte), (r8 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC A[Catch:\{ all \-\> 0x0087 \}]\l0x0028: INVOKE  (r6 I:double) = (r6 I:double), (r8 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC A[Catch:\{ all \-\> 0x0087 \}]\l0x002c: IGET  (r10 I:double) = (r3 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double A[Catch:\{ all \-\> 0x0087 \}]\l0x002e: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0087 \}]\l0x002f: ARITH  (r6 I:double) = (r6 I:double) \- (r10 I:double) A[Catch:\{ all \-\> 0x0087 \}]\l0x0030: CAST  (r6 I:int) = (int) (r6 I:double) A[Catch:\{ all \-\> 0x0087 \}]\l0x0031: INVOKE  (r7 I:double) = (r4 I:double), (r8 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC A[Catch:\{ all \-\> 0x0087 \}]\l0x0035: IGET  (r9 I:double) = (r3 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double A[Catch:\{ all \-\> 0x0087 \}]\l0x0037: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0087 \}]\l0x0038: ARITH  (r7 I:double) = (r7 I:double) \- (r9 I:double) A[Catch:\{ all \-\> 0x0087 \}]\l0x0039: CAST  (r7 I:int) = (int) (r7 I:double) A[Catch:\{ all \-\> 0x0087 \}]\l0x003a: INVOKE  (r0 I:int) = \l  (r1 I:org.mapsforge.map.layer.overlay.Circle)\l  (r4 I:double)\l  (r0 I:byte)\l org.mapsforge.map.layer.overlay.Circle.getRadiusInPixels(double, byte):int type: VIRTUAL A[Catch:\{ all \-\> 0x0087 \}]\l0x003e: NEW_INSTANCE  (r4 I:org.mapsforge.core.model.Rectangle) =  org.mapsforge.core.model.Rectangle A[Catch:\{ all \-\> 0x0087 \}]\l0x0040: CONST  (r9 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ all \-\> 0x0087 \}]\l0x0042: INVOKE  (r5 I:int) = (r20 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE A[Catch:\{ all \-\> 0x0087 \}]\l0x0046: CAST  (r13 I:double) = (double) (r5 I:int) A[Catch:\{ all \-\> 0x0087 \}]\l0x0047: INVOKE  (r5 I:int) = (r20 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE A[Catch:\{ all \-\> 0x0087 \}]\l0x004b: CAST  (r11 I:double) = (double) (r5 I:int) A[Catch:\{ all \-\> 0x0087 \}]\l0x004c: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0087 \}]\l0x004d: MOVE  (r15 I:?[long, double]) = (r11 I:?[long, double]) A[Catch:\{ all \-\> 0x0087 \}]\l0x004e: CONST  (r11 I:?[long, double]) = (0 ?[long, double]) A[Catch:\{ all \-\> 0x0087 \}]\l0x0050: INVOKE  \l  (r8 I:org.mapsforge.core.model.Rectangle)\l  (r9 I:double)\l  (r11 I:double)\l  (r13 I:double)\l  (r15 I:double)\l org.mapsforge.core.model.Rectangle.\<init\>(double, double, double, double):void type: DIRECT A[Catch:\{ all \-\> 0x0087 \}]\l0x0053: CAST  (r9 I:double) = (double) (r6 I:int) A[Catch:\{ all \-\> 0x0087 \}]\l0x0054: CAST  (r11 I:double) = (double) (r7 I:int) A[Catch:\{ all \-\> 0x0087 \}]\l0x0055: CAST  (r13 I:double) = (double) (r0 I:int) A[Catch:\{ all \-\> 0x0087 \}]\l0x0056: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0087 \}]\l0x0057: INVOKE  (r4 I:boolean) = \l  (r8 I:org.mapsforge.core.model.Rectangle)\l  (r9 I:double)\l  (r11 I:double)\l  (r13 I:double)\l org.mapsforge.core.model.Rectangle.intersectsCircle(double, double, double):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0087 \}]\l0x005a: NOP   A[TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x005b|0x005b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x005f \l}"];
Node_12 [shape=record,label="{12\:\ 0x005d|0x005d: MONITOR_EXIT  (r17 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x005e|0x005e: RETURN   \l}"];
Node_14 [shape=record,label="{14\:\ 0x005f|SYNTHETIC\lSplitter:B:14:0x005f\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x005f\l|0x005f: IGET  (r4 I:org.mapsforge.core.graphics.Paint) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.paintStroke org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0087 \}, TRY_ENTER]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0061|0x0061: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0071 A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0063|0x0063: IGET  (r4 I:boolean) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.keepAligned boolean A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0065|0x0065: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x006c A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0067|0x0067: IGET  (r4 I:org.mapsforge.core.graphics.Paint) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.paintStroke org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0087 \}]\l0x0069: INVOKE  \l  (r4 I:org.mapsforge.core.graphics.Paint)\l  (r3 I:org.mapsforge.core.model.Point)\l org.mapsforge.core.graphics.Paint.setBitmapShaderShift(org.mapsforge.core.model.Point):void type: INTERFACE A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x006c|0x006c: IGET  (r4 I:org.mapsforge.core.graphics.Paint) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.paintStroke org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0087 \}]\l0x006e: INVOKE  \l  (r2 I:org.mapsforge.core.graphics.Canvas)\l  (r6 I:int)\l  (r7 I:int)\l  (r0 I:int)\l  (r4 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawCircle(int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0071|0x0071: IGET  (r4 I:org.mapsforge.core.graphics.Paint) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.paintFill org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0073|0x0073: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0083 A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0075|0x0075: IGET  (r4 I:boolean) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.keepAligned boolean A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0077|0x0077: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x007e A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0079|0x0079: IGET  (r4 I:org.mapsforge.core.graphics.Paint) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.paintFill org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0087 \}]\l0x007b: INVOKE  \l  (r4 I:org.mapsforge.core.graphics.Paint)\l  (r3 I:org.mapsforge.core.model.Point)\l org.mapsforge.core.graphics.Paint.setBitmapShaderShift(org.mapsforge.core.model.Point):void type: INTERFACE A[Catch:\{ all \-\> 0x0087 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x007e|0x007e: IGET  (r3 I:org.mapsforge.core.graphics.Paint) = (r1 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.paintFill org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0087 \}]\l0x0080: INVOKE  \l  (r2 I:org.mapsforge.core.graphics.Canvas)\l  (r6 I:int)\l  (r7 I:int)\l  (r0 I:int)\l  (r3 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawCircle(int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE A[Catch:\{ all \-\> 0x0087 \}, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0083|0x0083: MONITOR_EXIT  (r17 I:?[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x0084|0x0084: RETURN   \l}"];
Node_29 [shape=record,label="{29\:\ 0x0085|0x0085: MONITOR_EXIT  (r17 I:?[OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0086|0x0086: RETURN   \l}"];
Node_31 [shape=record,label="{31\:\ 0x0087|ExcHandler: all null\lSplitter:B:2:0x0009\l|0x0087: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x0088|0x0088: MONITOR_EXIT  (r17 I:?[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0089|0x0089: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.layer.overlay.Circle.draw((r17 'this' I:org.mapsforge.map.layer.overlay.Circle A[IMMUTABLE_TYPE, THIS]), (r18 I:org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_31;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_29;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_29;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_31;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33;
}

