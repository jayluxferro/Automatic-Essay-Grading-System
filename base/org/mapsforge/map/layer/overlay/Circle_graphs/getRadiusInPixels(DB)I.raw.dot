digraph "CFG fororg.mapsforge.map.layer.overlay.Circle.getRadiusInPixels(DB)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:float) = (r3 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.radius float \l0x0002: IGET  (r1 I:org.mapsforge.map.model.DisplayModel) = (r3 I:org.mapsforge.map.layer.overlay.Circle) org.mapsforge.map.layer.overlay.Circle.displayModel org.mapsforge.map.model.DisplayModel \l0x0004: INVOKE  (r1 I:int) = (r1 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL \l0x0008: INVOKE  (r1 I:long) = (r6 I:byte), (r1 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC \l0x000c: INVOKE  (r4 I:double) = (r0 I:float), (r4 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.metersToPixels(float, double, long):double type: STATIC \l0x0010: CAST  (r4 I:int) = (int) (r4 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{protected int org.mapsforge.map.layer.overlay.Circle.getRadiusInPixels((r3 'this' I:org.mapsforge.map.layer.overlay.Circle A[IMMUTABLE_TYPE, THIS]), (r4 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

