digraph "CFG fororg.mapsforge.map.layer.overlay.Circle.contains(Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/model\/Point;DB)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|double r5 = (double) java.lang.Math.max(r2.displayModel.getScaleFactor() * 10.0f, (float) getRadiusInPixels(r5, r7))\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019}"];
Node_5 [shape=record,label="{5\:\ 0x001b|if ((r3.distance(r4) \> r5 ? 1 : (r3.distance(r4) == r5 ? 0 : \-1)) \>= 0) goto L_0x001f\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|r3 = true\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|r3 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|PHI: r3 \l  PHI: (r3v4 boolean) = (r3v5 boolean), (r3v6 boolean) binds: [B:7:0x001f, B:6:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r2)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|RETURN\l|return r3\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|REMOVE\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|REMOVE\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|REMOVE\l|throw r3\l}"];
MethodNode[shape=record,label="{public synchronized boolean org.mapsforge.map.layer.overlay.Circle.contains((r2v0 'this' org.mapsforge.map.layer.overlay.Circle A[IMMUTABLE_TYPE, THIS]), (r3v0 org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

