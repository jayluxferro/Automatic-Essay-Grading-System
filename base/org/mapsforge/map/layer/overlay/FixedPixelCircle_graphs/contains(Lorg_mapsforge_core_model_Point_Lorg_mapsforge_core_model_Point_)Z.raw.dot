digraph "CFG fororg.mapsforge.map.layer.overlay.FixedPixelCircle.contains(Lorg\/mapsforge\/core\/model\/Point;Lorg\/mapsforge\/core\/model\/Point;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1092616192(0x41200000, float:10.0) ?[int, float, short, byte, char])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:org.mapsforge.map.model.DisplayModel) = (r3 I:org.mapsforge.map.layer.overlay.FixedPixelCircle) org.mapsforge.map.layer.overlay.FixedPixelCircle.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ all \-\> 0x0030 \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:float) = (r1 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getScaleFactor():float type: VIRTUAL A[Catch:\{ all \-\> 0x0030 \}]\l0x0009: ARITH  (r1 I:float) = (r1 I:float) * (r0 I:float) A[Catch:\{ all \-\> 0x0030 \}]\l0x000b: INVOKE  (r0 I:float) = (r3 I:org.mapsforge.map.layer.overlay.FixedPixelCircle) org.mapsforge.map.layer.overlay.FixedPixelCircle.getRadius():float type: VIRTUAL A[Catch:\{ all \-\> 0x0030 \}]\l0x000f: IGET  (r2 I:boolean) = (r3 I:org.mapsforge.map.layer.overlay.FixedPixelCircle) org.mapsforge.map.layer.overlay.FixedPixelCircle.scaleRadius boolean A[Catch:\{ all \-\> 0x0030 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001a A[Catch:\{ all \-\> 0x0030 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r2 I:org.mapsforge.map.model.DisplayModel) = (r3 I:org.mapsforge.map.layer.overlay.FixedPixelCircle) org.mapsforge.map.layer.overlay.FixedPixelCircle.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ all \-\> 0x0030 \}]\l0x0015: INVOKE  (r2 I:float) = (r2 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getScaleFactor():float type: VIRTUAL A[Catch:\{ all \-\> 0x0030 \}]\l0x0019: GOTO  \-\> 0x001c A[Catch:\{ all \-\> 0x0030 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l A[Catch:\{ all \-\> 0x0030 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: ARITH  (r0 I:float) = (r0 I:float) * (r2 I:float) A[Catch:\{ all \-\> 0x0030 \}]\l0x001e: INVOKE  (r0 I:float) = (r1 I:float), (r0 I:float) java.lang.Math.max(float, float):float type: STATIC A[Catch:\{ all \-\> 0x0030 \}]\l0x0022: CAST  (r0 I:double) = (double) (r0 I:float) A[Catch:\{ all \-\> 0x0030 \}]\l0x0023: INVOKE  (r4 I:double) = \l  (r4 I:org.mapsforge.core.model.Point)\l  (r5 I:org.mapsforge.core.model.Point)\l org.mapsforge.core.model.Point.distance(org.mapsforge.core.model.Point):double type: VIRTUAL A[Catch:\{ all \-\> 0x0030 \}]\l0x0026: NOP   A[TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: CMP_G  (r4 I:int) = (r4 I:double), (r0 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x002d \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: RETURN  (r4 I:boolean) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0030: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: MONITOR_EXIT  (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized boolean org.mapsforge.map.layer.overlay.FixedPixelCircle.contains((r3 'this' I:org.mapsforge.map.layer.overlay.FixedPixelCircle A[IMMUTABLE_TYPE, THIS]), (r4 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_14;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

