digraph "CFG fororg.mapsforge.map.layer.overlay.FixedPixelCircle.getRadiusInPixels(DB)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|float r1 = getRadius()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r0.scaleRadius == false) goto L_0x000f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|float r2 = r0.displayModel.getScaleFactor()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|r2 = 1.0f\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|PHI: r2 \l  PHI: (r2v1 float) = (r2v2 float), (r2v4 float) binds: [B:3:0x000f, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|RETURN\l|return (int) (r1 * r2)\l}"];
MethodNode[shape=record,label="{protected int org.mapsforge.map.layer.overlay.FixedPixelCircle.getRadiusInPixels((r0v0 'this' org.mapsforge.map.layer.overlay.FixedPixelCircle A[IMMUTABLE_TYPE, THIS]), (r1v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

