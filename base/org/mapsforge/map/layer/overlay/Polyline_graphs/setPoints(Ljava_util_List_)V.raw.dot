digraph "CFG fororg.mapsforge.map.layer.overlay.Polyline.setPoints(Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.List\<org.mapsforge.core.model.LatLong\>) = (r1 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.latLongs java.util.List A[Catch:\{ all \-\> 0x0010 \}, TRY_ENTER]\l0x0003: INVOKE  (r0 I:java.util.List) java.util.List.clear():void type: INTERFACE A[Catch:\{ all \-\> 0x0010 \}]\l0x0006: IGET  (r0 I:java.util.List\<org.mapsforge.core.model.LatLong\>) = (r1 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.latLongs java.util.List A[Catch:\{ all \-\> 0x0010 \}]\l0x0008: INVOKE  (r0 I:java.util.List), (r2 I:java.util.Collection) java.util.List.addAll(java.util.Collection):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0010 \}]\l0x000b: INVOKE  (r1 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.updatePoints():void type: DIRECT A[Catch:\{ all \-\> 0x0010 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0010: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.layer.overlay.Polyline.setPoints((r1 'this' I:org.mapsforge.map.layer.overlay.Polyline A[IMMUTABLE_TYPE, THIS]), (r2 I:java.util.List\<org.mapsforge.core.model.LatLong\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lorg\/mapsforge\/core\/model\/LatLong;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

