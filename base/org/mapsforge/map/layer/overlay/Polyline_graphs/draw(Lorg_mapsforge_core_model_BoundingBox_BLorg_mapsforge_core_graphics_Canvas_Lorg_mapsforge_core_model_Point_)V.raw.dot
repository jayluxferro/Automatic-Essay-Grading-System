digraph "CFG fororg.mapsforge.map.layer.overlay.Polyline.draw(Lorg\/mapsforge\/core\/model\/BoundingBox;BLorg\/mapsforge\/core\/graphics\/Canvas;Lorg\/mapsforge\/core\/model\/Point;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:java.util.List\<org.mapsforge.core.model.LatLong\>) = (r8 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.latLongs java.util.List A[Catch:\{ all \-\> 0x0092 \}, TRY_ENTER]\l0x0003: INVOKE  (r0 I:boolean) = (r0 I:java.util.List) java.util.List.isEmpty():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0090 A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IGET  (r0 I:org.mapsforge.core.graphics.Paint) = (r8 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.paintStroke org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000f A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: GOTO  \-\> 0x0090 A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: IGET  (r0 I:org.mapsforge.core.model.BoundingBox) = (r8 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.boundingBox org.mapsforge.core.model.BoundingBox A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001d A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: IGET  (r0 I:org.mapsforge.core.model.BoundingBox) = (r8 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.boundingBox org.mapsforge.core.model.BoundingBox A[Catch:\{ all \-\> 0x0092 \}]\l0x0015: INVOKE  (r9 I:boolean) = \l  (r0 I:org.mapsforge.core.model.BoundingBox)\l  (r9 I:org.mapsforge.core.model.BoundingBox)\l org.mapsforge.core.model.BoundingBox.intersects(org.mapsforge.core.model.BoundingBox):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0092 \}]\l0x0018: NOP   A[TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001d \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: MONITOR_EXIT  (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|0x001c: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|SYNTHETIC\lSplitter:B:13:0x001d\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x001d\l|0x001d: IGET  (r9 I:java.util.List\<org.mapsforge.core.model.LatLong\>) = (r8 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.latLongs java.util.List A[Catch:\{ all \-\> 0x0092 \}, TRY_ENTER]\l0x001f: INVOKE  (r9 I:java.util.Iterator) = (r9 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}]\l0x0023: INVOKE  (r0 I:boolean) = (r9 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}]\l0x0026: NOP   A[TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|0x0027: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x002b \l}"];
Node_16 [shape=record,label="{16\:\ 0x0029|0x0029: MONITOR_EXIT  (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002a|0x002a: RETURN   \l}"];
Node_18 [shape=record,label="{18\:\ 0x002b|SYNTHETIC\lSplitter:B:18:0x002b\l}"];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x002b\l|0x002b: INVOKE  (r0 I:java.lang.Object) = (r9 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}, TRY_ENTER]\l0x002f: CHECK_CAST  (r0 I:org.mapsforge.core.model.LatLong) = (org.mapsforge.core.model.LatLong) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0092 \}]\l0x0031: IGET  (r1 I:org.mapsforge.map.model.DisplayModel) = (r8 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.displayModel org.mapsforge.map.model.DisplayModel A[Catch:\{ all \-\> 0x0092 \}]\l0x0033: INVOKE  (r1 I:int) = (r1 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL A[Catch:\{ all \-\> 0x0092 \}]\l0x0037: INVOKE  (r1 I:long) = (r10 I:byte), (r1 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC A[Catch:\{ all \-\> 0x0092 \}]\l0x003b: IGET  (r3 I:double) = (r0 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double A[Catch:\{ all \-\> 0x0092 \}]\l0x003d: INVOKE  (r3 I:double) = (r3 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC A[Catch:\{ all \-\> 0x0092 \}]\l0x0041: IGET  (r5 I:double) = (r12 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double A[Catch:\{ all \-\> 0x0092 \}]\l0x0043: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0092 \}]\l0x0044: ARITH  (r3 I:double) = (r3 I:double) \- (r5 I:double) A[Catch:\{ all \-\> 0x0092 \}]\l0x0045: CAST  (r10 I:float) = (float) (r3 I:double) A[Catch:\{ all \-\> 0x0092 \}]\l0x0046: IGET  (r3 I:double) = (r0 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double A[Catch:\{ all \-\> 0x0092 \}]\l0x0048: INVOKE  (r3 I:double) = (r3 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC A[Catch:\{ all \-\> 0x0092 \}]\l0x004c: IGET  (r5 I:double) = (r12 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double A[Catch:\{ all \-\> 0x0092 \}]\l0x004e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0092 \}]\l0x004f: ARITH  (r3 I:double) = (r3 I:double) \- (r5 I:double) A[Catch:\{ all \-\> 0x0092 \}]\l0x0050: CAST  (r0 I:float) = (float) (r3 I:double) A[Catch:\{ all \-\> 0x0092 \}]\l0x0051: IGET  (r3 I:org.mapsforge.core.graphics.GraphicFactory) = (r8 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.graphicFactory org.mapsforge.core.graphics.GraphicFactory A[Catch:\{ all \-\> 0x0092 \}]\l0x0053: INVOKE  (r3 I:org.mapsforge.core.graphics.Path) = (r3 I:org.mapsforge.core.graphics.GraphicFactory) org.mapsforge.core.graphics.GraphicFactory.createPath():org.mapsforge.core.graphics.Path type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}]\l0x0057: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.Path)\l  (r10 I:float)\l  (r0 I:float)\l org.mapsforge.core.graphics.Path.moveTo(float, float):void type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x005a|0x005a: INVOKE  (r10 I:boolean) = (r9 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x005e|0x005e: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0080 A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0060|0x0060: INVOKE  (r10 I:java.lang.Object) = (r9 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}]\l0x0064: CHECK_CAST  (r10 I:org.mapsforge.core.model.LatLong) = (org.mapsforge.core.model.LatLong) (r10 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0092 \}]\l0x0066: IGET  (r4 I:double) = (r10 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.longitude double A[Catch:\{ all \-\> 0x0092 \}]\l0x0068: INVOKE  (r4 I:double) = (r4 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC A[Catch:\{ all \-\> 0x0092 \}]\l0x006c: IGET  (r6 I:double) = (r12 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double A[Catch:\{ all \-\> 0x0092 \}]\l0x006e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0092 \}]\l0x006f: ARITH  (r4 I:double) = (r4 I:double) \- (r6 I:double) A[Catch:\{ all \-\> 0x0092 \}]\l0x0070: CAST  (r0 I:float) = (float) (r4 I:double) A[Catch:\{ all \-\> 0x0092 \}]\l0x0071: IGET  (r4 I:double) = (r10 I:org.mapsforge.core.model.LatLong) org.mapsforge.core.model.LatLong.latitude double A[Catch:\{ all \-\> 0x0092 \}]\l0x0073: INVOKE  (r4 I:double) = (r4 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC A[Catch:\{ all \-\> 0x0092 \}]\l0x0077: IGET  (r6 I:double) = (r12 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double A[Catch:\{ all \-\> 0x0092 \}]\l0x0079: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0092 \}]\l0x007a: ARITH  (r4 I:double) = (r4 I:double) \- (r6 I:double) A[Catch:\{ all \-\> 0x0092 \}]\l0x007b: CAST  (r10 I:float) = (float) (r4 I:double) A[Catch:\{ all \-\> 0x0092 \}]\l0x007c: INVOKE  \l  (r3 I:org.mapsforge.core.graphics.Path)\l  (r0 I:float)\l  (r10 I:float)\l org.mapsforge.core.graphics.Path.lineTo(float, float):void type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}]\l0x007f: GOTO  \-\> 0x005a A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0080|0x0080: IGET  (r9 I:boolean) = (r8 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.keepAligned boolean A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0082|0x0082: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0089 A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0084|0x0084: IGET  (r9 I:org.mapsforge.core.graphics.Paint) = (r8 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.paintStroke org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0092 \}]\l0x0086: INVOKE  \l  (r9 I:org.mapsforge.core.graphics.Paint)\l  (r12 I:org.mapsforge.core.model.Point)\l org.mapsforge.core.graphics.Paint.setBitmapShaderShift(org.mapsforge.core.model.Point):void type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0089|0x0089: IGET  (r9 I:org.mapsforge.core.graphics.Paint) = (r8 I:org.mapsforge.map.layer.overlay.Polyline) org.mapsforge.map.layer.overlay.Polyline.paintStroke org.mapsforge.core.graphics.Paint A[Catch:\{ all \-\> 0x0092 \}]\l0x008b: INVOKE  \l  (r11 I:org.mapsforge.core.graphics.Canvas)\l  (r3 I:org.mapsforge.core.graphics.Path)\l  (r9 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawPath(org.mapsforge.core.graphics.Path, org.mapsforge.core.graphics.Paint):void type: INTERFACE A[Catch:\{ all \-\> 0x0092 \}, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x008e|0x008e: MONITOR_EXIT  (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x008f|0x008f: RETURN   \l}"];
Node_29 [shape=record,label="{29\:\ 0x0090|0x0090: MONITOR_EXIT  (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0091|0x0091: RETURN   \l}"];
Node_31 [shape=record,label="{31\:\ 0x0092|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0092: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x0093|0x0093: MONITOR_EXIT  (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0094|0x0094: THROW  (r9 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.layer.overlay.Polyline.draw((r8 'this' I:org.mapsforge.map.layer.overlay.Polyline A[IMMUTABLE_TYPE, THIS]), (r9 I:org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_31;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_29;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_29;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_31;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_18 -> Node_31;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_20;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33;
}

