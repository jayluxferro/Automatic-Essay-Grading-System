digraph "CFG fororg.mapsforge.map.layer.overlay.Grid.draw(Lorg\/mapsforge\/core\/model\/BoundingBox;BLorg\/mapsforge\/core\/graphics\/Canvas;Lorg\/mapsforge\/core\/model\/Point;)V" {
subgraph cluster_Region_1930030685 {
label = "R(2:0|(1:(12:2|(1:5)|6|(1:9)|10|(1:13)|14|(1:17)|18|(1:21)|22|(1:25))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r31\lorg.mapsforge.core.model.BoundingBox r1 = r32\lorg.mapsforge.core.graphics.Canvas r7 = r34\lorg.mapsforge.core.model.Point r8 = r35\l}"];
subgraph cluster_Region_1282527255 {
label = "R(1:(12:2|(1:5)|6|(1:9)|10|(1:13)|14|(1:17)|18|(1:21)|22|(1:25)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1334185090 {
label = "IF [B:1:0x0012] THEN: R(12:2|(1:5)|6|(1:9)|10|(1:13)|14|(1:17)|18|(1:21)|22|(1:25)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0012|if (r0.spacingConfig.containsKey(java.lang.Byte.valueOf(r33)) == true) goto L_0x0014\l}"];
subgraph cluster_Region_335680600 {
label = "R(12:2|(1:5)|6|(1:9)|10|(1:13)|14|(1:17)|18|(1:21)|22|(1:25))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0014|double double r9 = r0.spacingConfig.get(java.lang.Byte.valueOf(r33)).doubleValue()\ldouble double r11 = r9 * java.lang.Math.floor(r1.minLongitude \/ r9)\ldouble double r13 = r9 * java.lang.Math.ceil(r1.maxLongitude \/ r9)\ldouble double r5 = r9 * java.lang.Math.floor(r1.minLatitude \/ r9)\ldouble double r3 = r9 * java.lang.Math.ceil(r1.maxLatitude \/ r9)\llong long r1 = org.mapsforge.core.util.MercatorProjection.getMapSize(r33, r0.displayModel.getTileSize())\ldouble r17 = r5\lint int r15 = (int) (org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r5, r1) \- r8.f267y)\ldouble r19 = r9\lint int r9 = (int) (org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r3, r1) \- r8.f267y)\ldouble r21 = r11\lint int r10 = (int) (org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r11, r1) \- r8.f266x)\lint int r11 = (int) (org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r13, r1) \- r8.f266x)\ldouble r5 = r17\l}"];
subgraph cluster_LoopRegion_24816985 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x007f|if (r5 \<= r3) goto L_0x0081\l}"];
subgraph cluster_Region_1023951999 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0081|LOOP_END\lLOOP:0: B:3:0x007d\-\>B:5:0x0081\l|int int r12 = (int) (org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r5, r1) \- r8.f267y)\llong r7 = r1\lr34.drawLine(r10, r12, r11, r12, r0.lineBack)\lr5 += r19\lr1 = r7\lr3 = r3\lorg.mapsforge.core.graphics.Canvas r7 = r34\lr8 = r35\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x00ab|long r7 = r1\ldouble r23 = r3\ldouble r5 = r21\l}"];
subgraph cluster_LoopRegion_98490734 {
label = "LOOP:1: (1:9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x00b2|if (r5 \<= r13) goto L_0x00b4\l}"];
subgraph cluster_Region_966370054 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x00b4|LOOP_END\lLOOP:1: B:7:0x00b0\-\>B:9:0x00b4\l|int int r4 = (int) (org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r5, r7) \- r35.f266x)\lr34.drawLine(r4, r15, r4, r9, r0.lineBack)\lr5 += r19\lr7 = r7\lr13 = r13\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x00d7|double r29 = r13\llong r12 = r7\lorg.mapsforge.core.model.Point r7 = r35\ldouble r5 = r17\l}"];
subgraph cluster_LoopRegion_2125347509 {
label = "LOOP:2: (1:13)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x00e0|if (r5 \<= r23) goto L_0x00e2\l}"];
subgraph cluster_Region_771350642 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x00e2|LOOP_END\lLOOP:2: B:11:0x00de\-\>B:13:0x00e2\l|int int r8 = (int) (org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r5, r12) \- r7.f267y)\lr34.drawLine(r10, r8, r11, r8, r0.lineFront)\lr5 += r19\l}"];
}
}
Node_14 [shape=record,label="{14\:\ 0x00fb|double r10 = r21\l}"];
subgraph cluster_LoopRegion_571280618 {
label = "LOOP:3: (1:17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x00ff|if (r10 \<= r29) goto L_0x0101\l}"];
subgraph cluster_Region_2034076265 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0101|LOOP_END\lLOOP:3: B:15:0x00fd\-\>B:17:0x0101\l|int int r4 = (int) (org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r10, r12) \- r7.f266x)\lr34.drawLine(r4, r15, r4, r9, r0.lineFront)\lr10 += r19\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x0116|double r1 = r17\l}"];
subgraph cluster_LoopRegion_182138869 {
label = "LOOP:4: (1:21)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x011a|if (r1 \<= r23) goto L_0x011c\l}"];
subgraph cluster_Region_1908073409 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x011c|LOOP_END\lLOOP:4: B:19:0x0118\-\>B:21:0x011c\l|java.lang.String java.lang.String r3 = convertCoordinate(r1)\lint int r4 = (r34.getWidth() \- r0.textFront.getTextWidth(r3)) \/ 2\lint int r5 = ((int) (org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(r1, r12) \- r7.f267y)) + (r0.textFront.getTextHeight(r3) \/ 2)\lorg.mapsforge.core.graphics.Canvas r8 = r34\lr8.drawText(r3, r4, r5, r0.textBack)\lr8.drawText(r3, r4, r5, r0.textFront)\lr1 += r19\l}"];
}
}
Node_22 [shape=record,label="{22\:\ 0x014d|org.mapsforge.core.graphics.Canvas r8 = r34\ldouble r1 = r21\l}"];
subgraph cluster_LoopRegion_1690386781 {
label = "LOOP:5: (1:25)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0153|if (r1 \<= r29) goto L_0x0155\l}"];
subgraph cluster_Region_114935751 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0155|LOOP_END\lLOOP:5: B:23:0x0151\-\>B:25:0x0155\l|java.lang.String java.lang.String r3 = convertCoordinate(r1)\lint int r4 = ((int) (org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(r1, r12) \- r7.f266x)) \- (r0.textFront.getTextWidth(r3) \/ 2)\lint int r5 = (r34.getHeight() + r0.textFront.getTextHeight(r3)) \/ 2\lr8.drawText(r3, r4, r5, r0.textBack)\lr8.drawText(r3, r4, r5, r0.textFront)\lr1 += r19\l}"];
}
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x007d|LOOP_START\lPHI: r1 r3 r5 r8 \l  PHI: (r1v7 long) = (r1v6 long), (r1v29 long) binds: [B:2:0x0014, B:5:0x0081] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 double) = (r3v2 double), (r3v15 double) binds: [B:2:0x0014, B:5:0x0081] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v10 double) = (r5v9 double), (r5v33 double) binds: [B:2:0x0014, B:5:0x0081] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 org.mapsforge.core.model.Point) = (r8v0 org.mapsforge.core.model.Point), (r8v7 org.mapsforge.core.model.Point) binds: [B:2:0x0014, B:5:0x0081] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x007d\-\>B:5:0x0081\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x00b0|LOOP_START\lPHI: r5 r7 r13 \l  PHI: (r5v12 double) = (r5v11 double), (r5v31 double) binds: [B:6:0x00ab, B:9:0x00b4] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 long) = (r7v1 long), (r7v5 long) binds: [B:6:0x00ab, B:9:0x00b4] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v1 double) = (r13v0 double), (r13v2 double) binds: [B:6:0x00ab, B:9:0x00b4] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x00b0\-\>B:9:0x00b4\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x00de|LOOP_START\lPHI: r5 \l  PHI: (r5v14 double) = (r5v13 double), (r5v29 double) binds: [B:10:0x00d7, B:13:0x00e2] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:11:0x00de\-\>B:13:0x00e2\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x00fd|LOOP_START\lPHI: r10 \l  PHI: (r10v3 double) = (r10v2 double), (r10v4 double) binds: [B:14:0x00fb, B:17:0x0101] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:15:0x00fd\-\>B:17:0x0101\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0118|LOOP_START\lPHI: r1 \l  PHI: (r1v12 double) = (r1v11 double), (r1v16 double) binds: [B:18:0x0116, B:21:0x011c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:19:0x0118\-\>B:21:0x011c\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0151|LOOP_START\lPHI: r1 \l  PHI: (r1v14 double) = (r1v13 double), (r1v15 double) binds: [B:22:0x014d, B:25:0x0155] A[DONT_GENERATE, DONT_INLINE]\lLOOP:5: B:23:0x0151\-\>B:25:0x0155\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x00ab|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x00d7|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x00fb|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0116|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x014d|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0184|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_33 [shape=record,color=red,label="{33\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.overlay.Grid.draw((r31v0 'this' org.mapsforge.map.layer.overlay.Grid A[IMMUTABLE_TYPE, THIS]), (r32v0 org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34v0 org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35v0 org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_32[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_26[style=dashed];
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_27[style=dashed];
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_12 -> Node_28[style=dashed];
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_16 -> Node_29[style=dashed];
Node_17 -> Node_15;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_20 -> Node_30[style=dashed];
Node_21 -> Node_19;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_24 -> Node_31[style=dashed];
Node_25 -> Node_23;
Node_3 -> Node_4;
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_15 -> Node_16;
Node_19 -> Node_20;
Node_23 -> Node_24;
Node_26 -> Node_6;
Node_27 -> Node_10;
Node_28 -> Node_14;
Node_29 -> Node_18;
Node_30 -> Node_22;
Node_31 -> Node_33;
}

