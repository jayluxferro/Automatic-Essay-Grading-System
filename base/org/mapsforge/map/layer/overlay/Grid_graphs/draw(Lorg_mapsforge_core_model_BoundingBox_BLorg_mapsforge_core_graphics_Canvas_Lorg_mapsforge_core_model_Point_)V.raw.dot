digraph "CFG fororg.mapsforge.map.layer.overlay.Grid.draw(Lorg\/mapsforge\/core\/model\/BoundingBox;BLorg\/mapsforge\/core\/graphics\/Canvas;Lorg\/mapsforge\/core\/model\/Point;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r32 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r35 I:?[OBJECT, ARRAY]) \l0x0008: IGET  (r2 I:java.util.Map\<java.lang.Byte, java.lang.Double\>) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.spacingConfig java.util.Map \l0x000a: INVOKE  (r3 I:java.lang.Byte) = (r33 I:byte) java.lang.Byte.valueOf(byte):java.lang.Byte type: STATIC \l0x000e: INVOKE  (r2 I:boolean) = (r2 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.containsKey(java.lang.Object):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0184 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: IGET  (r2 I:java.util.Map\<java.lang.Byte, java.lang.Double\>) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.spacingConfig java.util.Map \l0x0016: INVOKE  (r3 I:java.lang.Byte) = (r33 I:byte) java.lang.Byte.valueOf(byte):java.lang.Byte type: STATIC \l0x001a: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x001e: CHECK_CAST  (r2 I:java.lang.Double) = (java.lang.Double) (r2 I:?[OBJECT, ARRAY]) \l0x0020: INVOKE  (r9 I:double) = (r2 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0024: IGET  (r2 I:double) = (r1 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.minLongitude double \l0x0026: ARITH  (r2 I:double) = (r2 I:double) \/ (r9 I:double) \l0x0027: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.floor(double):double type: STATIC \l0x002b: ARITH  (r11 I:double) = (r9 I:double) * (r2 I:double) \l0x002d: IGET  (r2 I:double) = (r1 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.maxLongitude double \l0x002f: ARITH  (r2 I:double) = (r2 I:double) \/ (r9 I:double) \l0x0030: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x0034: ARITH  (r13 I:double) = (r9 I:double) * (r2 I:double) \l0x0036: IGET  (r2 I:double) = (r1 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.minLatitude double \l0x0038: ARITH  (r2 I:double) = (r2 I:double) \/ (r9 I:double) \l0x0039: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.floor(double):double type: STATIC \l0x003d: ARITH  (r5 I:double) = (r9 I:double) * (r2 I:double) \l0x003f: IGET  (r1 I:double) = (r1 I:org.mapsforge.core.model.BoundingBox) org.mapsforge.core.model.BoundingBox.maxLatitude double \l0x0041: ARITH  (r1 I:double) = (r1 I:double) \/ (r9 I:double) \l0x0042: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.ceil(double):double type: STATIC \l0x0046: ARITH  (r3 I:double) = (r9 I:double) * (r1 I:double) \l0x0048: IGET  (r1 I:org.mapsforge.map.model.DisplayModel) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.displayModel org.mapsforge.map.model.DisplayModel \l0x004a: INVOKE  (r1 I:int) = (r1 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.getTileSize():int type: VIRTUAL \l0x004e: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r33 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0050: INVOKE  (r1 I:long) = (r2 I:byte), (r1 I:int) org.mapsforge.core.util.MercatorProjection.getMapSize(byte, int):long type: STATIC \l0x0054: INVOKE  (r15 I:double) = (r5 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC \l0x0058: MOVE  (r17 I:?[long, double]) = (r5 I:?[long, double]) \l0x005a: IGET  (r5 I:double) = (r8 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x005c: ARITH  (r5 I:double) = (r15 I:double) \- (r5 I:double) \l0x005e: CAST  (r15 I:int) = (int) (r5 I:double) \l0x005f: INVOKE  (r5 I:double) = (r3 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC \l0x0063: MOVE  (r19 I:?[long, double]) = (r9 I:?[long, double]) \l0x0065: IGET  (r9 I:double) = (r8 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0067: ARITH  (r5 I:double) = (r5 I:double) \- (r9 I:double) \l0x0068: CAST  (r9 I:int) = (int) (r5 I:double) \l0x0069: INVOKE  (r5 I:double) = (r11 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC \l0x006d: MOVE  (r21 I:?[long, double]) = (r11 I:?[long, double]) \l0x006f: IGET  (r10 I:double) = (r8 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0071: ARITH  (r5 I:double) = (r5 I:double) \- (r10 I:double) \l0x0072: CAST  (r10 I:int) = (int) (r5 I:double) \l0x0073: INVOKE  (r5 I:double) = (r13 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC \l0x0077: IGET  (r11 I:double) = (r8 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0079: ARITH  (r5 I:double) = (r5 I:double) \- (r11 I:double) \l0x007a: CAST  (r11 I:int) = (int) (r5 I:double) \l0x007b: MOVE  (r5 I:?[long, double]) = (r17 I:?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x007d|0x007d: CMP_G  (r12 I:int) = (r5 I:double), (r3 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x007f|0x007f: IF  (r12 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:6:0x00ab \l}"];
Node_5 [shape=record,label="{5\:\ 0x0081|0x0081: INVOKE  (r23 I:double) = (r5 I:double), (r1 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC \l0x0085: MOVE  (r25 I:?[long, double]) = (r1 I:?[long, double]) \l0x0087: IGET  (r1 I:double) = (r8 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0089: ARITH  (r1 I:double) = (r23 I:double) \- (r1 I:double) \l0x008b: CAST  (r12 I:int) = (int) (r1 I:double) \l0x008c: IGET  (r2 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.lineBack org.mapsforge.core.graphics.Paint \l0x008e: MOVE  (r7 I:?[long, double]) = (r25 I:?[long, double]) \l0x0090: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0092: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0094: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0095: MOVE  (r23 I:?[long, double]) = (r3 I:?[long, double]) \l0x0097: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0098: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0099: MOVE  (r25 I:?[long, double]) = (r5 I:?[long, double]) \l0x009b: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009c: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x009e: INVOKE  \l  (r1 I:org.mapsforge.core.graphics.Canvas)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x00a1: ARITH  (r5 I:double) = (r25 I:double) + (r19 I:double) \l0x00a3: MOVE  (r1 I:?[long, double]) = (r7 I:?[long, double]) \l0x00a4: MOVE  (r3 I:?[long, double]) = (r23 I:?[long, double]) \l0x00a6: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x00a8: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r35 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x00ab|0x00ab: MOVE  (r7 I:?[long, double]) = (r1 I:?[long, double]) \l0x00ac: MOVE  (r23 I:?[long, double]) = (r3 I:?[long, double]) \l0x00ae: MOVE  (r5 I:?[long, double]) = (r21 I:?[long, double]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x00b0|0x00b0: CMP_G  (r1 I:int) = (r5 I:double), (r13 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x00b2|0x00b2: IF  (r1 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:10:0x00d7 \l}"];
Node_9 [shape=record,label="{9\:\ 0x00b4|0x00b4: INVOKE  (r1 I:double) = (r5 I:double), (r7 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC \l0x00b8: MOVE  (r27 I:?[long, double]) = (r7 I:?[long, double]) \l0x00ba: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r35 I:?[OBJECT, ARRAY]) \l0x00bc: IGET  (r3 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x00be: ARITH  (r1 I:double) = (r1 I:double) \- (r3 I:double) \l0x00bf: CAST  (r4 I:int) = (int) (r1 I:double) \l0x00c0: IGET  (r8 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.lineBack org.mapsforge.core.graphics.Paint \l0x00c2: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x00c4: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c5: MOVE  (r29 I:?[long, double]) = (r13 I:?[long, double]) \l0x00c7: MOVE  (r12 I:?[long, double]) = (r27 I:?[long, double]) \l0x00c9: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ca: MOVE  (r25 I:?[long, double]) = (r5 I:?[long, double]) \l0x00cc: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00cd: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x00ce: INVOKE  \l  (r1 I:org.mapsforge.core.graphics.Canvas)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x00d1: ARITH  (r5 I:double) = (r25 I:double) + (r19 I:double) \l0x00d3: MOVE  (r7 I:?[long, double]) = (r12 I:?[long, double]) \l0x00d4: MOVE  (r13 I:?[long, double]) = (r29 I:?[long, double]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x00d7|0x00d7: MOVE  (r29 I:?[long, double]) = (r13 I:?[long, double]) \l0x00d9: MOVE  (r12 I:?[long, double]) = (r7 I:?[long, double]) \l0x00da: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r35 I:?[OBJECT, ARRAY]) \l0x00dc: MOVE  (r5 I:?[long, double]) = (r17 I:?[long, double]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x00de|0x00de: CMP_G  (r1 I:int) = (r5 I:double), (r23 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x00e0|0x00e0: IF  (r1 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:14:0x00fb \l}"];
Node_13 [shape=record,label="{13\:\ 0x00e2|0x00e2: INVOKE  (r1 I:double) = (r5 I:double), (r12 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC \l0x00e6: IGET  (r3 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x00e8: ARITH  (r1 I:double) = (r1 I:double) \- (r3 I:double) \l0x00e9: CAST  (r8 I:int) = (int) (r1 I:double) \l0x00ea: IGET  (r14 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.lineFront org.mapsforge.core.graphics.Paint \l0x00ec: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x00ee: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ef: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00f0: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00f1: MOVE  (r25 I:?[long, double]) = (r5 I:?[long, double]) \l0x00f3: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00f4: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x00f5: INVOKE  \l  (r1 I:org.mapsforge.core.graphics.Canvas)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x00f8: ARITH  (r5 I:double) = (r25 I:double) + (r19 I:double) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00fb|0x00fb: MOVE  (r10 I:?[long, double]) = (r21 I:?[long, double]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x00fd|0x00fd: CMP_G  (r1 I:int) = (r10 I:double), (r29 I:double) \l}"];
Node_16 [shape=record,label="{16\:\ 0x00ff|0x00ff: IF  (r1 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:18:0x0116 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0101|0x0101: INVOKE  (r1 I:double) = (r10 I:double), (r12 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC \l0x0105: IGET  (r3 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x0107: ARITH  (r1 I:double) = (r1 I:double) \- (r3 I:double) \l0x0108: CAST  (r4 I:int) = (int) (r1 I:double) \l0x0109: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.lineFront org.mapsforge.core.graphics.Paint \l0x010b: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x010d: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x010e: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x010f: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0110: INVOKE  \l  (r1 I:org.mapsforge.core.graphics.Canvas)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawLine(int, int, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0113: ARITH  (r10 I:double) = (r10 I:double) + (r19 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0116|0x0116: MOVE  (r1 I:?[long, double]) = (r17 I:?[long, double]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0118|0x0118: CMP_G  (r3 I:int) = (r1 I:double), (r23 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x011a|0x011a: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:22:0x014d \l}"];
Node_21 [shape=record,label="{21\:\ 0x011c|0x011c: INVOKE  (r3 I:java.lang.String) = (r1 I:double) org.mapsforge.map.layer.overlay.Grid.convertCoordinate(double):java.lang.String type: STATIC \l0x0120: INVOKE  (r4 I:int) = (r34 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getWidth():int type: INTERFACE \l0x0124: IGET  (r5 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.textFront org.mapsforge.core.graphics.Paint \l0x0126: INVOKE  (r5 I:int) = \l  (r5 I:org.mapsforge.core.graphics.Paint)\l  (r3 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x012a: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x012b: ARITH  (r4 I:int) = (r4 I:int) \/ (2 int) \l0x012d: INVOKE  (r5 I:double) = (r1 I:double), (r12 I:long) org.mapsforge.core.util.MercatorProjection.latitudeToPixelY(double, long):double type: STATIC \l0x0131: IGET  (r8 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.y double \l0x0133: ARITH  (r5 I:double) = (r5 I:double) \- (r8 I:double) \l0x0134: CAST  (r5 I:int) = (int) (r5 I:double) \l0x0135: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.textFront org.mapsforge.core.graphics.Paint \l0x0137: INVOKE  (r6 I:int) = \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r3 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x013b: ARITH  (r6 I:int) = (r6 I:int) \/ (2 int) \l0x013d: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x013e: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.textBack org.mapsforge.core.graphics.Paint \l0x0140: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x0142: INVOKE  \l  (r8 I:org.mapsforge.core.graphics.Canvas)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0145: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.textFront org.mapsforge.core.graphics.Paint \l0x0147: INVOKE  \l  (r8 I:org.mapsforge.core.graphics.Canvas)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x014a: ARITH  (r1 I:double) = (r1 I:double) + (r19 I:double) \l}"];
Node_22 [shape=record,label="{22\:\ 0x014d|0x014d: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r34 I:?[OBJECT, ARRAY]) \l0x014f: MOVE  (r1 I:?[long, double]) = (r21 I:?[long, double]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0151|0x0151: CMP_G  (r3 I:int) = (r1 I:double), (r29 I:double) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0153|0x0153: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:26:0x0184 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0155|0x0155: INVOKE  (r3 I:java.lang.String) = (r1 I:double) org.mapsforge.map.layer.overlay.Grid.convertCoordinate(double):java.lang.String type: STATIC \l0x0159: INVOKE  (r4 I:double) = (r1 I:double), (r12 I:long) org.mapsforge.core.util.MercatorProjection.longitudeToPixelX(double, long):double type: STATIC \l0x015d: IGET  (r9 I:double) = (r7 I:org.mapsforge.core.model.Point) org.mapsforge.core.model.Point.x double \l0x015f: ARITH  (r4 I:double) = (r4 I:double) \- (r9 I:double) \l0x0160: CAST  (r4 I:int) = (int) (r4 I:double) \l0x0161: IGET  (r5 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.textFront org.mapsforge.core.graphics.Paint \l0x0163: INVOKE  (r5 I:int) = \l  (r5 I:org.mapsforge.core.graphics.Paint)\l  (r3 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextWidth(java.lang.String):int type: INTERFACE \l0x0167: ARITH  (r5 I:int) = (r5 I:int) \/ (2 int) \l0x0169: ARITH  (r4 I:int) = (r4 I:int) \- (r5 I:int) \l0x016a: INVOKE  (r5 I:int) = (r34 I:org.mapsforge.core.graphics.Canvas) org.mapsforge.core.graphics.Canvas.getHeight():int type: INTERFACE \l0x016e: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.textFront org.mapsforge.core.graphics.Paint \l0x0170: INVOKE  (r6 I:int) = \l  (r6 I:org.mapsforge.core.graphics.Paint)\l  (r3 I:java.lang.String)\l org.mapsforge.core.graphics.Paint.getTextHeight(java.lang.String):int type: INTERFACE \l0x0174: ARITH  (r5 I:int) = (r5 I:int) + (r6 I:int) \l0x0175: ARITH  (r5 I:int) = (r5 I:int) \/ (2 int) \l0x0177: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.textBack org.mapsforge.core.graphics.Paint \l0x0179: INVOKE  \l  (r8 I:org.mapsforge.core.graphics.Canvas)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x017c: IGET  (r6 I:org.mapsforge.core.graphics.Paint) = (r0 I:org.mapsforge.map.layer.overlay.Grid) org.mapsforge.map.layer.overlay.Grid.textFront org.mapsforge.core.graphics.Paint \l0x017e: INVOKE  \l  (r8 I:org.mapsforge.core.graphics.Canvas)\l  (r3 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:org.mapsforge.core.graphics.Paint)\l org.mapsforge.core.graphics.Canvas.drawText(java.lang.String, int, int, org.mapsforge.core.graphics.Paint):void type: INTERFACE \l0x0181: ARITH  (r1 I:double) = (r1 I:double) + (r19 I:double) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0184|0x0184: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.overlay.Grid.draw((r31 'this' I:org.mapsforge.map.layer.overlay.Grid A[IMMUTABLE_TYPE, THIS]), (r32 I:org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35 I:org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_26;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_15;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_19;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_23;
}

