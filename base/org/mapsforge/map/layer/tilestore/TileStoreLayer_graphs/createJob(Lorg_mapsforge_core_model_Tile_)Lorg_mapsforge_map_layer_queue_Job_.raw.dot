digraph "CFG fororg.mapsforge.map.layer.tilestore.TileStoreLayer.createJob(Lorg\/mapsforge\/core\/model\/Tile;)Lorg\/mapsforge\/map\/layer\/queue\/Job;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:org.mapsforge.map.layer.queue.Job) =  org.mapsforge.map.layer.queue.Job \l0x0002: IGET  (r1 I:boolean) = (r2 I:org.mapsforge.map.layer.tilestore.TileStoreLayer) org.mapsforge.map.layer.tilestore.TileStoreLayer.isTransparent boolean \l0x0004: INVOKE  \l  (r0 I:org.mapsforge.map.layer.queue.Job)\l  (r3 I:org.mapsforge.core.model.Tile)\l  (r1 I:boolean)\l org.mapsforge.map.layer.queue.Job.\<init\>(org.mapsforge.core.model.Tile, boolean):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: RETURN  (r0 I:org.mapsforge.map.layer.queue.Job) \l}"];
MethodNode[shape=record,label="{protected org.mapsforge.map.layer.queue.Job org.mapsforge.map.layer.tilestore.TileStoreLayer.createJob((r2 'this' I:org.mapsforge.map.layer.tilestore.TileStoreLayer A[IMMUTABLE_TYPE, THIS]), (r3 I:org.mapsforge.core.model.Tile A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

