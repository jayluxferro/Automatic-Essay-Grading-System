digraph "CFG fororg.mapsforge.map.layer.tilestore.TileStoreLayer.\<init\>(Lorg\/mapsforge\/map\/layer\/cache\/TileCache;Lorg\/mapsforge\/map\/model\/IMapViewPosition;Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:org.mapsforge.core.graphics.Matrix) = (r9 I:org.mapsforge.core.graphics.GraphicFactory) org.mapsforge.core.graphics.GraphicFactory.createMatrix():org.mapsforge.core.graphics.Matrix type: INTERFACE \l0x0004: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0006: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0007: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0008: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: INVOKE  \l  (r0 I:org.mapsforge.map.layer.TileLayer)\l  (r1 I:org.mapsforge.map.layer.cache.TileCache)\l  (r2 I:org.mapsforge.map.model.IMapViewPosition)\l  (r3 I:org.mapsforge.core.graphics.Matrix)\l  (r4 I:boolean)\l  (r5 I:boolean)\l org.mapsforge.map.layer.TileLayer.\<init\>(org.mapsforge.map.layer.cache.TileCache, org.mapsforge.map.model.IMapViewPosition, org.mapsforge.core.graphics.Matrix, boolean, boolean):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.tilestore.TileStoreLayer.\<init\>((r6 'this' I:org.mapsforge.map.layer.tilestore.TileStoreLayer A[IMMUTABLE_TYPE, THIS]), (r7 I:org.mapsforge.map.layer.cache.TileCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.mapsforge.map.model.IMapViewPosition A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

