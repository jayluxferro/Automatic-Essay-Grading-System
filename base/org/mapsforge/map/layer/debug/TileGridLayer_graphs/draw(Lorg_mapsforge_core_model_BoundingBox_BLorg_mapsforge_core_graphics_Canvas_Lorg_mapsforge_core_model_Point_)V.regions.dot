digraph "CFG fororg.mapsforge.map.layer.debug.TileGridLayer.draw(Lorg\/mapsforge\/core\/model\/BoundingBox;BLorg\/mapsforge\/core\/graphics\/Canvas;Lorg\/mapsforge\/core\/model\/Point;)V" {
subgraph cluster_Region_788931979 {
label = "R(7:0|(2:1|(2:(1:14)|(1:3)))|4|(2:5|(2:(1:15)|(1:7)))|8|(1:10)|(1:12)) | DECL_VAR: int null, int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r17\lorg.mapsforge.core.model.BoundingBox r1 = r18\lbyte r2 = r19\lorg.mapsforge.core.model.Point r3 = r21\lint int r10 = r0.displayModel.getTileSize()\lint int r4 = (int) (((double) org.mapsforge.core.util.MercatorProjection.tileToPixel((long) org.mapsforge.core.util.MercatorProjection.longitudeToTileX(r1.minLongitude, r2), r10)) \- r3.f266x)\lint int r5 = (int) (((double) org.mapsforge.core.util.MercatorProjection.tileToPixel((long) org.mapsforge.core.util.MercatorProjection.latitudeToTileY(r1.maxLatitude, r2), r10)) \- r3.f267y)\ldouble double r8 = (double) r10\lint int r6 = (int) ((((double) org.mapsforge.core.util.MercatorProjection.tileToPixel((long) org.mapsforge.core.util.MercatorProjection.longitudeToTileX(r1.maxLongitude, r2), r10)) \- r3.f266x) + r8)\lint int r1 = (int) ((((double) org.mapsforge.core.util.MercatorProjection.tileToPixel((long) org.mapsforge.core.util.MercatorProjection.latitudeToTileY(r1.minLatitude, r2), r10)) \- r3.f267y) + r8)\lint r2 = r4\l}"];
subgraph cluster_LoopRegion_1591699662 {
label = "LOOP:0: (2:1|(2:(1:14)|(1:3)))";
node [shape=record,color=blue];
subgraph cluster_Region_274958694 {
label = "R(2:1|(2:(1:14)|(1:3)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0052|LOOP_START\lPHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v9 int) binds: [B:0:0x0000, B:3:0x0056] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0052\-\>B:3:0x0056\l|int r3 = r6 + 1\l}"];
subgraph cluster_Region_202161620 {
label = "R(2:(1:14)|(1:3))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_12100924 {
label = "IF [B:2:0x0054] THEN: R(1:14) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0054|if (r2 \> r3) goto L_0x0065\l}"];
subgraph cluster_Region_1984319798 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0065|SYNTHETIC\lEDGE_INSN: B:14:0x0065\-\>B:4:0x0065 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_1930606424 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0056|LOOP_END\lLOOP:0: B:1:0x0052\-\>B:3:0x0056\l|r20.drawLine(r2, r5, r2, r1, r0.paintBack)\lr2 += r10\l}"];
}
}
}
}
Node_4 [shape=record,label="{4\:\ 0x0065|EDGE_INSN: B:14:0x0065\-\>B:4:0x0065 ?: BREAK  \l|int r2 = r5\l}"];
subgraph cluster_LoopRegion_812983719 {
label = "LOOP:1: (2:5|(2:(1:15)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_1825313481 {
label = "R(2:5|(2:(1:15)|(1:7)))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0066|LOOP_START\lPHI: r2 \l  PHI: (r2v4 int) = (r2v3 int), (r2v8 int) binds: [B:4:0x0065, B:7:0x006a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:5:0x0066\-\>B:7:0x006a\l|int r7 = r1 + 1\l}"];
subgraph cluster_Region_357147263 {
label = "R(2:(1:15)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_460926750 {
label = "IF [B:6:0x0068] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0068|if (r2 \> r7) goto L_0x0079\l}"];
subgraph cluster_Region_2084720415 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0079|SYNTHETIC\lEDGE_INSN: B:15:0x0079\-\>B:8:0x0079 ?: BREAK  \l|break\l}"];
}
}
subgraph cluster_Region_645760014 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x006a|LOOP_END\lLOOP:1: B:5:0x0066\-\>B:7:0x006a\l|r20.drawLine(r4, r2, r6, r2, r0.paintBack)\lr2 += r10\l}"];
}
}
}
}
Node_8 [shape=record,label="{8\:\ 0x0079|EDGE_INSN: B:15:0x0079\-\>B:8:0x0079 ?: BREAK  \l|int r2 = r4\l}"];
subgraph cluster_LoopRegion_1660180945 {
label = "LOOP:2: (1:10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x007a|LOOP_START\lPHI: r2 \l  PHI: (r2v6 int) = (r2v5 int), (r2v7 int) binds: [B:8:0x0079, B:10:0x007c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:9:0x007a\-\>B:10:0x007c\l|if (r2 \<= r3) goto L_0x007c\l}"];
subgraph cluster_Region_2092962425 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x007c|LOOP_END\lLOOP:2: B:9:0x007a\-\>B:10:0x007c\l|r20.drawLine(r2, r5, r2, r1, r0.paintFront)\lr2 += r10\l}"];
}
}
subgraph cluster_LoopRegion_1343846501 {
label = "LOOP:3: (1:12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x008b|LOOP_START\lPHI: r5 \l  PHI: (r5v4 int) = (r5v3 int), (r5v5 int) binds: [B:16:0x008b, B:12:0x008d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:11:0x008b\-\>B:12:0x008d\l|if (r5 \<= r7) goto L_0x008d\l}"];
subgraph cluster_Region_445567694 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x008d|LOOP_END\lLOOP:3: B:11:0x008b\-\>B:12:0x008d\l|r20.drawLine(r4, r5, r6, r5, r0.paintFront)\lr5 += r10\l}"];
}
}
}
Node_13 [shape=record,color=red,label="{13\:\ 0x009c}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x008b|SYNTHETIC\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x009c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.debug.TileGridLayer.draw((r17v0 'this' org.mapsforge.map.layer.debug.TileGridLayer A[IMMUTABLE_TYPE, THIS]), (r18v0 org.mapsforge.core.model.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 byte A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 org.mapsforge.core.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 org.mapsforge.core.model.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_14;
Node_14 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_15 -> Node_8;
Node_7 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_16[style=dashed];
Node_10 -> Node_9;
Node_11 -> Node_12;
Node_11 -> Node_17[style=dashed];
Node_12 -> Node_11;
Node_16 -> Node_11;
Node_17 -> Node_13;
}

