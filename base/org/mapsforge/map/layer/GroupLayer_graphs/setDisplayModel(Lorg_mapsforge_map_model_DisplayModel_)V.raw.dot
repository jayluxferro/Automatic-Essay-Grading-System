digraph "CFG fororg.mapsforge.map.layer.GroupLayer.setDisplayModel(Lorg\/mapsforge\/map\/model\/DisplayModel;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  \l  (r2 I:org.mapsforge.map.layer.Layer)\l  (r3 I:org.mapsforge.map.model.DisplayModel)\l org.mapsforge.map.layer.Layer.setDisplayModel(org.mapsforge.map.model.DisplayModel):void type: SUPER A[Catch:\{ all \-\> 0x001c \}, TRY_ENTER]\l0x0004: IGET  (r0 I:java.util.List\<org.mapsforge.map.layer.Layer\>) = (r2 I:org.mapsforge.map.layer.GroupLayer) org.mapsforge.map.layer.GroupLayer.layers java.util.List A[Catch:\{ all \-\> 0x001c \}]\l0x0006: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001a A[Catch:\{ all \-\> 0x001c \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x001c \}]\l0x0014: CHECK_CAST  (r1 I:org.mapsforge.map.layer.Layer) = (org.mapsforge.map.layer.Layer) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001c \}]\l0x0016: INVOKE  \l  (r1 I:org.mapsforge.map.layer.Layer)\l  (r3 I:org.mapsforge.map.model.DisplayModel)\l org.mapsforge.map.layer.Layer.setDisplayModel(org.mapsforge.map.model.DisplayModel):void type: VIRTUAL A[Catch:\{ all \-\> 0x001c \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|0x001b: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x001c: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|0x001d: MONITOR_EXIT  (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|0x001e: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.layer.GroupLayer.setDisplayModel((r2 'this' I:org.mapsforge.map.layer.GroupLayer A[IMMUTABLE_TYPE, THIS]), (r3 I:org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_3;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

