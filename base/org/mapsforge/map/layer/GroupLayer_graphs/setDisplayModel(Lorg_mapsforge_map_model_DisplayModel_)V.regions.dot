digraph "CFG fororg.mapsforge.map.layer.GroupLayer.setDisplayModel(Lorg\/mapsforge\/map\/model\/DisplayModel;)V" {
subgraph cluster_Region_4676455 {
label = "R(1:(1:(2:2|(1:5))))";
node [shape=record,color=blue];
subgraph cluster_Region_1735063677 {
label = "R(1:(2:2|(1:5)))";
node [shape=record,color=blue];
subgraph cluster_Region_407718428 {
label = "R(2:2|(1:5))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|super.setDisplayModel(r3)\ljava.util.Iterator r0 = r2.layers.iterator()\l}"];
subgraph cluster_LoopRegion_1199031014 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r0.hasNext() != false) goto L_0x0010\l}"];
subgraph cluster_Region_2102469900 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|LOOP_END\lLOOP:0: B:3:0x000a\-\>B:5:0x0010\l|r1.setDisplayModel(r3)\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a|LOOP_START\lLOOP:0: B:3:0x000a\-\>B:5:0x0010\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001a|DONT_GENERATE\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001c|REMOVE\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001d|REMOVE\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001e|REMOVE\l|throw r3\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public synchronized void org.mapsforge.map.layer.GroupLayer.setDisplayModel((r2v0 'this' org.mapsforge.map.layer.GroupLayer A[IMMUTABLE_TYPE, THIS]), (r3v0 org.mapsforge.map.model.DisplayModel A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_11[style=dashed];
Node_5 -> Node_3;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_11 -> Node_6;
}

