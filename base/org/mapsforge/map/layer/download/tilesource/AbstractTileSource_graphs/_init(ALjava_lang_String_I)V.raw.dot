digraph "CFG fororg.mapsforge.map.layer.download.tilesource.AbstractTileSource.\<init\>([Ljava\/lang\/String;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[long, double]) = \l  (86400000(0x5265c00, double:4.2687272E\-316) ?[long, double])\l \l0x0006: IPUT  \l  (r0 I:long)\l  (r3 I:org.mapsforge.map.layer.download.tilesource.AbstractTileSource)\l org.mapsforge.map.layer.download.tilesource.AbstractTileSource.defaultTimeToLive long \l0x0008: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0009: IPUT  \l  (r0 I:boolean)\l  (r3 I:org.mapsforge.map.layer.download.tilesource.AbstractTileSource)\l org.mapsforge.map.layer.download.tilesource.AbstractTileSource.followRedirects boolean \l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"key\" \l0x000d: IPUT  \l  (r0 I:java.lang.String)\l  (r3 I:org.mapsforge.map.layer.download.tilesource.AbstractTileSource)\l org.mapsforge.map.layer.download.tilesource.AbstractTileSource.keyName java.lang.String \l0x000f: NEW_INSTANCE  (r0 I:java.util.Random) =  java.util.Random \l0x0011: INVOKE  (r0 I:java.util.Random) java.util.Random.\<init\>():void type: DIRECT \l0x0014: IPUT  \l  (r0 I:java.util.Random)\l  (r3 I:org.mapsforge.map.layer.download.tilesource.AbstractTileSource)\l org.mapsforge.map.layer.download.tilesource.AbstractTileSource.random java.util.Random \l0x0016: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (5000(0x1388, float:7.006E\-42) ?[int, float, short, byte, char])\l \l0x0018: IPUT  \l  (r0 I:int)\l  (r3 I:org.mapsforge.map.layer.download.tilesource.AbstractTileSource)\l org.mapsforge.map.layer.download.tilesource.AbstractTileSource.timeoutConnect int \l0x001a: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (10000(0x2710, float:1.4013E\-41) ?[int, float, short, byte, char])\l \l0x001c: IPUT  \l  (r0 I:int)\l  (r3 I:org.mapsforge.map.layer.download.tilesource.AbstractTileSource)\l org.mapsforge.map.layer.download.tilesource.AbstractTileSource.timeoutRead int \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x005d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0020|0x0020: ARRAY_LENGTH  (r0 I:int) = (r4 I:?[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x005d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:16:0x0046 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|0x0025: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (65535(0xffff, float:9.1834E\-41) ?[int, float, short, byte, char])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IF  (r5 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:16:0x0046 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: ARRAY_LENGTH  (r0 I:int) = (r4 I:?[]) \l0x002b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|0x002c: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:14:0x0041 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|0x002e: AGET  (r2 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x0030: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String) java.lang.String.isEmpty():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0039 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0036|0x0036: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x003b: CONST_STR  (r5 I:java.lang.String) =  \"empty host name in host name list\" \l0x003d: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|0x0040: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0041|0x0041: IPUT  \l  (r4 I:java.lang.String[])\l  (r3 I:org.mapsforge.map.layer.download.tilesource.AbstractTileSource)\l org.mapsforge.map.layer.download.tilesource.AbstractTileSource.hostNames java.lang.String[] \l0x0043: IPUT  \l  (r5 I:int)\l  (r3 I:org.mapsforge.map.layer.download.tilesource.AbstractTileSource)\l org.mapsforge.map.layer.download.tilesource.AbstractTileSource.port int \l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|0x0045: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|0x0046: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0048: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004a: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x004d: CONST_STR  (r1 I:java.lang.String) =  \"invalid port number: \" \l0x004f: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0052: INVOKE  (r0 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0055: INVOKE  (r5 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0059: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x005c|0x005c: THROW  (r4 I:java.lang.Throwable) \l}"];
Node_18 [shape=record,label="{18\:\ 0x005d|0x005d: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x005f: CONST_STR  (r5 I:java.lang.String) =  \"no host names specified\" \l0x0061: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r5 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0064|0x0064: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void org.mapsforge.map.layer.download.tilesource.AbstractTileSource.\<init\>((r3 'this' I:org.mapsforge.map.layer.download.tilesource.AbstractTileSource A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_18;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_16;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_18 -> Node_19;
}

