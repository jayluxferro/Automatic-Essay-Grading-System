digraph "CFG fororg.mapsforge.map.layer.download.TileDownloadThread.doWork()V" {
subgraph cluster_Region_1053186737 {
label = "R(3:0|(1:(1:4))|5)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.mapsforge.map.layer.download.DownloadJob org.mapsforge.map.layer.download.DownloadJob r0 = r5.jobQueue.get()\l}"];
subgraph cluster_TryCatchRegion_1842125305 {
label = "Try: R(1:(1:4)) catches: R(2:7|9), R(3:6|11|12)";
node [shape=record,color=blue];
subgraph cluster_Region_563309631 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_37820971 {
label = "IF [B:3:0x000e] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|Catch:\{ IOException \-\> 0x001b, all \-\> 0x0019 \}\l|if (r5.tileCache.containsKey(r0) == false) goto L_0x0010     \/\/ Catch:\{ IOException \-\> 0x001b, all \-\> 0x0019 \}\l}"];
subgraph cluster_Region_767592338 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|Catch:\{ IOException \-\> 0x001b, all \-\> 0x0019 \}\l|downloadTile(r0)     \/\/ Catch:\{ IOException \-\> 0x001b, all \-\> 0x0019 \}\l}"];
}
}
}
subgraph cluster_Region_1811227315 {
label = "R(2:7|9) | ExcHandler: IOException (r1v0 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001b|ExcHandler: IOException (r1v0 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0008\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ IOException \-\> 0x001b, all \-\> 0x0019 \}\lSplitter:B:8:0x001c\l|LOGGER.log(java.util.logging.Level.SEVERE, r1.getMessage(), r1)     \/\/ Catch:\{ IOException \-\> 0x001b, all \-\> 0x0019 \}\l}"];
}
subgraph cluster_Region_818567453 {
label = "R(3:6|11|12) | ExcHandler: all (r1v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|ExcHandler: all (r1v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:8:0x001c\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|r5.jobQueue.remove(r0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|throw r1\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0013|r5.jobQueue.remove(r0)\l}"];
}
subgraph cluster_Region_1811227315 {
label = "R(2:7|9) | ExcHandler: IOException (r1v0 'e' java.io.IOException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001b|ExcHandler: IOException (r1v0 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0008\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ IOException \-\> 0x001b, all \-\> 0x0019 \}\lSplitter:B:8:0x001c\l|LOGGER.log(java.util.logging.Level.SEVERE, r1.getMessage(), r1)     \/\/ Catch:\{ IOException \-\> 0x001b, all \-\> 0x0019 \}\l}"];
}
subgraph cluster_Region_818567453 {
label = "R(3:6|11|12) | ExcHandler: all (r1v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|ExcHandler: all (r1v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:8:0x001c\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|r5.jobQueue.remove(r0)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|throw r1\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,color=red,label="{2\:\ ?|Catch:\{ IOException \-\> 0x001b, all \-\> 0x0019 \}\lSplitter:B:1:0x0008\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001c|SYNTHETIC\lSplitter:B:8:0x001c\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0028}"];
MethodNode[shape=record,label="{protected void org.mapsforge.map.layer.download.TileDownloadThread.doWork((r5v0 'this' org.mapsforge.map.layer.download.TileDownloadThread A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_9 -> Node_6;
Node_9 -> Node_5;
Node_6 -> Node_11;
Node_11 -> Node_12;
Node_5 -> Node_10;
Node_7 -> Node_8;
Node_9 -> Node_6;
Node_9 -> Node_5;
Node_6 -> Node_11;
Node_11 -> Node_12;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_8 -> Node_9;
Node_8 -> Node_6;
}

