digraph "CFG fororg.mapsforge.map.layer.download.TileDownloadThread.doWork()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.layer.queue.JobQueue\<org.mapsforge.map.layer.download.DownloadJob\>) = (r5 I:org.mapsforge.map.layer.download.TileDownloadThread) org.mapsforge.map.layer.download.TileDownloadThread.jobQueue org.mapsforge.map.layer.queue.JobQueue \l0x0002: INVOKE  (r0 I:org.mapsforge.map.layer.queue.Job) = (r0 I:org.mapsforge.map.layer.queue.JobQueue) org.mapsforge.map.layer.queue.JobQueue.get():org.mapsforge.map.layer.queue.Job type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:org.mapsforge.map.layer.download.DownloadJob) = (org.mapsforge.map.layer.download.DownloadJob) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0008\l|0x0008: IGET  (r1 I:org.mapsforge.map.layer.cache.TileCache) = (r5 I:org.mapsforge.map.layer.download.TileDownloadThread) org.mapsforge.map.layer.download.TileDownloadThread.tileCache org.mapsforge.map.layer.cache.TileCache A[Catch:\{ IOException \-\> 0x001b \}, TRY_ENTER]\l0x000a: INVOKE  (r1 I:boolean) = \l  (r1 I:org.mapsforge.map.layer.cache.TileCache)\l  (r0 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.cache.TileCache.containsKey(org.mapsforge.map.layer.queue.Job):boolean type: INTERFACE A[Catch:\{ IOException \-\> 0x001b \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0013 A[Catch:\{ IOException \-\> 0x001b \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: INVOKE  \l  (r5 I:org.mapsforge.map.layer.download.TileDownloadThread)\l  (r0 I:org.mapsforge.map.layer.download.DownloadJob)\l org.mapsforge.map.layer.download.TileDownloadThread.downloadTile(org.mapsforge.map.layer.download.DownloadJob):void type: DIRECT A[Catch:\{ IOException \-\> 0x001b \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r1 I:org.mapsforge.map.layer.queue.JobQueue\<org.mapsforge.map.layer.download.DownloadJob\>) = (r5 I:org.mapsforge.map.layer.download.TileDownloadThread) org.mapsforge.map.layer.download.TileDownloadThread.jobQueue org.mapsforge.map.layer.queue.JobQueue \l0x0015: INVOKE  \l  (r1 I:org.mapsforge.map.layer.queue.JobQueue)\l  (r0 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.queue.JobQueue.remove(org.mapsforge.map.layer.queue.Job):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|ExcHandler: all null\lSplitter:B:9:0x001c\l|0x0019: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|ExcHandler: IOException null\lSplitter:B:1:0x0008\l|0x001b: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|SYNTHETIC\lSplitter:B:9:0x001c\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x001c\l|0x001c: SGET  (r2 I:java.util.logging.Logger) =  org.mapsforge.map.layer.download.TileDownloadThread.LOGGER java.util.logging.Logger A[Catch:\{ all \-\> 0x0019 \}, TRY_ENTER]\l0x001e: SGET  (r3 I:java.util.logging.Level) =  java.util.logging.Level.SEVERE java.util.logging.Level A[Catch:\{ all \-\> 0x0019 \}]\l0x0020: INVOKE  (r4 I:java.lang.String) = (r1 I:java.io.IOException) java.io.IOException.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0019 \}]\l0x0024: INVOKE  \l  (r2 I:java.util.logging.Logger)\l  (r3 I:java.util.logging.Level)\l  (r4 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable):void type: VIRTUAL A[Catch:\{ all \-\> 0x0019 \}, TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: RETURN   \l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|0x0029: IGET  (r2 I:org.mapsforge.map.layer.queue.JobQueue\<org.mapsforge.map.layer.download.DownloadJob\>) = (r5 I:org.mapsforge.map.layer.download.TileDownloadThread) org.mapsforge.map.layer.download.TileDownloadThread.jobQueue org.mapsforge.map.layer.queue.JobQueue \l0x002b: INVOKE  \l  (r2 I:org.mapsforge.map.layer.queue.JobQueue)\l  (r0 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.queue.JobQueue.remove(org.mapsforge.map.layer.queue.Job):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|0x002e: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void org.mapsforge.map.layer.download.TileDownloadThread.doWork((r5 'this' I:org.mapsforge.map.layer.download.TileDownloadThread A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.InterruptedException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_12;
Node_6 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_6;
Node_10 -> Node_6;
Node_10 -> Node_5;
Node_13 -> Node_14;
}

