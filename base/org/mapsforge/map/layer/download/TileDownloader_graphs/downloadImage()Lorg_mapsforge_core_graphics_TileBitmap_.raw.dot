digraph "CFG fororg.mapsforge.map.layer.download.TileDownloader.downloadImage()Lorg\/mapsforge\/core\/graphics\/TileBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x0002: IGET  (r0 I:org.mapsforge.map.layer.download.tilesource.TileSource) = (r0 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x0004: IGET  (r1 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x0006: IGET  (r1 I:org.mapsforge.core.model.Tile) = (r1 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tile org.mapsforge.core.model.Tile \l0x0008: INVOKE  (r0 I:java.net.URL) = \l  (r0 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l  (r1 I:org.mapsforge.core.model.Tile)\l org.mapsforge.map.layer.download.tilesource.TileSource.getTileUrl(org.mapsforge.core.model.Tile):java.net.URL type: INTERFACE \l0x000c: INVOKE  (r0 I:java.net.URLConnection) = (r0 I:java.net.URL) java.net.URL.openConnection():java.net.URLConnection type: VIRTUAL \l0x0010: IGET  (r1 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x0012: IGET  (r1 I:org.mapsforge.map.layer.download.tilesource.TileSource) = (r1 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x0014: INVOKE  (r1 I:int) = \l  (r1 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.getTimeoutConnect():int type: INTERFACE \l0x0018: INVOKE  (r0 I:java.net.URLConnection), (r1 I:int) java.net.URLConnection.setConnectTimeout(int):void type: VIRTUAL \l0x001b: IGET  (r1 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x001d: IGET  (r1 I:org.mapsforge.map.layer.download.tilesource.TileSource) = (r1 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x001f: INVOKE  (r1 I:int) = \l  (r1 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.getTimeoutRead():int type: INTERFACE \l0x0023: INVOKE  (r0 I:java.net.URLConnection), (r1 I:int) java.net.URLConnection.setReadTimeout(int):void type: VIRTUAL \l0x0026: IGET  (r1 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x0028: IGET  (r1 I:org.mapsforge.map.layer.download.tilesource.TileSource) = (r1 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x002a: INVOKE  (r1 I:java.lang.String) = \l  (r1 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.getUserAgent():java.lang.String type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x002e|0x002e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x003d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0030|0x0030: CONST_STR  (r1 I:java.lang.String) =  \"User\-Agent\" \l0x0032: IGET  (r2 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x0034: IGET  (r2 I:org.mapsforge.map.layer.download.tilesource.TileSource) = (r2 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x0036: INVOKE  (r2 I:java.lang.String) = \l  (r2 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.getUserAgent():java.lang.String type: INTERFACE \l0x003a: INVOKE  \l  (r0 I:java.net.URLConnection)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l java.net.URLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x003d|0x003d: IGET  (r1 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x003f: IGET  (r1 I:org.mapsforge.map.layer.download.tilesource.TileSource) = (r1 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x0041: INVOKE  (r1 I:java.lang.String) = \l  (r1 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.getReferer():java.lang.String type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0045|0x0045: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0054 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0047|0x0047: CONST_STR  (r1 I:java.lang.String) =  \"Referer\" \l0x0049: IGET  (r2 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x004b: IGET  (r2 I:org.mapsforge.map.layer.download.tilesource.TileSource) = (r2 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x004d: INVOKE  (r2 I:java.lang.String) = \l  (r2 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.getReferer():java.lang.String type: INTERFACE \l0x0051: INVOKE  \l  (r0 I:java.net.URLConnection)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l java.net.URLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0054|0x0054: IGET  (r1 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x0056: IGET  (r1 I:org.mapsforge.map.layer.download.tilesource.TileSource) = (r1 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x0058: INVOKE  (r1 I:java.lang.String) = \l  (r1 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.getAuthorization():java.lang.String type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x005c|0x005c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x006b \l}"];
Node_8 [shape=record,label="{8\:\ 0x005e|0x005e: CONST_STR  (r1 I:java.lang.String) =  \"Authorization\" \l0x0060: IGET  (r2 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x0062: IGET  (r2 I:org.mapsforge.map.layer.download.tilesource.TileSource) = (r2 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x0064: INVOKE  (r2 I:java.lang.String) = \l  (r2 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.getAuthorization():java.lang.String type: INTERFACE \l0x0068: INVOKE  \l  (r0 I:java.net.URLConnection)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l java.net.URLConnection.setRequestProperty(java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x006b|0x006b: INSTANCE_OF  (r1 I:boolean) = (r0 I:?[OBJECT, ARRAY]) java.net.HttpURLConnection \l}"];
Node_10 [shape=record,label="{10\:\ 0x006d|0x006d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x007d \l}"];
Node_11 [shape=record,label="{11\:\ 0x006f|0x006f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0070: CHECK_CAST  (r1 I:java.net.HttpURLConnection) = (java.net.HttpURLConnection) (r1 I:?[OBJECT, ARRAY]) \l0x0072: IGET  (r2 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob \l0x0074: IGET  (r2 I:org.mapsforge.map.layer.download.tilesource.TileSource) = (r2 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x0076: INVOKE  (r2 I:boolean) = \l  (r2 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.isFollowRedirects():boolean type: INTERFACE \l0x007a: INVOKE  (r1 I:java.net.HttpURLConnection), (r2 I:boolean) java.net.HttpURLConnection.setInstanceFollowRedirects(boolean):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x007d|0x007d: INVOKE  (r1 I:java.io.InputStream) = (r0 I:java.net.URLConnection) org.mapsforge.map.layer.download.TileDownloader.getInputStream(java.net.URLConnection):java.io.InputStream type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0081|SYNTHETIC\lSplitter:B:13:0x0081\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0081\l|0x0081: IGET  (r2 I:org.mapsforge.core.graphics.GraphicFactory) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.graphicFactory org.mapsforge.core.graphics.GraphicFactory A[Catch:\{ CorruptedInputStreamException \-\> 0x00a1, all \-\> 0x009c \}, TRY_ENTER]\l0x0083: IGET  (r3 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob A[Catch:\{ CorruptedInputStreamException \-\> 0x00a1, all \-\> 0x009c \}]\l0x0085: IGET  (r3 I:org.mapsforge.core.model.Tile) = (r3 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.tile org.mapsforge.core.model.Tile A[Catch:\{ CorruptedInputStreamException \-\> 0x00a1, all \-\> 0x009c \}]\l0x0087: IGET  (r3 I:int) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileSize int A[Catch:\{ CorruptedInputStreamException \-\> 0x00a1, all \-\> 0x009c \}]\l0x0089: IGET  (r4 I:org.mapsforge.map.layer.download.DownloadJob) = (r5 I:org.mapsforge.map.layer.download.TileDownloader) org.mapsforge.map.layer.download.TileDownloader.downloadJob org.mapsforge.map.layer.download.DownloadJob A[Catch:\{ CorruptedInputStreamException \-\> 0x00a1, all \-\> 0x009c \}]\l0x008b: IGET  (r4 I:boolean) = (r4 I:org.mapsforge.map.layer.download.DownloadJob) org.mapsforge.map.layer.download.DownloadJob.hasAlpha boolean A[Catch:\{ CorruptedInputStreamException \-\> 0x00a1, all \-\> 0x009c \}]\l0x008d: INVOKE  (r2 I:org.mapsforge.core.graphics.TileBitmap) = \l  (r2 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r1 I:java.io.InputStream)\l  (r3 I:int)\l  (r4 I:boolean)\l org.mapsforge.core.graphics.GraphicFactory.createTileBitmap(java.io.InputStream, int, boolean):org.mapsforge.core.graphics.TileBitmap type: INTERFACE A[Catch:\{ CorruptedInputStreamException \-\> 0x00a1, all \-\> 0x009c \}]\l0x0091: INVOKE  (r3 I:long) = (r0 I:java.net.URLConnection) java.net.URLConnection.getExpiration():long type: VIRTUAL A[Catch:\{ CorruptedInputStreamException \-\> 0x00a1, all \-\> 0x009c \}]\l0x0095: INVOKE  (r2 I:org.mapsforge.core.graphics.TileBitmap), (r3 I:long) org.mapsforge.core.graphics.TileBitmap.setExpiration(long):void type: INTERFACE A[Catch:\{ CorruptedInputStreamException \-\> 0x00a1, all \-\> 0x009c \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0098|0x0098: INVOKE  (r1 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x009b|0x009b: RETURN  (r2 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_17 [shape=record,label="{17\:\ 0x009c|ExcHandler: all null\lSplitter:B:13:0x0081\l|0x009c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x009d|0x009d: INVOKE  (r1 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a0|0x00a0: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00a1|0x00a1: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a2: INVOKE  (r1 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lExcHandler: CorruptedInputStreamException null\lSplitter:B:13:0x0081\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a5|0x00a5: RETURN  (r0 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
MethodNode[shape=record,label="{org.mapsforge.core.graphics.TileBitmap org.mapsforge.map.layer.download.TileDownloader.downloadImage((r5 'this' I:org.mapsforge.map.layer.download.TileDownloader A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_21;
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_22;
Node_21 -> Node_20;
}

