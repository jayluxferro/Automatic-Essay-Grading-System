digraph "CFG fororg.mapsforge.map.layer.download.TileDownloadLayer.\<init\>(Lorg\/mapsforge\/map\/layer\/cache\/TileCache;Lorg\/mapsforge\/map\/model\/IMapViewPosition;Lorg\/mapsforge\/map\/layer\/download\/tilesource\/TileSource;Lorg\/mapsforge\/core\/graphics\/GraphicFactory;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.mapsforge.core.graphics.Matrix) = (r6 I:org.mapsforge.core.graphics.GraphicFactory) org.mapsforge.core.graphics.GraphicFactory.createMatrix():org.mapsforge.core.graphics.Matrix type: INTERFACE \l0x0004: INVOKE  (r1 I:boolean) = \l  (r5 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.hasAlpha():boolean type: INTERFACE \l0x0008: INVOKE  \l  (r2 I:org.mapsforge.map.layer.TileLayer)\l  (r3 I:org.mapsforge.map.layer.cache.TileCache)\l  (r4 I:org.mapsforge.map.model.IMapViewPosition)\l  (r0 I:org.mapsforge.core.graphics.Matrix)\l  (r1 I:boolean)\l org.mapsforge.map.layer.TileLayer.\<init\>(org.mapsforge.map.layer.cache.TileCache, org.mapsforge.map.model.IMapViewPosition, org.mapsforge.core.graphics.Matrix, boolean):void type: DIRECT \l0x000b: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x000d: IPUT  \l  (r0 I:long)\l  (r2 I:org.mapsforge.map.layer.download.TileDownloadLayer)\l org.mapsforge.map.layer.download.TileDownloadLayer.cacheTimeToLive long \l0x000f: IPUT  \l  (r3 I:org.mapsforge.map.layer.cache.TileCache)\l  (r2 I:org.mapsforge.map.layer.download.TileDownloadLayer)\l org.mapsforge.map.layer.download.TileDownloadLayer.tileCache org.mapsforge.map.layer.cache.TileCache \l0x0011: IPUT  \l  (r5 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l  (r2 I:org.mapsforge.map.layer.download.TileDownloadLayer)\l org.mapsforge.map.layer.download.TileDownloadLayer.tileSource org.mapsforge.map.layer.download.tilesource.TileSource \l0x0013: INVOKE  (r3 I:long) = \l  (r5 I:org.mapsforge.map.layer.download.tilesource.TileSource)\l org.mapsforge.map.layer.download.tilesource.TileSource.getDefaultTimeToLive():long type: INTERFACE \l0x0017: IPUT  \l  (r3 I:long)\l  (r2 I:org.mapsforge.map.layer.download.TileDownloadLayer)\l org.mapsforge.map.layer.download.TileDownloadLayer.cacheTimeToLive long \l0x0019: IPUT  \l  (r6 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r2 I:org.mapsforge.map.layer.download.TileDownloadLayer)\l org.mapsforge.map.layer.download.TileDownloadLayer.graphicFactory org.mapsforge.core.graphics.GraphicFactory \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.download.TileDownloadLayer.\<init\>((r2 'this' I:org.mapsforge.map.layer.download.TileDownloadLayer A[IMMUTABLE_TYPE, THIS]), (r3 I:org.mapsforge.map.layer.cache.TileCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.mapsforge.map.model.IMapViewPosition A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.mapsforge.map.layer.download.tilesource.TileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

