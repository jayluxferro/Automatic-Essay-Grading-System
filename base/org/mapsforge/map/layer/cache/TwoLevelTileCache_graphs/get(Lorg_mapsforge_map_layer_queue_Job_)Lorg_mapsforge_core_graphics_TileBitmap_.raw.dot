digraph "CFG fororg.mapsforge.map.layer.cache.TwoLevelTileCache.get(Lorg\/mapsforge\/map\/layer\/queue\/Job;)Lorg\/mapsforge\/core\/graphics\/TileBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.layer.cache.TileCache) = (r2 I:org.mapsforge.map.layer.cache.TwoLevelTileCache) org.mapsforge.map.layer.cache.TwoLevelTileCache.firstLevelTileCache org.mapsforge.map.layer.cache.TileCache \l0x0002: INVOKE  (r0 I:org.mapsforge.core.graphics.TileBitmap) = \l  (r0 I:org.mapsforge.map.layer.cache.TileCache)\l  (r3 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.cache.TileCache.get(org.mapsforge.map.layer.queue.Job):org.mapsforge.core.graphics.TileBitmap type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: RETURN  (r0 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:org.mapsforge.map.layer.cache.TileCache) = (r2 I:org.mapsforge.map.layer.cache.TwoLevelTileCache) org.mapsforge.map.layer.cache.TwoLevelTileCache.secondLevelTileCache org.mapsforge.map.layer.cache.TileCache \l0x000b: INVOKE  (r0 I:org.mapsforge.core.graphics.TileBitmap) = \l  (r0 I:org.mapsforge.map.layer.cache.TileCache)\l  (r3 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.cache.TileCache.get(org.mapsforge.map.layer.queue.Job):org.mapsforge.core.graphics.TileBitmap type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: IGET  (r1 I:org.mapsforge.map.layer.cache.TileCache) = (r2 I:org.mapsforge.map.layer.cache.TwoLevelTileCache) org.mapsforge.map.layer.cache.TwoLevelTileCache.firstLevelTileCache org.mapsforge.map.layer.cache.TileCache \l0x0013: INVOKE  \l  (r1 I:org.mapsforge.map.layer.cache.TileCache)\l  (r3 I:org.mapsforge.map.layer.queue.Job)\l  (r0 I:org.mapsforge.core.graphics.TileBitmap)\l org.mapsforge.map.layer.cache.TileCache.put(org.mapsforge.map.layer.queue.Job, org.mapsforge.core.graphics.TileBitmap):void type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: RETURN  (r0 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: RETURN  (r3 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.graphics.TileBitmap org.mapsforge.map.layer.cache.TwoLevelTileCache.get((r2 'this' I:org.mapsforge.map.layer.cache.TwoLevelTileCache A[IMMUTABLE_TYPE, THIS]), (r3 I:org.mapsforge.map.layer.queue.Job A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
}

