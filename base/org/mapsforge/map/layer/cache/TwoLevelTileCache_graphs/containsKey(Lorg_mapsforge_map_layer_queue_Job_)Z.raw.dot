digraph "CFG fororg.mapsforge.map.layer.cache.TwoLevelTileCache.containsKey(Lorg\/mapsforge\/map\/layer\/queue\/Job;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.mapsforge.map.layer.cache.TileCache) = (r1 I:org.mapsforge.map.layer.cache.TwoLevelTileCache) org.mapsforge.map.layer.cache.TwoLevelTileCache.firstLevelTileCache org.mapsforge.map.layer.cache.TileCache \l0x0002: INVOKE  (r0 I:boolean) = \l  (r0 I:org.mapsforge.map.layer.cache.TileCache)\l  (r2 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.cache.TileCache.containsKey(org.mapsforge.map.layer.queue.Job):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:org.mapsforge.map.layer.cache.TileCache) = (r1 I:org.mapsforge.map.layer.cache.TwoLevelTileCache) org.mapsforge.map.layer.cache.TwoLevelTileCache.secondLevelTileCache org.mapsforge.map.layer.cache.TileCache \l0x000a: INVOKE  (r2 I:boolean) = \l  (r0 I:org.mapsforge.map.layer.cache.TileCache)\l  (r2 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.cache.TileCache.containsKey(org.mapsforge.map.layer.queue.Job):boolean type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0014|0x0014: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.mapsforge.map.layer.cache.TwoLevelTileCache.containsKey((r1 'this' I:org.mapsforge.map.layer.cache.TwoLevelTileCache A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.map.layer.queue.Job A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
}

