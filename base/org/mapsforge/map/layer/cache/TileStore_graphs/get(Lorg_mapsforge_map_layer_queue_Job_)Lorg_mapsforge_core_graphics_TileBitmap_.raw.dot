digraph "CFG fororg.mapsforge.map.layer.cache.TileStore.get(Lorg\/mapsforge\/map\/layer\/queue\/Job;)Lorg\/mapsforge\/core\/graphics\/TileBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r0 I:java.io.File) = \l  (r4 I:org.mapsforge.map.layer.cache.TileStore)\l  (r5 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.cache.TileStore.findFile(org.mapsforge.map.layer.queue.Job):java.io.File type: VIRTUAL A[Catch:\{ all \-\> 0x0034 \}, TRY_ENTER]\l0x0004: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: RETURN  (r1 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000a|SYNTHETIC\lSplitter:B:7:0x000a\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x000a\l|0x000a: NEW_INSTANCE  (r2 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ CorruptedInputStreamException \-\> 0x002e, IOException \-\> 0x0028, all \-\> 0x0022 \}, TRY_ENTER]\l0x000c: INVOKE  (r2 I:java.io.FileInputStream), (r0 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ CorruptedInputStreamException \-\> 0x002e, IOException \-\> 0x0028, all \-\> 0x0022 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x000f|SYNTHETIC\lSplitter:B:9:0x000f\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x000f\l|0x000f: IGET  (r0 I:org.mapsforge.core.graphics.GraphicFactory) = (r4 I:org.mapsforge.map.layer.cache.TileStore) org.mapsforge.map.layer.cache.TileStore.graphicFactory org.mapsforge.core.graphics.GraphicFactory A[Catch:\{ CorruptedInputStreamException \-\> 0x002f, IOException \-\> 0x0029, all \-\> 0x0020 \}, TRY_ENTER]\l0x0011: IGET  (r3 I:org.mapsforge.core.model.Tile) = (r5 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.tile org.mapsforge.core.model.Tile A[Catch:\{ CorruptedInputStreamException \-\> 0x002f, IOException \-\> 0x0029, all \-\> 0x0020 \}]\l0x0013: IGET  (r3 I:int) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileSize int A[Catch:\{ CorruptedInputStreamException \-\> 0x002f, IOException \-\> 0x0029, all \-\> 0x0020 \}]\l0x0015: IGET  (r5 I:boolean) = (r5 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.hasAlpha boolean A[Catch:\{ CorruptedInputStreamException \-\> 0x002f, IOException \-\> 0x0029, all \-\> 0x0020 \}]\l0x0017: INVOKE  (r5 I:org.mapsforge.core.graphics.TileBitmap) = \l  (r0 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r2 I:java.io.InputStream)\l  (r3 I:int)\l  (r5 I:boolean)\l org.mapsforge.core.graphics.GraphicFactory.createTileBitmap(java.io.InputStream, int, boolean):org.mapsforge.core.graphics.TileBitmap type: INTERFACE A[Catch:\{ CorruptedInputStreamException \-\> 0x002f, IOException \-\> 0x0029, all \-\> 0x0020 \}]\l0x001a: NOP   A[TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|SYNTHETIC\lSplitter:B:11:0x001b\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x001b\l|0x001b: INVOKE  (r2 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC A[Catch:\{ all \-\> 0x0034 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|0x001e: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|0x001f: RETURN  (r5 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0020|ExcHandler: all null\lSplitter:B:9:0x000f\l|0x0020: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0022|ExcHandler: all null\lSplitter:B:7:0x000a\l|0x0022: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0023|0x0023: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0024|SYNTHETIC\lSplitter:B:19:0x0024\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x0024\l|0x0024: INVOKE  (r2 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC A[Catch:\{ all \-\> 0x0034 \}, TRY_ENTER]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0027|0x0027: THROW  (r5 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0034 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0028|0x0028: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0034 \}]\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:7:0x000a\l}"];
Node_24 [shape=record,label="{24\:\ 0x0029|0x0029: INVOKE  (r2 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC A[Catch:\{ all \-\> 0x0034 \}, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:9:0x000f\l}"];
Node_26 [shape=record,label="{26\:\ 0x002c|0x002c: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x002d|0x002d: RETURN  (r1 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_28 [shape=record,label="{28\:\ 0x002e|0x002e: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lExcHandler: CorruptedInputStreamException null\lSplitter:B:7:0x000a\l}"];
Node_30 [shape=record,label="{30\:\ 0x002f|SYNTHETIC\lSplitter:B:30:0x002f\l}"];
Node_31 [shape=record,label="{31\:\ ?|Splitter:B:30:0x002f\l|0x002f: INVOKE  (r2 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC A[Catch:\{ all \-\> 0x0034 \}, ExcHandler: CorruptedInputStreamException null, TRY_ENTER, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0032|0x0032: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0033|0x0033: RETURN  (r1 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0034|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0034: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_35 [shape=record,label="{35\:\ 0x0035|0x0035: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x0036|0x0036: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized org.mapsforge.core.graphics.TileBitmap org.mapsforge.map.layer.cache.TileStore.get((r4 'this' I:org.mapsforge.map.layer.cache.TileStore A[IMMUTABLE_TYPE, THIS]), (r5 I:org.mapsforge.map.layer.queue.Job A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_34;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_29;
Node_7 -> Node_23;
Node_7 -> Node_17;
Node_8 -> Node_9;
Node_8 -> Node_29;
Node_8 -> Node_23;
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_9 -> Node_30;
Node_9 -> Node_25;
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_34;
Node_12 -> Node_13;
Node_12 -> Node_34;
Node_13 -> Node_14;
Node_15 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_34;
Node_20 -> Node_21;
Node_22 -> Node_24;
Node_23 -> Node_22;
Node_24 -> Node_26;
Node_25 -> Node_24;
Node_26 -> Node_27;
Node_28 -> Node_30;
Node_29 -> Node_28;
Node_30 -> Node_31;
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_31 -> Node_34;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_36;
}

