digraph "CFG fororg.mapsforge.map.layer.cache.TileStore.findFile(Lorg\/mapsforge\/map\/layer\/queue\/Job;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File \l0x0002: IGET  (r1 I:java.io.File) = (r6 I:org.mapsforge.map.layer.cache.TileStore) org.mapsforge.map.layer.cache.TileStore.rootDirectory java.io.File \l0x0004: IGET  (r2 I:org.mapsforge.core.model.Tile) = (r7 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.tile org.mapsforge.core.model.Tile \l0x0006: IGET  (r2 I:byte) = (r2 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.zoomLevel byte \l0x0008: INVOKE  (r2 I:java.lang.String) = (r2 I:byte) java.lang.Byte.toString(byte):java.lang.String type: STATIC \l0x000c: INVOKE  \l  (r0 I:java.io.File)\l  (r1 I:java.io.File)\l  (r2 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x000f: INVOKE  (r1 I:boolean) = (r0 I:java.io.File) java.io.File.isDirectory():boolean type: VIRTUAL \l0x0013: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x00b6 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: INVOKE  (r1 I:boolean) = (r0 I:java.io.File) java.io.File.canRead():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: NEW_INSTANCE  (r1 I:java.io.File) =  java.io.File \l0x0020: IGET  (r3 I:org.mapsforge.core.model.Tile) = (r7 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.tile org.mapsforge.core.model.Tile \l0x0022: IGET  (r3 I:int) = (r3 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileX int \l0x0024: CAST  (r3 I:long) = (long) (r3 I:int) \l0x0025: INVOKE  (r3 I:java.lang.String) = (r3 I:long) java.lang.Long.toString(long):java.lang.String type: STATIC \l0x0029: INVOKE  \l  (r1 I:java.io.File)\l  (r0 I:java.io.File)\l  (r3 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x002c: INVOKE  (r0 I:boolean) = (r1 I:java.io.File) java.io.File.isDirectory():boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x009b \l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|0x0032: INVOKE  (r0 I:boolean) = (r1 I:java.io.File) java.io.File.canRead():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0036|0x0036: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0039 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|0x0039: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File \l0x003b: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003d: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0040: IGET  (r7 I:org.mapsforge.core.model.Tile) = (r7 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.tile org.mapsforge.core.model.Tile \l0x0042: IGET  (r7 I:int) = (r7 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileY int \l0x0044: CAST  (r4 I:long) = (long) (r7 I:int) \l0x0045: INVOKE  (r7 I:java.lang.String) = (r4 I:long) java.lang.Long.toString(long):java.lang.String type: STATIC \l0x0049: INVOKE  (r3 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004c: IGET  (r7 I:java.lang.String) = (r6 I:org.mapsforge.map.layer.cache.TileStore) org.mapsforge.map.layer.cache.TileStore.suffix java.lang.String \l0x004e: INVOKE  (r3 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0051: INVOKE  (r7 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0055: INVOKE  \l  (r0 I:java.io.File)\l  (r1 I:java.io.File)\l  (r7 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x0058: INVOKE  (r7 I:boolean) = (r0 I:java.io.File) java.io.File.isFile():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x005c|0x005c: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0080 \l}"];
Node_12 [shape=record,label="{12\:\ 0x005e|0x005e: INVOKE  (r7 I:boolean) = (r0 I:java.io.File) java.io.File.canRead():boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0062|0x0062: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0065 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0065|0x0065: SGET  (r7 I:java.util.logging.Logger) =  org.mapsforge.map.layer.cache.TileStore.LOGGER java.util.logging.Logger \l0x0067: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0069: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x006c: CONST_STR  (r2 I:java.lang.String) =  \"Found file \" \l0x006e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0071: INVOKE  (r2 I:java.lang.String) = (r0 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x0075: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0078: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x007c: INVOKE  (r7 I:java.util.logging.Logger), (r1 I:java.lang.String) java.util.logging.Logger.info(java.lang.String):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x007f|0x007f: RETURN  (r0 I:java.io.File) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0080|0x0080: SGET  (r7 I:java.util.logging.Logger) =  org.mapsforge.map.layer.cache.TileStore.LOGGER java.util.logging.Logger \l0x0082: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0084: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0087: CONST_STR  (r3 I:java.lang.String) =  \"Failed to find file \" \l0x0089: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008c: INVOKE  (r0 I:java.lang.String) = (r0 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x0090: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0093: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0097: INVOKE  (r7 I:java.util.logging.Logger), (r0 I:java.lang.String) java.util.logging.Logger.info(java.lang.String):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x009a|0x009a: RETURN  (r2 I:java.io.File) \l}"];
Node_19 [shape=record,label="{19\:\ 0x009b|0x009b: SGET  (r7 I:java.util.logging.Logger) =  org.mapsforge.map.layer.cache.TileStore.LOGGER java.util.logging.Logger \l0x009d: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x009f: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00a2: CONST_STR  (r3 I:java.lang.String) =  \"Failed to find directory \" \l0x00a4: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a7: INVOKE  (r1 I:java.lang.String) = (r1 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x00ab: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ae: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b2: INVOKE  (r7 I:java.util.logging.Logger), (r0 I:java.lang.String) java.util.logging.Logger.info(java.lang.String):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x00b5|0x00b5: RETURN  (r2 I:java.io.File) \l}"];
Node_21 [shape=record,label="{21\:\ 0x00b6|0x00b6: SGET  (r7 I:java.util.logging.Logger) =  org.mapsforge.map.layer.cache.TileStore.LOGGER java.util.logging.Logger \l0x00b8: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00ba: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00bd: CONST_STR  (r3 I:java.lang.String) =  \"Failed to find directory \" \l0x00bf: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c2: INVOKE  (r0 I:java.lang.String) = (r0 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x00c6: INVOKE  (r1 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c9: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00cd: INVOKE  (r7 I:java.util.logging.Logger), (r0 I:java.lang.String) java.util.logging.Logger.info(java.lang.String):void type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x00d0|0x00d0: RETURN  (r2 I:java.io.File) \l}"];
MethodNode[shape=record,label="{protected java.io.File org.mapsforge.map.layer.cache.TileStore.findFile((r6 'this' I:org.mapsforge.map.layer.cache.TileStore A[IMMUTABLE_TYPE, THIS]), (r7 I:org.mapsforge.map.layer.queue.Job A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_21[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_19;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_19[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_21 -> Node_22;
}

