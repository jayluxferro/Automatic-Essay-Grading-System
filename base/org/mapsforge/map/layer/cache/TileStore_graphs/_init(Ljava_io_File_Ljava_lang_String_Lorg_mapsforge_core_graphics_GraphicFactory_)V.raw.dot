digraph "CFG fororg.mapsforge.map.layer.cache.TileStore.\<init\>(Ljava\/io\/File;Ljava\/lang\/String;Lorg\/mapsforge\/core\/graphics\/GraphicFactory;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r1 I:java.io.File)\l  (r0 I:org.mapsforge.map.layer.cache.TileStore)\l org.mapsforge.map.layer.cache.TileStore.rootDirectory java.io.File \l0x0005: IPUT  \l  (r3 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r0 I:org.mapsforge.map.layer.cache.TileStore)\l org.mapsforge.map.layer.cache.TileStore.graphicFactory org.mapsforge.core.graphics.GraphicFactory \l0x0007: IPUT  \l  (r2 I:java.lang.String)\l  (r0 I:org.mapsforge.map.layer.cache.TileStore)\l org.mapsforge.map.layer.cache.TileStore.suffix java.lang.String \l0x0009: IGET  (r1 I:java.io.File) = (r0 I:org.mapsforge.map.layer.cache.TileStore) org.mapsforge.map.layer.cache.TileStore.rootDirectory java.io.File \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IGET  (r1 I:java.io.File) = (r0 I:org.mapsforge.map.layer.cache.TileStore) org.mapsforge.map.layer.cache.TileStore.rootDirectory java.io.File \l0x000f: INVOKE  (r1 I:boolean) = (r1 I:java.io.File) java.io.File.isDirectory():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IGET  (r1 I:java.io.File) = (r0 I:org.mapsforge.map.layer.cache.TileStore) org.mapsforge.map.layer.cache.TileStore.rootDirectory java.io.File \l0x0017: INVOKE  (r1 I:boolean) = (r1 I:java.io.File) java.io.File.canRead():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0020: CONST_STR  (r2 I:java.lang.String) =  \"Root directory must be readable\" \l0x0022: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.cache.TileStore.\<init\>((r0 'this' I:org.mapsforge.map.layer.cache.TileStore A[IMMUTABLE_TYPE, THIS]), (r1 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
}

