digraph "CFG fororg.mapsforge.map.layer.cache.FileSystemTileCache.getOutputFile(Lorg\/mapsforge\/map\/layer\/queue\/Job;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(r2.cacheDirectory)\lr0.append(java.io.File.separator)\lr0.append(r3.getKey())\ljava.lang.String r3 = r0.toString()\l}"];
Node_1 [shape=record,label="{1\:\ 0x002e|if (isValidCacheDirectory(new java.io.File(r3.substring(0, r3.lastIndexOf(java.io.File.separatorChar)))) == false) goto L_0x0047\l}"];
Node_2 [shape=record,label="{2\:\ 0x0030|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(r3)\lr1.append(\".tile\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0046|RETURN\l|return new java.io.File(r1.toString())\l}"];
Node_4 [shape=record,label="{4\:\ 0x0047|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{private java.io.File org.mapsforge.map.layer.cache.FileSystemTileCache.getOutputFile((r2v0 'this' org.mapsforge.map.layer.cache.FileSystemTileCache A[IMMUTABLE_TYPE, THIS]), (r3v0 org.mapsforge.map.layer.queue.Job A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
}

