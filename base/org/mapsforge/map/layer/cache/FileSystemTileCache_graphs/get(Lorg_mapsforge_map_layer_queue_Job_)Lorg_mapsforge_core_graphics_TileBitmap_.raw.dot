digraph "CFG fororg.mapsforge.map.layer.cache.FileSystemTileCache.get(Lorg\/mapsforge\/map\/layer\/queue\/Job;)Lorg\/mapsforge\/core\/graphics\/TileBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock) = (r9 I:org.mapsforge.map.layer.cache.FileSystemTileCache) org.mapsforge.map.layer.cache.FileSystemTileCache.lock java.util.concurrent.locks.ReentrantReadWriteLock A[Catch:\{ all \-\> 0x008f \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) = (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock) java.util.concurrent.locks.ReentrantReadWriteLock.readLock():java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock type: VIRTUAL A[Catch:\{ all \-\> 0x008f \}]\l0x0006: INVOKE  \l  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock)\l java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.lock():void type: VIRTUAL A[Catch:\{ all \-\> 0x008f \}]\l0x0009: IGET  (r0 I:org.mapsforge.map.layer.cache.FileWorkingSetCache\<java.lang.String\>) = (r9 I:org.mapsforge.map.layer.cache.FileSystemTileCache) org.mapsforge.map.layer.cache.FileSystemTileCache.lruCache org.mapsforge.map.layer.cache.FileWorkingSetCache A[Catch:\{ all \-\> 0x008f \}]\l0x000b: INVOKE  (r1 I:java.lang.String) = (r10 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.getKey():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x008f \}]\l0x000f: INVOKE  (r0 I:java.lang.Object) = \l  (r0 I:org.mapsforge.map.layer.cache.FileWorkingSetCache)\l  (r1 I:java.lang.Object)\l org.mapsforge.map.layer.cache.FileWorkingSetCache.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x008f \}]\l0x0013: CHECK_CAST  (r0 I:java.io.File) = (java.io.File) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x008f \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: IGET  (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock) = (r9 I:org.mapsforge.map.layer.cache.FileSystemTileCache) org.mapsforge.map.layer.cache.FileSystemTileCache.lock java.util.concurrent.locks.ReentrantReadWriteLock \l0x0017: INVOKE  (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) = (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock) java.util.concurrent.locks.ReentrantReadWriteLock.readLock():java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock type: VIRTUAL \l0x001b: INVOKE  \l  (r1 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock)\l java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.unlock():void type: VIRTUAL \l0x001e: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0022 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: RETURN  (r1 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|SYNTHETIC\lSplitter:B:5:0x0022\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0022\l|0x0022: NEW_INSTANCE  (r2 I:java.io.FileInputStream) =  java.io.FileInputStream A[Catch:\{ CorruptedInputStreamException \-\> 0x0059, IOException \-\> 0x0045, all \-\> 0x0042 \}, TRY_ENTER]\l0x0024: INVOKE  (r2 I:java.io.FileInputStream), (r0 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ CorruptedInputStreamException \-\> 0x0059, IOException \-\> 0x0045, all \-\> 0x0042 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|SYNTHETIC\lSplitter:B:7:0x0027\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0027\l|0x0027: IGET  (r3 I:org.mapsforge.core.graphics.GraphicFactory) = (r9 I:org.mapsforge.map.layer.cache.FileSystemTileCache) org.mapsforge.map.layer.cache.FileSystemTileCache.graphicFactory org.mapsforge.core.graphics.GraphicFactory A[Catch:\{ CorruptedInputStreamException \-\> 0x0040, IOException \-\> 0x003e \}, TRY_ENTER]\l0x0029: IGET  (r4 I:org.mapsforge.core.model.Tile) = (r10 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.tile org.mapsforge.core.model.Tile A[Catch:\{ CorruptedInputStreamException \-\> 0x0040, IOException \-\> 0x003e \}]\l0x002b: IGET  (r4 I:int) = (r4 I:org.mapsforge.core.model.Tile) org.mapsforge.core.model.Tile.tileSize int A[Catch:\{ CorruptedInputStreamException \-\> 0x0040, IOException \-\> 0x003e \}]\l0x002d: IGET  (r5 I:boolean) = (r10 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.hasAlpha boolean A[Catch:\{ CorruptedInputStreamException \-\> 0x0040, IOException \-\> 0x003e \}]\l0x002f: INVOKE  (r3 I:org.mapsforge.core.graphics.TileBitmap) = \l  (r3 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r2 I:java.io.InputStream)\l  (r4 I:int)\l  (r5 I:boolean)\l org.mapsforge.core.graphics.GraphicFactory.createTileBitmap(java.io.InputStream, int, boolean):org.mapsforge.core.graphics.TileBitmap type: INTERFACE A[Catch:\{ CorruptedInputStreamException \-\> 0x0040, IOException \-\> 0x003e \}]\l0x0033: INVOKE  (r4 I:long) = (r0 I:java.io.File) java.io.File.lastModified():long type: VIRTUAL A[Catch:\{ CorruptedInputStreamException \-\> 0x0040, IOException \-\> 0x003e \}]\l0x0037: INVOKE  (r3 I:org.mapsforge.core.graphics.TileBitmap), (r4 I:long) org.mapsforge.core.graphics.TileBitmap.setTimestamp(long):void type: INTERFACE A[Catch:\{ CorruptedInputStreamException \-\> 0x0040, IOException \-\> 0x003e \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|0x003a: INVOKE  (r2 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x003d|0x003d: RETURN  (r3 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|ExcHandler: IOException null\lSplitter:B:7:0x0027\l|0x003e: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x0040|ExcHandler: CorruptedInputStreamException null\lSplitter:B:7:0x0027\l|0x0040: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|ExcHandler: all null\lSplitter:B:5:0x0022\l|0x0042: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_16 [shape=record,label="{16\:\ 0x0043|0x0043: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0045|ExcHandler: IOException null\lSplitter:B:5:0x0022\l|0x0045: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|0x0046: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|SYNTHETIC\lSplitter:B:19:0x0047\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x0047\l|0x0047: INVOKE  \l  (r9 I:org.mapsforge.map.layer.cache.FileSystemTileCache)\l  (r10 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.cache.FileSystemTileCache.remove(org.mapsforge.map.layer.queue.Job):void type: DIRECT A[Catch:\{ all \-\> 0x008a \}, TRY_ENTER]\l0x004a: SGET  (r10 I:java.util.logging.Logger) =  org.mapsforge.map.layer.cache.FileSystemTileCache.LOGGER java.util.logging.Logger A[Catch:\{ all \-\> 0x008a \}]\l0x004c: SGET  (r3 I:java.util.logging.Level) =  java.util.logging.Level.SEVERE java.util.logging.Level A[Catch:\{ all \-\> 0x008a \}]\l0x004e: INVOKE  (r4 I:java.lang.String) = (r0 I:java.io.IOException) java.io.IOException.getMessage():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x008a \}]\l0x0052: INVOKE  \l  (r10 I:java.util.logging.Logger)\l  (r3 I:java.util.logging.Level)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable):void type: VIRTUAL A[Catch:\{ all \-\> 0x008a \}, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|0x0055: INVOKE  (r2 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x0058|0x0058: RETURN  (r1 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0059|ExcHandler: CorruptedInputStreamException null\lSplitter:B:5:0x0022\l|0x0059: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_24 [shape=record,label="{24\:\ 0x005a|0x005a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x005b|SYNTHETIC\lSplitter:B:25:0x005b\l}"];
Node_26 [shape=record,label="{26\:\ ?|Splitter:B:25:0x005b\l|0x005b: INVOKE  \l  (r9 I:org.mapsforge.map.layer.cache.FileSystemTileCache)\l  (r10 I:org.mapsforge.map.layer.queue.Job)\l org.mapsforge.map.layer.cache.FileSystemTileCache.remove(org.mapsforge.map.layer.queue.Job):void type: DIRECT A[Catch:\{ all \-\> 0x008a \}, TRY_ENTER]\l0x005e: SGET  (r4 I:java.util.logging.Logger) =  org.mapsforge.map.layer.cache.FileSystemTileCache.LOGGER java.util.logging.Logger A[Catch:\{ all \-\> 0x008a \}]\l0x0060: SGET  (r5 I:java.util.logging.Level) =  java.util.logging.Level.WARNING java.util.logging.Level A[Catch:\{ all \-\> 0x008a \}]\l0x0062: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x008a \}]\l0x0064: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x008a \}]\l0x0067: CONST_STR  (r7 I:java.lang.String) =  \"input stream from file system cache invalid \" A[Catch:\{ all \-\> 0x008a \}]\l0x0069: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x008a \}]\l0x006c: INVOKE  (r10 I:java.lang.String) = (r10 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.getKey():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x008a \}]\l0x0070: INVOKE  (r6 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x008a \}]\l0x0073: CONST_STR  (r10 I:java.lang.String) =  \" \" A[Catch:\{ all \-\> 0x008a \}]\l0x0075: INVOKE  (r6 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x008a \}]\l0x0078: INVOKE  (r7 I:long) = (r0 I:java.io.File) java.io.File.length():long type: VIRTUAL A[Catch:\{ all \-\> 0x008a \}]\l0x007c: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x008a \}]\l0x007f: INVOKE  (r10 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x008a \}]\l0x0083: INVOKE  \l  (r4 I:java.util.logging.Logger)\l  (r5 I:java.util.logging.Level)\l  (r10 I:java.lang.String)\l  (r3 I:java.lang.Throwable)\l java.util.logging.Logger.log(java.util.logging.Level, java.lang.String, java.lang.Throwable):void type: VIRTUAL A[Catch:\{ all \-\> 0x008a \}, TRY_LEAVE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0086|0x0086: INVOKE  (r2 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_28 [shape=record,label="{28\:\ 0x0089|0x0089: RETURN  (r1 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_29 [shape=record,label="{29\:\ 0x008a|ExcHandler: all null\lSplitter:B:19:0x0047\l|0x008a: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_30 [shape=record,label="{30\:\ 0x008b|0x008b: INVOKE  (r2 I:java.io.Closeable) org.mapsforge.core.util.IOUtils.closeQuietly(java.io.Closeable):void type: STATIC \l}"];
Node_31 [shape=record,label="{31\:\ 0x008e|0x008e: THROW  (r10 I:java.lang.Throwable) \l}"];
Node_32 [shape=record,label="{32\:\ 0x008f|ExcHandler: all null\lSplitter:B:0:0x0000\l|0x008f: MOVE_EXCEPTION  (r10 I:?[OBJECT]) =  \l}"];
Node_33 [shape=record,label="{33\:\ 0x0090|0x0090: IGET  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock) = (r9 I:org.mapsforge.map.layer.cache.FileSystemTileCache) org.mapsforge.map.layer.cache.FileSystemTileCache.lock java.util.concurrent.locks.ReentrantReadWriteLock \l0x0092: INVOKE  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock) = (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock) java.util.concurrent.locks.ReentrantReadWriteLock.readLock():java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock type: VIRTUAL \l0x0096: INVOKE  \l  (r0 I:java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock)\l java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.unlock():void type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x0099|0x0099: THROW  (r10 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.mapsforge.core.graphics.TileBitmap org.mapsforge.map.layer.cache.FileSystemTileCache.get((r9 'this' I:org.mapsforge.map.layer.cache.FileSystemTileCache A[IMMUTABLE_TYPE, THIS]), (r10 I:org.mapsforge.map.layer.queue.Job A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_32;
Node_1 -> Node_2;
Node_1 -> Node_32;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_23;
Node_5 -> Node_17;
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_6 -> Node_23;
Node_6 -> Node_17;
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_7 -> Node_13;
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_8 -> Node_13;
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_19;
Node_13 -> Node_25;
Node_15 -> Node_16;
Node_16 -> Node_30;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_20 -> Node_29;
Node_21 -> Node_22;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_29;
Node_26 -> Node_27;
Node_26 -> Node_29;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_34;
}

