digraph "CFG fororg.mapsforge.map.layer.cache.FileSystemTileCache.storeData(Lorg\/mapsforge\/map\/layer\/queue\/Job;Lorg\/mapsforge\/core\/graphics\/TileBitmap;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x0062 \}\lSplitter:B:1:0x0001\l|java.io.File r1 = getOutputFile(r4)     \/\/ Catch:\{ Exception \-\> 0x0062 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r1 != null) goto L_0x000b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|org.mapsforge.core.util.IOUtils.closeQuietly((java.io.Closeable) null)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|SYNTHETIC\lSplitter:B:6:0x000b\l}"];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ Exception \-\> 0x0062 \}\lSplitter:B:6:0x000b\l|java.io.FileOutputStream r2 = new java.io.FileOutputStream(r1)     \/\/ Catch:\{ Exception \-\> 0x0062 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|SYNTHETIC\lSplitter:B:8:0x0010\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\lSplitter:B:8:0x0010\l|r5.compress(r2)     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|SYNTHETIC\lSplitter:B:10:0x0013\l}"];
Node_11 [shape=record,label="{11\:\ ?|Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\lSplitter:B:10:0x0013\l|r3.lock.writeLock().lock()     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\l|if (r3.lruCache.put(r4.getKey(), r1) == null) goto L_0x0042     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\l|java.util.logging.Logger r5 = LOGGER     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\ljava.lang.StringBuilder r0 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\lr0.append(\"overwriting cached entry: \")     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\lr0.append(r4.getKey())     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\lr5.warning(r0.toString())     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|SYNTHETIC\lSplitter:B:14:0x0042\l}"];
Node_15 [shape=record,label="{15\:\ ?|Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\lSplitter:B:14:0x0042\l|r3.lock.writeLock().unlock()     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x004b|org.mapsforge.core.util.IOUtils.closeQuietly(r2)\l}"];
Node_17 [shape=record,label="{17\:\ 0x004f|ExcHandler: all (r4v13 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:10:0x0013\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_18 [shape=record,label="{18\:\ 0x0050|SYNTHETIC\lSplitter:B:18:0x0050\l}"];
Node_19 [shape=record,label="{19\:\ ?|Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\lSplitter:B:18:0x0050\l|r3.lock.writeLock().unlock()     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0059|Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\l|throw r4     \/\/ Catch:\{ all \-\> 0x004f, Exception \-\> 0x005d, all \-\> 0x005a \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x005a|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:8:0x0010\l|java.lang.Throwable r4 = th\l}"];
Node_22 [shape=record,label="{22\:\ 0x005b|r0 = r2\l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:8:0x0010\l|java.lang.Exception r4 = e\l}"];
Node_24 [shape=record,label="{24\:\ 0x005e|r0 = r2\l}"];
Node_25 [shape=record,label="{25\:\ 0x0060|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:27:0x0063\l|java.lang.Throwable r4 = th\l}"];
Node_26 [shape=record,label="{26\:\ 0x0062|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:1:0x0001\l|java.lang.Exception r4 = e\l}"];
Node_27 [shape=record,label="{27\:\ 0x0063|SYNTHETIC\lPHI: r0 r4 \l  PHI: (r0v2 java.io.FileOutputStream) = (r0v0 java.io.FileOutputStream), (r0v3 java.io.FileOutputStream) binds: [B:26:0x0062, B:24:0x005e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 'e' java.lang.Exception) = (r4v10 'e' java.lang.Exception), (r4v11 'e' java.lang.Exception) binds: [B:26:0x0062, B:24:0x005e] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:27:0x0063\l}"];
Node_28 [shape=record,label="{28\:\ ?|Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\lSplitter:B:27:0x0063\l|LOGGER.log(java.util.logging.Level.SEVERE, \"Disabling filesystem cache\", r4)     \/\/ Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\ldestroy()     \/\/ Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x006f|SYNTHETIC\lSplitter:B:29:0x006f\l}"];
Node_30 [shape=record,label="{30\:\ ?|Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\lSplitter:B:29:0x006f\l|r3.lock.writeLock().lock()     \/\/ Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\lr3.lruCache = new org.mapsforge.map.layer.cache.FileWorkingSetCache\<\>(0)     \/\/ Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\l}"];
Node_31 [shape=record,label="{31\:\ 0x0080|SYNTHETIC\lSplitter:B:31:0x0080\l}"];
Node_32 [shape=record,label="{32\:\ ?|Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\lSplitter:B:31:0x0080\l|r3.lock.writeLock().unlock()     \/\/ Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\l}"];
Node_33 [shape=record,label="{33\:\ 0x0089|org.mapsforge.core.util.IOUtils.closeQuietly(r0)\l}"];
Node_34 [shape=record,label="{34\:\ 0x008d|ExcHandler: all (r4v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:29:0x006f\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_35 [shape=record,label="{35\:\ 0x008e|SYNTHETIC\lSplitter:B:35:0x008e\l}"];
Node_36 [shape=record,label="{36\:\ ?|Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\lSplitter:B:35:0x008e\l|r3.lock.writeLock().unlock()     \/\/ Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\l}"];
Node_37 [shape=record,label="{37\:\ 0x0097|Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\l|throw r4     \/\/ Catch:\{ all \-\> 0x008d, all \-\> 0x0060 \}\l}"];
Node_38 [shape=record,label="{38\:\ 0x0098|PHI: r0 r4 \l  PHI: (r0v1 java.io.FileOutputStream) = (r0v2 java.io.FileOutputStream), (r0v4 java.io.FileOutputStream) binds: [B:25:0x0060, B:22:0x005b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 'th' java.lang.Throwable) = (r4v9 'th' java.lang.Throwable), (r4v12 'th' java.lang.Throwable) binds: [B:25:0x0060, B:22:0x005b] A[DONT_GENERATE, DONT_INLINE]\l|org.mapsforge.core.util.IOUtils.closeQuietly(r0)\l}"];
Node_39 [shape=record,label="{39\:\ 0x009b|throw r4\l}"];
Node_40 [shape=record,label="{40\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_41 [shape=record,label="{41\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void org.mapsforge.map.layer.cache.FileSystemTileCache.storeData((r3v0 'this' org.mapsforge.map.layer.cache.FileSystemTileCache A[IMMUTABLE_TYPE, THIS]), (r4v0 org.mapsforge.map.layer.queue.Job A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 org.mapsforge.core.graphics.TileBitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_26;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_26;
Node_7 -> Node_8;
Node_7 -> Node_26;
Node_8 -> Node_9;
Node_8 -> Node_23;
Node_8 -> Node_21;
Node_9 -> Node_10;
Node_9 -> Node_23;
Node_9 -> Node_21;
Node_10 -> Node_11;
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_23;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_15 -> Node_23;
Node_15 -> Node_21;
Node_16 -> Node_41;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_23;
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_38;
Node_23 -> Node_24;
Node_24 -> Node_27;
Node_25 -> Node_38;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_25;
Node_28 -> Node_29;
Node_28 -> Node_25;
Node_29 -> Node_30;
Node_29 -> Node_34;
Node_30 -> Node_31;
Node_30 -> Node_34;
Node_31 -> Node_32;
Node_31 -> Node_25;
Node_32 -> Node_33;
Node_32 -> Node_25;
Node_33 -> Node_40;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_25;
Node_36 -> Node_37;
Node_38 -> Node_39;
}

