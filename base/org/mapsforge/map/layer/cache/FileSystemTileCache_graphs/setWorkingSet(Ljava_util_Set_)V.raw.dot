digraph "CFG fororg.mapsforge.map.layer.cache.FileSystemTileCache.setWorkingSet(Ljava\/util\/Set;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet \l0x0002: INVOKE  (r0 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|SYNTHETIC\lSplitter:B:2:0x0006\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0006\l|0x0006: INVOKE  (r1 I:java.util.Iterator) = (r4 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x0025 \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0025 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001e A[Catch:\{ all \-\> 0x0025 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0025 \}]\l0x0014: CHECK_CAST  (r2 I:org.mapsforge.map.layer.queue.Job) = (org.mapsforge.map.layer.queue.Job) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0025 \}]\l0x0016: INVOKE  (r2 I:java.lang.String) = (r2 I:org.mapsforge.map.layer.queue.Job) org.mapsforge.map.layer.queue.Job.getKey():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0025 \}]\l0x001a: INVOKE  (r0 I:java.util.Set), (r2 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0025 \}]\l0x001d: GOTO  \-\> 0x000a A[Catch:\{ all \-\> 0x0025 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0025 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|0x001f: IGET  (r4 I:org.mapsforge.map.layer.cache.FileWorkingSetCache\<java.lang.String\>) = (r3 I:org.mapsforge.map.layer.cache.FileSystemTileCache) org.mapsforge.map.layer.cache.FileSystemTileCache.lruCache org.mapsforge.map.layer.cache.FileWorkingSetCache \l0x0021: INVOKE  \l  (r4 I:org.mapsforge.map.layer.cache.FileWorkingSetCache)\l  (r0 I:java.util.Set)\l org.mapsforge.map.layer.cache.FileWorkingSetCache.setWorkingSet(java.util.Set):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|ExcHandler: all null\lSplitter:B:2:0x0006\l|0x0025: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|SYNTHETIC\lSplitter:B:11:0x0026\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x0026\l|0x0026: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0025 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|0x0027: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.cache.FileSystemTileCache.setWorkingSet((r3 'this' I:org.mapsforge.map.layer.cache.FileSystemTileCache A[IMMUTABLE_TYPE, THIS]), (r4 I:java.util.Set\<org.mapsforge.map.layer.queue.Job\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Set\<, Lorg\/mapsforge\/map\/layer\/queue\/Job;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_10;
Node_12 -> Node_13;
Node_12 -> Node_10;
}

