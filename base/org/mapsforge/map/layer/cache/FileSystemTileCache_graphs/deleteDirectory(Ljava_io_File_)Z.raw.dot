digraph "CFG fororg.mapsforge.map.layer.cache.FileSystemTileCache.deleteDirectory(Ljava\/io\/File;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INVOKE  (r1 I:boolean) = (r5 I:java.io.File) java.io.File.isDirectory():boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0025 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: INVOKE  (r1 I:java.lang.String[]) = (r5 I:java.io.File) java.io.File.list():java.lang.String[] type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0025 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: ARRAY_LENGTH  (r3 I:int) = (r1 I:?[]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:14:0x0025 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0014|0x0014: NEW_INSTANCE  (r3 I:java.io.File) =  java.io.File \l0x0016: AGET  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0018: INVOKE  \l  (r3 I:java.io.File)\l  (r5 I:java.io.File)\l  (r4 I:java.lang.String)\l java.io.File.\<init\>(java.io.File, java.lang.String):void type: DIRECT \l0x001b: INVOKE  (r3 I:boolean) = (r3 I:java.io.File) org.mapsforge.map.layer.cache.FileSystemTileCache.deleteDirectory(java.io.File):boolean type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0022 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|0x0021: RETURN  (r0 I:boolean) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0022|0x0022: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|0x0025: INVOKE  (r5 I:boolean) = (r5 I:java.io.File) java.io.File.delete():boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0029|0x0029: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean org.mapsforge.map.layer.cache.FileSystemTileCache.deleteDirectory((r5 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_13 -> Node_8;
Node_14 -> Node_15;
}

