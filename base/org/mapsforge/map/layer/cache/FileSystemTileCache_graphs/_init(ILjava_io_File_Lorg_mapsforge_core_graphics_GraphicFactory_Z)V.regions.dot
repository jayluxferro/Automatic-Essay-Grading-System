digraph "CFG fororg.mapsforge.map.layer.cache.FileSystemTileCache.\<init\>(ILjava\/io\/File;Lorg\/mapsforge\/core\/graphics\/GraphicFactory;Z)V" {
subgraph cluster_Region_1355787819 {
label = "R(3:0|(2:2|(1:4))(1:5)|6)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.observable = new org.mapsforge.map.model.common.Observable()\lr1.persistent = r5\lr1.lruCache = new org.mapsforge.map.layer.cache.FileWorkingSetCache\<\>(r2)\lr1.lock = new java.util.concurrent.locks.ReentrantReadWriteLock()\l}"];
subgraph cluster_IfRegion_1387135975 {
label = "IF [B:1:0x001f] THEN: R(2:2|(1:4)) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x001f|if (isValidCacheDirectory(r3) == true) goto L_0x0021\l}"];
subgraph cluster_Region_1825993021 {
label = "R(2:2|(1:4))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0021|r1.cacheDirectory = r3\l}"];
subgraph cluster_IfRegion_1631801333 {
label = "IF [B:3:0x0025] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0025|if (r1.persistent == true) goto L_0x0027\l}"];
subgraph cluster_Region_1288702720 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0027|new java.lang.Thread(new org.mapsforge.map.layer.cache.FileSystemTileCache.CacheDirectoryReader()).start()\l}"];
}
}
}
subgraph cluster_Region_1849919558 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0035|r1.cacheDirectory = null\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0037|r1.graphicFactory = r4\l}"];
}
Node_7 [shape=record,color=red,label="{7\:\ 0x0039}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.cache.FileSystemTileCache.\<init\>((r1v0 'this' org.mapsforge.map.layer.cache.FileSystemTileCache A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 org.mapsforge.core.graphics.GraphicFactory A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

