digraph "CFG fororg.mapsforge.map.layer.cache.InMemoryTileCache.get(Lorg\/mapsforge\/map\/layer\/queue\/Job;)Lorg\/mapsforge\/core\/graphics\/TileBitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:org.mapsforge.map.layer.cache.BitmapLRUCache) = (r1 I:org.mapsforge.map.layer.cache.InMemoryTileCache) org.mapsforge.map.layer.cache.InMemoryTileCache.lruCache org.mapsforge.map.layer.cache.BitmapLRUCache A[Catch:\{ all \-\> 0x0010 \}, TRY_ENTER]\l0x0003: INVOKE  (r2 I:java.lang.Object) = \l  (r0 I:org.mapsforge.map.layer.cache.BitmapLRUCache)\l  (r2 I:java.lang.Object)\l org.mapsforge.map.layer.cache.BitmapLRUCache.get(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l0x0007: CHECK_CAST  (r2 I:org.mapsforge.core.graphics.TileBitmap) = (org.mapsforge.core.graphics.TileBitmap) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0010 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e A[Catch:\{ all \-\> 0x0010 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r2 I:org.mapsforge.core.graphics.TileBitmap) org.mapsforge.core.graphics.TileBitmap.incrementRefCount():void type: INTERFACE A[Catch:\{ all \-\> 0x0010 \}, TRY_LEAVE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: RETURN  (r2 I:org.mapsforge.core.graphics.TileBitmap) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0010: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized org.mapsforge.core.graphics.TileBitmap org.mapsforge.map.layer.cache.InMemoryTileCache.get((r1 'this' I:org.mapsforge.map.layer.cache.InMemoryTileCache A[IMMUTABLE_TYPE, THIS]), (r2 I:org.mapsforge.map.layer.queue.Job A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

