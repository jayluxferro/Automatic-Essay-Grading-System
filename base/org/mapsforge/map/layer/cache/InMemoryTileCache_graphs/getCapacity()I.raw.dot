digraph "CFG fororg.mapsforge.map.layer.cache.InMemoryTileCache.getCapacity()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r0 I:org.mapsforge.map.layer.cache.BitmapLRUCache) = (r1 I:org.mapsforge.map.layer.cache.InMemoryTileCache) org.mapsforge.map.layer.cache.InMemoryTileCache.lruCache org.mapsforge.map.layer.cache.BitmapLRUCache A[Catch:\{ all \-\> 0x0007 \}, TRY_ENTER]\l0x0003: IGET  (r0 I:int) = (r0 I:org.mapsforge.map.layer.cache.BitmapLRUCache) org.mapsforge.map.layer.cache.BitmapLRUCache.capacity int A[Catch:\{ all \-\> 0x0007 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: RETURN  (r0 I:int) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0007: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0008|0x0008: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0009|0x0009: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public synchronized int org.mapsforge.map.layer.cache.InMemoryTileCache.getCapacity((r1 'this' I:org.mapsforge.map.layer.cache.InMemoryTileCache A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

