digraph "CFG fororg.mapsforge.map.layer.cache.FileSystemTileCache.CacheDirectoryReader.run()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = r18\ljava.io.File[] r0 = org.mapsforge.map.layer.cache.FileSystemTileCache.access$000(r1.this$0).listFiles()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r0 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|int r2 = r0.length\lr4 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|LOOP_START\lPHI: r0 r2 r4 \l  PHI: (r0v3 java.io.File[]) = (r0v2 java.io.File[]), (r0v5 java.io.File[]) binds: [B:2:0x000e, B:28:0x00c7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v3 int) binds: [B:2:0x000e, B:28:0x00c7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:2:0x000e, B:28:0x00c7] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0011\-\>B:28:0x00c7\l|if (r4 \>= r2) goto L_0x00d3\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|r5 = r0[r4]\ljava.io.File[] r6 = r5.listFiles()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|if (r6 == null) goto L_0x00c7\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|int r7 = r6.length\lr8 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|LOOP_START\lPHI: r0 r2 r8 \l  PHI: (r0v6 java.io.File[]) = (r0v3 java.io.File[]), (r0v8 java.io.File[]) binds: [B:6:0x001b, B:27:0x00bb] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 int) = (r2v1 int), (r2v6 int) binds: [B:6:0x001b, B:27:0x00bb] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 int) = (r8v0 int), (r8v2 int) binds: [B:6:0x001b, B:27:0x00bb] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x001d\-\>B:27:0x00bb\l|if (r8 \>= r7) goto L_0x00c7\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|r9 = r6[r8]\ljava.io.File[] r10 = r9.listFiles()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|if (r10 == null) goto L_0x00bb\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|int r11 = r10.length\lr12 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|LOOP_START\lPHI: r0 r2 r12 \l  PHI: (r0v9 java.io.File[]) = (r0v6 java.io.File[]), (r0v10 java.io.File[]) binds: [B:10:0x0027, B:26:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v7 int) = (r2v4 int), (r2v8 int) binds: [B:10:0x0027, B:26:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r12v1 int) = (r12v0 int), (r12v2 int) binds: [B:10:0x0027, B:26:0x00b3] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:11:0x0029\-\>B:26:0x00b3\l|if (r12 \>= r11) goto L_0x00bb\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|r13 = r10[r12]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|if (org.mapsforge.map.layer.cache.FileSystemTileCache.access$100(r13) == false) goto L_0x00af\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033}"];
Node_15 [shape=record,label="{15\:\ 0x003d|if (r13.getName().endsWith(\".tile\") == false) goto L_0x00af\l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|int r14 = r13.getName().lastIndexOf(\".tile\")\lr16 = r0\lr17 = r2\ljava.lang.String r0 = org.mapsforge.map.layer.queue.Job.composeKey(r5.getName(), r9.getName(), r13.getName().substring(0, r14))\l}"];
Node_17 [shape=record,label="{17\:\ 0x0061|SYNTHETIC\lSplitter:B:17:0x0061\l}"];
Node_18 [shape=record,label="{18\:\ ?|Catch:\{ all \-\> 0x00a0 \}\lSplitter:B:17:0x0061\l|org.mapsforge.map.layer.cache.FileSystemTileCache.access$200(r1.this$0).writeLock().lock()     \/\/ Catch:\{ all \-\> 0x00a0 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0078|Catch:\{ all \-\> 0x00a0 \}\l|if (org.mapsforge.map.layer.cache.FileSystemTileCache.access$300(r1.this$0).put(r0, r13) == null) goto L_0x0092     \/\/ Catch:\{ all \-\> 0x00a0 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x007a|Catch:\{ all \-\> 0x00a0 \}\l|java.util.logging.Logger r2 = org.mapsforge.map.layer.cache.FileSystemTileCache.access$400()     \/\/ Catch:\{ all \-\> 0x00a0 \}\ljava.lang.StringBuilder r13 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x00a0 \}\lr13.append(\"overwriting cached entry: \")     \/\/ Catch:\{ all \-\> 0x00a0 \}\lr13.append(r0)     \/\/ Catch:\{ all \-\> 0x00a0 \}\lr2.warning(r13.toString())     \/\/ Catch:\{ all \-\> 0x00a0 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0092|DONT_GENERATE\l|org.mapsforge.map.layer.cache.FileSystemTileCache r0 = r1.this$0\ljava.util.concurrent.locks.ReentrantReadWriteLock r0 = org.mapsforge.map.layer.cache.FileSystemTileCache.access$200(r0)\ljava.util.concurrent.locks.ReentrantReadWriteLock$WriteLock r0 = r0.writeLock()\lr0.unlock()\l}"];
Node_22 [shape=record,label="{22\:\ 0x00a0|ExcHandler:  FINALLY\lSplitter:B:17:0x0061\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_23 [shape=record,label="{23\:\ 0x00a1|FINALLY_INSNS\l|org.mapsforge.map.layer.cache.FileSystemTileCache.access$200(r1.this$0).writeLock().unlock()\l}"];
Node_24 [shape=record,label="{24\:\ 0x00ae|throw r0\l}"];
Node_25 [shape=record,label="{25\:\ 0x00af|r16 = r0\lr17 = r2\l}"];
Node_26 [shape=record,label="{26\:\ 0x00b3|LOOP_END\lPHI: r16 r17 \l  PHI: (r16v2 java.io.File[]) = (r16v3 java.io.File[]), (r16v4 java.io.File[]) binds: [B:34:0x00b3, B:35:0x00b3] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v2 int) = (r17v3 int), (r17v4 int) binds: [B:34:0x00b3, B:35:0x00b3] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:11:0x0029\-\>B:26:0x00b3\l|int r12 = r12 + 1\lr0 = r16\lr2 = r17\l}"];
Node_27 [shape=record,label="{27\:\ 0x00bb|LOOP_END\lPHI: r0 r2 \l  PHI: (r0v7 java.io.File[]) = (r0v6 java.io.File[]), (r0v9 java.io.File[]) binds: [B:32:0x00bb, B:33:0x00bb] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v5 int) = (r2v4 int), (r2v7 int) binds: [B:32:0x00bb, B:33:0x00bb] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x001d\-\>B:27:0x00bb\l|int r8 = r8 + 1\lr0 = r0\lr2 = r2\l}"];
Node_28 [shape=record,label="{28\:\ 0x00c7|LOOP_END\lPHI: r0 r2 \l  PHI: (r0v4 java.io.File[]) = (r0v3 java.io.File[]), (r0v6 java.io.File[]) binds: [B:30:0x00c7, B:31:0x00c7] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 int) = (r2v1 int), (r2v4 int) binds: [B:30:0x00c7, B:31:0x00c7] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0011\-\>B:28:0x00c7\l|int r4 = r4 + 1\lr0 = r0\lr2 = r2\l}"];
Node_29 [shape=record,label="{29\:\ 0x00d3|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x00c7|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x00c7|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x00bb|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x00bb|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b3|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x00b3|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.mapsforge.map.layer.cache.FileSystemTileCache.CacheDirectoryReader.run((r18v0 'this' org.mapsforge.map.layer.cache.FileSystemTileCache$CacheDirectoryReader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_36;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_29;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_30;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_31;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_32;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_33;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_25;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_25;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_35;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_25 -> Node_34;
Node_26 -> Node_11;
Node_27 -> Node_7;
Node_28 -> Node_3;
Node_29 -> Node_37;
Node_30 -> Node_28;
Node_31 -> Node_28;
Node_32 -> Node_27;
Node_33 -> Node_27;
Node_34 -> Node_26;
Node_35 -> Node_26;
}

