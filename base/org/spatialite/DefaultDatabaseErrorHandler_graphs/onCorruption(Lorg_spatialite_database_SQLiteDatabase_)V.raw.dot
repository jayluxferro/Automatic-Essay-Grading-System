digraph "CFG fororg.spatialite.DefaultDatabaseErrorHandler.onCorruption(Lorg\/spatialite\/database\/SQLiteDatabase;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"DefaultDatabaseError\" \l0x0002: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0004: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0007: CONST_STR  (r2 I:java.lang.String) =  \"Corruption reported by sqlite on database: \" \l0x0009: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x000c: INVOKE  (r2 I:java.lang.String) = (r4 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.getPath():java.lang.String type: VIRTUAL \l0x0010: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0013: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0017: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l0x001a: INVOKE  (r0 I:boolean) = (r4 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.isOpen():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0020|0x0020: INVOKE  (r4 I:java.lang.String) = (r4 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.getPath():java.lang.String type: VIRTUAL \l0x0024: INVOKE  \l  (r3 I:org.spatialite.DefaultDatabaseErrorHandler)\l  (r4 I:java.lang.String)\l org.spatialite.DefaultDatabaseErrorHandler.deleteDatabaseFile(java.lang.String):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|0x0027: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|SYNTHETIC\lSplitter:B:5:0x0029\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0029\l|0x0029: INVOKE  (r1 I:java.util.List) = (r4 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.getAttachedDbs():java.util.List type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x0031, all \-\> 0x002f \}, TRY_ENTER]\l0x002c: NOP   A[TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|ExcHandler: all null\lSplitter:B:5:0x0029\l|0x002f: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|SYNTHETIC\lSplitter:B:10:0x0031\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0031\l|0x0031: INVOKE  (r4 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.close():void type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x0057, all \-\> 0x002f \}, ExcHandler: SQLiteException null, TRY_ENTER, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004f \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: INVOKE  (r4 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|0x003b: INVOKE  (r0 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x003f|0x003f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0056 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|0x0041: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0045: CHECK_CAST  (r0 I:android.util.Pair) = (android.util.Pair) (r0 I:?[OBJECT, ARRAY]) \l0x0047: IGET  (r0 I:java.lang.Object) = (r0 I:android.util.Pair) android.util.Pair.second java.lang.Object \l0x0049: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x004b: INVOKE  \l  (r3 I:org.spatialite.DefaultDatabaseErrorHandler)\l  (r0 I:java.lang.String)\l org.spatialite.DefaultDatabaseErrorHandler.deleteDatabaseFile(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x004f|0x004f: INVOKE  (r4 I:java.lang.String) = (r4 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.getPath():java.lang.String type: VIRTUAL \l0x0053: INVOKE  \l  (r3 I:org.spatialite.DefaultDatabaseErrorHandler)\l  (r4 I:java.lang.String)\l org.spatialite.DefaultDatabaseErrorHandler.deleteDatabaseFile(java.lang.String):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0056|0x0056: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|0x0057: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0071 \l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lExcHandler: SQLiteException null\lSplitter:B:10:0x0031\l}"];
Node_22 [shape=record,label="{22\:\ 0x0059|0x0059: INVOKE  (r4 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x005d|0x005d: INVOKE  (r0 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_24 [shape=record,label="{24\:\ 0x0061|0x0061: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0078 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0063|0x0063: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0067: CHECK_CAST  (r0 I:android.util.Pair) = (android.util.Pair) (r0 I:?[OBJECT, ARRAY]) \l0x0069: IGET  (r0 I:java.lang.Object) = (r0 I:android.util.Pair) android.util.Pair.second java.lang.Object \l0x006b: CHECK_CAST  (r0 I:java.lang.String) = (java.lang.String) (r0 I:?[OBJECT, ARRAY]) \l0x006d: INVOKE  \l  (r3 I:org.spatialite.DefaultDatabaseErrorHandler)\l  (r0 I:java.lang.String)\l org.spatialite.DefaultDatabaseErrorHandler.deleteDatabaseFile(java.lang.String):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x0071|0x0071: INVOKE  (r4 I:java.lang.String) = (r4 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.getPath():java.lang.String type: VIRTUAL \l0x0075: INVOKE  \l  (r3 I:org.spatialite.DefaultDatabaseErrorHandler)\l  (r4 I:java.lang.String)\l org.spatialite.DefaultDatabaseErrorHandler.deleteDatabaseFile(java.lang.String):void type: DIRECT \l}"];
Node_27 [shape=record,label="{27\:\ 0x0078|0x0078: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.spatialite.DefaultDatabaseErrorHandler.onCorruption((r3 'this' I:org.spatialite.DefaultDatabaseErrorHandler A[IMMUTABLE_TYPE, THIS]), (r4 I:org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_10;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_10;
Node_8 -> Node_13;
Node_10 -> Node_11;
Node_10 -> Node_21;
Node_10 -> Node_8;
Node_11 -> Node_21;
Node_11 -> Node_8;
Node_11 -> Node_20;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_15;
Node_18 -> Node_19;
Node_20 -> Node_22[style=dashed];
Node_20 -> Node_26;
Node_21 -> Node_20;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_23;
Node_26 -> Node_27;
}

