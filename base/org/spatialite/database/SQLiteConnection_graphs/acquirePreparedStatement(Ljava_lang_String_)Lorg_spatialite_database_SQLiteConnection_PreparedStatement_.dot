digraph "CFG fororg.spatialite.database.SQLiteConnection.acquirePreparedStatement(Ljava\/lang\/String;)Lorg\/spatialite\/database\/SQLiteConnection$PreparedStatement;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.spatialite.database.SQLiteConnection$PreparedStatement r0 = (org.spatialite.database.SQLiteConnection.PreparedStatement) r13.mPreparedStatementCache.get(r14)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|if (r0 == null) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r0.mInUse != false) goto L_0x0010\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|RETURN\l|return r0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|r2 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|r2 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|PHI: r2 \l  PHI: (r2v0 boolean) = (r2v1 boolean), (r2v3 boolean) binds: [B:6:0x0012, B:5:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|long r3 = nativePrepareStatement(r13.mConnectionPtr, r14)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019|SYNTHETIC\lSplitter:B:8:0x0019\l}"];
Node_9 [shape=record,label="{9\:\ ?|Catch:\{ RuntimeException \-\> 0x0047 \}\lSplitter:B:8:0x0019\l|int r9 = nativeGetParameterCount(r13.mConnectionPtr, r3)     \/\/ Catch:\{ RuntimeException \-\> 0x0047 \}\lint r12 = org.spatialite.database.SQLiteStatementType.getSqlStatementType(r14)     \/\/ Catch:\{ RuntimeException \-\> 0x0047 \}\lboolean r11 = nativeIsReadOnly(r13.mConnectionPtr, r3)     \/\/ Catch:\{ RuntimeException \-\> 0x0047 \}\lorg.spatialite.database.SQLiteConnection$PreparedStatement r5 = obtainPreparedStatement(r14, r3, r9, r12, r11)     \/\/ Catch:\{ RuntimeException \-\> 0x0047 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|if (r2 != false) goto L_0x0044\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|SYNTHETIC\lSplitter:B:11:0x0033\l}"];
Node_12 [shape=record,label="{12\:\ ?|Catch:\{ RuntimeException \-\> 0x0041 \}\lSplitter:B:11:0x0033\l}"];
Node_13 [shape=record,label="{13\:\ 0x0037|Catch:\{ RuntimeException \-\> 0x0041 \}\l|if (isCacheable(r12) == false) goto L_0x0044     \/\/ Catch:\{ RuntimeException \-\> 0x0041 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|Catch:\{ RuntimeException \-\> 0x0041 \}\l|r13.mPreparedStatementCache.put(r14, r5)     \/\/ Catch:\{ RuntimeException \-\> 0x0041 \}\lr5.mInCache = true     \/\/ Catch:\{ RuntimeException \-\> 0x0041 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|ExcHandler: RuntimeException (e java.lang.RuntimeException)\lSplitter:B:11:0x0033\l|java.lang.RuntimeException r14 = e\l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|r0 = r5\l}"];
Node_17 [shape=record,label="{17\:\ 0x0044|r5.mInUse = true\l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|RETURN\l|return r5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0047|ExcHandler: RuntimeException (e java.lang.RuntimeException)\lSplitter:B:8:0x0019\l|java.lang.RuntimeException r14 = e\l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|PHI: r0 r14 \l  PHI: (r0v3 org.spatialite.database.SQLiteConnection$PreparedStatement) = (r0v2 org.spatialite.database.SQLiteConnection$PreparedStatement), (r0v6 org.spatialite.database.SQLiteConnection$PreparedStatement) binds: [B:19:0x0047, B:16:0x0042] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r14v1 'e' java.lang.RuntimeException) = (r14v2 'e' java.lang.RuntimeException), (r14v3 'e' java.lang.RuntimeException) binds: [B:19:0x0047, B:16:0x0042] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == null) goto L_0x004e\l}"];
Node_21 [shape=record,label="{21\:\ 0x004a}"];
Node_22 [shape=record,label="{22\:\ 0x004c|if (r0.mInCache != false) goto L_0x0053\l}"];
Node_23 [shape=record,label="{23\:\ 0x004e|nativeFinalizeStatement(r13.mConnectionPtr, r3)\l}"];
Node_24 [shape=record,label="{24\:\ 0x0053|throw r14\l}"];
MethodNode[shape=record,label="{private org.spatialite.database.SQLiteConnection$PreparedStatement org.spatialite.database.SQLiteConnection.acquirePreparedStatement((r13v0 'this' org.spatialite.database.SQLiteConnection A[IMMUTABLE_TYPE, THIS]), (r14v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_19;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
}

