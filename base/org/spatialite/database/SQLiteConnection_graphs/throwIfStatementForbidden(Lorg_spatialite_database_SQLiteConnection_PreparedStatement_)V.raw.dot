digraph "CFG fororg.spatialite.database.SQLiteConnection.throwIfStatementForbidden(Lorg\/spatialite\/database\/SQLiteConnection$PreparedStatement;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r1 I:org.spatialite.database.SQLiteConnection) org.spatialite.database.SQLiteConnection.mOnlyAllowReadOnlyOperations boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r2 I:boolean) = \l  (r2 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l org.spatialite.database.SQLiteConnection.PreparedStatement.mReadOnly boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0009 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|0x0009: NEW_INSTANCE  (r2 I:android.database.sqlite.SQLiteException) =  android.database.sqlite.SQLiteException \l0x000b: CONST_STR  (r0 I:java.lang.String) =  \"Cannot execute this statement because it might modify the database but the connection is read\-only.\" \l0x000d: INVOKE  \l  (r2 I:android.database.sqlite.SQLiteException)\l  (r0 I:java.lang.String)\l android.database.sqlite.SQLiteException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.spatialite.database.SQLiteConnection.throwIfStatementForbidden((r1 'this' I:org.spatialite.database.SQLiteConnection A[IMMUTABLE_TYPE, THIS]), (r2 I:org.spatialite.database.SQLiteConnection$PreparedStatement A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
}

