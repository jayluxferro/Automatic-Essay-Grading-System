digraph "CFG fororg.spatialite.database.SQLiteConnection.open()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r5.mConnectionPtr = nativeOpen(r5.mConfiguration.path, r5.mConfiguration.openFlags, r5.mConfiguration.label, org.spatialite.database.SQLiteDebug.DEBUG_SQL_STATEMENTS, org.spatialite.database.SQLiteDebug.DEBUG_SQL_TIME)\lsetPageSize()\lsetForeignKeyModeFromConfiguration()\lsetJournalSizeLimit()\lsetAutoCheckpointInterval()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|if (nativeHasCodec() != false) goto L_0x002e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0028|setWalModeFromConfiguration()\lsetLocaleFromConfiguration()\l}"];
Node_3 [shape=record,label="{3\:\ 0x002e|int r0 = r5.mConfiguration.customFunctions.size()\lr1 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x0037|LOOP_START\lPHI: r1 \l  PHI: (r1v3 int) = (r1v2 int), (r1v8 int) binds: [B:3:0x002e, B:5:0x0039] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0037\-\>B:5:0x0039\l|if (r1 \>= r0) goto L_0x004b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0039|LOOP_END\lLOOP:0: B:4:0x0037\-\>B:5:0x0039\l|long r3 = r5.mConnectionPtr\lnativeRegisterCustomFunction(r3, r5.mConfiguration.customFunctions.get(r1))\lint r1 = r1 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x004b|java.util.Iterator r0 = r5.mConfiguration.customExtensions.iterator()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0053|LOOP_START\lLOOP:1: B:7:0x0053\-\>B:9:0x0059\l}"];
Node_8 [shape=record,label="{8\:\ 0x0057|if (r0.hasNext() == false) goto L_0x0069\l}"];
Node_9 [shape=record,label="{9\:\ 0x0059|LOOP_END\lLOOP:1: B:7:0x0053\-\>B:9:0x0059\l|org.spatialite.database.SQLiteCustomExtension r1 = r0.next()\lnativeLoadExtension(r5.mConnectionPtr, r1.path, r1.entryPoint)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0069|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x004b|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0069|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.spatialite.database.SQLiteConnection.open((r5v0 'this' org.spatialite.database.SQLiteConnection A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_4;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_7;
Node_11 -> Node_6;
Node_12 -> Node_10;
}

