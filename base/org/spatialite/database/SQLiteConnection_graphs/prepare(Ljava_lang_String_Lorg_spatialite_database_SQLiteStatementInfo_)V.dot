digraph "CFG fororg.spatialite.database.SQLiteConnection.prepare(Ljava\/lang\/String;Lorg\/spatialite\/database\/SQLiteStatementInfo;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r9 == null) goto L_0x005b\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|int r0 = r8.mRecentOperations.beginOperation(\"prepare\", r9, (java.lang.Object[]) null)\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|SYNTHETIC\lSplitter:B:2:0x000b\l}"];
Node_3 [shape=record,label="{3\:\ ?|Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\lSplitter:B:2:0x000b\l|org.spatialite.database.SQLiteConnection$PreparedStatement r9 = acquirePreparedStatement(r9)     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r10 == null) goto L_0x0043\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|SYNTHETIC\lSplitter:B:5:0x0011\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\lSplitter:B:5:0x0011\l|r10.numParameters = r9.mNumParameters     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\lr10.readOnly = r9.mReadOnly     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\lint r1 = nativeGetColumnCount(r8.mConnectionPtr, r9.mStatementPtr)     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l|if (r1 != 0) goto L_0x0028     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l|r10.columnNames = EMPTY_STRING_ARRAY     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l|r10.columnNames = new java.lang.String[r1]     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\lr2 = 0     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|LOOP_START\lCatch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\lPHI: r2 \l  PHI: (r2v3 int) = (r2v2 int), (r2v4 int) binds: [B:9:0x0028, B:12:0x003b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x002d\-\>B:12:0x003b\l|if (r2 \>= r1) goto L_0x0043     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l|r10.columnNames[r2] = nativeGetColumnName(r8.mConnectionPtr, r9.mStatementPtr, r2)     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|LOOP_END\lLOOP:0: B:10:0x002d\-\>B:12:0x003b\l|int r2 = r2 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|ExcHandler: all (r10v4 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:5:0x0011\l|java.lang.Throwable r10 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|SYNTHETIC\lSplitter:B:14:0x003f\l}"];
Node_15 [shape=record,label="{15\:\ ?|Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\lSplitter:B:14:0x003f\l|releasePreparedStatement(r9)     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0042|Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l|throw r10     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0043|Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l|releasePreparedStatement(r9)     \/\/ Catch:\{ all \-\> 0x003e, RuntimeException \-\> 0x004e \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0046|r8.mRecentOperations.endOperation(r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x004b|RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x004c|ExcHandler: all (r9v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:22:0x004f\l|java.lang.Throwable r9 = move\-exception\l}"];
Node_21 [shape=record,label="{21\:\ 0x004e|ExcHandler: RuntimeException (r9v2 'e' java.lang.RuntimeException A[CUSTOM_DECLARE])\lSplitter:B:2:0x000b\l|java.lang.RuntimeException r9 = move\-exception\l}"];
Node_22 [shape=record,label="{22\:\ 0x004f|SYNTHETIC\lSplitter:B:22:0x004f\l}"];
Node_23 [shape=record,label="{23\:\ ?|Catch:\{ all \-\> 0x004c \}\lSplitter:B:22:0x004f\l|r8.mRecentOperations.failOperation(r0, r9)     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0054|Catch:\{ all \-\> 0x004c \}\l|throw r9     \/\/ Catch:\{ all \-\> 0x004c \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x0055|r8.mRecentOperations.endOperation(r0)\l}"];
Node_26 [shape=record,label="{26\:\ 0x005a|throw r9\l}"];
Node_27 [shape=record,label="{27\:\ 0x005b}"];
Node_28 [shape=record,label="{28\:\ 0x0062|throw new java.lang.IllegalArgumentException(\"sql must not be null.\")\l}"];
Node_29 [shape=record,label="{29\:\ 0x0043|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.spatialite.database.SQLiteConnection.prepare((r8v0 'this' org.spatialite.database.SQLiteConnection A[IMMUTABLE_TYPE, THIS]), (r9v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 org.spatialite.database.SQLiteStatementInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_27;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_21;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_29;
Node_11 -> Node_12;
Node_12 -> Node_10;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_21;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_20;
Node_23 -> Node_24;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_29 -> Node_17;
}

