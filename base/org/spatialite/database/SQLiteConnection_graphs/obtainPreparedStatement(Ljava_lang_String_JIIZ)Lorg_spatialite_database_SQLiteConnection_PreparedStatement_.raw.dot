digraph "CFG fororg.spatialite.database.SQLiteConnection.obtainPreparedStatement(Ljava\/lang\/String;JIIZ)Lorg\/spatialite\/database\/SQLiteConnection$PreparedStatement;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement) = (r3 I:org.spatialite.database.SQLiteConnection) org.spatialite.database.SQLiteConnection.mPreparedStatementPool org.spatialite.database.SQLiteConnection$PreparedStatement \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r2 I:org.spatialite.database.SQLiteConnection$PreparedStatement) = \l  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l org.spatialite.database.SQLiteConnection.PreparedStatement.mPoolNext org.spatialite.database.SQLiteConnection$PreparedStatement \l0x0007: IPUT  \l  (r2 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l  (r3 I:org.spatialite.database.SQLiteConnection)\l org.spatialite.database.SQLiteConnection.mPreparedStatementPool org.spatialite.database.SQLiteConnection$PreparedStatement \l0x0009: IPUT  \l  (r1 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l org.spatialite.database.SQLiteConnection.PreparedStatement.mPoolNext org.spatialite.database.SQLiteConnection$PreparedStatement \l0x000b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: IPUT  \l  (r1 I:boolean)\l  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l org.spatialite.database.SQLiteConnection.PreparedStatement.mInCache boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: NEW_INSTANCE  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement) =  org.spatialite.database.SQLiteConnection$PreparedStatement \l0x0011: INVOKE  \l  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l  (r1 I:org.spatialite.database.SQLiteConnection$1)\l org.spatialite.database.SQLiteConnection.PreparedStatement.\<init\>(org.spatialite.database.SQLiteConnection$1):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IPUT  \l  (r4 I:java.lang.String)\l  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l org.spatialite.database.SQLiteConnection.PreparedStatement.mSql java.lang.String \l0x0016: IPUT  \l  (r5 I:long)\l  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l org.spatialite.database.SQLiteConnection.PreparedStatement.mStatementPtr long \l0x0018: IPUT  \l  (r7 I:int)\l  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l org.spatialite.database.SQLiteConnection.PreparedStatement.mNumParameters int \l0x001a: IPUT  \l  (r8 I:int)\l  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l org.spatialite.database.SQLiteConnection.PreparedStatement.mType int \l0x001c: IPUT  \l  (r9 I:boolean)\l  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l org.spatialite.database.SQLiteConnection.PreparedStatement.mReadOnly boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: RETURN  \l  (r0 I:org.spatialite.database.SQLiteConnection$PreparedStatement)\l \l}"];
MethodNode[shape=record,label="{private org.spatialite.database.SQLiteConnection$PreparedStatement org.spatialite.database.SQLiteConnection.obtainPreparedStatement((r3 'this' I:org.spatialite.database.SQLiteConnection A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

