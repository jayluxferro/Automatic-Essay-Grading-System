digraph "CFG fororg.spatialite.database.SQLiteConnection.canonicalizeSyncMode(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|switch(r1.hashCode()) \{\l    case 48: goto L_0x001c;\l    case 49: goto L_0x0012;\l    case 50: goto L_0x0008;\l    default: goto L_0x0007;\l\}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r1.equals(android.support.media.ExifInterface.GPS_MEASUREMENT_2D) == false) goto L_0x0026\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|r0 = 2\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012}"];
Node_6 [shape=record,label="{6\:\ 0x0018|if (r1.equals(\"1\") == false) goto L_0x0026\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|r0 = 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c}"];
Node_9 [shape=record,label="{9\:\ 0x0022|if (r1.equals(\"0\") == false) goto L_0x0026\l}"];
Node_10 [shape=record,label="{10\:\ 0x0024|r0 = 0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|r0 = 65535\l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|PHI: r0 \l  PHI: (r0v1 char) = (r0v2 char), (r0v5 char), (r0v8 char), (r0v11 char) binds: [B:11:0x0026, B:10:0x0024, B:7:0x001a, B:4:0x0010] A[DONT_GENERATE, DONT_INLINE]\l|switch(r0) \{\l    case 0: goto L_0x0031;\l    case 1: goto L_0x002e;\l    case 2: goto L_0x002b;\l    default: goto L_0x002a;\l\}\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|RETURN\l|return r1\l}"];
Node_14 [shape=record,label="{14\:\ 0x002b|RETURN\l|return \"FULL\"\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|RETURN\l|return \"NORMAL\"\l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|RETURN\l|return \"OFF\"\l}"];
MethodNode[shape=record,label="{private static java.lang.String org.spatialite.database.SQLiteConnection.canonicalizeSyncMode((r1v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_1 -> Node_8;
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14;
Node_12 -> Node_15;
Node_12 -> Node_16;
}

