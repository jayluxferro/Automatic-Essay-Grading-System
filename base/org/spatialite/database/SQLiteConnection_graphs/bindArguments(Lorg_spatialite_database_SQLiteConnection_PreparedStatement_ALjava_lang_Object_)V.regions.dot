digraph "CFG fororg.spatialite.database.SQLiteConnection.bindArguments(Lorg\/spatialite\/database\/SQLiteConnection$PreparedStatement;[Ljava\/lang\/Object;)V" {
subgraph cluster_Region_1846914212 {
label = "R(3:0|1|(2:6|(2:(1:9)|(1:11)))(1:(2:14|(3:16|(1:18)(1:31)|32))(0)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|int r1 = r13 != null ? r13.length : 0\l}"];
subgraph cluster_IfRegion_653827897 {
label = "IF [B:5:0x0008] THEN: R(2:6|(2:(1:9)|(1:11))) ELSE: R(1:(2:14|(3:16|(1:18)(1:31)|32))(0))";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0008|if (r1 != r12.mNumParameters) goto L_0x000a\l}"];
subgraph cluster_Region_1241874247 {
label = "R(2:6|(2:(1:9)|(1:11)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000a|java.lang.String java.lang.String r12 = \"Expected \" + r12.mNumParameters + \" bind arguments but \" + r1 + \" were provided.\"\l}"];
subgraph cluster_Region_1462378995 {
label = "R(2:(1:9)|(1:11))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1352020573 {
label = "IF [B:7:0x002e] THEN: R(1:9) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002e|if (android.os.Build.VERSION.SDK_INT \>= 11) goto L_0x0030\l}"];
subgraph cluster_Region_1256672160 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0035|throw new android.database.sqlite.SQLiteBindOrColumnIndexOutOfRangeException(r12)\l}"];
}
}
subgraph cluster_Region_673977211 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003b|throw new android.database.sqlite.SQLiteException(r12)\l}"];
}
}
}
subgraph cluster_Region_1001723753 {
label = "R(1:(2:14|(3:16|(1:18)(1:31)|32))(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1740147681 {
label = "IF [B:12:0x003c] THEN: R(2:14|(3:16|(1:18)(1:31)|32)) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003c|if (r1 != 0) goto L_0x003f\l}"];
subgraph cluster_Region_1892505752 {
label = "R(2:14|(3:16|(1:18)(1:31)|32))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x003f|long long r9 = r12.mStatementPtr\l}"];
subgraph cluster_LoopRegion_554993561 {
label = "LOOP:0: (3:16|(1:18)(1:31)|32)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0041|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:14:0x003f, B:32:0x00a9] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:15:0x0041\-\>B:32:0x00a9\l|if (r0 \< r1) goto L_0x0043\l}"];
subgraph cluster_Region_82166093 {
label = "R(3:16|(1:18)(1:31)|32)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0043|java.lang.Boolean r12 = r13[r0]\lint int r2 = getTypeOfObject(r12)\l}"];
subgraph cluster_IfRegion_1940961978 {
label = "IF [B:17:0x004a] THEN: R(1:18) ELSE: R(1:31)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x004a|if (r2 != 4) goto L_0x004c\l}"];
subgraph cluster_Region_1683785124 {
label = "R(1:18)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1349832878 {
label = "Switch: 3, default: R(1:(2:27|1)(2:26|1))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x004c|switch(r2) \{\l    case 0: goto L_0x0096;\l    case 1: goto L_0x0087;\l    case 2: goto L_0x0078;\l    default: goto L_0x004f;\l\}\l}"];
subgraph cluster_Region_2061801255 {
label = "R(2:30|1)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x0096|nativeBindNull(r11.mConnectionPtr, r9, r0 + 1)\l}"];
Node_InsnContainer_1660880229 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_970417235 {
label = "R(2:29|1)";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x0087|nativeBindLong(r11.mConnectionPtr, r9, r0 + 1, ((java.lang.Number) r12).longValue())\l}"];
Node_InsnContainer_60479421 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1023018175 {
label = "R(2:28|1)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ 0x0078|nativeBindDouble(r11.mConnectionPtr, r9, r0 + 1, ((java.lang.Number) r12).doubleValue())\l}"];
Node_InsnContainer_268928760 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_276185337 {
label = "R(1:(2:27|1)(2:26|1))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_313397487 {
label = "IF [B:20:0x0051] THEN: R(2:27|1) ELSE: R(2:26|1)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0051|if ((r12 instanceof java.lang.Boolean) != true) goto L_0x006b\l}"];
subgraph cluster_Region_381633988 {
label = "R(2:27|1)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x006b|nativeBindString(r11.mConnectionPtr, r9, r0 + 1, r12.toString())\l}"];
Node_InsnContainer_171486143 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1220322715 {
label = "R(2:26|1)";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x0066|nativeBindLong(r11.mConnectionPtr, r9, r0 + 1, r12.booleanValue() ? 1 : 0)\l}"];
Node_InsnContainer_1607119482 [shape=record,label="{|break\l}"];
}
}
}
}
}
subgraph cluster_Region_1254864163 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x009e|nativeBindBlob(r11.mConnectionPtr, r9, r0 + 1, (byte[]) r12)\l}"];
}
}
Node_32 [shape=record,label="{32\:\ 0x00a9|LOOP_END\lLOOP:0: B:15:0x0041\-\>B:32:0x00a9\l|r0++\l}"];
}
}
}
subgraph cluster_Region_1935073085 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0003}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0005}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0006|PHI: r1 \l  PHI: (r1v0 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0030}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0036}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003e}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x004f}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x0053}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x005d}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x005f}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0061|PHI: r4 \l  PHI: (r4v5 long) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0063}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00ac}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x00ac|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x00a9|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x00a9|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x00a9|SYNTHETIC\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x00a9|SYNTHETIC\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x00a9|SYNTHETIC\l}"];
Node_40 [shape=record,color=red,label="{40\:\ 0x00a9|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.spatialite.database.SQLiteConnection.bindArguments((r11v0 'this' org.spatialite.database.SQLiteConnection A[IMMUTABLE_TYPE, THIS]), (r12v0 org.spatialite.database.SQLiteConnection$PreparedStatement A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_5 -> Node_6;
Node_5 -> Node_12[style=dashed];
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_10[style=dashed];
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_34[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_31[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_28;
Node_18 -> Node_29;
Node_18 -> Node_30;
Node_30 -> Node_40;
Node_29 -> Node_39;
Node_28 -> Node_38;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_27;
Node_27 -> Node_37;
Node_26 -> Node_36;
Node_31 -> Node_35;
Node_32 -> Node_15;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_26;
Node_25 -> Node_24;
Node_34 -> Node_33;
Node_35 -> Node_32;
Node_36 -> Node_32;
Node_37 -> Node_32;
Node_38 -> Node_32;
Node_39 -> Node_32;
Node_40 -> Node_32;
}

