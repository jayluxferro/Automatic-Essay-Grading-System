digraph "CFG fororg.spatialite.database.SQLiteStatement.execute()V" {
subgraph cluster_Region_1166208457 {
label = "R(2:0|(2:2|3))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|acquireReference()\l}"];
subgraph cluster_TryCatchRegion_2098151404 {
label = "Try: R(2:2|3) catches: R(3:6|8|9), R(3:5|10|11)";
node [shape=record,color=blue];
subgraph cluster_Region_2135957273 {
label = "R(2:2|3)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ SQLiteDatabaseCorruptException \-\> 0x001d, all \-\> 0x001b \}\lSplitter:B:1:0x0003\l|getSession().execute(getSql(), getBindArgs(), getConnectionFlags(), (android.support.p000v4.p002os.CancellationSignal) null)     \/\/ Catch:\{ SQLiteDatabaseCorruptException \-\> 0x001d, all \-\> 0x001b \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|releaseReference()\l}"];
}
subgraph cluster_Region_1321938870 {
label = "R(3:6|8|9) | ExcHandler: SQLiteDatabaseCorruptException (r0v0 'e' android.database.sqlite.SQLiteDatabaseCorruptException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|ExcHandler: SQLiteDatabaseCorruptException (r0v0 'e' android.database.sqlite.SQLiteDatabaseCorruptException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0003\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ SQLiteDatabaseCorruptException \-\> 0x001d, all \-\> 0x001b \}\lSplitter:B:7:0x001e\l|onCorruption()     \/\/ Catch:\{ SQLiteDatabaseCorruptException \-\> 0x001d, all \-\> 0x001b \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|Catch:\{ SQLiteDatabaseCorruptException \-\> 0x001d, all \-\> 0x001b \}\l|throw r0     \/\/ Catch:\{ SQLiteDatabaseCorruptException \-\> 0x001d, all \-\> 0x001b \}\l}"];
}
subgraph cluster_Region_485850883 {
label = "R(3:5|10|11) | ExcHandler: all (r0v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001b|ExcHandler: all (r0v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:7:0x001e\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|releaseReference()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|throw r0\l}"];
}
}
}
subgraph cluster_Region_1321938870 {
label = "R(3:6|8|9) | ExcHandler: SQLiteDatabaseCorruptException (r0v0 'e' android.database.sqlite.SQLiteDatabaseCorruptException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|ExcHandler: SQLiteDatabaseCorruptException (r0v0 'e' android.database.sqlite.SQLiteDatabaseCorruptException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0003\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ SQLiteDatabaseCorruptException \-\> 0x001d, all \-\> 0x001b \}\lSplitter:B:7:0x001e\l|onCorruption()     \/\/ Catch:\{ SQLiteDatabaseCorruptException \-\> 0x001d, all \-\> 0x001b \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|Catch:\{ SQLiteDatabaseCorruptException \-\> 0x001d, all \-\> 0x001b \}\l|throw r0     \/\/ Catch:\{ SQLiteDatabaseCorruptException \-\> 0x001d, all \-\> 0x001b \}\l}"];
}
subgraph cluster_Region_485850883 {
label = "R(3:5|10|11) | ExcHandler: all (r0v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001b|ExcHandler: all (r0v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:7:0x001e\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|releaseReference()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|throw r0\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x001a}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001e|SYNTHETIC\lSplitter:B:7:0x001e\l}"];
MethodNode[shape=record,label="{public void org.spatialite.database.SQLiteStatement.execute((r5v0 'this' org.spatialite.database.SQLiteStatement A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_5 -> Node_10;
Node_10 -> Node_11;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_5 -> Node_10;
Node_10 -> Node_11;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_5;
}

