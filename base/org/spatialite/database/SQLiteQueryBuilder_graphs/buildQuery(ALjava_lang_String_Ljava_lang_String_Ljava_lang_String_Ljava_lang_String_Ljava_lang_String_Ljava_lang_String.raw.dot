digraph "CFG fororg.spatialite.database.SQLiteQueryBuilder.buildQuery([Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.String[]) = \l  (r8 I:org.spatialite.database.SQLiteQueryBuilder)\l  (r9 I:java.lang.String[])\l org.spatialite.database.SQLiteQueryBuilder.computeProjection(java.lang.String[]):java.lang.String[] type: DIRECT \l0x0004: NEW_INSTANCE  (r9 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0006: INVOKE  (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0009: IGET  (r0 I:java.lang.StringBuilder) = (r8 I:org.spatialite.database.SQLiteQueryBuilder) org.spatialite.database.SQLiteQueryBuilder.mWhereClause java.lang.StringBuilder \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IGET  (r0 I:java.lang.StringBuilder) = (r8 I:org.spatialite.database.SQLiteQueryBuilder) org.spatialite.database.SQLiteQueryBuilder.mWhereClause java.lang.StringBuilder \l0x000f: INVOKE  (r0 I:int) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.length():int type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|0x0018: CONST  (r1 I:?[int, float, short, byte, char]) = (41 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0028 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: IGET  (r3 I:java.lang.StringBuilder) = (r8 I:org.spatialite.database.SQLiteQueryBuilder) org.spatialite.database.SQLiteQueryBuilder.mWhereClause java.lang.StringBuilder \l0x001e: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0022: INVOKE  (r9 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r9 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0042 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: INVOKE  (r3 I:int) = (r10 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x0042 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0037 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: CONST_STR  (r0 I:java.lang.String) =  \" AND \" \l0x0034: INVOKE  (r9 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: CONST  (r0 I:?[int, float, short, byte, char]) = (40 ?[int, float, short, byte, char]) \l0x0039: INVOKE  (r9 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x003c: INVOKE  (r9 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: INVOKE  (r9 I:java.lang.StringBuilder), (r1 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0042|0x0042: IGET  (r0 I:boolean) = (r8 I:org.spatialite.database.SQLiteQueryBuilder) org.spatialite.database.SQLiteQueryBuilder.mDistinct boolean \l0x0044: IGET  (r1 I:java.lang.String) = (r8 I:org.spatialite.database.SQLiteQueryBuilder) org.spatialite.database.SQLiteQueryBuilder.mTables java.lang.String \l0x0046: INVOKE  (r3 I:java.lang.String) = (r9 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004a: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x004b: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x004c: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x004d: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x004e: INVOKE  (r9 I:java.lang.String) = \l  (r0 I:boolean)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String[])\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l org.spatialite.database.SQLiteQueryBuilder.buildQueryString(boolean, java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String):java.lang.String type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|0x0052: RETURN  (r9 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String org.spatialite.database.SQLiteQueryBuilder.buildQuery((r8 'this' I:org.spatialite.database.SQLiteQueryBuilder A[IMMUTABLE_TYPE, THIS]), (r9 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

