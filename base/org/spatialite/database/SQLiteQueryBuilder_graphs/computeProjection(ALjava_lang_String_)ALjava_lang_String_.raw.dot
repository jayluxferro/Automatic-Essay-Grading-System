digraph "CFG fororg.spatialite.database.SQLiteQueryBuilder.computeProjection([Ljava\/lang\/String;)[Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0053 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: ARRAY_LENGTH  (r1 I:int) = (r6 I:?[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:23:0x0053 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|0x0006: IGET  (r1 I:java.util.Map\<java.lang.String, java.lang.String\>) = (r5 I:org.spatialite.database.SQLiteQueryBuilder) org.spatialite.database.SQLiteQueryBuilder.mProjectionMap java.util.Map \l}"];
Node_5 [shape=record,label="{5\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0052 \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: ARRAY_LENGTH  (r1 I:int) = (r6 I:?[]) \l0x000b: NEW_ARRAY  (r1 I:java.lang.String[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x000d: ARRAY_LENGTH  (r2 I:int) = (r6 I:?[]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:21:0x0051 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: AGET  (r3 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0012: IGET  (r4 I:java.util.Map\<java.lang.String, java.lang.String\>) = (r5 I:org.spatialite.database.SQLiteQueryBuilder) org.spatialite.database.SQLiteQueryBuilder.mProjectionMap java.util.Map \l0x0014: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Map), (r3 I:java.lang.Object) java.util.Map.get(java.lang.Object):java.lang.Object type: INTERFACE \l0x0018: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001f \l}"];
Node_10 [shape=record,label="{10\:\ 0x001c|0x001c: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: IGET  (r4 I:boolean) = (r5 I:org.spatialite.database.SQLiteQueryBuilder) org.spatialite.database.SQLiteQueryBuilder.mStrict boolean \l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|0x0021: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0038 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: CONST_STR  (r4 I:java.lang.String) =  \" AS \" \l0x0025: INVOKE  (r4 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.CharSequence) java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0029|0x0029: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0033 \l}"];
Node_15 [shape=record,label="{15\:\ 0x002b|0x002b: CONST_STR  (r4 I:java.lang.String) =  \" as \" \l0x002d: INVOKE  (r4 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.CharSequence) java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|0x0031: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0038 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|0x0033: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l}"];
Node_18 [shape=record,label="{18\:\ 0x0035|0x0035: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|0x0038: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x003a: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003c: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x003f: CONST_STR  (r3 I:java.lang.String) =  \"Invalid column \" \l0x0041: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0044: AGET  (r6 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0046: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0049: INVOKE  (r6 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004d: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r6 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_20 [shape=record,label="{20\:\ 0x0050|0x0050: THROW  (r1 I:java.lang.Throwable) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: RETURN  (r1 I:java.lang.String[]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0052|0x0052: RETURN  (r6 I:java.lang.String[]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0053|0x0053: IGET  (r6 I:java.util.Map\<java.lang.String, java.lang.String\>) = (r5 I:org.spatialite.database.SQLiteQueryBuilder) org.spatialite.database.SQLiteQueryBuilder.mProjectionMap java.util.Map \l}"];
Node_24 [shape=record,label="{24\:\ 0x0055|0x0055: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x008f \l}"];
Node_25 [shape=record,label="{25\:\ 0x0057|0x0057: IGET  (r6 I:java.util.Map\<java.lang.String, java.lang.String\>) = (r5 I:org.spatialite.database.SQLiteQueryBuilder) org.spatialite.database.SQLiteQueryBuilder.mProjectionMap java.util.Map \l0x0059: INVOKE  (r6 I:java.util.Set) = (r6 I:java.util.Map) java.util.Map.entrySet():java.util.Set type: INTERFACE \l0x005d: INVOKE  (r1 I:int) = (r6 I:java.util.Set) java.util.Set.size():int type: INTERFACE \l0x0061: NEW_ARRAY  (r1 I:java.lang.String[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0063: INVOKE  (r6 I:java.util.Iterator) = (r6 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_26 [shape=record,label="{26\:\ 0x0067|0x0067: INVOKE  (r2 I:boolean) = (r6 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x006b|0x006b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:32:0x008e \l}"];
Node_28 [shape=record,label="{28\:\ 0x006d|0x006d: INVOKE  (r2 I:java.lang.Object) = (r6 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0071: CHECK_CAST  (r2 I:java.util.Map$Entry) = (java.util.Map$Entry) (r2 I:?[OBJECT, ARRAY]) \l0x0073: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE \l0x0077: CHECK_CAST  (r3 I:java.lang.String) = (java.lang.String) (r3 I:?[OBJECT, ARRAY]) \l0x0079: CONST_STR  (r4 I:java.lang.String) =  \"_count\" \l0x007b: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x007f|0x007f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0082 \l}"];
Node_31 [shape=record,label="{31\:\ 0x0082|0x0082: ARITH  (r3 I:int) = (r0 I:int) + (1 int) \l0x0084: INVOKE  (r2 I:java.lang.Object) = (r2 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE \l0x0088: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x008a: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x008c: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_32 [shape=record,label="{32\:\ 0x008e|0x008e: RETURN  (r1 I:java.lang.String[]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x008f|0x008f: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_34 [shape=record,label="{34\:\ 0x0090|0x0090: RETURN  (r6 I:java.lang.String[]) \l}"];
MethodNode[shape=record,label="{private java.lang.String[] org.spatialite.database.SQLiteQueryBuilder.computeProjection((r5 'this' I:org.spatialite.database.SQLiteQueryBuilder A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_23;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_23;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_22;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_21;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_18;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_19;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_7;
Node_19 -> Node_20;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_33;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_32;
Node_28 -> Node_29;
Node_29 -> Node_31;
Node_29 -> Node_26[style=dashed];
Node_31 -> Node_26;
Node_33 -> Node_34;
}

