digraph "CFG fororg.spatialite.database.SQLiteQueryBuilder.appendWhere(Ljava\/lang\/CharSequence;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.mWhereClause != null) goto L_0x0011\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r2.mWhereClause = new java.lang.StringBuilder(r3.length() + 16)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011}"];
Node_4 [shape=record,label="{4\:\ 0x0017|if (r2.mWhereClause.length() != 0) goto L_0x0020\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|r2.mWhereClause.append('(')\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|r2.mWhereClause.append(r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.spatialite.database.SQLiteQueryBuilder.appendWhere((r2v0 'this' org.spatialite.database.SQLiteQueryBuilder A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.CharSequence A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

