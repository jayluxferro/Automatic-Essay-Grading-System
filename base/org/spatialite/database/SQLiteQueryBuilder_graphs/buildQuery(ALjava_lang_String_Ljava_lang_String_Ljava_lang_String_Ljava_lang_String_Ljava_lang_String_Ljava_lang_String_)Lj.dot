digraph "CFG fororg.spatialite.database.SQLiteQueryBuilder.buildQuery([Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String[] r2 = computeProjection(r9)\ljava.lang.StringBuilder r9 = new java.lang.StringBuilder()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (r8.mWhereClause == null) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d}"];
Node_3 [shape=record,label="{3\:\ 0x0013|if (r8.mWhereClause.length() \<= 0) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|r0 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|r0 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v5 boolean), (r0v8 boolean) binds: [B:5:0x0017, B:4:0x0015] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r0 == false) goto L_0x0028\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|r9.append(r8.mWhereClause.toString())\lr9.append(')')\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|if (r10 == null) goto L_0x0042\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a}"];
Node_11 [shape=record,label="{11\:\ 0x002e|if (r10.length() \<= 0) goto L_0x0042\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|if (r0 == false) goto L_0x0037\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|r9.append(\" AND \")\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|r9.append('(')\lr9.append(r10)\lr9.append(')')\l}"];
Node_15 [shape=record,label="{15\:\ 0x0042}"];
Node_16 [shape=record,label="{16\:\ 0x0052|RETURN\l|return buildQueryString(r8.mDistinct, r8.mTables, r2, r9.toString(), r11, r12, r13, r14)\l}"];
MethodNode[shape=record,label="{public java.lang.String org.spatialite.database.SQLiteQueryBuilder.buildQuery((r8v0 'this' org.spatialite.database.SQLiteQueryBuilder A[IMMUTABLE_TYPE, THIS]), (r9v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
}

