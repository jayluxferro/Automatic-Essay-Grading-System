digraph "CFG fororg.spatialite.database.SQLiteProgram.bind(ILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r3 \< 1) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r3 \> r2.mNumParameters) goto L_0x000d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|r2.mBindArgs[r3 \- 1] = r4\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|RETURN\l|return\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Cannot bind argument at index \")\lr0.append(r3)\lr0.append(\" because the index is out of range.  The statement has \")\lr0.append(r2.mNumParameters)\lr0.append(\" parameters.\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
MethodNode[shape=record,label="{private void org.spatialite.database.SQLiteProgram.bind((r2v0 'this' org.spatialite.database.SQLiteProgram A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

