digraph "CFG fororg.spatialite.database.SQLiteProgram.bind(ILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r3 I:?[int, byte, short, char]) \< (r0 I:?[int, byte, short, char])  \-\> B:6:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IGET  (r1 I:int) = (r2 I:org.spatialite.database.SQLiteProgram) org.spatialite.database.SQLiteProgram.mNumParameters int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r3 I:?[int, byte, short, char]) \> (r1 I:?[int, byte, short, char])  \-\> B:6:0x000d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IGET  (r1 I:java.lang.Object[]) = (r2 I:org.spatialite.database.SQLiteProgram) org.spatialite.database.SQLiteProgram.mBindArgs java.lang.Object[] \l0x0009: ARITH  (r3 I:int) = (r3 I:int) \- (r0 I:int) \l0x000a: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r3 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: NEW_INSTANCE  (r4 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x000f: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0011: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0014: CONST_STR  (r1 I:java.lang.String) =  \"Cannot bind argument at index \" \l0x0016: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0019: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x001c: CONST_STR  (r3 I:java.lang.String) =  \" because the index is out of range.  The statement has \" \l0x001e: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0021: IGET  (r3 I:int) = (r2 I:org.spatialite.database.SQLiteProgram) org.spatialite.database.SQLiteProgram.mNumParameters int \l0x0023: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0026: CONST_STR  (r3 I:java.lang.String) =  \" parameters.\" \l0x0028: INVOKE  (r0 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002b: INVOKE  (r3 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002f: INVOKE  \l  (r4 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|0x0032: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void org.spatialite.database.SQLiteProgram.bind((r2 'this' I:org.spatialite.database.SQLiteProgram A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_6 -> Node_7;
}

