digraph "CFG fororg.spatialite.database.SQLiteStatementType.getSqlStatementType(Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r13 I:java.lang.String) = (r13 I:java.lang.String) java.lang.String.trim():java.lang.String type: VIRTUAL \l0x0004: INVOKE  (r0 I:int) = (r13 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0008: CONST  (r1 I:?[int, float, short, byte, char]) = (99 ?[int, float, short, byte, char]) \l0x000a: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: RETURN  (r1 I:int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: INVOKE  (r13 I:java.lang.String) = (r13 I:java.lang.String), (r0 I:int), (r2 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0013: SGET  (r3 I:java.util.Locale) =  java.util.Locale.US java.util.Locale \l0x0015: INVOKE  (r13 I:java.lang.String) = (r13 I:java.lang.String), (r3 I:java.util.Locale) java.lang.String.toUpperCase(java.util.Locale):java.lang.String type: VIRTUAL \l0x0019: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x001a: INVOKE  (r4 I:int) = (r13 I:java.lang.String) java.lang.String.hashCode():int type: VIRTUAL \l0x001e: CONST  (r5 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l0x0020: CONST  (r6 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0022: CONST  (r7 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l0x0023: CONST  (r8 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0024: CONST  (r9 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0025: CONST  (r10 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0026: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0027: CONST  (r12 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[64905, 64948, 65153, 65636, 66913, 66998, 67563, 67571, 67969, 68795, 72654, 79487, 81021, 81327, 81978, 84233] t:[0x00d0, 0x00c5, 0x00bb, 0x00b0, 0x00a6, 0x009b, 0x0091, 0x0086, 0x007b, 0x0071, 0x0066, 0x005a, 0x004f, 0x0043, 0x0038, 0x002d] \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: CONST_STR  (r0 I:java.lang.String) =  \"UPD\" \l0x002f: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|0x0033: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_8 [shape=record,label="{8\:\ 0x0035|0x0035: CONST  (r13 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: CONST_STR  (r4 I:java.lang.String) =  \"SEL\" \l0x003a: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|0x003e: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|0x0043: CONST_STR  (r0 I:java.lang.String) =  \"ROL\" \l0x0045: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0049|0x0049: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|0x004b: CONST  (r13 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: CONST_STR  (r0 I:java.lang.String) =  \"REP\" \l0x0051: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0055|0x0055: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_17 [shape=record,label="{17\:\ 0x0057|0x0057: CONST  (r13 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x005a|0x005a: CONST_STR  (r0 I:java.lang.String) =  \"PRA\" \l0x005c: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0060|0x0060: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_20 [shape=record,label="{20\:\ 0x0062|0x0062: CONST  (r13 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0066|0x0066: CONST_STR  (r0 I:java.lang.String) =  \"INS\" \l0x0068: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x006c|0x006c: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_23 [shape=record,label="{23\:\ 0x006e|0x006e: CONST  (r13 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0071|0x0071: CONST_STR  (r0 I:java.lang.String) =  \"END\" \l0x0073: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x0077|0x0077: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_26 [shape=record,label="{26\:\ 0x0079|0x0079: CONST  (r13 I:?[int, float, short, byte, char]) = (7 ?[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x007b|0x007b: CONST_STR  (r0 I:java.lang.String) =  \"DRO\" \l0x007d: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x0081|0x0081: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_29 [shape=record,label="{29\:\ 0x0083|0x0083: CONST  (r13 I:?[int, float, short, byte, char]) = (12 ?[int, float, short, byte, char]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0086|0x0086: CONST_STR  (r0 I:java.lang.String) =  \"DET\" \l0x0088: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x008c|0x008c: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_32 [shape=record,label="{32\:\ 0x008e|0x008e: CONST  (r13 I:?[int, float, short, byte, char]) = (15 ?[int, float, short, byte, char]) \l}"];
Node_33 [shape=record,label="{33\:\ 0x0091|0x0091: CONST_STR  (r0 I:java.lang.String) =  \"DEL\" \l0x0093: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_34 [shape=record,label="{34\:\ 0x0097|0x0097: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_35 [shape=record,label="{35\:\ 0x0099|0x0099: CONST  (r13 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_36 [shape=record,label="{36\:\ 0x009b|0x009b: CONST_STR  (r0 I:java.lang.String) =  \"CRE\" \l0x009d: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_37 [shape=record,label="{37\:\ 0x00a1|0x00a1: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_38 [shape=record,label="{38\:\ 0x00a3|0x00a3: CONST  (r13 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x00a6|0x00a6: CONST_STR  (r0 I:java.lang.String) =  \"COM\" \l0x00a8: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_40 [shape=record,label="{40\:\ 0x00ac|0x00ac: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_41 [shape=record,label="{41\:\ 0x00ae|0x00ae: CONST  (r13 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l}"];
Node_42 [shape=record,label="{42\:\ 0x00b0|0x00b0: CONST_STR  (r0 I:java.lang.String) =  \"BEG\" \l0x00b2: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_43 [shape=record,label="{43\:\ 0x00b6|0x00b6: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_44 [shape=record,label="{44\:\ 0x00b8|0x00b8: CONST  (r13 I:?[int, float, short, byte, char]) = (9 ?[int, float, short, byte, char]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x00bb|0x00bb: CONST_STR  (r0 I:java.lang.String) =  \"ATT\" \l0x00bd: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_46 [shape=record,label="{46\:\ 0x00c1|0x00c1: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_47 [shape=record,label="{47\:\ 0x00c3|0x00c3: CONST  (r13 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l}"];
Node_48 [shape=record,label="{48\:\ 0x00c5|0x00c5: CONST_STR  (r0 I:java.lang.String) =  \"ANA\" \l0x00c7: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_49 [shape=record,label="{49\:\ 0x00cb|0x00cb: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_50 [shape=record,label="{50\:\ 0x00cd|0x00cd: CONST  (r13 I:?[int, float, short, byte, char]) = (14 ?[int, float, short, byte, char]) \l}"];
Node_51 [shape=record,label="{51\:\ 0x00d0|0x00d0: CONST_STR  (r0 I:java.lang.String) =  \"ALT\" \l0x00d2: INVOKE  (r13 I:boolean) = (r13 I:java.lang.String), (r0 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_52 [shape=record,label="{52\:\ 0x00d6|0x00d6: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00db \l}"];
Node_53 [shape=record,label="{53\:\ 0x00d8|0x00d8: CONST  (r13 I:?[int, float, short, byte, char]) = (13 ?[int, float, short, byte, char]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x00db|0x00db: CONST  (r13 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_55 [shape=record,label="{55\:\ 0x00dc|0x00dc: SWITCH  \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15] t:[0x00e9, 0x00e8, 0x00e8, 0x00e8, 0x00e8, 0x00e7, 0x00e6, 0x00e5, 0x00e4, 0x00e3, 0x00e2, 0x00e1, 0x00e1, 0x00e1, 0x00e0, 0x00e0] \l}"];
Node_56 [shape=record,label="{56\:\ 0x00df|0x00df: RETURN  (r1 I:int) \l}"];
Node_57 [shape=record,label="{57\:\ 0x00e0|0x00e0: RETURN  (r5 I:int) \l}"];
Node_58 [shape=record,label="{58\:\ 0x00e1|0x00e1: RETURN  (r6 I:int) \l}"];
Node_59 [shape=record,label="{59\:\ 0x00e2|0x00e2: RETURN  (r7 I:int) \l}"];
Node_60 [shape=record,label="{60\:\ 0x00e3|0x00e3: RETURN  (r8 I:int) \l}"];
Node_61 [shape=record,label="{61\:\ 0x00e4|0x00e4: RETURN  (r9 I:int) \l}"];
Node_62 [shape=record,label="{62\:\ 0x00e5|0x00e5: RETURN  (r12 I:int) \l}"];
Node_63 [shape=record,label="{63\:\ 0x00e6|0x00e6: RETURN  (r12 I:int) \l}"];
Node_64 [shape=record,label="{64\:\ 0x00e7|0x00e7: RETURN  (r2 I:int) \l}"];
Node_65 [shape=record,label="{65\:\ 0x00e8|0x00e8: RETURN  (r10 I:int) \l}"];
Node_66 [shape=record,label="{66\:\ 0x00e9|0x00e9: RETURN  (r11 I:int) \l}"];
MethodNode[shape=record,label="{public static int org.spatialite.database.SQLiteStatementType.getSqlStatementType((r13 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_9;
Node_4 -> Node_12;
Node_4 -> Node_15;
Node_4 -> Node_18;
Node_4 -> Node_21;
Node_4 -> Node_24;
Node_4 -> Node_27;
Node_4 -> Node_30;
Node_4 -> Node_33;
Node_4 -> Node_36;
Node_4 -> Node_39;
Node_4 -> Node_42;
Node_4 -> Node_45;
Node_4 -> Node_48;
Node_4 -> Node_51;
Node_4 -> Node_54;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_54;
Node_8 -> Node_55;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_54;
Node_11 -> Node_55;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_54;
Node_14 -> Node_55;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_54;
Node_17 -> Node_55;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_54;
Node_20 -> Node_55;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_54;
Node_23 -> Node_55;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_54;
Node_26 -> Node_55;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_54;
Node_29 -> Node_55;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_54;
Node_32 -> Node_55;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_54;
Node_35 -> Node_55;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_54;
Node_38 -> Node_55;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_54;
Node_41 -> Node_55;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_54;
Node_44 -> Node_55;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_54;
Node_47 -> Node_55;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_54;
Node_50 -> Node_55;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_54;
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_56;
Node_55 -> Node_57;
Node_55 -> Node_58;
Node_55 -> Node_59;
Node_55 -> Node_60;
Node_55 -> Node_61;
Node_55 -> Node_62;
Node_55 -> Node_63;
Node_55 -> Node_64;
Node_55 -> Node_65;
Node_55 -> Node_66;
}

