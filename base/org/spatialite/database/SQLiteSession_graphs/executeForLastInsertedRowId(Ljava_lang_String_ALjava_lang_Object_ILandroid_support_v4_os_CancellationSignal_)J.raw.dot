digraph "CFG fororg.spatialite.database.SQLiteSession.executeForLastInsertedRowId(Ljava\/lang\/String;[Ljava\/lang\/Object;ILandroid\/support\/v4\/os\/CancellationSignal;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001d \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:boolean) = \l  (r1 I:org.spatialite.database.SQLiteSession)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.Object[])\l  (r4 I:int)\l  (r5 I:android.support.v4.os.CancellationSignal)\l org.spatialite.database.SQLiteSession.executeSpecial(java.lang.String, java.lang.Object[], int, android.support.v4.os.CancellationSignal):boolean type: DIRECT \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000b \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: RETURN  (r2 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: INVOKE  \l  (r1 I:org.spatialite.database.SQLiteSession)\l  (r2 I:java.lang.String)\l  (r4 I:int)\l  (r5 I:android.support.v4.os.CancellationSignal)\l org.spatialite.database.SQLiteSession.acquireConnection(java.lang.String, int, android.support.v4.os.CancellationSignal):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|SYNTHETIC\lSplitter:B:6:0x000e\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x000e\l|0x000e: IGET  (r4 I:org.spatialite.database.SQLiteConnection) = (r1 I:org.spatialite.database.SQLiteSession) org.spatialite.database.SQLiteSession.mConnection org.spatialite.database.SQLiteConnection A[Catch:\{ all \-\> 0x0018 \}, TRY_ENTER]\l0x0010: INVOKE  (r2 I:long) = \l  (r4 I:org.spatialite.database.SQLiteConnection)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.Object[])\l  (r5 I:android.support.v4.os.CancellationSignal)\l org.spatialite.database.SQLiteConnection.executeForLastInsertedRowId(java.lang.String, java.lang.Object[], android.support.v4.os.CancellationSignal):long type: VIRTUAL A[Catch:\{ all \-\> 0x0018 \}]\l0x0013: NOP   A[TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: INVOKE  (r1 I:org.spatialite.database.SQLiteSession) org.spatialite.database.SQLiteSession.releaseConnection():void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|0x0017: RETURN  (r2 I:long) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|ExcHandler: all null\lSplitter:B:6:0x000e\l|0x0018: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x0019|0x0019: INVOKE  (r1 I:org.spatialite.database.SQLiteSession) org.spatialite.database.SQLiteSession.releaseConnection():void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|0x001c: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|0x001d: NEW_INSTANCE  (r2 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001f: CONST_STR  (r3 I:java.lang.String) =  \"sql must not be null.\" \l0x0021: INVOKE  \l  (r2 I:java.lang.IllegalArgumentException)\l  (r3 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x0024|0x0024: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public long org.spatialite.database.SQLiteSession.executeForLastInsertedRowId((r1 'this' I:org.spatialite.database.SQLiteSession A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.support.v4.os.CancellationSignal A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_13;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

