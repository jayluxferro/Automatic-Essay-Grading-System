digraph "CFG fororg.spatialite.database.SQLiteSession.yieldTransactionUnchecked(JLandroid\/support\/v4\/os\/CancellationSignal;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r9 == null) goto L_0x0005\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|r9.throwIfCanceled()\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x000f|if (r6.mConnectionPool.shouldYieldConnection(r6.mConnection, r6.mConnectionFlags) != false) goto L_0x0013\l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|RETURN\l|return false\l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|int r0 = r6.mTransactionStack.mMode\landroid.database.sqlite.SQLiteTransactionListener r1 = r6.mTransactionStack.mListener\lint r2 = r6.mConnectionFlags\lendTransactionUnchecked(r9, true)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|if ((r7 \> 0 ? 1 : (r7 == 0 ? 0 : \-1)) \<= 0) goto L_0x002a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|SYNTHETIC\lSplitter:B:7:0x0027\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ InterruptedException \-\> 0x002a \}\lSplitter:B:7:0x0027\l|java.lang.Thread.sleep(r7)     \/\/ Catch:\{ InterruptedException \-\> 0x002a \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|beginTransactionUnchecked(r0, r1, r2, r9)\l}"];
Node_10 [shape=record,label="{10\:\ ?|SYNTHETIC\lExcHandler: InterruptedException (unused java.lang.InterruptedException)\lSplitter:B:7:0x0027\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|RETURN\l|return true\l}"];
MethodNode[shape=record,label="{private boolean org.spatialite.database.SQLiteSession.yieldTransactionUnchecked((r6v0 'this' org.spatialite.database.SQLiteSession A[IMMUTABLE_TYPE, THIS]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 android.support.v4.os.CancellationSignal A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_9;
}

