digraph "CFG fororg.spatialite.database.SQLiteSession.yieldTransaction(JZLandroid\/support\/v4\/os\/CancellationSignal;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r4 == false) goto L_0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|throwIfNoTransaction()\lthrowIfTransactionMarkedSuccessful()\lthrowIfNestedTransaction()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d}"];
Node_4 [shape=record,label="{4\:\ 0x000f|if (r1.mTransactionStack == null) goto L_0x002a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011}"];
Node_6 [shape=record,label="{6\:\ 0x0015|if (r1.mTransactionStack.mMarkedSuccessful != false) goto L_0x002a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017}"];
Node_8 [shape=record,label="{8\:\ 0x001b|if (r1.mTransactionStack.mParent == null) goto L_0x001e\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e}"];
Node_10 [shape=record,label="{10\:\ 0x0022|if (r1.mTransactionStack.mChildFailed == false) goto L_0x0025\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|RETURN\l|return false\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025}"];
Node_13 [shape=record,label="{13\:\ 0x0029|RETURN\l|return yieldTransactionUnchecked(r2, r5)\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean org.spatialite.database.SQLiteSession.yieldTransaction((r1v0 'this' org.spatialite.database.SQLiteSession A[IMMUTABLE_TYPE, THIS]), (r2v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.support.v4.os.CancellationSignal A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_14[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_12 -> Node_13;
}

