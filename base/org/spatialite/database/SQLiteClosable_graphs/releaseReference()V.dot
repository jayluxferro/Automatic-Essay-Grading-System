digraph "CFG fororg.spatialite.database.SQLiteClosable.releaseReference()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r2)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|r1 = true\lint r0 = r2.mReferenceCount \- 1\lr2.mReferenceCount = r0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|if (r0 != 0) goto L_0x000a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009}"];
Node_5 [shape=record,label="{5\:\ 0x000a|r1 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v2 boolean), (r1v0 boolean) binds: [B:5:0x000a, B:4:0x0009] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r2)\l}"];
Node_7 [shape=record,label="{7\:\ 0x000c|if (r1 == false) goto L_?\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|onAllReferencesReleased()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|LOOP_START\lREMOVE\lLOOP:0: B:9:0x0012\-\>B:13:0x0012\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|SYNTHETIC\lREMOVE\lSplitter:B:10:0x0013\l}"];
Node_11 [shape=record,label="{11\:\ ?|REMOVE\lSplitter:B:10:0x0013\l}"];
Node_12 [shape=record,label="{12\:\ 0x0014|REMOVE\l|throw r0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0012|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:9:0x0012\-\>B:13:0x0012\l}"];
Node_14 [shape=record,label="{14\:\ 0x0014|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_15 [shape=record,label="{15\:\ 0x0012|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_16 [shape=record,label="{16\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.spatialite.database.SQLiteClosable.releaseReference((r2v0 'this' org.spatialite.database.SQLiteClosable A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_17;
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_13;
Node_11 -> Node_14;
Node_11 -> Node_15;
Node_13 -> Node_9;
Node_14 -> Node_12;
Node_15 -> Node_13;
}

