digraph "CFG fororg.spatialite.database.SQLiteConnectionPool.collectDbStats(Ljava\/util\/ArrayList;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r3 I:org.spatialite.database.SQLiteConnectionPool) org.spatialite.database.SQLiteConnectionPool.mLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:org.spatialite.database.SQLiteConnection) = (r3 I:org.spatialite.database.SQLiteConnectionPool) org.spatialite.database.SQLiteConnectionPool.mAvailablePrimaryConnection org.spatialite.database.SQLiteConnection A[Catch:\{ all \-\> 0x003e \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000c A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IGET  (r1 I:org.spatialite.database.SQLiteConnection) = (r3 I:org.spatialite.database.SQLiteConnectionPool) org.spatialite.database.SQLiteConnectionPool.mAvailablePrimaryConnection org.spatialite.database.SQLiteConnection A[Catch:\{ all \-\> 0x003e \}]\l0x0009: INVOKE  \l  (r1 I:org.spatialite.database.SQLiteConnection)\l  (r4 I:java.util.ArrayList)\l org.spatialite.database.SQLiteConnection.collectDbStats(java.util.ArrayList):void type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|0x000c: IGET  (r1 I:java.util.ArrayList\<org.spatialite.database.SQLiteConnection\>) = (r3 I:org.spatialite.database.SQLiteConnectionPool) org.spatialite.database.SQLiteConnectionPool.mAvailableNonPrimaryConnections java.util.ArrayList A[Catch:\{ all \-\> 0x003e \}]\l0x000e: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.ArrayList) java.util.ArrayList.iterator():java.util.Iterator type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0022 A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x003e \}]\l0x001c: CHECK_CAST  (r2 I:org.spatialite.database.SQLiteConnection) = (org.spatialite.database.SQLiteConnection) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003e \}]\l0x001e: INVOKE  \l  (r2 I:org.spatialite.database.SQLiteConnection)\l  (r4 I:java.util.ArrayList)\l org.spatialite.database.SQLiteConnection.collectDbStats(java.util.ArrayList):void type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}]\l0x0021: GOTO  \-\> 0x0012 A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: IGET  (r1 I:java.util.WeakHashMap\<org.spatialite.database.SQLiteConnection, org.spatialite.database.SQLiteConnectionPool$AcquiredConnectionStatus\>) = (r3 I:org.spatialite.database.SQLiteConnectionPool) org.spatialite.database.SQLiteConnectionPool.mAcquiredConnections java.util.WeakHashMap A[Catch:\{ all \-\> 0x003e \}]\l0x0024: INVOKE  (r1 I:java.util.Set) = (r1 I:java.util.WeakHashMap) java.util.WeakHashMap.keySet():java.util.Set type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}]\l0x0028: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x003c A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x003e \}]\l0x0036: CHECK_CAST  (r2 I:org.spatialite.database.SQLiteConnection) = (org.spatialite.database.SQLiteConnection) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003e \}]\l0x0038: INVOKE  \l  (r2 I:org.spatialite.database.SQLiteConnection)\l  (r4 I:java.util.ArrayList)\l org.spatialite.database.SQLiteConnection.collectDbStatsUnsafe(java.util.ArrayList):void type: VIRTUAL A[Catch:\{ all \-\> 0x003e \}]\l0x003b: GOTO  \-\> 0x002c A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|0x003c: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x003d|0x003d: RETURN   A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003e|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x003e: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x003e \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|0x003f: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x003e \}, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0040|0x0040: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.spatialite.database.SQLiteConnectionPool.collectDbStats((r3 'this' I:org.spatialite.database.SQLiteConnectionPool A[IMMUTABLE_TYPE, THIS]), (r4 I:java.util.ArrayList\<org.spatialite.database.SQLiteDebug$DbStats\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/ArrayList\<, Lorg\/spatialite\/database\/SQLiteDebug$DbStats;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_11;
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

