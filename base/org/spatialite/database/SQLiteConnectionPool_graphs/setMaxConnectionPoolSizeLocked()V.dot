digraph "CFG fororg.spatialite.database.SQLiteConnectionPool.setMaxConnectionPoolSizeLocked()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (org.spatialite.database.SQLiteDatabase.hasCodec() != false) goto L_0x0016\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if ((r2.mConfiguration.openFlags & org.spatialite.database.SQLiteDatabase.ENABLE_WRITE_AHEAD_LOGGING) == 0) goto L_0x0016\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|r2.mMaxConnectionPoolSize = org.spatialite.database.SQLiteGlobal.getWALConnectionPoolSize()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|r2.mMaxConnectionPoolSize = 1\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void org.spatialite.database.SQLiteConnectionPool.setMaxConnectionPoolSizeLocked((r2v0 'this' org.spatialite.database.SQLiteConnectionPool A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_7;
Node_5 -> Node_6;
}

