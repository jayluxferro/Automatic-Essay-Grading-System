digraph "CFG fororg.spatialite.database.SQLiteConnectionPool.shouldYieldConnection(Lorg\/spatialite\/database\/SQLiteConnection;I)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r2 I:org.spatialite.database.SQLiteConnectionPool) org.spatialite.database.SQLiteConnectionPool.mLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:java.util.WeakHashMap\<org.spatialite.database.SQLiteConnection, org.spatialite.database.SQLiteConnectionPool$AcquiredConnectionStatus\>) = (r2 I:org.spatialite.database.SQLiteConnectionPool) org.spatialite.database.SQLiteConnectionPool.mAcquiredConnections java.util.WeakHashMap A[Catch:\{ all \-\> 0x0024 \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:boolean) = (r1 I:java.util.WeakHashMap), (r3 I:java.lang.Object) java.util.WeakHashMap.containsKey(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x001c A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|0x000b: IGET  (r1 I:boolean) = (r2 I:org.spatialite.database.SQLiteConnectionPool) org.spatialite.database.SQLiteConnectionPool.mIsOpen boolean A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0012 A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: RETURN  (r3 I:boolean) A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|0x0012: INVOKE  (r3 I:boolean) = (r3 I:org.spatialite.database.SQLiteConnection) org.spatialite.database.SQLiteConnection.isPrimaryConnection():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0024 \}]\l0x0016: INVOKE  (r3 I:boolean) = \l  (r2 I:org.spatialite.database.SQLiteConnectionPool)\l  (r3 I:boolean)\l  (r4 I:int)\l org.spatialite.database.SQLiteConnectionPool.isSessionBlockingImportantConnectionWaitersLocked(boolean, int):boolean type: DIRECT A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|0x001a: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x001b|0x001b: RETURN  (r3 I:boolean) A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x001c|0x001c: NEW_INSTANCE  (r3 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ all \-\> 0x0024 \}]\l0x001e: CONST_STR  (r4 I:java.lang.String) =  \"Cannot perform this operation because the specified connection was not acquired from this pool or has already been released.\" A[Catch:\{ all \-\> 0x0024 \}]\l0x0020: INVOKE  \l  (r3 I:java.lang.IllegalStateException)\l  (r4 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0023|0x0023: THROW  (r3 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0024|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0024: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0024 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0025|0x0025: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0024 \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|0x0026: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean org.spatialite.database.SQLiteConnectionPool.shouldYieldConnection((r2 'this' I:org.spatialite.database.SQLiteConnectionPool A[IMMUTABLE_TYPE, THIS]), (r3 I:org.spatialite.database.SQLiteConnection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

