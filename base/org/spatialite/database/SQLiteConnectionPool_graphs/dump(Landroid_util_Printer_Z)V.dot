digraph "CFG fororg.spatialite.database.SQLiteConnectionPool.dump(Landroid\/util\/Printer;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Object r0 = r8.mLock\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|java.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr1.append(\"Connection pool for \")\lr1.append(r8.mConfiguration.path)\lr1.append(\":\")\lr9.println(r1.toString())\ljava.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr1.append(\"  Open: \")\lr1.append(r8.mIsOpen)\lr9.println(r1.toString())\ljava.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr1.append(\"  Max connections: \")\lr1.append(r8.mMaxConnectionPoolSize)\lr9.println(r1.toString())\lr9.println(\"  Available primary connection:\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x0053|if (r8.mAvailablePrimaryConnection == null) goto L_0x005b\l}"];
Node_5 [shape=record,label="{5\:\ 0x0055|r8.mAvailablePrimaryConnection.dump(r9, r10)\l}"];
Node_6 [shape=record,label="{6\:\ 0x005b|r9.println(\"\<none\>\")\l}"];
Node_7 [shape=record,label="{7\:\ 0x0060|r9.println(\"  Available non\-primary connections:\")\l}"];
Node_8 [shape=record,label="{8\:\ 0x006b|if (r8.mAvailableNonPrimaryConnections.isEmpty() != false) goto L_0x0083\l}"];
Node_9 [shape=record,label="{9\:\ 0x006d|java.util.Iterator r1 = r8.mAvailableNonPrimaryConnections.iterator()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0073|LOOP_START\lLOOP:0: B:10:0x0073\-\>B:12:0x0079\l}"];
Node_11 [shape=record,label="{11\:\ 0x0077|if (r1.hasNext() == false) goto L_0x0088\l}"];
Node_12 [shape=record,label="{12\:\ 0x0079|LOOP_END\lLOOP:0: B:10:0x0073\-\>B:12:0x0079\l|r1.next().dump(r9, r10)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0083|r9.println(\"\<none\>\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x0088|r9.println(\"  Acquired connections:\")\l}"];
Node_15 [shape=record,label="{15\:\ 0x0093|if (r8.mAcquiredConnections.isEmpty() != false) goto L_0x00cd\l}"];
Node_16 [shape=record,label="{16\:\ 0x0095|java.util.Iterator r1 = r8.mAcquiredConnections.entrySet().iterator()\l}"];
Node_17 [shape=record,label="{17\:\ 0x009f|LOOP_START\lLOOP:1: B:17:0x009f\-\>B:19:0x00a5\l}"];
Node_18 [shape=record,label="{18\:\ 0x00a3|if (r1.hasNext() == false) goto L_0x00d2\l}"];
Node_19 [shape=record,label="{19\:\ 0x00a5|LOOP_END\lLOOP:1: B:17:0x009f\-\>B:19:0x00a5\l|java.util.Map$Entry r2 = r1.next()\l((org.spatialite.database.SQLiteConnection) r2.getKey()).dumpUnsafe(r9, r10)\ljava.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr3.append(\"  Status: \")\lr3.append(r2.getValue())\lr9.println(r3.toString())\l}"];
Node_20 [shape=record,label="{20\:\ 0x00cd|r9.println(\"\<none\>\")\l}"];
Node_21 [shape=record,label="{21\:\ 0x00d2|r9.println(\"  Connection waiters:\")\l}"];
Node_22 [shape=record,label="{22\:\ 0x00d9|if (r8.mConnectionWaiterQueue == null) goto L_0x012e\l}"];
Node_23 [shape=record,label="{23\:\ 0x00db|r10 = 0\llong r1 = android.os.SystemClock.uptimeMillis()\lorg.spatialite.database.SQLiteConnectionPool$ConnectionWaiter r3 = r8.mConnectionWaiterQueue\l}"];
Node_24 [shape=record,label="{24\:\ 0x00e2|LOOP_START\lPHI: r3 r10 \l  PHI: (r3v1 org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter) = (r3v0 org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter), (r3v2 org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter) binds: [B:23:0x00db, B:25:0x00e4] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v5 int) = (r10v4 int), (r10v6 int) binds: [B:23:0x00db, B:25:0x00e4] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:24:0x00e2\-\>B:25:0x00e4\l|if (r3 == null) goto L_0x0133\l}"];
Node_25 [shape=record,label="{25\:\ 0x00e4|LOOP_END\lLOOP:2: B:24:0x00e2\-\>B:25:0x00e4\l|java.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr4.append(r10)\lr4.append(\": waited for \")\lr4.append(((float) (r1 \- r3.mStartTime)) * 0.001f)\lr4.append(\" ms \- thread=\")\lr4.append(r3.mThread)\lr4.append(\", priority=\")\lr4.append(r3.mPriority)\lr4.append(\", sql='\")\lr4.append(r3.mSql)\lr4.append(\"'\")\lr9.println(r4.toString())\lorg.spatialite.database.SQLiteConnectionPool$ConnectionWaiter r3 = r3.mNext\lint r10 = r10 + 1\l}"];
Node_26 [shape=record,label="{26\:\ 0x012e|r9.println(\"\<none\>\")\l}"];
Node_27 [shape=record,label="{27\:\ 0x0133|monitor\-exit(r0)\l}"];
Node_28 [shape=record,label="{28\:\ 0x0134|RETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x0135|REMOVE\l|java.lang.Throwable r9 = move\-exception\l}"];
Node_30 [shape=record,label="{30\:\ 0x0136|REMOVE\l}"];
Node_31 [shape=record,label="{31\:\ 0x0137|REMOVE\l|throw r9\l}"];
Node_32 [shape=record,label="{32\:\ 0x0088|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x00d2|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0133|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.spatialite.database.SQLiteConnectionPool.dump((r8v0 'this' org.spatialite.database.SQLiteConnectionPool A[IMMUTABLE_TYPE, THIS]), (r9v0 android.util.Printer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_29;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_32;
Node_12 -> Node_10;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_33;
Node_19 -> Node_17;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_34;
Node_25 -> Node_24;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_14;
Node_33 -> Node_21;
Node_34 -> Node_27;
}

