digraph "CFG fororg.spatialite.database.SQLiteConnectionPool.obtainConnectionWaiterLocked(Ljava\/lang\/Thread;JIZLjava\/lang\/String;I)Lorg\/spatialite\/database\/SQLiteConnectionPool$ConnectionWaiter;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter) = (r3 I:org.spatialite.database.SQLiteConnectionPool) org.spatialite.database.SQLiteConnectionPool.mConnectionWaiterPool org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r2 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter) = \l  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l org.spatialite.database.SQLiteConnectionPool.ConnectionWaiter.mNext org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter \l0x0007: IPUT  \l  (r2 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l  (r3 I:org.spatialite.database.SQLiteConnectionPool)\l org.spatialite.database.SQLiteConnectionPool.mConnectionWaiterPool org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter \l0x0009: IPUT  \l  (r1 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l org.spatialite.database.SQLiteConnectionPool.ConnectionWaiter.mNext org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: NEW_INSTANCE  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter) =  org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter \l0x000e: INVOKE  \l  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l  (r1 I:org.spatialite.database.SQLiteConnectionPool$1)\l org.spatialite.database.SQLiteConnectionPool.ConnectionWaiter.\<init\>(org.spatialite.database.SQLiteConnectionPool$1):void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IPUT  \l  (r4 I:java.lang.Thread)\l  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l org.spatialite.database.SQLiteConnectionPool.ConnectionWaiter.mThread java.lang.Thread \l0x0013: IPUT  \l  (r5 I:long)\l  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l org.spatialite.database.SQLiteConnectionPool.ConnectionWaiter.mStartTime long \l0x0015: IPUT  \l  (r7 I:int)\l  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l org.spatialite.database.SQLiteConnectionPool.ConnectionWaiter.mPriority int \l0x0017: IPUT  \l  (r8 I:boolean)\l  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l org.spatialite.database.SQLiteConnectionPool.ConnectionWaiter.mWantPrimaryConnection boolean \l0x0019: IPUT  \l  (r9 I:java.lang.String)\l  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l org.spatialite.database.SQLiteConnectionPool.ConnectionWaiter.mSql java.lang.String \l0x001b: IPUT  \l  (r10 I:int)\l  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l org.spatialite.database.SQLiteConnectionPool.ConnectionWaiter.mConnectionFlags int \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: RETURN  \l  (r0 I:org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter)\l \l}"];
MethodNode[shape=record,label="{private org.spatialite.database.SQLiteConnectionPool$ConnectionWaiter org.spatialite.database.SQLiteConnectionPool.obtainConnectionWaiterLocked((r3 'this' I:org.spatialite.database.SQLiteConnectionPool A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.Thread A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

