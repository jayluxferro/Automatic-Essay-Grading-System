digraph "CFG fororg.spatialite.database.SQLiteCursor.\<init\>(Lorg\/spatialite\/database\/SQLiteCursorDriver;Ljava\/lang\/String;Lorg\/spatialite\/database\/SQLiteQuery;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.spatialite.AbstractWindowedCursor) org.spatialite.AbstractWindowedCursor.\<init\>():void type: DIRECT \l0x0003: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0004: IPUT  (r2 I:int), (r0 I:org.spatialite.database.SQLiteCursor) org.spatialite.database.SQLiteCursor.mCount int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IPUT  \l  (r1 I:org.spatialite.database.SQLiteCursorDriver)\l  (r0 I:org.spatialite.database.SQLiteCursor)\l org.spatialite.database.SQLiteCursor.mDriver org.spatialite.database.SQLiteCursorDriver \l0x000a: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: IPUT  \l  (r1 I:android.util.SparseIntArray)\l  (r0 I:org.spatialite.database.SQLiteCursor)\l org.spatialite.database.SQLiteCursor.mColumnNameMap android.util.SparseIntArray \l0x000d: IPUT  \l  (r3 I:org.spatialite.database.SQLiteQuery)\l  (r0 I:org.spatialite.database.SQLiteCursor)\l org.spatialite.database.SQLiteCursor.mQuery org.spatialite.database.SQLiteQuery \l0x000f: INVOKE  (r1 I:org.spatialite.database.CloseGuard) =  org.spatialite.database.CloseGuard.get():org.spatialite.database.CloseGuard type: STATIC \l0x0013: IPUT  \l  (r1 I:org.spatialite.database.CloseGuard)\l  (r0 I:org.spatialite.database.SQLiteCursor)\l org.spatialite.database.SQLiteCursor.mCloseGuard org.spatialite.database.CloseGuard \l0x0015: INVOKE  (r1 I:java.lang.String[]) = (r3 I:org.spatialite.database.SQLiteQuery) org.spatialite.database.SQLiteQuery.getColumnNames():java.lang.String[] type: VIRTUAL \l0x0019: IPUT  \l  (r1 I:java.lang.String[])\l  (r0 I:org.spatialite.database.SQLiteCursor)\l org.spatialite.database.SQLiteCursor.mColumns java.lang.String[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: NEW_INSTANCE  (r1 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x001e: CONST_STR  (r2 I:java.lang.String) =  \"query object cannot be null\" \l0x0020: INVOKE  \l  (r1 I:java.lang.IllegalArgumentException)\l  (r2 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.spatialite.database.SQLiteCursor.\<init\>((r0 'this' I:org.spatialite.database.SQLiteCursor A[IMMUTABLE_TYPE, THIS]), (r1 I:org.spatialite.database.SQLiteCursorDriver A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.spatialite.database.SQLiteQuery A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

