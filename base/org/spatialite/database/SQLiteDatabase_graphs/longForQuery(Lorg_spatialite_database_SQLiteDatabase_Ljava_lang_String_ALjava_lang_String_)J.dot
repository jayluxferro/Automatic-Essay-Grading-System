digraph "CFG fororg.spatialite.database.SQLiteDatabase.longForQuery(Lorg\/spatialite\/database\/SQLiteDatabase;Ljava\/lang\/String;[Ljava\/lang\/String;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.spatialite.database.SQLiteStatement r0 = r0.compileStatement(r1)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|SYNTHETIC\lSplitter:B:1:0x0004\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x000c \}\lSplitter:B:1:0x0004\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|DONT_GENERATE\l|r0.close()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|RETURN\l|return longForQuery(r0, r2)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|ExcHandler:  FINALLY\lSplitter:B:1:0x0004\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|FINALLY_INSNS\l|r0.close()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|throw r1\l}"];
MethodNode[shape=record,label="{private static long org.spatialite.database.SQLiteDatabase.longForQuery((r0v0 org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

