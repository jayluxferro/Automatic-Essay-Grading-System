digraph "CFG fororg.spatialite.database.SQLiteDatabase.insertWithOnConflict(Ljava\/lang\/String;Ljava\/lang\/String;Landroid\/content\/ContentValues;I)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|acquireReference()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lSplitter:B:1:0x0003\l|java.lang.StringBuilder r0 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr0.append(\"INSERT\")     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr0.append(CONFLICT_VALUES[r9])     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr0.append(\" INTO \")     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr0.append(r6)     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr0.append('(')     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr6 = null     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr9 = 0     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|if (r8 == null) goto L_0x0030     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|if (r8.size() \<= 0) goto L_0x0030     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|int r1 = r8.size()     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|r1 = 0     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lPHI: r1 \l  PHI: (r1v2 int) = (r1v3 int), (r1v5 int) binds: [B:7:0x0030, B:6:0x002b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|if (r1 \<= 0) goto L_0x0080     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|java.lang.Object[] r6 = new java.lang.Object[r1]     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\ljava.util.Iterator r7 = r8.valueSet().iterator()     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr8 = 0     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|LOOP_START\lCatch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lPHI: r8 \l  PHI: (r8v5 int) = (r8v4 int), (r8v6 int) binds: [B:10:0x0035, B:17:0x0053] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:11:0x0040\-\>B:17:0x0053\l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|if (r7.hasNext() == false) goto L_0x0069     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|java.util.Map$Entry r3 = r7.next()     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|if (r8 \<= 0) goto L_0x0051     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|java.lang.String r4 = \",\"     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|java.lang.String r4 = \"\"     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|LOOP_END\lCatch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lPHI: r4 \l  PHI: (r4v0 java.lang.String) = (r4v4 java.lang.String), (r4v5 java.lang.String) binds: [B:40:0x0053, B:41:0x0053] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:11:0x0040\-\>B:17:0x0053\l|r0.append(r4)     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr0.append((java.lang.String) r3.getKey())     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr6[r8] = r3.getValue()     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr8 = r8 + 1     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0069|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|r0.append(')')     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr0.append(\" VALUES (\")     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0071|LOOP_START\lCatch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lPHI: r9 \l  PHI: (r9v4 int) = (r9v3 int), (r9v5 int) binds: [B:18:0x0069, B:23:0x007a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x0071\-\>B:23:0x007a\l|if (r9 \>= r1) goto L_0x0094     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0073|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|if (r9 \<= 0) goto L_0x0078     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0075|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|java.lang.String r7 = \",?\"     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x0078|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|java.lang.String r7 = \"?\"     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x007a|LOOP_END\lCatch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lPHI: r7 \l  PHI: (r7v7 java.lang.String) = (r7v8 java.lang.String), (r7v9 java.lang.String) binds: [B:43:0x007a, B:44:0x007a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x0071\-\>B:23:0x007a\l|r0.append(r7)     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lint r9 = r9 + 1     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0080|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|java.lang.StringBuilder r8 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr8.append(r7)     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr8.append(\") VALUES (NULL\")     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lr0.append(r8.toString())     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x0094|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lPHI: r6 \l  PHI: (r6v4 java.lang.Object[]) = (r6v3 java.lang.Object[]), (r6v6 java.lang.Object[]) binds: [B:24:0x0080, B:42:0x0094] A[DONT_GENERATE, DONT_INLINE]\l|r0.append(')')     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lorg.spatialite.database.SQLiteStatement r7 = new org.spatialite.database.SQLiteStatement(r5, r0.toString(), r6)     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a0|SYNTHETIC\lSplitter:B:26:0x00a0\l}"];
Node_27 [shape=record,label="{27\:\ ?|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lSplitter:B:26:0x00a0\l|long r8 = r7.executeInsert()     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x00a4|SYNTHETIC\lSplitter:B:28:0x00a4\l}"];
Node_29 [shape=record,label="{29\:\ ?|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lSplitter:B:28:0x00a4\l|r7.close()     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x00a7|releaseReference()\l}"];
Node_31 [shape=record,label="{31\:\ 0x00aa|RETURN\l|return r8\l}"];
Node_32 [shape=record,label="{32\:\ 0x00ab|ExcHandler: all (r6v5 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:26:0x00a0\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_33 [shape=record,label="{33\:\ 0x00ac|SYNTHETIC\lSplitter:B:33:0x00ac\l}"];
Node_34 [shape=record,label="{34\:\ ?|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\lSplitter:B:33:0x00ac\l|r7.close()     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_35 [shape=record,label="{35\:\ 0x00af|Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l|throw r6     \/\/ Catch:\{ all \-\> 0x00ab, all \-\> 0x00b0 \}\l}"];
Node_36 [shape=record,label="{36\:\ 0x00b0|ExcHandler: all (r6v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0003\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_37 [shape=record,label="{37\:\ 0x00b1|releaseReference()\l}"];
Node_38 [shape=record,label="{38\:\ 0x00b4|throw r6\l}"];
Node_39 [shape=record,label="{39\:\ 0x0069|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0053|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0053|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x0094|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x007a|SYNTHETIC\l}"];
Node_44 [shape=record,label="{44\:\ 0x007a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public long org.spatialite.database.SQLiteDatabase.insertWithOnConflict((r5v0 'this' org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 android.content.ContentValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_36;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_24;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_39;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_41;
Node_16 -> Node_40;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_42;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_44;
Node_22 -> Node_43;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_32;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_36;
Node_29 -> Node_30;
Node_29 -> Node_36;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_37 -> Node_38;
Node_39 -> Node_18;
Node_40 -> Node_17;
Node_41 -> Node_17;
Node_42 -> Node_25;
Node_43 -> Node_23;
Node_44 -> Node_23;
}

