digraph "CFG fororg.spatialite.database.SQLiteDatabase.updateWithOnConflict(Ljava\/lang\/String;Landroid\/content\/ContentValues;Ljava\/lang\/String;[Ljava\/lang\/String;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r7 == null) goto L_0x00a3\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r7.size() == 0) goto L_0x00a3\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|acquireReference()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|SYNTHETIC\lSplitter:B:4:0x000b\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lSplitter:B:4:0x000b\l|java.lang.StringBuilder r0 = new java.lang.StringBuilder(120)     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lr0.append(\"UPDATE \")     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lr0.append(CONFLICT_VALUES[r10])     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lr0.append(r6)     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lr0.append(\" SET \")     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lint r6 = r7.size()     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|if (r9 != null) goto L_0x002e     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|r10 = r6     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|int r10 = r9.length + r6     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lPHI: r10 \l  PHI: (r10v2 int) = (r10v4 int), (r10v5 int) binds: [B:8:0x002e, B:7:0x002c] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Object[] r1 = new java.lang.Object[r10]     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lr2 = 0     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\ljava.util.Iterator r7 = r7.valueSet().iterator()     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|LOOP_START\lCatch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v5 int) binds: [B:9:0x0030, B:16:0x004e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x003b\-\>B:16:0x004e\l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|if (r7.hasNext() == false) goto L_0x0069     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|java.util.Map$Entry r3 = r7.next()     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0047|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|if (r2 \<= 0) goto L_0x004c     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|java.lang.String r4 = \",\"     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x004c|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|java.lang.String r4 = \"\"     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x004e|LOOP_END\lCatch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lPHI: r4 \l  PHI: (r4v0 java.lang.String) = (r4v4 java.lang.String), (r4v5 java.lang.String) binds: [B:41:0x004e, B:42:0x004e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:10:0x003b\-\>B:16:0x004e\l|r0.append(r4)     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lr0.append((java.lang.String) r3.getKey())     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lr1[r2] = r3.getValue()     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lr0.append(\"=?\")     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lr2 = r2 + 1     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0069|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|if (r9 == null) goto L_0x0077     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x006b|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|r7 = r6     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x006c|LOOP_START\lCatch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lPHI: r7 \l  PHI: (r7v8 int) = (r7v7 int), (r7v9 int) binds: [B:18:0x006b, B:20:0x006e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:19:0x006c\-\>B:20:0x006e\l|if (r7 \>= r10) goto L_0x0077     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x006e|LOOP_END\lCatch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lLOOP:1: B:19:0x006c\-\>B:20:0x006e\l|r1[r7] = r9[r7 \- r6]     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lint r7 = r7 + 1     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0077|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x007b|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|if (android.text.TextUtils.isEmpty(r8) != false) goto L_0x0085     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x007d|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|r0.append(\" WHERE \")     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lr0.append(r8)     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0085|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|org.spatialite.database.SQLiteStatement r6 = new org.spatialite.database.SQLiteStatement(r5, r0.toString(), r1)     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x008e|SYNTHETIC\lSplitter:B:25:0x008e\l}"];
Node_26 [shape=record,label="{26\:\ ?|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lSplitter:B:25:0x008e\l|int r7 = r6.executeUpdateDelete()     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x0092|SYNTHETIC\lSplitter:B:27:0x0092\l}"];
Node_28 [shape=record,label="{28\:\ ?|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lSplitter:B:27:0x0092\l|r6.close()     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x0095|releaseReference()\l}"];
Node_30 [shape=record,label="{30\:\ 0x0098|RETURN\l|return r7\l}"];
Node_31 [shape=record,label="{31\:\ 0x0099|ExcHandler: all (r7v5 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:25:0x008e\l|java.lang.Throwable r7 = move\-exception\l}"];
Node_32 [shape=record,label="{32\:\ 0x009a|SYNTHETIC\lSplitter:B:32:0x009a\l}"];
Node_33 [shape=record,label="{33\:\ ?|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\lSplitter:B:32:0x009a\l|r6.close()     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_34 [shape=record,label="{34\:\ 0x009d|Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l|throw r7     \/\/ Catch:\{ all \-\> 0x0099, all \-\> 0x009e \}\l}"];
Node_35 [shape=record,label="{35\:\ 0x009e|ExcHandler: all (r6v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:4:0x000b\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_36 [shape=record,label="{36\:\ 0x009f|releaseReference()\l}"];
Node_37 [shape=record,label="{37\:\ 0x00a2|throw r6\l}"];
Node_38 [shape=record,label="{38\:\ 0x00a3}"];
Node_39 [shape=record,label="{39\:\ 0x00aa|throw new java.lang.IllegalArgumentException(\"Empty values\")\l}"];
Node_40 [shape=record,label="{40\:\ 0x0069|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x004e|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x004e|SYNTHETIC\l}"];
Node_43 [shape=record,label="{43\:\ 0x0077|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int org.spatialite.database.SQLiteDatabase.updateWithOnConflict((r5v0 'this' org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 android.content.ContentValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_38;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_38;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_35;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_40;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_42;
Node_15 -> Node_41;
Node_16 -> Node_10;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_43;
Node_20 -> Node_19;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_27 -> Node_35;
Node_28 -> Node_29;
Node_28 -> Node_35;
Node_29 -> Node_30;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_40 -> Node_17;
Node_41 -> Node_16;
Node_42 -> Node_16;
Node_43 -> Node_21;
}

