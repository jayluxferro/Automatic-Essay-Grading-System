digraph "CFG fororg.spatialite.database.SQLiteDatabase.getAttachedDbs()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: IGET  (r1 I:java.lang.Object) = (r5 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.mLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|SYNTHETIC\lSplitter:B:2:0x0008\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0008\l|0x0008: IGET  (r2 I:org.spatialite.database.SQLiteConnectionPool) = (r5 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.mConnectionPoolLocked org.spatialite.database.SQLiteConnectionPool A[Catch:\{ all \-\> 0x004c \}, TRY_ENTER]\l0x000a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000f A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: RETURN  \l  (r3 I:java.util.List\<android.util.Pair\<java.lang.String, java.lang.String\>\>)\l A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000f|0x000f: INVOKE  (r5 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.acquireReference():void type: VIRTUAL A[Catch:\{ all \-\> 0x004c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0012|0x0012: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004c \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|0x0013: CONST_STR  (r1 I:java.lang.String) =  \"pragma database_list;\" \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|SYNTHETIC\lSplitter:B:10:0x0015\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x0015\l|0x0015: INVOKE  (r1 I:android.database.Cursor) = \l  (r5 I:org.spatialite.database.SQLiteDatabase)\l  (r1 I:java.lang.String)\l  (r3 I:java.lang.Object[])\l org.spatialite.database.SQLiteDatabase.rawQuery(java.lang.String, java.lang.Object[]):android.database.Cursor type: VIRTUAL A[Catch:\{ all \-\> 0x003d \}, TRY_ENTER]\l0x0018: NOP   A[TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0019|SYNTHETIC\lSplitter:B:12:0x0019\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x0019\l|0x0019: INVOKE  (r2 I:boolean) = (r1 I:android.database.Cursor) android.database.Cursor.moveToNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x003b \}, TRY_ENTER]\l}"];
Node_14 [shape=record,label="{14\:\ 0x001d|0x001d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0032 A[Catch:\{ all \-\> 0x003b \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x001f|0x001f: NEW_INSTANCE  (r2 I:android.util.Pair) =  android.util.Pair A[Catch:\{ all \-\> 0x003b \}]\l0x0021: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ all \-\> 0x003b \}]\l0x0022: INVOKE  (r3 I:java.lang.String) = (r1 I:android.database.Cursor), (r3 I:int) android.database.Cursor.getString(int):java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x003b \}]\l0x0026: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x003b \}]\l0x0027: INVOKE  (r4 I:java.lang.String) = (r1 I:android.database.Cursor), (r4 I:int) android.database.Cursor.getString(int):java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x003b \}]\l0x002b: INVOKE  \l  (r2 I:android.util.Pair)\l  (r3 I:java.lang.Object)\l  (r4 I:java.lang.Object)\l android.util.Pair.\<init\>(java.lang.Object, java.lang.Object):void type: DIRECT A[Catch:\{ all \-\> 0x003b \}]\l0x002e: INVOKE  (r0 I:java.util.ArrayList), (r2 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x003b \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0032|0x0032: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0037 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|SYNTHETIC\lSplitter:B:18:0x0034\l}"];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x0034\l|0x0034: INVOKE  (r1 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE A[Catch:\{ all \-\> 0x0045 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0037|0x0037: INVOKE  (r5 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x003a|0x003a: RETURN  \l  (r0 I:java.util.List\<android.util.Pair\<java.lang.String, java.lang.String\>\>)\l \l}"];
Node_22 [shape=record,label="{22\:\ 0x003b|ExcHandler: all null\lSplitter:B:12:0x0019\l|0x003b: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_24 [shape=record,label="{24\:\ 0x003d|ExcHandler: all null\lSplitter:B:10:0x0015\l|0x003d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x003e|0x003e: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x003f|0x003f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0047 \l}"];
Node_27 [shape=record,label="{27\:\ 0x0041|SYNTHETIC\lSplitter:B:27:0x0041\l}"];
Node_28 [shape=record,label="{28\:\ ?|Splitter:B:27:0x0041\l|0x0041: INVOKE  (r1 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE A[Catch:\{ all \-\> 0x0045 \}, TRY_ENTER]\l0x0044: GOTO  \-\> 0x0047 A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0045|ExcHandler: all null\lSplitter:B:18:0x0034\l|0x0045: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0046|0x0046: GOTO  \-\> 0x0048 A[Catch:\{ all \-\> 0x0045 \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0047|0x0047: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0045 \}, TRY_LEAVE]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0048|0x0048: INVOKE  (r5 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x004b|0x004b: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_34 [shape=record,label="{34\:\ 0x004c|ExcHandler: all null\lSplitter:B:2:0x0008\l|0x004c: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_35 [shape=record,label="{35\:\ 0x004d|SYNTHETIC\lSplitter:B:35:0x004d\l}"];
Node_36 [shape=record,label="{36\:\ ?|Splitter:B:35:0x004d\l|0x004d: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x004c \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_37 [shape=record,label="{37\:\ 0x004e|0x004e: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.util.List\<android.util.Pair\<java.lang.String, java.lang.String\>\> org.spatialite.database.SQLiteDatabase.getAttachedDbs((r5 'this' I:org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Landroid\/util\/Pair\<, Ljava\/lang\/String;, Ljava\/lang\/String;, \>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_34;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_24;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_22;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_12;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_18 -> Node_29;
Node_19 -> Node_20;
Node_19 -> Node_29;
Node_20 -> Node_21;
Node_22 -> Node_26;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_31;
Node_27 -> Node_28;
Node_27 -> Node_29;
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_30 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_35 -> Node_34;
Node_36 -> Node_37;
Node_36 -> Node_34;
}

