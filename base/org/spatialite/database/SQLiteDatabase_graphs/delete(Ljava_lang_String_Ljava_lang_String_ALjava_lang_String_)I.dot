digraph "CFG fororg.spatialite.database.SQLiteDatabase.delete(Ljava\/lang\/String;Ljava\/lang\/String;[Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|acquireReference()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\lSplitter:B:1:0x0003\l|java.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\lr1.append(\"DELETE FROM \")     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\lr1.append(r4)     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l|if (android.text.TextUtils.isEmpty(r5) != false) goto L_0x002a     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l|java.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\lr4.append(\" WHERE \")     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\lr4.append(r5)     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\ljava.lang.String r4 = r4.toString()     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l|java.lang.String r4 = \"\"     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\lPHI: r4 \l  PHI: (r4v3 java.lang.String) = (r4v7 java.lang.String), (r4v9 java.lang.String) binds: [B:5:0x002a, B:4:0x0018] A[DONT_GENERATE, DONT_INLINE]\l|r1.append(r4)     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\lorg.spatialite.database.SQLiteStatement r0 = new org.spatialite.database.SQLiteStatement(r3, r1.toString(), r6)     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|SYNTHETIC\lSplitter:B:7:0x0036\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\lSplitter:B:7:0x0036\l|int r4 = r0.executeUpdateDelete()     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|SYNTHETIC\lSplitter:B:9:0x003a\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\lSplitter:B:9:0x003a\l|r0.close()     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|releaseReference()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|RETURN\l|return r4\l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|ExcHandler: all (r4v5 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:7:0x0036\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|SYNTHETIC\lSplitter:B:14:0x0042\l}"];
Node_15 [shape=record,label="{15\:\ ?|Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\lSplitter:B:14:0x0042\l|r0.close()     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l|throw r4     \/\/ Catch:\{ all \-\> 0x0041, all \-\> 0x0046 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|ExcHandler: all (r4v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0003\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_18 [shape=record,label="{18\:\ 0x0047|releaseReference()\l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|throw r4\l}"];
MethodNode[shape=record,label="{public int org.spatialite.database.SQLiteDatabase.delete((r3v0 'this' org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

