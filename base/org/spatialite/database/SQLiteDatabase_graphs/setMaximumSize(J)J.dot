digraph "CFG fororg.spatialite.database.SQLiteDatabase.setMaximumSize(J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|long r0 = getPageSize()\llong r2 = r7 \/ r0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|if (((r7 % r0) \> 0 ? 1 : ((r7 % r0) == 0 ? 0 : \-1)) == 0) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|long r2 = r2 + 1\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|PHI: r2 \l  PHI: (r2v1 long) = (r2v0 long), (r2v2 long) binds: [B:1:0x000b, B:2:0x000d] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.StringBuilder r7 = new java.lang.StringBuilder()\lr7.append(\"PRAGMA max_page_count = \")\lr7.append(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|RETURN\l|return longForQuery(r6, r7.toString(), (java.lang.String[]) null) * r0\l}"];
MethodNode[shape=record,label="{public long org.spatialite.database.SQLiteDatabase.setMaximumSize((r6v0 'this' org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

