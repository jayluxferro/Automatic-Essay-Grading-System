digraph "CFG fororg.spatialite.database.SQLiteDatabase.insertWithOnConflict(Ljava\/lang\/String;Ljava\/lang\/String;Landroid\/content\/ContentValues;I)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.acquireReference():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x00b0 \}, TRY_ENTER]\l0x0005: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00b0 \}]\l0x0008: CONST_STR  (r1 I:java.lang.String) =  \"INSERT\" A[Catch:\{ all \-\> 0x00b0 \}]\l0x000a: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x000d: SGET  (r1 I:java.lang.String[]) =  org.spatialite.database.SQLiteDatabase.CONFLICT_VALUES java.lang.String[] A[Catch:\{ all \-\> 0x00b0 \}]\l0x000f: AGET  (r9 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r9 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x00b0 \}]\l0x0011: INVOKE  (r0 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0014: CONST_STR  (r9 I:java.lang.String) =  \" INTO \" A[Catch:\{ all \-\> 0x00b0 \}]\l0x0016: INVOKE  (r0 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0019: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x001c: CONST  (r6 I:?[int, float, short, byte, char]) = (40 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x00b0 \}]\l0x001e: INVOKE  (r0 I:java.lang.StringBuilder), (r6 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0021: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b0 \}]\l0x0022: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0030 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: INVOKE  (r1 I:int) = (r8 I:android.content.ContentValues) android.content.ContentValues.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0029|0x0029: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x0030 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: INVOKE  (r1 I:int) = (r8 I:android.content.ContentValues) android.content.ContentValues.size():int type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x002f: GOTO  \-\> 0x0031 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: CONST  (r2 I:?[int, float, short, byte, char]) = (41 ?[int, float, short, byte, char]) A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:24:0x0080 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0035|0x0035: NEW_ARRAY  (r6 I:java.lang.Object[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.Object[] A[Catch:\{ all \-\> 0x00b0 \}]\l0x0037: INVOKE  (r7 I:java.util.Set) = (r8 I:android.content.ContentValues) android.content.ContentValues.valueSet():java.util.Set type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x003b: INVOKE  (r7 I:java.util.Iterator) = (r7 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l0x003f: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: INVOKE  (r3 I:boolean) = (r7 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|0x0044: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0069 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|0x0046: INVOKE  (r3 I:java.lang.Object) = (r7 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l0x004a: CHECK_CAST  (r3 I:java.util.Map$Entry) = (java.util.Map$Entry) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x004c|0x004c: IF  (r8 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:16:0x0051 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x004e|0x004e: CONST_STR  (r4 I:java.lang.String) =  \",\" A[Catch:\{ all \-\> 0x00b0 \}]\l0x0050: GOTO  \-\> 0x0053 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|0x0051: CONST_STR  (r4 I:java.lang.String) =  \"\" A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0053|0x0053: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0056: INVOKE  (r4 I:java.lang.Object) = (r3 I:java.util.Map$Entry) java.util.Map.Entry.getKey():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l0x005a: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00b0 \}]\l0x005c: INVOKE  (r0 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x005f: ARITH  (r4 I:int) = (r8 I:int) + (1 int) A[Catch:\{ all \-\> 0x00b0 \}]\l0x0061: INVOKE  (r3 I:java.lang.Object) = (r3 I:java.util.Map$Entry) java.util.Map.Entry.getValue():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l0x0065: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b0 \}]\l0x0067: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b0 \}]\l0x0068: GOTO  \-\> 0x0040 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0069|0x0069: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x006c: CONST_STR  (r7 I:java.lang.String) =  \" VALUES (\" A[Catch:\{ all \-\> 0x00b0 \}]\l0x006e: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0071|0x0071: IF  (r9 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:25:0x0094 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0073|0x0073: IF  (r9 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:22:0x0078 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0075|0x0075: CONST_STR  (r7 I:java.lang.String) =  \",?\" A[Catch:\{ all \-\> 0x00b0 \}]\l0x0077: GOTO  \-\> 0x007a A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0078|0x0078: CONST_STR  (r7 I:java.lang.String) =  \"?\" A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x007a|0x007a: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x007d: ARITH  (r9 I:int) = (r9 I:int) + (1 int) A[Catch:\{ all \-\> 0x00b0 \}]\l0x007f: GOTO  \-\> 0x0071 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0080|0x0080: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x00b0 \}]\l0x0082: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00b0 \}]\l0x0085: INVOKE  (r8 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0088: CONST_STR  (r7 I:java.lang.String) =  \") VALUES (NULL\" A[Catch:\{ all \-\> 0x00b0 \}]\l0x008a: INVOKE  (r8 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x008d: INVOKE  (r7 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0091: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0094|0x0094: INVOKE  (r0 I:java.lang.StringBuilder), (r2 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0097: NEW_INSTANCE  (r7 I:org.spatialite.database.SQLiteStatement) =  org.spatialite.database.SQLiteStatement A[Catch:\{ all \-\> 0x00b0 \}]\l0x0099: INVOKE  (r8 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x009d: INVOKE  \l  (r7 I:org.spatialite.database.SQLiteStatement)\l  (r5 I:org.spatialite.database.SQLiteDatabase)\l  (r8 I:java.lang.String)\l  (r6 I:java.lang.Object[])\l org.spatialite.database.SQLiteStatement.\<init\>(org.spatialite.database.SQLiteDatabase, java.lang.String, java.lang.Object[]):void type: DIRECT A[Catch:\{ all \-\> 0x00b0 \}, TRY_LEAVE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a0|SYNTHETIC\lSplitter:B:26:0x00a0\l}"];
Node_27 [shape=record,label="{27\:\ ?|Splitter:B:26:0x00a0\l|0x00a0: INVOKE  (r8 I:long) = (r7 I:org.spatialite.database.SQLiteStatement) org.spatialite.database.SQLiteStatement.executeInsert():long type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}, TRY_ENTER]\l0x00a3: NOP   A[TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x00a4|SYNTHETIC\lSplitter:B:28:0x00a4\l}"];
Node_29 [shape=record,label="{29\:\ ?|Splitter:B:28:0x00a4\l|0x00a4: INVOKE  (r7 I:org.spatialite.database.SQLiteStatement) org.spatialite.database.SQLiteStatement.close():void type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x00a7|0x00a7: INVOKE  (r5 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x00aa|0x00aa: RETURN  (r8 I:long) \l}"];
Node_32 [shape=record,label="{32\:\ 0x00ab|ExcHandler: all null\lSplitter:B:26:0x00a0\l|0x00ab: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_33 [shape=record,label="{33\:\ 0x00ac|SYNTHETIC\lSplitter:B:33:0x00ac\l}"];
Node_34 [shape=record,label="{34\:\ ?|Splitter:B:33:0x00ac\l|0x00ac: INVOKE  (r7 I:org.spatialite.database.SQLiteStatement) org.spatialite.database.SQLiteStatement.close():void type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}, TRY_ENTER]\l}"];
Node_35 [shape=record,label="{35\:\ 0x00af|0x00af: THROW  (r6 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x00b0 \}, TRY_LEAVE]\l}"];
Node_36 [shape=record,label="{36\:\ 0x00b0|ExcHandler: all null\lSplitter:B:1:0x0003\l|0x00b0: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  \l}"];
Node_37 [shape=record,label="{37\:\ 0x00b1|0x00b1: INVOKE  (r5 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l}"];
Node_38 [shape=record,label="{38\:\ 0x00b4|0x00b4: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public long org.spatialite.database.SQLiteDatabase.insertWithOnConflict((r5 'this' I:org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.content.ContentValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_36;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_24;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_18;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_11;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_19;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_32;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_36;
Node_29 -> Node_30;
Node_29 -> Node_36;
Node_30 -> Node_31;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_36;
Node_34 -> Node_35;
Node_36 -> Node_37;
Node_37 -> Node_38;
}

