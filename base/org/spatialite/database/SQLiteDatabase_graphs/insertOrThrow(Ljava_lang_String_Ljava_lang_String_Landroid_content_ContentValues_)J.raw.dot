digraph "CFG fororg.spatialite.database.SQLiteDatabase.insertOrThrow(Ljava\/lang\/String;Ljava\/lang\/String;Landroid\/content\/ContentValues;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r2 I:long) = \l  (r1 I:org.spatialite.database.SQLiteDatabase)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:android.content.ContentValues)\l  (r0 I:int)\l org.spatialite.database.SQLiteDatabase.insertWithOnConflict(java.lang.String, java.lang.String, android.content.ContentValues, int):long type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: RETURN  (r2 I:long) \l}"];
MethodNode[shape=record,label="{public long org.spatialite.database.SQLiteDatabase.insertOrThrow((r1 'this' I:org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.content.ContentValues A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.database.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

