digraph "CFG fororg.spatialite.database.SQLiteDatabase.delete(Ljava\/lang\/String;Ljava\/lang\/String;[Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.acquireReference():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: NEW_INSTANCE  (r0 I:org.spatialite.database.SQLiteStatement) =  org.spatialite.database.SQLiteStatement A[Catch:\{ all \-\> 0x0046 \}, TRY_ENTER]\l0x0005: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0046 \}]\l0x0007: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0046 \}]\l0x000a: CONST_STR  (r2 I:java.lang.String) =  \"DELETE FROM \" A[Catch:\{ all \-\> 0x0046 \}]\l0x000c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l0x000f: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l0x0012: INVOKE  (r4 I:boolean) = (r5 I:java.lang.CharSequence) android.text.TextUtils.isEmpty(java.lang.CharSequence):boolean type: STATIC A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002a A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0046 \}]\l0x001a: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0046 \}]\l0x001d: CONST_STR  (r2 I:java.lang.String) =  \" WHERE \" A[Catch:\{ all \-\> 0x0046 \}]\l0x001f: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l0x0022: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l0x0025: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l0x0029: GOTO  \-\> 0x002c A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: CONST_STR  (r4 I:java.lang.String) =  \"\" A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x002c|0x002c: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l0x002f: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l0x0033: INVOKE  \l  (r0 I:org.spatialite.database.SQLiteStatement)\l  (r3 I:org.spatialite.database.SQLiteDatabase)\l  (r4 I:java.lang.String)\l  (r6 I:java.lang.Object[])\l org.spatialite.database.SQLiteStatement.\<init\>(org.spatialite.database.SQLiteDatabase, java.lang.String, java.lang.Object[]):void type: DIRECT A[Catch:\{ all \-\> 0x0046 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|SYNTHETIC\lSplitter:B:7:0x0036\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0036\l|0x0036: INVOKE  (r4 I:int) = (r0 I:org.spatialite.database.SQLiteStatement) org.spatialite.database.SQLiteStatement.executeUpdateDelete():int type: VIRTUAL A[Catch:\{ all \-\> 0x0041 \}, TRY_ENTER]\l0x0039: NOP   A[TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|SYNTHETIC\lSplitter:B:9:0x003a\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x003a\l|0x003a: INVOKE  (r0 I:org.spatialite.database.SQLiteStatement) org.spatialite.database.SQLiteStatement.close():void type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x003d|0x003d: INVOKE  (r3 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: RETURN  (r4 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|ExcHandler: all null\lSplitter:B:7:0x0036\l|0x0041: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|SYNTHETIC\lSplitter:B:14:0x0042\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x0042\l|0x0042: INVOKE  (r0 I:org.spatialite.database.SQLiteStatement) org.spatialite.database.SQLiteStatement.close():void type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}, TRY_ENTER]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0045|0x0045: THROW  (r4 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x0046 \}, TRY_LEAVE]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0046|ExcHandler: all null\lSplitter:B:1:0x0003\l|0x0046: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x0047|0x0047: INVOKE  (r3 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x004a|0x004a: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int org.spatialite.database.SQLiteDatabase.delete((r3 'this' I:org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

