digraph "CFG fororg.spatialite.database.SQLiteDatabase.isDatabaseIntegrityOk()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.acquireReference():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: INVOKE  (r0 I:java.util.List) = (r6 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.getAttachedDbs():java.util.List type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x002d \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000a A[Catch:\{ SQLiteException \-\> 0x002d \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: GOTO  \-\> 0x0040 A[Catch:\{ SQLiteException \-\> 0x002d \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: NEW_INSTANCE  (r0 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException A[Catch:\{ SQLiteException \-\> 0x002d \}]\l0x000c: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ SQLiteException \-\> 0x002d \}]\l0x000e: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ SQLiteException \-\> 0x002d \}]\l0x0011: CONST_STR  (r2 I:java.lang.String) =  \"databaselist for: \" A[Catch:\{ SQLiteException \-\> 0x002d \}]\l0x0013: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x002d \}]\l0x0016: INVOKE  (r2 I:java.lang.String) = (r6 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.getPath():java.lang.String type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x002d \}]\l0x001a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x002d \}]\l0x001d: CONST_STR  (r2 I:java.lang.String) =  \" couldn't be retrieved. probably because the database is closed\" A[Catch:\{ SQLiteException \-\> 0x002d \}]\l0x001f: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x002d \}]\l0x0022: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ SQLiteException \-\> 0x002d \}]\l0x0026: INVOKE  \l  (r0 I:java.lang.IllegalStateException)\l  (r1 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ SQLiteException \-\> 0x002d \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0029|0x0029: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ SQLiteException \-\> 0x002d \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|ExcHandler: all null\lSplitter:B:9:0x002d\l|0x002a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|SYNTHETIC\lSplitter:B:9:0x002d\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x002d\l|0x002d: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList A[Catch:\{ all \-\> 0x002a \}, ExcHandler: SQLiteException null, TRY_ENTER]\l0x002f: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x002a \}]\l0x0032: NEW_INSTANCE  (r1 I:android.util.Pair) =  android.util.Pair A[Catch:\{ all \-\> 0x002a \}]\l0x0034: CONST_STR  (r2 I:java.lang.String) =  \"main\" A[Catch:\{ all \-\> 0x002a \}]\l0x0036: INVOKE  (r3 I:java.lang.String) = (r6 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.getPath():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x002a \}]\l0x003a: INVOKE  \l  (r1 I:android.util.Pair)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l android.util.Pair.\<init\>(java.lang.Object, java.lang.Object):void type: DIRECT A[Catch:\{ all \-\> 0x002a \}]\l0x003d: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0044|0x0044: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x00b7 A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x002a \}]\l0x004e: CHECK_CAST  (r1 I:android.util.Pair) = (android.util.Pair) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|0x0050: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|SYNTHETIC\lSplitter:B:16:0x0051\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0051\l|0x0051: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x00af \}, TRY_ENTER]\l0x0053: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00af \}]\l0x0056: CONST_STR  (r4 I:java.lang.String) =  \"PRAGMA \" A[Catch:\{ all \-\> 0x00af \}]\l0x0058: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00af \}]\l0x005b: IGET  (r4 I:java.lang.Object) = (r1 I:android.util.Pair) android.util.Pair.first java.lang.Object A[Catch:\{ all \-\> 0x00af \}]\l0x005d: CHECK_CAST  (r4 I:java.lang.String) = (java.lang.String) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00af \}]\l0x005f: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00af \}]\l0x0062: CONST_STR  (r4 I:java.lang.String) =  \".integrity_check(1);\" A[Catch:\{ all \-\> 0x00af \}]\l0x0064: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00af \}]\l0x0067: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00af \}]\l0x006b: INVOKE  (r3 I:org.spatialite.database.SQLiteStatement) = \l  (r6 I:org.spatialite.database.SQLiteDatabase)\l  (r3 I:java.lang.String)\l org.spatialite.database.SQLiteDatabase.compileStatement(java.lang.String):org.spatialite.database.SQLiteStatement type: VIRTUAL A[Catch:\{ all \-\> 0x00af \}]\l0x006e: NOP   A[TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x006f|SYNTHETIC\lSplitter:B:18:0x006f\l}"];
Node_19 [shape=record,label="{19\:\ ?|Splitter:B:18:0x006f\l|0x006f: INVOKE  (r2 I:java.lang.String) = (r3 I:org.spatialite.database.SQLiteStatement) org.spatialite.database.SQLiteStatement.simpleQueryForString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00ad \}, TRY_ENTER]\l0x0073: CONST_STR  (r4 I:java.lang.String) =  \"ok\" A[Catch:\{ all \-\> 0x00ad \}]\l0x0075: INVOKE  (r4 I:boolean) = (r2 I:java.lang.String), (r4 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00ad \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0079|0x0079: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x00a7 A[Catch:\{ all \-\> 0x00ad \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x007b|0x007b: CONST_STR  (r0 I:java.lang.String) =  \"SQLiteDatabase\" A[Catch:\{ all \-\> 0x00ad \}]\l0x007d: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x00ad \}]\l0x007f: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00ad \}]\l0x0082: CONST_STR  (r5 I:java.lang.String) =  \"PRAGMA integrity_check on \" A[Catch:\{ all \-\> 0x00ad \}]\l0x0084: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ad \}]\l0x0087: IGET  (r1 I:java.lang.Object) = (r1 I:android.util.Pair) android.util.Pair.second java.lang.Object A[Catch:\{ all \-\> 0x00ad \}]\l0x0089: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00ad \}]\l0x008b: INVOKE  (r4 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ad \}]\l0x008e: CONST_STR  (r1 I:java.lang.String) =  \" returned: \" A[Catch:\{ all \-\> 0x00ad \}]\l0x0090: INVOKE  (r4 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ad \}]\l0x0093: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ad \}]\l0x0096: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00ad \}]\l0x009a: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x00ad \}, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x009d|0x009d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x009e|0x009e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x00a3 \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a0|SYNTHETIC\lSplitter:B:24:0x00a0\l}"];
Node_25 [shape=record,label="{25\:\ ?|Splitter:B:24:0x00a0\l|0x00a0: INVOKE  (r3 I:org.spatialite.database.SQLiteStatement) org.spatialite.database.SQLiteStatement.close():void type: VIRTUAL A[Catch:\{ all \-\> 0x002a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a3|0x00a3: INVOKE  (r6 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a6|0x00a6: RETURN  (r0 I:boolean) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00a7|0x00a7: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0044 \l}"];
Node_29 [shape=record,label="{29\:\ 0x00a9|SYNTHETIC\lSplitter:B:29:0x00a9\l}"];
Node_30 [shape=record,label="{30\:\ ?|Splitter:B:29:0x00a9\l|0x00a9: INVOKE  (r3 I:org.spatialite.database.SQLiteStatement) org.spatialite.database.SQLiteStatement.close():void type: VIRTUAL A[Catch:\{ all \-\> 0x002a \}, TRY_ENTER]\l0x00ac: GOTO  \-\> 0x0044 A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x00ad|ExcHandler: all null\lSplitter:B:18:0x006f\l|0x00ad: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_32 [shape=record,label="{32\:\ 0x00ae|0x00ae: GOTO  \-\> 0x00b1 A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_33 [shape=record,label="{33\:\ 0x00af|ExcHandler: all null\lSplitter:B:16:0x0051\l|0x00af: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b0|0x00b0: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_35 [shape=record,label="{35\:\ 0x00b1|0x00b1: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x00b6 A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_36 [shape=record,label="{36\:\ 0x00b3|0x00b3: INVOKE  (r3 I:org.spatialite.database.SQLiteStatement) org.spatialite.database.SQLiteStatement.close():void type: VIRTUAL A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x00b6|0x00b6: THROW  (r0 I:java.lang.Throwable) A[Catch:\{ all \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_38 [shape=record,label="{38\:\ 0x00b7|0x00b7: INVOKE  (r6 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l0x00ba: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_39 [shape=record,label="{39\:\ 0x00bb|0x00bb: RETURN  (r0 I:boolean) \l}"];
Node_40 [shape=record,label="{40\:\ 0x00bc|0x00bc: INVOKE  (r6 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l}"];
Node_41 [shape=record,label="{41\:\ 0x00bf|0x00bf: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean org.spatialite.database.SQLiteDatabase.isDatabaseIntegrityOk((r6 'this' I:org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_7 -> Node_40;
Node_9 -> Node_10;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_38;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_33;
Node_16 -> Node_7;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_18 -> Node_31;
Node_18 -> Node_7;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_28;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_26;
Node_24 -> Node_25;
Node_24 -> Node_7;
Node_25 -> Node_26;
Node_25 -> Node_7;
Node_26 -> Node_27;
Node_28 -> Node_12;
Node_28 -> Node_29[style=dashed];
Node_29 -> Node_30;
Node_29 -> Node_7;
Node_30 -> Node_12;
Node_31 -> Node_32;
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_40 -> Node_41;
}

