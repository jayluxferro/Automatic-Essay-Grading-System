digraph "CFG fororg.spatialite.database.SQLiteDatabase.dispose(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = (r3 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.mLock java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:org.spatialite.database.CloseGuard) = (r3 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.mCloseGuardLocked org.spatialite.database.CloseGuard A[Catch:\{ all \-\> 0x002e \}, TRY_ENTER]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0005|0x0005: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0013 A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000e A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0009|0x0009: IGET  (r1 I:org.spatialite.database.CloseGuard) = (r3 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.mCloseGuardLocked org.spatialite.database.CloseGuard A[Catch:\{ all \-\> 0x002e \}]\l0x000b: INVOKE  (r1 I:org.spatialite.database.CloseGuard) org.spatialite.database.CloseGuard.warnIfOpen():void type: VIRTUAL A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IGET  (r1 I:org.spatialite.database.CloseGuard) = (r3 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.mCloseGuardLocked org.spatialite.database.CloseGuard A[Catch:\{ all \-\> 0x002e \}]\l0x0010: INVOKE  (r1 I:org.spatialite.database.CloseGuard) org.spatialite.database.CloseGuard.close():void type: VIRTUAL A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: IGET  (r1 I:org.spatialite.database.SQLiteConnectionPool) = (r3 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.mConnectionPoolLocked org.spatialite.database.SQLiteConnectionPool A[Catch:\{ all \-\> 0x002e \}]\l0x0015: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x002e \}]\l0x0016: IPUT  \l  (r2 I:org.spatialite.database.SQLiteConnectionPool)\l  (r3 I:org.spatialite.database.SQLiteDatabase)\l org.spatialite.database.SQLiteDatabase.mConnectionPoolLocked org.spatialite.database.SQLiteConnectionPool A[Catch:\{ all \-\> 0x002e \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002e \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|0x0019: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x002d \l}"];
Node_11 [shape=record,label="{11\:\ 0x001b|0x001b: SGET  (r4 I:java.util.WeakHashMap\<org.spatialite.database.SQLiteDatabase, java.lang.Object\>) =  org.spatialite.database.SQLiteDatabase.sActiveDatabases java.util.WeakHashMap \l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|0x001d: MONITOR_ENTER  (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_13 [shape=record,label="{13\:\ 0x001e|SYNTHETIC\lSplitter:B:13:0x001e\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x001e\l|0x001e: SGET  (r0 I:java.util.WeakHashMap\<org.spatialite.database.SQLiteDatabase, java.lang.Object\>) =  org.spatialite.database.SQLiteDatabase.sActiveDatabases java.util.WeakHashMap A[Catch:\{ all \-\> 0x002a \}, TRY_ENTER]\l0x0020: INVOKE  (r0 I:java.util.WeakHashMap), (r3 I:java.lang.Object) java.util.WeakHashMap.remove(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x002a \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|0x0023: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002a \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|0x0024: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x002d \l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|0x0026: INVOKE  (r1 I:org.spatialite.database.SQLiteConnectionPool) org.spatialite.database.SQLiteConnectionPool.close():void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|ExcHandler: all null\lSplitter:B:13:0x001e\l|0x002a: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x002b|SYNTHETIC\lSplitter:B:19:0x002b\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x002b\l|0x002b: MONITOR_EXIT  (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x002c|0x002c: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x002d|0x002d: RETURN   \l}"];
Node_23 [shape=record,label="{23\:\ 0x002e|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x002e: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_24 [shape=record,label="{24\:\ 0x002f|SYNTHETIC\lSplitter:B:24:0x002f\l}"];
Node_25 [shape=record,label="{25\:\ ?|Splitter:B:24:0x002f\l|0x002f: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x002e \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0030|0x0030: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void org.spatialite.database.SQLiteDatabase.dispose((r3 'this' I:org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS]), (r4 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_23;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_22;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_22;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_18;
Node_20 -> Node_21;
Node_20 -> Node_18;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_23;
Node_25 -> Node_26;
Node_25 -> Node_23;
}

