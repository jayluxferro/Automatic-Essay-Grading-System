digraph "CFG fororg.spatialite.database.SQLiteDatabase.compileStatement(Ljava\/lang\/String;)Lorg\/spatialite\/database\/SQLiteStatement;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.acquireReference():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: NEW_INSTANCE  (r0 I:org.spatialite.database.SQLiteStatement) =  org.spatialite.database.SQLiteStatement A[Catch:\{ all \-\> 0x000d \}, TRY_ENTER]\l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x000d \}]\l0x0006: INVOKE  \l  (r0 I:org.spatialite.database.SQLiteStatement)\l  (r2 I:org.spatialite.database.SQLiteDatabase)\l  (r3 I:java.lang.String)\l  (r1 I:java.lang.Object[])\l org.spatialite.database.SQLiteStatement.\<init\>(org.spatialite.database.SQLiteDatabase, java.lang.String, java.lang.Object[]):void type: DIRECT A[Catch:\{ all \-\> 0x000d \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r2 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: RETURN  (r0 I:org.spatialite.database.SQLiteStatement) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|ExcHandler: all null\lSplitter:B:1:0x0003\l|0x000d: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: INVOKE  (r2 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.releaseReference():void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0011|0x0011: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public org.spatialite.database.SQLiteStatement org.spatialite.database.SQLiteDatabase.compileStatement((r2 'this' I:org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[android.database.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

