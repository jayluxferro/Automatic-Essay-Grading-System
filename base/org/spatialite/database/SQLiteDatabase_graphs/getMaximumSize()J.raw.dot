digraph "CFG fororg.spatialite.database.SQLiteDatabase.getMaximumSize()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"PRAGMA max_page_count;\" \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r0 I:long) = \l  (r4 I:org.spatialite.database.SQLiteDatabase)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String[])\l org.spatialite.database.SQLiteDatabase.longForQuery(org.spatialite.database.SQLiteDatabase, java.lang.String, java.lang.String[]):long type: STATIC \l0x0007: INVOKE  (r2 I:long) = (r4 I:org.spatialite.database.SQLiteDatabase) org.spatialite.database.SQLiteDatabase.getPageSize():long type: VIRTUAL \l0x000b: ARITH  (r0 I:long) = (r0 I:long) * (r2 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{public long org.spatialite.database.SQLiteDatabase.getMaximumSize((r4 'this' I:org.spatialite.database.SQLiteDatabase A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

