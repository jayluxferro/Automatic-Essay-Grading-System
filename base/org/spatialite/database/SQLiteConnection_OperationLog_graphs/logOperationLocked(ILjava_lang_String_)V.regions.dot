digraph "CFG fororg.spatialite.database.SQLiteConnection.OperationLog.logOperationLocked(ILjava\/lang\/String;)V" {
subgraph cluster_Region_2107647054 {
label = "R(2:0|(1:(3:3|(1:5)|6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.spatialite.database.SQLiteConnection$Operation org.spatialite.database.SQLiteConnection.Operation r3 = getOperationLocked(r3)\l}"];
subgraph cluster_Region_971230662 {
label = "R(1:(3:3|(1:5)|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1970337023 {
label = "IF [B:1:0x0004] THEN: R(3:3|(1:5)|6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r3 != null) goto L_0x0007\l}"];
subgraph cluster_Region_1823394650 {
label = "R(3:3|(1:5)|6)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0007|java.lang.StringBuilder java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr3.describe(r0, false)\l}"];
subgraph cluster_IfRegion_183960548 {
label = "IF [B:4:0x0010] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|if (r4 != null) goto L_0x0012\l}"];
subgraph cluster_Region_1990067214 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0012|r0.append(\", \")\lr0.append(r4)\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x001a|android.util.Log.d(org.spatialite.database.SQLiteConnection.TAG, r0.toString())\l}"];
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0023}"];
MethodNode[shape=record,label="{private void org.spatialite.database.SQLiteConnection.OperationLog.logOperationLocked((r2v0 'this' org.spatialite.database.SQLiteConnection$OperationLog A[IMMUTABLE_TYPE, THIS]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
}

