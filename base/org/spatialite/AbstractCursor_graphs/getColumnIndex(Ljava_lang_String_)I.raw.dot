digraph "CFG fororg.spatialite.AbstractCursor.getColumnIndex(Ljava\/lang\/String;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l0x0002: INVOKE  (r0 I:int) = (r7 I:java.lang.String), (r0 I:int) java.lang.String.lastIndexOf(int):int type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: NEW_INSTANCE  (r2 I:java.lang.Exception) =  java.lang.Exception \l0x000b: INVOKE  (r2 I:java.lang.Exception) java.lang.Exception.\<init\>():void type: DIRECT \l0x000e: CONST_STR  (r3 I:java.lang.String) =  \"Cursor\" \l0x0010: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0012: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0015: CONST_STR  (r5 I:java.lang.String) =  \"requesting column name with table name \-\- \" \l0x0017: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001a: INVOKE  (r4 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001d: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0021: INVOKE  \l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x0024: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l0x0026: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.String), (r0 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x002a|0x002a: INVOKE  (r0 I:java.lang.String[]) = (r6 I:org.spatialite.AbstractCursor) org.spatialite.AbstractCursor.getColumnNames():java.lang.String[] type: VIRTUAL \l0x002e: ARRAY_LENGTH  (r2 I:int) = (r0 I:?[]) \l0x002f: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|0x0030: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:9:0x003e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0032|0x0032: AGET  (r4 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r3 I:?[int, short, byte, char]) \l0x0034: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String), (r7 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0038|0x0038: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003b \l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|0x003a: RETURN  (r3 I:int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003b|0x003b: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: RETURN  (r1 I:int) \l}"];
MethodNode[shape=record,label="{public int org.spatialite.AbstractCursor.getColumnIndex((r6 'this' I:org.spatialite.AbstractCursor A[IMMUTABLE_TYPE, THIS]), (r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_4;
}

