digraph "CFG fororg.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.getNetworkAvailable()Z" {
subgraph cluster_Region_1649124016 {
label = "R(1:(2:(1:2)|(2:3|(2:(1:5)|(1:(2:(1:8)|(1:(2:(1:15)|(1:17)))))))))";
node [shape=record,color=blue];
subgraph cluster_Region_272605775 {
label = "R(2:(1:2)|(2:3|(2:(1:5)|(1:(2:(1:8)|(1:(2:(1:15)|(1:17))))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1467027994 {
label = "IF [B:1:0x0003] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5.mHasNetworkStatePermission == false) goto L_0x0005\l}"];
subgraph cluster_Region_1292542607 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1824337476 {
label = "R(2:3|(2:(1:5)|(1:(2:(1:8)|(1:(2:(1:15)|(1:17)))))))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|android.net.NetworkInfo android.net.NetworkInfo r0 = r5.mConnectionManager.getActiveNetworkInfo()\l}"];
subgraph cluster_Region_1928058812 {
label = "R(2:(1:5)|(1:(2:(1:8)|(1:(2:(1:15)|(1:17))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2089607687 {
label = "IF [B:4:0x000d] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r0 == null) goto L_0x000f\l}"];
subgraph cluster_Region_531316340 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1083510361 {
label = "R(1:(2:(1:8)|(1:(2:(1:15)|(1:17)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1486078494 {
label = "R(2:(1:8)|(1:(2:(1:15)|(1:17))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1734390980 {
label = "IF [B:7:0x0014] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0014|if (r0.isConnected() == true) goto L_0x0016\l}"];
subgraph cluster_Region_1953081479 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0016|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_855077088 {
label = "R(1:(2:(1:15)|(1:17)))";
node [shape=record,color=blue];
subgraph cluster_Region_1526224673 {
label = "R(2:(1:15)|(1:17))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_835607174 {
label = "IF [B:10:0x001b, B:12:0x001f, B:14:0x0027] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001b|if (android.os.Build.VERSION.SDK_INT \<= 13) goto L_0x002c\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|ADDED_TO_REGION\l|if (r5.mIsX86 == false) goto L_0x002a\l}"];
Node_14 [shape=record,label="{14\:\ 0x0027|ADDED_TO_REGION\l|if (r0.getType() != 9) goto L_0x002a\l}"];
subgraph cluster_Region_482213202 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x002a|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_623461330 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0010}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0017}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001d}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0021}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x002c|RETURN\lADDED_TO_REGION\l|return false\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.getNetworkAvailable((r5v0 'this' org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
Node_0 -> Node_1;
Node_6 -> Node_7;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_13 -> Node_14;
}

