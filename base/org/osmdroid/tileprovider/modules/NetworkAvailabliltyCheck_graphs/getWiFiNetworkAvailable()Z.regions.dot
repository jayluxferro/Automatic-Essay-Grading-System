digraph "CFG fororg.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.getWiFiNetworkAvailable()Z" {
subgraph cluster_Region_881413123 {
label = "R(1:(2:(1:2)|(2:3|(2:(1:7)|(1:8)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1194160301 {
label = "R(2:(1:2)|(2:3|(2:(1:7)|(1:8))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_687180873 {
label = "IF [B:1:0x0003] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r2.mHasNetworkStatePermission == false) goto L_0x0005\l}"];
subgraph cluster_Region_104106463 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1294436888 {
label = "R(2:3|(2:(1:7)|(1:8)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|android.net.NetworkInfo android.net.NetworkInfo r0 = r2.mConnectionManager.getNetworkInfo(1)\l}"];
subgraph cluster_Region_2023957582 {
label = "R(2:(1:7)|(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_251585360 {
label = "IF [B:4:0x000c, B:6:0x0012] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r0 == null) goto L_0x0015\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|ADDED_TO_REGION\l|if (r0.isConnected() == false) goto L_0x0015\l}"];
subgraph cluster_Region_1420266479 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1354027766 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.getWiFiNetworkAvailable((r2v0 'this' org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_0 -> Node_1;
Node_5 -> Node_6;
}

