digraph "CFG fororg.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.getNetworkAvailable()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r5.mHasNetworkStatePermission != false) goto L_0x0006\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|RETURN\l|return true\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|android.net.NetworkInfo r0 = r5.mConnectionManager.getActiveNetworkInfo()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r0 != null) goto L_0x0010\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if (r0.isConnected() == false) goto L_0x0017\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|RETURN\l|return true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017}"];
Node_10 [shape=record,label="{10\:\ 0x001b|if (android.os.Build.VERSION.SDK_INT \<= 13) goto L_0x002c\l}"];
Node_11 [shape=record,label="{11\:\ 0x001d}"];
Node_12 [shape=record,label="{12\:\ 0x001f|if (r5.mIsX86 == false) goto L_0x002a\l}"];
Node_13 [shape=record,label="{13\:\ 0x0021}"];
Node_14 [shape=record,label="{14\:\ 0x0027|if (r0.getType() != 9) goto L_0x002a\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|RETURN\l|return false\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\l|return true\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck.getNetworkAvailable((r5v0 'this' org.osmdroid.tileprovider.modules.NetworkAvailabliltyCheck A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_17[style=dashed];
}

