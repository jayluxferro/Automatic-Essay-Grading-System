digraph "CFG fororg.osmdroid.tileprovider.modules.TileWriter.saveFile(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;JLjava\/io\/InputStream;Ljava\/lang\/Long;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.io.File) = \l  (r3 I:org.osmdroid.tileprovider.modules.TileWriter)\l  (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l  (r5 I:long)\l org.osmdroid.tileprovider.modules.TileWriter.getFile(org.osmdroid.tileprovider.tilesource.ITileSource, long):java.io.File type: VIRTUAL \l0x0004: INVOKE  (r5 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0008: INVOKE  (r5 I:boolean) = (r5 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugTileProviders():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: CONST_STR  (r5 I:java.lang.String) =  \"OsmDroid\" \l0x0010: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0012: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0015: CONST_STR  (r8 I:java.lang.String) =  \"TileWrite \" \l0x0017: INVOKE  (r6 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001a: INVOKE  (r8 I:java.lang.String) = (r4 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x001e: INVOKE  (r6 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0021: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0025: INVOKE  (r5 I:java.lang.String), (r6 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|0x0028: INVOKE  (r5 I:java.io.File) = (r4 I:java.io.File) java.io.File.getParentFile():java.io.File type: VIRTUAL \l0x002c: INVOKE  (r6 I:boolean) = (r5 I:java.io.File) java.io.File.exists():boolean type: VIRTUAL \l0x0030: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: INVOKE  (r5 I:boolean) = \l  (r3 I:org.osmdroid.tileprovider.modules.TileWriter)\l  (r5 I:java.io.File)\l org.osmdroid.tileprovider.modules.TileWriter.createFolderAndCheckIfExists(java.io.File):boolean type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0037|0x0037: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x003a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|0x0039: RETURN  (r8 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|0x003a: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|SYNTHETIC\lSplitter:B:9:0x003c\l}"];
Node_10 [shape=record,label="{10\:\ ?|Splitter:B:9:0x003c\l|0x003c: NEW_INSTANCE  (r0 I:java.io.BufferedOutputStream) =  java.io.BufferedOutputStream A[Catch:\{ IOException \-\> 0x0072 \}, TRY_ENTER]\l0x003e: NEW_INSTANCE  (r1 I:java.io.FileOutputStream) =  java.io.FileOutputStream A[Catch:\{ IOException \-\> 0x0072 \}]\l0x0040: INVOKE  (r4 I:java.lang.String) = (r4 I:java.io.File) java.io.File.getPath():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x0072 \}]\l0x0044: INVOKE  (r1 I:java.io.FileOutputStream), (r4 I:java.lang.String) java.io.FileOutputStream.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ IOException \-\> 0x0072 \}]\l0x0047: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (8192(0x2000, float:1.14794E\-41) ?[int, float, short, byte, char])\l A[Catch:\{ IOException \-\> 0x0072 \}]\l0x0049: INVOKE  \l  (r0 I:java.io.BufferedOutputStream)\l  (r1 I:java.io.OutputStream)\l  (r4 I:int)\l java.io.BufferedOutputStream.\<init\>(java.io.OutputStream, int):void type: DIRECT A[Catch:\{ IOException \-\> 0x0072 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x004c|SYNTHETIC\lSplitter:B:11:0x004c\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x004c\l|0x004c: INVOKE  (r4 I:long) = (r7 I:java.io.InputStream), (r0 I:java.io.OutputStream) org.osmdroid.tileprovider.util.StreamUtils.copy(java.io.InputStream, java.io.OutputStream):long type: STATIC A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}, TRY_ENTER]\l0x0050: SGET  (r1 I:long) =  org.osmdroid.tileprovider.modules.TileWriter.mUsedCacheSpace long A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}]\l0x0052: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}]\l0x0053: ARITH  (r1 I:long) = (r1 I:long) + (r4 I:long) A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}]\l0x0054: SPUT  (r1 I:long) org.osmdroid.tileprovider.modules.TileWriter.mUsedCacheSpace long A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}]\l0x0056: SGET  (r4 I:long) =  org.osmdroid.tileprovider.modules.TileWriter.mUsedCacheSpace long A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}]\l0x0058: INVOKE  (r7 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}]\l0x005c: INVOKE  (r1 I:long) = (r7 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileFileSystemCacheMaxBytes():long type: INTERFACE A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}]\l0x0060: CMP_L  (r4 I:int) = (r4 I:long), (r1 I:long) A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0062|0x0062: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:15:0x0067 A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0064|0x0064: INVOKE  (r3 I:org.osmdroid.tileprovider.modules.TileWriter) org.osmdroid.tileprovider.modules.TileWriter.cutCurrentCache():void type: DIRECT A[Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0067|0x0067: INVOKE  (r0 I:java.io.Closeable) org.osmdroid.tileprovider.util.StreamUtils.closeStream(java.io.Closeable):void type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x006a|0x006a: RETURN  (r6 I:boolean) \l}"];
Node_17 [shape=record,label="{17\:\ 0x006b|ExcHandler: all null\lSplitter:B:11:0x004c\l|0x006b: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_18 [shape=record,label="{18\:\ 0x006c|0x006c: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|0x006e: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:11:0x004c\l}"];
Node_21 [shape=record,label="{21\:\ 0x0070|ExcHandler: all null\lSplitter:B:23:0x0072\l|0x0070: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x0072|SYNTHETIC\lSplitter:B:23:0x0072\l}"];
Node_24 [shape=record,label="{24\:\ ?|Splitter:B:23:0x0072\l|0x0072: SGET  (r4 I:int) =  org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors int A[Catch:\{ all \-\> 0x0070 \}, ExcHandler: IOException null, TRY_ENTER]\l0x0074: ARITH  (r4 I:int) = (r4 I:int) + (r6 I:int) A[Catch:\{ all \-\> 0x0070 \}]\l0x0075: SPUT  (r4 I:int) org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors int A[Catch:\{ all \-\> 0x0070 \}, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0077|0x0077: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x007c \l}"];
Node_26 [shape=record,label="{26\:\ 0x0079|0x0079: INVOKE  (r5 I:java.io.Closeable) org.osmdroid.tileprovider.util.StreamUtils.closeStream(java.io.Closeable):void type: STATIC \l}"];
Node_27 [shape=record,label="{27\:\ 0x007c|0x007c: RETURN  (r8 I:boolean) \l}"];
Node_28 [shape=record,label="{28\:\ 0x007d|0x007d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0082 \l}"];
Node_29 [shape=record,label="{29\:\ 0x007f|0x007f: INVOKE  (r5 I:java.io.Closeable) org.osmdroid.tileprovider.util.StreamUtils.closeStream(java.io.Closeable):void type: STATIC \l}"];
Node_30 [shape=record,label="{30\:\ 0x0082|0x0082: THROW  (r4 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.TileWriter.saveFile((r3 'this' I:org.osmdroid.tileprovider.modules.TileWriter A[IMMUTABLE_TYPE, THIS]), (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:java.lang.Long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_23;
Node_10 -> Node_11;
Node_10 -> Node_23;
Node_11 -> Node_12;
Node_11 -> Node_20;
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_28;
Node_19 -> Node_23;
Node_20 -> Node_19;
Node_21 -> Node_28;
Node_23 -> Node_24;
Node_23 -> Node_21;
Node_24 -> Node_25;
Node_24 -> Node_21;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
}

