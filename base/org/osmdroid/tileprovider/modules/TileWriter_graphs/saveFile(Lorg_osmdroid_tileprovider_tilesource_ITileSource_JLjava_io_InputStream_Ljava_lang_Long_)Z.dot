digraph "CFG fororg.osmdroid.tileprovider.modules.TileWriter.saveFile(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;JLjava\/io\/InputStream;Ljava\/lang\/Long;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.File r4 = getFile(r4, r5)\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (org.osmdroid.config.Configuration.getInstance().isDebugTileProviders() == false) goto L_0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|java.lang.StringBuilder r6 = new java.lang.StringBuilder()\lr6.append(\"TileWrite \")\lr6.append(r4.getAbsolutePath())\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r6.toString())\l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|java.io.File r5 = r4.getParentFile()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|if (r5.exists() != false) goto L_0x003a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0033}"];
Node_6 [shape=record,label="{6\:\ 0x0037|if (createFolderAndCheckIfExists(r5) != false) goto L_0x003a\l}"];
Node_7 [shape=record,label="{7\:\ 0x0039|RETURN\l|return false\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|r5 = null\l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|SYNTHETIC\lSplitter:B:9:0x003c\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ IOException \-\> 0x0072 \}\lSplitter:B:9:0x003c\l|java.io.BufferedOutputStream r0 = new java.io.BufferedOutputStream(new java.io.FileOutputStream(r4.getPath()), 8192)     \/\/ Catch:\{ IOException \-\> 0x0072 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x004c|SYNTHETIC\lSplitter:B:11:0x004c\l}"];
Node_12 [shape=record,label="{12\:\ ?|Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}\lSplitter:B:11:0x004c\l|long r4 = org.osmdroid.tileprovider.util.StreamUtils.copy(r7, r0)     \/\/ Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}\lmUsedCacheSpace = mUsedCacheSpace + r4     \/\/ Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0062|Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}\l|if ((mUsedCacheSpace \> org.osmdroid.config.Configuration.getInstance().getTileFileSystemCacheMaxBytes() ? 1 : (mUsedCacheSpace == org.osmdroid.config.Configuration.getInstance().getTileFileSystemCacheMaxBytes() ? 0 : \-1)) \<= 0) goto L_0x0067     \/\/ Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0064|Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}\l|cutCurrentCache()     \/\/ Catch:\{ IOException \-\> 0x006e, all \-\> 0x006b \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0067|org.osmdroid.tileprovider.util.StreamUtils.closeStream(r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x006a|RETURN\l|return true\l}"];
Node_17 [shape=record,label="{17\:\ 0x006b|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:11:0x004c\l|java.lang.Throwable r4 = th\l}"];
Node_18 [shape=record,label="{18\:\ 0x006c|r5 = r0\l}"];
Node_19 [shape=record,label="{19\:\ 0x006e|r5 = r0\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:11:0x004c\l}"];
Node_21 [shape=record,label="{21\:\ 0x0070|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:22:0x0072\l|java.lang.Throwable r4 = th\l}"];
Node_22 [shape=record,label="{22\:\ 0x0072|SYNTHETIC\lPHI: r5 \l  PHI: (r5v6 java.io.BufferedOutputStream) = (r5v4 java.io.BufferedOutputStream), (r5v4 java.io.BufferedOutputStream), (r5v7 java.io.BufferedOutputStream) binds: [B:9:0x003c, B:10:?, B:19:0x006e] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:22:0x0072\l}"];
Node_23 [shape=record,label="{23\:\ ?|Catch:\{ all \-\> 0x0070 \}\lSplitter:B:22:0x0072\l|org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors = org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors + 1     \/\/ Catch:\{ all \-\> 0x0070 \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x0077|if (r5 == null) goto L_0x007c\l}"];
Node_25 [shape=record,label="{25\:\ 0x0079|org.osmdroid.tileprovider.util.StreamUtils.closeStream(r5)\l}"];
Node_26 [shape=record,label="{26\:\ 0x007c|RETURN\l|return false\l}"];
Node_27 [shape=record,label="{27\:\ 0x007d|PHI: r4 r5 \l  PHI: (r4v2 'th' java.lang.Throwable) = (r4v5 'th' java.lang.Throwable), (r4v8 'th' java.lang.Throwable) binds: [B:21:0x0070, B:18:0x006c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v5 java.io.BufferedOutputStream) = (r5v6 java.io.BufferedOutputStream), (r5v8 java.io.BufferedOutputStream) binds: [B:21:0x0070, B:18:0x006c] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == null) goto L_0x0082\l}"];
Node_28 [shape=record,label="{28\:\ 0x007f|org.osmdroid.tileprovider.util.StreamUtils.closeStream(r5)\l}"];
Node_29 [shape=record,label="{29\:\ 0x0082|throw r4\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.TileWriter.saveFile((r3v0 'this' org.osmdroid.tileprovider.modules.TileWriter A[IMMUTABLE_TYPE, THIS]), (r4v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 java.lang.Long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_22;
Node_10 -> Node_11;
Node_10 -> Node_22;
Node_11 -> Node_12;
Node_11 -> Node_20;
Node_11 -> Node_17;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_27;
Node_19 -> Node_22;
Node_20 -> Node_19;
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_22 -> Node_21;
Node_23 -> Node_24;
Node_23 -> Node_21;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
}

