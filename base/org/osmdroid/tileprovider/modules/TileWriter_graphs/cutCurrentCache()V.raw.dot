digraph "CFG fororg.osmdroid.tileprovider.modules.TileWriter.cutCurrentCache()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0004: INVOKE  (r0 I:java.io.File) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getOsmdroidTileCache():java.io.File type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|SYNTHETIC\lSplitter:B:2:0x0009\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0009\l|0x0009: SGET  (r1 I:long) =  org.osmdroid.tileprovider.modules.TileWriter.mUsedCacheSpace long A[Catch:\{ all \-\> 0x00b0 \}, TRY_ENTER]\l0x000b: INVOKE  (r3 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ all \-\> 0x00b0 \}]\l0x000f: INVOKE  (r3 I:long) = (r3 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileFileSystemCacheTrimBytes():long type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l0x0013: CMP_L  (r1 I:int) = (r1 I:long), (r3 I:long) A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:18:0x00ae A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" A[Catch:\{ all \-\> 0x00b0 \}]\l0x0019: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x00b0 \}]\l0x001b: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00b0 \}]\l0x001e: CONST_STR  (r3 I:java.lang.String) =  \"Trimming tile cache from \" A[Catch:\{ all \-\> 0x00b0 \}]\l0x0020: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0023: SGET  (r3 I:long) =  org.osmdroid.tileprovider.modules.TileWriter.mUsedCacheSpace long A[Catch:\{ all \-\> 0x00b0 \}]\l0x0025: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0028: CONST_STR  (r3 I:java.lang.String) =  \" to \" A[Catch:\{ all \-\> 0x00b0 \}]\l0x002a: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x002d: INVOKE  (r3 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ all \-\> 0x00b0 \}]\l0x0031: INVOKE  (r3 I:long) = (r3 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileFileSystemCacheTrimBytes():long type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l0x0035: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0038: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x003c: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x00b0 \}]\l0x003f: INVOKE  (r1 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ all \-\> 0x00b0 \}]\l0x0043: INVOKE  (r1 I:java.io.File) = (r1 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getOsmdroidTileCache():java.io.File type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l0x0047: INVOKE  (r1 I:java.util.List) = \l  (r10 I:org.osmdroid.tileprovider.modules.TileWriter)\l  (r1 I:java.io.File)\l org.osmdroid.tileprovider.modules.TileWriter.getDirectoryFileList(java.io.File):java.util.List type: DIRECT A[Catch:\{ all \-\> 0x00b0 \}]\l0x004b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b0 \}]\l0x004c: NEW_ARRAY  (r3 I:java.io.File[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.io.File[] A[Catch:\{ all \-\> 0x00b0 \}]\l0x004e: INVOKE  (r1 I:java.lang.Object[]) = (r1 I:java.util.List), (r3 I:java.lang.Object[]) java.util.List.toArray(java.lang.Object[]):java.lang.Object[] type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l0x0052: CHECK_CAST  (r1 I:java.io.File[]) = (java.io.File[]) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00b0 \}]\l0x0054: NEW_INSTANCE  (r3 I:org.osmdroid.tileprovider.modules.TileWriter$2) =  org.osmdroid.tileprovider.modules.TileWriter$2 A[Catch:\{ all \-\> 0x00b0 \}]\l0x0056: INVOKE  \l  (r3 I:org.osmdroid.tileprovider.modules.TileWriter$2)\l  (r10 I:org.osmdroid.tileprovider.modules.TileWriter)\l org.osmdroid.tileprovider.modules.TileWriter.2.\<init\>(org.osmdroid.tileprovider.modules.TileWriter):void type: DIRECT A[Catch:\{ all \-\> 0x00b0 \}]\l0x0059: INVOKE  (r1 I:java.lang.Object[]), (r3 I:java.util.Comparator) java.util.Arrays.sort(java.lang.Object[], java.util.Comparator):void type: STATIC A[Catch:\{ all \-\> 0x00b0 \}]\l0x005c: ARRAY_LENGTH  (r3 I:int) = (r1 I:?[]) A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x005d|0x005d: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:17:0x00a7 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x005f|0x005f: AGET  (r4 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ all \-\> 0x00b0 \}]\l0x0061: SGET  (r5 I:long) =  org.osmdroid.tileprovider.modules.TileWriter.mUsedCacheSpace long A[Catch:\{ all \-\> 0x00b0 \}]\l0x0063: INVOKE  (r7 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ all \-\> 0x00b0 \}]\l0x0067: INVOKE  (r7 I:long) = (r7 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileFileSystemCacheTrimBytes():long type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l0x006b: CMP_L  (r5 I:int) = (r5 I:long), (r7 I:long) A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x006d|0x006d: IF  (r5 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:10:0x0070 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x006f|0x006f: GOTO  \-\> 0x00a7 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0070|0x0070: INVOKE  (r5 I:long) = (r4 I:java.io.File) java.io.File.length():long type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0074: INVOKE  (r7 I:boolean) = (r4 I:java.io.File) java.io.File.delete():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0078|0x0078: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x00a4 A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x007a|0x007a: INVOKE  (r7 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ all \-\> 0x00b0 \}]\l0x007e: INVOKE  (r7 I:boolean) = (r7 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugTileProviders():boolean type: INTERFACE A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0082|0x0082: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x009e A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0084|0x0084: CONST_STR  (r7 I:java.lang.String) =  \"OsmDroid\" A[Catch:\{ all \-\> 0x00b0 \}]\l0x0086: NEW_INSTANCE  (r8 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x00b0 \}]\l0x0088: INVOKE  (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00b0 \}]\l0x008b: CONST_STR  (r9 I:java.lang.String) =  \"Cache trim deleting \" A[Catch:\{ all \-\> 0x00b0 \}]\l0x008d: INVOKE  (r8 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0090: INVOKE  (r4 I:java.lang.String) = (r4 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0094: INVOKE  (r8 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x0097: INVOKE  (r4 I:java.lang.String) = (r8 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00b0 \}]\l0x009b: INVOKE  (r7 I:java.lang.String), (r4 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x009e|0x009e: SGET  (r7 I:long) =  org.osmdroid.tileprovider.modules.TileWriter.mUsedCacheSpace long A[Catch:\{ all \-\> 0x00b0 \}]\l0x00a0: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x00b0 \}]\l0x00a1: ARITH  (r7 I:long) = (r7 I:long) \- (r5 I:long) A[Catch:\{ all \-\> 0x00b0 \}]\l0x00a2: SPUT  (r7 I:long) org.osmdroid.tileprovider.modules.TileWriter.mUsedCacheSpace long A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x00a4|0x00a4: ARITH  (r2 I:int) = (r2 I:int) + (1 int) A[Catch:\{ all \-\> 0x00b0 \}]\l0x00a6: GOTO  \-\> 0x005d A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x00a7|0x00a7: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" A[Catch:\{ all \-\> 0x00b0 \}]\l0x00a9: CONST_STR  (r2 I:java.lang.String) =  \"Finished trimming tile cache\" A[Catch:\{ all \-\> 0x00b0 \}]\l0x00ab: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x00ae|0x00ae: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x00af|0x00af: RETURN   A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x00b0|ExcHandler: all null\lSplitter:B:2:0x0009\l|0x00b0: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x00b0 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x00b1|0x00b1: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x00b0 \}, TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x00b2|0x00b2: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.modules.TileWriter.cutCurrentCache((r10 'this' I:org.osmdroid.tileprovider.modules.TileWriter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_20;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_17;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_6;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
}

