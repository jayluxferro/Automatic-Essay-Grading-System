digraph "CFG fororg.osmdroid.tileprovider.modules.TileWriter.remove(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.io.File) = \l  (r4 I:org.osmdroid.tileprovider.modules.TileWriter)\l  (r5 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l  (r6 I:long)\l org.osmdroid.tileprovider.modules.TileWriter.getFile(org.osmdroid.tileprovider.tilesource.ITileSource, long):java.io.File type: VIRTUAL \l0x0004: INVOKE  (r1 I:boolean) = (r0 I:java.io.File) java.io.File.exists():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0036 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|SYNTHETIC\lSplitter:B:2:0x000a\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x000a\l|0x000a: INVOKE  (r0 I:boolean) = (r0 I:java.io.File) java.io.File.delete():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x000f \}, TRY_ENTER]\l0x000d: NOP   A[TRY_LEAVE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: RETURN  (r0 I:boolean) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|ExcHandler: Exception null\lSplitter:B:2:0x000a\l|0x000f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l0x0012: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0014: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0017: CONST_STR  (r3 I:java.lang.String) =  \"Unable to delete cached tile from \" \l0x0019: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001c: INVOKE  (r5 I:java.lang.String) = (r5 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE \l0x0020: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0023: CONST_STR  (r5 I:java.lang.String) =  \" \" \l0x0025: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0028: INVOKE  (r5 I:java.lang.String) = (r6 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x002c: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0033: INVOKE  \l  (r1 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|0x0036: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|0x0037: RETURN  (r5 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.TileWriter.remove((r4 'this' I:org.osmdroid.tileprovider.modules.TileWriter A[IMMUTABLE_TYPE, THIS]), (r5 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

