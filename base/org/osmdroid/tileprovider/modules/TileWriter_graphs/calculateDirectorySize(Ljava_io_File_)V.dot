digraph "CFG fororg.osmdroid.tileprovider.modules.TileWriter.calculateDirectorySize(Ljava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.File[] r0 = r9.listFiles()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r0 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|int r1 = r0.length\lr2 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:2:0x0006, B:12:0x002a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0008\-\>B:12:0x002a\l|if (r2 \>= r1) goto L_0x002d\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|r3 = r0[r2]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r3.isFile() == false) goto L_0x001b\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|mUsedCacheSpace = mUsedCacheSpace + r3.length()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b}"];
Node_8 [shape=record,label="{8\:\ 0x001f|if (r3.isDirectory() == false) goto L_0x002a\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021}"];
Node_10 [shape=record,label="{10\:\ 0x0025|if (isSymbolicDirectoryLink(r9, r3) != false) goto L_0x002a\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|calculateDirectorySize(r3)\l}"];
Node_12 [shape=record,label="{12\:\ 0x002a|LOOP_END\lLOOP:0: B:3:0x0008\-\>B:12:0x002a\l|int r2 = r2 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.modules.TileWriter.calculateDirectorySize((r8v0 'this' org.osmdroid.tileprovider.modules.TileWriter A[IMMUTABLE_TYPE, THIS]), (r9v0 java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_17;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_14;
Node_12 -> Node_3;
Node_13 -> Node_18;
Node_14 -> Node_12;
Node_15 -> Node_12;
Node_16 -> Node_12;
}

