digraph "CFG fororg.osmdroid.tileprovider.modules.TileWriter.remove(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Z" {
subgraph cluster_Region_1128702144 {
label = "R(2:0|(2:(1:8)|(1:(1:4))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.File java.io.File r0 = getFile(r5, r6)\l}"];
subgraph cluster_Region_1987472685 {
label = "R(2:(1:8)|(1:(1:4)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_584126286 {
label = "IF [B:1:0x0008] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0.exists() != true) goto L_?\l}"];
subgraph cluster_Region_1156071903 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1830095652 {
label = "R(1:(1:4))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_511660504 {
label = "Try: R(1:4) catches: R(3:5|6|7)";
node [shape=record,color=blue];
subgraph cluster_Region_136706017 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|RETURN\l|return r0.delete()\l}"];
}
subgraph cluster_Region_1529174079 {
label = "R(3:5|6|7) | ExcHandler: Exception (r0v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|ExcHandler: Exception (r0v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:2:0x000a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|android.util.Log.i(org.osmdroid.api.IMapView.LOGTAG, \"Unable to delete cached tile from \" + r5.name() + \" \" + org.osmdroid.util.MapTileIndex.toString(r6), r0)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
}
}
}
}
subgraph cluster_Region_1529174079 {
label = "R(3:5|6|7) | ExcHandler: Exception (r0v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|ExcHandler: Exception (r0v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:2:0x000a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|android.util.Log.i(org.osmdroid.api.IMapView.LOGTAG, \"Unable to delete cached tile from \" + r5.name() + \" \" + org.osmdroid.util.MapTileIndex.toString(r6), r0)\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return false\l}"];
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000a|SYNTHETIC\lSplitter:B:2:0x000a\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?|Catch:\{ Exception \-\> 0x000f \}\lSplitter:B:2:0x000a\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.TileWriter.remove((r4v0 'this' org.osmdroid.tileprovider.modules.TileWriter A[IMMUTABLE_TYPE, THIS]), (r5v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
}

