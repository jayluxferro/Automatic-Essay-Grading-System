digraph "CFG fororg.osmdroid.tileprovider.modules.TileWriter.cutCurrentCache()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.File r0 = org.osmdroid.config.Configuration.getInstance().getOsmdroidTileCache()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?}"];
Node_4 [shape=record,label="{4\:\ 0x0015|if ((mUsedCacheSpace \> org.osmdroid.config.Configuration.getInstance().getTileFileSystemCacheTrimBytes() ? 1 : (mUsedCacheSpace == org.osmdroid.config.Configuration.getInstance().getTileFileSystemCacheTrimBytes() ? 0 : \-1)) \<= 0) goto L_0x00ae\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|java.lang.StringBuilder r2 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr2.append(\"Trimming tile cache from \")\lr2.append(mUsedCacheSpace)\lr2.append(\" to \")\lr2.append(org.osmdroid.config.Configuration.getInstance().getTileFileSystemCacheTrimBytes())\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r2.toString())\lr2 = 0\ljava.io.File[] r1 = (java.io.File[]) getDirectoryFileList(org.osmdroid.config.Configuration.getInstance().getOsmdroidTileCache()).toArray(new java.io.File[0])\ljava.util.Arrays.sort(r1, new org.osmdroid.tileprovider.modules.TileWriter.C14762(r10))\lint r3 = r1.length\l}"];
Node_6 [shape=record,label="{6\:\ 0x005d|LOOP_START\lPHI: r2 \l  PHI: (r2v3 int) = (r2v2 int), (r2v5 int) binds: [B:5:0x0017, B:16:0x00a4] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x005d\-\>B:16:0x00a4\l|if (r2 \>= r3) goto L_0x00a7\l}"];
Node_7 [shape=record,label="{7\:\ 0x005f|r4 = r1[r2]\l}"];
Node_8 [shape=record,label="{8\:\ 0x006d|if ((mUsedCacheSpace \> org.osmdroid.config.Configuration.getInstance().getTileFileSystemCacheTrimBytes() ? 1 : (mUsedCacheSpace == org.osmdroid.config.Configuration.getInstance().getTileFileSystemCacheTrimBytes() ? 0 : \-1)) \> 0) goto L_0x0070\l}"];
Node_9 [shape=record,label="{9\:\ 0x006f}"];
Node_10 [shape=record,label="{10\:\ 0x0070|long r5 = r4.length()\l}"];
Node_11 [shape=record,label="{11\:\ 0x0078|if (r4.delete() == false) goto L_0x00a4\l}"];
Node_12 [shape=record,label="{12\:\ 0x007a}"];
Node_13 [shape=record,label="{13\:\ 0x0082|if (org.osmdroid.config.Configuration.getInstance().isDebugTileProviders() == false) goto L_0x009e\l}"];
Node_14 [shape=record,label="{14\:\ 0x0084|java.lang.StringBuilder r8 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr8.append(\"Cache trim deleting \")\lr8.append(r4.getAbsolutePath())\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r8.toString())\l}"];
Node_15 [shape=record,label="{15\:\ 0x009e|mUsedCacheSpace = mUsedCacheSpace \- r5\l}"];
Node_16 [shape=record,label="{16\:\ 0x00a4|LOOP_END\lLOOP:0: B:6:0x005d\-\>B:16:0x00a4\l|int r2 = r2 + 1\l}"];
Node_17 [shape=record,label="{17\:\ 0x00a7|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"Finished trimming tile cache\")\l}"];
Node_18 [shape=record,label="{18\:\ 0x00ae|monitor\-exit(r0)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00af|RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x00b0|REMOVE\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_21 [shape=record,label="{21\:\ 0x00b1|REMOVE\l}"];
Node_22 [shape=record,label="{22\:\ 0x00b2|REMOVE\l|throw r1\l}"];
Node_23 [shape=record,label="{23\:\ 0x00a7|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x006f|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x00a4|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x00a4|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.modules.TileWriter.cutCurrentCache((r10v0 'this' org.osmdroid.tileprovider.modules.TileWriter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_20;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_23;
Node_7 -> Node_8;
Node_8 -> Node_10;
Node_8 -> Node_24[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_26;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_25;
Node_16 -> Node_6;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_23 -> Node_17;
Node_24 -> Node_9;
Node_25 -> Node_16;
Node_26 -> Node_16;
}

