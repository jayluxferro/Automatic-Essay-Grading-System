digraph "CFG fororg.osmdroid.tileprovider.modules.TileWriter.loadTile(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.io.File r0 = getFile(r8, r9)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r0.exists() != false) goto L_0x000c\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|android.graphics.drawable.Drawable r8 = r8.getDrawable(r0.getPath())\llong r1 = java.lang.System.currentTimeMillis()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|if ((r0.lastModified() \> (r1 \- r7.mMaximumCachedFileAge) ? 1 : (r0.lastModified() == (r1 \- r7.mMaximumCachedFileAge) ? 0 : \-1)) \>= 0) goto L_0x0025\l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|r0 = true\l}"];
Node_6 [shape=record,label="{6\:\ 0x0025|r0 = false\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|PHI: r0 \l  PHI: (r0v2 boolean) = (r0v6 boolean), (r0v7 boolean) binds: [B:6:0x0025, B:5:0x0023] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == false) goto L_0x0052\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|if (r8 == null) goto L_0x0052\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a}"];
Node_10 [shape=record,label="{10\:\ 0x0032|if (org.osmdroid.config.Configuration.getInstance().isDebugMode() == false) goto L_0x004e\l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Tile expired: \")\lr1.append(org.osmdroid.util.MapTileIndex.toString(r9))\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r1.toString())\l}"];
Node_12 [shape=record,label="{12\:\ 0x004e|org.osmdroid.tileprovider.ExpirableBitmapDrawable.setState(r8, \-2)\l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|RETURN\l|return r8\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.tileprovider.modules.TileWriter.loadTile((r7v0 'this' org.osmdroid.tileprovider.modules.TileWriter A[IMMUTABLE_TYPE, THIS]), (r8v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

