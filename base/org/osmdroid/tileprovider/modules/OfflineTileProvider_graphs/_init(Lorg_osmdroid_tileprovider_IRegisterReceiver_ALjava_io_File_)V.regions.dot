digraph "CFG fororg.osmdroid.tileprovider.modules.OfflineTileProvider.\<init\>(Lorg\/osmdroid\/tileprovider\/IRegisterReceiver;[Ljava\/io\/File;)V" {
subgraph cluster_Region_437664354 {
label = "R(2:1|(3:0|(3:3|(1:5)(1:6)|7)|8))";
node [shape=record,color=blue];
Node_InsnContainer_2034189859 [shape=record,label="{|super(org.osmdroid.tileprovider.tilesource.FileBasedTileSource.getSource(r7[0].getName()), r6)\l}"];
subgraph cluster_Region_1566321764 {
label = "R(3:0|(3:3|(1:5)(1:6)|7)|8)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 0\ljava.util.ArrayList java.util.ArrayList r1 = new java.util.ArrayList()\l}"];
subgraph cluster_LoopRegion_21184263 {
label = "LOOP:0: (3:3|(1:5)(1:6)|7)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0014|if (r0 \< r7.length) goto L_0x0016\l}"];
subgraph cluster_Region_703920621 {
label = "R(3:3|(1:5)(1:6)|7)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0016|org.osmdroid.tileprovider.modules.IArchiveFile org.osmdroid.tileprovider.modules.IArchiveFile r2 = org.osmdroid.tileprovider.modules.ArchiveFileFactory.getArchiveFile(r7[r0])\l}"];
subgraph cluster_IfRegion_1901470048 {
label = "IF [B:4:0x001c] THEN: R(1:5) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001c|if (r2 != null) goto L_0x001e\l}"];
subgraph cluster_Region_1769308238 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001e|r1.add(r2)\l}"];
}
subgraph cluster_Region_1442232728 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0022|android.util.Log.w(org.osmdroid.api.IMapView.LOGTAG, \"Skipping \" + r7[r0] + \", no tile provider is registered to handle the file extension\")\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x003f|LOOP_END\lLOOP:0: B:1:0x0013\-\>B:7:0x003f\l|r0++\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0042|r5.archives = new org.osmdroid.tileprovider.modules.IArchiveFile[r1.size()]\lr5.archives = (org.osmdroid.tileprovider.modules.IArchiveFile[]) r1.toArray(r5.archives)\lorg.osmdroid.tileprovider.modules.MapTileFileArchiveProvider org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider r7 = new org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider(r6, getTileSource(), r5.archives)\lr5.mTileProviderList.add(r7)\lorg.osmdroid.tileprovider.modules.MapTileApproximater org.osmdroid.tileprovider.modules.MapTileApproximater r6 = new org.osmdroid.tileprovider.modules.MapTileApproximater()\lr5.mTileProviderList.add(r6)\lr6.addProvider(r7)\l}"];
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0013|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v4 int) binds: [B:0:0x0000, B:7:0x003f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0013\-\>B:7:0x003f\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0071}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0042|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x003f|SYNTHETIC\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x003f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.OfflineTileProvider.\<init\>((r5v0 'this' org.osmdroid.tileprovider.modules.OfflineTileProvider A[IMMUTABLE_TYPE, THIS]), (r6v0 org.osmdroid.tileprovider.IRegisterReceiver A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.io.File[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | JADX INFO: super call moved to the top of the method (can break code semantics)\lAnnotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_10[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_11;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_1 -> Node_2;
Node_10 -> Node_8;
Node_11 -> Node_7;
Node_12 -> Node_7;
}

