digraph "CFG fororg.osmdroid.tileprovider.modules.OfflineTileProvider.\<init\>(Lorg\/osmdroid\/tileprovider\/IRegisterReceiver;[Ljava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: AGET  (r1 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0003: INVOKE  (r1 I:java.lang.String) = (r1 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL \l0x0007: INVOKE  (r1 I:org.osmdroid.tileprovider.tilesource.ITileSource) = (r1 I:java.lang.String) org.osmdroid.tileprovider.tilesource.FileBasedTileSource.getSource(java.lang.String):org.osmdroid.tileprovider.tilesource.ITileSource type: STATIC \l0x000b: INVOKE  \l  (r5 I:org.osmdroid.tileprovider.MapTileProviderArray)\l  (r1 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l  (r6 I:org.osmdroid.tileprovider.IRegisterReceiver)\l org.osmdroid.tileprovider.MapTileProviderArray.\<init\>(org.osmdroid.tileprovider.tilesource.ITileSource, org.osmdroid.tileprovider.IRegisterReceiver):void type: DIRECT \l0x000e: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0010: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: ARRAY_LENGTH  (r2 I:int) = (r7 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:8:0x0042 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: AGET  (r2 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0018: INVOKE  (r2 I:org.osmdroid.tileprovider.modules.IArchiveFile) = (r2 I:java.io.File) org.osmdroid.tileprovider.modules.ArchiveFileFactory.getArchiveFile(java.io.File):org.osmdroid.tileprovider.modules.IArchiveFile type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: INVOKE  (r1 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: CONST_STR  (r2 I:java.lang.String) =  \"OsmDroid\" \l0x0024: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0026: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0029: CONST_STR  (r4 I:java.lang.String) =  \"Skipping \" \l0x002b: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002e: AGET  (r4 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x0030: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0033: CONST_STR  (r4 I:java.lang.String) =  \", no tile provider is registered to handle the file extension\" \l0x0035: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003c: INVOKE  (r2 I:java.lang.String), (r3 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x003f|0x003f: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|0x0042: INVOKE  (r7 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0046: NEW_ARRAY  (r7 I:org.osmdroid.tileprovider.modules.IArchiveFile[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: org.osmdroid.tileprovider.modules.IArchiveFile[] \l0x0048: IPUT  \l  (r7 I:org.osmdroid.tileprovider.modules.IArchiveFile[])\l  (r5 I:org.osmdroid.tileprovider.modules.OfflineTileProvider)\l org.osmdroid.tileprovider.modules.OfflineTileProvider.archives org.osmdroid.tileprovider.modules.IArchiveFile[] \l0x004a: IGET  (r7 I:org.osmdroid.tileprovider.modules.IArchiveFile[]) = \l  (r5 I:org.osmdroid.tileprovider.modules.OfflineTileProvider)\l org.osmdroid.tileprovider.modules.OfflineTileProvider.archives org.osmdroid.tileprovider.modules.IArchiveFile[] \l0x004c: INVOKE  (r7 I:java.lang.Object[]) = (r1 I:java.util.List), (r7 I:java.lang.Object[]) java.util.List.toArray(java.lang.Object[]):java.lang.Object[] type: INTERFACE \l0x0050: CHECK_CAST  (r7 I:org.osmdroid.tileprovider.modules.IArchiveFile[]) = (org.osmdroid.tileprovider.modules.IArchiveFile[]) (r7 I:?[OBJECT, ARRAY]) \l0x0052: IPUT  \l  (r7 I:org.osmdroid.tileprovider.modules.IArchiveFile[])\l  (r5 I:org.osmdroid.tileprovider.modules.OfflineTileProvider)\l org.osmdroid.tileprovider.modules.OfflineTileProvider.archives org.osmdroid.tileprovider.modules.IArchiveFile[] \l0x0054: NEW_INSTANCE  (r7 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider) =  org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider \l0x0056: INVOKE  (r0 I:org.osmdroid.tileprovider.tilesource.ITileSource) = \l  (r5 I:org.osmdroid.tileprovider.modules.OfflineTileProvider)\l org.osmdroid.tileprovider.modules.OfflineTileProvider.getTileSource():org.osmdroid.tileprovider.tilesource.ITileSource type: VIRTUAL \l0x005a: IGET  (r1 I:org.osmdroid.tileprovider.modules.IArchiveFile[]) = \l  (r5 I:org.osmdroid.tileprovider.modules.OfflineTileProvider)\l org.osmdroid.tileprovider.modules.OfflineTileProvider.archives org.osmdroid.tileprovider.modules.IArchiveFile[] \l0x005c: INVOKE  \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l  (r6 I:org.osmdroid.tileprovider.IRegisterReceiver)\l  (r0 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l  (r1 I:org.osmdroid.tileprovider.modules.IArchiveFile[])\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.\<init\>(org.osmdroid.tileprovider.IRegisterReceiver, org.osmdroid.tileprovider.tilesource.ITileSource, org.osmdroid.tileprovider.modules.IArchiveFile[]):void type: DIRECT \l0x005f: IGET  (r6 I:java.util.List) = \l  (r5 I:org.osmdroid.tileprovider.modules.OfflineTileProvider)\l org.osmdroid.tileprovider.modules.OfflineTileProvider.mTileProviderList java.util.List \l0x0061: INVOKE  (r6 I:java.util.List), (r7 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0064: NEW_INSTANCE  (r6 I:org.osmdroid.tileprovider.modules.MapTileApproximater) =  org.osmdroid.tileprovider.modules.MapTileApproximater \l0x0066: INVOKE  \l  (r6 I:org.osmdroid.tileprovider.modules.MapTileApproximater)\l org.osmdroid.tileprovider.modules.MapTileApproximater.\<init\>():void type: DIRECT \l0x0069: IGET  (r0 I:java.util.List) = \l  (r5 I:org.osmdroid.tileprovider.modules.OfflineTileProvider)\l org.osmdroid.tileprovider.modules.OfflineTileProvider.mTileProviderList java.util.List \l0x006b: INVOKE  (r0 I:java.util.List), (r6 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x006e: INVOKE  \l  (r6 I:org.osmdroid.tileprovider.modules.MapTileApproximater)\l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileApproximater.addProvider(org.osmdroid.tileprovider.modules.MapTileModuleProviderBase):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0071|0x0071: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.OfflineTileProvider.\<init\>((r5 'this' I:org.osmdroid.tileprovider.modules.OfflineTileProvider A[IMMUTABLE_TYPE, THIS]), (r6 I:org.osmdroid.tileprovider.IRegisterReceiver A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.io.File[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_8 -> Node_9;
}

