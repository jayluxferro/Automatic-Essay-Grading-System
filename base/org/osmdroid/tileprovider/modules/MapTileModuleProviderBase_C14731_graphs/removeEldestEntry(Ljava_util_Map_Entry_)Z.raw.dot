digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileModuleProviderBase.1.removeEldestEntry(Ljava\/util\/Map$Entry;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:int) = \l  (r5 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.1.size():int type: VIRTUAL \l0x0004: IGET  (r0 I:int) = \l  (r5 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.1.val$pPendingQueueSize int \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r6 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r6 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = \l  (r5 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.1.this$0 org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l0x000c: IGET  (r6 I:java.util.LinkedHashMap\<java.lang.Long, org.osmdroid.tileprovider.MapTileRequestState\>) = \l  (r6 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mPending java.util.LinkedHashMap \l0x000e: INVOKE  (r6 I:java.util.Set) = (r6 I:java.util.LinkedHashMap) java.util.LinkedHashMap.keySet():java.util.Set type: VIRTUAL \l0x0012: INVOKE  (r6 I:java.util.Iterator) = (r6 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: INVOKE  (r0 I:boolean) = (r6 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0051 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: INVOKE  (r0 I:java.lang.Object) = (r6 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0020: CHECK_CAST  (r0 I:java.lang.Long) = (java.lang.Long) (r0 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  (r2 I:long) = (r0 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x0026: IGET  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = \l  (r5 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.1.this$0 org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l0x0028: IGET  (r0 I:java.util.HashMap\<java.lang.Long, org.osmdroid.tileprovider.MapTileRequestState\>) = \l  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mWorking java.util.HashMap \l0x002a: INVOKE  (r4 I:java.lang.Long) = (r2 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x002e: INVOKE  (r0 I:boolean) = (r0 I:java.util.HashMap), (r4 I:java.lang.Object) java.util.HashMap.containsKey(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|0x0032: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0016 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: IGET  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = \l  (r5 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.1.this$0 org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l0x0036: IGET  (r0 I:java.util.LinkedHashMap\<java.lang.Long, org.osmdroid.tileprovider.MapTileRequestState\>) = \l  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mPending java.util.LinkedHashMap \l0x0038: INVOKE  (r4 I:java.lang.Long) = (r2 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x003c: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.LinkedHashMap), (r4 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0040: CHECK_CAST  (r0 I:org.osmdroid.tileprovider.MapTileRequestState) = (org.osmdroid.tileprovider.MapTileRequestState) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|0x0042: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0016 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: IGET  (r6 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = \l  (r5 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.1.this$0 org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l0x0046: INVOKE  \l  (r6 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l  (r2 I:long)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.removeTileFromQueues(long):void type: VIRTUAL \l0x0049: INVOKE  (r6 I:org.osmdroid.tileprovider.IMapTileProviderCallback) = (r0 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getCallback():org.osmdroid.tileprovider.IMapTileProviderCallback type: VIRTUAL \l0x004d: INVOKE  \l  (r6 I:org.osmdroid.tileprovider.IMapTileProviderCallback)\l  (r0 I:org.osmdroid.tileprovider.MapTileRequestState)\l org.osmdroid.tileprovider.IMapTileProviderCallback.mapTileRequestFailedExceedsMaxQueueSize(org.osmdroid.tileprovider.MapTileRequestState):void type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|0x0050: RETURN  (r1 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0051|0x0051: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.1.removeEldestEntry((r5 'this' I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1 A[IMMUTABLE_TYPE, THIS]), (r6 I:java.util.Map$Entry\<java.lang.Long, org.osmdroid.tileprovider.MapTileRequestState\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/Map$Entry\<, Ljava\/lang\/Long;, Lorg\/osmdroid\/tileprovider\/MapTileRequestState;, \>;)Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_4;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_4;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
}

