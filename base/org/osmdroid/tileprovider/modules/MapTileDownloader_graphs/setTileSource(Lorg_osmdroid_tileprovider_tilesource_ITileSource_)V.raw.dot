digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileDownloader.setTileSource(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INSTANCE_OF  (r0 I:boolean) = (r2 I:?[OBJECT, ARRAY]) org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.util.concurrent.atomic.AtomicReference\<org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase\>) = (r1 I:org.osmdroid.tileprovider.modules.MapTileDownloader) org.osmdroid.tileprovider.modules.MapTileDownloader.mTileSource java.util.concurrent.atomic.AtomicReference \l0x0006: CHECK_CAST  (r2 I:org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase) = (org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase) (r2 I:?[OBJECT, ARRAY]) \l0x0008: INVOKE  \l  (r0 I:java.util.concurrent.atomic.AtomicReference)\l  (r2 I:java.lang.Object)\l java.util.concurrent.atomic.AtomicReference.set(java.lang.Object):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IGET  (r2 I:java.util.concurrent.atomic.AtomicReference\<org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase\>) = (r1 I:org.osmdroid.tileprovider.modules.MapTileDownloader) org.osmdroid.tileprovider.modules.MapTileDownloader.mTileSource java.util.concurrent.atomic.AtomicReference \l0x000e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: INVOKE  \l  (r2 I:java.util.concurrent.atomic.AtomicReference)\l  (r0 I:java.lang.Object)\l java.util.concurrent.atomic.AtomicReference.set(java.lang.Object):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.MapTileDownloader.setTileSource((r1 'this' I:org.osmdroid.tileprovider.modules.MapTileDownloader A[IMMUTABLE_TYPE, THIS]), (r2 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

