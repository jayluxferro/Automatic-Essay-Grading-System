digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileDownloader.computeExpirationTime(Ljava\/lang\/String;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003e \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r5 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x003e \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|SYNTHETIC\lSplitter:B:3:0x0008\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0008\l|0x0008: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ Exception \-\> 0x001d \}, TRY_ENTER]\l0x000c: INVOKE  (r0 I:java.text.SimpleDateFormat) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getHttpHeaderDateTimeFormat():java.text.SimpleDateFormat type: INTERFACE A[Catch:\{ Exception \-\> 0x001d \}]\l0x0010: INVOKE  (r0 I:java.util.Date) = (r0 I:java.text.SimpleDateFormat), (r5 I:java.lang.String) java.text.SimpleDateFormat.parse(java.lang.String):java.util.Date type: VIRTUAL A[Catch:\{ Exception \-\> 0x001d \}]\l0x0014: INVOKE  (r0 I:long) = (r0 I:java.util.Date) java.util.Date.getTime():long type: VIRTUAL A[Catch:\{ Exception \-\> 0x001d \}]\l0x0018: INVOKE  (r0 I:java.lang.Long) = (r0 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ Exception \-\> 0x001d \}]\l0x001b: NOP   A[TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|ExcHandler: Exception null\lSplitter:B:3:0x0008\l|0x001d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: INVOKE  (r1 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0022: INVOKE  (r1 I:boolean) = (r1 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugMapTileDownloader():boolean type: INTERFACE \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003e \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l0x002a: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x002c: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002f: CONST_STR  (r3 I:java.lang.String) =  \"Unable to parse expiration tag for tile, using default, server returned \" \l0x0031: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003b: INVOKE  \l  (r1 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.d(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|0x003e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x003f|0x003f: INVOKE  (r0 I:long) = \l  (r4 I:org.osmdroid.tileprovider.modules.MapTileDownloader)\l  (r0 I:java.lang.Long)\l org.osmdroid.tileprovider.modules.MapTileDownloader.computeExpirationTime(java.lang.Long):long type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0043|0x0043: RETURN  (r0 I:long) \l}"];
MethodNode[shape=record,label="{private long org.osmdroid.tileprovider.modules.MapTileDownloader.computeExpirationTime((r4 'this' I:org.osmdroid.tileprovider.modules.MapTileDownloader A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

