digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileDownloader.getTileSource()Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicReference\<org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase\>) = (r1 I:org.osmdroid.tileprovider.modules.MapTileDownloader) org.osmdroid.tileprovider.modules.MapTileDownloader.mTileSource java.util.concurrent.atomic.AtomicReference \l0x0002: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.concurrent.atomic.AtomicReference) java.util.concurrent.atomic.AtomicReference.get():java.lang.Object type: VIRTUAL \l0x0006: CHECK_CAST  (r0 I:org.osmdroid.tileprovider.tilesource.ITileSource) = (org.osmdroid.tileprovider.tilesource.ITileSource) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN  (r0 I:org.osmdroid.tileprovider.tilesource.ITileSource) \l}"];
MethodNode[shape=record,label="{public org.osmdroid.tileprovider.tilesource.ITileSource org.osmdroid.tileprovider.modules.MapTileDownloader.getTileSource((r1 'this' I:org.osmdroid.tileprovider.modules.MapTileDownloader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

