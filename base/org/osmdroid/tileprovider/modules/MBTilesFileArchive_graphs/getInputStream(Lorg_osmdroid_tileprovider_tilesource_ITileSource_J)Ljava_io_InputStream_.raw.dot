digraph "CFG fororg.osmdroid.tileprovider.modules.MBTilesFileArchive.getInputStream(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST_STR  (r0 I:java.lang.String) =  \"tile_data\" \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: FILLED_NEW_ARRAY  (r3 I:java.lang.String[]) = (r0 I:java.lang.String) elemType: java.lang.String A[Catch:\{ Throwable \-\> 0x0062 \}, TRY_ENTER]\l0x0007: CONST  (r0 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0008: NEW_ARRAY  (r5 I:java.lang.String[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x000a: INVOKE  (r0 I:int) = (r12 I:long) org.osmdroid.util.MapTileIndex.getX(long):int type: STATIC A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x000e: INVOKE  (r0 I:java.lang.String) = (r0 I:int) java.lang.Integer.toString(int):java.lang.String type: STATIC A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0012: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0013: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r9 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0015: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0016: CONST  (r1 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0018: INVOKE  (r4 I:int) = (r12 I:long) org.osmdroid.util.MapTileIndex.getZoom(long):int type: STATIC A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x001c: CAST  (r6 I:double) = (double) (r4 I:int) A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x001d: INVOKE  (r1 I:double) = (r1 I:double), (r6 I:double) java.lang.Math.pow(double, double):double type: STATIC A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0021: INVOKE  (r4 I:int) = (r12 I:long) org.osmdroid.util.MapTileIndex.getY(long):int type: STATIC A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0025: CAST  (r6 I:double) = (double) (r4 I:int) A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0026: ARITH  (r1 I:double) = (r1 I:double) \- (r6 I:double) A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0027: CONST  (r6 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0029: ARITH  (r1 I:double) = (r1 I:double) \- (r6 I:double) A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x002a: INVOKE  (r1 I:java.lang.String) = (r1 I:double) java.lang.Double.toString(double):java.lang.String type: STATIC A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x002e: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0030: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0031: INVOKE  (r1 I:int) = (r12 I:long) org.osmdroid.util.MapTileIndex.getZoom(long):int type: STATIC A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0035: INVOKE  (r1 I:java.lang.String) = (r1 I:int) java.lang.Integer.toString(int):java.lang.String type: STATIC A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0039: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r1 I:?[OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x003b: IGET  (r1 I:android.database.sqlite.SQLiteDatabase) = \l  (r10 I:org.osmdroid.tileprovider.modules.MBTilesFileArchive)\l org.osmdroid.tileprovider.modules.MBTilesFileArchive.mDatabase android.database.sqlite.SQLiteDatabase A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x003d: CONST_STR  (r2 I:java.lang.String) =  \"tiles\" A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x003f: CONST_STR  (r4 I:java.lang.String) =  \"tile_column=? and tile_row=? and zoom_level=?\" A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0041: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0042: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0043: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0044: INVOKE  (r0 I:android.database.Cursor) = \l  (r1 I:android.database.sqlite.SQLiteDatabase)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String[])\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String[])\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String):android.database.Cursor type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0048: INVOKE  (r1 I:int) = (r0 I:android.database.Cursor) android.database.Cursor.getCount():int type: INTERFACE A[Catch:\{ Throwable \-\> 0x0062 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x004c|0x004c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x005b A[Catch:\{ Throwable \-\> 0x0062 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x004e|0x004e: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.moveToFirst():boolean type: INTERFACE A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0051: NEW_INSTANCE  (r1 I:java.io.ByteArrayInputStream) =  java.io.ByteArrayInputStream A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0053: INVOKE  (r2 I:byte[]) = (r0 I:android.database.Cursor), (r9 I:int) android.database.Cursor.getBlob(int):byte[] type: INTERFACE A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x0057: INVOKE  (r1 I:java.io.ByteArrayInputStream), (r2 I:byte[]) java.io.ByteArrayInputStream.\<init\>(byte[]):void type: DIRECT A[Catch:\{ Throwable \-\> 0x0062 \}]\l0x005a: GOTO  \-\> 0x005c A[Catch:\{ Throwable \-\> 0x0062 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x005b|0x005b: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x0062 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x005c|0x005c: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE A[Catch:\{ Throwable \-\> 0x0062 \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x005f|0x005f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x007d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0061|0x0061: RETURN  (r1 I:java.io.InputStream) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0062|ExcHandler: Throwable null\lSplitter:B:1:0x0003\l|0x0062: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0063|0x0063: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l0x0065: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0067: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x006a: CONST_STR  (r3 I:java.lang.String) =  \"Error getting db stream: \" \l0x006c: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006f: INVOKE  (r12 I:java.lang.String) = (r12 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x0073: INVOKE  (r2 I:java.lang.StringBuilder), (r12 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0076: INVOKE  (r12 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x007a: INVOKE  \l  (r1 I:java.lang.String)\l  (r12 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x007d|0x007d: RETURN  (r11 I:java.io.InputStream) \l}"];
MethodNode[shape=record,label="{public java.io.InputStream org.osmdroid.tileprovider.modules.MBTilesFileArchive.getInputStream((r10 'this' I:org.osmdroid.tileprovider.modules.MBTilesFileArchive A[IMMUTABLE_TYPE, THIS]), (r11 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

