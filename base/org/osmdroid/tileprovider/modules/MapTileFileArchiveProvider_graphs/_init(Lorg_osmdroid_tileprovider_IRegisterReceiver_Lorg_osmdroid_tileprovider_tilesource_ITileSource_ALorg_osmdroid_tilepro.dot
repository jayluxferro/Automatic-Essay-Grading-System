digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.\<init\>(Lorg\/osmdroid\/tileprovider\/IRegisterReceiver;Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;[Lorg\/osmdroid\/tileprovider\/modules\/IArchiveFile;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r3, org.osmdroid.config.Configuration.getInstance().getTileFileSystemThreads(), org.osmdroid.config.Configuration.getInstance().getTileFileSystemMaxQueueSize())\lr2.mArchiveFiles = new java.util.ArrayList\<\>()\lr2.mTileSource = new java.util.concurrent.atomic.AtomicReference\<\>()\lr2.ignoreTileSource = r6\lsetTileSource(r4)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|if (r5 != null) goto L_0x002f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0028|r2.mSpecificArchivesProvided = false\lfindArchiveFiles()\l}"];
Node_3 [shape=record,label="{3\:\ 0x002f|r2.mSpecificArchivesProvided = true\lint r4 = r5.length \- 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0034|LOOP_START\lPHI: r4 \l  PHI: (r4v3 int) = (r4v2 int), (r4v4 int) binds: [B:3:0x002f, B:5:0x0036] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0034\-\>B:5:0x0036\l|if (r4 \< 0) goto L_0x0040\l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|LOOP_END\lLOOP:0: B:4:0x0034\-\>B:5:0x0036\l|r2.mArchiveFiles.add(r5[r4])\lint r4 = r4 + \-1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0040|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.\<init\>((r2v0 'this' org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider A[IMMUTABLE_TYPE, THIS]), (r3v0 org.osmdroid.tileprovider.IRegisterReceiver A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 org.osmdroid.tileprovider.modules.IArchiveFile[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_4;
Node_6 -> Node_8;
}

