digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.findArchiveFiles()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r5 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.clearArcives():void type: DIRECT \l0x0003: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0007: INVOKE  (r0 I:java.io.File) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getOsmdroidBasePath():java.io.File type: INTERFACE \l0x000b: INVOKE  (r0 I:java.io.File[]) = (r0 I:java.io.File) java.io.File.listFiles():java.io.File[] type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x002a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x0012: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:8:0x002a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x0017: INVOKE  (r3 I:org.osmdroid.tileprovider.modules.IArchiveFile) = (r3 I:java.io.File) org.osmdroid.tileprovider.modules.ArchiveFileFactory.getArchiveFile(java.io.File):org.osmdroid.tileprovider.modules.IArchiveFile type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0027 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: IGET  (r4 I:boolean) = \l  (r5 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.ignoreTileSource boolean \l0x001f: INVOKE  \l  (r3 I:org.osmdroid.tileprovider.modules.IArchiveFile)\l  (r4 I:boolean)\l org.osmdroid.tileprovider.modules.IArchiveFile.setIgnoreTileSource(boolean):void type: INTERFACE \l0x0022: IGET  (r4 I:java.util.ArrayList\<org.osmdroid.tileprovider.modules.IArchiveFile\>) = \l  (r5 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.mArchiveFiles java.util.ArrayList \l0x0024: INVOKE  (r4 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|0x002a: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.findArchiveFiles((r5 'this' I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_3;
}

