digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.clearArcives()V" {
subgraph cluster_Region_1073651160 {
label = "R(1:(3:2|(1:4)(0)|5))";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_1169454735 {
label = "LOOP:0: (3:2|(1:4)(0)|5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r2.mArchiveFiles.isEmpty() == false) goto L_0x0008\l}"];
subgraph cluster_Region_1684007653 {
label = "R(3:2|(1:4)(0)|5)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|org.osmdroid.tileprovider.modules.IArchiveFile org.osmdroid.tileprovider.modules.IArchiveFile r0 = r2.mArchiveFiles.get(0)\l}"];
subgraph cluster_IfRegion_1332844674 {
label = "IF [B:3:0x0011] THEN: R(1:4) ELSE: R(0)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0011|if (r0 != null) goto L_0x0013\l}"];
subgraph cluster_Region_1582491821 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0013|r0.close()\l}"];
}
subgraph cluster_Region_1792106648 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_5 [shape=record,label="{5\:\ 0x0016|LOOP_END\lLOOP:0: B:0:0x0000\-\>B:5:0x0016\l|r2.mArchiveFiles.remove(0)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:5:0x0016\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001c}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001c|SYNTHETIC\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0016|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.clearArcives((r2v0 'this' org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_9[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_0;
Node_0 -> Node_1;
Node_7 -> Node_6;
Node_8 -> Node_5;
Node_9 -> Node_5;
}

