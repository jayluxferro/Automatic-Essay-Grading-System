digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.\<init\>(Lorg\/osmdroid\/tileprovider\/IRegisterReceiver;Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;[Lorg\/osmdroid\/tileprovider\/modules\/IArchiveFile;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0004: INVOKE  (r0 I:short) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileFileSystemThreads():short type: INTERFACE \l0x0008: INVOKE  (r1 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x000c: INVOKE  (r1 I:short) = (r1 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileFileSystemMaxQueueSize():short type: INTERFACE \l0x0010: INVOKE  \l  (r2 I:org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase)\l  (r3 I:org.osmdroid.tileprovider.IRegisterReceiver)\l  (r0 I:int)\l  (r1 I:int)\l org.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase.\<init\>(org.osmdroid.tileprovider.IRegisterReceiver, int, int):void type: DIRECT \l0x0013: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList \l0x0015: INVOKE  (r3 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0018: IPUT  \l  (r3 I:java.util.ArrayList\<org.osmdroid.tileprovider.modules.IArchiveFile\>)\l  (r2 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.mArchiveFiles java.util.ArrayList \l0x001a: NEW_INSTANCE  (r3 I:java.util.concurrent.atomic.AtomicReference) =  java.util.concurrent.atomic.AtomicReference \l0x001c: INVOKE  (r3 I:java.util.concurrent.atomic.AtomicReference) java.util.concurrent.atomic.AtomicReference.\<init\>():void type: DIRECT \l0x001f: IPUT  \l  (r3 I:java.util.concurrent.atomic.AtomicReference\<org.osmdroid.tileprovider.tilesource.ITileSource\>)\l  (r2 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.mTileSource java.util.concurrent.atomic.AtomicReference \l0x0021: IPUT  \l  (r6 I:boolean)\l  (r2 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.ignoreTileSource boolean \l0x0023: INVOKE  \l  (r2 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l  (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.setTileSource(org.osmdroid.tileprovider.tilesource.ITileSource):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|0x0026: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0028|0x0028: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0029: IPUT  \l  (r3 I:boolean)\l  (r2 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.mSpecificArchivesProvided boolean \l0x002b: INVOKE  \l  (r2 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.findArchiveFiles():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x002f|0x002f: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0030: IPUT  \l  (r3 I:boolean)\l  (r2 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.mSpecificArchivesProvided boolean \l0x0032: ARRAY_LENGTH  (r4 I:int) = (r5 I:?[]) \l0x0033: ARITH  (r4 I:int) = (r4 I:int) \- (r3 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0034|0x0034: IF  (r4 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:6:0x0040 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0036|0x0036: IGET  (r3 I:java.util.ArrayList\<org.osmdroid.tileprovider.modules.IArchiveFile\>) = \l  (r2 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.mArchiveFiles java.util.ArrayList \l0x0038: AGET  (r6 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x003a: INVOKE  (r3 I:java.util.ArrayList), (r6 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x003d: ARITH  (r4 I:int) = (r4 I:int) + (\-1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0040|0x0040: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.\<init\>((r2 'this' I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider A[IMMUTABLE_TYPE, THIS]), (r3 I:org.osmdroid.tileprovider.IRegisterReceiver A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.osmdroid.tileprovider.modules.IArchiveFile[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_4;
}

