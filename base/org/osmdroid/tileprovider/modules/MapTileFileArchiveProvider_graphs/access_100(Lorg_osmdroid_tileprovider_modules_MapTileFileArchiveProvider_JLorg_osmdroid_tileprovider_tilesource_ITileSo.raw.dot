digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.access$100(Lorg\/osmdroid\/tileprovider\/modules\/MapTileFileArchiveProvider;JLorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.io.InputStream) = \l  (r0 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l  (r1 I:long)\l  (r3 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.getInputStream(long, org.osmdroid.tileprovider.tilesource.ITileSource):java.io.InputStream type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: RETURN  (r0 I:java.io.InputStream) \l}"];
MethodNode[shape=record,label="{static \/* synthetic *\/ java.io.InputStream org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.access$100((r0 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r1 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

