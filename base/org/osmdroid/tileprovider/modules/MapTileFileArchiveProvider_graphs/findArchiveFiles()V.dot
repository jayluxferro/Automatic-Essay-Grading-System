digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.findArchiveFiles()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|clearArcives()\ljava.io.File[] r0 = org.osmdroid.config.Configuration.getInstance().getOsmdroidBasePath().listFiles()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|if (r0 == null) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|int r1 = r0.length\lr2 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:2:0x0011, B:7:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0013\-\>B:7:0x0027\l|if (r2 \>= r1) goto L_0x002a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|org.osmdroid.tileprovider.modules.IArchiveFile r3 = org.osmdroid.tileprovider.modules.ArchiveFileFactory.getArchiveFile(r0[r2])\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|if (r3 == null) goto L_0x0027\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|r3.setIgnoreTileSource(r5.ignoreTileSource)\lr5.mArchiveFiles.add(r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|LOOP_END\lLOOP:0: B:3:0x0013\-\>B:7:0x0027\l|int r2 = r2 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x002a|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0027|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.findArchiveFiles((r5v0 'this' org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_9;
Node_7 -> Node_3;
Node_8 -> Node_12;
Node_9 -> Node_7;
Node_10 -> Node_7;
}

