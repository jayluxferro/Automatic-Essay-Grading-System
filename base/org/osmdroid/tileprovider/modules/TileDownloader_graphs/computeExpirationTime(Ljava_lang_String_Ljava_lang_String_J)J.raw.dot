digraph "CFG fororg.osmdroid.tileprovider.modules.TileDownloader.computeExpirationTime(Ljava\/lang\/String;Ljava\/lang\/String;J)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0004: INVOKE  (r0 I:java.lang.Long) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getExpirationOverrideDuration():java.lang.Long type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r5 I:long) = (r0 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x000e: ARITH  (r7 I:long) = (r7 I:long) + (r5 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: RETURN  (r7 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0014: INVOKE  (r0 I:long) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getExpirationExtendedDuration():long type: INTERFACE \l0x0018: INVOKE  (r6 I:java.lang.Long) = \l  (r4 I:org.osmdroid.tileprovider.modules.TileDownloader)\l  (r6 I:java.lang.String)\l org.osmdroid.tileprovider.modules.TileDownloader.getHttpCacheControlDuration(java.lang.String):java.lang.Long type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0029 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: INVOKE  (r5 I:long) = (r6 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x0022: CONST  (r2 I:?[long, double]) = (1000(0x3e8, double:4.94E\-321) ?[long, double]) \l0x0024: ARITH  (r5 I:long) = (r5 I:long) * (r2 I:long) \l0x0026: ARITH  (r7 I:long) = (r7 I:long) + (r5 I:long) \l0x0027: ARITH  (r7 I:long) = (r7 I:long) + (r0 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: RETURN  (r7 I:long) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: INVOKE  (r5 I:java.lang.Long) = \l  (r4 I:org.osmdroid.tileprovider.modules.TileDownloader)\l  (r5 I:java.lang.String)\l org.osmdroid.tileprovider.modules.TileDownloader.getHttpExpiresTime(java.lang.String):java.lang.Long type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0035 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|0x002f: INVOKE  (r5 I:long) = (r5 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x0033: ARITH  (r5 I:long) = (r5 I:long) + (r0 I:long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: RETURN  (r5 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: CONST  (r5 I:?[long, double]) = \l  (604800000(0x240c8400, double:2.988109026E\-315) ?[long, double])\l \l0x0038: ARITH  (r7 I:long) = (r7 I:long) + (r5 I:long) \l0x0039: ARITH  (r7 I:long) = (r7 I:long) + (r0 I:long) \l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|0x003a: RETURN  (r7 I:long) \l}"];
MethodNode[shape=record,label="{public long org.osmdroid.tileprovider.modules.TileDownloader.computeExpirationTime((r4 'this' I:org.osmdroid.tileprovider.modules.TileDownloader A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
}

