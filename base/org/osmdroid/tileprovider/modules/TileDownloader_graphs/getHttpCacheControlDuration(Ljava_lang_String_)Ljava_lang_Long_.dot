digraph "CFG fororg.osmdroid.tileprovider.modules.TileDownloader.getHttpCacheControlDuration(Ljava\/lang\/String;)Ljava\/lang\/Long;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r6 == null) goto L_?\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r6.length() \<= 0) goto L_?\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008}"];
Node_4 [shape=record,label="{4\:\ 0x000a|SYNTHETIC\lSplitter:B:4:0x000a\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ Exception \-\> 0x002e \}\lSplitter:B:4:0x000a\l|java.lang.String[] r0 = r6.split(\", \")     \/\/ Catch:\{ Exception \-\> 0x002e \}\lint r1 = r0.length     \/\/ Catch:\{ Exception \-\> 0x002e \}\lr2 = 0     \/\/ Catch:\{ Exception \-\> 0x002e \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|LOOP_START\lCatch:\{ Exception \-\> 0x002e \}\lPHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:5:?, B:11:0x002b] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0010\-\>B:11:0x002b\l|if (r2 \>= r1) goto L_0x004f     \/\/ Catch:\{ Exception \-\> 0x002e \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|Catch:\{ Exception \-\> 0x002e \}\l|r3 = r0[r2]     \/\/ Catch:\{ Exception \-\> 0x002e \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|Catch:\{ Exception \-\> 0x002e \}\l|if (r3.indexOf(\"max\-age=\") != 0) goto L_0x002b     \/\/ Catch:\{ Exception \-\> 0x002e \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|Catch:\{ Exception \-\> 0x002e \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|RETURN\l|return java.lang.Long.valueOf(r3.substring(\"max\-age=\".length()))\l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|LOOP_END\lLOOP:0: B:6:0x0010\-\>B:11:0x002b\l|int r2 = r2 + 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|ExcHandler: Exception (r0v2 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:4:0x000a\l|java.lang.Exception r0 = move\-exception\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f}"];
Node_14 [shape=record,label="{14\:\ 0x0037|if (org.osmdroid.config.Configuration.getInstance().isDebugMapTileDownloader() == false) goto L_?\l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Unable to parse cache control tag for tile, server returned \")\lr2.append(r6)\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r2.toString(), r0)\l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x001c|SYNTHETIC\l}"];
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_20 [shape=record,label="{20\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_21 [shape=record,label="{21\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_22 [shape=record,label="{22\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{public java.lang.Long org.osmdroid.tileprovider.modules.TileDownloader.getHttpCacheControlDuration((r5v0 'this' org.osmdroid.tileprovider.modules.TileDownloader A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_19;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_20;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_11;
Node_8 -> Node_17[style=dashed];
Node_9 -> Node_10;
Node_11 -> Node_6;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_21;
Node_15 -> Node_18;
Node_16 -> Node_22;
Node_17 -> Node_9;
}

