digraph "CFG fororg.osmdroid.tileprovider.modules.TileDownloader.getHttpCacheControlDuration(Ljava\/lang\/String;)Ljava\/lang\/Long;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004f \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r0 I:int) = (r6 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:16:0x004f \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: CONST_STR  (r0 I:java.lang.String) =  \", \" \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|SYNTHETIC\lSplitter:B:4:0x000a\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x000a\l|0x000a: INVOKE  (r0 I:java.lang.String[]) = (r6 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL A[Catch:\{ Exception \-\> 0x002e \}, TRY_ENTER]\l0x000e: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) A[Catch:\{ Exception \-\> 0x002e \}]\l0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x002e \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:16:0x004f A[Catch:\{ Exception \-\> 0x002e \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: AGET  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) A[Catch:\{ Exception \-\> 0x002e \}]\l0x0014: CONST_STR  (r4 I:java.lang.String) =  \"max\-age=\" A[Catch:\{ Exception \-\> 0x002e \}]\l0x0016: INVOKE  (r4 I:int) = (r3 I:java.lang.String), (r4 I:java.lang.String) java.lang.String.indexOf(java.lang.String):int type: VIRTUAL A[Catch:\{ Exception \-\> 0x002e \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002b A[Catch:\{ Exception \-\> 0x002e \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: CONST_STR  (r0 I:java.lang.String) =  \"max\-age=\" A[Catch:\{ Exception \-\> 0x002e \}]\l0x001e: INVOKE  (r0 I:int) = (r0 I:java.lang.String) java.lang.String.length():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x002e \}]\l0x0022: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.String), (r0 I:int) java.lang.String.substring(int):java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x002e \}]\l0x0026: INVOKE  (r0 I:java.lang.Long) = (r0 I:java.lang.String) java.lang.Long.valueOf(java.lang.String):java.lang.Long type: STATIC A[Catch:\{ Exception \-\> 0x002e \}]\l0x0029: NOP   A[TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: RETURN  (r0 I:java.lang.Long) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002b|0x002b: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|ExcHandler: Exception null\lSplitter:B:4:0x000a\l|0x002e: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: INVOKE  (r1 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0033: INVOKE  (r1 I:boolean) = (r1 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugMapTileDownloader():boolean type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x004f \l}"];
Node_15 [shape=record,label="{15\:\ 0x0039|0x0039: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l0x003b: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x003d: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0040: CONST_STR  (r3 I:java.lang.String) =  \"Unable to parse cache control tag for tile, server returned \" \l0x0042: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0045: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0048: INVOKE  (r6 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004c: INVOKE  \l  (r1 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.d(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x004f|0x004f: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0050|0x0050: RETURN  (r6 I:java.lang.Long) \l}"];
MethodNode[shape=record,label="{public java.lang.Long org.osmdroid.tileprovider.modules.TileDownloader.getHttpCacheControlDuration((r5 'this' I:org.osmdroid.tileprovider.modules.TileDownloader A[IMMUTABLE_TYPE, THIS]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_16;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_16;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_16;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_11 -> Node_6;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

