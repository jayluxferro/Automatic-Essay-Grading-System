digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileDownloader.TileLoader.loadTile(J)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase r0 = (org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase) org.osmdroid.tileprovider.modules.MapTileDownloader.access$000(r3.this$0).get()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r0 != null) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010}"];
Node_4 [shape=record,label="{4\:\ 0x0016|if (org.osmdroid.tileprovider.modules.MapTileDownloader.access$300(r3.this$0) == null) goto L_0x0050\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018}"];
Node_6 [shape=record,label="{6\:\ 0x0022|if (org.osmdroid.tileprovider.modules.MapTileDownloader.access$300(r3.this$0).getNetworkAvailable() != false) goto L_0x0050\l}"];
Node_7 [shape=record,label="{7\:\ 0x0024}"];
Node_8 [shape=record,label="{8\:\ 0x002c|if (org.osmdroid.config.Configuration.getInstance().isDebugMode() == false) goto L_0x004f\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"Skipping \")\lr5.append(r3.this$0.getName())\lr5.append(\" due to NetworkAvailabliltyCheck.\")\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r5.toString())\l}"];
Node_10 [shape=record,label="{10\:\ 0x004f|RETURN\l|return null\l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|java.lang.String r0 = r0.getTileURLString(r4)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0058|if (android.text.TextUtils.isEmpty(r0) == false) goto L_0x005b\l}"];
Node_13 [shape=record,label="{13\:\ 0x005a|RETURN\l|return null\l}"];
Node_14 [shape=record,label="{14\:\ 0x005b}"];
Node_15 [shape=record,label="{15\:\ 0x0065|if (org.osmdroid.tileprovider.modules.MapTileDownloader.access$400(r3.this$0).shouldWait(r0) == false) goto L_0x0068\l}"];
Node_16 [shape=record,label="{16\:\ 0x0067|RETURN\l|return null\l}"];
Node_17 [shape=record,label="{17\:\ 0x0068|android.graphics.drawable.Drawable r4 = downloadTile(r4, 0, r0)\l}"];
Node_18 [shape=record,label="{18\:\ 0x006d|if (r4 != null) goto L_0x0079\l}"];
Node_19 [shape=record,label="{19\:\ 0x006f|org.osmdroid.tileprovider.modules.MapTileDownloader.access$400(r3.this$0).next(r0)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0079|org.osmdroid.tileprovider.modules.MapTileDownloader.access$400(r3.this$0).remove(r0)\l}"];
Node_21 [shape=record,label="{21\:\ 0x0082|RETURN\l|return r4\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.tileprovider.modules.MapTileDownloader.TileLoader.loadTile((r3v0 'this' org.osmdroid.tileprovider.modules.MapTileDownloader$TileLoader A[IMMUTABLE_TYPE, THIS]), (r4v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.osmdroid.tileprovider.modules.CantContinueException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_21;
Node_20 -> Node_21;
}

