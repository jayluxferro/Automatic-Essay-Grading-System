digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileApproximater.computeZoomLevels()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r5.minZoomLevel = 0\ljava.util.Iterator r1 = r5.mProviders.iterator()\lr2 = true\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lPHI: r2 \l  PHI: (r2v1 boolean) = (r2v0 boolean), (r2v2 boolean) binds: [B:0:0x0000, B:8:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:8:0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|if (r1.hasNext() == false) goto L_0x0029\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|int r3 = r1.next().getMinimumZoomLevel()\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|if (r2 == false) goto L_0x0020\l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|r5.minZoomLevel = r3\lr2 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|r5.minZoomLevel = java.lang.Math.min(r5.minZoomLevel, r3)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x000a|LOOP_END\lSYNTHETIC\lPHI: r2 \l  PHI: (r2v2 boolean) = (r2v1 boolean), (r2v3 boolean) binds: [B:11:0x000a, B:10:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:8:0x000a\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x000a|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x000a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.modules.MapTileApproximater.computeZoomLevels((r5v0 'this' org.osmdroid.tileprovider.modules.MapTileApproximater A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_10;
Node_6 -> Node_11;
Node_8 -> Node_1;
Node_9 -> Node_7;
Node_10 -> Node_8;
Node_11 -> Node_8;
}

