digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileApproximater.approximateTileFromLowerZoom(J)Landroid\/graphics\/Bitmap;" {
subgraph cluster_Region_1033718661 {
label = "R(3:0|(2:3|(2:(1:5)|(1:6)))|7)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = 1\l}"];
subgraph cluster_LoopRegion_2034464992 {
label = "LOOP:0: (2:3|(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if ((org.osmdroid.util.MapTileIndex.getZoom(r3) \- r0) \>= 0) goto L_0x0008\l}"];
subgraph cluster_Region_1484508702 {
label = "R(2:3|(2:(1:5)|(1:6)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|android.graphics.Bitmap android.graphics.Bitmap r1 = approximateTileFromLowerZoom(r3, r0)\l}"];
subgraph cluster_Region_506546012 {
label = "R(2:(1:5)|(1:6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_258828279 {
label = "IF [B:4:0x000c] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|if (r1 != null) goto L_0x000e\l}"];
subgraph cluster_Region_1829472898 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|RETURN\l|return r1\l}"];
}
}
subgraph cluster_Region_1060377074 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x000f|LOOP_END\lLOOP:0: B:1:0x0001\-\>B:6:0x000f\l|r0++\l}"];
}
}
}
}
Node_7 [shape=record,label="{7\:\ 0x0012|RETURN\l|return null\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|LOOP_START\lPHI: r0 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:6:0x000f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0001\-\>B:6:0x000f\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0012|SYNTHETIC\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x000e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap org.osmdroid.tileprovider.modules.MapTileApproximater.approximateTileFromLowerZoom((r2v0 'this' org.osmdroid.tileprovider.modules.MapTileApproximater A[IMMUTABLE_TYPE, THIS]), (r3v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_6[style=dashed];
Node_4 -> Node_9;
Node_6 -> Node_1;
Node_1 -> Node_2;
Node_8 -> Node_7;
Node_9 -> Node_5;
}

