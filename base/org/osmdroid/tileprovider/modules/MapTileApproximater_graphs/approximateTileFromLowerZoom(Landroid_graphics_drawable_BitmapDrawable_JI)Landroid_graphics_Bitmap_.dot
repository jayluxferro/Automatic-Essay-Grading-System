digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileApproximater.approximateTileFromLowerZoom(Landroid\/graphics\/drawable\/BitmapDrawable;JI)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r13 \> 0) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|int r1 = r10.getBitmap().getWidth()\landroid.graphics.Bitmap r2 = getTileBitmap(r1)\landroid.graphics.Canvas r3 = new android.graphics.Canvas(r2)\lboolean r4 = r10 instanceof org.osmdroid.tileprovider.ReusableBitmapDrawable\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|if (r4 == false) goto L_0x001d\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|org.osmdroid.tileprovider.ReusableBitmapDrawable r5 = (org.osmdroid.tileprovider.ReusableBitmapDrawable) r10\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|r5 = null\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|PHI: r5 \l  PHI: (r5v0 org.osmdroid.tileprovider.ReusableBitmapDrawable) = (r5v1 org.osmdroid.tileprovider.ReusableBitmapDrawable), (r5v3 org.osmdroid.tileprovider.ReusableBitmapDrawable) binds: [B:6:0x001d, B:5:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L_0x0023\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|r5.beginUsingDrawable()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0023|r7 = false\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|if (r4 == false) goto L_0x0030\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|SYNTHETIC\lSplitter:B:11:0x0027\l}"];
Node_12 [shape=record,label="{12\:\ ?|Catch:\{ all \-\> 0x002e \}\lSplitter:B:11:0x0027\l}"];
Node_13 [shape=record,label="{13\:\ 0x002b|Catch:\{ all \-\> 0x002e \}\l|if (r5.isBitmapValid() == false) goto L_0x005a     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x002d|Catch:\{ all \-\> 0x002e \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|Catch:\{ all \-\> 0x002e \}\lExcHandler: all (r10v2 'th' java.lang.Throwable A[CUSTOM_DECLARE, Catch:\{ all \-\> 0x002e \}])\lSplitter:B:11:0x0027\l|java.lang.Throwable r10 = move\-exception     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|Catch:\{ all \-\> 0x002e \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0030|Catch:\{ all \-\> 0x002e \}\l|int r8 = r1 \>\> r13     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0032|Catch:\{ all \-\> 0x002e \}\l|if (r8 != 0) goto L_0x0035     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0034|Catch:\{ all \-\> 0x002e \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0035|Catch:\{ all \-\> 0x002e \}\l|int r13 = 1 \<\< r13     \/\/ Catch:\{ all \-\> 0x002e \}\lint r9 = (org.osmdroid.util.MapTileIndex.getX(r11) % r13) * r8     \/\/ Catch:\{ all \-\> 0x002e \}\lint r11 = (org.osmdroid.util.MapTileIndex.getY(r11) % r13) * r8     \/\/ Catch:\{ all \-\> 0x002e \}\landroid.graphics.Rect r12 = new android.graphics.Rect(r9, r11, r9 + r8, r8 + r11)     \/\/ Catch:\{ all \-\> 0x002e \}\landroid.graphics.Rect r11 = new android.graphics.Rect(0, 0, r1, r1)     \/\/ Catch:\{ all \-\> 0x002e \}\lr3.drawBitmap(r10.getBitmap(), r12, r11, (android.graphics.Paint) null)     \/\/ Catch:\{ all \-\> 0x002e \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0059|r7 = true\l}"];
Node_22 [shape=record,label="{22\:\ 0x005a|PHI: r7 \l  PHI: (r7v1 boolean) = (r7v2 boolean), (r7v0 boolean), (r7v0 boolean) binds: [B:21:0x0059, B:19:0x0034, B:13:0x002b] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == false) goto L_0x005f\l}"];
Node_23 [shape=record,label="{23\:\ 0x005c|r5.finishUsingDrawable()\l}"];
Node_24 [shape=record,label="{24\:\ 0x005f|if (r7 != false) goto L_0x0062\l}"];
Node_25 [shape=record,label="{25\:\ 0x0061|RETURN\l|return null\l}"];
Node_26 [shape=record,label="{26\:\ 0x0062|RETURN\l|return r2\l}"];
Node_27 [shape=record,label="{27\:\ 0x0063|if (r4 == false) goto L_0x0068\l}"];
Node_28 [shape=record,label="{28\:\ 0x0065|r5.finishUsingDrawable()\l}"];
Node_29 [shape=record,label="{29\:\ 0x0068|throw r10\l}"];
MethodNode[shape=record,label="{public static android.graphics.Bitmap org.osmdroid.tileprovider.modules.MapTileApproximater.approximateTileFromLowerZoom((r10v0 android.graphics.drawable.BitmapDrawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_17;
Node_11 -> Node_12;
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_22;
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_27;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
}

