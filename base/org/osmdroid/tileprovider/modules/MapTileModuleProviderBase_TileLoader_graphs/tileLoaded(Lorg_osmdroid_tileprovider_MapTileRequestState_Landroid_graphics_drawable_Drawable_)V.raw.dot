digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoaded(Lorg\/osmdroid\/tileprovider\/MapTileRequestState;Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0004: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugTileProviders():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0036 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" \l0x000c: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x000e: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0011: CONST_STR  (r2 I:java.lang.String) =  \"TileLoader.tileLoaded() on provider: \" \l0x0013: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0016: IGET  (r2 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = \l  (r4 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.this$0 org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l0x0018: INVOKE  (r2 I:java.lang.String) = \l  (r2 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.getName():java.lang.String type: VIRTUAL \l0x001c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001f: CONST_STR  (r2 I:java.lang.String) =  \" with tile: \" \l0x0021: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0024: INVOKE  (r2 I:long) = (r5 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getMapTile():long type: VIRTUAL \l0x0028: INVOKE  (r2 I:java.lang.String) = (r2 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x002c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0033: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x0036|0x0036: IGET  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = \l  (r4 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.this$0 org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l0x0038: INVOKE  (r1 I:long) = (r5 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getMapTile():long type: VIRTUAL \l0x003c: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l  (r1 I:long)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.removeTileFromQueues(long):void type: VIRTUAL \l0x003f: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0040: INVOKE  (r6 I:android.graphics.drawable.Drawable), (r0 I:int) org.osmdroid.tileprovider.ExpirableBitmapDrawable.setState(android.graphics.drawable.Drawable, int):void type: STATIC \l0x0043: INVOKE  (r0 I:org.osmdroid.tileprovider.IMapTileProviderCallback) = (r5 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getCallback():org.osmdroid.tileprovider.IMapTileProviderCallback type: VIRTUAL \l0x0047: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.IMapTileProviderCallback)\l  (r5 I:org.osmdroid.tileprovider.MapTileRequestState)\l  (r6 I:android.graphics.drawable.Drawable)\l org.osmdroid.tileprovider.IMapTileProviderCallback.mapTileRequestCompleted(org.osmdroid.tileprovider.MapTileRequestState, android.graphics.drawable.Drawable):void type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x004a|0x004a: RETURN   \l}"];
MethodNode[shape=record,label="{protected void org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoaded((r4 'this' I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader A[IMMUTABLE_TYPE, THIS]), (r5 I:org.osmdroid.tileprovider.MapTileRequestState A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

