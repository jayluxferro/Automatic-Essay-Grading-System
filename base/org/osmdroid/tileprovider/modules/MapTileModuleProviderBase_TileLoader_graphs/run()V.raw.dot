digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.run()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.onTileLoaderInit():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: INVOKE  (r0 I:org.osmdroid.tileprovider.MapTileRequestState) = \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.nextTile():org.osmdroid.tileprovider.MapTileRequestState type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x00c4 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r1 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x000d: INVOKE  (r1 I:boolean) = (r1 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugTileProviders():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0051 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l0x0015: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0017: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001a: CONST_STR  (r3 I:java.lang.String) =  \"TileLoader.run() processing next tile: \" \l0x001c: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001f: INVOKE  (r3 I:long) = (r0 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getMapTile():long type: VIRTUAL \l0x0023: INVOKE  (r3 I:java.lang.String) = (r3 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x0027: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: CONST_STR  (r3 I:java.lang.String) =  \", pending:\" \l0x002c: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: IGET  (r3 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.this$0 org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l0x0031: IGET  (r3 I:java.util.LinkedHashMap\<java.lang.Long, org.osmdroid.tileprovider.MapTileRequestState\>) = \l  (r3 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mPending java.util.LinkedHashMap \l0x0033: INVOKE  (r3 I:int) = (r3 I:java.util.LinkedHashMap) java.util.LinkedHashMap.size():int type: VIRTUAL \l0x0037: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x003a: CONST_STR  (r3 I:java.lang.String) =  \", working:\" \l0x003c: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: IGET  (r3 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.this$0 org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l0x0041: IGET  (r3 I:java.util.HashMap\<java.lang.Long, org.osmdroid.tileprovider.MapTileRequestState\>) = \l  (r3 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mWorking java.util.HashMap \l0x0043: INVOKE  (r3 I:int) = (r3 I:java.util.HashMap) java.util.HashMap.size():int type: VIRTUAL \l0x0047: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x004a: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x004e: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0051|0x0051: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0052|SYNTHETIC\lSplitter:B:7:0x0052\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x0052\l|0x0052: INVOKE  (r2 I:long) = (r0 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getMapTile():long type: VIRTUAL A[Catch:\{ CantContinueException \-\> 0x007c, Throwable \-\> 0x005c \}, TRY_ENTER]\l0x0056: INVOKE  (r2 I:android.graphics.drawable.Drawable) = \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l  (r2 I:long)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.loadTile(long):android.graphics.drawable.Drawable type: VIRTUAL A[Catch:\{ CantContinueException \-\> 0x007c, Throwable \-\> 0x005c \}]\l0x0059: NOP   A[TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x005a|0x005a: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x005c|ExcHandler: Throwable null\lSplitter:B:7:0x0052\l|0x005c: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_11 [shape=record,label="{11\:\ 0x005d|0x005d: CONST_STR  (r3 I:java.lang.String) =  \"OsmDroid\" \l0x005f: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0061: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0064: CONST_STR  (r5 I:java.lang.String) =  \"Error downloading tile: \" \l0x0066: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0069: INVOKE  (r5 I:long) = (r0 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getMapTile():long type: VIRTUAL \l0x006d: INVOKE  (r5 I:java.lang.String) = (r5 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x0071: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0074: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0078: INVOKE  \l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x007c|ExcHandler: CantContinueException null\lSplitter:B:7:0x0052\l|0x007c: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_13 [shape=record,label="{13\:\ 0x007d|0x007d: CONST_STR  (r3 I:java.lang.String) =  \"OsmDroid\" \l0x007f: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0081: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0084: CONST_STR  (r5 I:java.lang.String) =  \"Tile loader can't continue: \" \l0x0086: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0089: INVOKE  (r5 I:long) = (r0 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getMapTile():long type: VIRTUAL \l0x008d: INVOKE  (r5 I:java.lang.String) = (r5 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x0091: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0094: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0098: INVOKE  \l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l android.util.Log.i(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x009b: IGET  (r2 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.this$0 org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l0x009d: INVOKE  \l  (r2 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.access$000(org.osmdroid.tileprovider.modules.MapTileModuleProviderBase):void type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x00a0|0x00a0: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x00a7 \l}"];
Node_15 [shape=record,label="{15\:\ 0x00a2|0x00a2: INVOKE  \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l  (r0 I:org.osmdroid.tileprovider.MapTileRequestState)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoadedFailed(org.osmdroid.tileprovider.MapTileRequestState):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x00a7|0x00a7: INVOKE  (r2 I:int) = (r1 I:android.graphics.drawable.Drawable) org.osmdroid.tileprovider.ExpirableBitmapDrawable.getState(android.graphics.drawable.Drawable):int type: STATIC \l0x00ab: CONST  (r3 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x00ac|0x00ac: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x00b3 \l}"];
Node_18 [shape=record,label="{18\:\ 0x00ae|0x00ae: INVOKE  \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l  (r0 I:org.osmdroid.tileprovider.MapTileRequestState)\l  (r1 I:android.graphics.drawable.Drawable)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoadedExpired(org.osmdroid.tileprovider.MapTileRequestState, android.graphics.drawable.Drawable):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x00b3|0x00b3: INVOKE  (r2 I:int) = (r1 I:android.graphics.drawable.Drawable) org.osmdroid.tileprovider.ExpirableBitmapDrawable.getState(android.graphics.drawable.Drawable):int type: STATIC \l0x00b7: CONST  (r3 I:?[int, float, short, byte, char]) = (\-3 ?[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x00b8|0x00b8: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x00bf \l}"];
Node_21 [shape=record,label="{21\:\ 0x00ba|0x00ba: INVOKE  \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l  (r0 I:org.osmdroid.tileprovider.MapTileRequestState)\l  (r1 I:android.graphics.drawable.Drawable)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoadedScaled(org.osmdroid.tileprovider.MapTileRequestState, android.graphics.drawable.Drawable):void type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x00bf|0x00bf: INVOKE  \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l  (r0 I:org.osmdroid.tileprovider.MapTileRequestState)\l  (r1 I:android.graphics.drawable.Drawable)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoaded(org.osmdroid.tileprovider.MapTileRequestState, android.graphics.drawable.Drawable):void type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x00c4|0x00c4: INVOKE  \l  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.onTileLoaderShutdown():void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x00c7|0x00c7: RETURN   \l}"];
MethodNode[shape=record,label="{public final void org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.run((r7 'this' I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_23;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_12;
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_14;
Node_10 -> Node_11;
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_1;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_1;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_1;
Node_22 -> Node_1;
Node_23 -> Node_24;
}

