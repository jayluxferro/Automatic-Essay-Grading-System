digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.loadTile(Lorg\/osmdroid\/tileprovider\/MapTileRequestState;)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:long) = (r3 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getMapTile():long type: VIRTUAL \l0x0004: INVOKE  (r3 I:android.graphics.drawable.Drawable) = \l  (r2 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader)\l  (r0 I:long)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.loadTile(long):android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN  (r3 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{protected android.graphics.drawable.Drawable org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.loadTile((r2 'this' I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader A[IMMUTABLE_TYPE, THIS]), (r3 I:org.osmdroid.tileprovider.MapTileRequestState A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.osmdroid.tileprovider.modules.CantContinueException]\}], Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

