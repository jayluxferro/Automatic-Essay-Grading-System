digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoadedFailed(Lorg\/osmdroid\/tileprovider\/MapTileRequestState;)V" {
subgraph cluster_Region_2128018413 {
label = "R(2:(1:2)|3)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1079175767 {
label = "IF [B:1:0x0008] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (org.osmdroid.config.Configuration.getInstance().isDebugTileProviders() == true) goto L_0x000a\l}"];
subgraph cluster_Region_2044486908 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"TileLoader.tileLoadedFailed() on provider: \" + org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.this.getName() + \" with tile: \" + org.osmdroid.util.MapTileIndex.toString(r5.getMapTile()))\l}"];
}
}
Node_3 [shape=record,label="{3\:\ 0x0036|org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.this.removeTileFromQueues(r5.getMapTile())\lr5.getCallback().mapTileRequestFailed(r5)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0046}"];
MethodNode[shape=record,label="{protected void org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.tileLoadedFailed((r4v0 'this' org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader A[IMMUTABLE_TYPE, THIS]), (r5v0 org.osmdroid.tileprovider.MapTileRequestState A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_0 -> Node_1;
}

