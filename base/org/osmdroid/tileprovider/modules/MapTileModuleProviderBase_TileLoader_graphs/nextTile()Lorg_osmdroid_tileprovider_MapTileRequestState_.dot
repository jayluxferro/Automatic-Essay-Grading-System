digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.nextTile()Lorg\/osmdroid\/tileprovider\/MapTileRequestState;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Object r0 = r8.this$0.mQueueLockObject\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|java.util.Iterator r1 = r8.this$0.mPending.keySet().iterator()\lr2 = null\lr3 = null\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|LOOP_START\lPHI: r3 \l  PHI: (r3v1 java.lang.Long) = (r3v0 java.lang.Long), (r3v2 java.lang.Long) binds: [B:3:?, B:24:0x0013] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0013\-\>B:24:0x0013\l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|if (r1.hasNext() == false) goto L_0x0061\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|java.lang.Long r4 = r1.next()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|if (r8.this$0.mWorking.containsKey(r4) != false) goto L_0x0013\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029}"];
Node_9 [shape=record,label="{9\:\ 0x0031|if (org.osmdroid.config.Configuration.getInstance().isDebugTileProviders() == false) goto L_0x005f\l}"];
Node_10 [shape=record,label="{10\:\ 0x0033|java.lang.StringBuilder r5 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr5.append(\"TileLoader.nextTile() on provider: \")\lr5.append(r8.this$0.getName())\lr5.append(\" found tile in working queue: \")\lr5.append(org.osmdroid.util.MapTileIndex.toString(r4.longValue()))\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r5.toString())\l}"];
Node_11 [shape=record,label="{11\:\ 0x005f|r3 = r4\l}"];
Node_12 [shape=record,label="{12\:\ 0x0061|if (r3 == null) goto L_0x00a0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0063}"];
Node_14 [shape=record,label="{14\:\ 0x006b|if (org.osmdroid.config.Configuration.getInstance().isDebugTileProviders() == false) goto L_0x0091\l}"];
Node_15 [shape=record,label="{15\:\ 0x006d|java.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr4.append(\"TileLoader.nextTile() on provider: \")\lr4.append(r8.this$0.getName())\lr4.append(\" adding tile to working queue: \")\lr4.append(r3)\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r4.toString())\l}"];
Node_16 [shape=record,label="{16\:\ 0x0091|r8.this$0.mWorking.put(r3, r8.this$0.mPending.get(r3))\l}"];
Node_17 [shape=record,label="{17\:\ 0x00a0|if (r3 == null) goto L_0x00ad\l}"];
Node_18 [shape=record,label="{18\:\ 0x00a2|org.osmdroid.tileprovider.MapTileRequestState r2 = r8.this$0.mPending.get(r3)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00ad|PHI: r2 \l  PHI: (r2v1 org.osmdroid.tileprovider.MapTileRequestState) = (r2v0 org.osmdroid.tileprovider.MapTileRequestState), (r2v3 org.osmdroid.tileprovider.MapTileRequestState) binds: [B:17:0x00a0, B:18:0x00a2] A[DONT_GENERATE, DONT_INLINE]\l|monitor\-exit(r0)\l}"];
Node_20 [shape=record,label="{20\:\ 0x00ae|RETURN\l|return r2\l}"];
Node_21 [shape=record,label="{21\:\ 0x00af|REMOVE\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_22 [shape=record,label="{22\:\ 0x00b0|REMOVE\l}"];
Node_23 [shape=record,label="{23\:\ 0x00b1|REMOVE\l|throw r1\l}"];
Node_24 [shape=record,label="{24\:\ 0x0013|LOOP_END\lSYNTHETIC\lPHI: r3 \l  PHI: (r3v2 java.lang.Long) = (r3v1 java.lang.Long), (r3v5 java.lang.Long) binds: [B:26:0x0013, B:27:0x0013] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x0013\-\>B:24:0x0013\l}"];
Node_25 [shape=record,label="{25\:\ 0x0061|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0013|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0013|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected org.osmdroid.tileprovider.MapTileRequestState org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.TileLoader.nextTile((r8v0 'this' org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$TileLoader A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_21;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_25;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_26;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_27;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_17;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_4;
Node_25 -> Node_12;
Node_26 -> Node_24;
Node_27 -> Node_24;
}

