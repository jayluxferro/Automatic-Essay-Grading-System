digraph "CFG fororg.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.saveFile(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;JLjava\/io\/InputStream;Ljava\/lang\/Long;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r13 I:android.database.sqlite.SQLiteDatabase) = \l  (r8 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.mDatabase android.database.sqlite.SQLiteDatabase \l0x0002: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x00b6 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r13 I:android.database.sqlite.SQLiteDatabase) = \l  (r8 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.mDatabase android.database.sqlite.SQLiteDatabase \l0x0007: INVOKE  (r13 I:boolean) = (r13 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|SYNTHETIC\lSplitter:B:6:0x0010\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0010\l|0x0010: NEW_INSTANCE  (r1 I:android.content.ContentValues) =  android.content.ContentValues A[Catch:\{ Throwable \-\> 0x0087 \}, TRY_ENTER]\l0x0012: INVOKE  (r1 I:android.content.ContentValues) android.content.ContentValues.\<init\>():void type: DIRECT A[Catch:\{ Throwable \-\> 0x0087 \}]\l0x0015: INVOKE  (r2 I:long) = (r10 I:long) org.osmdroid.tileprovider.modules.SqlTileWriter.getIndex(long):long type: STATIC A[Catch:\{ Throwable \-\> 0x0087 \}]\l0x0019: CONST_STR  (r4 I:java.lang.String) =  \"provider\" A[Catch:\{ Throwable \-\> 0x0087 \}]\l0x001b: INVOKE  (r5 I:java.lang.String) = (r9 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE A[Catch:\{ Throwable \-\> 0x0087 \}]\l0x001f: INVOKE  \l  (r1 I:android.content.ContentValues)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l android.content.ContentValues.put(java.lang.String, java.lang.String):void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0087 \}]\l0x0022: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (512(0x200, float:7.175E\-43) ?[int, float, short, byte, char])\l A[Catch:\{ Throwable \-\> 0x0087 \}]\l0x0024: NEW_ARRAY  (r4 I:byte[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ Throwable \-\> 0x0087 \}]\l0x0026: NEW_INSTANCE  (r5 I:java.io.ByteArrayOutputStream) =  java.io.ByteArrayOutputStream A[Catch:\{ Throwable \-\> 0x0087 \}]\l0x0028: INVOKE  (r5 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.\<init\>():void type: DIRECT A[Catch:\{ Throwable \-\> 0x0087 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|SYNTHETIC\lSplitter:B:8:0x002b\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x002b\l|0x002b: INVOKE  (r6 I:int) = (r12 I:java.io.InputStream), (r4 I:byte[]) java.io.InputStream.read(byte[]):int type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}, TRY_ENTER]\l0x002f: CONST  (r7 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0036 A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: INVOKE  \l  (r5 I:java.io.ByteArrayOutputStream)\l  (r4 I:byte[])\l  (r0 I:int)\l  (r6 I:int)\l java.io.ByteArrayOutputStream.write(byte[], int, int):void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0035: GOTO  \-\> 0x002b A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: INVOKE  (r12 I:byte[]) = (r5 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x003a: CONST_STR  (r4 I:java.lang.String) =  \"key\" A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x003c: INVOKE  (r2 I:java.lang.Long) = (r2 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0040: INVOKE  \l  (r1 I:android.content.ContentValues)\l  (r4 I:java.lang.String)\l  (r2 I:java.lang.Long)\l android.content.ContentValues.put(java.lang.String, java.lang.Long):void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0043: CONST_STR  (r2 I:java.lang.String) =  \"tile\" A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0045: INVOKE  \l  (r1 I:android.content.ContentValues)\l  (r2 I:java.lang.String)\l  (r12 I:byte[])\l android.content.ContentValues.put(java.lang.String, byte[]):void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0048: IGET  (r12 I:android.database.sqlite.SQLiteDatabase) = \l  (r8 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.mDatabase android.database.sqlite.SQLiteDatabase A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x004a: CONST_STR  (r2 I:java.lang.String) =  \"tiles\" A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x004c: INVOKE  \l  (r12 I:android.database.sqlite.SQLiteDatabase)\l  (r2 I:java.lang.String)\l  (r13 I:java.lang.String)\l  (r1 I:android.content.ContentValues)\l android.database.sqlite.SQLiteDatabase.insert(java.lang.String, java.lang.String, android.content.ContentValues):long type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x004f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0050: INVOKE  (r12 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0054: INVOKE  (r12 I:boolean) = (r12 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugMode():boolean type: INTERFACE A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0058|0x0058: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x007b A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x005a|0x005a: CONST_STR  (r12 I:java.lang.String) =  \"OsmDroid\" A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x005c: NEW_INSTANCE  (r13 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x005e: INVOKE  (r13 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0061: CONST_STR  (r1 I:java.lang.String) =  \"tile inserted \" A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0063: INVOKE  (r13 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0066: INVOKE  (r1 I:java.lang.String) = (r9 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x006a: INVOKE  (r13 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x006d: INVOKE  (r1 I:java.lang.String) = (r10 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0071: INVOKE  (r13 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0074: INVOKE  (r13 I:java.lang.String) = (r13 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}]\l0x0078: INVOKE  (r12 I:java.lang.String), (r13 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ Throwable \-\> 0x0081, all \-\> 0x007f \}, TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x007b|SYNTHETIC\lSplitter:B:15:0x007b\l}"];
Node_16 [shape=record,label="{16\:\ ?|Splitter:B:15:0x007b\l|0x007b: INVOKE  (r5 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x00b1 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x007f|ExcHandler: all null\lSplitter:B:8:0x002b\l|0x007f: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x0081|ExcHandler: Throwable null\lSplitter:B:8:0x002b\l|0x0081: MOVE_EXCEPTION  (r12 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x0082|0x0082: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0084|ExcHandler: all null\lSplitter:B:26:0x008a\l|0x0084: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x0085|0x0085: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0087|ExcHandler: Throwable null\lSplitter:B:6:0x0010\l|0x0087: MOVE_EXCEPTION  (r12 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x0088|0x0088: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l}"];
Node_26 [shape=record,label="{26\:\ 0x008a|SYNTHETIC\lSplitter:B:26:0x008a\l}"];
Node_27 [shape=record,label="{27\:\ ?|Splitter:B:26:0x008a\l|0x008a: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0084 \}, TRY_ENTER]\l0x008c: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0084 \}]\l0x008f: CONST_STR  (r3 I:java.lang.String) =  \"Unable to store cached tile from \" A[Catch:\{ all \-\> 0x0084 \}]\l0x0091: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0084 \}]\l0x0094: INVOKE  (r9 I:java.lang.String) = (r9 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x0084 \}]\l0x0098: INVOKE  (r2 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0084 \}]\l0x009b: CONST_STR  (r9 I:java.lang.String) =  \" \" A[Catch:\{ all \-\> 0x0084 \}]\l0x009d: INVOKE  (r2 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0084 \}]\l0x00a0: INVOKE  (r9 I:java.lang.String) = (r10 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x0084 \}]\l0x00a4: INVOKE  (r2 I:java.lang.StringBuilder), (r9 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0084 \}]\l0x00a7: INVOKE  (r9 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0084 \}]\l0x00ab: INVOKE  \l  (r1 I:java.lang.String)\l  (r9 I:java.lang.String)\l  (r12 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x0084 \}, TRY_LEAVE]\l}"];
Node_28 [shape=record,label="{28\:\ 0x00ae|SYNTHETIC\lSplitter:B:28:0x00ae\l}"];
Node_29 [shape=record,label="{29\:\ ?|Splitter:B:28:0x00ae\l|0x00ae: INVOKE  (r13 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x00b1 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_30 [shape=record,label="{30\:\ 0x00b1|0x00b1: RETURN  (r0 I:boolean) \l}"];
Node_31 [shape=record,label="{31\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:15:0x007b\l}"];
Node_32 [shape=record,label="{32\:\ 0x00b2|SYNTHETIC\lSplitter:B:32:0x00b2\l}"];
Node_33 [shape=record,label="{33\:\ ?|Splitter:B:32:0x00b2\l|0x00b2: INVOKE  (r5 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x00b5 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_34 [shape=record,label="{34\:\ 0x00b5|0x00b5: THROW  (r9 I:java.lang.Throwable) \l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:32:0x00b2\l}"];
Node_36 [shape=record,label="{36\:\ 0x00b6|0x00b6: CONST_STR  (r9 I:java.lang.String) =  \"OsmDroid\" \l0x00b8: CONST_STR  (r10 I:java.lang.String) =  \"Skipping SqlArchiveTileWriter saveFile, database is closed\" \l0x00ba: INVOKE  (r9 I:java.lang.String), (r10 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_37 [shape=record,label="{37\:\ 0x00bd|0x00bd: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.saveFile((r8 'this' I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter A[IMMUTABLE_TYPE, THIS]), (r9 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.Long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_36;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_36[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_24;
Node_7 -> Node_8;
Node_7 -> Node_24;
Node_8 -> Node_9;
Node_8 -> Node_20;
Node_8 -> Node_18;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_31;
Node_16 -> Node_31;
Node_16 -> Node_30;
Node_18 -> Node_32;
Node_20 -> Node_21;
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_32;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_22;
Node_27 -> Node_28;
Node_27 -> Node_22;
Node_28 -> Node_29;
Node_28 -> Node_31;
Node_29 -> Node_30;
Node_29 -> Node_31;
Node_31 -> Node_30;
Node_32 -> Node_33;
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_33 -> Node_35;
Node_35 -> Node_34;
Node_36 -> Node_37;
}

