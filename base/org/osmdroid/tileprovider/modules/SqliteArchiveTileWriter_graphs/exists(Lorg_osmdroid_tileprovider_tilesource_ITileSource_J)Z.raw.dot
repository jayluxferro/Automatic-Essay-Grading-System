digraph "CFG fororg.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.exists(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r1 I:long) = (r7 I:long) org.osmdroid.tileprovider.modules.SqlTileWriter.getIndex(long):long type: STATIC A[Catch:\{ Throwable \-\> 0x001a \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:java.lang.String[]) = \l  (r1 I:long)\l  (r6 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l org.osmdroid.tileprovider.modules.SqlTileWriter.getPrimaryKeyParameters(long, org.osmdroid.tileprovider.tilesource.ITileSource):java.lang.String[] type: STATIC A[Catch:\{ Throwable \-\> 0x001a \}]\l0x0009: INVOKE  (r1 I:android.database.Cursor) = \l  (r5 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l  (r1 I:java.lang.String[])\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.getTileCursor(java.lang.String[]):android.database.Cursor type: VIRTUAL A[Catch:\{ Throwable \-\> 0x001a \}]\l0x000d: INVOKE  (r2 I:int) = (r1 I:android.database.Cursor) android.database.Cursor.getCount():int type: INTERFACE A[Catch:\{ Throwable \-\> 0x001a \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0015 A[Catch:\{ Throwable \-\> 0x001a \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Throwable \-\> 0x001a \}]\l0x0014: GOTO  \-\> 0x0016 A[Catch:\{ Throwable \-\> 0x001a \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x001a \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INVOKE  (r1 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE A[Catch:\{ Throwable \-\> 0x001a \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: RETURN  (r2 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|ExcHandler: Throwable null\lSplitter:B:1:0x0001\l|0x001a: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x001b|0x001b: CONST_STR  (r2 I:java.lang.String) =  \"OsmDroid\" \l0x001d: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x001f: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0022: CONST_STR  (r4 I:java.lang.String) =  \"Unable to store cached tile from \" \l0x0024: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0027: INVOKE  (r6 I:java.lang.String) = (r6 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE \l0x002b: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002e: CONST_STR  (r6 I:java.lang.String) =  \" \" \l0x0030: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0033: INVOKE  (r6 I:java.lang.String) = (r7 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x0037: INVOKE  (r3 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: INVOKE  (r6 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003e: INVOKE  \l  (r2 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r1 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.exists((r5 'this' I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter A[IMMUTABLE_TYPE, THIS]), (r6 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

