digraph "CFG fororg.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.getTileCursor([Ljava\/lang\/String;)Landroid\/database\/Cursor;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.database.sqlite.SQLiteDatabase) = \l  (r9 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.mDatabase android.database.sqlite.SQLiteDatabase \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:android.database.sqlite.SQLiteDatabase) = \l  (r9 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.mDatabase android.database.sqlite.SQLiteDatabase \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IGET  (r1 I:android.database.sqlite.SQLiteDatabase) = \l  (r9 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.mDatabase android.database.sqlite.SQLiteDatabase \l0x000f: CONST_STR  (r2 I:java.lang.String) =  \"tiles\" \l0x0011: SGET  (r3 I:java.lang.String[]) =  org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.queryColumns java.lang.String[] \l0x0013: INVOKE  (r4 I:java.lang.String) =  org.osmdroid.tileprovider.modules.SqlTileWriter.getPrimaryKey():java.lang.String type: STATIC \l0x0017: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001a: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x001b: INVOKE  (r10 I:android.database.Cursor) = \l  (r1 I:android.database.sqlite.SQLiteDatabase)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String[])\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String[])\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String):android.database.Cursor type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: RETURN  (r10 I:android.database.Cursor) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|0x0020: CONST_STR  (r10 I:java.lang.String) =  \"OsmDroid\" \l0x0022: CONST_STR  (r0 I:java.lang.String) =  \"Skipping SqlArchiveTileWriter getTileCursor, database is closed\" \l0x0024: INVOKE  (r10 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l0x0027: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: RETURN  (r10 I:android.database.Cursor) \l}"];
MethodNode[shape=record,label="{public android.database.Cursor org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.getTileCursor((r9 'this' I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter A[IMMUTABLE_TYPE, THIS]), (r10 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_7[style=dashed];
Node_5 -> Node_6;
Node_7 -> Node_8;
}

