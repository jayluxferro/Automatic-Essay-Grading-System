digraph "CFG fororg.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.\<init\>(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (8000(0x1f40, float:1.121E\-41) ?[int, float, short, byte, char])\l \l0x0005: IPUT  \l  (r0 I:int)\l  (r4 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.questimate int \l0x0007: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File \l0x0009: INVOKE  (r0 I:java.io.File), (r5 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l0x000c: IPUT  \l  (r0 I:java.io.File)\l  (r4 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.db_file java.io.File \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|SYNTHETIC\lSplitter:B:1:0x000e\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x000e\l|0x000e: IGET  (r0 I:java.io.File) = \l  (r4 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.db_file java.io.File A[Catch:\{ Exception \-\> 0x002f \}, TRY_ENTER]\l0x0010: INVOKE  (r0 I:java.lang.String) = (r0 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x002f \}]\l0x0014: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x002f \}]\l0x0015: INVOKE  (r0 I:android.database.sqlite.SQLiteDatabase) = \l  (r0 I:java.lang.String)\l  (r1 I:android.database.sqlite.SQLiteDatabase$CursorFactory)\l android.database.sqlite.SQLiteDatabase.openOrCreateDatabase(java.lang.String, android.database.sqlite.SQLiteDatabase$CursorFactory):android.database.sqlite.SQLiteDatabase type: STATIC A[Catch:\{ Exception \-\> 0x002f \}]\l0x0019: IPUT  \l  (r0 I:android.database.sqlite.SQLiteDatabase)\l  (r4 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.mDatabase android.database.sqlite.SQLiteDatabase A[Catch:\{ Exception \-\> 0x002f \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|SYNTHETIC\lSplitter:B:3:0x001b\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x001b\l|0x001b: IGET  (r5 I:android.database.sqlite.SQLiteDatabase) = \l  (r4 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.mDatabase android.database.sqlite.SQLiteDatabase A[Catch:\{ Throwable \-\> 0x0023 \}, TRY_ENTER]\l0x001d: CONST_STR  (r0 I:java.lang.String) =  \"CREATE TABLE IF NOT EXISTS tiles (key INTEGER , provider TEXT, tile BLOB, PRIMARY KEY (key, provider));\" A[Catch:\{ Throwable \-\> 0x0023 \}]\l0x001f: INVOKE  \l  (r5 I:android.database.sqlite.SQLiteDatabase)\l  (r0 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.execSQL(java.lang.String):void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0023 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|ExcHandler: Throwable null\lSplitter:B:3:0x001b\l|0x0023: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: INVOKE  (r5 I:java.lang.Throwable) java.lang.Throwable.printStackTrace():void type: VIRTUAL \l0x0027: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" \l0x0029: CONST_STR  (r1 I:java.lang.String) =  \"error setting db schema, it probably exists already\" \l0x002b: INVOKE  \l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r5 I:java.lang.Throwable)\l android.util.Log.d(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: RETURN   \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|ExcHandler: Exception null\lSplitter:B:1:0x000e\l|0x002f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: NEW_INSTANCE  (r1 I:java.lang.Exception) =  java.lang.Exception \l0x0032: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0034: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0037: CONST_STR  (r3 I:java.lang.String) =  \"Trouble creating database file at \" \l0x0039: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003c: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0043: INVOKE  \l  (r1 I:java.lang.Exception)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l java.lang.Exception.\<init\>(java.lang.String, java.lang.Throwable):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|0x0046: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.\<init\>((r4 'this' I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_6;
Node_4 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

