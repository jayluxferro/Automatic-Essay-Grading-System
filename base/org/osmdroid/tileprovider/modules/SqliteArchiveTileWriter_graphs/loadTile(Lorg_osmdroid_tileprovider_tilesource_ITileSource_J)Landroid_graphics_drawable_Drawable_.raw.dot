digraph "CFG fororg.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.loadTile(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.database.sqlite.SQLiteDatabase) = \l  (r4 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.mDatabase android.database.sqlite.SQLiteDatabase \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0077 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:android.database.sqlite.SQLiteDatabase) = \l  (r4 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.mDatabase android.database.sqlite.SQLiteDatabase \l0x0007: INVOKE  (r0 I:boolean) = (r0 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000e \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|SYNTHETIC\lSplitter:B:5:0x000e\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000e\l|0x000e: INVOKE  (r2 I:long) = (r6 I:long) org.osmdroid.tileprovider.modules.SqlTileWriter.getIndex(long):long type: STATIC A[Catch:\{ all \-\> 0x0070 \}, TRY_ENTER]\l0x0012: INVOKE  (r0 I:java.lang.String[]) = \l  (r2 I:long)\l  (r5 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l org.osmdroid.tileprovider.modules.SqlTileWriter.getPrimaryKeyParameters(long, org.osmdroid.tileprovider.tilesource.ITileSource):java.lang.String[] type: STATIC A[Catch:\{ all \-\> 0x0070 \}]\l0x0016: INVOKE  (r0 I:android.database.Cursor) = \l  (r4 I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter)\l  (r0 I:java.lang.String[])\l org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.getTileCursor(java.lang.String[]):android.database.Cursor type: VIRTUAL A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001d A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: RETURN  (r1 I:android.graphics.drawable.Drawable) A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: INVOKE  (r2 I:boolean) = (r0 I:android.database.Cursor) android.database.Cursor.moveToFirst():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002e A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: CONST_STR  (r2 I:java.lang.String) =  \"tile\" A[Catch:\{ all \-\> 0x0070 \}]\l0x0025: INVOKE  (r2 I:int) = (r0 I:android.database.Cursor), (r2 I:java.lang.String) android.database.Cursor.getColumnIndex(java.lang.String):int type: INTERFACE A[Catch:\{ all \-\> 0x0070 \}]\l0x0029: INVOKE  (r2 I:byte[]) = (r0 I:android.database.Cursor), (r2 I:int) android.database.Cursor.getBlob(int):byte[] type: INTERFACE A[Catch:\{ all \-\> 0x0070 \}]\l0x002d: GOTO  \-\> 0x002f A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0032|0x0032: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0060 A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0034|0x0034: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ all \-\> 0x0070 \}]\l0x0038: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugMode():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x003c|0x003c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x005f A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x003e|0x003e: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" A[Catch:\{ all \-\> 0x0070 \}]\l0x0040: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0070 \}]\l0x0042: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0070 \}]\l0x0045: CONST_STR  (r3 I:java.lang.String) =  \"SqlCache \- Tile doesn't exist: \" A[Catch:\{ all \-\> 0x0070 \}]\l0x0047: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0070 \}]\l0x004a: INVOKE  (r5 I:java.lang.String) = (r5 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x0070 \}]\l0x004e: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0070 \}]\l0x0051: INVOKE  (r5 I:java.lang.String) = (r6 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x0070 \}]\l0x0055: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0070 \}]\l0x0058: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0070 \}]\l0x005c: INVOKE  (r0 I:java.lang.String), (r5 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x005f|0x005f: RETURN  (r1 I:android.graphics.drawable.Drawable) A[Catch:\{ all \-\> 0x0070 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0060|0x0060: NEW_INSTANCE  (r6 I:java.io.ByteArrayInputStream) =  java.io.ByteArrayInputStream A[Catch:\{ all \-\> 0x0070 \}]\l0x0062: INVOKE  (r6 I:java.io.ByteArrayInputStream), (r2 I:byte[]) java.io.ByteArrayInputStream.\<init\>(byte[]):void type: DIRECT A[Catch:\{ all \-\> 0x0070 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0065|SYNTHETIC\lSplitter:B:20:0x0065\l}"];
Node_21 [shape=record,label="{21\:\ ?|Splitter:B:20:0x0065\l|0x0065: INVOKE  (r5 I:android.graphics.drawable.Drawable) = \l  (r5 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l  (r6 I:java.io.InputStream)\l org.osmdroid.tileprovider.tilesource.ITileSource.getDrawable(java.io.InputStream):android.graphics.drawable.Drawable type: INTERFACE A[Catch:\{ all \-\> 0x006d \}, TRY_ENTER]\l0x0068: NOP   A[TRY_LEAVE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0069|0x0069: INVOKE  (r6 I:java.io.Closeable) org.osmdroid.tileprovider.util.StreamUtils.closeStream(java.io.Closeable):void type: STATIC \l}"];
Node_23 [shape=record,label="{23\:\ 0x006c|0x006c: RETURN  (r5 I:android.graphics.drawable.Drawable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x006d|ExcHandler: all null\lSplitter:B:20:0x0065\l|0x006d: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x006e|0x006e: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0070|ExcHandler: all null\lSplitter:B:5:0x000e\l|0x0070: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_27 [shape=record,label="{27\:\ 0x0071|0x0071: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0076 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0073|0x0073: INVOKE  (r1 I:java.io.Closeable) org.osmdroid.tileprovider.util.StreamUtils.closeStream(java.io.Closeable):void type: STATIC \l}"];
Node_29 [shape=record,label="{29\:\ 0x0076|0x0076: THROW  (r5 I:java.lang.Throwable) \l}"];
Node_30 [shape=record,label="{30\:\ 0x0077|0x0077: CONST_STR  (r5 I:java.lang.String) =  \"OsmDroid\" \l0x0079: CONST_STR  (r6 I:java.lang.String) =  \"Skipping SqlArchiveTileWriter loadTile, database is closed\" \l0x007b: INVOKE  (r5 I:java.lang.String), (r6 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_31 [shape=record,label="{31\:\ 0x007e|0x007e: RETURN  (r1 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter.loadTile((r4 'this' I:org.osmdroid.tileprovider.modules.SqliteArchiveTileWriter A[IMMUTABLE_TYPE, THIS]), (r5 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_30;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_30[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_26;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_20 -> Node_24;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_30 -> Node_31;
}

