digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileModuleProviderBase.loadMapTileAsync(Lorg\/osmdroid\/tileprovider\/MapTileRequestState;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r5.mExecutor.isShutdown() == false) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|java.lang.Object r0 = r5.mQueueLockObject\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|monitor\-enter(r0)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|SYNTHETIC\l}"];
Node_6 [shape=record,label="{6\:\ ?}"];
Node_7 [shape=record,label="{7\:\ 0x0014|if (org.osmdroid.config.Configuration.getInstance().isDebugTileProviders() == false) goto L_0x005f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|java.lang.StringBuilder r2 = new java.lang.StringBuilder()     \/\/ Catch:\{  \}\lr2.append(\"MapTileModuleProviderBase.loadMaptileAsync() on provider: \")\lr2.append(getName())\lr2.append(\" for tile: \")\lr2.append(org.osmdroid.util.MapTileIndex.toString(r6.getMapTile()))\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r2.toString())\l}"];
Node_9 [shape=record,label="{9\:\ 0x004e|if (r5.mPending.containsKey(java.lang.Long.valueOf(r6.getMapTile())) == false) goto L_0x0058\l}"];
Node_10 [shape=record,label="{10\:\ 0x0050|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"MapTileModuleProviderBase.loadMaptileAsync() tile already exists in request queue for modular provider. Moving to front of queue.\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x0058|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"MapTileModuleProviderBase.loadMaptileAsync() adding tile to request queue for modular provider.\")\l}"];
Node_12 [shape=record,label="{12\:\ 0x005f|r5.mPending.put(java.lang.Long.valueOf(r6.getMapTile()), r6)\l}"];
Node_13 [shape=record,label="{13\:\ 0x006c|monitor\-exit(r0)\l}"];
Node_14 [shape=record,label="{14\:\ 0x006d|SYNTHETIC\lSplitter:B:14:0x006d\l}"];
Node_15 [shape=record,label="{15\:\ ?|Catch:\{ RejectedExecutionException \-\> 0x0077 \}\lSplitter:B:14:0x006d\l|r5.mExecutor.execute(getTileLoader())     \/\/ Catch:\{ RejectedExecutionException \-\> 0x0077 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0077|ExcHandler: RejectedExecutionException (r6v2 'e' java.util.concurrent.RejectedExecutionException A[CUSTOM_DECLARE])\lSplitter:B:14:0x006d\l|java.util.concurrent.RejectedExecutionException r6 = move\-exception\l}"];
Node_17 [shape=record,label="{17\:\ 0x0078|android.util.Log.w(org.osmdroid.api.IMapView.LOGTAG, \"RejectedExecutionException\", r6)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0080|LOOP_START\lREMOVE\lLOOP:0: B:18:0x0080\-\>B:22:0x0080\l|java.lang.Throwable r6 = move\-exception\l}"];
Node_19 [shape=record,label="{19\:\ 0x0081|SYNTHETIC\lREMOVE\lSplitter:B:19:0x0081\l}"];
Node_20 [shape=record,label="{20\:\ ?|REMOVE\lSplitter:B:19:0x0081\l}"];
Node_21 [shape=record,label="{21\:\ 0x0082|REMOVE\l|throw r6\l}"];
Node_22 [shape=record,label="{22\:\ 0x0080|LOOP_END\lSYNTHETIC\lDONT_GENERATE\lLOOP:0: B:18:0x0080\-\>B:22:0x0080\l}"];
Node_23 [shape=record,label="{23\:\ 0x0082|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_24 [shape=record,label="{24\:\ 0x0080|SYNTHETIC\lDONT_GENERATE\lREMOVE\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.loadMapTileAsync((r5v0 'this' org.osmdroid.tileprovider.modules.MapTileModuleProviderBase A[IMMUTABLE_TYPE, THIS]), (r6v0 org.osmdroid.tileprovider.MapTileRequestState A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_18;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_15 -> Node_26;
Node_16 -> Node_17;
Node_17 -> Node_25;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_22;
Node_20 -> Node_23;
Node_20 -> Node_24;
Node_22 -> Node_18;
Node_23 -> Node_21;
Node_24 -> Node_22;
}

