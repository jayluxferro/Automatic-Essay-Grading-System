digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileModuleProviderBase.\<init\>(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.lang.Object) =  java.lang.Object \l0x0005: INVOKE  (r0 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.lang.Object)\l  (r6 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mQueueLockObject java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r8 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: CONST_STR  (r7 I:java.lang.String) =  \"OsmDroid\" \l0x000e: CONST_STR  (r0 I:java.lang.String) =  \"The pending queue size is smaller than the thread pool size. Automatically reducing the thread pool size.\" \l0x0010: INVOKE  (r7 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.w(java.lang.String, java.lang.String):int type: STATIC \l0x0013: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: NEW_INSTANCE  (r0 I:org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory) =  org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory \l0x0016: CONST  (r1 I:?[int, float, short, byte, char]) = (5 ?[int, float, short, byte, char]) \l0x0017: INVOKE  (r2 I:java.lang.String) = \l  (r6 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.getThreadGroupName():java.lang.String type: VIRTUAL \l0x001b: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory)\l  (r1 I:int)\l  (r2 I:java.lang.String)\l org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory.\<init\>(int, java.lang.String):void type: DIRECT \l0x001e: INVOKE  (r7 I:java.util.concurrent.ExecutorService) = (r7 I:int), (r0 I:java.util.concurrent.ThreadFactory) java.util.concurrent.Executors.newFixedThreadPool(int, java.util.concurrent.ThreadFactory):java.util.concurrent.ExecutorService type: STATIC \l0x0022: IPUT  \l  (r7 I:java.util.concurrent.ExecutorService)\l  (r6 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mExecutor java.util.concurrent.ExecutorService \l0x0024: NEW_INSTANCE  (r7 I:java.util.HashMap) =  java.util.HashMap \l0x0026: INVOKE  (r7 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0029: IPUT  \l  (r7 I:java.util.HashMap\<java.lang.Long, org.osmdroid.tileprovider.MapTileRequestState\>)\l  (r6 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mWorking java.util.HashMap \l0x002b: NEW_INSTANCE  (r7 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1) =  org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1 \l0x002d: ARITH  (r2 I:int) = (r8 I:int) + (2 int) \l0x002f: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1036831949(0x3dcccccd, float:0.1) ?[int, float, short, byte, char])\l \l0x0032: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0033: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0034: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0035: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0036: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase$1)\l  (r1 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l  (r2 I:int)\l  (r3 I:float)\l  (r4 I:boolean)\l  (r5 I:int)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.1.\<init\>(org.osmdroid.tileprovider.modules.MapTileModuleProviderBase, int, float, boolean, int):void type: DIRECT \l0x0039: IPUT  \l  (r7 I:java.util.LinkedHashMap\<java.lang.Long, org.osmdroid.tileprovider.MapTileRequestState\>)\l  (r6 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mPending java.util.LinkedHashMap \l}"];
Node_4 [shape=record,label="{4\:\ 0x003b|0x003b: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.\<init\>((r6 'this' I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase A[IMMUTABLE_TYPE, THIS]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

