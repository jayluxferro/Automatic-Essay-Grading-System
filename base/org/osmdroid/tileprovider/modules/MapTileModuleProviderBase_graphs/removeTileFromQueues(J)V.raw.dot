digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileModuleProviderBase.removeTileFromQueues(J)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.Object) = \l  (r4 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mQueueLockObject java.lang.Object \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: INVOKE  (r1 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ all \-\> 0x0047 \}, TRY_ENTER]\l0x0007: INVOKE  (r1 I:boolean) = (r1 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugTileProviders():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0047 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0033 A[Catch:\{ all \-\> 0x0047 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" A[Catch:\{ all \-\> 0x0047 \}]\l0x000f: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x0047 \}]\l0x0011: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0047 \}]\l0x0014: CONST_STR  (r3 I:java.lang.String) =  \"MapTileModuleProviderBase.removeTileFromQueues() on provider: \" A[Catch:\{ all \-\> 0x0047 \}]\l0x0016: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0047 \}]\l0x0019: INVOKE  (r3 I:java.lang.String) = \l  (r4 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.getName():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0047 \}]\l0x001d: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0047 \}]\l0x0020: CONST_STR  (r3 I:java.lang.String) =  \" for tile: \" A[Catch:\{ all \-\> 0x0047 \}]\l0x0022: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0047 \}]\l0x0025: INVOKE  (r3 I:java.lang.String) = (r5 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x0047 \}]\l0x0029: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x0047 \}]\l0x002c: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x0047 \}]\l0x0030: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ all \-\> 0x0047 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|0x0033: IGET  (r1 I:java.util.LinkedHashMap\<java.lang.Long, org.osmdroid.tileprovider.MapTileRequestState\>) = \l  (r4 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mPending java.util.LinkedHashMap A[Catch:\{ all \-\> 0x0047 \}]\l0x0035: INVOKE  (r2 I:java.lang.Long) = (r5 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ all \-\> 0x0047 \}]\l0x0039: INVOKE  (r1 I:java.util.LinkedHashMap), (r2 I:java.lang.Object) java.util.LinkedHashMap.remove(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0047 \}]\l0x003c: IGET  (r1 I:java.util.HashMap\<java.lang.Long, org.osmdroid.tileprovider.MapTileRequestState\>) = \l  (r4 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.mWorking java.util.HashMap A[Catch:\{ all \-\> 0x0047 \}]\l0x003e: INVOKE  (r5 I:java.lang.Long) = (r5 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ all \-\> 0x0047 \}]\l0x0042: INVOKE  (r1 I:java.util.HashMap), (r5 I:java.lang.Object) java.util.HashMap.remove(java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0047 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0045|0x0045: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0047 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0046|0x0046: RETURN   A[Catch:\{ all \-\> 0x0047 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0047: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0047 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0048|0x0048: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0047 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0049|0x0049: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.removeTileFromQueues((r4 'this' I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase A[IMMUTABLE_TYPE, THIS]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

