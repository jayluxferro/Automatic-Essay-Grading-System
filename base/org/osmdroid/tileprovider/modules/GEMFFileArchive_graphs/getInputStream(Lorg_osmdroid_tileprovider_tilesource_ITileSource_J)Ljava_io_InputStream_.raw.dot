digraph "CFG fororg.osmdroid.tileprovider.modules.GEMFFileArchive.getInputStream(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r3 I:org.osmdroid.util.GEMFFile) = (r2 I:org.osmdroid.tileprovider.modules.GEMFFileArchive) org.osmdroid.tileprovider.modules.GEMFFileArchive.mFile org.osmdroid.util.GEMFFile \l0x0002: INVOKE  (r0 I:int) = (r4 I:long) org.osmdroid.util.MapTileIndex.getX(long):int type: STATIC \l0x0006: INVOKE  (r1 I:int) = (r4 I:long) org.osmdroid.util.MapTileIndex.getY(long):int type: STATIC \l0x000a: INVOKE  (r4 I:int) = (r4 I:long) org.osmdroid.util.MapTileIndex.getZoom(long):int type: STATIC \l0x000e: INVOKE  (r3 I:java.io.InputStream) = \l  (r3 I:org.osmdroid.util.GEMFFile)\l  (r0 I:int)\l  (r1 I:int)\l  (r4 I:int)\l org.osmdroid.util.GEMFFile.getInputStream(int, int, int):java.io.InputStream type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: RETURN  (r3 I:java.io.InputStream) \l}"];
MethodNode[shape=record,label="{public java.io.InputStream org.osmdroid.tileprovider.modules.GEMFFileArchive.getInputStream((r2 'this' I:org.osmdroid.tileprovider.modules.GEMFFileArchive A[IMMUTABLE_TYPE, THIS]), (r3 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

