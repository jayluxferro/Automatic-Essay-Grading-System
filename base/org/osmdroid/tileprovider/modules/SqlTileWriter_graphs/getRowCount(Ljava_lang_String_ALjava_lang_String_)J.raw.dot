digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.getRowCount(Ljava\/lang\/String;[Ljava\/lang\/String;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = (\-1 ?[long, double]) \l0x0002: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0003\l|0x0003: INVOKE  (r3 I:android.database.sqlite.SQLiteDatabase) = (r7 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.getDb():android.database.sqlite.SQLiteDatabase type: VIRTUAL A[Catch:\{ Exception \-\> 0x005d \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x005a A[Catch:\{ Exception \-\> 0x005d \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r4 I:boolean) = (r3 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x005d \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0010 A[Catch:\{ Exception \-\> 0x005d \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: GOTO  \-\> 0x005a A[Catch:\{ Exception \-\> 0x005d \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x005d \}]\l0x0012: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x005d \}]\l0x0015: CONST_STR  (r5 I:java.lang.String) =  \"select count(*) from tiles\" A[Catch:\{ Exception \-\> 0x005d \}]\l0x0017: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x005d \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x001f A[Catch:\{ Exception \-\> 0x005d \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: CONST_STR  (r8 I:java.lang.String) =  \"\" A[Catch:\{ Exception \-\> 0x005d \}]\l0x001e: GOTO  \-\> 0x0030 A[Catch:\{ Exception \-\> 0x005d \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|0x001f: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x005d \}]\l0x0021: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x005d \}]\l0x0024: CONST_STR  (r6 I:java.lang.String) =  \" where \" A[Catch:\{ Exception \-\> 0x005d \}]\l0x0026: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x005d \}]\l0x0029: INVOKE  (r5 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x005d \}]\l0x002c: INVOKE  (r8 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x005d \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|0x0030: INVOKE  (r4 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x005d \}]\l0x0033: INVOKE  (r8 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x005d \}]\l0x0037: INVOKE  (r8 I:android.database.Cursor) = \l  (r3 I:android.database.sqlite.SQLiteDatabase)\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.String[])\l android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String, java.lang.String[]):android.database.Cursor type: VIRTUAL A[Catch:\{ Exception \-\> 0x005d \}]\l0x003a: NOP   A[TRY_LEAVE]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|SYNTHETIC\lSplitter:B:12:0x003b\l}"];
Node_13 [shape=record,label="{13\:\ ?|Splitter:B:12:0x003b\l|0x003b: INVOKE  (r9 I:boolean) = (r8 I:android.database.Cursor) android.database.Cursor.moveToFirst():boolean type: INTERFACE A[Catch:\{ Exception \-\> 0x0056, all \-\> 0x0052 \}, TRY_ENTER]\l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|0x003f: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004c A[Catch:\{ Exception \-\> 0x0056, all \-\> 0x0052 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|0x0041: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0056, all \-\> 0x0052 \}]\l0x0042: INVOKE  (r2 I:long) = (r8 I:android.database.Cursor), (r9 I:int) android.database.Cursor.getLong(int):long type: INTERFACE A[Catch:\{ Exception \-\> 0x0056, all \-\> 0x0052 \}]\l0x0045: NOP   A[TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|0x0046: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004b \l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: INVOKE  (r8 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|0x004b: RETURN  (r2 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|0x004c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0066 \l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|0x004e: INVOKE  (r8 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x0052|ExcHandler: all null\lSplitter:B:12:0x003b\l|0x0052: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|0x0053: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0054: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0056|ExcHandler: Exception null\lSplitter:B:12:0x003b\l|0x0056: MOVE_EXCEPTION  (r9 I:?[OBJECT]) =  \l}"];
Node_24 [shape=record,label="{24\:\ 0x0057|0x0057: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0058: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_25 [shape=record,label="{25\:\ 0x005a|0x005a: RETURN  (r0 I:long) \l}"];
Node_26 [shape=record,label="{26\:\ 0x005b|ExcHandler: all null\lSplitter:B:29:0x005e\l|0x005b: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_28 [shape=record,label="{28\:\ 0x005d|ExcHandler: Exception null\lSplitter:B:1:0x0003\l|0x005d: MOVE_EXCEPTION  (r8 I:?[OBJECT]) =  \l}"];
Node_29 [shape=record,label="{29\:\ 0x005e|SYNTHETIC\lSplitter:B:29:0x005e\l}"];
Node_30 [shape=record,label="{30\:\ ?|Splitter:B:29:0x005e\l|0x005e: INVOKE  \l  (r7 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r8 I:java.lang.Exception)\l org.osmdroid.tileprovider.modules.SqlTileWriter.catchException(java.lang.Exception):void type: VIRTUAL A[Catch:\{ all \-\> 0x005b \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0061|0x0061: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:33:0x0066 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0063|0x0063: INVOKE  (r2 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_33 [shape=record,label="{33\:\ 0x0066|0x0066: RETURN  (r0 I:long) \l}"];
Node_34 [shape=record,label="{34\:\ 0x0067|0x0067: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:36:0x006c \l}"];
Node_35 [shape=record,label="{35\:\ 0x0069|0x0069: INVOKE  (r2 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l}"];
Node_36 [shape=record,label="{36\:\ 0x006c|0x006c: THROW  (r8 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected long org.osmdroid.tileprovider.modules.SqlTileWriter.getRowCount((r7 'this' I:org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_28;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_25;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_25;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_23;
Node_12 -> Node_21;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_33;
Node_20 -> Node_33;
Node_21 -> Node_22;
Node_22 -> Node_34;
Node_23 -> Node_24;
Node_24 -> Node_29;
Node_26 -> Node_34;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_29 -> Node_26;
Node_30 -> Node_31;
Node_30 -> Node_26;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
}

