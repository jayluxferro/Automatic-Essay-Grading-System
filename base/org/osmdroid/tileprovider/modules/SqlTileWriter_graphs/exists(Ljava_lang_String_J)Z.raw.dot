digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.exists(Ljava\/lang\/String;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"key=? and provider=?\" \l0x0002: INVOKE  (r4 I:long) = (r4 I:long) org.osmdroid.tileprovider.modules.SqlTileWriter.getIndex(long):long type: STATIC \l0x0006: INVOKE  (r3 I:java.lang.String[]) = (r4 I:long), (r3 I:java.lang.String) org.osmdroid.tileprovider.modules.SqlTileWriter.getPrimaryKeyParameters(long, java.lang.String):java.lang.String[] type: STATIC \l0x000a: INVOKE  (r3 I:long) = \l  (r2 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r0 I:java.lang.String)\l  (r3 I:java.lang.String[])\l org.osmdroid.tileprovider.modules.SqlTileWriter.getRowCount(java.lang.String, java.lang.String[]):long type: VIRTUAL \l0x000e: CONST  (r0 I:?[long, double]) = (1 ?[long, double]) \l0x0010: CMP_L  (r3 I:int) = (r0 I:long), (r3 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0016 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.SqlTileWriter.exists((r2 'this' I:org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

