digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.saveFile(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;JLjava\/io\/InputStream;Ljava\/lang\/Long;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.database.sqlite.SQLiteDatabase) = (r10 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.getDb():android.database.sqlite.SQLiteDatabase type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x0106 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r2 I:boolean) = (r0 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|SYNTHETIC\lSplitter:B:6:0x0010\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0010\l|0x0010: NEW_INSTANCE  (r3 I:android.content.ContentValues) =  android.content.ContentValues A[Catch:\{ SQLiteFullException \-\> 0x00f0, Exception \-\> 0x00ad \}, TRY_ENTER]\l0x0012: INVOKE  (r3 I:android.content.ContentValues) android.content.ContentValues.\<init\>():void type: DIRECT A[Catch:\{ SQLiteFullException \-\> 0x00f0, Exception \-\> 0x00ad \}]\l0x0015: INVOKE  (r4 I:long) = (r12 I:long) org.osmdroid.tileprovider.modules.SqlTileWriter.getIndex(long):long type: STATIC A[Catch:\{ SQLiteFullException \-\> 0x00f0, Exception \-\> 0x00ad \}]\l0x0019: CONST_STR  (r6 I:java.lang.String) =  \"provider\" A[Catch:\{ SQLiteFullException \-\> 0x00f0, Exception \-\> 0x00ad \}]\l0x001b: INVOKE  (r7 I:java.lang.String) = (r11 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE A[Catch:\{ SQLiteFullException \-\> 0x00f0, Exception \-\> 0x00ad \}]\l0x001f: INVOKE  \l  (r3 I:android.content.ContentValues)\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l android.content.ContentValues.put(java.lang.String, java.lang.String):void type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00f0, Exception \-\> 0x00ad \}]\l0x0022: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (512(0x200, float:7.175E\-43) ?[int, float, short, byte, char])\l A[Catch:\{ SQLiteFullException \-\> 0x00f0, Exception \-\> 0x00ad \}]\l0x0024: NEW_ARRAY  (r6 I:byte[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ SQLiteFullException \-\> 0x00f0, Exception \-\> 0x00ad \}]\l0x0026: NEW_INSTANCE  (r7 I:java.io.ByteArrayOutputStream) =  java.io.ByteArrayOutputStream A[Catch:\{ SQLiteFullException \-\> 0x00f0, Exception \-\> 0x00ad \}]\l0x0028: INVOKE  (r7 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.\<init\>():void type: DIRECT A[Catch:\{ SQLiteFullException \-\> 0x00f0, Exception \-\> 0x00ad \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|SYNTHETIC\lSplitter:B:8:0x002b\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x002b\l|0x002b: INVOKE  (r8 I:int) = (r14 I:java.io.InputStream), (r6 I:byte[]) java.io.InputStream.read(byte[]):int type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}, TRY_ENTER]\l0x002f: CONST  (r9 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|0x0030: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0036 A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: INVOKE  \l  (r7 I:java.io.ByteArrayOutputStream)\l  (r6 I:byte[])\l  (r1 I:int)\l  (r8 I:int)\l java.io.ByteArrayOutputStream.write(byte[], int, int):void type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0035: GOTO  \-\> 0x002b A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0036|0x0036: INVOKE  (r14 I:byte[]) = (r7 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x003a: CONST_STR  (r6 I:java.lang.String) =  \"key\" A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x003c: INVOKE  (r4 I:java.lang.Long) = (r4 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0040: INVOKE  \l  (r3 I:android.content.ContentValues)\l  (r6 I:java.lang.String)\l  (r4 I:java.lang.Long)\l android.content.ContentValues.put(java.lang.String, java.lang.Long):void type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0043: CONST_STR  (r4 I:java.lang.String) =  \"tile\" A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0045: INVOKE  \l  (r3 I:android.content.ContentValues)\l  (r4 I:java.lang.String)\l  (r14 I:byte[])\l android.content.ContentValues.put(java.lang.String, byte[]):void type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004f A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: CONST_STR  (r14 I:java.lang.String) =  \"expires\" A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x004c: INVOKE  \l  (r3 I:android.content.ContentValues)\l  (r14 I:java.lang.String)\l  (r15 I:java.lang.Long)\l android.content.ContentValues.put(java.lang.String, java.lang.Long):void type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x004f|0x004f: CONST_STR  (r14 I:java.lang.String) =  \"tiles\" A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0051: INVOKE  \l  (r0 I:android.database.sqlite.SQLiteDatabase)\l  (r14 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:android.content.ContentValues)\l android.database.sqlite.SQLiteDatabase.replaceOrThrow(java.lang.String, java.lang.String, android.content.ContentValues):long type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0054: INVOKE  (r14 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0058: INVOKE  (r14 I:boolean) = (r14 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugMode():boolean type: INTERFACE A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x005c|0x005c: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x007f A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x005e|0x005e: CONST_STR  (r14 I:java.lang.String) =  \"OsmDroid\" A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0060: NEW_INSTANCE  (r15 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0062: INVOKE  (r15 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0065: CONST_STR  (r2 I:java.lang.String) =  \"tile inserted \" A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0067: INVOKE  (r15 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x006a: INVOKE  (r2 I:java.lang.String) = (r11 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x006e: INVOKE  (r15 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0071: INVOKE  (r2 I:java.lang.String) = (r12 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0075: INVOKE  (r15 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0078: INVOKE  (r15 I:java.lang.String) = (r15 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x007c: INVOKE  (r14 I:java.lang.String), (r15 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x007f|0x007f: INVOKE  (r14 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0083: IGET  (r2 I:long) = (r10 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.lastSizeCheck long A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0085: INVOKE  (r4 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0089: INVOKE  (r4 I:long) = (r4 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileGCFrequencyInMillis():long type: INTERFACE A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x008d: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x008e: ARITH  (r2 I:long) = (r2 I:long) + (r4 I:long) A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x008f: CMP_L  (r14 I:int) = (r14 I:long), (r2 I:long) A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0091|0x0091: IF  (r14 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:21:0x009e A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0093|0x0093: INVOKE  (r14 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0097: IPUT  \l  (r14 I:long)\l  (r10 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l org.osmdroid.tileprovider.modules.SqlTileWriter.lastSizeCheck long A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x0099: IGET  (r14 I:org.osmdroid.util.GarbageCollector) = (r10 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.garbageCollector org.osmdroid.util.GarbageCollector A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}]\l0x009b: INVOKE  (r14 I:org.osmdroid.util.GarbageCollector) org.osmdroid.util.GarbageCollector.gc():boolean type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00a8, Exception \-\> 0x00a5, all \-\> 0x00a2 \}, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x009e|SYNTHETIC\lSplitter:B:21:0x009e\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x009e\l|0x009e: INVOKE  (r7 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0101 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x00a2|ExcHandler: all null\lSplitter:B:8:0x002b\l|0x00a2: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a3|0x00a3: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a5|ExcHandler: Exception null\lSplitter:B:8:0x002b\l|0x00a5: MOVE_EXCEPTION  (r14 I:?[OBJECT]) =  \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a6|0x00a6: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00a8|ExcHandler: SQLiteFullException null\lSplitter:B:8:0x002b\l|0x00a8: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_29 [shape=record,label="{29\:\ 0x00a9|0x00a9: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00ab|ExcHandler: all null\lSplitter:B:34:0x00b0\l|0x00ab: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x00ad|ExcHandler: Exception null\lSplitter:B:6:0x0010\l|0x00ad: MOVE_EXCEPTION  (r14 I:?[OBJECT]) =  \l}"];
Node_33 [shape=record,label="{33\:\ 0x00ae|0x00ae: CONST_STR  (r15 I:java.lang.String) =  \"OsmDroid\" \l}"];
Node_34 [shape=record,label="{34\:\ 0x00b0|SYNTHETIC\lSplitter:B:34:0x00b0\l}"];
Node_35 [shape=record,label="{35\:\ ?|Splitter:B:34:0x00b0\l|0x00b0: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ all \-\> 0x00ab \}, TRY_ENTER]\l0x00b2: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x00ab \}]\l0x00b5: CONST_STR  (r4 I:java.lang.String) =  \"Unable to store cached tile from \" A[Catch:\{ all \-\> 0x00ab \}]\l0x00b7: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}]\l0x00ba: INVOKE  (r11 I:java.lang.String) = (r11 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE A[Catch:\{ all \-\> 0x00ab \}]\l0x00be: INVOKE  (r3 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}]\l0x00c1: CONST_STR  (r11 I:java.lang.String) =  \" \" A[Catch:\{ all \-\> 0x00ab \}]\l0x00c3: INVOKE  (r3 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}]\l0x00c6: INVOKE  (r11 I:java.lang.String) = (r12 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC A[Catch:\{ all \-\> 0x00ab \}]\l0x00ca: INVOKE  (r3 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}]\l0x00cd: CONST_STR  (r11 I:java.lang.String) =  \" db is \" A[Catch:\{ all \-\> 0x00ab \}]\l0x00cf: INVOKE  (r3 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}]\l}"];
Node_36 [shape=record,label="{36\:\ 0x00d2|0x00d2: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:38:0x00d7 A[Catch:\{ all \-\> 0x00ab \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x00d4|0x00d4: CONST_STR  (r11 I:java.lang.String) =  \"null\" A[Catch:\{ all \-\> 0x00ab \}]\l0x00d6: GOTO  \-\> 0x00d9 A[Catch:\{ all \-\> 0x00ab \}]\l}"];
Node_38 [shape=record,label="{38\:\ 0x00d7|0x00d7: CONST_STR  (r11 I:java.lang.String) =  \"not null\" A[Catch:\{ all \-\> 0x00ab \}]\l}"];
Node_39 [shape=record,label="{39\:\ 0x00d9|0x00d9: INVOKE  (r3 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}]\l0x00dc: INVOKE  (r11 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}]\l0x00e0: INVOKE  \l  (r15 I:java.lang.String)\l  (r11 I:java.lang.String)\l  (r14 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x00ab \}]\l0x00e3: SGET  (r11 I:int) =  org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors int A[Catch:\{ all \-\> 0x00ab \}]\l0x00e5: ARITH  (r11 I:int) = (r11 I:int) + (1 int) A[Catch:\{ all \-\> 0x00ab \}]\l0x00e7: SPUT  (r11 I:int) org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors int A[Catch:\{ all \-\> 0x00ab \}]\l0x00e9: INVOKE  \l  (r10 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r14 I:java.lang.Exception)\l org.osmdroid.tileprovider.modules.SqlTileWriter.catchException(java.lang.Exception):void type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}, TRY_LEAVE]\l}"];
Node_40 [shape=record,label="{40\:\ 0x00ec|SYNTHETIC\lSplitter:B:40:0x00ec\l}"];
Node_41 [shape=record,label="{41\:\ ?|Splitter:B:40:0x00ec\l|0x00ec: INVOKE  (r2 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0101 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_43 [shape=record,label="{43\:\ 0x00f0|ExcHandler: SQLiteFullException null\lSplitter:B:6:0x0010\l|0x00f0: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_44 [shape=record,label="{44\:\ 0x00f1|0x00f1: CONST_STR  (r12 I:java.lang.String) =  \"OsmDroid\" \l0x00f3: CONST_STR  (r13 I:java.lang.String) =  \"SQLiteFullException while saving tile.\" \l}"];
Node_45 [shape=record,label="{45\:\ 0x00f5|SYNTHETIC\lSplitter:B:45:0x00f5\l}"];
Node_46 [shape=record,label="{46\:\ ?|Splitter:B:45:0x00f5\l|0x00f5: INVOKE  \l  (r12 I:java.lang.String)\l  (r13 I:java.lang.String)\l  (r11 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x00ab \}, TRY_ENTER]\l0x00f8: IGET  (r12 I:org.osmdroid.util.GarbageCollector) = (r10 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.garbageCollector org.osmdroid.util.GarbageCollector A[Catch:\{ all \-\> 0x00ab \}]\l0x00fa: INVOKE  (r12 I:org.osmdroid.util.GarbageCollector) org.osmdroid.util.GarbageCollector.gc():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}]\l0x00fd: INVOKE  \l  (r10 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r11 I:java.lang.Exception)\l org.osmdroid.tileprovider.modules.SqlTileWriter.catchException(java.lang.Exception):void type: VIRTUAL A[Catch:\{ all \-\> 0x00ab \}, TRY_LEAVE]\l}"];
Node_48 [shape=record,label="{48\:\ 0x0101|0x0101: RETURN  (r1 I:boolean) \l}"];
Node_49 [shape=record,label="{49\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:21:0x009e\l}"];
Node_50 [shape=record,label="{50\:\ 0x0102|SYNTHETIC\lSplitter:B:50:0x0102\l}"];
Node_51 [shape=record,label="{51\:\ ?|Splitter:B:50:0x0102\l|0x0102: INVOKE  (r2 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0105 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0105|0x0105: THROW  (r11 I:java.lang.Throwable) \l}"];
Node_53 [shape=record,label="{53\:\ ?|SYNTHETIC\lExcHandler: IOException null\lSplitter:B:50:0x0102\l}"];
Node_54 [shape=record,label="{54\:\ 0x0106|0x0106: CONST_STR  (r14 I:java.lang.String) =  \"OsmDroid\" \l0x0108: NEW_INSTANCE  (r15 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x010a: INVOKE  (r15 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x010d: CONST_STR  (r0 I:java.lang.String) =  \"Unable to store cached tile from \" \l0x010f: INVOKE  (r15 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0112: INVOKE  (r11 I:java.lang.String) = (r11 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE \l0x0116: INVOKE  (r15 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0119: CONST_STR  (r11 I:java.lang.String) =  \" \" \l0x011b: INVOKE  (r15 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x011e: INVOKE  (r11 I:java.lang.String) = (r12 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x0122: INVOKE  (r15 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0125: CONST_STR  (r11 I:java.lang.String) =  \", database not available.\" \l0x0127: INVOKE  (r15 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x012a: INVOKE  (r11 I:java.lang.String) = (r15 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x012e: INVOKE  (r14 I:java.lang.String), (r11 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l0x0131: SGET  (r11 I:int) =  org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors int \l0x0133: ARITH  (r11 I:int) = (r11 I:int) + (1 int) \l0x0135: SPUT  (r11 I:int) org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors int \l}"];
Node_55 [shape=record,label="{55\:\ 0x0137|0x0137: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.SqlTileWriter.saveFile((r10 'this' I:org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS]), (r11 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:java.lang.Long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_54;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_54[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_43;
Node_6 -> Node_32;
Node_7 -> Node_8;
Node_7 -> Node_43;
Node_7 -> Node_32;
Node_8 -> Node_9;
Node_8 -> Node_28;
Node_8 -> Node_26;
Node_8 -> Node_24;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_8;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_49;
Node_22 -> Node_49;
Node_22 -> Node_48;
Node_24 -> Node_25;
Node_25 -> Node_50;
Node_26 -> Node_27;
Node_27 -> Node_33;
Node_28 -> Node_29;
Node_29 -> Node_44;
Node_30 -> Node_50;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_34 -> Node_30;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_41;
Node_40 -> Node_49;
Node_41 -> Node_49;
Node_41 -> Node_48;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_45 -> Node_30;
Node_46 -> Node_30;
Node_46 -> Node_40;
Node_49 -> Node_48;
Node_50 -> Node_51;
Node_50 -> Node_53;
Node_51 -> Node_52;
Node_51 -> Node_53;
Node_53 -> Node_52;
Node_54 -> Node_55;
}

