digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.loadTile(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x00b7 \}\lSplitter:B:1:0x0001\l|android.database.Cursor r1 = getTileCursor(getPrimaryKeyParameters(getIndex(r11), r10), queryColumns)     \/\/ Catch:\{ Exception \-\> 0x00b7 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|SYNTHETIC\lSplitter:B:3:0x000f\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\lSplitter:B:3:0x000f\l|r3 = true     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l|if (r1.moveToFirst() == false) goto L_0x0020     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l|byte[] r2 = r1.getBlob(0)     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\llong r5 = r1.getLong(1)     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0020|Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l|r5 = 0     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\lr2 = null     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\lPHI: r2 r5 \l  PHI: (r2v2 byte[]) = (r2v10 byte[]), (r2v11 byte[]) binds: [B:7:0x0020, B:6:0x0017] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v0 long) = (r5v1 long), (r5v2 long) binds: [B:7:0x0020, B:6:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 != null) goto L_0x0056     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l|if (org.osmdroid.config.Configuration.getInstance().isDebugMode() == false) goto L_0x0050     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x002f|Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l|java.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\lr3.append(\"SqlCache \- Tile doesn't exist: \")     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\lr3.append(r10.name())     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\lr3.append(org.osmdroid.util.MapTileIndex.toString(r11))     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r3.toString())     \/\/ Catch:\{ Exception \-\> 0x00b1, all \-\> 0x00af \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|if (r1 == null) goto L_0x0055\l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|r1.close()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0055|RETURN\l|return null\l}"];
Node_15 [shape=record,label="{15\:\ 0x0056|if (r1 == null) goto L_0x005b\l}"];
Node_16 [shape=record,label="{16\:\ 0x0058|r1.close()\l}"];
Node_17 [shape=record,label="{17\:\ 0x005b|SYNTHETIC\lSplitter:B:17:0x005b\l}"];
Node_18 [shape=record,label="{18\:\ ?|Catch:\{ all \-\> 0x00a7 \}\lSplitter:B:17:0x005b\l|java.io.ByteArrayInputStream r1 = new java.io.ByteArrayInputStream(r2)     \/\/ Catch:\{ all \-\> 0x00a7 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0060|SYNTHETIC\lSplitter:B:19:0x0060\l}"];
Node_20 [shape=record,label="{20\:\ ?|Catch:\{ all \-\> 0x00a5 \}\lSplitter:B:19:0x0060\l|android.graphics.drawable.Drawable r0 = r10.getDrawable((java.io.InputStream) r1)     \/\/ Catch:\{ all \-\> 0x00a5 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x006a|Catch:\{ all \-\> 0x00a5 \}\l|if ((r5 \> java.lang.System.currentTimeMillis() ? 1 : (r5 == java.lang.System.currentTimeMillis() ? 0 : \-1)) \>= 0) goto L_0x006d     \/\/ Catch:\{ all \-\> 0x00a5 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x006c|Catch:\{ all \-\> 0x00a5 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x006d|Catch:\{ all \-\> 0x00a5 \}\l|r3 = false     \/\/ Catch:\{ all \-\> 0x00a5 \}\l}"];
Node_24 [shape=record,label="{24\:\ 0x006e|Catch:\{ all \-\> 0x00a5 \}\lPHI: r3 \l  PHI: (r3v1 boolean) = (r3v3 boolean), (r3v0 boolean) binds: [B:23:0x006d, B:22:0x006c] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == false) goto L_0x00a1     \/\/ Catch:\{ all \-\> 0x00a5 \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x0070|Catch:\{ all \-\> 0x00a5 \}\l|if (r0 == null) goto L_0x00a1     \/\/ Catch:\{ all \-\> 0x00a5 \}\l}"];
Node_26 [shape=record,label="{26\:\ 0x0072|Catch:\{ all \-\> 0x00a5 \}\l}"];
Node_27 [shape=record,label="{27\:\ 0x007a|Catch:\{ all \-\> 0x00a5 \}\l|if (org.osmdroid.config.Configuration.getInstance().isDebugMode() == false) goto L_0x009d     \/\/ Catch:\{ all \-\> 0x00a5 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x007c|Catch:\{ all \-\> 0x00a5 \}\l|java.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ all \-\> 0x00a5 \}\lr3.append(\"Tile expired: \")     \/\/ Catch:\{ all \-\> 0x00a5 \}\lr3.append(r10.name())     \/\/ Catch:\{ all \-\> 0x00a5 \}\lr3.append(org.osmdroid.util.MapTileIndex.toString(r11))     \/\/ Catch:\{ all \-\> 0x00a5 \}\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r3.toString())     \/\/ Catch:\{ all \-\> 0x00a5 \}\l}"];
Node_29 [shape=record,label="{29\:\ 0x009d|Catch:\{ all \-\> 0x00a5 \}\l|org.osmdroid.tileprovider.ExpirableBitmapDrawable.setState(r0, \-2)     \/\/ Catch:\{ all \-\> 0x00a5 \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x00a1|org.osmdroid.tileprovider.util.StreamUtils.closeStream(r1)\l}"];
Node_31 [shape=record,label="{31\:\ 0x00a4|RETURN\l|return r0\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a5|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:19:0x0060\l|java.lang.Throwable r10 = th\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a7|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:17:0x005b\l|java.lang.Throwable r10 = th\l}"];
Node_34 [shape=record,label="{34\:\ 0x00a8|r1 = null\l}"];
Node_35 [shape=record,label="{35\:\ 0x00a9|PHI: r1 r10 \l  PHI: (r1v5 java.io.ByteArrayInputStream) = (r1v6 java.io.ByteArrayInputStream), (r1v7 java.io.ByteArrayInputStream) binds: [B:34:0x00a8, B:32:0x00a5] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v7 'th' java.lang.Throwable) = (r10v8 'th' java.lang.Throwable), (r10v9 'th' java.lang.Throwable) binds: [B:34:0x00a8, B:32:0x00a5] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L_0x00ae\l}"];
Node_36 [shape=record,label="{36\:\ 0x00ab|org.osmdroid.tileprovider.util.StreamUtils.closeStream(r1)\l}"];
Node_37 [shape=record,label="{37\:\ 0x00ae|throw r10\l}"];
Node_38 [shape=record,label="{38\:\ 0x00af|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:3:0x000f\l|java.lang.Throwable r10 = th\l}"];
Node_39 [shape=record,label="{39\:\ 0x00b1|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:3:0x000f\l|java.lang.Exception r10 = e\l}"];
Node_40 [shape=record,label="{40\:\ 0x00b2|r0 = r1\l}"];
Node_41 [shape=record,label="{41\:\ 0x00b4|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:44:0x00b8\l|java.lang.Throwable r10 = th\l}"];
Node_42 [shape=record,label="{42\:\ 0x00b5|r1 = r0\l}"];
Node_43 [shape=record,label="{43\:\ 0x00b7|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:1:0x0001\l|java.lang.Exception r10 = e\l}"];
Node_44 [shape=record,label="{44\:\ 0x00b8|SYNTHETIC\lPHI: r0 r10 \l  PHI: (r0v1 android.database.Cursor) = (r0v0 android.database.Cursor), (r0v2 android.database.Cursor) binds: [B:43:0x00b7, B:40:0x00b2] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v2 'e' java.lang.Exception) = (r10v4 'e' java.lang.Exception), (r10v5 'e' java.lang.Exception) binds: [B:43:0x00b7, B:40:0x00b2] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:44:0x00b8\l}"];
Node_45 [shape=record,label="{45\:\ ?|Catch:\{ all \-\> 0x00b4 \}\lSplitter:B:44:0x00b8\l|catchException(r10)     \/\/ Catch:\{ all \-\> 0x00b4 \}\l}"];
Node_46 [shape=record,label="{46\:\ 0x00bb|Catch:\{ all \-\> 0x00b4 \}\l|throw r10     \/\/ Catch:\{ all \-\> 0x00b4 \}\l}"];
Node_47 [shape=record,label="{47\:\ 0x00bc|PHI: r1 r10 \l  PHI: (r1v0 android.database.Cursor) = (r1v1 android.database.Cursor), (r1v4 android.database.Cursor) binds: [B:42:0x00b5, B:38:0x00af] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 'th' java.lang.Throwable) = (r10v3 'th' java.lang.Throwable), (r10v6 'th' java.lang.Throwable) binds: [B:42:0x00b5, B:38:0x00af] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L_0x00c1\l}"];
Node_48 [shape=record,label="{48\:\ 0x00be|r1.close()\l}"];
Node_49 [shape=record,label="{49\:\ 0x00c1|throw r10\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.tileprovider.modules.SqlTileWriter.loadTile((r9v0 'this' org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS]), (r10v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.Exception]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_43;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_39;
Node_3 -> Node_38;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_17 -> Node_33;
Node_18 -> Node_19;
Node_18 -> Node_33;
Node_19 -> Node_20;
Node_19 -> Node_32;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_37;
Node_36 -> Node_37;
Node_38 -> Node_47;
Node_39 -> Node_40;
Node_40 -> Node_44;
Node_41 -> Node_42;
Node_42 -> Node_47;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_44 -> Node_41;
Node_45 -> Node_46;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_49;
}

