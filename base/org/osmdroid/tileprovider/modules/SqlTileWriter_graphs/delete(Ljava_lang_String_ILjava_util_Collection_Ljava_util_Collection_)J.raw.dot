digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.delete(Ljava\/lang\/String;ILjava\/util\/Collection;Ljava\/util\/Collection;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: INVOKE  (r0 I:android.database.sqlite.SQLiteDatabase) = (r3 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.getDb():android.database.sqlite.SQLiteDatabase type: VIRTUAL A[Catch:\{ Exception \-\> 0x003c \}, TRY_ENTER]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0039 A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: GOTO  \-\> 0x0039 A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: CONST_STR  (r1 I:java.lang.String) =  \"tiles\" A[Catch:\{ Exception \-\> 0x003c \}]\l0x000f: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x003c \}]\l0x0011: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x003c \}]\l0x0014: INVOKE  (r5 I:java.lang.StringBuilder) = \l  (r3 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r5 I:int)\l  (r6 I:java.util.Collection)\l  (r7 I:java.util.Collection)\l org.osmdroid.tileprovider.modules.SqlTileWriter.getWhereClause(int, java.util.Collection, java.util.Collection):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x003c \}]\l0x0018: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0020 A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: CONST_STR  (r5 I:java.lang.String) =  \" and provider=?\" A[Catch:\{ Exception \-\> 0x003c \}]\l0x001f: GOTO  \-\> 0x0022 A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: CONST_STR  (r5 I:java.lang.String) =  \"\" A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x003c \}]\l0x0025: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0029|0x0029: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0032 A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x002b|0x002b: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x003c \}]\l0x002c: NEW_ARRAY  (r6 I:java.lang.String[]) = (r6 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch:\{ Exception \-\> 0x003c \}]\l0x002e: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x003c \}]\l0x002f: APUT  \l  (r6 I:?[OBJECT, ARRAY][])\l  (r7 I:?[int, short, byte, char])\l  (r4 I:?[OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x003c \}]\l0x0031: GOTO  \-\> 0x0033 A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x003c \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: INVOKE  (r4 I:int) = \l  (r0 I:android.database.sqlite.SQLiteDatabase)\l  (r1 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String[])\l android.database.sqlite.SQLiteDatabase.delete(java.lang.String, java.lang.String, java.lang.String[]):int type: VIRTUAL A[Catch:\{ Exception \-\> 0x003c \}]\l0x0036: NOP   A[TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|0x0037: CAST  (r4 I:long) = (long) (r4 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: RETURN  (r4 I:long) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0039|0x0039: CONST  (r4 I:?[long, double]) = (\-1 ?[long, double]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x003b|0x003b: RETURN  (r4 I:long) \l}"];
Node_19 [shape=record,label="{19\:\ 0x003c|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x003c: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_20 [shape=record,label="{20\:\ 0x003d|0x003d: INVOKE  \l  (r3 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r4 I:java.lang.Exception)\l org.osmdroid.tileprovider.modules.SqlTileWriter.catchException(java.lang.Exception):void type: VIRTUAL \l0x0040: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|0x0042: RETURN  (r4 I:long) \l}"];
MethodNode[shape=record,label="{public long org.osmdroid.tileprovider.modules.SqlTileWriter.delete((r3 'this' I:org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.util.Collection\<android.graphics.Rect\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:java.util.Collection\<android.graphics.Rect\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, I, Ljava\/util\/Collection\<, Landroid\/graphics\/Rect;, \>;, Ljava\/util\/Collection\<, Landroid\/graphics\/Rect;, \>;)J]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_19;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_20 -> Node_21;
}

