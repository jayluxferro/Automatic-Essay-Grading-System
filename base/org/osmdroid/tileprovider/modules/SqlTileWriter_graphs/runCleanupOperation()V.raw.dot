digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.runCleanupOperation()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.database.sqlite.SQLiteDatabase) = (r11 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.getDb():android.database.sqlite.SQLiteDatabase type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0043 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000d \l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: INVOKE  \l  (r11 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r0 I:android.database.sqlite.SQLiteDatabase)\l org.osmdroid.tileprovider.modules.SqlTileWriter.createIndex(android.database.sqlite.SQLiteDatabase):void type: DIRECT \l0x0010: SGET  (r0 I:java.io.File) =  org.osmdroid.tileprovider.modules.SqlTileWriter.db_file java.io.File \l0x0012: INVOKE  (r0 I:long) = (r0 I:java.io.File) java.io.File.length():long type: VIRTUAL \l0x0016: INVOKE  (r2 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x001a: INVOKE  (r2 I:long) = (r2 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileFileSystemCacheMaxBytes():long type: INTERFACE \l0x001e: CMP_L  (r2 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: IF  (r2 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:8:0x0023 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: RETURN   \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: INVOKE  (r2 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0027: INVOKE  (r2 I:long) = (r2 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileFileSystemCacheTrimBytes():long type: INTERFACE \l0x002b: ARITH  (r5 I:long) = (r0 I:long) \- (r2 I:long) \l0x002d: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0031: INVOKE  (r7 I:int) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileGCBulkSize():int type: INTERFACE \l0x0035: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0039: INVOKE  (r8 I:long) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileGCBulkPauseInMillis():long type: INTERFACE \l0x003d: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003e: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x003f: INVOKE  \l  (r4 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r5 I:long)\l  (r7 I:int)\l  (r8 I:long)\l  (r10 I:boolean)\l org.osmdroid.tileprovider.modules.SqlTileWriter.runCleanupOperation(long, int, long, boolean):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|0x0042: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0043|0x0043: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0047: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugMode():boolean type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x004b|0x004b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0054 \l}"];
Node_12 [shape=record,label="{12\:\ 0x004d|0x004d: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" \l0x004f: CONST_STR  (r1 I:java.lang.String) =  \"Finished init thread, aborted due to null database reference\" \l0x0051: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|0x0054: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.SqlTileWriter.runCleanupOperation((r11 'this' I:org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_10[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
}

