digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.runCleanupOperation(JIJZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0002: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0004: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0007: INVOKE  (r3 I:android.database.sqlite.SQLiteDatabase) = (r18 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.getDb():android.database.sqlite.SQLiteDatabase type: VIRTUAL \l0x000b: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000c: MOVE  (r5 I:?[long, double]) = (r19 I:?[long, double]) \l0x000e: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: CONST  (r7 I:?[long, double]) = (0 ?[long, double]) \l0x0011: CMP_L  (r9 I:int) = (r5 I:long), (r7 I:long) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IF  (r9 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:40:0x00cc \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: CMP_L  (r12 I:int) = (r22 I:long), (r7 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IF  (r12 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x0021 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|SYNTHETIC\lSplitter:B:8:0x001e\l}"];
Node_9 [shape=record,label="{9\:\ ?|Splitter:B:8:0x001e\l|0x001e: INVOKE  (r22 I:long) java.lang.Thread.sleep(long):void type: STATIC A[Catch:\{ InterruptedException \-\> 0x0021 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: MOVE  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ ?|SYNTHETIC\lExcHandler: InterruptedException null\lSplitter:B:8:0x001e\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: INVOKE  (r13 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|SYNTHETIC\lSplitter:B:13:0x0026\l}"];
Node_14 [shape=record,label="{14\:\ ?|Splitter:B:13:0x0026\l|0x0026: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x00c7 \}, TRY_ENTER]\l0x0028: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x002b: CONST_STR  (r15 I:java.lang.String) =  \"SELECT key,LENGTH(HEX(tile))\/2 FROM tiles WHERE expires IS NOT NULL \" A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x002d: INVOKE  (r0 I:java.lang.StringBuilder), (r15 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0030|0x0030: IF  (r24 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0035 A[Catch:\{ Exception \-\> 0x00c7 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0032|0x0032: CONST_STR  (r13 I:java.lang.String) =  \"\" A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0034: GOTO  \-\> 0x004b A[Catch:\{ Exception \-\> 0x00c7 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0035|0x0035: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0037: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x003a: CONST_STR  (r8 I:java.lang.String) =  \"AND expires \< \" A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x003c: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x003f: INVOKE  (r7 I:java.lang.StringBuilder), (r13 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0042: CONST_STR  (r8 I:java.lang.String) =  \" \" A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0044: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0047: INVOKE  (r13 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|0x004b: INVOKE  (r0 I:java.lang.StringBuilder), (r13 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x004e: CONST_STR  (r7 I:java.lang.String) =  \"ORDER BY \" A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0050: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0053: CONST_STR  (r7 I:java.lang.String) =  \"expires\" A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0055: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0058: CONST_STR  (r7 I:java.lang.String) =  \" ASC LIMIT \" A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x005a: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x005d: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x005f: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0062: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0066: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x0067: INVOKE  (r0 I:android.database.Cursor) = \l  (r3 I:android.database.sqlite.SQLiteDatabase)\l  (r0 I:java.lang.String)\l  (r8 I:java.lang.String[])\l android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String, java.lang.String[]):android.database.Cursor type: VIRTUAL A[Catch:\{ Exception \-\> 0x00c7 \}]\l0x006a: NOP   A[TRY_LEAVE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x006b|0x006b: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.moveToFirst():boolean type: INTERFACE \l0x006e: INVOKE  (r2 I:java.lang.StringBuilder), (r9 I:int) java.lang.StringBuilder.setLength(int):void type: VIRTUAL \l0x0071: CONST_STR  (r13 I:java.lang.String) =  \"key in (\" \l0x0073: INVOKE  (r2 I:java.lang.StringBuilder), (r13 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0076: CONST_STR  (r13 I:java.lang.String) =  \"\" \l}"];
Node_20 [shape=record,label="{20\:\ 0x0078|0x0078: INVOKE  (r14 I:boolean) = (r0 I:android.database.Cursor) android.database.Cursor.isAfterLast():boolean type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x007c|0x007c: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x0099 \l}"];
Node_22 [shape=record,label="{22\:\ 0x007e|0x007e: INVOKE  (r10 I:long) = (r0 I:android.database.Cursor), (r9 I:int) android.database.Cursor.getLong(int):long type: INTERFACE \l0x0082: INVOKE  (r16 I:long) = (r0 I:android.database.Cursor), (r4 I:int) android.database.Cursor.getLong(int):long type: INTERFACE \l0x0086: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.moveToNext():boolean type: INTERFACE \l0x0089: INVOKE  (r2 I:java.lang.StringBuilder), (r13 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008c: INVOKE  (r2 I:java.lang.StringBuilder), (r10 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x008f: CONST_STR  (r13 I:java.lang.String) =  \",\" \l0x0091: ARITH  (r5 I:long) = (r5 I:long) \- (r16 I:long) \l0x0093: CONST  (r10 I:?[long, double]) = (0 ?[long, double]) \l0x0095: CMP_L  (r14 I:int) = (r5 I:long), (r10 I:long) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0097|0x0097: IF  (r14 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:20:0x0078 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0099|0x0099: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE \l0x009c: CONST_STR  (r0 I:java.lang.String) =  \"\" \l0x009e: INVOKE  (r0 I:boolean) = (r0 I:java.lang.String), (r13 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a2|0x00a2: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00a5 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a4|0x00a4: RETURN   \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a5|0x00a5: CONST  (r0 I:?[int, float, short, byte, char]) = (41 ?[int, float, short, byte, char]) \l0x00a7: INVOKE  (r2 I:java.lang.StringBuilder), (r0 I:char) java.lang.StringBuilder.append(char):java.lang.StringBuilder type: VIRTUAL \l0x00aa: CONST_STR  (r0 I:java.lang.String) =  \"tiles\" \l}"];
Node_28 [shape=record,label="{28\:\ 0x00ac|SYNTHETIC\lSplitter:B:28:0x00ac\l}"];
Node_29 [shape=record,label="{29\:\ ?|Splitter:B:28:0x00ac\l|0x00ac: INVOKE  (r9 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00b9, Exception \-\> 0x00b4 \}, TRY_ENTER]\l0x00b0: INVOKE  \l  (r3 I:android.database.sqlite.SQLiteDatabase)\l  (r0 I:java.lang.String)\l  (r9 I:java.lang.String)\l  (r8 I:java.lang.String[])\l android.database.sqlite.SQLiteDatabase.delete(java.lang.String, java.lang.String, java.lang.String[]):int type: VIRTUAL A[Catch:\{ SQLiteFullException \-\> 0x00b9, Exception \-\> 0x00b4 \}, TRY_LEAVE]\l}"];
Node_31 [shape=record,label="{31\:\ 0x00b4|ExcHandler: Exception null\lSplitter:B:28:0x00ac\l|0x00b4: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_32 [shape=record,label="{32\:\ 0x00b5|0x00b5: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r0 I:java.lang.Exception)\l org.osmdroid.tileprovider.modules.SqlTileWriter.catchException(java.lang.Exception):void type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x00b8|0x00b8: RETURN   \l}"];
Node_34 [shape=record,label="{34\:\ 0x00b9|ExcHandler: SQLiteFullException null\lSplitter:B:28:0x00ac\l|0x00b9: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_35 [shape=record,label="{35\:\ 0x00ba|0x00ba: CONST_STR  (r8 I:java.lang.String) =  \"OsmDroid\" \l0x00bc: CONST_STR  (r9 I:java.lang.String) =  \"SQLiteFullException while cleanup.\" \l0x00be: INVOKE  \l  (r8 I:java.lang.String)\l  (r9 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x00c1: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r0 I:java.lang.Exception)\l org.osmdroid.tileprovider.modules.SqlTileWriter.catchException(java.lang.Exception):void type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x00c4|0x00c4: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ 0x00c7|ExcHandler: Exception null\lSplitter:B:13:0x0026\l|0x00c7: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_38 [shape=record,label="{38\:\ 0x00c8|0x00c8: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r0 I:java.lang.Exception)\l org.osmdroid.tileprovider.modules.SqlTileWriter.catchException(java.lang.Exception):void type: VIRTUAL \l}"];
Node_39 [shape=record,label="{39\:\ 0x00cb|0x00cb: RETURN   \l}"];
Node_40 [shape=record,label="{40\:\ 0x00cc|0x00cc: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.SqlTileWriter.runCleanupOperation((r18 'this' I:org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS]), (r19 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_40;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_12;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_10;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_37;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23;
Node_23 -> Node_20;
Node_23 -> Node_24[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_34;
Node_28 -> Node_31;
Node_29 -> Node_34;
Node_29 -> Node_31;
Node_29 -> Node_36;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_1;
Node_37 -> Node_38;
Node_38 -> Node_39;
}

