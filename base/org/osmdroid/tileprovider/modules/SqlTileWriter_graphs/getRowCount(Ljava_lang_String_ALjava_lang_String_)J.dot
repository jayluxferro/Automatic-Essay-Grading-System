digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.getRowCount(Ljava\/lang\/String;[Ljava\/lang\/String;)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|SYNTHETIC\lSplitter:B:1:0x0003\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x005d \}\lSplitter:B:1:0x0003\l|android.database.sqlite.SQLiteDatabase r3 = getDb()     \/\/ Catch:\{ Exception \-\> 0x005d \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|Catch:\{ Exception \-\> 0x005d \}\l|if (r3 == null) goto L_0x005a     \/\/ Catch:\{ Exception \-\> 0x005d \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|Catch:\{ Exception \-\> 0x005d \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|Catch:\{ Exception \-\> 0x005d \}\l|if (r3.isOpen() != false) goto L_0x0010     \/\/ Catch:\{ Exception \-\> 0x005d \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|Catch:\{ Exception \-\> 0x005d \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|Catch:\{ Exception \-\> 0x005d \}\l|java.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch:\{ Exception \-\> 0x005d \}\lr4.append(\"select count(*) from tiles\")     \/\/ Catch:\{ Exception \-\> 0x005d \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|Catch:\{ Exception \-\> 0x005d \}\l|if (r8 != null) goto L_0x001f     \/\/ Catch:\{ Exception \-\> 0x005d \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|Catch:\{ Exception \-\> 0x005d \}\l|java.lang.String r8 = \"\"     \/\/ Catch:\{ Exception \-\> 0x005d \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x001f|Catch:\{ Exception \-\> 0x005d \}\l|java.lang.StringBuilder r5 = new java.lang.StringBuilder()     \/\/ Catch:\{ Exception \-\> 0x005d \}\lr5.append(\" where \")     \/\/ Catch:\{ Exception \-\> 0x005d \}\lr5.append(r8)     \/\/ Catch:\{ Exception \-\> 0x005d \}\ljava.lang.String r8 = r5.toString()     \/\/ Catch:\{ Exception \-\> 0x005d \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|Catch:\{ Exception \-\> 0x005d \}\lPHI: r8 \l  PHI: (r8v5 java.lang.String) = (r8v10 java.lang.String), (r8v11 java.lang.String) binds: [B:10:0x001f, B:9:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|r4.append(r8)     \/\/ Catch:\{ Exception \-\> 0x005d \}\landroid.database.Cursor r8 = r3.rawQuery(r4.toString(), r9)     \/\/ Catch:\{ Exception \-\> 0x005d \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|SYNTHETIC\lSplitter:B:12:0x003b\l}"];
Node_13 [shape=record,label="{13\:\ ?|Catch:\{ Exception \-\> 0x0056, all \-\> 0x0052 \}\lSplitter:B:12:0x003b\l}"];
Node_14 [shape=record,label="{14\:\ 0x003f|Catch:\{ Exception \-\> 0x0056, all \-\> 0x0052 \}\l|if (r8.moveToFirst() == false) goto L_0x004c     \/\/ Catch:\{ Exception \-\> 0x0056, all \-\> 0x0052 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0041|Catch:\{ Exception \-\> 0x0056, all \-\> 0x0052 \}\l|long r2 = r8.getLong(0)     \/\/ Catch:\{ Exception \-\> 0x0056, all \-\> 0x0052 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0046|if (r8 == null) goto L_0x004b\l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|r8.close()\l}"];
Node_18 [shape=record,label="{18\:\ 0x004b|RETURN\l|return r2\l}"];
Node_19 [shape=record,label="{19\:\ 0x004c|if (r8 == null) goto L_0x0066\l}"];
Node_20 [shape=record,label="{20\:\ 0x004e|r8.close()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0052|ExcHandler: all (r9v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:12:0x003b\l|java.lang.Throwable r9 = move\-exception\l}"];
Node_22 [shape=record,label="{22\:\ 0x0053|r2 = r8\lr8 = r9\l}"];
Node_23 [shape=record,label="{23\:\ 0x0056|ExcHandler: Exception (r9v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:12:0x003b\l|java.lang.Exception r9 = move\-exception\l}"];
Node_24 [shape=record,label="{24\:\ 0x0057|r2 = r8\lr8 = r9\l}"];
Node_25 [shape=record,label="{25\:\ 0x005a|RETURN\l|return \-1\l}"];
Node_26 [shape=record,label="{26\:\ 0x005b|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:28:0x005e\l|java.lang.Throwable r8 = th\l}"];
Node_27 [shape=record,label="{27\:\ 0x005d|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:1:0x0003\l|java.lang.Exception r8 = e\l}"];
Node_28 [shape=record,label="{28\:\ 0x005e|SYNTHETIC\lPHI: r2 r8 \l  PHI: (r2v2 android.database.Cursor) = (r2v0 android.database.Cursor), (r2v3 android.database.Cursor) binds: [B:27:0x005d, B:24:0x0057] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v2 'e' java.lang.Exception) = (r8v4 'e' java.lang.Exception), (r8v8 'e' java.lang.Exception) binds: [B:27:0x005d, B:24:0x0057] A[DONT_GENERATE, DONT_INLINE]\lSplitter:B:28:0x005e\l}"];
Node_29 [shape=record,label="{29\:\ ?|Catch:\{ all \-\> 0x005b \}\lSplitter:B:28:0x005e\l|catchException(r8)     \/\/ Catch:\{ all \-\> 0x005b \}\l}"];
Node_30 [shape=record,label="{30\:\ 0x0061|if (r2 == null) goto L_0x0066\l}"];
Node_31 [shape=record,label="{31\:\ 0x0063|r2.close()\l}"];
Node_32 [shape=record,label="{32\:\ 0x0066|RETURN\l|return \-1\l}"];
Node_33 [shape=record,label="{33\:\ 0x0067|PHI: r2 r8 \l  PHI: (r2v1 android.database.Cursor) = (r2v2 android.database.Cursor), (r2v4 android.database.Cursor) binds: [B:26:0x005b, B:22:0x0053] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 'th' java.lang.Throwable) = (r8v3 'th' java.lang.Throwable), (r8v9 'th' java.lang.Throwable) binds: [B:26:0x005b, B:22:0x0053] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == null) goto L_0x006c\l}"];
Node_34 [shape=record,label="{34\:\ 0x0069|r2.close()\l}"];
Node_35 [shape=record,label="{35\:\ 0x006c|throw r8\l}"];
MethodNode[shape=record,label="{protected long org.osmdroid.tileprovider.modules.SqlTileWriter.getRowCount((r7v0 'this' org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_27;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_25;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_25;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_23;
Node_12 -> Node_21;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_32;
Node_20 -> Node_32;
Node_21 -> Node_22;
Node_22 -> Node_33;
Node_23 -> Node_24;
Node_24 -> Node_28;
Node_26 -> Node_33;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_28 -> Node_26;
Node_29 -> Node_30;
Node_29 -> Node_26;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
}

