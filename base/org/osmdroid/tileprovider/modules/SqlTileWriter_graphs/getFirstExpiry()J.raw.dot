digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.getFirstExpiry()J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.database.sqlite.SQLiteDatabase) = (r5 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.getDb():android.database.sqlite.SQLiteDatabase type: VIRTUAL \l0x0004: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x002e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r3 I:boolean) = (r0 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST_STR  (r3 I:java.lang.String) =  \"select min(expires) from tiles\" \l0x0011: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|SYNTHETIC\lSplitter:B:6:0x0012\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0012\l|0x0012: INVOKE  (r0 I:android.database.Cursor) = \l  (r0 I:android.database.sqlite.SQLiteDatabase)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String[])\l android.database.sqlite.SQLiteDatabase.rawQuery(java.lang.String, java.lang.String[]):android.database.Cursor type: VIRTUAL A[Catch:\{ Exception \-\> 0x0022 \}, TRY_ENTER]\l0x0016: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.moveToFirst():boolean type: INTERFACE A[Catch:\{ Exception \-\> 0x0022 \}]\l0x0019: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Exception \-\> 0x0022 \}]\l0x001a: INVOKE  (r3 I:long) = (r0 I:android.database.Cursor), (r3 I:int) android.database.Cursor.getLong(int):long type: INTERFACE A[Catch:\{ Exception \-\> 0x0022 \}]\l0x001e: INVOKE  (r0 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE A[Catch:\{ Exception \-\> 0x0022 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: RETURN  (r3 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|ExcHandler: Exception null\lSplitter:B:6:0x0012\l|0x0022: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: CONST_STR  (r3 I:java.lang.String) =  \"OsmDroid\" \l0x0025: CONST_STR  (r4 I:java.lang.String) =  \"Unable to query for oldest tile\" \l0x0027: INVOKE  \l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x002a: INVOKE  \l  (r5 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r0 I:java.lang.Exception)\l org.osmdroid.tileprovider.modules.SqlTileWriter.catchException(java.lang.Exception):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: RETURN  (r1 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: RETURN  (r1 I:long) \l}"];
MethodNode[shape=record,label="{public long org.osmdroid.tileprovider.modules.SqlTileWriter.getFirstExpiry((r5 'this' I:org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_12;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_12[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

