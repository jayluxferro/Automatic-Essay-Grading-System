digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0005: IPUT  \l  (r0 I:long)\l  (r2 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l org.osmdroid.tileprovider.modules.SqlTileWriter.lastSizeCheck long \l0x0007: NEW_INSTANCE  (r0 I:org.osmdroid.util.GarbageCollector) =  org.osmdroid.util.GarbageCollector \l0x0009: NEW_INSTANCE  (r1 I:org.osmdroid.tileprovider.modules.SqlTileWriter$1) =  org.osmdroid.tileprovider.modules.SqlTileWriter$1 \l0x000b: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.modules.SqlTileWriter$1)\l  (r2 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l org.osmdroid.tileprovider.modules.SqlTileWriter.1.\<init\>(org.osmdroid.tileprovider.modules.SqlTileWriter):void type: DIRECT \l0x000e: INVOKE  \l  (r0 I:org.osmdroid.util.GarbageCollector)\l  (r1 I:java.lang.Runnable)\l org.osmdroid.util.GarbageCollector.\<init\>(java.lang.Runnable):void type: DIRECT \l0x0011: IPUT  \l  (r0 I:org.osmdroid.util.GarbageCollector)\l  (r2 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l org.osmdroid.tileprovider.modules.SqlTileWriter.garbageCollector org.osmdroid.util.GarbageCollector \l0x0013: INVOKE  (r2 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.getDb():android.database.sqlite.SQLiteDatabase type: VIRTUAL \l0x0016: SGET  (r0 I:boolean) =  org.osmdroid.tileprovider.modules.SqlTileWriter.hasInited boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001b: SPUT  (r0 I:boolean) org.osmdroid.tileprovider.modules.SqlTileWriter.hasInited boolean \l0x001d: SGET  (r0 I:boolean) =  org.osmdroid.tileprovider.modules.SqlTileWriter.cleanOnStartup boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0026 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: IGET  (r0 I:org.osmdroid.util.GarbageCollector) = (r2 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.garbageCollector org.osmdroid.util.GarbageCollector \l0x0023: INVOKE  (r0 I:org.osmdroid.util.GarbageCollector) org.osmdroid.util.GarbageCollector.gc():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.modules.SqlTileWriter.\<init\>((r2 'this' I:org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

