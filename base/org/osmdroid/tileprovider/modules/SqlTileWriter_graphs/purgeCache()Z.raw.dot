digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.purgeCache()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.database.sqlite.SQLiteDatabase) = (r3 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.getDb():android.database.sqlite.SQLiteDatabase type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST_STR  (r1 I:java.lang.String) =  \"tiles\" \l0x000e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|SYNTHETIC\lSplitter:B:5:0x000f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000f\l|0x000f: INVOKE  \l  (r0 I:android.database.sqlite.SQLiteDatabase)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r2 I:java.lang.String[])\l android.database.sqlite.SQLiteDatabase.delete(java.lang.String, java.lang.String, java.lang.String[]):int type: VIRTUAL A[Catch:\{ Exception \-\> 0x0014 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0013|0x0013: RETURN  (r0 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0014|ExcHandler: Exception null\lSplitter:B:5:0x000f\l|0x0014: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0015|0x0015: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l0x0017: CONST_STR  (r2 I:java.lang.String) =  \"Error purging the db\" \l0x0019: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x001c: INVOKE  \l  (r3 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r0 I:java.lang.Exception)\l org.osmdroid.tileprovider.modules.SqlTileWriter.catchException(java.lang.Exception):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0020|0x0020: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.SqlTileWriter.purgeCache((r3 'this' I:org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

