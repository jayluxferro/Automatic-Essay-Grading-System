digraph "CFG fororg.osmdroid.tileprovider.modules.SqlTileWriter.remove(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:android.database.sqlite.SQLiteDatabase) = (r7 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.getDb():android.database.sqlite.SQLiteDatabase type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x005e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: INVOKE  (r3 I:boolean) = (r0 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|SYNTHETIC\lSplitter:B:5:0x000f\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x000f\l|0x000f: INVOKE  (r3 I:long) = (r9 I:long) org.osmdroid.tileprovider.modules.SqlTileWriter.getIndex(long):long type: STATIC A[Catch:\{ Exception \-\> 0x001f \}, TRY_ENTER]\l0x0013: CONST_STR  (r5 I:java.lang.String) =  \"tiles\" A[Catch:\{ Exception \-\> 0x001f \}]\l0x0015: CONST_STR  (r6 I:java.lang.String) =  \"key=? and provider=?\" A[Catch:\{ Exception \-\> 0x001f \}]\l0x0017: INVOKE  (r3 I:java.lang.String[]) = \l  (r3 I:long)\l  (r8 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l org.osmdroid.tileprovider.modules.SqlTileWriter.getPrimaryKeyParameters(long, org.osmdroid.tileprovider.tilesource.ITileSource):java.lang.String[] type: STATIC A[Catch:\{ Exception \-\> 0x001f \}]\l0x001b: INVOKE  \l  (r0 I:android.database.sqlite.SQLiteDatabase)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r3 I:java.lang.String[])\l android.database.sqlite.SQLiteDatabase.delete(java.lang.String, java.lang.String, java.lang.String[]):int type: VIRTUAL A[Catch:\{ Exception \-\> 0x001f \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN  (r2 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|ExcHandler: Exception null\lSplitter:B:5:0x000f\l|0x001f: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: CONST_STR  (r4 I:java.lang.String) =  \"OsmDroid\" \l0x0022: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0024: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0027: CONST_STR  (r6 I:java.lang.String) =  \"Unable to delete cached tile from \" \l0x0029: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002c: INVOKE  (r8 I:java.lang.String) = (r8 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE \l0x0030: INVOKE  (r5 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0033: CONST_STR  (r8 I:java.lang.String) =  \" \" \l0x0035: INVOKE  (r5 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0038: INVOKE  (r8 I:java.lang.String) = (r9 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x003c: INVOKE  (r5 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: CONST_STR  (r8 I:java.lang.String) =  \" db is \" \l0x0041: INVOKE  (r5 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0049 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|0x0046: CONST_STR  (r8 I:java.lang.String) =  \"null\" \l}"];
Node_12 [shape=record,label="{12\:\ 0x0049|0x0049: CONST_STR  (r8 I:java.lang.String) =  \"not null\" \l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|0x004b: INVOKE  (r5 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004e: INVOKE  (r8 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0052: INVOKE  \l  (r4 I:java.lang.String)\l  (r8 I:java.lang.String)\l  (r3 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x0055: SGET  (r8 I:int) =  org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors int \l0x0057: ARITH  (r8 I:int) = (r8 I:int) + (r2 I:int) \l0x0058: SPUT  (r8 I:int) org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors int \l0x005a: INVOKE  \l  (r7 I:org.osmdroid.tileprovider.modules.SqlTileWriter)\l  (r3 I:java.lang.Exception)\l org.osmdroid.tileprovider.modules.SqlTileWriter.catchException(java.lang.Exception):void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x005d|0x005d: RETURN  (r1 I:boolean) \l}"];
Node_15 [shape=record,label="{15\:\ 0x005e|0x005e: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" \l0x0060: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0062: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0065: CONST_STR  (r4 I:java.lang.String) =  \"Unable to delete cached tile from \" \l0x0067: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x006a: INVOKE  (r8 I:java.lang.String) = (r8 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE \l0x006e: INVOKE  (r3 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0071: CONST_STR  (r8 I:java.lang.String) =  \" \" \l0x0073: INVOKE  (r3 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0076: INVOKE  (r8 I:java.lang.String) = (r9 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x007a: INVOKE  (r3 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007d: CONST_STR  (r8 I:java.lang.String) =  \", database not available.\" \l0x007f: INVOKE  (r3 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0082: INVOKE  (r8 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0086: INVOKE  (r0 I:java.lang.String), (r8 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l0x0089: SGET  (r8 I:int) =  org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors int \l0x008b: ARITH  (r8 I:int) = (r8 I:int) + (r2 I:int) \l0x008c: SPUT  (r8 I:int) org.osmdroid.tileprovider.util.Counters.fileCacheSaveErrors int \l}"];
Node_16 [shape=record,label="{16\:\ 0x008e|0x008e: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.modules.SqlTileWriter.remove((r7 'this' I:org.osmdroid.tileprovider.modules.SqlTileWriter A[IMMUTABLE_TYPE, THIS]), (r8 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_15;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_15[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

