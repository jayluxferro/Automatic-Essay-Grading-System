digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.TileLoader.loadTile(J)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.osmdroid.tileprovider.tilesource.ITileSource r0 = (org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.access$000(r3.this$0).get()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r0 != null) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010}"];
Node_4 [shape=record,label="{4\:\ 0x0016|if (org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.access$100(r3.this$0) == null) goto L_0x006a\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|SYNTHETIC\lSplitter:B:5:0x0018\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ LowMemoryException \-\> 0x003b, Throwable \-\> 0x0032 \}\lSplitter:B:5:0x0018\l|android.graphics.drawable.Drawable r0 = org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.access$100(r3.this$0).loadTile(r0, r4)     \/\/ Catch:\{ LowMemoryException \-\> 0x003b, Throwable \-\> 0x0032 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|Catch:\{ LowMemoryException \-\> 0x003b, Throwable \-\> 0x0032 \}\l|if (r0 != null) goto L_0x002b     \/\/ Catch:\{ LowMemoryException \-\> 0x003b, Throwable \-\> 0x0032 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|Catch:\{ LowMemoryException \-\> 0x003b, Throwable \-\> 0x0032 \}\l|org.osmdroid.tileprovider.util.Counters.fileCacheMiss = org.osmdroid.tileprovider.util.Counters.fileCacheMiss + 1     \/\/ Catch:\{ LowMemoryException \-\> 0x003b, Throwable \-\> 0x0032 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|Catch:\{ LowMemoryException \-\> 0x003b, Throwable \-\> 0x0032 \}\l|org.osmdroid.tileprovider.util.Counters.fileCacheHit = org.osmdroid.tileprovider.util.Counters.fileCacheHit + 1     \/\/ Catch:\{ LowMemoryException \-\> 0x003b, Throwable \-\> 0x0032 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|RETURN\l|return r0\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|ExcHandler: Throwable (r4v8 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:5:0x0018\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x0033|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"Error loading tile\", r4)\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|RETURN\l|return null\l}"];
Node_14 [shape=record,label="{14\:\ 0x003b|ExcHandler: LowMemoryException (r0v4 'e' org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase$LowMemoryException A[CUSTOM_DECLARE])\lSplitter:B:5:0x0018\l|org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase$LowMemoryException r0 = move\-exception\l}"];
Node_15 [shape=record,label="{15\:\ 0x003c|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"LowMemoryException downloading MapTile: \")\lr1.append(org.osmdroid.util.MapTileIndex.toString(r4))\lr1.append(\" : \")\lr1.append(r0)\landroid.util.Log.w(org.osmdroid.api.IMapView.LOGTAG, r1.toString())\lorg.osmdroid.tileprovider.util.Counters.fileCacheOOM = org.osmdroid.tileprovider.util.Counters.fileCacheOOM + 1\l}"];
Node_16 [shape=record,label="{16\:\ 0x0069|throw new org.osmdroid.tileprovider.modules.CantContinueException((java.lang.Throwable) r0)\l}"];
Node_17 [shape=record,label="{17\:\ 0x006a|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"TileLoader failed to load tile due to mWriter being null (map shutdown?)\")\l}"];
Node_18 [shape=record,label="{18\:\ 0x0071|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider.TileLoader.loadTile((r3v0 'this' org.osmdroid.tileprovider.modules.MapTileSqlCacheProvider$TileLoader A[IMMUTABLE_TYPE, THIS]), (r4v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.osmdroid.tileprovider.modules.CantContinueException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_5 -> Node_14;
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

