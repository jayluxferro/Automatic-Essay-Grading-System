digraph "CFG fororg.osmdroid.tileprovider.modules.ZipFileArchive.getZipFileArchive(Ljava\/io\/File;)Lorg\/osmdroid\/tileprovider\/modules\/ZipFileArchive;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:org.osmdroid.tileprovider.modules.ZipFileArchive) =  org.osmdroid.tileprovider.modules.ZipFileArchive \l0x0002: NEW_INSTANCE  (r1 I:java.util.zip.ZipFile) =  java.util.zip.ZipFile \l0x0004: INVOKE  (r1 I:java.util.zip.ZipFile), (r2 I:java.io.File) java.util.zip.ZipFile.\<init\>(java.io.File):void type: DIRECT \l0x0007: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.modules.ZipFileArchive)\l  (r1 I:java.util.zip.ZipFile)\l org.osmdroid.tileprovider.modules.ZipFileArchive.\<init\>(java.util.zip.ZipFile):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: RETURN  (r0 I:org.osmdroid.tileprovider.modules.ZipFileArchive) \l}"];
MethodNode[shape=record,label="{public static org.osmdroid.tileprovider.modules.ZipFileArchive org.osmdroid.tileprovider.modules.ZipFileArchive.getZipFileArchive((r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.util.zip.ZipException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

