digraph "CFG fororg.osmdroid.tileprovider.modules.ZipFileArchive.getInputStream(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:boolean) = (r3 I:org.osmdroid.tileprovider.modules.ZipFileArchive) org.osmdroid.tileprovider.modules.ZipFileArchive.mIgnoreTileSource boolean A[Catch:\{ IOException \-\> 0x0051 \}, TRY_ENTER]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0017 A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INVOKE  (r4 I:java.lang.String) = \l  (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l  (r5 I:long)\l org.osmdroid.tileprovider.tilesource.ITileSource.getTileRelativeFilenameString(long):java.lang.String type: INTERFACE A[Catch:\{ IOException \-\> 0x0051 \}]\l0x0008: IGET  (r0 I:java.util.zip.ZipFile) = (r3 I:org.osmdroid.tileprovider.modules.ZipFileArchive) org.osmdroid.tileprovider.modules.ZipFileArchive.mZipFile java.util.zip.ZipFile A[Catch:\{ IOException \-\> 0x0051 \}]\l0x000a: INVOKE  (r4 I:java.util.zip.ZipEntry) = (r0 I:java.util.zip.ZipFile), (r4 I:java.lang.String) java.util.zip.ZipFile.getEntry(java.lang.String):java.util.zip.ZipEntry type: VIRTUAL A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x006c A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IGET  (r0 I:java.util.zip.ZipFile) = (r3 I:org.osmdroid.tileprovider.modules.ZipFileArchive) org.osmdroid.tileprovider.modules.ZipFileArchive.mZipFile java.util.zip.ZipFile A[Catch:\{ IOException \-\> 0x0051 \}]\l0x0012: INVOKE  (r4 I:java.io.InputStream) = (r0 I:java.util.zip.ZipFile), (r4 I:java.util.zip.ZipEntry) java.util.zip.ZipFile.getInputStream(java.util.zip.ZipEntry):java.io.InputStream type: VIRTUAL A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: RETURN  (r4 I:java.io.InputStream) A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|0x0017: IGET  (r4 I:java.util.zip.ZipFile) = (r3 I:org.osmdroid.tileprovider.modules.ZipFileArchive) org.osmdroid.tileprovider.modules.ZipFileArchive.mZipFile java.util.zip.ZipFile A[Catch:\{ IOException \-\> 0x0051 \}]\l0x0019: INVOKE  (r4 I:java.util.Enumeration) = (r4 I:java.util.zip.ZipFile) java.util.zip.ZipFile.entries():java.util.Enumeration type: VIRTUAL A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: INVOKE  (r0 I:boolean) = (r4 I:java.util.Enumeration) java.util.Enumeration.hasMoreElements():boolean type: INTERFACE A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x006c A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: INVOKE  (r0 I:java.lang.Object) = (r4 I:java.util.Enumeration) java.util.Enumeration.nextElement():java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x0051 \}]\l0x0027: CHECK_CAST  (r0 I:java.util.zip.ZipEntry) = (java.util.zip.ZipEntry) (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x0051 \}]\l0x0029: INVOKE  (r0 I:java.lang.String) = (r0 I:java.util.zip.ZipEntry) java.util.zip.ZipEntry.getName():java.lang.String type: VIRTUAL A[Catch:\{ IOException \-\> 0x0051 \}]\l0x002d: CONST_STR  (r1 I:java.lang.String) =  \"\/\" A[Catch:\{ IOException \-\> 0x0051 \}]\l0x002f: INVOKE  (r1 I:boolean) = (r0 I:java.lang.String), (r1 I:java.lang.CharSequence) java.lang.String.contains(java.lang.CharSequence):boolean type: VIRTUAL A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0035|0x0035: CONST_STR  (r1 I:java.lang.String) =  \"\/\" A[Catch:\{ IOException \-\> 0x0051 \}]\l0x0037: INVOKE  (r0 I:java.lang.String[]) = (r0 I:java.lang.String), (r1 I:java.lang.String) java.lang.String.split(java.lang.String):java.lang.String[] type: VIRTUAL A[Catch:\{ IOException \-\> 0x0051 \}]\l0x003b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x0051 \}]\l0x003c: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) A[Catch:\{ IOException \-\> 0x0051 \}]\l0x003e: INVOKE  (r0 I:java.lang.String) = \l  (r3 I:org.osmdroid.tileprovider.modules.ZipFileArchive)\l  (r5 I:long)\l  (r0 I:java.lang.String)\l org.osmdroid.tileprovider.modules.ZipFileArchive.getTileRelativeFilenameString(long, java.lang.String):java.lang.String type: DIRECT A[Catch:\{ IOException \-\> 0x0051 \}]\l0x0042: IGET  (r1 I:java.util.zip.ZipFile) = (r3 I:org.osmdroid.tileprovider.modules.ZipFileArchive) org.osmdroid.tileprovider.modules.ZipFileArchive.mZipFile java.util.zip.ZipFile A[Catch:\{ IOException \-\> 0x0051 \}]\l0x0044: INVOKE  (r0 I:java.util.zip.ZipEntry) = (r1 I:java.util.zip.ZipFile), (r0 I:java.lang.String) java.util.zip.ZipFile.getEntry(java.lang.String):java.util.zip.ZipEntry type: VIRTUAL A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0048|0x0048: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001d A[Catch:\{ IOException \-\> 0x0051 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x004a|0x004a: IGET  (r4 I:java.util.zip.ZipFile) = (r3 I:org.osmdroid.tileprovider.modules.ZipFileArchive) org.osmdroid.tileprovider.modules.ZipFileArchive.mZipFile java.util.zip.ZipFile A[Catch:\{ IOException \-\> 0x0051 \}]\l0x004c: INVOKE  (r4 I:java.io.InputStream) = (r4 I:java.util.zip.ZipFile), (r0 I:java.util.zip.ZipEntry) java.util.zip.ZipFile.getInputStream(java.util.zip.ZipEntry):java.io.InputStream type: VIRTUAL A[Catch:\{ IOException \-\> 0x0051 \}]\l0x004f: NOP   A[TRY_LEAVE]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0050|0x0050: RETURN  (r4 I:java.io.InputStream) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0051|ExcHandler: IOException null\lSplitter:B:0:0x0000\l|0x0051: MOVE_EXCEPTION  (r4 I:?[OBJECT]) =  \l}"];
Node_17 [shape=record,label="{17\:\ 0x0052|0x0052: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" \l0x0054: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0056: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0059: CONST_STR  (r2 I:java.lang.String) =  \"Error getting zip stream: \" \l0x005b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005e: INVOKE  (r5 I:java.lang.String) = (r5 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x0062: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0065: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0069: INVOKE  \l  (r0 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r4 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x006c|0x006c: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x006d|0x006d: RETURN  (r4 I:java.io.InputStream) \l}"];
MethodNode[shape=record,label="{public java.io.InputStream org.osmdroid.tileprovider.modules.ZipFileArchive.getInputStream((r3 'this' I:org.osmdroid.tileprovider.modules.ZipFileArchive A[IMMUTABLE_TYPE, THIS]), (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_16;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_18;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_11;
Node_11 -> Node_8;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_8;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_15;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
}

