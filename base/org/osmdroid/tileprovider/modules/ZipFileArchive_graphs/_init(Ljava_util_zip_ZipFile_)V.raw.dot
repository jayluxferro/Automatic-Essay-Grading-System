digraph "CFG fororg.osmdroid.tileprovider.modules.ZipFileArchive.\<init\>(Ljava\/util\/zip\/ZipFile;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:boolean)\l  (r1 I:org.osmdroid.tileprovider.modules.ZipFileArchive)\l org.osmdroid.tileprovider.modules.ZipFileArchive.mIgnoreTileSource boolean \l0x0006: IPUT  \l  (r2 I:java.util.zip.ZipFile)\l  (r1 I:org.osmdroid.tileprovider.modules.ZipFileArchive)\l org.osmdroid.tileprovider.modules.ZipFileArchive.mZipFile java.util.zip.ZipFile \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.modules.ZipFileArchive.\<init\>((r1 'this' I:org.osmdroid.tileprovider.modules.ZipFileArchive A[IMMUTABLE_TYPE, THIS]), (r2 I:java.util.zip.ZipFile A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

