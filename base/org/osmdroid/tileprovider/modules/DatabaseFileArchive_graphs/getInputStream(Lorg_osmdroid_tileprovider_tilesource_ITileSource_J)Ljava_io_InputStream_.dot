digraph "CFG fororg.osmdroid.tileprovider.modules.DatabaseFileArchive.getInputStream(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Throwable \-\> 0x0011 \}\lSplitter:B:1:0x0001\l|byte[] r5 = getImage(r5, r6)     \/\/ Catch:\{ Throwable \-\> 0x0011 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|Catch:\{ Throwable \-\> 0x0011 \}\l|if (r5 == null) goto L_0x000d     \/\/ Catch:\{ Throwable \-\> 0x0011 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|Catch:\{ Throwable \-\> 0x0011 \}\l|java.io.ByteArrayInputStream r1 = new java.io.ByteArrayInputStream(r5)     \/\/ Catch:\{ Throwable \-\> 0x0011 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|r1 = null\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|PHI: r1 \l  PHI: (r1v1 java.io.ByteArrayInputStream) = (r1v2 java.io.ByteArrayInputStream), (r1v3 java.io.ByteArrayInputStream) binds: [B:5:0x000d, B:4:0x0007] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L_0x002c\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|RETURN\l|return r1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|ExcHandler: Throwable (r5v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:1:0x0001\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Error getting db stream: \")\lr2.append(org.osmdroid.util.MapTileIndex.toString(r6))\landroid.util.Log.w(org.osmdroid.api.IMapView.LOGTAG, r2.toString(), r5)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public java.io.InputStream org.osmdroid.tileprovider.modules.DatabaseFileArchive.getInputStream((r4v0 'this' org.osmdroid.tileprovider.modules.DatabaseFileArchive A[IMMUTABLE_TYPE, THIS]), (r5v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

