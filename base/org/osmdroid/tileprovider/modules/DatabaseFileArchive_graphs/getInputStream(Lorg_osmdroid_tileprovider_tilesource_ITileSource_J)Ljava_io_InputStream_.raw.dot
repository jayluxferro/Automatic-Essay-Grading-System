digraph "CFG fororg.osmdroid.tileprovider.modules.DatabaseFileArchive.getInputStream(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r5 I:byte[]) = \l  (r4 I:org.osmdroid.tileprovider.modules.DatabaseFileArchive)\l  (r5 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l  (r6 I:long)\l org.osmdroid.tileprovider.modules.DatabaseFileArchive.getImage(org.osmdroid.tileprovider.tilesource.ITileSource, long):byte[] type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0011 \}, TRY_ENTER]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000d A[Catch:\{ Throwable \-\> 0x0011 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: NEW_INSTANCE  (r1 I:java.io.ByteArrayInputStream) =  java.io.ByteArrayInputStream A[Catch:\{ Throwable \-\> 0x0011 \}]\l0x0009: INVOKE  (r1 I:java.io.ByteArrayInputStream), (r5 I:byte[]) java.io.ByteArrayInputStream.\<init\>(byte[]):void type: DIRECT A[Catch:\{ Throwable \-\> 0x0011 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0010|0x0010: RETURN  (r1 I:java.io.InputStream) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|ExcHandler: Throwable null\lSplitter:B:1:0x0001\l|0x0011: MOVE_EXCEPTION  (r5 I:?[OBJECT]) =  \l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|0x0012: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l0x0014: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0016: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0019: CONST_STR  (r3 I:java.lang.String) =  \"Error getting db stream: \" \l0x001b: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001e: INVOKE  (r6 I:java.lang.String) = (r6 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x0022: INVOKE  (r2 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0025: INVOKE  (r6 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0029: INVOKE  \l  (r1 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r5 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: RETURN  (r0 I:java.io.InputStream) \l}"];
MethodNode[shape=record,label="{public java.io.InputStream org.osmdroid.tileprovider.modules.DatabaseFileArchive.getInputStream((r4 'this' I:org.osmdroid.tileprovider.modules.DatabaseFileArchive A[IMMUTABLE_TYPE, THIS]), (r5 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

