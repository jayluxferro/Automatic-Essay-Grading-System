digraph "CFG fororg.osmdroid.tileprovider.modules.DatabaseFileArchive.getTileSources()Ljava\/util\/Set;" {
subgraph cluster_Region_1279406191 {
label = "R(3:0|(3:2|(1:5)|6)|9)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.HashSet java.util.HashSet r0 = new java.util.HashSet()\l}"];
subgraph cluster_TryCatchRegion_1414002543 {
label = "Try: R(3:2|(1:5)|6) catches: R(2:7|8)";
node [shape=record,color=blue];
subgraph cluster_Region_1416371983 {
label = "R(3:2|(1:5)|6)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x0021 \}\lSplitter:B:1:0x0005\l|android.database.Cursor android.database.Cursor r1 = r4.mDatabase.rawQuery(\"SELECT distinct provider FROM tiles\", (java.lang.String[]) null)     \/\/ Catch:\{ Exception \-\> 0x0021 \}\l}"];
subgraph cluster_LoopRegion_234524764 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|Catch:\{ Exception \-\> 0x0021 \}\l|if (r1.moveToNext() != false) goto L_0x0014     \/\/ Catch:\{ Exception \-\> 0x0021 \}\l}"];
subgraph cluster_Region_347498048 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|LOOP_END\lCatch:\{ Exception \-\> 0x0021 \}\lLOOP:0: B:3:0x000e\-\>B:5:0x0014\l|r0.add(r1.getString(0))     \/\/ Catch:\{ Exception \-\> 0x0021 \}\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x001d|Catch:\{ Exception \-\> 0x0021 \}\l|r1.close()     \/\/ Catch:\{ Exception \-\> 0x0021 \}\l}"];
}
subgraph cluster_Region_571504516 {
label = "R(2:7|8) | ExcHandler: Exception (r1v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|ExcHandler: Exception (r1v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:1:0x0005\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|android.util.Log.w(org.osmdroid.api.IMapView.LOGTAG, \"Error getting tile sources: \", r1)\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x0029|RETURN\l|return r0\l}"];
}
subgraph cluster_Region_571504516 {
label = "R(2:7|8) | ExcHandler: Exception (r1v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0021|ExcHandler: Exception (r1v0 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:1:0x0005\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|android.util.Log.w(org.osmdroid.api.IMapView.LOGTAG, \"Error getting tile sources: \", r1)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0005|SYNTHETIC\lSplitter:B:1:0x0005\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000e|LOOP_START\lCatch:\{ Exception \-\> 0x0021 \}\lLOOP:0: B:3:0x000e\-\>B:5:0x0014\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public java.util.Set\<java.lang.String\> org.osmdroid.tileprovider.modules.DatabaseFileArchive.getTileSources((r4v0 'this' org.osmdroid.tileprovider.modules.DatabaseFileArchive A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/Set\<, Ljava\/lang\/String;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_10[style=dashed];
Node_5 -> Node_3;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_3 -> Node_4;
Node_10 -> Node_6;
}

