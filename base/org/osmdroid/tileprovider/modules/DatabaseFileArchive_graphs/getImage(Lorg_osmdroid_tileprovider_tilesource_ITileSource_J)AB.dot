digraph "CFG fororg.osmdroid.tileprovider.modules.DatabaseFileArchive.getImage(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r11.mDatabase == null) goto L_0x00b9\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r11.mDatabase.isOpen() != false) goto L_0x000f\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f}"];
Node_5 [shape=record,label="{5\:\ 0x0011|SYNTHETIC\lSplitter:B:5:0x0011\l}"];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ Throwable \-\> 0x009d \}\lSplitter:B:5:0x0011\l|java.lang.String[] r4 = new java.lang.String[]\{COLUMN_TILE\}     \/\/ Catch:\{ Throwable \-\> 0x009d \}\llong r2 = (long) org.osmdroid.util.MapTileIndex.getX(r13)     \/\/ Catch:\{ Throwable \-\> 0x009d \}\llong r5 = (long) org.osmdroid.util.MapTileIndex.getY(r13)     \/\/ Catch:\{ Throwable \-\> 0x009d \}\llong r7 = (long) org.osmdroid.util.MapTileIndex.getZoom(r13)     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lint r0 = (int) r7     \/\/ Catch:\{ Throwable \-\> 0x009d \}\llong r2 = (((r7 \<\< r0) + r2) \<\< r0) + r5     \/\/ Catch:\{ Throwable \-\> 0x009d \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|Catch:\{ Throwable \-\> 0x009d \}\l|if (r11.mIgnoreTileSource != false) goto L_0x0069     \/\/ Catch:\{ Throwable \-\> 0x009d \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|Catch:\{ Throwable \-\> 0x009d \}\l|android.database.sqlite.SQLiteDatabase r0 = r11.mDatabase     \/\/ Catch:\{ Throwable \-\> 0x009d \}\ljava.lang.StringBuilder r6 = new java.lang.StringBuilder()     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lr6.append(\"key = \")     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lr6.append(r2)     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lr6.append(\" and \")     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lr6.append(COLUMN_PROVIDER)     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lr6.append(\" = ?\")     \/\/ Catch:\{ Throwable \-\> 0x009d \}\ljava.lang.String r6 = r6.toString()     \/\/ Catch:\{ Throwable \-\> 0x009d \}\ljava.lang.String[] r7 = new java.lang.String[]\{r12.name()\}\landroid.database.Cursor r12 = r0.query(\"tiles\", r4, r6, r7, (java.lang.String) null, (java.lang.String) null, (java.lang.String) null)     \/\/ Catch:\{ Throwable \-\> 0x009d \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0069|Catch:\{ Throwable \-\> 0x009d \}\l|android.database.sqlite.SQLiteDatabase r12 = r11.mDatabase     \/\/ Catch:\{ Throwable \-\> 0x009d \}\ljava.lang.StringBuilder r5 = new java.lang.StringBuilder()     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lr5.append(\"key = \")     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lr5.append(r2)     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lr2 = r12     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lr3 = \"tiles\"     \/\/ Catch:\{ Throwable \-\> 0x009d \}\landroid.database.Cursor r12 = r2.query(r3, r4, r5.toString(), (java.lang.String[]) null, (java.lang.String) null, (java.lang.String) null, (java.lang.String) null)     \/\/ Catch:\{ Throwable \-\> 0x009d \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0088|Catch:\{ Throwable \-\> 0x009d \}\lPHI: r12 \l  PHI: (r12v5 android.database.Cursor) = (r12v7 android.database.Cursor), (r12v10 android.database.Cursor) binds: [B:9:0x0069, B:8:0x002f] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x008c|Catch:\{ Throwable \-\> 0x009d \}\l|if (r12.getCount() == 0) goto L_0x0096     \/\/ Catch:\{ Throwable \-\> 0x009d \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x008e|Catch:\{ Throwable \-\> 0x009d \}\l|r12.moveToFirst()     \/\/ Catch:\{ Throwable \-\> 0x009d \}\lbyte[] r0 = r12.getBlob(0)     \/\/ Catch:\{ Throwable \-\> 0x009d \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0096|Catch:\{ Throwable \-\> 0x009d \}\l|r0 = null     \/\/ Catch:\{ Throwable \-\> 0x009d \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0097|Catch:\{ Throwable \-\> 0x009d \}\lPHI: r0 \l  PHI: (r0v11 byte[]) = (r0v12 byte[]), (r0v13 byte[]) binds: [B:13:0x0096, B:12:0x008e] A[DONT_GENERATE, DONT_INLINE]\l|r12.close()     \/\/ Catch:\{ Throwable \-\> 0x009d \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x009a|if (r0 == null) goto L_0x00b8\l}"];
Node_16 [shape=record,label="{16\:\ 0x009c|RETURN\l|return r0\l}"];
Node_17 [shape=record,label="{17\:\ 0x009d|ExcHandler: Throwable (r12v4 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:5:0x0011\l|java.lang.Throwable r12 = move\-exception\l}"];
Node_18 [shape=record,label="{18\:\ 0x009e|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Error getting db stream: \")\lr2.append(org.osmdroid.util.MapTileIndex.toString(r13))\landroid.util.Log.w(org.osmdroid.api.IMapView.LOGTAG, r2.toString(), r12)\l}"];
Node_19 [shape=record,label="{19\:\ 0x00b8|RETURN\l|return null\l}"];
Node_20 [shape=record,label="{20\:\ 0x00b9}"];
Node_21 [shape=record,label="{21\:\ 0x00c1|if (org.osmdroid.config.Configuration.getInstance().isDebugTileProviders() == false) goto L_0x00ca\l}"];
Node_22 [shape=record,label="{22\:\ 0x00c3|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"Skipping DatabaseFileArchive lookup, database is closed\")\l}"];
Node_23 [shape=record,label="{23\:\ 0x00ca|RETURN\l|return null\l}"];
MethodNode[shape=record,label="{public byte[] org.osmdroid.tileprovider.modules.DatabaseFileArchive.getImage((r11v0 'this' org.osmdroid.tileprovider.modules.DatabaseFileArchive A[IMMUTABLE_TYPE, THIS]), (r12v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_20[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
}

