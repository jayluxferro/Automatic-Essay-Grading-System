digraph "CFG fororg.osmdroid.tileprovider.modules.DatabaseFileArchive.getImage(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;J)[B" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.database.sqlite.SQLiteDatabase) = \l  (r11 I:org.osmdroid.tileprovider.modules.DatabaseFileArchive)\l org.osmdroid.tileprovider.modules.DatabaseFileArchive.mDatabase android.database.sqlite.SQLiteDatabase \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x00b9 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: IGET  (r0 I:android.database.sqlite.SQLiteDatabase) = \l  (r11 I:org.osmdroid.tileprovider.modules.DatabaseFileArchive)\l org.osmdroid.tileprovider.modules.DatabaseFileArchive.mDatabase android.database.sqlite.SQLiteDatabase \l0x0007: INVOKE  (r0 I:boolean) = (r0 I:android.database.sqlite.SQLiteDatabase) android.database.sqlite.SQLiteDatabase.isOpen():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000f \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: CONST_STR  (r0 I:java.lang.String) =  \"tile\" \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|SYNTHETIC\lSplitter:B:6:0x0011\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0011\l|0x0011: FILLED_NEW_ARRAY  (r4 I:java.lang.String[]) = (r0 I:java.lang.String) elemType: java.lang.String A[Catch:\{ Throwable \-\> 0x009d \}, TRY_ENTER]\l0x0015: INVOKE  (r0 I:int) = (r13 I:long) org.osmdroid.util.MapTileIndex.getX(long):int type: STATIC A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0019: CAST  (r2 I:long) = (long) (r0 I:int) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x001a: INVOKE  (r0 I:int) = (r13 I:long) org.osmdroid.util.MapTileIndex.getY(long):int type: STATIC A[Catch:\{ Throwable \-\> 0x009d \}]\l0x001e: CAST  (r5 I:long) = (long) (r0 I:int) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x001f: INVOKE  (r0 I:int) = (r13 I:long) org.osmdroid.util.MapTileIndex.getZoom(long):int type: STATIC A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0023: CAST  (r7 I:long) = (long) (r0 I:int) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0024: CAST  (r0 I:int) = (int) (r7 I:long) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0025: ARITH  (r7 I:long) = (r7 I:long) \<\< (r0 I:long) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0026: ARITH  (r7 I:long) = (r7 I:long) + (r2 I:long) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0027: ARITH  (r2 I:long) = (r7 I:long) \<\< (r0 I:long) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0029: ARITH  (r2 I:long) = (r2 I:long) + (r5 I:long) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x002a: IGET  (r0 I:boolean) = \l  (r11 I:org.osmdroid.tileprovider.modules.DatabaseFileArchive)\l org.osmdroid.tileprovider.modules.DatabaseFileArchive.mIgnoreTileSource boolean A[Catch:\{ Throwable \-\> 0x009d \}]\l0x002c: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x009d \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0069 A[Catch:\{ Throwable \-\> 0x009d \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: IGET  (r0 I:android.database.sqlite.SQLiteDatabase) = \l  (r11 I:org.osmdroid.tileprovider.modules.DatabaseFileArchive)\l org.osmdroid.tileprovider.modules.DatabaseFileArchive.mDatabase android.database.sqlite.SQLiteDatabase A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0031: CONST_STR  (r5 I:java.lang.String) =  \"tiles\" A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0033: NEW_INSTANCE  (r6 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0035: INVOKE  (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0038: CONST_STR  (r7 I:java.lang.String) =  \"key = \" A[Catch:\{ Throwable \-\> 0x009d \}]\l0x003a: INVOKE  (r6 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l0x003d: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0040: CONST_STR  (r2 I:java.lang.String) =  \" and \" A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0042: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0045: CONST_STR  (r2 I:java.lang.String) =  \"provider\" A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0047: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l0x004a: CONST_STR  (r2 I:java.lang.String) =  \" = ?\" A[Catch:\{ Throwable \-\> 0x009d \}]\l0x004c: INVOKE  (r6 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l0x004f: INVOKE  (r6 I:java.lang.String) = (r6 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0053: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0054: NEW_ARRAY  (r7 I:java.lang.String[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0056: INVOKE  (r12 I:java.lang.String) = (r12 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.name():java.lang.String type: INTERFACE A[Catch:\{ Throwable \-\> 0x009d \}]\l0x005a: APUT  \l  (r7 I:?[OBJECT, ARRAY][])\l  (r10 I:?[int, short, byte, char])\l  (r12 I:?[OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x009d \}]\l0x005c: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x009d \}]\l0x005d: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x009d \}]\l0x005e: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x009d \}]\l0x005f: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0060: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0061: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0062: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0063: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0064: INVOKE  (r12 I:android.database.Cursor) = \l  (r2 I:android.database.sqlite.SQLiteDatabase)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String[])\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String[])\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String):android.database.Cursor type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0068: GOTO  \-\> 0x0088 A[Catch:\{ Throwable \-\> 0x009d \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0069|0x0069: IGET  (r12 I:android.database.sqlite.SQLiteDatabase) = \l  (r11 I:org.osmdroid.tileprovider.modules.DatabaseFileArchive)\l org.osmdroid.tileprovider.modules.DatabaseFileArchive.mDatabase android.database.sqlite.SQLiteDatabase A[Catch:\{ Throwable \-\> 0x009d \}]\l0x006b: CONST_STR  (r0 I:java.lang.String) =  \"tiles\" A[Catch:\{ Throwable \-\> 0x009d \}]\l0x006d: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Throwable \-\> 0x009d \}]\l0x006f: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0072: CONST_STR  (r6 I:java.lang.String) =  \"key = \" A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0074: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0077: INVOKE  (r5 I:java.lang.StringBuilder), (r2 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l0x007a: INVOKE  (r5 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l0x007e: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x009d \}]\l0x007f: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0080: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0081: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0082: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0083: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0084: INVOKE  (r12 I:android.database.Cursor) = \l  (r2 I:android.database.sqlite.SQLiteDatabase)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String[])\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String[])\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l  (r9 I:java.lang.String)\l android.database.sqlite.SQLiteDatabase.query(java.lang.String, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String, java.lang.String, java.lang.String):android.database.Cursor type: VIRTUAL A[Catch:\{ Throwable \-\> 0x009d \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0088|0x0088: INVOKE  (r0 I:int) = (r12 I:android.database.Cursor) android.database.Cursor.getCount():int type: INTERFACE A[Catch:\{ Throwable \-\> 0x009d \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x008c|0x008c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0096 A[Catch:\{ Throwable \-\> 0x009d \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x008e|0x008e: INVOKE  (r12 I:android.database.Cursor) android.database.Cursor.moveToFirst():boolean type: INTERFACE A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0091: INVOKE  (r0 I:byte[]) = (r12 I:android.database.Cursor), (r10 I:int) android.database.Cursor.getBlob(int):byte[] type: INTERFACE A[Catch:\{ Throwable \-\> 0x009d \}]\l0x0095: GOTO  \-\> 0x0097 A[Catch:\{ Throwable \-\> 0x009d \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0096|0x0096: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x009d \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0097|0x0097: INVOKE  (r12 I:android.database.Cursor) android.database.Cursor.close():void type: INTERFACE A[Catch:\{ Throwable \-\> 0x009d \}, TRY_LEAVE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x009a|0x009a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x00b8 \l}"];
Node_17 [shape=record,label="{17\:\ 0x009c|0x009c: RETURN  (r0 I:byte[]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x009d|ExcHandler: Throwable null\lSplitter:B:6:0x0011\l|0x009d: MOVE_EXCEPTION  (r12 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x009e|0x009e: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" \l0x00a0: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00a2: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00a5: CONST_STR  (r3 I:java.lang.String) =  \"Error getting db stream: \" \l0x00a7: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00aa: INVOKE  (r13 I:java.lang.String) = (r13 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x00ae: INVOKE  (r2 I:java.lang.StringBuilder), (r13 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b1: INVOKE  (r13 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b5: INVOKE  \l  (r0 I:java.lang.String)\l  (r13 I:java.lang.String)\l  (r12 I:java.lang.Throwable)\l android.util.Log.w(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_20 [shape=record,label="{20\:\ 0x00b8|0x00b8: RETURN  (r1 I:byte[]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x00b9|0x00b9: INVOKE  (r12 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x00bd: INVOKE  (r12 I:boolean) = (r12 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugTileProviders():boolean type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x00c1|0x00c1: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00ca \l}"];
Node_23 [shape=record,label="{23\:\ 0x00c3|0x00c3: CONST_STR  (r12 I:java.lang.String) =  \"OsmDroid\" \l0x00c5: CONST_STR  (r13 I:java.lang.String) =  \"Skipping DatabaseFileArchive lookup, database is closed\" \l0x00c7: INVOKE  (r12 I:java.lang.String), (r13 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_24 [shape=record,label="{24\:\ 0x00ca|0x00ca: RETURN  (r1 I:byte[]) \l}"];
MethodNode[shape=record,label="{public byte[] org.osmdroid.tileprovider.modules.DatabaseFileArchive.getImage((r11 'this' I:org.osmdroid.tileprovider.modules.DatabaseFileArchive A[IMMUTABLE_TYPE, THIS]), (r12 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_21[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_18;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
}

