digraph "CFG fororg.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.TileLoader.loadTile(J)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.osmdroid.tileprovider.tilesource.ITileSource r0 = (org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.access$000(r6.this$0).get()\lr1 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r0 != null) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|RETURN\l|return null\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|SYNTHETIC\lSplitter:B:3:0x0010\l}"];
Node_4 [shape=record,label="{4\:\ ?|Catch:\{ Throwable \-\> 0x0071, all \-\> 0x006e \}\lSplitter:B:3:0x0010\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|Catch:\{ Throwable \-\> 0x0071, all \-\> 0x006e \}\l|if (org.osmdroid.config.Configuration.getInstance().isDebugMode() == false) goto L_0x0034     \/\/ Catch:\{ Throwable \-\> 0x0071, all \-\> 0x006e \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|Catch:\{ Throwable \-\> 0x0071, all \-\> 0x006e \}\l|java.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ Throwable \-\> 0x0071, all \-\> 0x006e \}\lr3.append(\"Archives \- Tile doesn't exist: \")     \/\/ Catch:\{ Throwable \-\> 0x0071, all \-\> 0x006e \}\lr3.append(org.osmdroid.util.MapTileIndex.toString(r7))     \/\/ Catch:\{ Throwable \-\> 0x0071, all \-\> 0x006e \}\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r3.toString())     \/\/ Catch:\{ Throwable \-\> 0x0071, all \-\> 0x006e \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0034|Catch:\{ Throwable \-\> 0x0071, all \-\> 0x006e \}\l|java.io.InputStream r2 = org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.access$100(r6.this$0, r7, r0)     \/\/ Catch:\{ Throwable \-\> 0x0071, all \-\> 0x006e \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x003a|if (r2 == null) goto L_0x0068\l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|SYNTHETIC\lSplitter:B:9:0x003c\l}"];
Node_10 [shape=record,label="{10\:\ ?|Catch:\{ Throwable \-\> 0x0066 \}\lSplitter:B:9:0x003c\l}"];
Node_11 [shape=record,label="{11\:\ 0x0044|Catch:\{ Throwable \-\> 0x0066 \}\l|if (org.osmdroid.config.Configuration.getInstance().isDebugMode() == false) goto L_0x0060     \/\/ Catch:\{ Throwable \-\> 0x0066 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|Catch:\{ Throwable \-\> 0x0066 \}\l|java.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch:\{ Throwable \-\> 0x0066 \}\lr4.append(\"Use tile from archive: \")     \/\/ Catch:\{ Throwable \-\> 0x0066 \}\lr4.append(org.osmdroid.util.MapTileIndex.toString(r7))     \/\/ Catch:\{ Throwable \-\> 0x0066 \}\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r4.toString())     \/\/ Catch:\{ Throwable \-\> 0x0066 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0060|Catch:\{ Throwable \-\> 0x0066 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0064|r1 = r0.getDrawable(r2)     \/\/ Catch:\{ Throwable \-\> 0x0066 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x0066|ExcHandler: Throwable (th java.lang.Throwable)\lSplitter:B:9:0x003c\l|java.lang.Throwable r7 = th\l}"];
Node_16 [shape=record,label="{16\:\ 0x0068|PHI: r1 \l  PHI: (r1v3 android.graphics.drawable.Drawable) = (r1v0 android.graphics.drawable.Drawable), (r1v4 android.graphics.drawable.Drawable) binds: [B:8:0x003a, B:14:0x0064] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == null) goto L_0x007d\l}"];
Node_17 [shape=record,label="{17\:\ 0x006a|PHI: r1 r2 \l  PHI: (r1v2 android.graphics.drawable.Drawable) = (r1v0 android.graphics.drawable.Drawable), (r1v3 android.graphics.drawable.Drawable) binds: [B:25:0x007a, B:16:0x0068] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v4 java.io.InputStream) = (r2v1 java.io.InputStream), (r2v8 java.io.InputStream) binds: [B:25:0x007a, B:16:0x0068] A[DONT_GENERATE, DONT_INLINE]\l|org.osmdroid.tileprovider.util.StreamUtils.closeStream(r2)\l}"];
Node_18 [shape=record,label="{18\:\ 0x006e|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:3:0x0010\l|java.lang.Throwable r7 = th\l}"];
Node_19 [shape=record,label="{19\:\ 0x006f|r2 = null\l}"];
Node_20 [shape=record,label="{20\:\ 0x0071|ExcHandler: Throwable (th java.lang.Throwable)\lSplitter:B:3:0x0010\l|java.lang.Throwable r7 = th\l}"];
Node_21 [shape=record,label="{21\:\ 0x0072|r2 = null\l}"];
Node_22 [shape=record,label="{22\:\ 0x0073|PHI: r2 r7 \l  PHI: (r2v1 java.io.InputStream) = (r2v2 java.io.InputStream), (r2v8 java.io.InputStream) binds: [B:21:0x0072, B:15:0x0066] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v2 'th' java.lang.Throwable) = (r7v4 'th' java.lang.Throwable), (r7v6 'th' java.lang.Throwable) binds: [B:21:0x0072, B:15:0x0066] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0077|SYNTHETIC\lSplitter:B:23:0x0077\l}"];
Node_24 [shape=record,label="{24\:\ ?|Catch:\{ all \-\> 0x007e \}\lSplitter:B:23:0x0077\l|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"Error loading tile\", r7)     \/\/ Catch:\{ all \-\> 0x007e \}\l}"];
Node_25 [shape=record,label="{25\:\ 0x007a|if (r2 == null) goto L_0x007d\l}"];
Node_26 [shape=record,label="{26\:\ 0x007d|RETURN\lPHI: r1 \l  PHI: (r1v1 android.graphics.drawable.Drawable) = (r1v0 android.graphics.drawable.Drawable), (r1v2 android.graphics.drawable.Drawable), (r1v3 android.graphics.drawable.Drawable) binds: [B:25:0x007a, B:17:0x006a, B:16:0x0068] A[DONT_GENERATE, DONT_INLINE]\l|return r1\l}"];
Node_27 [shape=record,label="{27\:\ 0x007e|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:23:0x0077\l|java.lang.Throwable r7 = th\l}"];
Node_28 [shape=record,label="{28\:\ 0x007f|PHI: r2 r7 \l  PHI: (r2v0 java.io.InputStream) = (r2v1 java.io.InputStream), (r2v3 java.io.InputStream) binds: [B:27:0x007e, B:19:0x006f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v1 'th' java.lang.Throwable) = (r7v3 'th' java.lang.Throwable), (r7v5 'th' java.lang.Throwable) binds: [B:27:0x007e, B:19:0x006f] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == null) goto L_0x0084\l}"];
Node_29 [shape=record,label="{29\:\ 0x0081|org.osmdroid.tileprovider.util.StreamUtils.closeStream(r2)\l}"];
Node_30 [shape=record,label="{30\:\ 0x0084|throw r7\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.TileLoader.loadTile((r6v0 'this' org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider$TileLoader A[IMMUTABLE_TYPE, THIS]), (r7v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_20;
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_16;
Node_15 -> Node_22;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_26;
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_28;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_27;
Node_24 -> Node_25;
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_25 -> Node_17[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_30;
}

