digraph "CFG fororg.osmdroid.tileprovider.ExpirableBitmapDrawable.\<init\>(Landroid\/graphics\/Bitmap;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r0 I:android.graphics.drawable.BitmapDrawable)\l  (r1 I:android.graphics.Bitmap)\l android.graphics.drawable.BitmapDrawable.\<init\>(android.graphics.Bitmap):void type: DIRECT \l0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0006: IPUT  \l  (r1 I:int[])\l  (r0 I:org.osmdroid.tileprovider.ExpirableBitmapDrawable)\l org.osmdroid.tileprovider.ExpirableBitmapDrawable.mState int[] \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.ExpirableBitmapDrawable.\<init\>((r0 'this' I:org.osmdroid.tileprovider.ExpirableBitmapDrawable A[IMMUTABLE_TYPE, THIS]), (r1 I:android.graphics.Bitmap A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

