digraph "CFG fororg.osmdroid.tileprovider.TileStates.initialiseLoop()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  (r0 I:boolean), (r1 I:org.osmdroid.tileprovider.TileStates) org.osmdroid.tileprovider.TileStates.mDone boolean \l0x0003: IPUT  (r0 I:int), (r1 I:org.osmdroid.tileprovider.TileStates) org.osmdroid.tileprovider.TileStates.mTotal int \l0x0005: IPUT  (r0 I:int), (r1 I:org.osmdroid.tileprovider.TileStates) org.osmdroid.tileprovider.TileStates.mUpToDate int \l0x0007: IPUT  (r0 I:int), (r1 I:org.osmdroid.tileprovider.TileStates) org.osmdroid.tileprovider.TileStates.mExpired int \l0x0009: IPUT  (r0 I:int), (r1 I:org.osmdroid.tileprovider.TileStates) org.osmdroid.tileprovider.TileStates.mScaled int \l0x000b: IPUT  (r0 I:int), (r1 I:org.osmdroid.tileprovider.TileStates) org.osmdroid.tileprovider.TileStates.mNotFound int \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.TileStates.initialiseLoop((r1 'this' I:org.osmdroid.tileprovider.TileStates A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

