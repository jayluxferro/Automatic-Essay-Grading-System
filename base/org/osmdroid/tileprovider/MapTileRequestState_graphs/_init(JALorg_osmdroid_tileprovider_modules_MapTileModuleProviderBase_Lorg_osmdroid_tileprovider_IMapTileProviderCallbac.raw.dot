digraph "CFG fororg.osmdroid.tileprovider.MapTileRequestState.\<init\>(J[Lorg\/osmdroid\/tileprovider\/modules\/MapTileModuleProviderBase;Lorg\/osmdroid\/tileprovider\/IMapTileProviderCallback;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0005: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.util.List\<org.osmdroid.tileprovider.modules.MapTileModuleProviderBase\>)\l  (r1 I:org.osmdroid.tileprovider.MapTileRequestState)\l org.osmdroid.tileprovider.MapTileRequestState.mProviderQueue java.util.List \l0x000a: IGET  (r0 I:java.util.List\<org.osmdroid.tileprovider.modules.MapTileModuleProviderBase\>) = (r1 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.mProviderQueue java.util.List \l0x000c: INVOKE  (r0 I:java.util.Collection), (r4 I:java.lang.Object[]) java.util.Collections.addAll(java.util.Collection, java.lang.Object[]):boolean type: STATIC \l0x000f: IPUT  \l  (r2 I:long)\l  (r1 I:org.osmdroid.tileprovider.MapTileRequestState)\l org.osmdroid.tileprovider.MapTileRequestState.mMapTileIndex long \l0x0011: IPUT  \l  (r5 I:org.osmdroid.tileprovider.IMapTileProviderCallback)\l  (r1 I:org.osmdroid.tileprovider.MapTileRequestState)\l org.osmdroid.tileprovider.MapTileRequestState.mCallback org.osmdroid.tileprovider.IMapTileProviderCallback \l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileRequestState.\<init\>((r1 'this' I:org.osmdroid.tileprovider.MapTileRequestState A[IMMUTABLE_TYPE, THIS]), (r2 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.osmdroid.tileprovider.IMapTileProviderCallback A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

