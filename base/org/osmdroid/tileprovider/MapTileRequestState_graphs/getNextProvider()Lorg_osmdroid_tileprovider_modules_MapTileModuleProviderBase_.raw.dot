digraph "CFG fororg.osmdroid.tileprovider.MapTileRequestState.getNextProvider()Lorg\/osmdroid\/tileprovider\/modules\/MapTileModuleProviderBase;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r3 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.isEmpty():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:java.util.List\<org.osmdroid.tileprovider.modules.MapTileModuleProviderBase\>) = (r3 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.mProviderQueue java.util.List \l0x000a: IGET  (r1 I:int) = (r3 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.index int \l0x000c: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x000e: IPUT  \l  (r2 I:int)\l  (r3 I:org.osmdroid.tileprovider.MapTileRequestState)\l org.osmdroid.tileprovider.MapTileRequestState.index int \l0x0010: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0014: CHECK_CAST  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = (org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IPUT  \l  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l  (r3 I:org.osmdroid.tileprovider.MapTileRequestState)\l org.osmdroid.tileprovider.MapTileRequestState.mCurrentProvider org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l0x0018: IGET  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = (r3 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.mCurrentProvider org.osmdroid.tileprovider.modules.MapTileModuleProviderBase \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: RETURN  \l  (r0 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l \l}"];
MethodNode[shape=record,label="{public org.osmdroid.tileprovider.modules.MapTileModuleProviderBase org.osmdroid.tileprovider.MapTileRequestState.getNextProvider((r3 'this' I:org.osmdroid.tileprovider.MapTileRequestState A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

