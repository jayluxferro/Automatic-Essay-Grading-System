digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderBase.mapTileRequestFailed(Lorg\/osmdroid\/tileprovider\/MapTileRequestState;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.drawable.Drawable) = (r4 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.mTileNotFoundImage android.graphics.drawable.Drawable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0027 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:long) = (r5 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getMapTile():long type: VIRTUAL \l0x0008: IGET  (r2 I:android.graphics.drawable.Drawable) = (r4 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.mTileNotFoundImage android.graphics.drawable.Drawable \l0x000a: CONST  (r3 I:?[int, float, short, byte, char]) = (\-4 ?[int, float, short, byte, char]) \l0x000b: INVOKE  \l  (r4 I:org.osmdroid.tileprovider.MapTileProviderBase)\l  (r0 I:long)\l  (r2 I:android.graphics.drawable.Drawable)\l  (r3 I:int)\l org.osmdroid.tileprovider.MapTileProviderBase.putTileIntoCache(long, android.graphics.drawable.Drawable, int):void type: VIRTUAL \l0x000e: IGET  (r0 I:java.util.Collection\<android.os.Handler\>) = (r4 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.mTileRequestCompleteHandlers java.util.Collection \l0x0010: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0040 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001e: CHECK_CAST  (r1 I:android.os.Handler) = (android.os.Handler) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|0x0020: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0014 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: INVOKE  (r1 I:android.os.Handler), (r2 I:int) android.os.Handler.sendEmptyMessage(int):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IGET  (r0 I:java.util.Collection\<android.os.Handler\>) = (r4 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.mTileRequestCompleteHandlers java.util.Collection \l0x0029: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Collection) java.util.Collection.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|0x002d: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0040 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0037: CHECK_CAST  (r1 I:android.os.Handler) = (android.os.Handler) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002d \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x003c: INVOKE  (r1 I:android.os.Handler), (r2 I:int) android.os.Handler.sendEmptyMessage(int):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|0x0040: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0044: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugTileProviders():boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x0048|0x0048: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0068 \l}"];
Node_16 [shape=record,label="{16\:\ 0x004a|0x004a: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" \l0x004c: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004e: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0051: CONST_STR  (r2 I:java.lang.String) =  \"MapTileProviderBase.mapTileRequestFailed(): \" \l0x0053: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0056: INVOKE  (r2 I:long) = (r5 I:org.osmdroid.tileprovider.MapTileRequestState) org.osmdroid.tileprovider.MapTileRequestState.getMapTile():long type: VIRTUAL \l0x005a: INVOKE  (r5 I:java.lang.String) = (r2 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x005e: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0061: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0065: INVOKE  (r0 I:java.lang.String), (r5 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x0068|0x0068: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileProviderBase.mapTileRequestFailed((r4 'this' I:org.osmdroid.tileprovider.MapTileProviderBase A[IMMUTABLE_TYPE, THIS]), (r5 I:org.osmdroid.tileprovider.MapTileRequestState A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_14;
Node_5 -> Node_6;
Node_6 -> Node_3;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_3;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_9;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
}

