digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderBase.detach()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.osmdroid.tileprovider.BitmapPool) =  org.osmdroid.tileprovider.BitmapPool.getInstance():org.osmdroid.tileprovider.BitmapPool type: STATIC \l0x0004: IGET  (r1 I:android.graphics.drawable.Drawable) = (r2 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.mTileNotFoundImage android.graphics.drawable.Drawable \l0x0006: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.BitmapPool)\l  (r1 I:android.graphics.drawable.Drawable)\l org.osmdroid.tileprovider.BitmapPool.asyncRecycle(android.graphics.drawable.Drawable):void type: VIRTUAL \l0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: IPUT  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r2 I:org.osmdroid.tileprovider.MapTileProviderBase)\l org.osmdroid.tileprovider.MapTileProviderBase.mTileNotFoundImage android.graphics.drawable.Drawable \l0x000c: INVOKE  (r2 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.clearTileCache():void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileProviderBase.detach((r2 'this' I:org.osmdroid.tileprovider.MapTileProviderBase A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

