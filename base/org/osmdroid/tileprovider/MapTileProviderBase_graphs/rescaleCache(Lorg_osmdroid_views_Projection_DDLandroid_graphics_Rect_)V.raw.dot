digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderBase.rescaleCache(Lorg\/osmdroid\/views\/Projection;DDLandroid\/graphics\/Rect;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0004: MOVE  (r2 I:?[long, double]) = (r27 I:?[long, double]) \l0x0006: MOVE  (r5 I:?[long, double]) = (r29 I:?[long, double]) \l0x0008: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l0x000a: INVOKE  (r7 I:int) = (r27 I:double) org.osmdroid.util.TileSystem.getInputTileZoomLevel(double):int type: STATIC \l0x000e: INVOKE  (r8 I:int) = (r29 I:double) org.osmdroid.util.TileSystem.getInputTileZoomLevel(double):int type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: INVOKE  (r8 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC \l0x0019: INVOKE  (r7 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x001d: INVOKE  (r7 I:boolean) = (r7 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugTileProviders():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0041 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: CONST_STR  (r7 I:java.lang.String) =  \"OsmDroid\" \l0x0025: NEW_INSTANCE  (r10 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0027: INVOKE  (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002a: CONST_STR  (r11 I:java.lang.String) =  \"rescale tile cache from \" \l0x002c: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r10 I:java.lang.StringBuilder), (r5 I:double) java.lang.StringBuilder.append(double):java.lang.StringBuilder type: VIRTUAL \l0x0032: CONST_STR  (r11 I:java.lang.String) =  \" to \" \l0x0034: INVOKE  (r10 I:java.lang.StringBuilder), (r11 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: INVOKE  (r10 I:java.lang.StringBuilder), (r2 I:double) java.lang.StringBuilder.append(double):java.lang.StringBuilder type: VIRTUAL \l0x003a: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x003e: INVOKE  (r7 I:java.lang.String), (r10 I:java.lang.String) android.util.Log.i(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0041|0x0041: IGET  (r7 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0043: IGET  (r10 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0045: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0046: INVOKE  (r7 I:org.osmdroid.util.PointL) = \l  (r1 I:org.osmdroid.views.Projection)\l  (r7 I:int)\l  (r10 I:int)\l  (r11 I:org.osmdroid.util.PointL)\l org.osmdroid.views.Projection.toMercatorPixels(int, int, org.osmdroid.util.PointL):org.osmdroid.util.PointL type: VIRTUAL \l0x004a: IGET  (r10 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.right int \l0x004c: IGET  (r4 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x004e: INVOKE  (r1 I:org.osmdroid.util.PointL) = \l  (r1 I:org.osmdroid.views.Projection)\l  (r10 I:int)\l  (r4 I:int)\l  (r11 I:org.osmdroid.util.PointL)\l org.osmdroid.views.Projection.toMercatorPixels(int, int, org.osmdroid.util.PointL):org.osmdroid.util.PointL type: VIRTUAL \l0x0052: NEW_INSTANCE  (r4 I:org.osmdroid.util.RectL) =  org.osmdroid.util.RectL \l0x0054: IGET  (r13 I:long) = (r7 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0056: IGET  (r11 I:long) = (r7 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0058: MOVE  (r21 I:?[long, double]) = (r11 I:?[long, double]) \l0x005a: IGET  (r10 I:long) = (r1 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x005c: MOVE  (r23 I:?[long, double]) = (r8 I:?[long, double]) \l0x005e: IGET  (r7 I:long) = (r1 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0060: MOVE  (r15 I:?[long, double]) = (r21 I:?[long, double]) \l0x0062: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0063: MOVE  (r17 I:?[long, double]) = (r10 I:?[long, double]) \l0x0065: MOVE  (r19 I:?[long, double]) = (r7 I:?[long, double]) \l0x0067: INVOKE  \l  (r12 I:org.osmdroid.util.RectL)\l  (r13 I:long)\l  (r15 I:long)\l  (r17 I:long)\l  (r19 I:long)\l org.osmdroid.util.RectL.\<init\>(long, long, long, long):void type: DIRECT \l0x006a: CMP_L  (r1 I:int) = (r2 I:double), (r5 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x006c|0x006c: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:9:0x0075 \l}"];
Node_8 [shape=record,label="{8\:\ 0x006e|0x006e: NEW_INSTANCE  (r1 I:org.osmdroid.tileprovider.MapTileProviderBase$ZoomInTileLooper) =  org.osmdroid.tileprovider.MapTileProviderBase$ZoomInTileLooper \l0x0070: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0071: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.MapTileProviderBase$ZoomInTileLooper)\l  (r0 I:org.osmdroid.tileprovider.MapTileProviderBase)\l  (r7 I:org.osmdroid.tileprovider.MapTileProviderBase$1)\l org.osmdroid.tileprovider.MapTileProviderBase.ZoomInTileLooper.\<init\>(org.osmdroid.tileprovider.MapTileProviderBase, org.osmdroid.tileprovider.MapTileProviderBase$1):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0075|0x0075: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0076: NEW_INSTANCE  (r1 I:org.osmdroid.tileprovider.MapTileProviderBase$ZoomOutTileLooper) =  org.osmdroid.tileprovider.MapTileProviderBase$ZoomOutTileLooper \l0x0078: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.MapTileProviderBase$ZoomOutTileLooper)\l  (r0 I:org.osmdroid.tileprovider.MapTileProviderBase)\l  (r7 I:org.osmdroid.tileprovider.MapTileProviderBase$1)\l org.osmdroid.tileprovider.MapTileProviderBase.ZoomOutTileLooper.\<init\>(org.osmdroid.tileprovider.MapTileProviderBase, org.osmdroid.tileprovider.MapTileProviderBase$1):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x007b|0x007b: INVOKE  (r7 I:org.osmdroid.tileprovider.tilesource.ITileSource) = (r25 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.getTileSource():org.osmdroid.tileprovider.tilesource.ITileSource type: VIRTUAL \l0x007f: INVOKE  (r7 I:int) = (r7 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.getTileSizePixels():int type: INTERFACE \l0x0083: MOVE  (r2 I:?[long, double]) = (r27 I:?[long, double]) \l0x0085: MOVE  (r5 I:?[long, double]) = (r29 I:?[long, double]) \l0x0087: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.MapTileProviderBase$ScaleTileLooper)\l  (r2 I:double)\l  (r4 I:org.osmdroid.util.RectL)\l  (r5 I:double)\l  (r7 I:int)\l org.osmdroid.tileprovider.MapTileProviderBase.ScaleTileLooper.loop(double, org.osmdroid.util.RectL, double, int):void type: VIRTUAL \l0x008a: INVOKE  (r1 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC \l0x008e: INVOKE  (r3 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0092: INVOKE  (r3 I:boolean) = (r3 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugTileProviders():boolean type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0096|0x0096: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x00b5 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0098|0x0098: CONST_STR  (r3 I:java.lang.String) =  \"OsmDroid\" \l0x009a: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x009c: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x009f: CONST_STR  (r5 I:java.lang.String) =  \"Finished rescale in \" \l0x00a1: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00a4: ARITH  (r1 I:long) = (r1 I:long) \- (r23 I:long) \l0x00a6: INVOKE  (r4 I:java.lang.StringBuilder), (r1 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x00a9: CONST_STR  (r1 I:java.lang.String) =  \"ms\" \l0x00ab: INVOKE  (r4 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00ae: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b2: INVOKE  (r3 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.i(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x00b5|0x00b5: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileProviderBase.rescaleCache((r25 'this' I:org.osmdroid.tileprovider.MapTileProviderBase A[IMMUTABLE_TYPE, THIS]), (r26 I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
}

