digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderBase.putTileIntoCache(JLandroid\/graphics\/drawable\/Drawable;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN   \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IGET  (r0 I:org.osmdroid.tileprovider.MapTileCache) = (r1 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.mTileCache org.osmdroid.tileprovider.MapTileCache \l0x0005: INVOKE  (r0 I:android.graphics.drawable.Drawable) = (r0 I:org.osmdroid.tileprovider.MapTileCache), (r2 I:long) org.osmdroid.tileprovider.MapTileCache.getMapTile(long):android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: INVOKE  (r0 I:int) = (r0 I:android.graphics.drawable.Drawable) org.osmdroid.tileprovider.ExpirableBitmapDrawable.getState(android.graphics.drawable.Drawable):int type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IF  (r0 I:?[int, byte, short, char]) \<= (r5 I:?[int, byte, short, char])  \-\> B:7:0x0012 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|0x0011: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|0x0012: INVOKE  (r4 I:android.graphics.drawable.Drawable), (r5 I:int) org.osmdroid.tileprovider.ExpirableBitmapDrawable.setState(android.graphics.drawable.Drawable, int):void type: STATIC \l0x0015: IGET  (r5 I:org.osmdroid.tileprovider.MapTileCache) = (r1 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.mTileCache org.osmdroid.tileprovider.MapTileCache \l0x0017: INVOKE  \l  (r5 I:org.osmdroid.tileprovider.MapTileCache)\l  (r2 I:long)\l  (r4 I:android.graphics.drawable.Drawable)\l org.osmdroid.tileprovider.MapTileCache.putTile(long, android.graphics.drawable.Drawable):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: RETURN   \l}"];
MethodNode[shape=record,label="{protected void org.osmdroid.tileprovider.MapTileProviderBase.putTileIntoCache((r1 'this' I:org.osmdroid.tileprovider.MapTileProviderBase A[IMMUTABLE_TYPE, THIS]), (r2 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
}

