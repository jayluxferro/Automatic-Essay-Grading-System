digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderBase.putTileIntoCache(JLandroid\/graphics\/drawable\/Drawable;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 != null) goto L_0x0003\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|android.graphics.drawable.Drawable r0 = r1.mTileCache.getMapTile(r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r0 == null) goto L_0x0012\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b}"];
Node_5 [shape=record,label="{5\:\ 0x000f|if (org.osmdroid.tileprovider.ExpirableBitmapDrawable.getState(r0) \<= r5) goto L_0x0012\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x0012|org.osmdroid.tileprovider.ExpirableBitmapDrawable.setState(r4, r5)\lr1.mTileCache.putTile(r2, r4)\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|RETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void org.osmdroid.tileprovider.MapTileProviderBase.putTileIntoCache((r1v0 'this' org.osmdroid.tileprovider.MapTileProviderBase A[IMMUTABLE_TYPE, THIS]), (r2v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
}

