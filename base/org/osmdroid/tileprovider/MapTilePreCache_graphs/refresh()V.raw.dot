digraph "CFG fororg.osmdroid.tileprovider.MapTilePreCache.refresh()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.util.MapTileAreaList) = (r6 I:org.osmdroid.tileprovider.MapTilePreCache) org.osmdroid.tileprovider.MapTilePreCache.mTileAreas org.osmdroid.util.MapTileAreaList \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|SYNTHETIC\lSplitter:B:3:0x0004\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0004\l|0x0004: IGET  (r2 I:org.osmdroid.tileprovider.MapTileCache) = (r6 I:org.osmdroid.tileprovider.MapTilePreCache) org.osmdroid.tileprovider.MapTilePreCache.mCache org.osmdroid.tileprovider.MapTileCache A[Catch:\{ all \-\> 0x0077 \}, TRY_ENTER]\l0x0006: INVOKE  (r2 I:org.osmdroid.util.MapTileAreaList) = (r2 I:org.osmdroid.tileprovider.MapTileCache) org.osmdroid.tileprovider.MapTileCache.getAdditionalMapTileList():org.osmdroid.util.MapTileAreaList type: VIRTUAL A[Catch:\{ all \-\> 0x0077 \}]\l0x000a: INVOKE  (r2 I:java.util.List) = (r2 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.getList():java.util.List type: VIRTUAL A[Catch:\{ all \-\> 0x0077 \}]\l0x000e: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x004b A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0077 \}]\l0x001c: CHECK_CAST  (r3 I:org.osmdroid.util.MapTileArea) = (org.osmdroid.util.MapTileArea) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0077 \}]\l0x001e: IGET  (r4 I:org.osmdroid.util.MapTileAreaList) = (r6 I:org.osmdroid.tileprovider.MapTilePreCache) org.osmdroid.tileprovider.MapTilePreCache.mTileAreas org.osmdroid.util.MapTileAreaList A[Catch:\{ all \-\> 0x0077 \}]\l0x0020: INVOKE  (r4 I:java.util.List) = (r4 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.getList():java.util.List type: VIRTUAL A[Catch:\{ all \-\> 0x0077 \}]\l0x0024: INVOKE  (r4 I:int) = (r4 I:java.util.List) java.util.List.size():int type: INTERFACE A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IF  (r1 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:10:0x0037 A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: IGET  (r4 I:org.osmdroid.util.MapTileAreaList) = (r6 I:org.osmdroid.tileprovider.MapTilePreCache) org.osmdroid.tileprovider.MapTilePreCache.mTileAreas org.osmdroid.util.MapTileAreaList A[Catch:\{ all \-\> 0x0077 \}]\l0x002c: INVOKE  (r4 I:java.util.List) = (r4 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.getList():java.util.List type: VIRTUAL A[Catch:\{ all \-\> 0x0077 \}]\l0x0030: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0077 \}]\l0x0034: CHECK_CAST  (r4 I:org.osmdroid.util.MapTileArea) = (org.osmdroid.util.MapTileArea) (r4 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0077 \}]\l0x0036: GOTO  \-\> 0x0045 A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: NEW_INSTANCE  (r4 I:org.osmdroid.util.MapTileArea) =  org.osmdroid.util.MapTileArea A[Catch:\{ all \-\> 0x0077 \}]\l0x0039: INVOKE  (r4 I:org.osmdroid.util.MapTileArea) org.osmdroid.util.MapTileArea.\<init\>():void type: DIRECT A[Catch:\{ all \-\> 0x0077 \}]\l0x003c: IGET  (r5 I:org.osmdroid.util.MapTileAreaList) = (r6 I:org.osmdroid.tileprovider.MapTilePreCache) org.osmdroid.tileprovider.MapTilePreCache.mTileAreas org.osmdroid.util.MapTileAreaList A[Catch:\{ all \-\> 0x0077 \}]\l0x003e: INVOKE  (r5 I:java.util.List) = (r5 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.getList():java.util.List type: VIRTUAL A[Catch:\{ all \-\> 0x0077 \}]\l0x0042: INVOKE  (r5 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0045|0x0045: INVOKE  \l  (r4 I:org.osmdroid.util.MapTileArea)\l  (r3 I:org.osmdroid.util.MapTileArea)\l org.osmdroid.util.MapTileArea.set(org.osmdroid.util.MapTileArea):org.osmdroid.util.MapTileArea type: VIRTUAL A[Catch:\{ all \-\> 0x0077 \}]\l0x0048: ARITH  (r1 I:int) = (r1 I:int) + (1 int) A[Catch:\{ all \-\> 0x0077 \}]\l0x004a: GOTO  \-\> 0x0012 A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x004b|0x004b: IGET  (r2 I:org.osmdroid.util.MapTileAreaList) = (r6 I:org.osmdroid.tileprovider.MapTilePreCache) org.osmdroid.tileprovider.MapTilePreCache.mTileAreas org.osmdroid.util.MapTileAreaList A[Catch:\{ all \-\> 0x0077 \}]\l0x004d: INVOKE  (r2 I:java.util.List) = (r2 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.getList():java.util.List type: VIRTUAL A[Catch:\{ all \-\> 0x0077 \}]\l0x0051: INVOKE  (r2 I:int) = (r2 I:java.util.List) java.util.List.size():int type: INTERFACE A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|0x0055: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:15:0x006d A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|0x0057: IGET  (r2 I:org.osmdroid.util.MapTileAreaList) = (r6 I:org.osmdroid.tileprovider.MapTilePreCache) org.osmdroid.tileprovider.MapTilePreCache.mTileAreas org.osmdroid.util.MapTileAreaList A[Catch:\{ all \-\> 0x0077 \}]\l0x0059: INVOKE  (r2 I:java.util.List) = (r2 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.getList():java.util.List type: VIRTUAL A[Catch:\{ all \-\> 0x0077 \}]\l0x005d: IGET  (r3 I:org.osmdroid.util.MapTileAreaList) = (r6 I:org.osmdroid.tileprovider.MapTilePreCache) org.osmdroid.tileprovider.MapTilePreCache.mTileAreas org.osmdroid.util.MapTileAreaList A[Catch:\{ all \-\> 0x0077 \}]\l0x005f: INVOKE  (r3 I:java.util.List) = (r3 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.getList():java.util.List type: VIRTUAL A[Catch:\{ all \-\> 0x0077 \}]\l0x0063: INVOKE  (r3 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE A[Catch:\{ all \-\> 0x0077 \}]\l0x0067: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) A[Catch:\{ all \-\> 0x0077 \}]\l0x0069: INVOKE  (r2 I:java.util.List), (r3 I:int) java.util.List.remove(int):java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0077 \}]\l0x006c: GOTO  \-\> 0x004b A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x006d|0x006d: IGET  (r1 I:org.osmdroid.util.MapTileAreaList) = (r6 I:org.osmdroid.tileprovider.MapTilePreCache) org.osmdroid.tileprovider.MapTilePreCache.mTileAreas org.osmdroid.util.MapTileAreaList A[Catch:\{ all \-\> 0x0077 \}]\l0x006f: INVOKE  (r1 I:java.util.Iterator) = (r1 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.iterator():java.util.Iterator type: VIRTUAL A[Catch:\{ all \-\> 0x0077 \}]\l0x0073: IPUT  \l  (r1 I:java.util.Iterator\<java.lang.Long\>)\l  (r6 I:org.osmdroid.tileprovider.MapTilePreCache)\l org.osmdroid.tileprovider.MapTilePreCache.mTileIndices java.util.Iterator A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0075|0x0075: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0076|0x0076: RETURN   A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0077|ExcHandler: all null\lSplitter:B:3:0x0004\l|0x0077: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0077 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0078|0x0078: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0077 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0079|0x0079: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.MapTilePreCache.refresh((r6 'this' I:org.osmdroid.tileprovider.MapTilePreCache A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_18;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_5;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_12;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
}

