digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderArray.findNextAppropriateProvider(Lorg\/osmdroid\/tileprovider\/MapTileRequestState;)Lorg\/osmdroid\/tileprovider\/modules\/MapTileModuleProviderBase;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = false\lr2 = false\lr3 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lPHI: r1 r2 r3 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:0:0x0000, B:20:0x0004] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 boolean) = (r2v0 boolean), (r2v2 boolean) binds: [B:0:0x0000, B:20:0x0004] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 boolean) = (r3v0 boolean), (r3v2 boolean) binds: [B:0:0x0000, B:20:0x0004] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:20:0x0004\l|org.osmdroid.tileprovider.modules.MapTileModuleProviderBase r4 = r9.getNextProvider()\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r4 == null) goto L_0x0038\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|r2 = true\lr1 = getProviderExists(r4) ^ true\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|if (useDataConnection() != false) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if (r4.getUsesDataConnection() == false) goto L_0x001e\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|r3 = true\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|r3 = false\l}"];
Node_9 [shape=record,label="{9\:\ 0x001f|PHI: r3 \l  PHI: (r3v4 boolean) = (r3v6 boolean), (r3v8 boolean) binds: [B:8:0x001e, B:7:0x001c] A[DONT_GENERATE, DONT_INLINE]\l|int r5 = org.osmdroid.util.MapTileIndex.getZoom(r9.getMapTile())\l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|if (r5 \> r4.getMaximumZoomLevel()) goto L_0x0035\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d}"];
Node_12 [shape=record,label="{12\:\ 0x0031|if (r5 \>= r4.getMinimumZoomLevel()) goto L_0x0034\l}"];
Node_13 [shape=record,label="{13\:\ 0x0034|r2 = false\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|PHI: r2 \l  PHI: (r2v4 boolean) = (r2v3 boolean), (r2v3 boolean), (r2v6 boolean) binds: [B:10:0x002b, B:12:0x0031, B:13:0x0034] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r3\lr3 = r2\lr2 = r7\l}"];
Node_15 [shape=record,label="{15\:\ 0x0038|PHI: r1 r2 r3 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v4 boolean) binds: [B:2:0x0008, B:14:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v2 boolean) = (r2v1 boolean), (r2v5 boolean) binds: [B:2:0x0008, B:14:0x0035] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 boolean) = (r3v1 boolean), (r3v5 boolean) binds: [B:2:0x0008, B:14:0x0035] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == null) goto L_0x0040\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|if (r1 != false) goto L_0x0004\l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|if (r2 != false) goto L_0x0004\l}"];
Node_18 [shape=record,label="{18\:\ 0x003e|if (r3 != false) goto L_0x0004\l}"];
Node_19 [shape=record,label="{19\:\ 0x0040|RETURN\l|return r4\l}"];
Node_20 [shape=record,label="{20\:\ 0x0004|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0004\-\>B:20:0x0004\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0040|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0004|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0004|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x0004|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected org.osmdroid.tileprovider.modules.MapTileModuleProviderBase org.osmdroid.tileprovider.MapTileProviderArray.findNextAppropriateProvider((r8v0 'this' org.osmdroid.tileprovider.MapTileProviderArray A[IMMUTABLE_TYPE, THIS]), (r9v0 org.osmdroid.tileprovider.MapTileRequestState A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_15;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_21;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_24;
Node_18 -> Node_22[style=dashed];
Node_18 -> Node_25;
Node_20 -> Node_1;
Node_21 -> Node_19;
Node_22 -> Node_19;
Node_23 -> Node_20;
Node_24 -> Node_20;
Node_25 -> Node_20;
}

