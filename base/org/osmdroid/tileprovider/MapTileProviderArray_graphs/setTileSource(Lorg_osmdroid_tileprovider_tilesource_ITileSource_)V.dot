digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderArray.setTileSource(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.setTileSource(r4)\ljava.util.List\<org.osmdroid.tileprovider.modules.MapTileModuleProviderBase\> r0 = r3.mTileProviderList\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|java.util.Iterator r1 = r3.mTileProviderList.iterator()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|LOOP_START\lLOOP:0: B:4:0x000c\-\>B:6:0x0012\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r1.hasNext() == false) goto L_0x001f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|LOOP_END\lLOOP:0: B:4:0x000c\-\>B:6:0x0012\l|r1.next().setTileSource(r4)\lclearTileCache()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|monitor\-exit(r0)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|REMOVE\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|REMOVE\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|REMOVE\l|throw r4\l}"];
Node_12 [shape=record,label="{12\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileProviderArray.setTileSource((r3v0 'this' org.osmdroid.tileprovider.MapTileProviderArray A[IMMUTABLE_TYPE, THIS]), (r4v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_7;
}

