digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderArray.setTileSource(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;)V" {
subgraph cluster_Region_304694427 {
label = "R(2:0|5)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super.setTileSource(r4)\l}"];
subgraph cluster_SynchronizedRegion_405074232 {
label = "Synchronized:R(2:1|(2:3|(1:6)))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0005}"];
subgraph cluster_Region_1620747873 {
label = "R(2:3|(1:6))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ ?|java.util.Iterator r1 = r3.mTileProviderList.iterator()\l}"];
subgraph cluster_LoopRegion_456666533 {
label = "LOOP:0: (1:6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r1.hasNext() != false) goto L_0x0012\l}"];
subgraph cluster_Region_1131265989 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|LOOP_END\lLOOP:0: B:4:0x000c\-\>B:6:0x0012\l|r2.setTileSource(r4)\lclearTileCache()\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0006|SYNTHETIC\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000c|LOOP_START\lLOOP:0: B:4:0x000c\-\>B:6:0x0012\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x001f: MONITOR_EXIT  \l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0020}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0021|REMOVE\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0022|REMOVE\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0023|REMOVE\l|throw r4\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x001f|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileProviderArray.setTileSource((r3v0 'this' org.osmdroid.tileprovider.MapTileProviderArray A[IMMUTABLE_TYPE, THIS]), (r4v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_12[style=dashed];
Node_6 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_4 -> Node_5;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_7;
}

