digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderArray.getMaximumZoomLevel()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.List\<org.osmdroid.tileprovider.modules.MapTileModuleProviderBase\> r0 = r5.mTileProviderList\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|java.util.Iterator r1 = r5.mTileProviderList.iterator()\lr2 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:3:?, B:14:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000a\-\>B:14:0x000a\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r1.hasNext() == false) goto L_0x0021\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|org.osmdroid.tileprovider.modules.MapTileModuleProviderBase r3 = r1.next()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r3.getMaximumZoomLevel() \<= r2) goto L_0x000a\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|int r2 = r3.getMaximumZoomLevel()\l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|monitor\-exit(r0)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|RETURN\l|return r2\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|REMOVE\l|java.lang.Throwable r1 = move\-exception\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|REMOVE\l}"];
Node_13 [shape=record,label="{13\:\ 0x0025|REMOVE\l|throw r1\l}"];
Node_14 [shape=record,label="{14\:\ 0x000a|LOOP_END\lSYNTHETIC\lPHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:16:0x000a, B:17:0x000a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000a\-\>B:14:0x000a\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x000a|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x000a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int org.osmdroid.tileprovider.MapTileProviderArray.getMaximumZoomLevel((r5v0 'this' org.osmdroid.tileprovider.MapTileProviderArray A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_17;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_14 -> Node_4;
Node_15 -> Node_9;
Node_16 -> Node_14;
Node_17 -> Node_14;
}

