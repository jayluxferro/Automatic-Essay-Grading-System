digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderArray.detach()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<org.osmdroid.tileprovider.modules.MapTileModuleProviderBase\>) = (r3 I:org.osmdroid.tileprovider.MapTileProviderArray) org.osmdroid.tileprovider.MapTileProviderArray.mTileProviderList java.util.List \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:java.util.List\<org.osmdroid.tileprovider.modules.MapTileModuleProviderBase\>) = (r3 I:org.osmdroid.tileprovider.MapTileProviderArray) org.osmdroid.tileprovider.MapTileProviderArray.mTileProviderList java.util.List A[Catch:\{ all \-\> 0x0036 \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE A[Catch:\{ all \-\> 0x0036 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0036 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d|0x000d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0019 A[Catch:\{ all \-\> 0x0036 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0036 \}]\l0x0013: CHECK_CAST  (r2 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = (org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0036 \}]\l0x0015: INVOKE  \l  (r2 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.detach():void type: VIRTUAL A[Catch:\{ all \-\> 0x0036 \}]\l0x0018: GOTO  \-\> 0x0009 A[Catch:\{ all \-\> 0x0036 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0036 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: IGET  (r1 I:java.util.Map\<java.lang.Long, java.lang.Integer\>) = (r3 I:org.osmdroid.tileprovider.MapTileProviderArray) org.osmdroid.tileprovider.MapTileProviderArray.mWorking java.util.Map \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: MONITOR_ENTER  (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x001d|SYNTHETIC\lSplitter:B:10:0x001d\l}"];
Node_11 [shape=record,label="{11\:\ ?|Splitter:B:10:0x001d\l|0x001d: IGET  (r0 I:java.util.Map\<java.lang.Long, java.lang.Integer\>) = (r3 I:org.osmdroid.tileprovider.MapTileProviderArray) org.osmdroid.tileprovider.MapTileProviderArray.mWorking java.util.Map A[Catch:\{ all \-\> 0x0033 \}, TRY_ENTER]\l0x001f: INVOKE  (r0 I:java.util.Map) java.util.Map.clear():void type: INTERFACE A[Catch:\{ all \-\> 0x0033 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|0x0022: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0033 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0023|0x0023: IGET  (r0 I:org.osmdroid.tileprovider.IRegisterReceiver) = (r3 I:org.osmdroid.tileprovider.MapTileProviderArray) org.osmdroid.tileprovider.MapTileProviderArray.mRegisterReceiver org.osmdroid.tileprovider.IRegisterReceiver \l}"];
Node_14 [shape=record,label="{14\:\ 0x0025|0x0025: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002f \l}"];
Node_15 [shape=record,label="{15\:\ 0x0027|0x0027: IGET  (r0 I:org.osmdroid.tileprovider.IRegisterReceiver) = (r3 I:org.osmdroid.tileprovider.MapTileProviderArray) org.osmdroid.tileprovider.MapTileProviderArray.mRegisterReceiver org.osmdroid.tileprovider.IRegisterReceiver \l0x0029: INVOKE  (r0 I:org.osmdroid.tileprovider.IRegisterReceiver) org.osmdroid.tileprovider.IRegisterReceiver.destroy():void type: INTERFACE \l0x002c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002d: IPUT  \l  (r0 I:org.osmdroid.tileprovider.IRegisterReceiver)\l  (r3 I:org.osmdroid.tileprovider.MapTileProviderArray)\l org.osmdroid.tileprovider.MapTileProviderArray.mRegisterReceiver org.osmdroid.tileprovider.IRegisterReceiver \l}"];
Node_16 [shape=record,label="{16\:\ 0x002f|0x002f: INVOKE  (r3 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.detach():void type: SUPER \l}"];
Node_17 [shape=record,label="{17\:\ 0x0032|0x0032: RETURN   \l}"];
Node_18 [shape=record,label="{18\:\ 0x0033|ExcHandler: all null\lSplitter:B:10:0x001d\l|0x0033: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_19 [shape=record,label="{19\:\ 0x0034|SYNTHETIC\lSplitter:B:19:0x0034\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x0034\l|0x0034: MONITOR_EXIT  (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0033 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|0x0035: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0036|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0036: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_23 [shape=record,label="{23\:\ 0x0037|SYNTHETIC\lSplitter:B:23:0x0037\l}"];
Node_24 [shape=record,label="{24\:\ ?|Splitter:B:23:0x0037\l|0x0037: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0036 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0038|0x0038: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileProviderArray.detach((r3 'this' I:org.osmdroid.tileprovider.MapTileProviderArray A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_22;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_18;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_18;
Node_20 -> Node_21;
Node_20 -> Node_18;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_23 -> Node_22;
Node_24 -> Node_25;
Node_24 -> Node_22;
}

