digraph "CFG fororg.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.getDrawable(Ljava\/lang\/String;)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: NEW_INSTANCE  (r0 I:android.graphics.BitmapFactory$Options) =  android.graphics.BitmapFactory$Options A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}, TRY_ENTER]\l0x0002: INVOKE  (r0 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.\<init\>():void type: DIRECT A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0005: INVOKE  (r1 I:org.osmdroid.tileprovider.BitmapPool) =  org.osmdroid.tileprovider.BitmapPool.getInstance():org.osmdroid.tileprovider.BitmapPool type: STATIC A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0009: IGET  (r2 I:int) = \l  (r4 I:org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase)\l org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.mTileSizePixels int A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x000b: IGET  (r3 I:int) = \l  (r4 I:org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase)\l org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.mTileSizePixels int A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x000d: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.BitmapPool)\l  (r0 I:android.graphics.BitmapFactory$Options)\l  (r2 I:int)\l  (r3 I:int)\l org.osmdroid.tileprovider.BitmapPool.applyReusableOptions(android.graphics.BitmapFactory$Options, int, int):void type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0010: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0012: CONST  (r2 I:?[int, float, short, byte, char]) = (15 ?[int, float, short, byte, char]) A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001b A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: INVOKE  (r0 I:android.graphics.Bitmap) = (r5 I:java.lang.String) android.graphics.BitmapFactory.decodeFile(java.lang.String):android.graphics.Bitmap type: STATIC A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x001a: GOTO  \-\> 0x001f A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|0x001b: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r5 I:java.lang.String)\l  (r0 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.decodeFile(java.lang.String, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|0x001f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0027 A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: NEW_INSTANCE  (r1 I:org.osmdroid.tileprovider.ReusableBitmapDrawable) =  org.osmdroid.tileprovider.ReusableBitmapDrawable A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0023: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.ReusableBitmapDrawable)\l  (r0 I:android.graphics.Bitmap)\l org.osmdroid.tileprovider.ReusableBitmapDrawable.\<init\>(android.graphics.Bitmap):void type: DIRECT A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: RETURN  (r1 I:android.graphics.drawable.Drawable) A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0029: INVOKE  (r0 I:java.io.File), (r5 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x002c: INVOKE  (r0 I:boolean) = (r0 I:java.io.File) java.io.File.exists():boolean type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0069 A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|0x0032: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0034: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0036: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0039: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x003c: CONST_STR  (r2 I:java.lang.String) =  \" is an invalid image file, deleting...\" A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x003e: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0041: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0045: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}, TRY_LEAVE]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0048|SYNTHETIC\lSplitter:B:11:0x0048\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x0048\l|0x0048: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File A[Catch:\{ Throwable \-\> 0x0051 \}, TRY_ENTER]\l0x004a: INVOKE  (r0 I:java.io.File), (r5 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ Throwable \-\> 0x0051 \}]\l0x004d: INVOKE  (r0 I:java.io.File) java.io.File.delete():boolean type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0051 \}, TRY_LEAVE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0051|ExcHandler: Throwable null\lSplitter:B:11:0x0048\l|0x0051: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_15 [shape=record,label="{15\:\ 0x0052|0x0052: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l}"];
Node_16 [shape=record,label="{16\:\ 0x0054|SYNTHETIC\lSplitter:B:16:0x0054\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x0054\l|0x0054: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}, TRY_ENTER]\l0x0056: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0059: CONST_STR  (r3 I:java.lang.String) =  \"Error deleting invalid file: \" A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x005b: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x005e: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0061: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0065: INVOKE  \l  (r1 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0068: GOTO  \-\> 0x00a5 A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0069|0x0069: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x006b: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x006d: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0070: CONST_STR  (r2 I:java.lang.String) =  \"Request tile: \" A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0072: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0075: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0078: CONST_STR  (r2 I:java.lang.String) =  \" does not exist\" A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x007a: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x007d: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}]\l0x0081: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}, TRY_LEAVE]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0085|ExcHandler: Exception null\lSplitter:B:0:0x0000\l|0x0085: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_21 [shape=record,label="{21\:\ 0x0086|0x0086: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l0x0088: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x008a: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x008d: CONST_STR  (r3 I:java.lang.String) =  \"Unexpected error loading bitmap: \" \l0x008f: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0092: INVOKE  (r2 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0095: INVOKE  (r5 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0099: INVOKE  \l  (r1 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r0 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l0x009c: SGET  (r5 I:int) =  org.osmdroid.tileprovider.util.Counters.tileDownloadErrors int \l0x009e: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x00a0: SPUT  (r5 I:int) org.osmdroid.tileprovider.util.Counters.tileDownloadErrors int \l0x00a2: INVOKE   java.lang.System.gc():void type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a5|0x00a5: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a6|0x00a6: RETURN  (r5 I:android.graphics.drawable.Drawable) \l}"];
Node_24 [shape=record,label="{24\:\ 0x00a7|ExcHandler: OutOfMemoryError null\lSplitter:B:0:0x0000\l|0x00a7: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a8|0x00a8: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00aa: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00ad: CONST_STR  (r2 I:java.lang.String) =  \"OutOfMemoryError loading bitmap: \" \l0x00af: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b2: INVOKE  (r1 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00b5: INVOKE  (r5 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00b9: CONST_STR  (r1 I:java.lang.String) =  \"OsmDroid\" \l0x00bb: INVOKE  (r1 I:java.lang.String), (r5 I:java.lang.String) android.util.Log.e(java.lang.String, java.lang.String):int type: STATIC \l0x00be: INVOKE   java.lang.System.gc():void type: STATIC \l0x00c1: NEW_INSTANCE  (r5 I:org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase$LowMemoryException) =  org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase$LowMemoryException \l0x00c3: INVOKE  \l  (r5 I:org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase$LowMemoryException)\l  (r0 I:java.lang.Throwable)\l org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.LowMemoryException.\<init\>(java.lang.Throwable):void type: DIRECT \l}"];
Node_26 [shape=record,label="{26\:\ 0x00c6|0x00c6: THROW  (r5 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.getDrawable((r4 'this' I:org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase A[IMMUTABLE_TYPE, THIS]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase$LowMemoryException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_24;
Node_0 -> Node_20;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_12 -> Node_22;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_24;
Node_16 -> Node_20;
Node_17 -> Node_22;
Node_18 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
}

