digraph "CFG fororg.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.getDrawable(Ljava\/lang\/String;)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lSplitter:B:0:0x0000\l|android.graphics.BitmapFactory$Options r0 = new android.graphics.BitmapFactory.Options()     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lorg.osmdroid.tileprovider.BitmapPool.getInstance().applyReusableOptions(r0, r4.mTileSizePixels, r4.mTileSizePixels)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l|if (android.os.Build.VERSION.SDK_INT != 15) goto L_0x001b     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l|android.graphics.Bitmap r0 = android.graphics.BitmapFactory.decodeFile(r5)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l|android.graphics.Bitmap r0 = android.graphics.BitmapFactory.decodeFile(r5, r0)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x001f|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lPHI: r0 \l  PHI: (r0v3 android.graphics.Bitmap) = (r0v10 android.graphics.Bitmap), (r0v11 android.graphics.Bitmap) binds: [B:4:0x001b, B:3:0x0016] A[DONT_GENERATE, DONT_INLINE]\l|if (r0 == null) goto L_0x0027     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|RETURN\lCatch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l|return new org.osmdroid.tileprovider.ReusableBitmapDrawable(r0)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l|if (new java.io.File(r5).exists() == false) goto L_0x0069     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l|java.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lr1.append(r5)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lr1.append(\" is an invalid image file, deleting...\")     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r1.toString())     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0048|SYNTHETIC\lSplitter:B:11:0x0048\l}"];
Node_12 [shape=record,label="{12\:\ ?|Catch:\{ Throwable \-\> 0x0051 \}\lSplitter:B:11:0x0048\l|new java.io.File(r5).delete()     \/\/ Catch:\{ Throwable \-\> 0x0051 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0051|ExcHandler: Throwable (r0v8 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:11:0x0048\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x0052}"];
Node_15 [shape=record,label="{15\:\ 0x0054|SYNTHETIC\lSplitter:B:15:0x0054\l}"];
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lSplitter:B:15:0x0054\l|java.lang.StringBuilder r2 = new java.lang.StringBuilder()     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lr2.append(\"Error deleting invalid file: \")     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lr2.append(r5)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\landroid.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, r2.toString(), r0)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0069|Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l|java.lang.StringBuilder r1 = new java.lang.StringBuilder()     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lr1.append(\"Request tile: \")     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lr1.append(r5)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\lr1.append(\" does not exist\")     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r1.toString())     \/\/ Catch:\{ OutOfMemoryError \-\> 0x00a7, Exception \-\> 0x0085 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0085|ExcHandler: Exception (r0v1 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.Exception r0 = move\-exception\l}"];
Node_19 [shape=record,label="{19\:\ 0x0086|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Unexpected error loading bitmap: \")\lr2.append(r5)\landroid.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, r2.toString(), r0)\lorg.osmdroid.tileprovider.util.Counters.tileDownloadErrors = org.osmdroid.tileprovider.util.Counters.tileDownloadErrors + 1\ljava.lang.System.gc()\l}"];
Node_20 [shape=record,label="{20\:\ 0x00a7|ExcHandler: OutOfMemoryError (r0v0 'e' java.lang.OutOfMemoryError A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.OutOfMemoryError r0 = move\-exception\l}"];
Node_21 [shape=record,label="{21\:\ 0x00a8|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"OutOfMemoryError loading bitmap: \")\lr1.append(r5)\landroid.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, r1.toString())\ljava.lang.System.gc()\l}"];
Node_22 [shape=record,label="{22\:\ 0x00c6|throw new org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.LowMemoryException((java.lang.Throwable) r0)\l}"];
Node_23 [shape=record,label="{23\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_25 [shape=record,label="{25\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lRETURN\l|return null\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.getDrawable((r4v0 'this' org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase A[IMMUTABLE_TYPE, THIS]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase$LowMemoryException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_20;
Node_0 -> Node_18;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_12 -> Node_25;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_20;
Node_15 -> Node_18;
Node_16 -> Node_24;
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22;
}

