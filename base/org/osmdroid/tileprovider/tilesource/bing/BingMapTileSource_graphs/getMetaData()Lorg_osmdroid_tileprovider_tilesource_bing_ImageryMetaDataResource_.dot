digraph "CFG fororg.osmdroid.tileprovider.tilesource.bing.BingMapTileSource.getMetaData()Lorg\/osmdroid\/tileprovider\/tilesource\/bing\/ImageryMetaDataResource;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"getMetaData\")\lr0 = null\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|SYNTHETIC\lSplitter:B:1:0x0008\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x0156, all \-\> 0x0151 \}\lSplitter:B:1:0x0008\l|java.lang.Object[] r3 = new java.lang.Object[]\{r9.mStyle, mBingMapKey\}\ljava.net.HttpURLConnection r1 = (java.net.HttpURLConnection) new java.net.URL(java.lang.String.format(BASE_URL_PATTERN, r3)).openConnection()     \/\/ Catch:\{ Exception \-\> 0x0156, all \-\> 0x0151 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0028}"];
Node_4 [shape=record,label="{4\:\ 0x002a|SYNTHETIC\lSplitter:B:4:0x002a\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lSplitter:B:4:0x002a\l|java.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr3.append(\"make request \")     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr3.append(r1.getURL().toString().toString())     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\landroid.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, r3.toString())     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr1.setRequestProperty(org.osmdroid.config.Configuration.getInstance().getUserAgentHttpHeader(), org.osmdroid.config.Configuration.getInstance().getUserAgentValue())     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\ljava.util.Iterator r2 = org.osmdroid.config.Configuration.getInstance().getAdditionalHttpRequestProperties().entrySet().iterator()     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x006d|LOOP_START\lCatch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lLOOP:0: B:6:0x006d\-\>B:8:0x0073\l}"];
Node_7 [shape=record,label="{7\:\ 0x0071|Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l|if (r2.hasNext() == false) goto L_0x0089     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0073|LOOP_END\lCatch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lLOOP:0: B:6:0x006d\-\>B:8:0x0073\l|java.util.Map$Entry r3 = r2.next()     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr1.setRequestProperty((java.lang.String) r3.getKey(), (java.lang.String) r3.getValue())     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0089|Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l|r1.connect()     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0092|Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l|if (r1.getResponseCode() == 200) goto L_0x00c2     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0094|Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l|java.lang.StringBuilder r3 = new java.lang.StringBuilder()     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr3.append(\"Cannot get response for url \")     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr3.append(r1.getURL().toString())     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr3.append(\" \")     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr3.append(r1.getResponseMessage())     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\landroid.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, r3.toString())     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr3 = null     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr4 = null     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\lr5 = null     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x00c2|Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l|java.io.InputStream r2 = r1.getInputStream()     \/\/ Catch:\{ Exception \-\> 0x014e, all \-\> 0x014b \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x00c6|SYNTHETIC\lSplitter:B:13:0x00c6\l}"];
Node_14 [shape=record,label="{14\:\ ?|Catch:\{ Exception \-\> 0x0144, all \-\> 0x013d \}\lSplitter:B:13:0x00c6\l|java.io.ByteArrayOutputStream r3 = new java.io.ByteArrayOutputStream()     \/\/ Catch:\{ Exception \-\> 0x0144, all \-\> 0x013d \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x00cb|SYNTHETIC\lSplitter:B:15:0x00cb\l}"];
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ Exception \-\> 0x0136, all \-\> 0x012f \}\lSplitter:B:15:0x00cb\l|java.io.BufferedOutputStream r4 = new java.io.BufferedOutputStream(r3, 8192)     \/\/ Catch:\{ Exception \-\> 0x0136, all \-\> 0x012f \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x00d2|SYNTHETIC\lSplitter:B:17:0x00d2\l}"];
Node_18 [shape=record,label="{18\:\ ?|Catch:\{ Exception \-\> 0x0129, all \-\> 0x0123 \}\lSplitter:B:17:0x00d2\l|org.osmdroid.tileprovider.util.StreamUtils.copy(r2, r4)     \/\/ Catch:\{ Exception \-\> 0x0129, all \-\> 0x0123 \}\lr4.flush()     \/\/ Catch:\{ Exception \-\> 0x0129, all \-\> 0x0123 \}\lorg.osmdroid.tileprovider.tilesource.bing.ImageryMetaDataResource r5 = org.osmdroid.tileprovider.tilesource.bing.ImageryMetaData.getInstanceFromJSON(r3.toString())     \/\/ Catch:\{ Exception \-\> 0x0129, all \-\> 0x0123 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x00e0|r0 = r2\lr3 = r3\l}"];
Node_20 [shape=record,label="{20\:\ 0x00e1|PHI: r0 r3 r4 r5 \l  PHI: (r0v8 java.io.InputStream) = (r0v18 java.io.InputStream), (r0v1 java.io.InputStream) binds: [B:19:0x00e0, B:11:0x0094] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v22 java.io.ByteArrayOutputStream) = (r3v33 java.io.ByteArrayOutputStream), (r3v41 java.io.ByteArrayOutputStream) binds: [B:11:0x0094, B:19:0x00e0] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v11 java.io.BufferedOutputStream) = (r4v18 java.io.BufferedOutputStream), (r4v24 java.io.BufferedOutputStream) binds: [B:19:0x00e0, B:11:0x0094] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v6 org.osmdroid.tileprovider.tilesource.bing.ImageryMetaDataResource) = (r5v14 org.osmdroid.tileprovider.tilesource.bing.ImageryMetaDataResource), (r5v15 org.osmdroid.tileprovider.tilesource.bing.ImageryMetaDataResource) binds: [B:19:0x00e0, B:11:0x0094] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L_0x00ef\l}"];
Node_21 [shape=record,label="{21\:\ 0x00e3|SYNTHETIC\lSplitter:B:21:0x00e3\l}"];
Node_22 [shape=record,label="{22\:\ ?|Catch:\{ Exception \-\> 0x00e7 \}\lSplitter:B:21:0x00e3\l|r1.disconnect()     \/\/ Catch:\{ Exception \-\> 0x00e7 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x00e7|ExcHandler: Exception (r1v25 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:21:0x00e3\l|java.lang.Exception r1 = move\-exception\l}"];
Node_24 [shape=record,label="{24\:\ 0x00e8|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r1)\l}"];
Node_25 [shape=record,label="{25\:\ 0x00ef|if (r0 == null) goto L_0x00fd\l}"];
Node_26 [shape=record,label="{26\:\ 0x00f1|SYNTHETIC\lSplitter:B:26:0x00f1\l}"];
Node_27 [shape=record,label="{27\:\ ?|Catch:\{ Exception \-\> 0x00f5 \}\lSplitter:B:26:0x00f1\l|r0.close()     \/\/ Catch:\{ Exception \-\> 0x00f5 \}\l}"];
Node_28 [shape=record,label="{28\:\ 0x00f5|ExcHandler: Exception (r0v13 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:26:0x00f1\l|java.lang.Exception r0 = move\-exception\l}"];
Node_29 [shape=record,label="{29\:\ 0x00f6|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r0)\l}"];
Node_30 [shape=record,label="{30\:\ 0x00fd|if (r3 == null) goto L_0x010b\l}"];
Node_31 [shape=record,label="{31\:\ 0x00ff|SYNTHETIC\lSplitter:B:31:0x00ff\l}"];
Node_32 [shape=record,label="{32\:\ ?|Catch:\{ Exception \-\> 0x0103 \}\lSplitter:B:31:0x00ff\l|r3.close()     \/\/ Catch:\{ Exception \-\> 0x0103 \}\l}"];
Node_33 [shape=record,label="{33\:\ 0x0103|ExcHandler: Exception (r0v12 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:31:0x00ff\l|java.lang.Exception r0 = move\-exception\l}"];
Node_34 [shape=record,label="{34\:\ 0x0104|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r0)\l}"];
Node_35 [shape=record,label="{35\:\ 0x010b|if (r4 == null) goto L_0x0119\l}"];
Node_36 [shape=record,label="{36\:\ 0x010d|SYNTHETIC\lSplitter:B:36:0x010d\l}"];
Node_37 [shape=record,label="{37\:\ ?|Catch:\{ Exception \-\> 0x0111 \}\lSplitter:B:36:0x010d\l|r4.close()     \/\/ Catch:\{ Exception \-\> 0x0111 \}\l}"];
Node_38 [shape=record,label="{38\:\ 0x0111|ExcHandler: Exception (r0v11 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:36:0x010d\l|java.lang.Exception r0 = move\-exception\l}"];
Node_39 [shape=record,label="{39\:\ 0x0112|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r0)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0119|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\")\l}"];
Node_41 [shape=record,label="{41\:\ 0x0123|ExcHandler: all (r0v16 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:17:0x00d2\l|java.lang.Throwable r0 = move\-exception\l}"];
Node_42 [shape=record,label="{42\:\ 0x0124|r8 = r2\lr2 = r0\lr0 = r8\lr3 = r3\l}"];
Node_43 [shape=record,label="{43\:\ 0x0129|ExcHandler: Exception (r5v11 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:17:0x00d2\l|java.lang.Exception r5 = move\-exception\l}"];
Node_44 [shape=record,label="{44\:\ 0x012a|r8 = r3\lr3 = r2\lr2 = r5\lr5 = r4\l}"];
Node_45 [shape=record,label="{45\:\ 0x012f|ExcHandler: all (r4v16 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:15:0x00cb\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_46 [shape=record,label="{46\:\ 0x0130|r8 = r4\lr4 = null\lr0 = r2\lr2 = r8\lr3 = r3\l}"];
Node_47 [shape=record,label="{47\:\ 0x0136|ExcHandler: Exception (r4v15 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:15:0x00cb\l|java.lang.Exception r4 = move\-exception\l}"];
Node_48 [shape=record,label="{48\:\ 0x0137|r5 = null\lr8 = r3\lr3 = r2\lr2 = r4\l}"];
Node_49 [shape=record,label="{49\:\ 0x013b|PHI: r2 r3 r5 r8 \l  PHI: (r2v31 java.lang.Exception) = (r2v32 java.lang.Exception), (r2v34 java.lang.Exception) binds: [B:48:0x0137, B:44:0x012a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v28 java.io.InputStream) = (r3v29 java.io.InputStream), (r3v30 java.io.InputStream) binds: [B:48:0x0137, B:44:0x012a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v8 ?) = (r5v9 java.io.BufferedOutputStream), (r5v12 java.io.BufferedOutputStream) binds: [B:48:0x0137, B:44:0x012a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r8v1 java.io.ByteArrayOutputStream) = (r8v2 java.io.ByteArrayOutputStream), (r8v4 java.io.ByteArrayOutputStream) binds: [B:48:0x0137, B:44:0x012a] A[DONT_GENERATE, DONT_INLINE]\l|r4 = r8\l}"];
Node_50 [shape=record,label="{50\:\ 0x013d|ExcHandler: all (r3v25 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:13:0x00c6\l|java.lang.Throwable r3 = move\-exception\l}"];
Node_51 [shape=record,label="{51\:\ 0x013e|r4 = null\lr0 = r2\lr2 = r3\lr3 = null\l}"];
Node_52 [shape=record,label="{52\:\ 0x0144|ExcHandler: Exception (r3v23 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:13:0x00c6\l|java.lang.Exception r3 = move\-exception\l}"];
Node_53 [shape=record,label="{53\:\ 0x0145|r4 = null\lr5 = null\lr8 = r3\lr3 = r2\lr2 = r8\l}"];
Node_54 [shape=record,label="{54\:\ 0x014b|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:4:0x002a\l|java.lang.Throwable r2 = th\l}"];
Node_55 [shape=record,label="{55\:\ 0x014c|r3 = null\l}"];
Node_56 [shape=record,label="{56\:\ 0x014e|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:4:0x002a\l|java.lang.Exception r2 = e\l}"];
Node_57 [shape=record,label="{57\:\ 0x014f|r3 = null\l}"];
Node_58 [shape=record,label="{58\:\ 0x0151|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:1:0x0008\l|java.lang.Throwable r2 = th\l}"];
Node_59 [shape=record,label="{59\:\ 0x0152|r1 = null\lr3 = null\l}"];
Node_60 [shape=record,label="{60\:\ 0x0154|PHI: r1 r2 r3 \l  PHI: (r1v15 java.net.HttpURLConnection) = (r1v16 java.net.HttpURLConnection), (r1v20 java.net.HttpURLConnection) binds: [B:59:0x0152, B:55:0x014c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v10 'th' java.lang.Throwable) = (r2v11 'th' java.lang.Throwable), (r2v16 'th' java.lang.Throwable) binds: [B:59:0x0152, B:55:0x014c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v10 java.io.BufferedOutputStream) = (r3v11 java.io.BufferedOutputStream), (r3v15 java.io.BufferedOutputStream) binds: [B:59:0x0152, B:55:0x014c] A[DONT_GENERATE, DONT_INLINE]\l|r4 = r3\lr3 = r3\l}"];
Node_61 [shape=record,label="{61\:\ 0x0156|ExcHandler: Exception (e java.lang.Exception)\lSplitter:B:1:0x0008\l|java.lang.Exception r2 = e\l}"];
Node_62 [shape=record,label="{62\:\ 0x0157|r1 = null\lr3 = null\l}"];
Node_63 [shape=record,label="{63\:\ 0x0159|PHI: r1 r2 r3 \l  PHI: (r1v13 java.net.HttpURLConnection) = (r1v14 java.net.HttpURLConnection), (r1v20 java.net.HttpURLConnection) binds: [B:62:0x0157, B:57:0x014f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v8 java.lang.Exception) = (r2v9 'e' java.lang.Exception), (r2v15 'e' java.lang.Exception) binds: [B:62:0x0157, B:57:0x014f] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v8 java.io.InputStream) = (r3v9 java.io.InputStream), (r3v14 java.io.InputStream) binds: [B:62:0x0157, B:57:0x014f] A[DONT_GENERATE, DONT_INLINE]\l|r4 = r3\lr5 = r4\lr4 = r4\l}"];
Node_64 [shape=record,label="{64\:\ 0x015b|PHI: r1 r2 r3 r4 r5 \l  PHI: (r1v7 java.net.HttpURLConnection) = (r1v13 java.net.HttpURLConnection), (r1v20 java.net.HttpURLConnection), (r1v20 java.net.HttpURLConnection) binds: [B:63:0x0159, B:53:0x0145, B:49:0x013b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 java.lang.Exception) = (r2v8 java.lang.Exception), (r2v29 java.lang.Exception), (r2v31 java.lang.Exception) binds: [B:63:0x0159, B:53:0x0145, B:49:0x013b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v3 java.io.InputStream) = (r3v8 java.io.InputStream), (r3v24 java.io.InputStream), (r3v28 java.io.InputStream) binds: [B:63:0x0159, B:53:0x0145, B:49:0x013b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 java.io.ByteArrayOutputStream) = (r4v12 java.io.ByteArrayOutputStream), (r4v14 java.io.ByteArrayOutputStream), (r4v27 ?) binds: [B:53:0x0145, B:49:0x013b, B:63:0x0159] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v2 ?) = (r5v3 ?), (r5v7 ?), (r5v8 ?) binds: [B:63:0x0159, B:53:0x0145, B:49:0x013b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_65 [shape=record,label="{65\:\ 0x015f|SYNTHETIC\lSplitter:B:65:0x015f\l}"];
Node_66 [shape=record,label="{66\:\ ?|Catch:\{ all \-\> 0x01a2 \}\lSplitter:B:65:0x015f\l|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"Error getting imagery meta data\", r2)     \/\/ Catch:\{ all \-\> 0x01a2 \}\l}"];
Node_67 [shape=record,label="{67\:\ 0x0162|if (r1 == null) goto L_0x0170\l}"];
Node_68 [shape=record,label="{68\:\ 0x0164|SYNTHETIC\lSplitter:B:68:0x0164\l}"];
Node_69 [shape=record,label="{69\:\ ?|Catch:\{ Exception \-\> 0x0168 \}\lSplitter:B:68:0x0164\l|r1.disconnect()     \/\/ Catch:\{ Exception \-\> 0x0168 \}\l}"];
Node_70 [shape=record,label="{70\:\ 0x0168|ExcHandler: Exception (r1v12 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:68:0x0164\l|java.lang.Exception r1 = move\-exception\l}"];
Node_71 [shape=record,label="{71\:\ 0x0169|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r1)\l}"];
Node_72 [shape=record,label="{72\:\ 0x0170|if (r3 == null) goto L_0x017e\l}"];
Node_73 [shape=record,label="{73\:\ 0x0172|SYNTHETIC\lSplitter:B:73:0x0172\l}"];
Node_74 [shape=record,label="{74\:\ ?|Catch:\{ Exception \-\> 0x0176 \}\lSplitter:B:73:0x0172\l|r3.close()     \/\/ Catch:\{ Exception \-\> 0x0176 \}\l}"];
Node_75 [shape=record,label="{75\:\ 0x0176|ExcHandler: Exception (r1v11 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:73:0x0172\l|java.lang.Exception r1 = move\-exception\l}"];
Node_76 [shape=record,label="{76\:\ 0x0177|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r1)\l}"];
Node_77 [shape=record,label="{77\:\ 0x017e|if (r4 == null) goto L_0x018c\l}"];
Node_78 [shape=record,label="{78\:\ 0x0180|SYNTHETIC\lSplitter:B:78:0x0180\l}"];
Node_79 [shape=record,label="{79\:\ ?|Catch:\{ Exception \-\> 0x0184 \}\lSplitter:B:78:0x0180\l|r4.close()     \/\/ Catch:\{ Exception \-\> 0x0184 \}\l}"];
Node_80 [shape=record,label="{80\:\ 0x0184|ExcHandler: Exception (r1v10 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:78:0x0180\l|java.lang.Exception r1 = move\-exception\l}"];
Node_81 [shape=record,label="{81\:\ 0x0185|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r1)\l}"];
Node_82 [shape=record,label="{82\:\ 0x018c|if (r5 == null) goto L_0x019a\l}"];
Node_83 [shape=record,label="{83\:\ 0x018e|SYNTHETIC\lSplitter:B:83:0x018e\l}"];
Node_84 [shape=record,label="{84\:\ ?|Catch:\{ Exception \-\> 0x0192 \}\lSplitter:B:83:0x018e\l|r5.close()     \/\/ Catch:\{ Exception \-\> 0x0192 \}\l}"];
Node_85 [shape=record,label="{85\:\ 0x0192|ExcHandler: Exception (r1v9 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:83:0x018e\l|java.lang.Exception r1 = move\-exception\l}"];
Node_86 [shape=record,label="{86\:\ 0x0193|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r1)\l}"];
Node_87 [shape=record,label="{87\:\ 0x019a|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\")\l}"];
Node_88 [shape=record,label="{88\:\ 0x01a2|ExcHandler: all (th java.lang.Throwable)\lSplitter:B:65:0x015f\l|java.lang.Throwable r2 = th\l}"];
Node_89 [shape=record,label="{89\:\ 0x01a3|r0 = r3\lr3 = r4\lr4 = r5\l}"];
Node_90 [shape=record,label="{90\:\ 0x01a6|PHI: r0 r1 r2 r3 r4 \l  PHI: (r0v2 java.io.InputStream) = (r0v7 java.io.InputStream), (r0v1 java.io.InputStream), (r0v14 java.io.InputStream), (r0v15 java.io.InputStream), (r0v17 java.io.InputStream) binds: [B:89:0x01a3, B:60:0x0154, B:51:0x013e, B:46:0x0130, B:42:0x0124] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 java.net.HttpURLConnection) = (r1v7 java.net.HttpURLConnection), (r1v15 java.net.HttpURLConnection), (r1v20 java.net.HttpURLConnection), (r1v20 java.net.HttpURLConnection), (r1v20 java.net.HttpURLConnection) binds: [B:89:0x01a3, B:60:0x0154, B:51:0x013e, B:46:0x0130, B:42:0x0124] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v0 'th' java.lang.Throwable) = (r2v2 'th' java.lang.Throwable), (r2v10 'th' java.lang.Throwable), (r2v30 'th' java.lang.Throwable), (r2v33 'th' java.lang.Throwable), (r2v35 'th' java.lang.Throwable) binds: [B:89:0x01a3, B:60:0x0154, B:51:0x013e, B:46:0x0130, B:42:0x0124] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v0 java.io.ByteArrayOutputStream) = (r3v4 java.io.ByteArrayOutputStream), (r3v26 java.io.ByteArrayOutputStream), (r3v38 ?), (r3v39 java.io.ByteArrayOutputStream), (r3v40 java.io.ByteArrayOutputStream) binds: [B:89:0x01a3, B:51:0x013e, B:60:0x0154, B:46:0x0130, B:42:0x0124] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v0 java.io.BufferedOutputStream) = (r4v2 java.io.BufferedOutputStream), (r4v4 java.io.BufferedOutputStream), (r4v13 java.io.BufferedOutputStream), (r4v17 java.io.BufferedOutputStream), (r4v18 java.io.BufferedOutputStream) binds: [B:89:0x01a3, B:60:0x0154, B:51:0x013e, B:46:0x0130, B:42:0x0124] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L_0x01b4\l}"];
Node_91 [shape=record,label="{91\:\ 0x01a8|SYNTHETIC\lSplitter:B:91:0x01a8\l}"];
Node_92 [shape=record,label="{92\:\ ?|Catch:\{ Exception \-\> 0x01ac \}\lSplitter:B:91:0x01a8\l|r1.disconnect()     \/\/ Catch:\{ Exception \-\> 0x01ac \}\l}"];
Node_93 [shape=record,label="{93\:\ 0x01ac|ExcHandler: Exception (r1v6 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:91:0x01a8\l|java.lang.Exception r1 = move\-exception\l}"];
Node_94 [shape=record,label="{94\:\ 0x01ad|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r1)\l}"];
Node_95 [shape=record,label="{95\:\ 0x01b4|if (r0 == null) goto L_0x01c2\l}"];
Node_96 [shape=record,label="{96\:\ 0x01b6|SYNTHETIC\lSplitter:B:96:0x01b6\l}"];
Node_97 [shape=record,label="{97\:\ ?|Catch:\{ Exception \-\> 0x01ba \}\lSplitter:B:96:0x01b6\l|r0.close()     \/\/ Catch:\{ Exception \-\> 0x01ba \}\l}"];
Node_98 [shape=record,label="{98\:\ 0x01ba|ExcHandler: Exception (r0v6 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:96:0x01b6\l|java.lang.Exception r0 = move\-exception\l}"];
Node_99 [shape=record,label="{99\:\ 0x01bb|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r0)\l}"];
Node_100 [shape=record,label="{100\:\ 0x01c2|if (r3 == null) goto L_0x01d0\l}"];
Node_101 [shape=record,label="{101\:\ 0x01c4|SYNTHETIC\lSplitter:B:101:0x01c4\l}"];
Node_102 [shape=record,label="{102\:\ ?|Catch:\{ Exception \-\> 0x01c8 \}\lSplitter:B:101:0x01c4\l|r3.close()     \/\/ Catch:\{ Exception \-\> 0x01c8 \}\l}"];
Node_103 [shape=record,label="{103\:\ 0x01c8|ExcHandler: Exception (r0v5 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:101:0x01c4\l|java.lang.Exception r0 = move\-exception\l}"];
Node_104 [shape=record,label="{104\:\ 0x01c9|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r0)\l}"];
Node_105 [shape=record,label="{105\:\ 0x01d0|if (r4 == null) goto L_0x01de\l}"];
Node_106 [shape=record,label="{106\:\ 0x01d2|SYNTHETIC\lSplitter:B:106:0x01d2\l}"];
Node_107 [shape=record,label="{107\:\ ?|Catch:\{ Exception \-\> 0x01d6 \}\lSplitter:B:106:0x01d2\l|r4.close()     \/\/ Catch:\{ Exception \-\> 0x01d6 \}\l}"];
Node_108 [shape=record,label="{108\:\ 0x01d6|ExcHandler: Exception (r0v4 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:106:0x01d2\l|java.lang.Exception r0 = move\-exception\l}"];
Node_109 [shape=record,label="{109\:\ 0x01d7|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\", r0)\l}"];
Node_110 [shape=record,label="{110\:\ 0x01de|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"end getMetaData\")\l}"];
Node_111 [shape=record,label="{111\:\ 0x01e5|throw r2\l}"];
Node_112 [shape=record,label="{112\:\ 0x0089|SYNTHETIC\l}"];
Node_113 [shape=record,label="{113\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_114 [shape=record,label="{114\:\ ?|SYNTHETIC\lRETURN\l|return r5\l}"];
MethodNode[shape=record,label="{private org.osmdroid.tileprovider.tilesource.bing.ImageryMetaDataResource org.osmdroid.tileprovider.tilesource.bing.BingMapTileSource.getMetaData((r9v0 'this' org.osmdroid.tileprovider.tilesource.bing.BingMapTileSource A[IMMUTABLE_TYPE, THIS]))  | INCONSISTENT_CODE\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r3v0, resolved type: java.io.ByteArrayOutputStream\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r4v1, resolved type: java.io.ByteArrayOutputStream\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r4v12, resolved type: java.io.ByteArrayOutputStream\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r3v26, resolved type: java.io.ByteArrayOutputStream\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r4v14, resolved type: java.io.ByteArrayOutputStream\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r5v9, resolved type: java.io.BufferedOutputStream\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r5v12, resolved type: java.io.BufferedOutputStream\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r3v39, resolved type: java.io.ByteArrayOutputStream\}\lJADX DEBUG: Multi\-variable search result rejected for TypeSearchVarInfo\{r3v40, resolved type: java.io.ByteArrayOutputStream\}\lJADX WARNING: type inference failed for: r5v2, types: [java.io.BufferedOutputStream]\lJADX WARNING: type inference failed for: r5v3\lJADX WARNING: type inference failed for: r5v7\lJADX WARNING: type inference failed for: r5v8\lJADX WARNING: type inference failed for: r4v27\lJADX WARNING: type inference failed for: r3v38\lMulti\-variable type inference failed\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_61;
Node_1 -> Node_58;
Node_2 -> Node_3;
Node_2 -> Node_61;
Node_2 -> Node_58;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_56;
Node_4 -> Node_54;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_112;
Node_8 -> Node_6;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_20;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_13 -> Node_52;
Node_13 -> Node_50;
Node_14 -> Node_15;
Node_14 -> Node_52;
Node_14 -> Node_50;
Node_15 -> Node_16;
Node_15 -> Node_47;
Node_15 -> Node_45;
Node_16 -> Node_17;
Node_16 -> Node_47;
Node_16 -> Node_45;
Node_17 -> Node_18;
Node_17 -> Node_43;
Node_17 -> Node_41;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_25;
Node_21 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_22 -> Node_25;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_30;
Node_26 -> Node_27;
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_27 -> Node_30;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_35;
Node_31 -> Node_32;
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_32 -> Node_35;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_40;
Node_36 -> Node_37;
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_37 -> Node_40;
Node_38 -> Node_39;
Node_39 -> Node_40;
Node_40 -> Node_114;
Node_41 -> Node_42;
Node_42 -> Node_90;
Node_43 -> Node_44;
Node_44 -> Node_49;
Node_45 -> Node_46;
Node_46 -> Node_90;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_64;
Node_50 -> Node_51;
Node_51 -> Node_90;
Node_52 -> Node_53;
Node_53 -> Node_64;
Node_54 -> Node_55;
Node_55 -> Node_60;
Node_56 -> Node_57;
Node_57 -> Node_63;
Node_58 -> Node_59;
Node_59 -> Node_60;
Node_60 -> Node_90;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_65 -> Node_88;
Node_66 -> Node_67;
Node_66 -> Node_88;
Node_67 -> Node_68[style=dashed];
Node_67 -> Node_72;
Node_68 -> Node_69;
Node_68 -> Node_70;
Node_69 -> Node_70;
Node_69 -> Node_72;
Node_70 -> Node_71;
Node_71 -> Node_72;
Node_72 -> Node_73[style=dashed];
Node_72 -> Node_77;
Node_73 -> Node_74;
Node_73 -> Node_75;
Node_74 -> Node_75;
Node_74 -> Node_77;
Node_75 -> Node_76;
Node_76 -> Node_77;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_82;
Node_78 -> Node_79;
Node_78 -> Node_80;
Node_79 -> Node_80;
Node_79 -> Node_82;
Node_80 -> Node_81;
Node_81 -> Node_82;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_87;
Node_83 -> Node_84;
Node_83 -> Node_85;
Node_84 -> Node_85;
Node_84 -> Node_87;
Node_85 -> Node_86;
Node_86 -> Node_87;
Node_87 -> Node_113;
Node_88 -> Node_89;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_95;
Node_91 -> Node_92;
Node_91 -> Node_93;
Node_92 -> Node_93;
Node_92 -> Node_95;
Node_93 -> Node_94;
Node_94 -> Node_95;
Node_95 -> Node_96[style=dashed];
Node_95 -> Node_100;
Node_96 -> Node_97;
Node_96 -> Node_98;
Node_97 -> Node_98;
Node_97 -> Node_100;
Node_98 -> Node_99;
Node_99 -> Node_100;
Node_100 -> Node_101[style=dashed];
Node_100 -> Node_105;
Node_101 -> Node_102;
Node_101 -> Node_103;
Node_102 -> Node_103;
Node_102 -> Node_105;
Node_103 -> Node_104;
Node_104 -> Node_105;
Node_105 -> Node_106[style=dashed];
Node_105 -> Node_110;
Node_106 -> Node_107;
Node_106 -> Node_108;
Node_107 -> Node_108;
Node_107 -> Node_110;
Node_108 -> Node_109;
Node_109 -> Node_110;
Node_110 -> Node_111;
Node_112 -> Node_9;
}

