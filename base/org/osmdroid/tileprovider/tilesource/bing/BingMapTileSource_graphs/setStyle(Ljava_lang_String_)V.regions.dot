digraph "CFG fororg.osmdroid.tileprovider.tilesource.bing.BingMapTileSource.setStyle(Ljava\/lang\/String;)V" {
subgraph cluster_Region_1330443141 {
label = "R(2:(2:2|a)|12)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_388281882 {
label = "IF [B:1:0x0006] THEN: R(2:2|a) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.equals(r3.mStyle) == false) goto L_0x0008\l}"];
subgraph cluster_Region_1277186762 {
label = "R(2:2|a)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
subgraph cluster_SynchronizedRegion_849883421 {
label = "Synchronized:R(2:3|(1:6))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a}"];
subgraph cluster_Region_441465878 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|r3.mUrl = null\lr3.mBaseUrl = null\lr3.mImageryData.m_isInitialised = false\l}"];
}
}
}
}
Node_12 [shape=record,label="{12\:\ 0x001a|r3.mStyle = r4\lr3.mName = pathBase()\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000c|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0015|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x0015: MONITOR_EXIT  \l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0017|REMOVE\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0018|REMOVE\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0019|REMOVE\l|throw r4\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0022}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.tilesource.bing.BingMapTileSource.setStyle((r3v0 'this' org.osmdroid.tileprovider.tilesource.bing.BingMapTileSource A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_12[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_12 -> Node_13;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

