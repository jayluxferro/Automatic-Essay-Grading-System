digraph "CFG fororg.osmdroid.tileprovider.tilesource.CloudmadeTileSource.setStyle(Ljava\/lang\/String;)V" {
subgraph cluster_Region_1476290747 {
label = "R(1:(1:1))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_2103770070 {
label = "Try: R(1:1) catches: R(1:2)";
node [shape=record,color=blue];
subgraph cluster_Region_1718284916 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ NumberFormatException \-\> 0x000b \}\lSplitter:B:0:0x0000\l|r3.mStyle = java.lang.Integer.valueOf(java.lang.Integer.parseInt(r4))     \/\/ Catch:\{ NumberFormatException \-\> 0x000b \}\l}"];
}
subgraph cluster_Region_52624765 {
label = "R(1:2) | ExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"Error setting integer style: \" + r4)\l}"];
}
}
}
subgraph cluster_Region_52624765 {
label = "R(1:2) | ExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"Error setting integer style: \" + r4)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_3 [shape=record,color=red,label="{3\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException (unused java.lang.NumberFormatException)\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,color=red,label="{4\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.tilesource.CloudmadeTileSource.setStyle((r3v0 'this' org.osmdroid.tileprovider.tilesource.CloudmadeTileSource A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_3;
Node_1 -> Node_5;
Node_2 -> Node_4;
Node_2 -> Node_4;
Node_0 -> Node_1;
Node_0 -> Node_3;
Node_3 -> Node_2;
}

