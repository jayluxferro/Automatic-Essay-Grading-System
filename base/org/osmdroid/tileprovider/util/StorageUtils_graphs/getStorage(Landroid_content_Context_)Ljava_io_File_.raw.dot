digraph "CFG fororg.osmdroid.tileprovider.util.StorageUtils.getStorage(Landroid\/content\/Context;)Ljava\/io\/File;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.List) =  org.osmdroid.tileprovider.util.StorageUtils.getStorageList():java.util.List type: STATIC \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r3 I:int) = (r0 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:12:0x0031 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r3 I:java.lang.Object) = (r0 I:java.util.List), (r2 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r3 I:org.osmdroid.tileprovider.util.StorageUtils$StorageInfo) = (org.osmdroid.tileprovider.util.StorageUtils$StorageInfo) (r3 I:?[OBJECT, ARRAY]) \l0x0012: IGET  (r4 I:boolean) = \l  (r3 I:org.osmdroid.tileprovider.util.StorageUtils$StorageInfo)\l org.osmdroid.tileprovider.util.StorageUtils.StorageInfo.readonly boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|0x0016: NEW_INSTANCE  (r4 I:java.io.File) =  java.io.File \l0x0018: IGET  (r5 I:java.lang.String) = \l  (r3 I:org.osmdroid.tileprovider.util.StorageUtils$StorageInfo)\l org.osmdroid.tileprovider.util.StorageUtils.StorageInfo.path java.lang.String \l0x001a: INVOKE  (r4 I:java.io.File), (r5 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l0x001d: INVOKE  (r4 I:boolean) = (r4 I:java.io.File) org.osmdroid.tileprovider.util.StorageUtils.isWritable(java.io.File):boolean type: STATIC \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002e \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0025|0x0025: IGET  (r4 I:long) = \l  (r1 I:org.osmdroid.tileprovider.util.StorageUtils$StorageInfo)\l org.osmdroid.tileprovider.util.StorageUtils.StorageInfo.freeSpace long \l0x0027: IGET  (r6 I:long) = \l  (r3 I:org.osmdroid.tileprovider.util.StorageUtils$StorageInfo)\l org.osmdroid.tileprovider.util.StorageUtils.StorageInfo.freeSpace long \l0x0029: CMP_L  (r4 I:int) = (r4 I:long), (r6 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x002e \l}"];
Node_10 [shape=record,label="{10\:\ 0x002d|0x002d: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002e|0x002e: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0031|0x0031: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x003b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: NEW_INSTANCE  (r8 I:java.io.File) =  java.io.File \l0x0035: IGET  (r0 I:java.lang.String) = \l  (r1 I:org.osmdroid.tileprovider.util.StorageUtils$StorageInfo)\l org.osmdroid.tileprovider.util.StorageUtils.StorageInfo.path java.lang.String \l0x0037: INVOKE  (r8 I:java.io.File), (r0 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x003a|0x003a: RETURN  (r8 I:java.io.File) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|0x003b: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File \l0x003d: CONST_STR  (r1 I:java.lang.String) =  \"temp.sqlite\" \l0x003f: INVOKE  (r8 I:java.io.File) = (r8 I:android.content.Context), (r1 I:java.lang.String) android.content.Context.getDatabasePath(java.lang.String):java.io.File type: VIRTUAL \l0x0043: INVOKE  (r8 I:java.lang.String) = (r8 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x0047: CONST_STR  (r1 I:java.lang.String) =  \"temp.sqlite\" \l0x0049: CONST_STR  (r2 I:java.lang.String) =  \"\" \l0x004b: INVOKE  (r8 I:java.lang.String) = \l  (r8 I:java.lang.String)\l  (r1 I:java.lang.CharSequence)\l  (r2 I:java.lang.CharSequence)\l java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence):java.lang.String type: VIRTUAL \l0x004f: INVOKE  (r0 I:java.io.File), (r8 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x0052|0x0052: RETURN  (r0 I:java.io.File) \l}"];
MethodNode[shape=record,label="{public static java.io.File org.osmdroid.tileprovider.util.StorageUtils.getStorage((r8 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_12;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_1;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

