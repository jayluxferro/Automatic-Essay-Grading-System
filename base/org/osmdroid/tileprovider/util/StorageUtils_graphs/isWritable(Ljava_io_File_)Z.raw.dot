digraph "CFG fororg.osmdroid.tileprovider.util.StorageUtils.isWritable(Ljava\/io\/File;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: NEW_INSTANCE  (r0 I:java.io.File) =  java.io.File A[Catch:\{ Throwable \-\> 0x004f \}, TRY_ENTER]\l0x0002: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0004: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0007: INVOKE  (r2 I:java.lang.String) = (r4 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x000b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x000e: SGET  (r2 I:java.lang.String) =  java.io.File.separator java.lang.String A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0010: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0013: CONST_STR  (r2 I:java.lang.String) =  \"osm.tmp\" A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0015: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0018: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x001c: INVOKE  (r0 I:java.io.File), (r1 I:java.lang.String) java.io.File.\<init\>(java.lang.String):void type: DIRECT A[Catch:\{ Throwable \-\> 0x004f \}]\l0x001f: NEW_INSTANCE  (r1 I:java.io.FileOutputStream) =  java.io.FileOutputStream A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0021: INVOKE  (r1 I:java.io.FileOutputStream), (r0 I:java.io.File) java.io.FileOutputStream.\<init\>(java.io.File):void type: DIRECT A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0024: CONST_STR  (r2 I:java.lang.String) =  \"hi\" A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0026: INVOKE  (r2 I:byte[]) = (r2 I:java.lang.String) java.lang.String.getBytes():byte[] type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x002a: INVOKE  (r1 I:java.io.FileOutputStream), (r2 I:byte[]) java.io.FileOutputStream.write(byte[]):void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x002d: INVOKE  (r1 I:java.io.FileOutputStream) java.io.FileOutputStream.close():void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0030: CONST_STR  (r1 I:java.lang.String) =  \"StorageUtils\" A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0032: NEW_INSTANCE  (r2 I:java.lang.StringBuilder) =  java.lang.StringBuilder A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0034: INVOKE  (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0037: INVOKE  (r3 I:java.lang.String) = (r4 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x003b: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x003e: CONST_STR  (r3 I:java.lang.String) =  \" is writable\" A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0040: INVOKE  (r2 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0043: INVOKE  (r2 I:java.lang.String) = (r2 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}]\l0x0047: INVOKE  (r1 I:java.lang.String), (r2 I:java.lang.String) android.util.Log.i(java.lang.String, java.lang.String):int type: STATIC A[Catch:\{ Throwable \-\> 0x004f \}]\l0x004a: INVOKE  (r0 I:java.io.File) java.io.File.delete():boolean type: VIRTUAL A[Catch:\{ Throwable \-\> 0x004f \}, TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x004d|0x004d: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x004e|0x004e: RETURN  (r4 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x004f|0x004f: CONST_STR  (r0 I:java.lang.String) =  \"StorageUtils\" \l0x0051: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0053: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0056: INVOKE  (r4 I:java.lang.String) = (r4 I:java.io.File) java.io.File.getAbsolutePath():java.lang.String type: VIRTUAL \l0x005a: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x005d: CONST_STR  (r4 I:java.lang.String) =  \" is NOT writable\" \l0x005f: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0062: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0066: INVOKE  (r0 I:java.lang.String), (r4 I:java.lang.String) android.util.Log.i(java.lang.String, java.lang.String):int type: STATIC \l0x0069: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lExcHandler: Throwable null\lSplitter:B:0:0x0000\l}"];
Node_6 [shape=record,label="{6\:\ 0x006a|0x006a: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{public static boolean org.osmdroid.tileprovider.util.StorageUtils.isWritable((r4 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_4 -> Node_6;
Node_5 -> Node_4;
}

