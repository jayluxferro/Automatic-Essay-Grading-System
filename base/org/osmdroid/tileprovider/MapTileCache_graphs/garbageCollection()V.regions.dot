digraph "CFG fororg.osmdroid.tileprovider.MapTileCache.garbageCollection()V" {
subgraph cluster_Region_738400990 {
label = "R(4:0|(2:2|(1:4))(1:5)|6|(1:(2:15|(3:18|(2:20|(1:(1:28)))(0)|22)))) | DECL_VAR: int null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r5.mCachedTiles.size()\l}"];
subgraph cluster_IfRegion_581829749 {
label = "IF [B:1:0x0008] THEN: R(2:2|(1:4)) ELSE: R(1:5)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r5.mStressedMemory == false) goto L_0x000a\l}"];
subgraph cluster_Region_1996152570 {
label = "R(2:2|(1:4))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|int r1 = r0 \- r5.mCapacity\l}"];
subgraph cluster_IfRegion_546765673 {
label = "IF [B:3:0x000e] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|if (r1 \<= 0) goto L_0x0010\l}"];
subgraph cluster_Region_697362168 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|RETURN\l|return\l}"];
}
}
}
subgraph cluster_Region_1349584688 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011|r1 = Integer.MAX_VALUE\l}"];
}
}
Node_6 [shape=record,label="{6\:\ 0x0014|PHI: r1 \l  PHI: (r1v1 int) = (r1v8 int), (r1v10 int) binds: [B:5:0x0011, B:3:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|refreshAdditionalLists()\l}"];
subgraph cluster_Region_1091618869 {
label = "R(1:(2:15|(3:18|(2:20|(1:(1:28)))(0)|22)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_329533344 {
label = "IF [B:7:0x0019, B:9:0x002c, B:11:0x0030, B:13:0x0036] THEN: R(2:15|(3:18|(2:20|(1:(1:28)))(0)|22)) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|if (r5.mAutoEnsureCapacity == false) goto L_0x0039\l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|ADDED_TO_REGION\l|if (ensureCapacity(r5.mMapTileArea.size() + r5.mAdditionalMapTileList.size()) == false) goto L_0x0039\l}"];
Node_11 [shape=record,label="{11\:\ 0x0030|ADDED_TO_REGION\l|if (r5.mStressedMemory == true) goto L_0x0039\l}"];
Node_13 [shape=record,label="{13\:\ 0x0036|ADDED_TO_REGION\l|if ((r1 = r0 \- r5.mCapacity) \> 0) goto L_0x0039\l}"];
subgraph cluster_Region_1885085386 {
label = "R(2:15|(3:18|(2:20|(1:(1:28)))(0)|22))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0039|PHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v1 int), (r1v1 int), (r1v7 int) binds: [B:7:0x0019, B:9:0x002c, B:11:0x0030, B:13:0x0036] A[DONT_GENERATE, DONT_INLINE]\l|populateSyncCachedTiles(r5.mGC)\lint r0 = 0\l}"];
subgraph cluster_LoopRegion_1098178086 {
label = "LOOP:0: (3:18|(2:20|(1:(1:28)))(0)|22)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0045|if (r0 \< r5.mGC.getSize()) goto L_0x0047\l}"];
subgraph cluster_Region_614856202 {
label = "R(3:18|(2:20|(1:(1:28)))(0)|22)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0047|long long r2 = r5.mGC.get(r0)\l}"];
subgraph cluster_IfRegion_2092252457 {
label = "IF [B:19:0x0051] THEN: R(2:20|(1:(1:28))) ELSE: R(0)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0051|if (shouldKeepTile(r2) != true) goto L_0x0054\l}"];
subgraph cluster_Region_1687168150 {
label = "R(2:20|(1:(1:28)))";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0054|remove(r2)\lr1\-\-\l}"];
subgraph cluster_Region_324002254 {
label = "R(1:(1:28))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_76877181 {
label = "IF [B:21:0x0059] THEN: R(1:28) ELSE: null";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0059|if (r1 == 0) goto L_0x005f\l}"];
subgraph cluster_Region_706513969 {
label = "R(1:28)";
node [shape=record,color=blue];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_1837807655 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_22 [shape=record,label="{22\:\ 0x005c|LOOP_END\lPHI: r1 \l  PHI: (r1v4 int) = (r1v3 int), (r1v5 int) binds: [B:26:0x005c, B:25:0x005c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:16:0x003f\-\>B:22:0x005c\l|r0++\l}"];
}
}
}
}
}
}
Node_8 [shape=record,color=red,label="{8\:\ 0x001b}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002e}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0032}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0038}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x003f|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v4 int) = (r0v3 int), (r0v5 int) binds: [B:15:0x0039, B:22:0x005c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v3 int) = (r1v2 int), (r1v4 int) binds: [B:15:0x0039, B:22:0x005c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:16:0x003f\-\>B:22:0x005c\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x005f|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x005f|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x005c|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x005c|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileCache.garbageCollection((r5v0 'this' org.osmdroid.tileprovider.MapTileCache A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_23[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_26[style=dashed];
Node_20 -> Node_21;
Node_21 -> Node_24;
Node_21 -> Node_25[style=dashed];
Node_22 -> Node_16;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_16 -> Node_17;
Node_23 -> Node_27;
Node_24 -> Node_28;
Node_25 -> Node_22;
Node_26 -> Node_22;
}

