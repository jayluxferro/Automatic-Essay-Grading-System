digraph "CFG fororg.osmdroid.tileprovider.MapTileCache.populateSyncCachedTiles(Lorg\/osmdroid\/util\/MapTileList;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.HashMap\<java.lang.Long, android.graphics.drawable.Drawable\> r0 = r4.mCachedTiles\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|monitor\-enter(r0)\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\l}"];
Node_3 [shape=record,label="{3\:\ ?|r5.ensureCapacity(r4.mCachedTiles.size())\lr5.clear()\ljava.util.Iterator r1 = r4.mCachedTiles.keySet().iterator()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|LOOP_START\lLOOP:0: B:4:0x0019\-\>B:6:0x001f\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|if (r1.hasNext() == false) goto L_0x002d\l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|LOOP_END\lLOOP:0: B:4:0x0019\-\>B:6:0x001f\l|r5.put(r1.next().longValue())\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|monitor\-exit(r0)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|RETURN\l|return\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|REMOVE\l|java.lang.Throwable r5 = move\-exception\l}"];
Node_10 [shape=record,label="{10\:\ 0x0030|REMOVE\l}"];
Node_11 [shape=record,label="{11\:\ 0x0031|REMOVE\l|throw r5\l}"];
Node_12 [shape=record,label="{12\:\ 0x002d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.MapTileCache.populateSyncCachedTiles((r4v0 'this' org.osmdroid.tileprovider.MapTileCache A[IMMUTABLE_TYPE, THIS]), (r5v0 org.osmdroid.util.MapTileList A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_12;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_12 -> Node_7;
}

