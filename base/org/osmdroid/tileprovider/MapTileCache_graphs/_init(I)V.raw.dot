digraph "CFG fororg.osmdroid.tileprovider.MapTileCache.\<init\>(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.util.HashMap) =  java.util.HashMap \l0x0005: INVOKE  (r0 I:java.util.HashMap) java.util.HashMap.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.util.HashMap\<java.lang.Long, android.graphics.drawable.Drawable\>)\l  (r1 I:org.osmdroid.tileprovider.MapTileCache)\l org.osmdroid.tileprovider.MapTileCache.mCachedTiles java.util.HashMap \l0x000a: NEW_INSTANCE  (r0 I:org.osmdroid.util.MapTileArea) =  org.osmdroid.util.MapTileArea \l0x000c: INVOKE  (r0 I:org.osmdroid.util.MapTileArea) org.osmdroid.util.MapTileArea.\<init\>():void type: DIRECT \l0x000f: IPUT  \l  (r0 I:org.osmdroid.util.MapTileArea)\l  (r1 I:org.osmdroid.tileprovider.MapTileCache)\l org.osmdroid.tileprovider.MapTileCache.mMapTileArea org.osmdroid.util.MapTileArea \l0x0011: NEW_INSTANCE  (r0 I:org.osmdroid.util.MapTileAreaList) =  org.osmdroid.util.MapTileAreaList \l0x0013: INVOKE  (r0 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.\<init\>():void type: DIRECT \l0x0016: IPUT  \l  (r0 I:org.osmdroid.util.MapTileAreaList)\l  (r1 I:org.osmdroid.tileprovider.MapTileCache)\l org.osmdroid.tileprovider.MapTileCache.mAdditionalMapTileList org.osmdroid.util.MapTileAreaList \l0x0018: NEW_INSTANCE  (r0 I:org.osmdroid.util.MapTileList) =  org.osmdroid.util.MapTileList \l0x001a: INVOKE  (r0 I:org.osmdroid.util.MapTileList) org.osmdroid.util.MapTileList.\<init\>():void type: DIRECT \l0x001d: IPUT  \l  (r0 I:org.osmdroid.util.MapTileList)\l  (r1 I:org.osmdroid.tileprovider.MapTileCache)\l org.osmdroid.tileprovider.MapTileCache.mGC org.osmdroid.util.MapTileList \l0x001f: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0021: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0024: IPUT  \l  (r0 I:java.util.List\<org.osmdroid.util.MapTileAreaComputer\>)\l  (r1 I:org.osmdroid.tileprovider.MapTileCache)\l org.osmdroid.tileprovider.MapTileCache.mComputers java.util.List \l0x0026: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0028: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x002b: IPUT  \l  (r0 I:java.util.List\<org.osmdroid.util.MapTileContainer\>)\l  (r1 I:org.osmdroid.tileprovider.MapTileCache)\l org.osmdroid.tileprovider.MapTileCache.mProtectors java.util.List \l0x002d: INVOKE  (r1 I:org.osmdroid.tileprovider.MapTileCache), (r2 I:int) org.osmdroid.tileprovider.MapTileCache.ensureCapacity(int):boolean type: VIRTUAL \l0x0030: NEW_INSTANCE  (r2 I:org.osmdroid.tileprovider.MapTilePreCache) =  org.osmdroid.tileprovider.MapTilePreCache \l0x0032: INVOKE  \l  (r2 I:org.osmdroid.tileprovider.MapTilePreCache)\l  (r1 I:org.osmdroid.tileprovider.MapTileCache)\l org.osmdroid.tileprovider.MapTilePreCache.\<init\>(org.osmdroid.tileprovider.MapTileCache):void type: DIRECT \l0x0035: IPUT  \l  (r2 I:org.osmdroid.tileprovider.MapTilePreCache)\l  (r1 I:org.osmdroid.tileprovider.MapTileCache)\l org.osmdroid.tileprovider.MapTileCache.mPreCache org.osmdroid.tileprovider.MapTilePreCache \l}"];
Node_1 [shape=record,label="{1\:\ 0x0037|0x0037: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileCache.\<init\>((r1 'this' I:org.osmdroid.tileprovider.MapTileCache A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

