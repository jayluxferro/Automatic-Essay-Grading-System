digraph "CFG fororg.osmdroid.tileprovider.MapTileCache.refreshAdditionalLists()V" {
subgraph cluster_Region_1093393258 {
label = "R(3:0|(3:3|(1:5)(1:6)|7)|(1:10)) | DECL_VAR: org.osmdroid.util.MapTileArea null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r5.mComputers.iterator()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_2093931029 {
label = "LOOP:0: (3:3|(1:5)(1:6)|7)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000b|if (r0.hasNext() != false) goto L_0x000d\l}"];
subgraph cluster_Region_1692157884 {
label = "R(3:3|(1:5)(1:6)|7)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000d|org.osmdroid.util.MapTileAreaComputer r2 = r0.next()\l}"];
subgraph cluster_IfRegion_666113457 {
label = "IF [B:4:0x001d] THEN: R(1:5) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x001d|if (r1 \< r5.mAdditionalMapTileList.getList().size()) goto L_0x001f\l}"];
subgraph cluster_Region_167903822 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x001f|org.osmdroid.util.MapTileArea r3 = r5.mAdditionalMapTileList.getList().get(r1)\l}"];
}
subgraph cluster_Region_319437897 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x002c|org.osmdroid.util.MapTileArea r3 = new org.osmdroid.util.MapTileArea()\lr5.mAdditionalMapTileList.getList().add(r3)\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x003a|LOOP_END\lPHI: r3 \l  PHI: (r3v3 org.osmdroid.util.MapTileArea) = (r3v4 org.osmdroid.util.MapTileArea), (r3v8 org.osmdroid.util.MapTileArea) binds: [B:13:0x003a, B:14:0x003a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:7:0x003a\l|r2.computeFromSource(r5.mMapTileArea, r3)\lr1++\l}"];
}
}
subgraph cluster_LoopRegion_367884527 {
label = "LOOP:1: (1:10)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x004c|if (r1 \< r5.mAdditionalMapTileList.getList().size()) goto L_0x004e\l}"];
subgraph cluster_Region_1700397320 {
label = "R(1:10)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x004e|LOOP_END\lLOOP:1: B:8:0x0042\-\>B:10:0x004e\l|r5.mAdditionalMapTileList.getList().remove(r5.mAdditionalMapTileList.getList().size() \- 1)\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0007|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:7:0x003a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:7:0x003a\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0042|LOOP_START\lLOOP:1: B:8:0x0042\-\>B:10:0x004e\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0064}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0042|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003a|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x003a|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0064|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.MapTileCache.refreshAdditionalLists((r5v0 'this' org.osmdroid.tileprovider.MapTileCache A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_12[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_13;
Node_7 -> Node_1;
Node_9 -> Node_10;
Node_9 -> Node_15[style=dashed];
Node_10 -> Node_8;
Node_1 -> Node_2;
Node_8 -> Node_9;
Node_12 -> Node_8;
Node_13 -> Node_7;
Node_14 -> Node_7;
Node_15 -> Node_11;
}

