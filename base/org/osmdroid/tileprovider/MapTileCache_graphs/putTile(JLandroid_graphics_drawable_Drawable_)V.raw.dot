digraph "CFG fororg.osmdroid.tileprovider.MapTileCache.putTile(JLandroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0013 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:java.util.HashMap\<java.lang.Long, android.graphics.drawable.Drawable\>) = (r2 I:org.osmdroid.tileprovider.MapTileCache) org.osmdroid.tileprovider.MapTileCache.mCachedTiles java.util.HashMap \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: IGET  (r1 I:java.util.HashMap\<java.lang.Long, android.graphics.drawable.Drawable\>) = (r2 I:org.osmdroid.tileprovider.MapTileCache) org.osmdroid.tileprovider.MapTileCache.mCachedTiles java.util.HashMap A[Catch:\{ all \-\> 0x0010 \}, TRY_ENTER]\l0x0007: INVOKE  (r3 I:java.lang.Long) = (r3 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC A[Catch:\{ all \-\> 0x0010 \}]\l0x000b: INVOKE  \l  (r1 I:java.util.HashMap)\l  (r3 I:java.lang.Object)\l  (r5 I:java.lang.Object)\l java.util.HashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x0010 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0010 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000f|0x000f: GOTO  \-\> 0x0013 A[Catch:\{ all \-\> 0x0010 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|ExcHandler: all null\lSplitter:B:3:0x0005\l|0x0010: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0010 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|0x0011: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0010 \}, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0012|0x0012: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0013|0x0013: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileCache.putTile((r2 'this' I:org.osmdroid.tileprovider.MapTileCache A[IMMUTABLE_TYPE, THIS]), (r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_10;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

