digraph "CFG fororg.osmdroid.tileprovider.MapTileCache.putTile(JLandroid\/graphics\/drawable\/Drawable;)V" {
subgraph cluster_Region_1099527351 {
label = "R(1:(1:(2:1|4)))";
node [shape=record,color=blue];
subgraph cluster_Region_1431522211 {
label = "R(1:(2:1|4))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2128648055 {
label = "IF [B:0:0x0000] THEN: R(2:1|4) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r5 != null) goto L_0x0002\l}"];
subgraph cluster_Region_172149104 {
label = "R(2:1|4)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
subgraph cluster_SynchronizedRegion_14956611 {
label = "Synchronized:R(2:2|(1:4))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
subgraph cluster_Region_1327850927 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ ?|r2.mCachedTiles.put(java.lang.Long.valueOf(r3), r5)\l}"];
}
}
}
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0005|SYNTHETIC\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000e|DONT_GENERATE\l|monitor\-exit(\l\/\/ error: 0x000e: MONITOR_EXIT  \l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000f}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0010|REMOVE\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0011|REMOVE\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0012|REMOVE\l|throw r3\l}"];
Node_10 [shape=record,color=red,label="{10\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_11 [shape=record,color=red,label="{11\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileCache.putTile((r2v0 'this' org.osmdroid.tileprovider.MapTileCache A[IMMUTABLE_TYPE, THIS]), (r3v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_10[style=dashed];
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_3 -> Node_4;
Node_3 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

