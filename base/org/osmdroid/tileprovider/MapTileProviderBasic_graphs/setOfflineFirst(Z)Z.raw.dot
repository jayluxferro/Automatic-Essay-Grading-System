digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderBasic.setOfflineFirst(Z)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List) = (r8 I:org.osmdroid.tileprovider.MapTileProviderBasic) org.osmdroid.tileprovider.MapTileProviderBasic.mTileProviderList java.util.List \l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0008: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x0009: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000a: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: INVOKE  (r6 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0028 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: INVOKE  (r6 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0015: CHECK_CAST  (r6 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) = (org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|0x0017: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IGET  (r7 I:org.osmdroid.tileprovider.modules.MapTileDownloader) = (r8 I:org.osmdroid.tileprovider.MapTileProviderBasic) org.osmdroid.tileprovider.MapTileProviderBasic.mDownloaderProvider org.osmdroid.tileprovider.modules.MapTileDownloader \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001e \l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|0x001d: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|0x001e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0025 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IGET  (r7 I:org.osmdroid.tileprovider.modules.MapTileApproximater) = (r8 I:org.osmdroid.tileprovider.MapTileProviderBasic) org.osmdroid.tileprovider.MapTileProviderBasic.mApproximationProvider org.osmdroid.tileprovider.modules.MapTileApproximater \l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|0x0022: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0025 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|0x0025: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0047 \l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|0x002a: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x002d \l}"];
Node_16 [shape=record,label="{16\:\ 0x002d|0x002d: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|0x002e: IF  (r4 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:20:0x0033 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0030|0x0030: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0033 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0032|0x0032: RETURN  (r0 I:boolean) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0033|0x0033: IF  (r4 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:23:0x0038 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0035|0x0035: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0038 \l}"];
Node_22 [shape=record,label="{22\:\ 0x0037|0x0037: RETURN  (r0 I:boolean) \l}"];
Node_23 [shape=record,label="{23\:\ 0x0038|0x0038: IGET  (r9 I:java.util.List) = (r8 I:org.osmdroid.tileprovider.MapTileProviderBasic) org.osmdroid.tileprovider.MapTileProviderBasic.mTileProviderList java.util.List \l0x003a: IGET  (r1 I:org.osmdroid.tileprovider.modules.MapTileApproximater) = (r8 I:org.osmdroid.tileprovider.MapTileProviderBasic) org.osmdroid.tileprovider.MapTileProviderBasic.mApproximationProvider org.osmdroid.tileprovider.modules.MapTileApproximater \l0x003c: INVOKE  (r9 I:java.util.List), (r3 I:int), (r1 I:java.lang.Object) java.util.List.set(int, java.lang.Object):java.lang.Object type: INTERFACE \l0x003f: IGET  (r9 I:java.util.List) = (r8 I:org.osmdroid.tileprovider.MapTileProviderBasic) org.osmdroid.tileprovider.MapTileProviderBasic.mTileProviderList java.util.List \l0x0041: IGET  (r1 I:org.osmdroid.tileprovider.modules.MapTileDownloader) = (r8 I:org.osmdroid.tileprovider.MapTileProviderBasic) org.osmdroid.tileprovider.MapTileProviderBasic.mDownloaderProvider org.osmdroid.tileprovider.modules.MapTileDownloader \l0x0043: INVOKE  (r9 I:java.util.List), (r4 I:int), (r1 I:java.lang.Object) java.util.List.set(int, java.lang.Object):java.lang.Object type: INTERFACE \l}"];
Node_24 [shape=record,label="{24\:\ 0x0046|0x0046: RETURN  (r0 I:boolean) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0047|0x0047: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.MapTileProviderBasic.setOfflineFirst((r8 'this' I:org.osmdroid.tileprovider.MapTileProviderBasic A[IMMUTABLE_TYPE, THIS]), (r9 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_13;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_12;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_25;
Node_14 -> Node_16;
Node_14 -> Node_25[style=dashed];
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_20;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_23;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_23 -> Node_24;
}

