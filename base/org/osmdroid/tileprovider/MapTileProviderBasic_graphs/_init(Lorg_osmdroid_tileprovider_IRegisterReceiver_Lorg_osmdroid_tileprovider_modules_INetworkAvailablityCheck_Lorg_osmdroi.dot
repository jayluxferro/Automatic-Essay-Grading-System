digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderBasic.\<init\>(Lorg\/osmdroid\/tileprovider\/IRegisterReceiver;Lorg\/osmdroid\/tileprovider\/modules\/INetworkAvailablityCheck;Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;Landroid\/content\/Context;Lorg\/osmdroid\/tileprovider\/modules\/IFilesystemCache;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r5, r3)\lr2.mNetworkAvailabilityCheck = r4\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r7 == null) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|r2.tileWriter = r7\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a}"];
Node_4 [shape=record,label="{4\:\ 0x000e|if (android.os.Build.VERSION.SDK_INT \>= 10) goto L_0x0018\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|r2.tileWriter = new org.osmdroid.tileprovider.modules.TileWriter()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0018|r2.tileWriter = new org.osmdroid.tileprovider.modules.SqlTileWriter()\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|org.osmdroid.tileprovider.modules.MapTileAssetsProvider r7 = new org.osmdroid.tileprovider.modules.MapTileAssetsProvider(r3, r6.getAssets(), r5)\lr2.mTileProviderList.add(r7)\lorg.osmdroid.tileprovider.modules.MapTileFileStorageProviderBase r6 = getMapTileFileStorageProviderBase(r3, r5, r2.tileWriter)\lr2.mTileProviderList.add(r6)\lorg.osmdroid.tileprovider.modules.MapTileFileArchiveProvider r0 = new org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider(r3, r5)\lr2.mTileProviderList.add(r0)\lr2.mApproximationProvider = new org.osmdroid.tileprovider.modules.MapTileApproximater()\lr2.mTileProviderList.add(r2.mApproximationProvider)\lr2.mApproximationProvider.addProvider(r7)\lr2.mApproximationProvider.addProvider(r6)\lr2.mApproximationProvider.addProvider(r0)\lr2.mDownloaderProvider = new org.osmdroid.tileprovider.modules.MapTileDownloader(r5, r2.tileWriter, r4)\lr2.mTileProviderList.add(r2.mDownloaderProvider)\lgetTileCache().getProtectedTileComputers().add(new org.osmdroid.util.MapTileAreaZoomComputer(\-1))\lgetTileCache().getProtectedTileComputers().add(new org.osmdroid.util.MapTileAreaBorderComputer(1))\lgetTileCache().setAutoEnsureCapacity(false)\lgetTileCache().setStressedMemory(false)\lgetTileCache().getPreCache().addProvider(r7)\lgetTileCache().getPreCache().addProvider(r6)\lgetTileCache().getPreCache().addProvider(r0)\lgetTileCache().getPreCache().addProvider(r2.mDownloaderProvider)\lgetTileCache().getProtectedTileContainers().add(r2)\lsetOfflineFirst(true)\l}"];
Node_8 [shape=record,label="{8\:\ 0x00dc|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.MapTileProviderBasic.\<init\>((r2v0 'this' org.osmdroid.tileprovider.MapTileProviderBasic A[IMMUTABLE_TYPE, THIS]), (r3v0 org.osmdroid.tileprovider.IRegisterReceiver A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 org.osmdroid.tileprovider.modules.INetworkAvailablityCheck A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.osmdroid.tileprovider.modules.IFilesystemCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

