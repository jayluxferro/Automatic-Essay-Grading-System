digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderBasic.setOfflineFirst(Z)Z" {
subgraph cluster_Region_190481965 {
label = "R(3:0|(4:3|(1:7)|(1:11)|12)|(2:(1:24)|(1:(2:(1:18)|(1:(2:(1:21)|(2:22|23)))))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r8.mTileProviderList.iterator()\lint r3 = \-1\lint r4 = \-1\lint r5 = 0\l}"];
subgraph cluster_LoopRegion_539099919 {
label = "LOOP:0: (4:3|(1:7)|(1:11)|12)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000f|if (r0.hasNext() != false) goto L_0x0011\l}"];
subgraph cluster_Region_1776016069 {
label = "R(4:3|(1:7)|(1:11)|12)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0011|org.osmdroid.tileprovider.modules.MapTileModuleProviderBase r6 = (org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) r0.next()\l}"];
subgraph cluster_IfRegion_1626553769 {
label = "IF [B:4:0x0017, B:6:0x001b] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0017|ADDED_TO_REGION\l|if (r3 == \-1) goto L_0x0019\l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|ADDED_TO_REGION\l|if (r6 == r8.mDownloaderProvider) goto L_0x001d\l}"];
subgraph cluster_Region_1108413891 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001d|r3 = r5\l}"];
}
}
subgraph cluster_IfRegion_729249035 {
label = "IF [B:8:0x001e, B:10:0x0022] THEN: R(1:11) ELSE: null";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|ADDED_TO_REGION\lPHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v1 int), (r3v3 int) binds: [B:4:0x0017, B:6:0x001b, B:7:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 == \-1) goto L_0x0020\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|ADDED_TO_REGION\l|if (r6 == r8.mApproximationProvider) goto L_0x0024\l}"];
subgraph cluster_Region_146432043 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0024|r4 = r5\l}"];
}
}
Node_12 [shape=record,label="{12\:\ 0x0025|LOOP_END\lPHI: r4 \l  PHI: (r4v2 int) = (r4v1 int), (r4v1 int), (r4v3 int) binds: [B:27:0x0025, B:28:0x0025, B:26:0x0025] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:12:0x0025\l|r5++\l}"];
}
}
subgraph cluster_Region_86115861 {
label = "R(2:(1:24)|(1:(2:(1:18)|(1:(2:(1:21)|(2:22|23))))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1011646615 {
label = "IF [B:13:0x0028, B:14:0x002a] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0028|if (r3 == \-1) goto L_0x0047\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|ADDED_TO_REGION\l|if (r4 == \-1) goto L_0x0047\l}"];
subgraph cluster_Region_954179459 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0047|RETURN\l|return false\l}"];
}
}
subgraph cluster_Region_1879296710 {
label = "R(1:(2:(1:18)|(1:(2:(1:21)|(2:22|23)))))";
node [shape=record,color=blue];
subgraph cluster_Region_1074365874 {
label = "R(2:(1:18)|(1:(2:(1:21)|(2:22|23))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1677198045 {
label = "IF [B:16:0x002e, B:17:0x0030] THEN: R(1:18) ELSE: null";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002e|if (r4 \< r3) goto L_0x0030\l}"];
Node_17 [shape=record,label="{17\:\ 0x0030|ADDED_TO_REGION\l|if (r9 != false) goto L_0x0032\l}"];
subgraph cluster_Region_1435382024 {
label = "R(1:18)";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0032|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_300519357 {
label = "R(1:(2:(1:21)|(2:22|23)))";
node [shape=record,color=blue];
subgraph cluster_Region_2144481980 {
label = "R(2:(1:21)|(2:22|23))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_701330548 {
label = "IF [B:19:0x0033, B:20:0x0035] THEN: R(1:21) ELSE: null";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0033|if (r4 \> r3) goto L_0x0035\l}"];
Node_20 [shape=record,label="{20\:\ 0x0035|ADDED_TO_REGION\l|if (r9 != true) goto L_0x0037\l}"];
subgraph cluster_Region_1945771233 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0037|RETURN\l|return true\l}"];
}
}
subgraph cluster_Region_1353321105 {
label = "R(2:22|23)";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x0038|r8.mTileProviderList.set(r3, r8.mApproximationProvider)\lr8.mTileProviderList.set(r4, r8.mDownloaderProvider)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0046|RETURN\l|return true\l}"];
}
}
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000b|LOOP_START\lPHI: r3 r4 r5 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:12:0x0025] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:12:0x0025] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:0:0x0000, B:12:0x0025] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:12:0x0025\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0019}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0020}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002d}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0028|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0025|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0025|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0025|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.MapTileProviderBasic.setOfflineFirst((r8v0 'this' org.osmdroid.tileprovider.MapTileProviderBasic A[IMMUTABLE_TYPE, THIS]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_25[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_27[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_28[style=dashed];
Node_11 -> Node_26;
Node_12 -> Node_1;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_24;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_24;
Node_16 -> Node_17;
Node_16 -> Node_19[style=dashed];
Node_17 -> Node_18;
Node_17 -> Node_19[style=dashed];
Node_19 -> Node_20;
Node_19 -> Node_22[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_22 -> Node_23;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_15 -> Node_16;
Node_25 -> Node_13;
Node_26 -> Node_12;
Node_27 -> Node_12;
Node_28 -> Node_12;
}

