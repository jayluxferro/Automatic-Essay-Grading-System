digraph "CFG fororg.osmdroid.tileprovider.MapTileProviderBasic.setOfflineFirst(Z)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r8.mTileProviderList.iterator()\lr3 = \-1\lr4 = \-1\lr5 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|LOOP_START\lPHI: r3 r4 r5 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:12:0x0025] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:12:0x0025] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:0:0x0000, B:12:0x0025] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:12:0x0025\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|if (r0.hasNext() == false) goto L_0x0028\l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|org.osmdroid.tileprovider.modules.MapTileModuleProviderBase r6 = (org.osmdroid.tileprovider.modules.MapTileModuleProviderBase) r0.next()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|if (r3 != \-1) goto L_0x001e\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019}"];
Node_6 [shape=record,label="{6\:\ 0x001b|if (r6 != r8.mDownloaderProvider) goto L_0x001e\l}"];
Node_7 [shape=record,label="{7\:\ 0x001d|r3 = r5\l}"];
Node_8 [shape=record,label="{8\:\ 0x001e|PHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v1 int), (r3v3 int) binds: [B:4:0x0017, B:6:0x001b, B:7:0x001d] A[DONT_GENERATE, DONT_INLINE]\l|if (r4 != \-1) goto L_0x0025\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020}"];
Node_10 [shape=record,label="{10\:\ 0x0022|if (r6 != r8.mApproximationProvider) goto L_0x0025\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|r4 = r5\l}"];
Node_12 [shape=record,label="{12\:\ 0x0025|LOOP_END\lPHI: r4 \l  PHI: (r4v2 int) = (r4v1 int), (r4v1 int), (r4v3 int) binds: [B:27:0x0025, B:28:0x0025, B:26:0x0025] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000b\-\>B:12:0x0025\l|int r5 = r5 + 1\l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|if (r3 == \-1) goto L_0x0047\l}"];
Node_14 [shape=record,label="{14\:\ 0x002a|if (r4 != \-1) goto L_0x002d\l}"];
Node_15 [shape=record,label="{15\:\ 0x002d}"];
Node_16 [shape=record,label="{16\:\ 0x002e|if (r4 \>= r3) goto L_0x0033\l}"];
Node_17 [shape=record,label="{17\:\ 0x0030|if (r9 == false) goto L_0x0033\l}"];
Node_18 [shape=record,label="{18\:\ 0x0032|RETURN\l|return true\l}"];
Node_19 [shape=record,label="{19\:\ 0x0033|if (r4 \<= r3) goto L_0x0038\l}"];
Node_20 [shape=record,label="{20\:\ 0x0035|if (r9 != false) goto L_0x0038\l}"];
Node_21 [shape=record,label="{21\:\ 0x0037|RETURN\l|return true\l}"];
Node_22 [shape=record,label="{22\:\ 0x0038|r8.mTileProviderList.set(r3, r8.mApproximationProvider)\lr8.mTileProviderList.set(r4, r8.mDownloaderProvider)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0046|RETURN\l|return true\l}"];
Node_24 [shape=record,label="{24\:\ 0x0047|RETURN\l|return false\l}"];
Node_25 [shape=record,label="{25\:\ 0x0028|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0025|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0025|SYNTHETIC\l}"];
Node_28 [shape=record,label="{28\:\ 0x0025|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.MapTileProviderBasic.setOfflineFirst((r8v0 'this' org.osmdroid.tileprovider.MapTileProviderBasic A[IMMUTABLE_TYPE, THIS]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_25;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_27;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_28;
Node_11 -> Node_26;
Node_12 -> Node_1;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_24;
Node_14 -> Node_15;
Node_14 -> Node_24[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_25 -> Node_13;
Node_26 -> Node_12;
Node_27 -> Node_12;
Node_28 -> Node_12;
}

