digraph "CFG fororg.osmdroid.tileprovider.BitmapPool.asyncRecycle(Landroid\/graphics\/drawable\/Drawable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: RETURN   \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: IGET  (r0 I:java.util.concurrent.ExecutorService) = (r2 I:org.osmdroid.tileprovider.BitmapPool) org.osmdroid.tileprovider.BitmapPool.mExecutor java.util.concurrent.ExecutorService \l0x0005: NEW_INSTANCE  (r1 I:org.osmdroid.tileprovider.BitmapPool$1) =  org.osmdroid.tileprovider.BitmapPool$1 \l0x0007: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.BitmapPool$1)\l  (r2 I:org.osmdroid.tileprovider.BitmapPool)\l  (r3 I:android.graphics.drawable.Drawable)\l org.osmdroid.tileprovider.BitmapPool.1.\<init\>(org.osmdroid.tileprovider.BitmapPool, android.graphics.drawable.Drawable):void type: DIRECT \l0x000a: INVOKE  \l  (r0 I:java.util.concurrent.ExecutorService)\l  (r1 I:java.lang.Runnable)\l java.util.concurrent.ExecutorService.execute(java.lang.Runnable):void type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.BitmapPool.asyncRecycle((r2 'this' I:org.osmdroid.tileprovider.BitmapPool A[IMMUTABLE_TYPE, THIS]), (r3 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
}

