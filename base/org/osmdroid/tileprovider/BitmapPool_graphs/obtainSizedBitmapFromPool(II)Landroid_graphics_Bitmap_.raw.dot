digraph "CFG fororg.osmdroid.tileprovider.BitmapPool.obtainSizedBitmapFromPool(II)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.LinkedList\<android.graphics.Bitmap\>) = (r5 I:org.osmdroid.tileprovider.BitmapPool) org.osmdroid.tileprovider.BitmapPool.mPool java.util.LinkedList \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|SYNTHETIC\lSplitter:B:2:0x0003\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0003\l|0x0003: IGET  (r1 I:java.util.LinkedList\<android.graphics.Bitmap\>) = (r5 I:org.osmdroid.tileprovider.BitmapPool) org.osmdroid.tileprovider.BitmapPool.mPool java.util.LinkedList A[Catch:\{ all \-\> 0x0046 \}, TRY_ENTER]\l0x0005: INVOKE  (r1 I:boolean) = (r1 I:java.util.LinkedList) java.util.LinkedList.isEmpty():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x000e A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: RETURN  (r2 I:android.graphics.Bitmap) A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|0x000e: IGET  (r1 I:java.util.LinkedList\<android.graphics.Bitmap\>) = (r5 I:org.osmdroid.tileprovider.BitmapPool) org.osmdroid.tileprovider.BitmapPool.mPool java.util.LinkedList A[Catch:\{ all \-\> 0x0046 \}]\l0x0010: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.LinkedList) java.util.LinkedList.iterator():java.util.Iterator type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: INVOKE  (r3 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0018|0x0018: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0044 A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x001a|0x001a: INVOKE  (r3 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE A[Catch:\{ all \-\> 0x0046 \}]\l0x001e: CHECK_CAST  (r3 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0046 \}]\l0x0020: INVOKE  (r4 I:boolean) = (r3 I:android.graphics.Bitmap) android.graphics.Bitmap.isRecycled():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0031 A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: IGET  (r1 I:java.util.LinkedList\<android.graphics.Bitmap\>) = (r5 I:org.osmdroid.tileprovider.BitmapPool) org.osmdroid.tileprovider.BitmapPool.mPool java.util.LinkedList A[Catch:\{ all \-\> 0x0046 \}]\l0x0028: INVOKE  (r1 I:java.util.LinkedList), (r3 I:java.lang.Object) java.util.LinkedList.remove(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l0x002b: INVOKE  (r6 I:android.graphics.Bitmap) = \l  (r5 I:org.osmdroid.tileprovider.BitmapPool)\l  (r6 I:int)\l  (r7 I:int)\l org.osmdroid.tileprovider.BitmapPool.obtainSizedBitmapFromPool(int, int):android.graphics.Bitmap type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002f|0x002f: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: RETURN  (r6 I:android.graphics.Bitmap) A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0031|0x0031: INVOKE  (r4 I:int) = (r3 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0035|0x0035: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0014 A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0037|0x0037: INVOKE  (r4 I:int) = (r3 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x003b|0x003b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0014 A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x003d|0x003d: IGET  (r6 I:java.util.LinkedList\<android.graphics.Bitmap\>) = (r5 I:org.osmdroid.tileprovider.BitmapPool) org.osmdroid.tileprovider.BitmapPool.mPool java.util.LinkedList A[Catch:\{ all \-\> 0x0046 \}]\l0x003f: INVOKE  (r6 I:java.util.LinkedList), (r3 I:java.lang.Object) java.util.LinkedList.remove(java.lang.Object):boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0042|0x0042: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0043|0x0043: RETURN  (r3 I:android.graphics.Bitmap) A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0044|0x0044: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0045|0x0045: RETURN  (r2 I:android.graphics.Bitmap) A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0046|ExcHandler: all null\lSplitter:B:2:0x0003\l|0x0046: MOVE_EXCEPTION  (r6 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0046 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0047|0x0047: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x0046 \}, TRY_LEAVE]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0048|0x0048: THROW  (r6 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.graphics.Bitmap org.osmdroid.tileprovider.BitmapPool.obtainSizedBitmapFromPool((r5 'this' I:org.osmdroid.tileprovider.BitmapPool A[IMMUTABLE_TYPE, THIS]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_24;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_22;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_8;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_18;
Node_18 -> Node_8;
Node_18 -> Node_19[style=dashed];
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_24 -> Node_25;
Node_25 -> Node_26;
}

