digraph "CFG fororg.osmdroid.tileprovider.BitmapPool.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:java.util.LinkedList) =  java.util.LinkedList \l0x0005: INVOKE  (r0 I:java.util.LinkedList) java.util.LinkedList.\<init\>():void type: DIRECT \l0x0008: IPUT  \l  (r0 I:java.util.LinkedList\<android.graphics.Bitmap\>)\l  (r3 I:org.osmdroid.tileprovider.BitmapPool)\l org.osmdroid.tileprovider.BitmapPool.mPool java.util.LinkedList \l0x000a: NEW_INSTANCE  (r0 I:org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory) =  org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory \l0x000c: INVOKE  (r1 I:java.lang.Class) = (r3 I:java.lang.Object) java.lang.Object.getClass():java.lang.Class type: VIRTUAL \l0x0010: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.Class) java.lang.Class.getName():java.lang.String type: VIRTUAL \l0x0014: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0015: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory)\l  (r2 I:int)\l  (r1 I:java.lang.String)\l org.osmdroid.tileprovider.modules.ConfigurablePriorityThreadFactory.\<init\>(int, java.lang.String):void type: DIRECT \l0x0018: INVOKE  (r0 I:java.util.concurrent.ExecutorService) = (r2 I:int), (r0 I:java.util.concurrent.ThreadFactory) java.util.concurrent.Executors.newFixedThreadPool(int, java.util.concurrent.ThreadFactory):java.util.concurrent.ExecutorService type: STATIC \l0x001c: IPUT  \l  (r0 I:java.util.concurrent.ExecutorService)\l  (r3 I:org.osmdroid.tileprovider.BitmapPool)\l org.osmdroid.tileprovider.BitmapPool.mExecutor java.util.concurrent.ExecutorService \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.tileprovider.BitmapPool.\<init\>((r3 'this' I:org.osmdroid.tileprovider.BitmapPool A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

