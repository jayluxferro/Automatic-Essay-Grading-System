digraph "CFG fororg.osmdroid.tileprovider.BitmapPool.clearBitmapPool()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: SGET  (r0 I:org.osmdroid.tileprovider.BitmapPool) =  org.osmdroid.tileprovider.BitmapPool.sInstance org.osmdroid.tileprovider.BitmapPool \l0x0002: IGET  (r0 I:java.util.LinkedList\<android.graphics.Bitmap\>) = (r0 I:org.osmdroid.tileprovider.BitmapPool) org.osmdroid.tileprovider.BitmapPool.mPool java.util.LinkedList \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: MONITOR_ENTER  (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|SYNTHETIC\lSplitter:B:2:0x0005\l}"];
Node_3 [shape=record,label="{3\:\ ?|Splitter:B:2:0x0005\l|0x0005: SGET  (r1 I:org.osmdroid.tileprovider.BitmapPool) =  org.osmdroid.tileprovider.BitmapPool.sInstance org.osmdroid.tileprovider.BitmapPool A[Catch:\{ all \-\> 0x001f \}, TRY_ENTER]\l0x0007: IGET  (r1 I:java.util.LinkedList\<android.graphics.Bitmap\>) = (r1 I:org.osmdroid.tileprovider.BitmapPool) org.osmdroid.tileprovider.BitmapPool.mPool java.util.LinkedList A[Catch:\{ all \-\> 0x001f \}]\l0x0009: INVOKE  (r1 I:boolean) = (r1 I:java.util.LinkedList) java.util.LinkedList.isEmpty():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x001f \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001d A[Catch:\{ all \-\> 0x001f \}]\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: SGET  (r1 I:org.osmdroid.tileprovider.BitmapPool) =  org.osmdroid.tileprovider.BitmapPool.sInstance org.osmdroid.tileprovider.BitmapPool A[Catch:\{ all \-\> 0x001f \}]\l0x0011: IGET  (r1 I:java.util.LinkedList\<android.graphics.Bitmap\>) = (r1 I:org.osmdroid.tileprovider.BitmapPool) org.osmdroid.tileprovider.BitmapPool.mPool java.util.LinkedList A[Catch:\{ all \-\> 0x001f \}]\l0x0013: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.LinkedList) java.util.LinkedList.remove():java.lang.Object type: VIRTUAL A[Catch:\{ all \-\> 0x001f \}]\l0x0017: CHECK_CAST  (r1 I:android.graphics.Bitmap) = (android.graphics.Bitmap) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001f \}]\l0x0019: INVOKE  (r1 I:android.graphics.Bitmap) android.graphics.Bitmap.recycle():void type: VIRTUAL A[Catch:\{ all \-\> 0x001f \}]\l0x001c: GOTO  \-\> 0x0005 A[Catch:\{ all \-\> 0x001f \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001f \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: RETURN   A[Catch:\{ all \-\> 0x001f \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x001f|ExcHandler: all null\lSplitter:B:2:0x0005\l|0x001f: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x001f \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: MONITOR_EXIT  (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ all \-\> 0x001f \}, TRY_LEAVE]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.BitmapPool.clearBitmapPool((r2 'this' I:org.osmdroid.tileprovider.BitmapPool A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_2;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

