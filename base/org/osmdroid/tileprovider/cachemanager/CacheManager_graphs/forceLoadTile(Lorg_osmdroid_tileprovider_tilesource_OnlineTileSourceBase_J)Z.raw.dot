digraph "CFG fororg.osmdroid.tileprovider.cachemanager.CacheManager.forceLoadTile(Lorg\/osmdroid\/tileprovider\/tilesource\/OnlineTileSourceBase;J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r1 I:org.osmdroid.tileprovider.modules.TileDownloader) = (r3 I:org.osmdroid.tileprovider.cachemanager.CacheManager) org.osmdroid.tileprovider.cachemanager.CacheManager.mTileDownloader org.osmdroid.tileprovider.modules.TileDownloader A[Catch:\{ CantContinueException \-\> 0x000d \}, TRY_ENTER]\l0x0003: IGET  (r2 I:org.osmdroid.tileprovider.modules.IFilesystemCache) = (r3 I:org.osmdroid.tileprovider.cachemanager.CacheManager) org.osmdroid.tileprovider.cachemanager.CacheManager.mTileWriter org.osmdroid.tileprovider.modules.IFilesystemCache A[Catch:\{ CantContinueException \-\> 0x000d \}]\l0x0005: INVOKE  (r4 I:android.graphics.drawable.Drawable) = \l  (r1 I:org.osmdroid.tileprovider.modules.TileDownloader)\l  (r5 I:long)\l  (r2 I:org.osmdroid.tileprovider.modules.IFilesystemCache)\l  (r4 I:org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase)\l org.osmdroid.tileprovider.modules.TileDownloader.downloadTile(long, org.osmdroid.tileprovider.modules.IFilesystemCache, org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase):android.graphics.drawable.Drawable type: VIRTUAL A[Catch:\{ CantContinueException \-\> 0x000d \}]\l0x0008: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x000c \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000c|0x000c: RETURN  (r0 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000d|0x000d: RETURN  (r0 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lExcHandler: CantContinueException null\lSplitter:B:1:0x0001\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.cachemanager.CacheManager.forceLoadTile((r3 'this' I:org.osmdroid.tileprovider.cachemanager.CacheManager A[IMMUTABLE_TYPE, THIS]), (r4 I:org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_7 -> Node_6;
}

