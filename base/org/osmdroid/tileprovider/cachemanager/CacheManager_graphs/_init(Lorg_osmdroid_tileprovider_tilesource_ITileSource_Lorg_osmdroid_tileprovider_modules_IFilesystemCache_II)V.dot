digraph "CFG fororg.osmdroid.tileprovider.cachemanager.CacheManager.\<init\>(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;Lorg\/osmdroid\/tileprovider\/modules\/IFilesystemCache;II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.mTileDownloader = new org.osmdroid.tileprovider.modules.TileDownloader()\lr1.mPendingTasks = new java.util.HashSet()\lr1.verifyCancel = true\lr1.mTileSource = r2\lr1.mTileWriter = r3\lr1.mMinZoomLevel = r4\lr1.mMaxZoomLevel = r5\l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|if ((r2 instanceof org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase) == false) goto L_?\l}"];
Node_2 [shape=record,label="{2\:\ 0x0020}"];
Node_3 [shape=record,label="{3\:\ 0x002a|if (((org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase) r2).getTileSourcePolicy().acceptsBulkDownload() == false) goto L_0x002d\l}"];
Node_4 [shape=record,label="{4\:\ 0x002d}"];
Node_5 [shape=record,label="{5\:\ 0x0034|throw new org.osmdroid.tileprovider.tilesource.TileSourcePolicyException(\"This online tile source doesn't support bulk download\")\l}"];
Node_6 [shape=record,label="{6\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.cachemanager.CacheManager.\<init\>((r1v0 'this' org.osmdroid.tileprovider.cachemanager.CacheManager A[IMMUTABLE_TYPE, THIS]), (r2v0 org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 org.osmdroid.tileprovider.modules.IFilesystemCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.osmdroid.tileprovider.tilesource.TileSourcePolicyException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_7[style=dashed];
Node_4 -> Node_5;
}

