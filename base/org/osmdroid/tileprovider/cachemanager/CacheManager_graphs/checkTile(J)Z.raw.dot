digraph "CFG fororg.osmdroid.tileprovider.cachemanager.CacheManager.checkTile(J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.tileprovider.modules.IFilesystemCache) = (r2 I:org.osmdroid.tileprovider.cachemanager.CacheManager) org.osmdroid.tileprovider.cachemanager.CacheManager.mTileWriter org.osmdroid.tileprovider.modules.IFilesystemCache \l0x0002: IGET  (r1 I:org.osmdroid.tileprovider.tilesource.ITileSource) = (r2 I:org.osmdroid.tileprovider.cachemanager.CacheManager) org.osmdroid.tileprovider.cachemanager.CacheManager.mTileSource org.osmdroid.tileprovider.tilesource.ITileSource \l0x0004: INVOKE  (r3 I:boolean) = \l  (r0 I:org.osmdroid.tileprovider.modules.IFilesystemCache)\l  (r1 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l  (r3 I:long)\l org.osmdroid.tileprovider.modules.IFilesystemCache.exists(org.osmdroid.tileprovider.tilesource.ITileSource, long):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN  (r3 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.tileprovider.cachemanager.CacheManager.checkTile((r2 'this' I:org.osmdroid.tileprovider.cachemanager.CacheManager A[IMMUTABLE_TYPE, THIS]), (r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

