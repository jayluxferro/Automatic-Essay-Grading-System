digraph "CFG fororg.osmdroid.tileprovider.cachemanager.CacheManager.getTilesCoverageIterable(Lorg\/osmdroid\/util\/BoundingBox;II)Lorg\/osmdroid\/util\/IterableWithSize;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:org.osmdroid.util.MapTileAreaList) =  org.osmdroid.util.MapTileAreaList \l0x0002: INVOKE  (r0 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.\<init\>():void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r5 I:?[int, byte, short, char]) \> (r6 I:?[int, byte, short, char])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r1 I:java.util.List) = (r0 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.getList():java.util.List type: VIRTUAL \l0x000b: NEW_INSTANCE  (r2 I:org.osmdroid.util.MapTileArea) =  org.osmdroid.util.MapTileArea \l0x000d: INVOKE  (r2 I:org.osmdroid.util.MapTileArea) org.osmdroid.util.MapTileArea.\<init\>():void type: DIRECT \l0x0010: INVOKE  (r3 I:android.graphics.Rect) = (r4 I:org.osmdroid.util.BoundingBox), (r5 I:int) org.osmdroid.tileprovider.cachemanager.CacheManager.getTilesRect(org.osmdroid.util.BoundingBox, int):android.graphics.Rect type: STATIC \l0x0014: INVOKE  (r2 I:org.osmdroid.util.MapTileArea) = \l  (r2 I:org.osmdroid.util.MapTileArea)\l  (r5 I:int)\l  (r3 I:android.graphics.Rect)\l org.osmdroid.util.MapTileArea.set(int, android.graphics.Rect):org.osmdroid.util.MapTileArea type: VIRTUAL \l0x0018: INVOKE  (r1 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x001b: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: RETURN  (r0 I:org.osmdroid.util.IterableWithSize\<java.lang.Long\>) \l}"];
MethodNode[shape=record,label="{static org.osmdroid.util.IterableWithSize\<java.lang.Long\> org.osmdroid.tileprovider.cachemanager.CacheManager.getTilesCoverageIterable((r4 I:org.osmdroid.util.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/osmdroid\/util\/BoundingBox;, II), Lorg\/osmdroid\/util\/IterableWithSize\<, Ljava\/lang\/Long;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

