digraph "CFG fororg.osmdroid.tileprovider.cachemanager.CacheManager.cleanAreaAsync(Landroid\/content\/Context;Ljava\/util\/ArrayList;II)Lorg\/osmdroid\/tileprovider\/cachemanager\/CacheManager$CacheManagerTask;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:org.osmdroid.util.BoundingBox) = \l  (r0 I:org.osmdroid.tileprovider.cachemanager.CacheManager)\l  (r2 I:java.util.ArrayList)\l  (r3 I:int)\l org.osmdroid.tileprovider.cachemanager.CacheManager.extendedBoundsFromGeoPoints(java.util.ArrayList, int):org.osmdroid.util.BoundingBox type: VIRTUAL \l0x0004: INVOKE  (r1 I:org.osmdroid.tileprovider.cachemanager.CacheManager$CacheManagerTask) = \l  (r0 I:org.osmdroid.tileprovider.cachemanager.CacheManager)\l  (r1 I:android.content.Context)\l  (r2 I:org.osmdroid.util.BoundingBox)\l  (r3 I:int)\l  (r4 I:int)\l org.osmdroid.tileprovider.cachemanager.CacheManager.cleanAreaAsync(android.content.Context, org.osmdroid.util.BoundingBox, int, int):org.osmdroid.tileprovider.cachemanager.CacheManager$CacheManagerTask type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN  \l  (r1 I:org.osmdroid.tileprovider.cachemanager.CacheManager$CacheManagerTask)\l \l}"];
MethodNode[shape=record,label="{public org.osmdroid.tileprovider.cachemanager.CacheManager$CacheManagerTask org.osmdroid.tileprovider.cachemanager.CacheManager.cleanAreaAsync((r0 'this' I:org.osmdroid.tileprovider.cachemanager.CacheManager A[IMMUTABLE_TYPE, THIS]), (r1 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.util.ArrayList\<org.osmdroid.util.GeoPoint\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Landroid\/content\/Context;, Ljava\/util\/ArrayList\<, Lorg\/osmdroid\/util\/GeoPoint;, \>;II), Lorg\/osmdroid\/tileprovider\/cachemanager\/CacheManager$CacheManagerTask;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

