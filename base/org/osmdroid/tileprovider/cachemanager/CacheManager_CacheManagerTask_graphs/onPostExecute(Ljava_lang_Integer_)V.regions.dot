digraph "CFG fororg.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.onPostExecute(Ljava\/lang\/Integer;)V" {
subgraph cluster_Region_13684065 {
label = "R(2:0|(2:3|(1:(1:7)(1:8))))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.mManager.mPendingTasks.remove(r3)\ljava.util.Iterator java.util.Iterator\<org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerCallback\> r0 = r3.mCallbacks.iterator()\l}"];
subgraph cluster_LoopRegion_979450850 {
label = "LOOP:0: (2:3|(1:(1:7)(1:8)))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0011|if (r0.hasNext() != false) goto L_0x0013\l}"];
subgraph cluster_Region_1669683779 {
label = "R(2:3|(1:(1:7)(1:8)))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0013|org.osmdroid.tileprovider.cachemanager.CacheManager$CacheManagerCallback org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerCallback r1 = r0.next()\l}"];
subgraph cluster_TryCatchRegion_411254359 {
label = "Try: R(1:(1:7)(1:8)) catches: R(2:9|10)";
node [shape=record,color=blue];
subgraph cluster_Region_1898691169 {
label = "R(1:(1:7)(1:8))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1702629343 {
label = "IF [B:6:0x001d] THEN: R(1:7) ELSE: R(1:8)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001d|Catch:\{ Throwable \-\> 0x002b \}\l|if (r4.intValue() == 0) goto L_0x001f     \/\/ Catch:\{ Throwable \-\> 0x002b \}\l}"];
subgraph cluster_Region_834761904 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001f|Catch:\{ Throwable \-\> 0x002b \}\l|r1.onTaskComplete()     \/\/ Catch:\{ Throwable \-\> 0x002b \}\l}"];
}
subgraph cluster_Region_939269164 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0023|Catch:\{ Throwable \-\> 0x002b \}\l|r1.onTaskFailed(r4.intValue())     \/\/ Catch:\{ Throwable \-\> 0x002b \}\l}"];
}
}
}
subgraph cluster_Region_2039170781 {
label = "R(2:9|10) | ExcHandler: Throwable (r1v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002b|ExcHandler: Throwable (r1v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:4:0x0019\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|logFaultyCallback(r1)\l}"];
}
}
}
}
}
subgraph cluster_Region_2039170781 {
label = "R(2:9|10) | ExcHandler: Throwable (r1v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x002b|ExcHandler: Throwable (r1v3 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:4:0x0019\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|logFaultyCallback(r1)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000d|LOOP_START\lLOOP:0: B:1:0x000d\-\>B:12:0x000d\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0019|SYNTHETIC\lSplitter:B:4:0x0019\l}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|Catch:\{ Throwable \-\> 0x002b \}\lSplitter:B:4:0x0019\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0030}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x000d|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x000d\-\>B:12:0x000d\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0030|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000d|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000d|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x000d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.onPostExecute((r3v0 'this' org.osmdroid.tileprovider.cachemanager.CacheManager$CacheManagerTask A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | access modifiers changed from: protected\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_13[style=dashed];
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_14;
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_16;
Node_1 -> Node_2;
Node_4 -> Node_5;
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_12 -> Node_1;
Node_13 -> Node_11;
Node_14 -> Node_12;
Node_15 -> Node_12;
Node_16 -> Node_12;
}

