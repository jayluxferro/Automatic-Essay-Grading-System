digraph "CFG fororg.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.doInBackground([Ljava\/lang\/Object;)Ljava\/lang\/Integer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r8.mAction.preCheck() != false) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009}"];
Node_3 [shape=record,label="{3\:\ 0x000d|RETURN\l|return 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|java.util.Iterator r9 = r8.mTiles.iterator()\lr1 = 0\lr2 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x0016|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:4:0x000e, B:23:0x0016] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:4:0x000e, B:23:0x0016] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:5:0x0016\-\>B:23:0x0016\l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|if (r9.hasNext() == false) goto L_0x006a\l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|long r3 = ((java.lang.Long) r9.next()).longValue()\lint r5 = org.osmdroid.util.MapTileIndex.getZoom(r3)\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|if (r5 \< r8.mZoomMin) goto L_0x003c\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e}"];
Node_10 [shape=record,label="{10\:\ 0x0030|if (r5 \> r8.mZoomMax) goto L_0x003c\l}"];
Node_11 [shape=record,label="{11\:\ 0x0032}"];
Node_12 [shape=record,label="{12\:\ 0x0038|if (r8.mAction.tileAction(r3) == false) goto L_0x003c\l}"];
Node_13 [shape=record,label="{13\:\ 0x003a|int r1 = r1 + 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x003c|PHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v1 int), (r1v1 int), (r1v3 int) binds: [B:8:0x002c, B:10:0x0030, B:12:0x0038, B:13:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|int r2 = r2 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0046|if ((r2 % r8.mAction.getProgressModulo()) != 0) goto L_0x0016\l}"];
Node_16 [shape=record,label="{16\:\ 0x0048}"];
Node_17 [shape=record,label="{17\:\ 0x004c|if (isCancelled() == false) goto L_0x0053\l}"];
Node_18 [shape=record,label="{18\:\ 0x004e}"];
Node_19 [shape=record,label="{19\:\ 0x0052|RETURN\l|return java.lang.Integer.valueOf(r1)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|java.lang.Integer[] r6 = new java.lang.Integer[]\{java.lang.Integer.valueOf(r2), java.lang.Integer.valueOf(org.osmdroid.util.MapTileIndex.getZoom(r3))\}\lpublishProgress(r6)\l}"];
Node_21 [shape=record,label="{21\:\ 0x006a}"];
Node_22 [shape=record,label="{22\:\ 0x006e|RETURN\l|return java.lang.Integer.valueOf(r1)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0016|LOOP_END\lSYNTHETIC\lLOOP:0: B:5:0x0016\-\>B:23:0x0016\l}"];
Node_24 [shape=record,label="{24\:\ 0x004e|SYNTHETIC\l}"];
Node_25 [shape=record,label="{25\:\ 0x006a|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x0016|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ 0x0016|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected java.lang.Integer org.osmdroid.tileprovider.cachemanager.CacheManager.CacheManagerTask.doInBackground((r8v0 'this' org.osmdroid.tileprovider.cachemanager.CacheManager$CacheManagerTask A[IMMUTABLE_TYPE, THIS]), (r9v0 java.lang.Object[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_25;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_26;
Node_16 -> Node_17;
Node_17 -> Node_20;
Node_17 -> Node_24[style=dashed];
Node_18 -> Node_19;
Node_20 -> Node_27;
Node_21 -> Node_22;
Node_23 -> Node_5;
Node_24 -> Node_18;
Node_25 -> Node_21;
Node_26 -> Node_23;
Node_27 -> Node_23;
}

