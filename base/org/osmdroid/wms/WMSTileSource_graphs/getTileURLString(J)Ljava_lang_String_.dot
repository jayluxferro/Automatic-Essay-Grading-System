digraph "CFG fororg.osmdroid.wms.WMSTileSource.getTileURLString(J)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = getBaseUrl()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r4.forceHttps == false) goto L_0x0010\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|java.lang.String r0 = r0.replace(\"http:\/\/\", \"https:\/\/\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|PHI: r0 \l  PHI: (r0v1 java.lang.String) = (r0v0 java.lang.String), (r0v19 java.lang.String) binds: [B:1:0x0006, B:2:0x0008] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|if (r4.forceHttp == false) goto L_0x001c\l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|java.lang.String r0 = r0.replace(\"https:\/\/\", \"http:\/\/\")\l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|PHI: r0 \l  PHI: (r0v2 java.lang.String) = (r0v1 java.lang.String), (r0v18 java.lang.String) binds: [B:4:0x0012, B:5:0x0014] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.StringBuilder r1 = new java.lang.StringBuilder(r0)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|if (r0.endsWith(\"&\") != false) goto L_0x002e\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|r1.append(\"&\")\l}"];
Node_9 [shape=record,label="{9\:\ 0x002e|r1.append(\"request=GetMap&width=\")\lr1.append(getTileSizePixels())\lr1.append(\"&height=\")\lr1.append(getTileSizePixels())\lr1.append(\"&version=\")\lr1.append(r4.version)\lr1.append(\"&layers=\")\lr1.append(r4.layer)\lr1.append(\"&bbox=\")\l}"];
Node_10 [shape=record,label="{10\:\ 0x0067|if (r4.srs.equals(\"EPSG:900913\") == false) goto L_0x00a1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0069|double[] r5 = getBoundingBox(org.osmdroid.util.MapTileIndex.getX(r5), org.osmdroid.util.MapTileIndex.getY(r5), org.osmdroid.util.MapTileIndex.getZoom(r5))\lr1.append(r5[0])\lr1.append(\",\")\lr1.append(r5[2])\lr1.append(\",\")\lr1.append(r5[1])\lr1.append(\",\")\lr1.append(r5[3])\l}"];
Node_12 [shape=record,label="{12\:\ 0x00a1|org.osmdroid.util.BoundingBox r5 = tile2boundingBox(org.osmdroid.util.MapTileIndex.getX(r5), org.osmdroid.util.MapTileIndex.getY(r5), org.osmdroid.util.MapTileIndex.getZoom(r5))\lr1.append(r5.getLonWest())\lr1.append(\",\")\lr1.append(r5.getLatSouth())\lr1.append(\",\")\lr1.append(r5.getLonEast())\lr1.append(\",\")\lr1.append(r5.getLatNorth())\l}"];
Node_13 [shape=record,label="{13\:\ 0x00dc|r1.append(\"&srs=\")\lr1.append(r4.srs)\lr1.append(\"&format=image\/png&transparent=true\")\l}"];
Node_14 [shape=record,label="{14\:\ 0x00ed|if (r4.style == null) goto L_0x00f9\l}"];
Node_15 [shape=record,label="{15\:\ 0x00ef|r1.append(\"&styles=\")\lr1.append(r4.style)\l}"];
Node_16 [shape=record,label="{16\:\ 0x00f9|android.util.Log.i(org.osmdroid.api.IMapView.LOGTAG, r1.toString())\l}"];
Node_17 [shape=record,label="{17\:\ 0x0106|RETURN\l|return r1.toString()\l}"];
MethodNode[shape=record,label="{public java.lang.String org.osmdroid.wms.WMSTileSource.getTileURLString((r4v0 'this' org.osmdroid.wms.WMSTileSource A[IMMUTABLE_TYPE, THIS]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

