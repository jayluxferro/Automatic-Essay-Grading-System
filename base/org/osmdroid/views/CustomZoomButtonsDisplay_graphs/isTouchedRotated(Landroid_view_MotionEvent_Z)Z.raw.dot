digraph "CFG fororg.osmdroid.views.CustomZoomButtonsDisplay.isTouchedRotated(Landroid\/view\/MotionEvent;Z)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.views.MapView) = (r3 I:org.osmdroid.views.CustomZoomButtonsDisplay) org.osmdroid.views.CustomZoomButtonsDisplay.mMapView org.osmdroid.views.MapView \l0x0002: INVOKE  (r0 I:float) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMapOrientation():float type: VIRTUAL \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: CMP_L  (r0 I:int) = (r0 I:float), (r1 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IGET  (r0 I:android.graphics.Point) = (r3 I:org.osmdroid.views.CustomZoomButtonsDisplay) org.osmdroid.views.CustomZoomButtonsDisplay.mUnrotatedPoint android.graphics.Point \l0x000d: INVOKE  (r1 I:float) = (r4 I:android.view.MotionEvent) android.view.MotionEvent.getX():float type: VIRTUAL \l0x0011: CAST  (r1 I:int) = (int) (r1 I:float) \l0x0012: INVOKE  (r4 I:float) = (r4 I:android.view.MotionEvent) android.view.MotionEvent.getY():float type: VIRTUAL \l0x0016: CAST  (r4 I:int) = (int) (r4 I:float) \l0x0017: INVOKE  (r0 I:android.graphics.Point), (r1 I:int), (r4 I:int) android.graphics.Point.set(int, int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: IGET  (r0 I:org.osmdroid.views.MapView) = (r3 I:org.osmdroid.views.CustomZoomButtonsDisplay) org.osmdroid.views.CustomZoomButtonsDisplay.mMapView org.osmdroid.views.MapView \l0x001d: INVOKE  (r0 I:org.osmdroid.views.Projection) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL \l0x0021: INVOKE  (r1 I:float) = (r4 I:android.view.MotionEvent) android.view.MotionEvent.getX():float type: VIRTUAL \l0x0025: CAST  (r1 I:int) = (int) (r1 I:float) \l0x0026: INVOKE  (r4 I:float) = (r4 I:android.view.MotionEvent) android.view.MotionEvent.getY():float type: VIRTUAL \l0x002a: CAST  (r4 I:int) = (int) (r4 I:float) \l0x002b: IGET  (r2 I:android.graphics.Point) = (r3 I:org.osmdroid.views.CustomZoomButtonsDisplay) org.osmdroid.views.CustomZoomButtonsDisplay.mUnrotatedPoint android.graphics.Point \l0x002d: INVOKE  \l  (r0 I:org.osmdroid.views.Projection)\l  (r1 I:int)\l  (r4 I:int)\l  (r2 I:android.graphics.Point)\l org.osmdroid.views.Projection.rotateAndScalePoint(int, int, android.graphics.Point):android.graphics.Point type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0030|0x0030: IGET  (r4 I:android.graphics.Point) = (r3 I:org.osmdroid.views.CustomZoomButtonsDisplay) org.osmdroid.views.CustomZoomButtonsDisplay.mUnrotatedPoint android.graphics.Point \l0x0032: IGET  (r4 I:int) = (r4 I:android.graphics.Point) android.graphics.Point.x int \l0x0034: IGET  (r0 I:android.graphics.Point) = (r3 I:org.osmdroid.views.CustomZoomButtonsDisplay) org.osmdroid.views.CustomZoomButtonsDisplay.mUnrotatedPoint android.graphics.Point \l0x0036: IGET  (r0 I:int) = (r0 I:android.graphics.Point) android.graphics.Point.y int \l0x0038: INVOKE  (r4 I:boolean) = \l  (r3 I:org.osmdroid.views.CustomZoomButtonsDisplay)\l  (r4 I:int)\l  (r0 I:int)\l  (r5 I:boolean)\l org.osmdroid.views.CustomZoomButtonsDisplay.isTouched(int, int, boolean):boolean type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x003c|0x003c: RETURN  (r4 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.CustomZoomButtonsDisplay.isTouchedRotated((r3 'this' I:org.osmdroid.views.CustomZoomButtonsDisplay A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

