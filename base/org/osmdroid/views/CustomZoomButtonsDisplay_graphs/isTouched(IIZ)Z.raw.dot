digraph "CFG fororg.osmdroid.views.CustomZoomButtonsDisplay.isTouched(IIZ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0001: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0002: INVOKE  (r3 I:boolean) = \l  (r2 I:org.osmdroid.views.CustomZoomButtonsDisplay)\l  (r5 I:boolean)\l  (r0 I:boolean)\l  (r3 I:float)\l org.osmdroid.views.CustomZoomButtonsDisplay.isTouched(boolean, boolean, float):boolean type: DIRECT \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CAST  (r3 I:float) = (float) (r4 I:int) \l0x000a: INVOKE  (r3 I:boolean) = \l  (r2 I:org.osmdroid.views.CustomZoomButtonsDisplay)\l  (r5 I:boolean)\l  (r1 I:boolean)\l  (r3 I:float)\l org.osmdroid.views.CustomZoomButtonsDisplay.isTouched(boolean, boolean, float):boolean type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0011 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean org.osmdroid.views.CustomZoomButtonsDisplay.isTouched((r2 'this' I:org.osmdroid.views.CustomZoomButtonsDisplay A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_6[style=dashed];
Node_5 -> Node_6;
}

