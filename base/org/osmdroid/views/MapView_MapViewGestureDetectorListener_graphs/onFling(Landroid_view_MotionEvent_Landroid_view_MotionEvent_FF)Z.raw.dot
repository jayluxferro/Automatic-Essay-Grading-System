digraph "CFG fororg.osmdroid.views.MapView.MapViewGestureDetectorListener.onFling(Landroid\/view\/MotionEvent;Landroid\/view\/MotionEvent;FF)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.access$500(org.osmdroid.views.MapView):boolean type: STATIC \l0x0006: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0066 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r0 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x000b: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.access$600(org.osmdroid.views.MapView):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: IGET  (r0 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0014: INVOKE  (r2 I:org.osmdroid.views.overlay.OverlayManager) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getOverlayManager():org.osmdroid.views.overlay.OverlayManager type: VIRTUAL \l0x0018: IGET  (r7 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x001a: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x001b: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x001c: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001d: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: INVOKE  (r10 I:boolean) = \l  (r2 I:org.osmdroid.views.overlay.OverlayManager)\l  (r3 I:android.view.MotionEvent)\l  (r4 I:android.view.MotionEvent)\l  (r5 I:float)\l  (r6 I:float)\l  (r7 I:org.osmdroid.views.MapView)\l org.osmdroid.views.overlay.OverlayManager.onFling(android.view.MotionEvent, android.view.MotionEvent, float, float, org.osmdroid.views.MapView):boolean type: INTERFACE \l0x0022: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0026 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: RETURN  (r11 I:boolean) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0026|0x0026: IGET  (r10 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0028: INVOKE  (r10 I:boolean) = (r10 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.access$700(org.osmdroid.views.MapView):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0034 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: IGET  (r10 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0030: INVOKE  (r10 I:org.osmdroid.views.MapView), (r1 I:boolean) org.osmdroid.views.MapView.access$702(org.osmdroid.views.MapView, boolean):boolean type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: RETURN  (r1 I:boolean) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: IGET  (r10 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0036: IPUT  (r11 I:boolean), (r10 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mIsFlinging boolean \l0x0038: IGET  (r10 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x003a: INVOKE  (r10 I:android.widget.Scroller) = (r10 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.access$300(org.osmdroid.views.MapView):android.widget.Scroller type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|0x003e: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0065 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0040|0x0040: IGET  (r10 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0042: INVOKE  (r0 I:android.widget.Scroller) = (r10 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.access$300(org.osmdroid.views.MapView):android.widget.Scroller type: STATIC \l0x0046: IGET  (r10 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0048: INVOKE  (r1 I:long) = (r10 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMapScrollX():long type: VIRTUAL \l0x004c: CAST  (r1 I:int) = (int) (r1 I:long) \l0x004d: IGET  (r10 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x004f: INVOKE  (r2 I:long) = (r10 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMapScrollY():long type: VIRTUAL \l0x0053: CAST  (r2 I:int) = (int) (r2 I:long) \l0x0054: NEG  (r10 I:float) = (r12 I:float) \l0x0055: CAST  (r3 I:int) = (int) (r10 I:float) \l0x0056: NEG  (r10 I:float) = (r13 I:float) \l0x0057: CAST  (r4 I:int) = (int) (r10 I:float) \l0x0058: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l0x005a: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l0x005d: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (\-2147483648(0xffffffff80000000, float:\-0.0) ?[int, float, short, byte, char])\l \l0x005f: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (2147483647(0x7fffffff, float:NaN) ?[int, float, short, byte, char])\l \l0x0062: INVOKE  \l  (r0 I:android.widget.Scroller)\l  (r1 I:int)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l  (r8 I:int)\l android.widget.Scroller.fling(int, int, int, int, int, int, int, int):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0065|0x0065: RETURN  (r11 I:boolean) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0066|0x0066: IGET  (r10 I:org.osmdroid.views.MapView) = \l  (r9 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0068: INVOKE  (r10 I:org.osmdroid.views.MapView), (r1 I:boolean) org.osmdroid.views.MapView.access$602(org.osmdroid.views.MapView, boolean):boolean type: STATIC \l}"];
Node_17 [shape=record,label="{17\:\ 0x006b|0x006b: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.MapView.MapViewGestureDetectorListener.onFling((r9 'this' I:org.osmdroid.views.MapView$MapViewGestureDetectorListener A[IMMUTABLE_TYPE, THIS]), (r10 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_16;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_3 -> Node_16[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

