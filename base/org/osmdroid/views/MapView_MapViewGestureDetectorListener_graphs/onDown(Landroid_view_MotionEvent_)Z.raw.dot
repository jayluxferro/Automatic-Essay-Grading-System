digraph "CFG fororg.osmdroid.views.MapView.MapViewGestureDetectorListener.onDown(Landroid\/view\/MotionEvent;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.views.MapView) = \l  (r2 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0002: IGET  (r0 I:boolean) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mIsFlinging boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:org.osmdroid.views.MapView) = \l  (r2 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0008: INVOKE  (r0 I:android.widget.Scroller) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.access$300(org.osmdroid.views.MapView):android.widget.Scroller type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0017 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:org.osmdroid.views.MapView) = \l  (r2 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0010: INVOKE  (r0 I:android.widget.Scroller) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.access$300(org.osmdroid.views.MapView):android.widget.Scroller type: STATIC \l0x0014: INVOKE  (r0 I:android.widget.Scroller) android.widget.Scroller.abortAnimation():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: IGET  (r0 I:org.osmdroid.views.MapView) = \l  (r2 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0019: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001a: IPUT  (r1 I:boolean), (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mIsFlinging boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: IGET  (r0 I:org.osmdroid.views.MapView) = \l  (r2 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x001e: INVOKE  (r0 I:org.osmdroid.views.overlay.OverlayManager) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getOverlayManager():org.osmdroid.views.overlay.OverlayManager type: VIRTUAL \l0x0022: IGET  (r1 I:org.osmdroid.views.MapView) = \l  (r2 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0024: INVOKE  (r3 I:boolean) = \l  (r0 I:org.osmdroid.views.overlay.OverlayManager)\l  (r3 I:android.view.MotionEvent)\l  (r1 I:org.osmdroid.views.MapView)\l org.osmdroid.views.overlay.OverlayManager.onDown(android.view.MotionEvent, org.osmdroid.views.MapView):boolean type: INTERFACE \l0x0028: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002c \l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|0x002b: RETURN  (r0 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IGET  (r3 I:org.osmdroid.views.MapView) = \l  (r2 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x002e: INVOKE  (r3 I:org.osmdroid.views.CustomZoomButtonsController) = (r3 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.access$400(org.osmdroid.views.MapView):org.osmdroid.views.CustomZoomButtonsController type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0032|0x0032: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x003d \l}"];
Node_11 [shape=record,label="{11\:\ 0x0034|0x0034: IGET  (r3 I:org.osmdroid.views.MapView) = \l  (r2 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.this$0 org.osmdroid.views.MapView \l0x0036: INVOKE  (r3 I:org.osmdroid.views.CustomZoomButtonsController) = (r3 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.access$400(org.osmdroid.views.MapView):org.osmdroid.views.CustomZoomButtonsController type: STATIC \l0x003a: INVOKE  (r3 I:org.osmdroid.views.CustomZoomButtonsController) org.osmdroid.views.CustomZoomButtonsController.activate():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003d|0x003d: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.MapView.MapViewGestureDetectorListener.onDown((r2 'this' I:org.osmdroid.views.MapView$MapViewGestureDetectorListener A[IMMUTABLE_TYPE, THIS]), (r3 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
}

