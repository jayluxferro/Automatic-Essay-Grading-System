digraph "CFG fororg.osmdroid.views.Projection.fromPixels(IILorg\/osmdroid\/util\/GeoPoint;Z)Lorg\/osmdroid\/api\/IGeoPoint;" {
subgraph cluster_Region_1229680300 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0033|RETURN\l|return r10.mTileSystem.getGeoFromMercator(getCleanMercator(getMercatorXFromPixel(r11), r10.horizontalWrapEnabled), getCleanMercator(getMercatorYFromPixel(r12), r10.verticalWrapEnabled), r10.mMercatorMapSize, r13, r10.horizontalWrapEnabled \|\| r14, r10.verticalWrapEnabled \|\| r14)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x001c}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x001e|REMOVE\lADDED_TO_REGION\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0021}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0023}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0024|PHI: r8 \l  PHI: (r8v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0026}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0028|REMOVE\lADDED_TO_REGION\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x002b}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002d}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x002e|PHI: r9 \l  PHI: (r9v0 boolean) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
MethodNode[shape=record,label="{public org.osmdroid.api.IGeoPoint org.osmdroid.views.Projection.fromPixels((r10v0 'this' org.osmdroid.views.Projection A[IMMUTABLE_TYPE, THIS]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 org.osmdroid.util.GeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
}

