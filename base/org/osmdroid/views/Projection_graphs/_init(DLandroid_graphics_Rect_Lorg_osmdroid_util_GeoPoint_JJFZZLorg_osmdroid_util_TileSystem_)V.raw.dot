digraph "CFG fororg.osmdroid.views.Projection.\<init\>(DLandroid\/graphics\/Rect;Lorg\/osmdroid\/util\/GeoPoint;JJFZZLorg\/osmdroid\/util\/TileSystem;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0001: INVOKE  (r10 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0004: CONST  (r1 I:?[long, double]) = \l  (4629137466983448576(0x403e000000000000, double:30.0) ?[long, double])\l \l0x0006: INVOKE  (r1 I:double) = (r1 I:double) org.osmdroid.util.TileSystem.MapSize(double):double type: STATIC \l0x000a: IPUT  (r1 I:double), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mProjectedMapSize double \l0x000c: NEW_INSTANCE  (r1 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x000e: INVOKE  (r1 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l0x0011: IPUT  \l  (r1 I:android.graphics.Matrix)\l  (r0 I:org.osmdroid.views.Projection)\l org.osmdroid.views.Projection.mRotateAndScaleMatrix android.graphics.Matrix \l0x0013: NEW_INSTANCE  (r1 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x0015: INVOKE  (r1 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l0x0018: IPUT  \l  (r1 I:android.graphics.Matrix)\l  (r0 I:org.osmdroid.views.Projection)\l org.osmdroid.views.Projection.mUnrotateAndScaleMatrix android.graphics.Matrix \l0x001a: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x001b: NEW_ARRAY  (r1 I:float[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x001d: IPUT  (r1 I:float[]), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mRotateScalePoints float[] \l0x001f: NEW_INSTANCE  (r1 I:org.osmdroid.util.BoundingBox) =  org.osmdroid.util.BoundingBox \l0x0021: INVOKE  (r1 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.\<init\>():void type: DIRECT \l0x0024: IPUT  \l  (r1 I:org.osmdroid.util.BoundingBox)\l  (r0 I:org.osmdroid.views.Projection)\l org.osmdroid.views.Projection.mBoundingBoxProjection org.osmdroid.util.BoundingBox \l0x0026: NEW_INSTANCE  (r1 I:android.graphics.Rect) =  android.graphics.Rect \l0x0028: INVOKE  (r1 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x002b: IPUT  \l  (r1 I:android.graphics.Rect)\l  (r0 I:org.osmdroid.views.Projection)\l org.osmdroid.views.Projection.mScreenRectProjection android.graphics.Rect \l0x002d: NEW_INSTANCE  (r1 I:org.osmdroid.util.GeoPoint) =  org.osmdroid.util.GeoPoint \l0x002f: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0031: INVOKE  \l  (r1 I:org.osmdroid.util.GeoPoint)\l  (r2 I:double)\l  (r2 I:double)\l org.osmdroid.util.GeoPoint.\<init\>(double, double):void type: DIRECT \l0x0034: IPUT  \l  (r1 I:org.osmdroid.util.GeoPoint)\l  (r0 I:org.osmdroid.views.Projection)\l org.osmdroid.views.Projection.mCurrentCenter org.osmdroid.util.GeoPoint \l0x0036: MOVE  (r4 I:?[long, double]) = (r11 I:?[long, double]) \l0x0037: IPUT  (r4 I:double), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mZoomLevelProjection double \l0x0039: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: IPUT  (r1 I:boolean), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.horizontalWrapEnabled boolean \l0x003d: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003f: IPUT  (r1 I:boolean), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.verticalWrapEnabled boolean \l0x0041: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0043: IPUT  \l  (r1 I:org.osmdroid.util.TileSystem)\l  (r0 I:org.osmdroid.views.Projection)\l org.osmdroid.views.Projection.mTileSystem org.osmdroid.util.TileSystem \l0x0045: IGET  (r4 I:double) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mZoomLevelProjection double \l0x0047: INVOKE  (r4 I:double) = (r4 I:double) org.osmdroid.util.TileSystem.MapSize(double):double type: STATIC \l0x004b: IPUT  (r4 I:double), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mMercatorMapSize double \l0x004d: IGET  (r4 I:double) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mZoomLevelProjection double \l0x004f: INVOKE  (r4 I:double) = (r4 I:double) org.osmdroid.util.TileSystem.getTileSize(double):double type: STATIC \l0x0053: IPUT  (r4 I:double), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mTileSize double \l0x0055: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0056: IPUT  \l  (r1 I:android.graphics.Rect)\l  (r0 I:org.osmdroid.views.Projection)\l org.osmdroid.views.Projection.mIntrinsicScreenRectProjection android.graphics.Rect \l}"];
Node_1 [shape=record,label="{1\:\ 0x0058|0x0058: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x005d \l}"];
Node_2 [shape=record,label="{2\:\ 0x005a|0x005a: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x005b|0x005b: MOVE  (r1 I:?[long, double]) = (r15 I:?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x005d|0x005d: NEW_INSTANCE  (r1 I:org.osmdroid.util.GeoPoint) =  org.osmdroid.util.GeoPoint \l0x005f: INVOKE  \l  (r1 I:org.osmdroid.util.GeoPoint)\l  (r2 I:double)\l  (r2 I:double)\l org.osmdroid.util.GeoPoint.\<init\>(double, double):void type: DIRECT \l0x0062: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0064|0x0064: IPUT  (r1 I:long), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mScrollX long \l0x0066: MOVE  (r1 I:?[long, double]) = (r17 I:?[long, double]) \l0x0068: IPUT  (r1 I:long), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mScrollY long \l0x006a: INVOKE  (r1 I:int) = (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getScreenCenterX():int type: VIRTUAL \l0x006e: CAST  (r1 I:long) = (long) (r1 I:int) \l0x006f: IGET  (r4 I:long) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mScrollX long \l0x0071: ARITH  (r1 I:long) = (r1 I:long) \- (r4 I:long) \l0x0072: IGET  (r4 I:org.osmdroid.util.TileSystem) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mTileSystem org.osmdroid.util.TileSystem \l0x0074: INVOKE  (r5 I:double) = (r3 I:org.osmdroid.util.GeoPoint) org.osmdroid.util.GeoPoint.getLongitude():double type: VIRTUAL \l0x0078: IGET  (r7 I:double) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mMercatorMapSize double \l0x007a: IGET  (r9 I:boolean) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.horizontalWrapEnabled boolean \l0x007c: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x007d: MOVE  (r12 I:?[long, double]) = (r5 I:?[long, double]) \l0x007e: MOVE  (r14 I:?[long, double]) = (r7 I:?[long, double]) \l0x007f: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0081: INVOKE  (r4 I:long) = \l  (r11 I:org.osmdroid.util.TileSystem)\l  (r12 I:double)\l  (r14 I:double)\l  (r16 I:boolean)\l org.osmdroid.util.TileSystem.getMercatorXFromLongitude(double, double, boolean):long type: VIRTUAL \l0x0085: ARITH  (r1 I:long) = (r1 I:long) \- (r4 I:long) \l0x0086: IPUT  (r1 I:long), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mOffsetX long \l0x0088: INVOKE  (r1 I:int) = (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getScreenCenterY():int type: VIRTUAL \l0x008c: CAST  (r1 I:long) = (long) (r1 I:int) \l0x008d: IGET  (r4 I:long) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mScrollY long \l0x008f: ARITH  (r1 I:long) = (r1 I:long) \- (r4 I:long) \l0x0090: IGET  (r4 I:org.osmdroid.util.TileSystem) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mTileSystem org.osmdroid.util.TileSystem \l0x0092: INVOKE  (r5 I:double) = (r3 I:org.osmdroid.util.GeoPoint) org.osmdroid.util.GeoPoint.getLatitude():double type: VIRTUAL \l0x0096: IGET  (r7 I:double) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mMercatorMapSize double \l0x0098: IGET  (r3 I:boolean) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.verticalWrapEnabled boolean \l0x009a: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x009b: MOVE  (r12 I:?[long, double]) = (r5 I:?[long, double]) \l0x009c: MOVE  (r14 I:?[long, double]) = (r7 I:?[long, double]) \l0x009d: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009f: INVOKE  (r3 I:long) = \l  (r11 I:org.osmdroid.util.TileSystem)\l  (r12 I:double)\l  (r14 I:double)\l  (r16 I:boolean)\l org.osmdroid.util.TileSystem.getMercatorYFromLatitude(double, double, boolean):long type: VIRTUAL \l0x00a3: ARITH  (r1 I:long) = (r1 I:long) \- (r3 I:long) \l0x00a4: IPUT  (r1 I:long), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mOffsetY long \l0x00a6: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a8: IPUT  (r1 I:float), (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mOrientation float \l0x00aa: IGET  (r1 I:android.graphics.Matrix) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mRotateAndScaleMatrix android.graphics.Matrix \l0x00ac: IGET  (r2 I:float) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mOrientation float \l0x00ae: INVOKE  (r3 I:int) = (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getScreenCenterX():int type: VIRTUAL \l0x00b2: CAST  (r3 I:float) = (float) (r3 I:int) \l0x00b3: INVOKE  (r4 I:int) = (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getScreenCenterY():int type: VIRTUAL \l0x00b7: CAST  (r4 I:float) = (float) (r4 I:int) \l0x00b8: INVOKE  \l  (r1 I:android.graphics.Matrix)\l  (r2 I:float)\l  (r3 I:float)\l  (r4 I:float)\l android.graphics.Matrix.preRotate(float, float, float):boolean type: VIRTUAL \l0x00bb: IGET  (r1 I:android.graphics.Matrix) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mRotateAndScaleMatrix android.graphics.Matrix \l0x00bd: IGET  (r2 I:android.graphics.Matrix) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mUnrotateAndScaleMatrix android.graphics.Matrix \l0x00bf: INVOKE  \l  (r1 I:android.graphics.Matrix)\l  (r2 I:android.graphics.Matrix)\l android.graphics.Matrix.invert(android.graphics.Matrix):boolean type: VIRTUAL \l0x00c2: INVOKE  (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.refresh():void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x00c5|0x00c5: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.Projection.\<init\>((r10 'this' I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, THIS]), (r11 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:org.osmdroid.util.GeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:org.osmdroid.util.TileSystem A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_4 -> Node_3;
Node_5 -> Node_6;
}

