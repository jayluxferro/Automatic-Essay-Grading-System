digraph "CFG fororg.osmdroid.views.Projection.fromPixels(II)Lorg\/osmdroid\/api\/IGeoPoint;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r3 I:org.osmdroid.api.IGeoPoint) = \l  (r2 I:org.osmdroid.views.Projection)\l  (r3 I:int)\l  (r4 I:int)\l  (r0 I:org.osmdroid.util.GeoPoint)\l  (r1 I:boolean)\l org.osmdroid.views.Projection.fromPixels(int, int, org.osmdroid.util.GeoPoint, boolean):org.osmdroid.api.IGeoPoint type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r3 I:org.osmdroid.api.IGeoPoint) \l}"];
MethodNode[shape=record,label="{public org.osmdroid.api.IGeoPoint org.osmdroid.views.Projection.fromPixels((r2 'this' I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

