digraph "CFG fororg.osmdroid.views.Projection.applyMatrixToPoint(IILandroid\/graphics\/Point;Landroid\/graphics\/Matrix;Z)Landroid\/graphics\/Point;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: NEW_INSTANCE  (r4 I:android.graphics.Point) =  android.graphics.Point \l0x0005: INVOKE  (r4 I:android.graphics.Point) android.graphics.Point.\<init\>():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x002a \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IGET  (r6 I:float[]) = (r1 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mRotateScalePoints float[] \l0x000c: CAST  (r2 I:float) = (float) (r2 I:int) \l0x000d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: APUT  \l  (r6 I:?[int, float][])\l  (r0 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0010: IGET  (r2 I:float[]) = (r1 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mRotateScalePoints float[] \l0x0012: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0013: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0014: APUT  \l  (r2 I:?[int, float][])\l  (r6 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x0016: IGET  (r2 I:float[]) = (r1 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mRotateScalePoints float[] \l0x0018: INVOKE  (r5 I:android.graphics.Matrix), (r2 I:float[]) android.graphics.Matrix.mapPoints(float[]):void type: VIRTUAL \l0x001b: IGET  (r2 I:float[]) = (r1 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mRotateScalePoints float[] \l0x001d: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r0 I:?[int, short, byte, char]) \l0x001f: CAST  (r2 I:int) = (int) (r2 I:float) \l0x0020: IPUT  (r2 I:int), (r4 I:android.graphics.Point) android.graphics.Point.x int \l0x0022: IGET  (r2 I:float[]) = (r1 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mRotateScalePoints float[] \l0x0024: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x0026: CAST  (r2 I:int) = (int) (r2 I:float) \l0x0027: IPUT  (r2 I:int), (r4 I:android.graphics.Point) android.graphics.Point.y int \l}"];
Node_5 [shape=record,label="{5\:\ 0x002a|0x002a: IPUT  (r2 I:int), (r4 I:android.graphics.Point) android.graphics.Point.x int \l0x002c: IPUT  (r3 I:int), (r4 I:android.graphics.Point) android.graphics.Point.y int \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: RETURN  (r4 I:android.graphics.Point) \l}"];
MethodNode[shape=record,label="{private android.graphics.Point org.osmdroid.views.Projection.applyMatrixToPoint((r1 'this' I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.graphics.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:android.graphics.Matrix A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_2;
Node_0 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
}

