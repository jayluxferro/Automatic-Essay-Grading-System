digraph "CFG fororg.osmdroid.views.Projection.adjustOffsets(JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|if ((r4 \> 0 ? 1 : (r4 == 0 ? 0 : \-1)) != 0) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006}"];
Node_3 [shape=record,label="{3\:\ 0x0008|if ((r6 \> 0 ? 1 : (r6 == 0 ? 0 : \-1)) != 0) goto L_0x000b\l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b|r3.mOffsetX = r3.mOffsetX + r4\lr3.mOffsetY = r3.mOffsetY + r6\lr3.mScrollX = r3.mScrollX \- r4\lr3.mScrollY = r3.mScrollY \- r6\lrefresh()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void org.osmdroid.views.Projection.adjustOffsets((r3v0 'this' org.osmdroid.views.Projection A[IMMUTABLE_TYPE, THIS]), (r4v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
}

