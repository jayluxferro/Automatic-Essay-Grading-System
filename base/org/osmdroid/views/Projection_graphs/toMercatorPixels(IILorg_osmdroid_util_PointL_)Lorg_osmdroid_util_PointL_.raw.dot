digraph "CFG fororg.osmdroid.views.Projection.toMercatorPixels(IILorg\/osmdroid\/util\/PointL;)Lorg\/osmdroid\/util\/PointL;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0003 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: NEW_INSTANCE  (r5 I:org.osmdroid.util.PointL) =  org.osmdroid.util.PointL \l0x0005: INVOKE  (r5 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.\<init\>():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r0 I:long) = (r2 I:org.osmdroid.views.Projection), (r3 I:int) org.osmdroid.views.Projection.getMercatorXFromPixel(int):long type: VIRTUAL \l0x000c: IGET  (r3 I:boolean) = (r2 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.horizontalWrapEnabled boolean \l0x000e: INVOKE  (r0 I:long) = \l  (r2 I:org.osmdroid.views.Projection)\l  (r0 I:long)\l  (r3 I:boolean)\l org.osmdroid.views.Projection.getCleanMercator(long, boolean):long type: VIRTUAL \l0x0012: IPUT  (r0 I:long), (r5 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0014: INVOKE  (r3 I:long) = (r2 I:org.osmdroid.views.Projection), (r4 I:int) org.osmdroid.views.Projection.getMercatorYFromPixel(int):long type: VIRTUAL \l0x0018: IGET  (r0 I:boolean) = (r2 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.verticalWrapEnabled boolean \l0x001a: INVOKE  (r3 I:long) = \l  (r2 I:org.osmdroid.views.Projection)\l  (r3 I:long)\l  (r0 I:boolean)\l org.osmdroid.views.Projection.getCleanMercator(long, boolean):long type: VIRTUAL \l0x001e: IPUT  (r3 I:long), (r5 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: RETURN  (r5 I:org.osmdroid.util.PointL) \l}"];
MethodNode[shape=record,label="{public org.osmdroid.util.PointL org.osmdroid.views.Projection.toMercatorPixels((r2 'this' I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, THIS]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.osmdroid.util.PointL A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_2;
Node_0 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_3 -> Node_4;
}

