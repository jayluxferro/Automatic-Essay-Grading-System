digraph "CFG fororg.osmdroid.views.Projection.fromPixels(IILorg\/osmdroid\/util\/GeoPoint;Z)Lorg\/osmdroid\/api\/IGeoPoint;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.util.TileSystem) = (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mTileSystem org.osmdroid.util.TileSystem \l0x0002: INVOKE  (r1 I:long) = (r10 I:org.osmdroid.views.Projection), (r11 I:int) org.osmdroid.views.Projection.getMercatorXFromPixel(int):long type: VIRTUAL \l0x0006: IGET  (r11 I:boolean) = (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.horizontalWrapEnabled boolean \l0x0008: INVOKE  (r1 I:long) = \l  (r10 I:org.osmdroid.views.Projection)\l  (r1 I:long)\l  (r11 I:boolean)\l org.osmdroid.views.Projection.getCleanMercator(long, boolean):long type: VIRTUAL \l0x000c: INVOKE  (r11 I:long) = (r10 I:org.osmdroid.views.Projection), (r12 I:int) org.osmdroid.views.Projection.getMercatorYFromPixel(int):long type: VIRTUAL \l0x0010: IGET  (r3 I:boolean) = (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.verticalWrapEnabled boolean \l0x0012: INVOKE  (r3 I:long) = \l  (r10 I:org.osmdroid.views.Projection)\l  (r11 I:long)\l  (r3 I:boolean)\l org.osmdroid.views.Projection.getCleanMercator(long, boolean):long type: VIRTUAL \l0x0016: IGET  (r5 I:double) = (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mMercatorMapSize double \l0x0018: IGET  (r11 I:boolean) = (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.horizontalWrapEnabled boolean \l0x001a: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001b: CONST  (r7 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001e|0x001e: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0021 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0023|0x0023: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: IGET  (r11 I:boolean) = (r10 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.verticalWrapEnabled boolean \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x002b \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|0x002e: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x002f: INVOKE  (r11 I:org.osmdroid.util.GeoPoint) = \l  (r0 I:org.osmdroid.util.TileSystem)\l  (r1 I:long)\l  (r3 I:long)\l  (r5 I:double)\l  (r7 I:org.osmdroid.util.GeoPoint)\l  (r8 I:boolean)\l  (r9 I:boolean)\l org.osmdroid.util.TileSystem.getGeoFromMercator(long, long, double, org.osmdroid.util.GeoPoint, boolean, boolean):org.osmdroid.util.GeoPoint type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0033|0x0033: RETURN  (r11 I:org.osmdroid.api.IGeoPoint) \l}"];
MethodNode[shape=record,label="{public org.osmdroid.api.IGeoPoint org.osmdroid.views.Projection.fromPixels((r10 'this' I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, THIS]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:org.osmdroid.util.GeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_4;
Node_2 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_10;
Node_8 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

