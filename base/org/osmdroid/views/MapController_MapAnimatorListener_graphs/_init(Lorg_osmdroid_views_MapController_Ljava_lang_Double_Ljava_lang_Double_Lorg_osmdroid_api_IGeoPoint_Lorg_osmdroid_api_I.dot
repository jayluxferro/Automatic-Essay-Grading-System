digraph "CFG fororg.osmdroid.views.MapController.MapAnimatorListener.\<init\>(Lorg\/osmdroid\/views\/MapController;Ljava\/lang\/Double;Ljava\/lang\/Double;Lorg\/osmdroid\/api\/IGeoPoint;Lorg\/osmdroid\/api\/IGeoPoint;Ljava\/lang\/Float;Ljava\/lang\/Float;Ljava\/lang\/Boolean;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.mCenter = new org.osmdroid.util.GeoPoint(0.0d, 0.0d)\lr3.mMapController = r4\lr3.mZoomStart = r5\lr3.mZoomEnd = r6\lr3.mCenterStart = r7\lr3.mCenterEnd = r8\l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|if (r10 != null) goto L_0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|r3.mOrientationStart = null\lr3.mOrientationSpan = null\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|r3.mOrientationStart = r9\lr3.mOrientationSpan = java.lang.Float.valueOf((float) org.osmdroid.util.MyMath.getAngleDifference((double) r3.mOrientationStart.floatValue(), (double) r10.floatValue(), r11))\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.MapController.MapAnimatorListener.\<init\>((r3v0 'this' org.osmdroid.views.MapController$MapAnimatorListener A[IMMUTABLE_TYPE, THIS]), (r4v0 org.osmdroid.views.MapController A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.Float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.lang.Float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.Boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
}

