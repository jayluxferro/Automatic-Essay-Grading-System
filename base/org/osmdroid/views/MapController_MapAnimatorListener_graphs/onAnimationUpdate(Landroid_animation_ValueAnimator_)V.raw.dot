digraph "CFG fororg.osmdroid.views.MapController.MapAnimatorListener.onAnimationUpdate(Landroid\/animation\/ValueAnimator;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r10 I:java.lang.Object) = (r10 I:android.animation.ValueAnimator) android.animation.ValueAnimator.getAnimatedValue():java.lang.Object type: VIRTUAL \l0x0004: CHECK_CAST  (r10 I:java.lang.Float) = (java.lang.Float) (r10 I:?[OBJECT, ARRAY]) \l0x0006: INVOKE  (r10 I:float) = (r10 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x000a: IGET  (r0 I:java.lang.Double) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mZoomEnd java.lang.Double \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x002c \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: IGET  (r0 I:java.lang.Double) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mZoomStart java.lang.Double \l0x0010: INVOKE  (r0 I:double) = (r0 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0014: IGET  (r2 I:java.lang.Double) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mZoomEnd java.lang.Double \l0x0016: INVOKE  (r2 I:double) = (r2 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x001a: IGET  (r4 I:java.lang.Double) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mZoomStart java.lang.Double \l0x001c: INVOKE  (r4 I:double) = (r4 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0020: ARITH  (r2 I:double) = (r2 I:double) \- (r4 I:double) \l0x0021: CAST  (r4 I:double) = (double) (r10 I:float) \l0x0022: ARITH  (r2 I:double) = (r2 I:double) * (r4 I:double) \l0x0024: ARITH  (r0 I:double) = (r0 I:double) + (r2 I:double) \l0x0025: IGET  (r2 I:org.osmdroid.views.MapController) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mMapController org.osmdroid.views.MapController \l0x0027: IGET  (r2 I:org.osmdroid.views.MapView) = (r2 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0029: INVOKE  (r2 I:org.osmdroid.views.MapView), (r0 I:double) org.osmdroid.views.MapView.setZoomLevel(double):double type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x002c|0x002c: IGET  (r0 I:java.lang.Float) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mOrientationSpan java.lang.Float \l}"];
Node_4 [shape=record,label="{4\:\ 0x002e|0x002e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0046 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0030|0x0030: IGET  (r0 I:java.lang.Float) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mOrientationStart java.lang.Float \l0x0032: INVOKE  (r0 I:float) = (r0 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x0036: IGET  (r1 I:java.lang.Float) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mOrientationSpan java.lang.Float \l0x0038: INVOKE  (r1 I:float) = (r1 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x003c: ARITH  (r1 I:float) = (r1 I:float) * (r10 I:float) \l0x003e: ARITH  (r0 I:float) = (r0 I:float) + (r1 I:float) \l0x003f: IGET  (r1 I:org.osmdroid.views.MapController) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mMapController org.osmdroid.views.MapController \l0x0041: IGET  (r1 I:org.osmdroid.views.MapView) = (r1 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0043: INVOKE  (r1 I:org.osmdroid.views.MapView), (r0 I:float) org.osmdroid.views.MapView.setMapOrientation(float):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0046|0x0046: IGET  (r0 I:org.osmdroid.api.IGeoPoint) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mCenterEnd org.osmdroid.api.IGeoPoint \l}"];
Node_7 [shape=record,label="{7\:\ 0x0048|0x0048: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0099 \l}"];
Node_8 [shape=record,label="{8\:\ 0x004a|0x004a: IGET  (r0 I:org.osmdroid.views.MapController) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mMapController org.osmdroid.views.MapController \l0x004c: IGET  (r0 I:org.osmdroid.views.MapView) = (r0 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x004e: INVOKE  (r0 I:org.osmdroid.util.TileSystem) =  org.osmdroid.views.MapView.getTileSystem():org.osmdroid.util.TileSystem type: STATIC \l0x0052: IGET  (r1 I:org.osmdroid.api.IGeoPoint) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mCenterStart org.osmdroid.api.IGeoPoint \l0x0054: INVOKE  (r1 I:double) = (r1 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x0058: INVOKE  (r1 I:double) = (r0 I:org.osmdroid.util.TileSystem), (r1 I:double) org.osmdroid.util.TileSystem.cleanLongitude(double):double type: VIRTUAL \l0x005c: IGET  (r3 I:org.osmdroid.api.IGeoPoint) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mCenterEnd org.osmdroid.api.IGeoPoint \l0x005e: INVOKE  (r3 I:double) = (r3 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x0062: INVOKE  (r3 I:double) = (r0 I:org.osmdroid.util.TileSystem), (r3 I:double) org.osmdroid.util.TileSystem.cleanLongitude(double):double type: VIRTUAL \l0x0066: ARITH  (r3 I:double) = (r3 I:double) \- (r1 I:double) \l0x0067: CAST  (r5 I:double) = (double) (r10 I:float) \l0x0068: ARITH  (r3 I:double) = (r3 I:double) * (r5 I:double) \l0x006a: ARITH  (r1 I:double) = (r1 I:double) + (r3 I:double) \l0x006b: INVOKE  (r1 I:double) = (r0 I:org.osmdroid.util.TileSystem), (r1 I:double) org.osmdroid.util.TileSystem.cleanLongitude(double):double type: VIRTUAL \l0x006f: IGET  (r10 I:org.osmdroid.api.IGeoPoint) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mCenterStart org.osmdroid.api.IGeoPoint \l0x0071: INVOKE  (r3 I:double) = (r10 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x0075: INVOKE  (r3 I:double) = (r0 I:org.osmdroid.util.TileSystem), (r3 I:double) org.osmdroid.util.TileSystem.cleanLatitude(double):double type: VIRTUAL \l0x0079: IGET  (r10 I:org.osmdroid.api.IGeoPoint) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mCenterEnd org.osmdroid.api.IGeoPoint \l0x007b: INVOKE  (r7 I:double) = (r10 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x007f: INVOKE  (r7 I:double) = (r0 I:org.osmdroid.util.TileSystem), (r7 I:double) org.osmdroid.util.TileSystem.cleanLatitude(double):double type: VIRTUAL \l0x0083: ARITH  (r7 I:double) = (r7 I:double) \- (r3 I:double) \l0x0084: ARITH  (r7 I:double) = (r7 I:double) * (r5 I:double) \l0x0086: ARITH  (r3 I:double) = (r3 I:double) + (r7 I:double) \l0x0087: INVOKE  (r3 I:double) = (r0 I:org.osmdroid.util.TileSystem), (r3 I:double) org.osmdroid.util.TileSystem.cleanLatitude(double):double type: VIRTUAL \l0x008b: IGET  (r10 I:org.osmdroid.util.GeoPoint) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mCenter org.osmdroid.util.GeoPoint \l0x008d: INVOKE  \l  (r10 I:org.osmdroid.util.GeoPoint)\l  (r3 I:double)\l  (r1 I:double)\l org.osmdroid.util.GeoPoint.setCoords(double, double):void type: VIRTUAL \l0x0090: IGET  (r10 I:org.osmdroid.views.MapController) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mMapController org.osmdroid.views.MapController \l0x0092: IGET  (r10 I:org.osmdroid.views.MapView) = (r10 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0094: IGET  (r0 I:org.osmdroid.util.GeoPoint) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mCenter org.osmdroid.util.GeoPoint \l0x0096: INVOKE  \l  (r10 I:org.osmdroid.views.MapView)\l  (r0 I:org.osmdroid.api.IGeoPoint)\l org.osmdroid.views.MapView.setExpectedCenter(org.osmdroid.api.IGeoPoint):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0099|0x0099: IGET  (r10 I:org.osmdroid.views.MapController) = (r9 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mMapController org.osmdroid.views.MapController \l0x009b: IGET  (r10 I:org.osmdroid.views.MapView) = (r10 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x009d: INVOKE  (r10 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.invalidate():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x00a0|0x00a0: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.MapController.MapAnimatorListener.onAnimationUpdate((r9 'this' I:org.osmdroid.views.MapController$MapAnimatorListener A[IMMUTABLE_TYPE, THIS]), (r10 I:android.animation.ValueAnimator A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

