digraph "CFG fororg.osmdroid.views.MapController.MapAnimatorListener.\<init\>(Lorg\/osmdroid\/views\/MapController;Ljava\/lang\/Double;Ljava\/lang\/Double;Lorg\/osmdroid\/api\/IGeoPoint;Lorg\/osmdroid\/api\/IGeoPoint;Ljava\/lang\/Float;Ljava\/lang\/Float;Ljava\/lang\/Boolean;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r3 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:org.osmdroid.util.GeoPoint) =  org.osmdroid.util.GeoPoint \l0x0005: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x0007: INVOKE  \l  (r0 I:org.osmdroid.util.GeoPoint)\l  (r1 I:double)\l  (r1 I:double)\l org.osmdroid.util.GeoPoint.\<init\>(double, double):void type: DIRECT \l0x000a: IPUT  \l  (r0 I:org.osmdroid.util.GeoPoint)\l  (r3 I:org.osmdroid.views.MapController$MapAnimatorListener)\l org.osmdroid.views.MapController.MapAnimatorListener.mCenter org.osmdroid.util.GeoPoint \l0x000c: IPUT  \l  (r4 I:org.osmdroid.views.MapController)\l  (r3 I:org.osmdroid.views.MapController$MapAnimatorListener)\l org.osmdroid.views.MapController.MapAnimatorListener.mMapController org.osmdroid.views.MapController \l0x000e: IPUT  \l  (r5 I:java.lang.Double)\l  (r3 I:org.osmdroid.views.MapController$MapAnimatorListener)\l org.osmdroid.views.MapController.MapAnimatorListener.mZoomStart java.lang.Double \l0x0010: IPUT  \l  (r6 I:java.lang.Double)\l  (r3 I:org.osmdroid.views.MapController$MapAnimatorListener)\l org.osmdroid.views.MapController.MapAnimatorListener.mZoomEnd java.lang.Double \l0x0012: IPUT  \l  (r7 I:org.osmdroid.api.IGeoPoint)\l  (r3 I:org.osmdroid.views.MapController$MapAnimatorListener)\l org.osmdroid.views.MapController.MapAnimatorListener.mCenterStart org.osmdroid.api.IGeoPoint \l0x0014: IPUT  \l  (r8 I:org.osmdroid.api.IGeoPoint)\l  (r3 I:org.osmdroid.views.MapController$MapAnimatorListener)\l org.osmdroid.views.MapController.MapAnimatorListener.mCenterEnd org.osmdroid.api.IGeoPoint \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: IPUT  \l  (r4 I:java.lang.Float)\l  (r3 I:org.osmdroid.views.MapController$MapAnimatorListener)\l org.osmdroid.views.MapController.MapAnimatorListener.mOrientationStart java.lang.Float \l0x001b: IPUT  \l  (r4 I:java.lang.Float)\l  (r3 I:org.osmdroid.views.MapController$MapAnimatorListener)\l org.osmdroid.views.MapController.MapAnimatorListener.mOrientationSpan java.lang.Float \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: IPUT  \l  (r9 I:java.lang.Float)\l  (r3 I:org.osmdroid.views.MapController$MapAnimatorListener)\l org.osmdroid.views.MapController.MapAnimatorListener.mOrientationStart java.lang.Float \l0x0020: IGET  (r4 I:java.lang.Float) = (r3 I:org.osmdroid.views.MapController$MapAnimatorListener) org.osmdroid.views.MapController.MapAnimatorListener.mOrientationStart java.lang.Float \l0x0022: INVOKE  (r4 I:float) = (r4 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x0026: CAST  (r4 I:double) = (double) (r4 I:float) \l0x0027: INVOKE  (r6 I:float) = (r10 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x002b: CAST  (r6 I:double) = (double) (r6 I:float) \l0x002c: INVOKE  (r4 I:double) = (r4 I:double), (r6 I:double), (r11 I:java.lang.Boolean) org.osmdroid.util.MyMath.getAngleDifference(double, double, java.lang.Boolean):double type: STATIC \l0x0030: CAST  (r4 I:float) = (float) (r4 I:double) \l0x0031: INVOKE  (r4 I:java.lang.Float) = (r4 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC \l0x0035: IPUT  \l  (r4 I:java.lang.Float)\l  (r3 I:org.osmdroid.views.MapController$MapAnimatorListener)\l org.osmdroid.views.MapController.MapAnimatorListener.mOrientationSpan java.lang.Float \l}"];
Node_4 [shape=record,label="{4\:\ 0x0037|0x0037: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.MapController.MapAnimatorListener.\<init\>((r3 'this' I:org.osmdroid.views.MapController$MapAnimatorListener A[IMMUTABLE_TYPE, THIS]), (r4 I:org.osmdroid.views.MapController A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.Float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.Float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.Boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

