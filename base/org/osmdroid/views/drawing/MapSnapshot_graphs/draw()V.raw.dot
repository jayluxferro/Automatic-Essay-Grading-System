digraph "CFG fororg.osmdroid.views.drawing.MapSnapshot.draw()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mProjection org.osmdroid.views.Projection \l0x0002: INVOKE  (r0 I:int) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getWidth():int type: VIRTUAL \l0x0006: IGET  (r1 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mProjection org.osmdroid.views.Projection \l0x0008: INVOKE  (r1 I:int) = (r1 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getHeight():int type: VIRTUAL \l0x000c: SGET  (r2 I:android.graphics.Bitmap$Config) =  android.graphics.Bitmap.Config.ARGB_8888 android.graphics.Bitmap$Config \l0x000e: INVOKE  (r0 I:android.graphics.Bitmap) = \l  (r0 I:int)\l  (r1 I:int)\l  (r2 I:android.graphics.Bitmap$Config)\l android.graphics.Bitmap.createBitmap(int, int, android.graphics.Bitmap$Config):android.graphics.Bitmap type: STATIC \l0x0012: IPUT  \l  (r0 I:android.graphics.Bitmap)\l  (r8 I:org.osmdroid.views.drawing.MapSnapshot)\l org.osmdroid.views.drawing.MapSnapshot.mBitmap android.graphics.Bitmap \l0x0014: NEW_INSTANCE  (r0 I:android.graphics.Canvas) =  android.graphics.Canvas \l0x0016: IGET  (r1 I:android.graphics.Bitmap) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mBitmap android.graphics.Bitmap \l0x0018: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r1 I:android.graphics.Bitmap)\l android.graphics.Canvas.\<init\>(android.graphics.Bitmap):void type: DIRECT \l0x001b: IGET  (r1 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mProjection org.osmdroid.views.Projection \l0x001d: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001f: INVOKE  \l  (r1 I:org.osmdroid.views.Projection)\l  (r0 I:android.graphics.Canvas)\l  (r2 I:boolean)\l  (r7 I:boolean)\l org.osmdroid.views.Projection.save(android.graphics.Canvas, boolean, boolean):void type: VIRTUAL \l0x0022: IGET  (r1 I:org.osmdroid.views.overlay.TilesOverlay) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mTilesOverlay org.osmdroid.views.overlay.TilesOverlay \l0x0024: IGET  (r3 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mProjection org.osmdroid.views.Projection \l0x0026: IGET  (r2 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mProjection org.osmdroid.views.Projection \l0x0028: INVOKE  (r4 I:double) = (r2 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getZoomLevel():double type: VIRTUAL \l0x002c: IGET  (r6 I:org.osmdroid.util.RectL) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mViewPort org.osmdroid.util.RectL \l0x002e: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x002f: INVOKE  \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay)\l  (r2 I:android.graphics.Canvas)\l  (r3 I:org.osmdroid.views.Projection)\l  (r4 I:double)\l  (r6 I:org.osmdroid.util.RectL)\l org.osmdroid.views.overlay.TilesOverlay.drawTiles(android.graphics.Canvas, org.osmdroid.views.Projection, double, org.osmdroid.util.RectL):void type: VIRTUAL \l0x0032: IGET  (r1 I:java.util.List\<org.osmdroid.views.overlay.Overlay\>) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mOverlays java.util.List \l}"];
Node_1 [shape=record,label="{1\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0056 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0036|0x0036: IGET  (r1 I:java.util.List\<org.osmdroid.views.overlay.Overlay\>) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mOverlays java.util.List \l0x0038: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x003c|0x003c: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0040|0x0040: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0056 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0042|0x0042: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0046: CHECK_CAST  (r2 I:org.osmdroid.views.overlay.Overlay) = (org.osmdroid.views.overlay.Overlay) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0048|0x0048: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x003c \l}"];
Node_7 [shape=record,label="{7\:\ 0x004a|0x004a: INVOKE  (r3 I:boolean) = (r2 I:org.osmdroid.views.overlay.Overlay) org.osmdroid.views.overlay.Overlay.isEnabled():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x004e|0x004e: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x003c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0050|0x0050: IGET  (r3 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mProjection org.osmdroid.views.Projection \l0x0052: INVOKE  \l  (r2 I:org.osmdroid.views.overlay.Overlay)\l  (r0 I:android.graphics.Canvas)\l  (r3 I:org.osmdroid.views.Projection)\l org.osmdroid.views.overlay.Overlay.draw(android.graphics.Canvas, org.osmdroid.views.Projection):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0056|0x0056: IGET  (r1 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mProjection org.osmdroid.views.Projection \l0x0058: INVOKE  \l  (r1 I:org.osmdroid.views.Projection)\l  (r0 I:android.graphics.Canvas)\l  (r7 I:boolean)\l org.osmdroid.views.Projection.restore(android.graphics.Canvas, boolean):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x005b|0x005b: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.views.drawing.MapSnapshot.draw((r8 'this' I:org.osmdroid.views.drawing.MapSnapshot A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_10;
Node_5 -> Node_6;
Node_6 -> Node_3;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_3;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_3;
Node_10 -> Node_11;
}

