digraph "CFG fororg.osmdroid.views.drawing.MapSnapshot.\<init\>(Lorg\/osmdroid\/views\/drawing\/MapSnapshot$MapSnapshotable;ILorg\/osmdroid\/tileprovider\/MapTileProviderBase;Ljava\/util\/List;Lorg\/osmdroid\/views\/Projection;)V" {
subgraph cluster_Region_1131012318 {
label = "R(1:0)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.mViewPort = new org.osmdroid.util.RectL()\lr1.mStatus = org.osmdroid.views.drawing.MapSnapshot.Status.NOTHING\lr1.mMapSnapshotable = r2\lr1.mIncludeFlags = r3\lr1.mTileProvider = r4\lr1.mOverlays = r5\lr1.mProjection = r6\lr1.mProjection.getMercatorViewPort(r1.mViewPort)\lr1.mTilesOverlay = new org.osmdroid.views.overlay.TilesOverlay(r1.mTileProvider, (android.content.Context) null)\lr1.mTilesOverlay.setHorizontalWrapEnabled(r1.mProjection.isHorizontalWrapEnabled())\lr1.mTilesOverlay.setVerticalWrapEnabled(r1.mProjection.isVerticalWrapEnabled())\lr1.mHandler = new org.osmdroid.views.drawing.MapSnapshotHandler(r1)\lr1.mTileProvider.getTileRequestCompleteHandlers().add(r1.mHandler)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0051}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.drawing.MapSnapshot.\<init\>((r1v0 'this' org.osmdroid.views.drawing.MapSnapshot A[IMMUTABLE_TYPE, THIS]), (r2v0 org.osmdroid.views.drawing.MapSnapshot$MapSnapshotable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 org.osmdroid.tileprovider.MapTileProviderBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.util.List\<org.osmdroid.views.overlay.Overlay\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 org.osmdroid.views.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/osmdroid\/views\/drawing\/MapSnapshot$MapSnapshotable;, I, Lorg\/osmdroid\/tileprovider\/MapTileProviderBase;, Ljava\/util\/List\<, Lorg\/osmdroid\/views\/overlay\/Overlay;, \>;, Lorg\/osmdroid\/views\/Projection;, )V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

