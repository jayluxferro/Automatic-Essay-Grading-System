digraph "CFG fororg.osmdroid.views.drawing.MapSnapshot.refresh()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.refreshCheckStart():boolean type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mTilesOverlay org.osmdroid.views.overlay.TilesOverlay \l0x0009: INVOKE  (r0 I:org.osmdroid.tileprovider.TileStates) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.getTileStates():org.osmdroid.tileprovider.TileStates type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IGET  (r1 I:org.osmdroid.views.overlay.TilesOverlay) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mTilesOverlay org.osmdroid.views.overlay.TilesOverlay \l0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: IGET  (r3 I:org.osmdroid.views.Projection) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mProjection org.osmdroid.views.Projection \l0x0012: IGET  (r4 I:org.osmdroid.views.Projection) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mProjection org.osmdroid.views.Projection \l0x0014: INVOKE  (r4 I:double) = (r4 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getZoomLevel():double type: VIRTUAL \l0x0018: IGET  (r6 I:org.osmdroid.util.RectL) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mViewPort org.osmdroid.util.RectL \l0x001a: INVOKE  \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay)\l  (r2 I:android.graphics.Canvas)\l  (r3 I:org.osmdroid.views.Projection)\l  (r4 I:double)\l  (r6 I:org.osmdroid.util.RectL)\l org.osmdroid.views.overlay.TilesOverlay.drawTiles(android.graphics.Canvas, org.osmdroid.views.Projection, double, org.osmdroid.util.RectL):void type: VIRTUAL \l0x001d: IGET  (r1 I:int) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mIncludeFlags int \l0x001f: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0020: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x0021|0x0021: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0062 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0023|0x0023: IGET  (r1 I:int) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mIncludeFlags int \l0x0025: CONST  (r4 I:?[int, float, short, byte, char]) = (15 ?[int, float, short, byte, char]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0062 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: IGET  (r1 I:int) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mIncludeFlags int \l0x002b: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (r2 I:?[int, boolean, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0035 \l}"];
Node_10 [shape=record,label="{10\:\ 0x002e|0x002e: INVOKE  (r1 I:int) = (r0 I:org.osmdroid.tileprovider.TileStates) org.osmdroid.tileprovider.TileStates.getUpToDate():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0032|0x0032: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0035 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|0x0034: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|0x0035: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0044 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|0x0037: IGET  (r1 I:int) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mIncludeFlags int \l0x0039: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (2 ?[int, float, short, byte, char]) \l}"];
Node_15 [shape=record,label="{15\:\ 0x003b|0x003b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0044 \l}"];
Node_16 [shape=record,label="{16\:\ 0x003d|0x003d: INVOKE  (r1 I:int) = (r0 I:org.osmdroid.tileprovider.TileStates) org.osmdroid.tileprovider.TileStates.getExpired():int type: VIRTUAL \l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|0x0041: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0044 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0043|0x0043: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0044|0x0044: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0053 \l}"];
Node_20 [shape=record,label="{20\:\ 0x0046|0x0046: IGET  (r1 I:int) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mIncludeFlags int \l0x0048: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (4 ?[int, float, short, byte, char]) \l}"];
Node_21 [shape=record,label="{21\:\ 0x004a|0x004a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0053 \l}"];
Node_22 [shape=record,label="{22\:\ 0x004c|0x004c: INVOKE  (r1 I:int) = (r0 I:org.osmdroid.tileprovider.TileStates) org.osmdroid.tileprovider.TileStates.getScaled():int type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0050|0x0050: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0053 \l}"];
Node_24 [shape=record,label="{24\:\ 0x0052|0x0052: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|0x0053: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0062 \l}"];
Node_26 [shape=record,label="{26\:\ 0x0055|0x0055: IGET  (r1 I:int) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mIncludeFlags int \l0x0057: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (8 ?[int, float, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x0059|0x0059: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0062 \l}"];
Node_28 [shape=record,label="{28\:\ 0x005b|0x005b: INVOKE  (r1 I:int) = (r0 I:org.osmdroid.tileprovider.TileStates) org.osmdroid.tileprovider.TileStates.getNotFound():int type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x005f|0x005f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0062 \l}"];
Node_30 [shape=record,label="{30\:\ 0x0061|0x0061: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x0062|0x0062: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0091 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0064|0x0064: IGET  (r1 I:org.osmdroid.views.drawing.MapSnapshot$Status) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mStatus org.osmdroid.views.drawing.MapSnapshot$Status \l0x0066: SGET  (r2 I:org.osmdroid.views.drawing.MapSnapshot$Status) =  org.osmdroid.views.drawing.MapSnapshot.Status.CANVAS_OK org.osmdroid.views.drawing.MapSnapshot$Status \l}"];
Node_33 [shape=record,label="{33\:\ 0x0068|0x0068: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x0090 \l}"];
Node_34 [shape=record,label="{34\:\ 0x006a|0x006a: IGET  (r1 I:org.osmdroid.views.drawing.MapSnapshot$Status) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mStatus org.osmdroid.views.drawing.MapSnapshot$Status \l0x006c: SGET  (r2 I:org.osmdroid.views.drawing.MapSnapshot$Status) =  org.osmdroid.views.drawing.MapSnapshot.Status.PAINTING org.osmdroid.views.drawing.MapSnapshot$Status \l}"];
Node_35 [shape=record,label="{35\:\ 0x006e|0x006e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:37:0x0071 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0071|0x0071: INVOKE  (r1 I:boolean) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.refreshCheckFinish():boolean type: DIRECT \l}"];
Node_38 [shape=record,label="{38\:\ 0x0075|0x0075: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0078 \l}"];
Node_39 [shape=record,label="{39\:\ 0x0077|0x0077: RETURN   \l}"];
Node_40 [shape=record,label="{40\:\ 0x0078|0x0078: SGET  (r1 I:org.osmdroid.views.drawing.MapSnapshot$Status) =  org.osmdroid.views.drawing.MapSnapshot.Status.PAINTING org.osmdroid.views.drawing.MapSnapshot$Status \l0x007a: IPUT  \l  (r1 I:org.osmdroid.views.drawing.MapSnapshot$Status)\l  (r7 I:org.osmdroid.views.drawing.MapSnapshot)\l org.osmdroid.views.drawing.MapSnapshot.mStatus org.osmdroid.views.drawing.MapSnapshot$Status \l0x007c: IGET  (r1 I:boolean) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mIsDetached boolean \l}"];
Node_41 [shape=record,label="{41\:\ 0x007e|0x007e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:43:0x0081 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0080|0x0080: RETURN   \l}"];
Node_43 [shape=record,label="{43\:\ 0x0081|0x0081: INVOKE  (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.draw():void type: DIRECT \l0x0084: SGET  (r1 I:org.osmdroid.views.drawing.MapSnapshot$Status) =  org.osmdroid.views.drawing.MapSnapshot.Status.CANVAS_OK org.osmdroid.views.drawing.MapSnapshot$Status \l0x0086: IPUT  \l  (r1 I:org.osmdroid.views.drawing.MapSnapshot$Status)\l  (r7 I:org.osmdroid.views.drawing.MapSnapshot)\l org.osmdroid.views.drawing.MapSnapshot.mStatus org.osmdroid.views.drawing.MapSnapshot$Status \l0x0088: IGET  (r1 I:org.osmdroid.views.drawing.MapSnapshot$MapSnapshotable) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.mMapSnapshotable org.osmdroid.views.drawing.MapSnapshot$MapSnapshotable \l}"];
Node_44 [shape=record,label="{44\:\ 0x008a|0x008a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:47:0x0091 \l}"];
Node_45 [shape=record,label="{45\:\ 0x008c|0x008c: INVOKE  \l  (r1 I:org.osmdroid.views.drawing.MapSnapshot$MapSnapshotable)\l  (r7 I:org.osmdroid.views.drawing.MapSnapshot)\l org.osmdroid.views.drawing.MapSnapshot.MapSnapshotable.callback(org.osmdroid.views.drawing.MapSnapshot):void type: INTERFACE \l}"];
Node_46 [shape=record,label="{46\:\ 0x0090|0x0090: RETURN   \l}"];
Node_47 [shape=record,label="{47\:\ 0x0091|0x0091: INVOKE  (r1 I:boolean) = (r7 I:org.osmdroid.views.drawing.MapSnapshot) org.osmdroid.views.drawing.MapSnapshot.refreshCheckEnd():boolean type: DIRECT \l}"];
Node_48 [shape=record,label="{48\:\ 0x0095|0x0095: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000d \l}"];
Node_49 [shape=record,label="{49\:\ 0x0097|0x0097: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.views.drawing.MapSnapshot.refresh((r7 'this' I:org.osmdroid.views.drawing.MapSnapshot A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_31;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_31;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_19;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_47;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_46;
Node_34 -> Node_35;
Node_35 -> Node_37;
Node_35 -> Node_46[style=dashed];
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45[style=dashed];
Node_44 -> Node_47;
Node_45 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_4;
Node_48 -> Node_49[style=dashed];
}

