digraph "CFG fororg.osmdroid.views.MapView.\<init\>(Landroid\/content\/Context;Lorg\/osmdroid\/tileprovider\/MapTileProviderBase;Landroid\/os\/Handler;Landroid\/util\/AttributeSet;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r4 I:android.view.ViewGroup)\l  (r5 I:android.content.Context)\l  (r8 I:android.util.AttributeSet)\l android.view.ViewGroup.\<init\>(android.content.Context, android.util.AttributeSet):void type: DIRECT \l0x0003: CONST  (r0 I:?[long, double]) = (0 ?[long, double]) \l0x0005: IPUT  (r0 I:double), (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mZoomLevel double \l0x0007: NEW_INSTANCE  (r2 I:java.util.concurrent.atomic.AtomicBoolean) =  java.util.concurrent.atomic.AtomicBoolean \l0x0009: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: INVOKE  \l  (r2 I:java.util.concurrent.atomic.AtomicBoolean)\l  (r3 I:boolean)\l java.util.concurrent.atomic.AtomicBoolean.\<init\>(boolean):void type: DIRECT \l0x000d: IPUT  \l  (r2 I:java.util.concurrent.atomic.AtomicBoolean)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mIsAnimating java.util.concurrent.atomic.AtomicBoolean \l0x000f: NEW_INSTANCE  (r2 I:android.graphics.PointF) =  android.graphics.PointF \l0x0011: INVOKE  (r2 I:android.graphics.PointF) android.graphics.PointF.\<init\>():void type: DIRECT \l0x0014: IPUT  \l  (r2 I:android.graphics.PointF)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mMultiTouchScaleInitPoint android.graphics.PointF \l0x0016: NEW_INSTANCE  (r2 I:org.osmdroid.util.GeoPoint) =  org.osmdroid.util.GeoPoint \l0x0018: INVOKE  \l  (r2 I:org.osmdroid.util.GeoPoint)\l  (r0 I:double)\l  (r0 I:double)\l org.osmdroid.util.GeoPoint.\<init\>(double, double):void type: DIRECT \l0x001b: IPUT  \l  (r2 I:org.osmdroid.util.GeoPoint)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mMultiTouchScaleGeoPoint org.osmdroid.util.GeoPoint \l0x001d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001e: IPUT  (r0 I:float), (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mapOrientation float \l0x0020: NEW_INSTANCE  (r0 I:android.graphics.Rect) =  android.graphics.Rect \l0x0022: INVOKE  (r0 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x0025: IPUT  \l  (r0 I:android.graphics.Rect)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mInvalidateRect android.graphics.Rect \l0x0027: IPUT  (r3 I:boolean), (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mTilesScaledToDpi boolean \l0x0029: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x002b: IPUT  (r0 I:float), (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mTilesScaleFactor float \l0x002d: NEW_INSTANCE  (r0 I:android.graphics.Point) =  android.graphics.Point \l0x002f: INVOKE  (r0 I:android.graphics.Point) android.graphics.Point.\<init\>():void type: DIRECT \l0x0032: IPUT  \l  (r0 I:android.graphics.Point)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mRotateScalePoint android.graphics.Point \l0x0034: NEW_INSTANCE  (r0 I:android.graphics.Point) =  android.graphics.Point \l0x0036: INVOKE  (r0 I:android.graphics.Point) android.graphics.Point.\<init\>():void type: DIRECT \l0x0039: IPUT  \l  (r0 I:android.graphics.Point)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mLayoutPoint android.graphics.Point \l0x003b: NEW_INSTANCE  (r0 I:java.util.LinkedList) =  java.util.LinkedList \l0x003d: INVOKE  (r0 I:java.util.LinkedList) java.util.LinkedList.\<init\>():void type: DIRECT \l0x0040: IPUT  \l  (r0 I:java.util.LinkedList\<org.osmdroid.views.MapView$OnFirstLayoutListener\>)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mOnFirstLayoutListeners java.util.LinkedList \l0x0042: IPUT  (r3 I:boolean), (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mLayoutOccurred boolean \l0x0044: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0045: IPUT  (r0 I:boolean), (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.horizontalMapRepetitionEnabled boolean \l0x0047: IPUT  (r0 I:boolean), (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.verticalMapRepetitionEnabled boolean \l0x0049: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x004b: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x004e: IPUT  \l  (r1 I:java.util.List\<org.osmdroid.events.MapListener\>)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mListners java.util.List \l0x0050: NEW_INSTANCE  (r1 I:org.osmdroid.views.MapViewRepository) =  org.osmdroid.views.MapViewRepository \l0x0052: INVOKE  \l  (r1 I:org.osmdroid.views.MapViewRepository)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapViewRepository.\<init\>(org.osmdroid.views.MapView):void type: DIRECT \l0x0055: IPUT  \l  (r1 I:org.osmdroid.views.MapViewRepository)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mRepository org.osmdroid.views.MapViewRepository \l0x0057: NEW_INSTANCE  (r1 I:android.graphics.Rect) =  android.graphics.Rect \l0x0059: INVOKE  (r1 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x005c: IPUT  \l  (r1 I:android.graphics.Rect)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mRescaleScreenRect android.graphics.Rect \l0x005e: IPUT  (r0 I:boolean), (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mDestroyModeOnDetach boolean \l0x0060: IPUT  (r0 I:boolean), (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.enableFling boolean \l0x0062: IPUT  (r3 I:boolean), (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.pauseFling boolean \l0x0064: INVOKE  (r4 I:org.osmdroid.views.MapView), (r3 I:boolean) org.osmdroid.views.MapView.setWillNotDraw(boolean):void type: VIRTUAL \l0x0067: INVOKE  (r1 I:boolean) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.isInEditMode():boolean type: VIRTUAL \l0x006b: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x006c|0x006c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0079 \l}"];
Node_2 [shape=record,label="{2\:\ 0x006e|0x006e: IPUT  \l  (r2 I:android.os.Handler)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mTileRequestCompleteHandler android.os.Handler \l0x0070: IPUT  \l  (r2 I:org.osmdroid.views.MapController)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mController org.osmdroid.views.MapController \l0x0072: IPUT  \l  (r2 I:org.osmdroid.views.CustomZoomButtonsController)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mZoomController org.osmdroid.views.CustomZoomButtonsController \l0x0074: IPUT  \l  (r2 I:android.widget.Scroller)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mScroller android.widget.Scroller \l0x0076: IPUT  \l  (r2 I:android.view.GestureDetector)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mGestureDetector android.view.GestureDetector \l}"];
Node_3 [shape=record,label="{3\:\ 0x0078|0x0078: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0079|0x0079: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0084 \l}"];
Node_5 [shape=record,label="{5\:\ 0x007b|0x007b: SGET  (r9 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x007d: CONST  (r1 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x007f|0x007f: IF  (r9 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:8:0x0084 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0081|0x0081: INVOKE  \l  (r4 I:org.osmdroid.views.MapView)\l  (r0 I:int)\l  (r2 I:android.graphics.Paint)\l org.osmdroid.views.MapView.setLayerType(int, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0084|0x0084: NEW_INSTANCE  (r9 I:org.osmdroid.views.MapController) =  org.osmdroid.views.MapController \l0x0086: INVOKE  \l  (r9 I:org.osmdroid.views.MapController)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapController.\<init\>(org.osmdroid.views.MapView):void type: DIRECT \l0x0089: IPUT  \l  (r9 I:org.osmdroid.views.MapController)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mController org.osmdroid.views.MapController \l0x008b: NEW_INSTANCE  (r9 I:android.widget.Scroller) =  android.widget.Scroller \l0x008d: INVOKE  \l  (r9 I:android.widget.Scroller)\l  (r5 I:android.content.Context)\l android.widget.Scroller.\<init\>(android.content.Context):void type: DIRECT \l0x0090: IPUT  \l  (r9 I:android.widget.Scroller)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mScroller android.widget.Scroller \l}"];
Node_9 [shape=record,label="{9\:\ 0x0092|0x0092: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x00b1 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0094|0x0094: INVOKE  (r6 I:org.osmdroid.tileprovider.tilesource.ITileSource) = \l  (r4 I:org.osmdroid.views.MapView)\l  (r8 I:android.util.AttributeSet)\l org.osmdroid.views.MapView.getTileSourceFromAttributes(android.util.AttributeSet):org.osmdroid.tileprovider.tilesource.ITileSource type: DIRECT \l0x0098: INVOKE  (r8 I:boolean) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.isInEditMode():boolean type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x009c|0x009c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x00a7 \l}"];
Node_12 [shape=record,label="{12\:\ 0x009e|0x009e: NEW_INSTANCE  (r8 I:org.osmdroid.tileprovider.MapTileProviderArray) =  org.osmdroid.tileprovider.MapTileProviderArray \l0x00a0: NEW_ARRAY  (r9 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: org.osmdroid.tileprovider.modules.MapTileModuleProviderBase[] \l0x00a2: INVOKE  \l  (r8 I:org.osmdroid.tileprovider.MapTileProviderArray)\l  (r6 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l  (r2 I:org.osmdroid.tileprovider.IRegisterReceiver)\l  (r9 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase[])\l org.osmdroid.tileprovider.MapTileProviderArray.\<init\>(org.osmdroid.tileprovider.tilesource.ITileSource, org.osmdroid.tileprovider.IRegisterReceiver, org.osmdroid.tileprovider.modules.MapTileModuleProviderBase[]):void type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x00a5|0x00a5: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00a7|0x00a7: NEW_INSTANCE  (r8 I:org.osmdroid.tileprovider.MapTileProviderBasic) =  org.osmdroid.tileprovider.MapTileProviderBasic \l0x00a9: INVOKE  (r9 I:android.content.Context) = (r5 I:android.content.Context) android.content.Context.getApplicationContext():android.content.Context type: VIRTUAL \l0x00ad: INVOKE  \l  (r8 I:org.osmdroid.tileprovider.MapTileProviderBasic)\l  (r9 I:android.content.Context)\l  (r6 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l org.osmdroid.tileprovider.MapTileProviderBasic.\<init\>(android.content.Context, org.osmdroid.tileprovider.tilesource.ITileSource):void type: DIRECT \l}"];
Node_15 [shape=record,label="{15\:\ 0x00b1|0x00b1: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x00b8 \l}"];
Node_16 [shape=record,label="{16\:\ 0x00b3|0x00b3: NEW_INSTANCE  (r7 I:org.osmdroid.tileprovider.util.SimpleInvalidationHandler) =  org.osmdroid.tileprovider.util.SimpleInvalidationHandler \l0x00b5: INVOKE  \l  (r7 I:org.osmdroid.tileprovider.util.SimpleInvalidationHandler)\l  (r4 I:android.view.View)\l org.osmdroid.tileprovider.util.SimpleInvalidationHandler.\<init\>(android.view.View):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x00b8|0x00b8: IPUT  \l  (r7 I:android.os.Handler)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mTileRequestCompleteHandler android.os.Handler \l0x00ba: IPUT  \l  (r6 I:org.osmdroid.tileprovider.MapTileProviderBase)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mTileProvider org.osmdroid.tileprovider.MapTileProviderBase \l0x00bc: IGET  (r6 I:org.osmdroid.tileprovider.MapTileProviderBase) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mTileProvider org.osmdroid.tileprovider.MapTileProviderBase \l0x00be: INVOKE  (r6 I:java.util.Collection) = (r6 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.getTileRequestCompleteHandlers():java.util.Collection type: VIRTUAL \l0x00c2: IGET  (r7 I:android.os.Handler) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mTileRequestCompleteHandler android.os.Handler \l0x00c4: INVOKE  (r6 I:java.util.Collection), (r7 I:java.lang.Object) java.util.Collection.add(java.lang.Object):boolean type: INTERFACE \l0x00c7: IGET  (r6 I:org.osmdroid.tileprovider.MapTileProviderBase) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mTileProvider org.osmdroid.tileprovider.MapTileProviderBase \l0x00c9: INVOKE  (r6 I:org.osmdroid.tileprovider.tilesource.ITileSource) = (r6 I:org.osmdroid.tileprovider.MapTileProviderBase) org.osmdroid.tileprovider.MapTileProviderBase.getTileSource():org.osmdroid.tileprovider.tilesource.ITileSource type: VIRTUAL \l0x00cd: INVOKE  \l  (r4 I:org.osmdroid.views.MapView)\l  (r6 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l org.osmdroid.views.MapView.updateTileSizeForDensity(org.osmdroid.tileprovider.tilesource.ITileSource):void type: DIRECT \l0x00d0: NEW_INSTANCE  (r6 I:org.osmdroid.views.overlay.TilesOverlay) =  org.osmdroid.views.overlay.TilesOverlay \l0x00d2: IGET  (r7 I:org.osmdroid.tileprovider.MapTileProviderBase) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mTileProvider org.osmdroid.tileprovider.MapTileProviderBase \l0x00d4: IGET  (r8 I:boolean) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.horizontalMapRepetitionEnabled boolean \l0x00d6: IGET  (r9 I:boolean) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.verticalMapRepetitionEnabled boolean \l0x00d8: INVOKE  \l  (r6 I:org.osmdroid.views.overlay.TilesOverlay)\l  (r7 I:org.osmdroid.tileprovider.MapTileProviderBase)\l  (r5 I:android.content.Context)\l  (r8 I:boolean)\l  (r9 I:boolean)\l org.osmdroid.views.overlay.TilesOverlay.\<init\>(org.osmdroid.tileprovider.MapTileProviderBase, android.content.Context, boolean, boolean):void type: DIRECT \l0x00db: IPUT  \l  (r6 I:org.osmdroid.views.overlay.TilesOverlay)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mMapOverlay org.osmdroid.views.overlay.TilesOverlay \l0x00dd: NEW_INSTANCE  (r6 I:org.osmdroid.views.overlay.DefaultOverlayManager) =  org.osmdroid.views.overlay.DefaultOverlayManager \l0x00df: IGET  (r7 I:org.osmdroid.views.overlay.TilesOverlay) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mMapOverlay org.osmdroid.views.overlay.TilesOverlay \l0x00e1: INVOKE  \l  (r6 I:org.osmdroid.views.overlay.DefaultOverlayManager)\l  (r7 I:org.osmdroid.views.overlay.TilesOverlay)\l org.osmdroid.views.overlay.DefaultOverlayManager.\<init\>(org.osmdroid.views.overlay.TilesOverlay):void type: DIRECT \l0x00e4: IPUT  \l  (r6 I:org.osmdroid.views.overlay.OverlayManager)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mOverlayManager org.osmdroid.views.overlay.OverlayManager \l0x00e6: NEW_INSTANCE  (r6 I:org.osmdroid.views.CustomZoomButtonsController) =  org.osmdroid.views.CustomZoomButtonsController \l0x00e8: INVOKE  \l  (r6 I:org.osmdroid.views.CustomZoomButtonsController)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.CustomZoomButtonsController.\<init\>(org.osmdroid.views.MapView):void type: DIRECT \l0x00eb: IPUT  \l  (r6 I:org.osmdroid.views.CustomZoomButtonsController)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mZoomController org.osmdroid.views.CustomZoomButtonsController \l0x00ed: IGET  (r6 I:org.osmdroid.views.CustomZoomButtonsController) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mZoomController org.osmdroid.views.CustomZoomButtonsController \l0x00ef: NEW_INSTANCE  (r7 I:org.osmdroid.views.MapView$MapViewZoomListener) =  org.osmdroid.views.MapView$MapViewZoomListener \l0x00f1: INVOKE  \l  (r7 I:org.osmdroid.views.MapView$MapViewZoomListener)\l  (r4 I:org.osmdroid.views.MapView)\l  (r2 I:org.osmdroid.views.MapView$1)\l org.osmdroid.views.MapView.MapViewZoomListener.\<init\>(org.osmdroid.views.MapView, org.osmdroid.views.MapView$1):void type: DIRECT \l0x00f4: INVOKE  \l  (r6 I:org.osmdroid.views.CustomZoomButtonsController)\l  (r7 I:org.osmdroid.views.CustomZoomButtonsController$OnZoomListener)\l org.osmdroid.views.CustomZoomButtonsController.setOnZoomListener(org.osmdroid.views.CustomZoomButtonsController$OnZoomListener):void type: VIRTUAL \l0x00f7: INVOKE  (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.checkZoomButtons():void type: DIRECT \l0x00fa: NEW_INSTANCE  (r6 I:android.view.GestureDetector) =  android.view.GestureDetector \l0x00fc: NEW_INSTANCE  (r7 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener) =  org.osmdroid.views.MapView$MapViewGestureDetectorListener \l0x00fe: INVOKE  \l  (r7 I:org.osmdroid.views.MapView$MapViewGestureDetectorListener)\l  (r4 I:org.osmdroid.views.MapView)\l  (r2 I:org.osmdroid.views.MapView$1)\l org.osmdroid.views.MapView.MapViewGestureDetectorListener.\<init\>(org.osmdroid.views.MapView, org.osmdroid.views.MapView$1):void type: DIRECT \l0x0101: INVOKE  \l  (r6 I:android.view.GestureDetector)\l  (r5 I:android.content.Context)\l  (r7 I:android.view.GestureDetector$OnGestureListener)\l android.view.GestureDetector.\<init\>(android.content.Context, android.view.GestureDetector$OnGestureListener):void type: DIRECT \l0x0104: IPUT  \l  (r6 I:android.view.GestureDetector)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mGestureDetector android.view.GestureDetector \l0x0106: IGET  (r5 I:android.view.GestureDetector) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mGestureDetector android.view.GestureDetector \l0x0108: NEW_INSTANCE  (r6 I:org.osmdroid.views.MapView$MapViewDoubleClickListener) =  org.osmdroid.views.MapView$MapViewDoubleClickListener \l0x010a: INVOKE  \l  (r6 I:org.osmdroid.views.MapView$MapViewDoubleClickListener)\l  (r4 I:org.osmdroid.views.MapView)\l  (r2 I:org.osmdroid.views.MapView$1)\l org.osmdroid.views.MapView.MapViewDoubleClickListener.\<init\>(org.osmdroid.views.MapView, org.osmdroid.views.MapView$1):void type: DIRECT \l0x010d: INVOKE  \l  (r5 I:android.view.GestureDetector)\l  (r6 I:android.view.GestureDetector$OnDoubleTapListener)\l android.view.GestureDetector.setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener):void type: VIRTUAL \l0x0110: INVOKE  (r5 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0114: INVOKE  (r5 I:boolean) = (r5 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isMapViewRecyclerFriendly():boolean type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x0118|0x0118: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0123 \l}"];
Node_19 [shape=record,label="{19\:\ 0x011a|0x011a: SGET  (r5 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x011c: CONST  (r6 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x011e|0x011e: IF  (r5 I:?[int, byte, short, char]) \< (r6 I:?[int, byte, short, char])  \-\> B:22:0x0123 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0120|0x0120: INVOKE  (r4 I:org.osmdroid.views.MapView), (r0 I:boolean) org.osmdroid.views.MapView.setHasTransientState(boolean):void type: VIRTUAL \l}"];
Node_22 [shape=record,label="{22\:\ 0x0123|0x0123: IGET  (r5 I:org.osmdroid.views.CustomZoomButtonsController) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mZoomController org.osmdroid.views.CustomZoomButtonsController \l0x0125: SGET  (r6 I:org.osmdroid.views.CustomZoomButtonsController$Visibility) =  org.osmdroid.views.CustomZoomButtonsController.Visibility.SHOW_AND_FADEOUT org.osmdroid.views.CustomZoomButtonsController$Visibility \l0x0127: INVOKE  \l  (r5 I:org.osmdroid.views.CustomZoomButtonsController)\l  (r6 I:org.osmdroid.views.CustomZoomButtonsController$Visibility)\l org.osmdroid.views.CustomZoomButtonsController.setVisibility(org.osmdroid.views.CustomZoomButtonsController$Visibility):void type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x012a|0x012a: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.MapView.\<init\>((r4 'this' I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, THIS]), (r5 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.osmdroid.tileprovider.MapTileProviderBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:android.os.Handler A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_14 -> Node_13;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_22;
Node_22 -> Node_23;
}

