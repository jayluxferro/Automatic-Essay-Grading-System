digraph "CFG fororg.osmdroid.views.MapView.getProjection()Lorg\/osmdroid\/views\/Projection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mProjection org.osmdroid.views.Projection \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: NEW_INSTANCE  (r0 I:org.osmdroid.views.Projection) =  org.osmdroid.views.Projection \l0x0006: INVOKE  \l  (r0 I:org.osmdroid.views.Projection)\l  (r8 I:org.osmdroid.views.MapView)\l org.osmdroid.views.Projection.\<init\>(org.osmdroid.views.MapView):void type: DIRECT \l0x0009: IPUT  \l  (r0 I:org.osmdroid.views.Projection)\l  (r8 I:org.osmdroid.views.MapView)\l org.osmdroid.views.MapView.mProjection org.osmdroid.views.Projection \l0x000b: IGET  (r0 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mProjection org.osmdroid.views.Projection \l0x000d: IGET  (r1 I:org.osmdroid.util.GeoPoint) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mMultiTouchScaleGeoPoint org.osmdroid.util.GeoPoint \l0x000f: IGET  (r2 I:android.graphics.PointF) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mMultiTouchScaleCurrentPoint android.graphics.PointF \l0x0011: INVOKE  \l  (r0 I:org.osmdroid.views.Projection)\l  (r1 I:org.osmdroid.api.IGeoPoint)\l  (r2 I:android.graphics.PointF)\l org.osmdroid.views.Projection.adjustOffsets(org.osmdroid.api.IGeoPoint, android.graphics.PointF):void type: VIRTUAL \l0x0014: IGET  (r0 I:boolean) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mScrollableAreaLimitLatitude boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0024 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0018|0x0018: IGET  (r1 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mProjection org.osmdroid.views.Projection \l0x001a: IGET  (r2 I:double) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mScrollableAreaLimitNorth double \l0x001c: IGET  (r4 I:double) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mScrollableAreaLimitSouth double \l0x001e: CONST  (r6 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001f: IGET  (r7 I:int) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mScrollableAreaLimitExtraPixelHeight int \l0x0021: INVOKE  \l  (r1 I:org.osmdroid.views.Projection)\l  (r2 I:double)\l  (r4 I:double)\l  (r6 I:boolean)\l  (r7 I:int)\l org.osmdroid.views.Projection.adjustOffsets(double, double, boolean, int):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: IGET  (r0 I:boolean) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mScrollableAreaLimitLongitude boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0034 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: IGET  (r1 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mProjection org.osmdroid.views.Projection \l0x002a: IGET  (r2 I:double) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mScrollableAreaLimitWest double \l0x002c: IGET  (r4 I:double) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mScrollableAreaLimitEast double \l0x002e: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002f: IGET  (r7 I:int) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mScrollableAreaLimitExtraPixelWidth int \l0x0031: INVOKE  \l  (r1 I:org.osmdroid.views.Projection)\l  (r2 I:double)\l  (r4 I:double)\l  (r6 I:boolean)\l  (r7 I:int)\l org.osmdroid.views.Projection.adjustOffsets(double, double, boolean, int):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0034|0x0034: IGET  (r0 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mProjection org.osmdroid.views.Projection \l0x0036: INVOKE  (r0 I:boolean) = \l  (r0 I:org.osmdroid.views.Projection)\l  (r8 I:org.osmdroid.views.MapView)\l org.osmdroid.views.Projection.setMapScroll(org.osmdroid.views.MapView):boolean type: VIRTUAL \l0x003a: IPUT  (r0 I:boolean), (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mImpossibleFlinging boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x003c|0x003c: IGET  (r0 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mProjection org.osmdroid.views.Projection \l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|0x003e: RETURN  (r0 I:org.osmdroid.views.Projection) \l}"];
MethodNode[shape=record,label="{public org.osmdroid.views.Projection org.osmdroid.views.MapView.getProjection((r8 'this' I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
}

