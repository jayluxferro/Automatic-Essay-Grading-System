digraph "CFG fororg.osmdroid.views.MapView.setExpectedCenter(Lorg\/osmdroid\/api\/IGeoPoint;JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.osmdroid.util.GeoPoint r0 = getProjection().getCurrentCenter()\lr1.mCenter = (org.osmdroid.util.GeoPoint) r2\lsetMapScroll(\-r3, \-r5)\lresetProjection()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|if (getProjection().getCurrentCenter().equals(r0) != false) goto L_0x0042\l}"];
Node_2 [shape=record,label="{2\:\ 0x0022|r2 = null\ljava.util.Iterator r3 = r1.mListners.iterator()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|LOOP_START\lPHI: r2 \l  PHI: (r2v7 org.osmdroid.events.ScrollEvent) = (r2v6 org.osmdroid.events.ScrollEvent), (r2v8 org.osmdroid.events.ScrollEvent) binds: [B:2:0x0022, B:8:0x003e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0029\-\>B:8:0x003e\l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|if (r3.hasNext() == false) goto L_0x0042\l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|org.osmdroid.events.MapListener r4 = r3.next()\l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|if (r2 == null) goto L_0x0038\l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|org.osmdroid.events.ScrollEvent r2 = new org.osmdroid.events.ScrollEvent(r1, 0, 0)\l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|LOOP_END\lPHI: r2 \l  PHI: (r2v8 org.osmdroid.events.ScrollEvent) = (r2v7 org.osmdroid.events.ScrollEvent), (r2v9 org.osmdroid.events.ScrollEvent) binds: [B:13:0x003e, B:12:0x003e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0029\-\>B:8:0x003e\l|r4.onScroll(r2)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0042|invalidate()\l}"];
Node_10 [shape=record,label="{10\:\ 0x0045|RETURN\l|return\l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x003e|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x003e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.MapView.setExpectedCenter((r1v0 'this' org.osmdroid.views.MapView A[IMMUTABLE_TYPE, THIS]), (r2v0 org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_13[style=dashed];
Node_7 -> Node_12;
Node_8 -> Node_3;
Node_9 -> Node_10;
Node_11 -> Node_9;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

