digraph "CFG fororg.osmdroid.views.MapView.setPositionAndScale(Ljava\/lang\/Object;Lorg\/metalev\/multitouch\/controller\/MultiTouchController$PositionAndScale;Lorg\/metalev\/multitouch\/controller\/MultiTouchController$PointInfo;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:float) = \l  (r2 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.getXOff():float type: VIRTUAL \l0x0004: INVOKE  (r3 I:float) = \l  (r2 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.getYOff():float type: VIRTUAL \l0x0008: INVOKE  \l  (r0 I:org.osmdroid.views.MapView)\l  (r1 I:float)\l  (r3 I:float)\l org.osmdroid.views.MapView.setMultiTouchScaleCurrentPoint(float, float):void type: VIRTUAL \l0x000b: INVOKE  (r1 I:float) = \l  (r2 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale)\l org.metalev.multitouch.controller.MultiTouchController.PositionAndScale.getScale():float type: VIRTUAL \l0x000f: INVOKE  (r0 I:org.osmdroid.views.MapView), (r1 I:float) org.osmdroid.views.MapView.setMultiTouchScale(float):void type: VIRTUAL \l0x0012: INVOKE  (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.requestLayout():void type: VIRTUAL \l0x0015: INVOKE  (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.invalidate():void type: VIRTUAL \l0x0018: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.MapView.setPositionAndScale((r0 'this' I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, THIS]), (r1 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:org.metalev.multitouch.controller.MultiTouchController$PositionAndScale A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.metalev.multitouch.controller.MultiTouchController$PointInfo A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

