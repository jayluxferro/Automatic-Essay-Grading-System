digraph "CFG fororg.osmdroid.views.MapView.rotateTouchEvent(Landroid\/view\/MotionEvent;)Landroid\/view\/MotionEvent;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:float) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMapOrientation():float type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CMP_L  (r0 I:int) = (r0 I:float), (r1 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: RETURN  (r5 I:android.view.MotionEvent) \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: INVOKE  (r0 I:android.view.MotionEvent) = (r5 I:android.view.MotionEvent) android.view.MotionEvent.obtain(android.view.MotionEvent):android.view.MotionEvent type: STATIC \l0x000e: SGET  (r1 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0010: CONST  (r2 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:6:0x0035 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: INVOKE  (r1 I:org.osmdroid.views.Projection) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL \l0x0018: INVOKE  (r2 I:float) = (r5 I:android.view.MotionEvent) android.view.MotionEvent.getX():float type: VIRTUAL \l0x001c: CAST  (r2 I:int) = (int) (r2 I:float) \l0x001d: INVOKE  (r5 I:float) = (r5 I:android.view.MotionEvent) android.view.MotionEvent.getY():float type: VIRTUAL \l0x0021: CAST  (r5 I:int) = (int) (r5 I:float) \l0x0022: IGET  (r3 I:android.graphics.Point) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mRotateScalePoint android.graphics.Point \l0x0024: INVOKE  \l  (r1 I:org.osmdroid.views.Projection)\l  (r2 I:int)\l  (r5 I:int)\l  (r3 I:android.graphics.Point)\l org.osmdroid.views.Projection.unrotateAndScalePoint(int, int, android.graphics.Point):android.graphics.Point type: VIRTUAL \l0x0027: IGET  (r5 I:android.graphics.Point) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mRotateScalePoint android.graphics.Point \l0x0029: IGET  (r5 I:int) = (r5 I:android.graphics.Point) android.graphics.Point.x int \l0x002b: CAST  (r5 I:float) = (float) (r5 I:int) \l0x002c: IGET  (r1 I:android.graphics.Point) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mRotateScalePoint android.graphics.Point \l0x002e: IGET  (r1 I:int) = (r1 I:android.graphics.Point) android.graphics.Point.y int \l0x0030: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0031: INVOKE  (r0 I:android.view.MotionEvent), (r5 I:float), (r1 I:float) android.view.MotionEvent.setLocation(float, float):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|0x0035: INVOKE  (r5 I:org.osmdroid.views.Projection) = (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL \l0x0039: INVOKE  (r5 I:android.graphics.Matrix) = (r5 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getInvertedScaleRotateCanvasMatrix():android.graphics.Matrix type: VIRTUAL \l0x003d: INVOKE  \l  (r0 I:android.view.MotionEvent)\l  (r5 I:android.graphics.Matrix)\l android.view.MotionEvent.transform(android.graphics.Matrix):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|0x0040: RETURN  (r0 I:android.view.MotionEvent) \l}"];
MethodNode[shape=record,label="{private android.view.MotionEvent org.osmdroid.views.MapView.rotateTouchEvent((r4 'this' I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, THIS]), (r5 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
}

