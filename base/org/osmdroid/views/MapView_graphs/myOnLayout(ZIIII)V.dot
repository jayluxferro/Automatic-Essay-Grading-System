digraph "CFG fororg.osmdroid.views.MapView.myOnLayout(ZIIII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r6 = r14\lresetProjection()\lint r0 = getChildCount()\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v3 int) binds: [B:0:0x0000, B:19:0x012c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:19:0x012c\l|if (r1 \>= r0) goto L_0x0130\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|android.view.View r2 = getChildAt(r1)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|if (r2.getVisibility() == 8) goto L_0x012c\l}"];
Node_4 [shape=record,label="{4\:\ 0x0017|org.osmdroid.views.MapView$LayoutParams r3 = (org.osmdroid.views.MapView.LayoutParams) r2.getLayoutParams()\lint r4 = r2.getMeasuredHeight()\lint r5 = r2.getMeasuredWidth()\lgetProjection().toPixels(r3.geoPoint, r6.mLayoutPoint)\l}"];
Node_5 [shape=record,label="{5\:\ 0x0037|if ((getMapOrientation() \> 0.0f ? 1 : (getMapOrientation() == 0.0f ? 0 : \-1)) == 0) goto L_0x0056\l}"];
Node_6 [shape=record,label="{6\:\ 0x0039|android.graphics.Point r7 = getProjection().rotateAndScalePoint(r6.mLayoutPoint.x, r6.mLayoutPoint.y, (android.graphics.Point) null)\landroid.graphics.Point r8 = r6.mLayoutPoint\lr8.x = r7.x\landroid.graphics.Point r8 = r6.mLayoutPoint\lr8.y = r7.y\l}"];
Node_7 [shape=record,label="{7\:\ 0x0056|long r7 = (long) r6.mLayoutPoint.x\llong r9 = (long) r6.mLayoutPoint.y\l}"];
Node_8 [shape=record,label="{8\:\ 0x0062|switch(r3.alignment) \{\l    case 1: goto L_0x0101;\l    case 2: goto L_0x00ef;\l    case 3: goto L_0x00df;\l    case 4: goto L_0x00cd;\l    case 5: goto L_0x00b6;\l    case 6: goto L_0x00a1;\l    case 7: goto L_0x0091;\l    case 8: goto L_0x007b;\l    case 9: goto L_0x0067;\l    default: goto L_0x0065;\l\}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0067|long r7 = (((long) getPaddingLeft()) + r7) \- ((long) r5)\llong r9 = (((long) getPaddingTop()) + r9) \- ((long) r4)\l}"];
Node_10 [shape=record,label="{10\:\ 0x007b|long r7 = (((long) getPaddingLeft()) + r7) \- ((long) (r5 \/ 2))\llong r9 = (((long) getPaddingTop()) + r9) \- ((long) r4)\l}"];
Node_11 [shape=record,label="{11\:\ 0x0091|long r7 = r7 + ((long) getPaddingLeft())\llong r9 = (((long) getPaddingTop()) + r9) \- ((long) r4)\l}"];
Node_12 [shape=record,label="{12\:\ 0x00a1|long r7 = (((long) getPaddingLeft()) + r7) \- ((long) r5)\llong r9 = (((long) getPaddingTop()) + r9) \- ((long) (r4 \/ 2))\l}"];
Node_13 [shape=record,label="{13\:\ 0x00b6|long r7 = (((long) getPaddingLeft()) + r7) \- ((long) (r5 \/ 2))\llong r9 = (((long) getPaddingTop()) + r9) \- ((long) (r4 \/ 2))\l}"];
Node_14 [shape=record,label="{14\:\ 0x00cd|long r7 = r7 + ((long) getPaddingLeft())\llong r9 = (((long) getPaddingTop()) + r9) \- ((long) (r4 \/ 2))\l}"];
Node_15 [shape=record,label="{15\:\ 0x00df|long r7 = (((long) getPaddingLeft()) + r7) \- ((long) r5)\llong r9 = r9 + ((long) getPaddingTop())\l}"];
Node_16 [shape=record,label="{16\:\ 0x00ef|long r7 = (((long) getPaddingLeft()) + r7) \- ((long) (r5 \/ 2))\llong r9 = r9 + ((long) getPaddingTop())\l}"];
Node_17 [shape=record,label="{17\:\ 0x0101|long r7 = r7 + ((long) getPaddingLeft())\llong r9 = r9 + ((long) getPaddingTop())\l}"];
Node_18 [shape=record,label="{18\:\ 0x010d|PHI: r7 r9 \l  PHI: (r7v7 long) = (r7v6 long), (r7v11 long), (r7v14 long), (r7v16 long), (r7v17 long), (r7v20 long), (r7v22 long), (r7v23 long), (r7v26 long), (r7v28 long) binds: [B:8:0x0062, B:17:0x0101, B:16:0x00ef, B:15:0x00df, B:14:0x00cd, B:13:0x00b6, B:12:0x00a1, B:11:0x0091, B:10:0x007b, B:9:0x0067] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v4 long) = (r9v3 long), (r9v7 long), (r9v8 long), (r9v9 long), (r9v12 long), (r9v15 long), (r9v18 long), (r9v20 long), (r9v22 long), (r9v24 long) binds: [B:8:0x0062, B:17:0x0101, B:16:0x00ef, B:15:0x00df, B:14:0x00cd, B:13:0x00b6, B:12:0x00a1, B:11:0x0091, B:10:0x007b, B:9:0x0067] A[DONT_GENERATE, DONT_INLINE]\l|long r7 = r7 + ((long) r3.offsetX)\llong r9 = r9 + ((long) r3.offsetY)\lr2.layout(org.osmdroid.util.TileSystem.truncateToInt(r7), org.osmdroid.util.TileSystem.truncateToInt(r9), org.osmdroid.util.TileSystem.truncateToInt(r7 + ((long) r5)), org.osmdroid.util.TileSystem.truncateToInt(r9 + ((long) r4)))\l}"];
Node_19 [shape=record,label="{19\:\ 0x012c|LOOP_END\lLOOP:0: B:1:0x0009\-\>B:19:0x012c\l|int r1 = r1 + 1\l}"];
Node_20 [shape=record,label="{20\:\ 0x0130}"];
Node_21 [shape=record,label="{21\:\ 0x0134|if (isLayoutOccurred() != false) goto L_0x015d\l}"];
Node_22 [shape=record,label="{22\:\ 0x0136|r6.mLayoutOccurred = true\ljava.util.Iterator r7 = r6.mOnFirstLayoutListeners.iterator()\l}"];
Node_23 [shape=record,label="{23\:\ 0x013f|LOOP_START\lLOOP:1: B:23:0x013f\-\>B:25:0x0145\l}"];
Node_24 [shape=record,label="{24\:\ 0x0143|if (r7.hasNext() == false) goto L_0x0158\l}"];
Node_25 [shape=record,label="{25\:\ 0x0145|LOOP_END\lLOOP:1: B:23:0x013f\-\>B:25:0x0145\l|((org.osmdroid.views.MapView.OnFirstLayoutListener) r7.next()).onFirstLayout(r14, r16, r17, r18, r19)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0158|r6.mOnFirstLayoutListeners.clear()\l}"];
Node_27 [shape=record,label="{27\:\ 0x015d|resetProjection()\l}"];
Node_28 [shape=record,label="{28\:\ 0x0160|RETURN\l|return\l}"];
Node_29 [shape=record,label="{29\:\ 0x0130|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x012c|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x012c|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0158|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected void org.osmdroid.views.MapView.myOnLayout((r14v0 'this' org.osmdroid.views.MapView A[IMMUTABLE_TYPE, THIS]), (r15v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_29;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_31;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_10;
Node_8 -> Node_11;
Node_8 -> Node_12;
Node_8 -> Node_13;
Node_8 -> Node_14;
Node_8 -> Node_15;
Node_8 -> Node_16;
Node_8 -> Node_17;
Node_8 -> Node_18;
Node_9 -> Node_18;
Node_10 -> Node_18;
Node_11 -> Node_18;
Node_12 -> Node_18;
Node_13 -> Node_18;
Node_14 -> Node_18;
Node_15 -> Node_18;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_30;
Node_19 -> Node_1;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_27;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_32;
Node_25 -> Node_23;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_29 -> Node_20;
Node_30 -> Node_19;
Node_31 -> Node_19;
Node_32 -> Node_26;
}

