digraph "CFG fororg.osmdroid.views.MapView.onDraw(Landroid\/graphics\/Canvas;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC \l0x0004: INVOKE  (r6 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.resetProjection():void type: DIRECT \l0x0007: INVOKE  (r2 I:org.osmdroid.views.Projection) = (r6 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL \l0x000b: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000d: INVOKE  \l  (r2 I:org.osmdroid.views.Projection)\l  (r7 I:android.graphics.Canvas)\l  (r4 I:boolean)\l  (r3 I:boolean)\l org.osmdroid.views.Projection.save(android.graphics.Canvas, boolean, boolean):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0010|SYNTHETIC\lSplitter:B:1:0x0010\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0010\l|0x0010: INVOKE  (r2 I:org.osmdroid.views.overlay.OverlayManager) = (r6 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getOverlayManager():org.osmdroid.views.overlay.OverlayManager type: VIRTUAL A[Catch:\{ Exception \-\> 0x0028 \}, TRY_ENTER]\l0x0014: INVOKE  \l  (r2 I:org.osmdroid.views.overlay.OverlayManager)\l  (r7 I:android.graphics.Canvas)\l  (r6 I:org.osmdroid.views.MapView)\l org.osmdroid.views.overlay.OverlayManager.onDraw(android.graphics.Canvas, org.osmdroid.views.MapView):void type: INTERFACE A[Catch:\{ Exception \-\> 0x0028 \}]\l0x0017: INVOKE  (r2 I:org.osmdroid.views.Projection) = (r6 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL A[Catch:\{ Exception \-\> 0x0028 \}]\l0x001b: INVOKE  \l  (r2 I:org.osmdroid.views.Projection)\l  (r7 I:android.graphics.Canvas)\l  (r3 I:boolean)\l org.osmdroid.views.Projection.restore(android.graphics.Canvas, boolean):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0028 \}]\l0x001e: IGET  (r2 I:org.osmdroid.views.CustomZoomButtonsController) = (r6 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mZoomController org.osmdroid.views.CustomZoomButtonsController A[Catch:\{ Exception \-\> 0x0028 \}]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0020|0x0020: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0030 A[Catch:\{ Exception \-\> 0x0028 \}]\l}"];
Node_4 [shape=record,label="{4\:\ 0x0022|0x0022: IGET  (r2 I:org.osmdroid.views.CustomZoomButtonsController) = (r6 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mZoomController org.osmdroid.views.CustomZoomButtonsController A[Catch:\{ Exception \-\> 0x0028 \}]\l0x0024: INVOKE  \l  (r2 I:org.osmdroid.views.CustomZoomButtonsController)\l  (r7 I:android.graphics.Canvas)\l org.osmdroid.views.CustomZoomButtonsController.draw(android.graphics.Canvas):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x0028 \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|ExcHandler: Exception null\lSplitter:B:1:0x0010\l|0x0028: MOVE_EXCEPTION  (r7 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|0x0029: CONST_STR  (r2 I:java.lang.String) =  \"OsmDroid\" \l0x002b: CONST_STR  (r3 I:java.lang.String) =  \"error dispatchDraw, probably in edit mode\" \l0x002d: INVOKE  \l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r7 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: INVOKE  (r7 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0034: INVOKE  (r7 I:boolean) = (r7 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugMapView():boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|0x0038: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x005a \l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|0x003a: INVOKE  (r2 I:long) =  java.lang.System.currentTimeMillis():long type: STATIC \l0x003e: CONST_STR  (r7 I:java.lang.String) =  \"OsmDroid\" \l0x0040: NEW_INSTANCE  (r4 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0042: INVOKE  (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0045: CONST_STR  (r5 I:java.lang.String) =  \"Rendering overall: \" \l0x0047: INVOKE  (r4 I:java.lang.StringBuilder), (r5 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004a: ARITH  (r2 I:long) = (r2 I:long) \- (r0 I:long) \l0x004b: INVOKE  (r4 I:java.lang.StringBuilder), (r2 I:long) java.lang.StringBuilder.append(long):java.lang.StringBuilder type: VIRTUAL \l0x004e: CONST_STR  (r0 I:java.lang.String) =  \"ms\" \l0x0050: INVOKE  (r4 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0053: INVOKE  (r0 I:java.lang.String) = (r4 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0057: INVOKE  (r7 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_11 [shape=record,label="{11\:\ 0x005a|0x005a: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.MapView.onDraw((r6 'this' I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, THIS]), (r7 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
}

