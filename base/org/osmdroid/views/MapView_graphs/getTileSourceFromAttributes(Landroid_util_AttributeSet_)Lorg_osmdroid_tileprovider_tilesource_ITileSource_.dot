digraph "CFG fororg.osmdroid.views.MapView.getTileSourceFromAttributes(Landroid\/util\/AttributeSet;)Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase r0 = org.osmdroid.tileprovider.tilesource.TileSourceFactory.DEFAULT_TILE_SOURCE\l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|if (r7 == null) goto L_0x003f\l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|java.lang.String r2 = r7.getAttributeValue((java.lang.String) null, \"tilesource\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if (r2 == null) goto L_0x003f\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|SYNTHETIC\lSplitter:B:4:0x000d\l}"];
Node_5 [shape=record,label="{5\:\ ?|Catch:\{ IllegalArgumentException \-\> 0x0029 \}\lSplitter:B:4:0x000d\l|org.osmdroid.tileprovider.tilesource.ITileSource r2 = org.osmdroid.tileprovider.tilesource.TileSourceFactory.getTileSource(r2)     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0029 \}\ljava.lang.StringBuilder r4 = new java.lang.StringBuilder()     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0029 \}\lr4.append(\"Using tile source specified in layout attributes: \")     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0029 \}\lr4.append(r2)     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0029 \}\landroid.util.Log.i(org.osmdroid.api.IMapView.LOGTAG, r4.toString())     \/\/ Catch:\{ IllegalArgumentException \-\> 0x0029 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|r0 = r2\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|java.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"Invalid tile source specified in layout attributes: \")\lr3.append(r0)\landroid.util.Log.w(org.osmdroid.api.IMapView.LOGTAG, r3.toString())\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lExcHandler: IllegalArgumentException (unused java.lang.IllegalArgumentException)\lSplitter:B:4:0x000d\l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|PHI: r0 \l  PHI: (r0v1 org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase) = (r0v0 org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase), (r0v0 org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase), (r0v0 org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase), (r0v2 org.osmdroid.tileprovider.tilesource.OnlineTileSourceBase) binds: [B:1:0x0003, B:3:0x000b, B:7:0x0029, B:6:0x0027] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == null) goto L_0x0071\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041}"];
Node_11 [shape=record,label="{11\:\ 0x0043|if ((r0 instanceof org.osmdroid.tileprovider.tilesource.IStyledTileSource) == false) goto L_0x0071\l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|java.lang.String r7 = r7.getAttributeValue((java.lang.String) null, \"style\")\l}"];
Node_13 [shape=record,label="{13\:\ 0x004b|if (r7 != null) goto L_0x0055\l}"];
Node_14 [shape=record,label="{14\:\ 0x004d|android.util.Log.i(org.osmdroid.api.IMapView.LOGTAG, \"Using default style: 1\")\l}"];
Node_15 [shape=record,label="{15\:\ 0x0055|java.lang.StringBuilder r2 = new java.lang.StringBuilder()\lr2.append(\"Using style specified in layout attributes: \")\lr2.append(r7)\landroid.util.Log.i(org.osmdroid.api.IMapView.LOGTAG, r2.toString())\l((org.osmdroid.tileprovider.tilesource.IStyledTileSource) r0).setStyle(r7)\l}"];
Node_16 [shape=record,label="{16\:\ 0x0071|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Using tile source: \")\lr1.append(r0.name())\landroid.util.Log.i(org.osmdroid.api.IMapView.LOGTAG, r1.toString())\l}"];
Node_17 [shape=record,label="{17\:\ 0x008b|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{private org.osmdroid.tileprovider.tilesource.ITileSource org.osmdroid.views.MapView.getTileSourceFromAttributes((r6v0 'this' org.osmdroid.views.MapView A[IMMUTABLE_TYPE, THIS]), (r7v0 android.util.AttributeSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | INCONSISTENT_CODE\lJADX WARNING: type inference failed for: r2v9, types: [org.osmdroid.tileprovider.tilesource.ITileSource, java.lang.Object]\lMulti\-variable type inference failed\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_9;
Node_7 -> Node_9;
Node_8 -> Node_7;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_16;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

