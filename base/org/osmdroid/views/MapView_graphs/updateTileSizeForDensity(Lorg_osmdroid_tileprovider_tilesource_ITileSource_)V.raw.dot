digraph "CFG fororg.osmdroid.views.MapView.updateTileSizeForDensity(Lorg\/osmdroid\/tileprovider\/tilesource\/ITileSource;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r4 I:int) = (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource) org.osmdroid.tileprovider.tilesource.ITileSource.getTileSizePixels():int type: INTERFACE \l0x0004: INVOKE  (r0 I:android.content.res.Resources) = (r3 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getResources():android.content.res.Resources type: VIRTUAL \l0x0008: INVOKE  (r0 I:android.util.DisplayMetrics) = (r0 I:android.content.res.Resources) android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics type: VIRTUAL \l0x000c: IGET  (r0 I:float) = (r0 I:android.util.DisplayMetrics) android.util.DisplayMetrics.density float \l0x000e: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1132462080(0x43800000, float:256.0) ?[int, float, short, byte, char])\l \l0x0010: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l0x0012: CAST  (r4 I:float) = (float) (r4 I:int) \l0x0013: ARITH  (r0 I:float) = (r0 I:float) \/ (r4 I:float) \l0x0014: INVOKE  (r1 I:boolean) = (r3 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.isTilesScaledToDpi():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: IGET  (r1 I:float) = (r3 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mTilesScaleFactor float \l0x001c: ARITH  (r0 I:float) = (r0 I:float) * (r1 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001f|0x001f: IGET  (r0 I:float) = (r3 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mTilesScaleFactor float \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: ARITH  (r4 I:float) = (r4 I:float) * (r0 I:float) \l0x0023: CAST  (r4 I:int) = (int) (r4 I:float) \l0x0024: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0028: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugMapView():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x002c|0x002c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0044 \l}"];
Node_6 [shape=record,label="{6\:\ 0x002e|0x002e: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" \l0x0030: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0032: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0035: CONST_STR  (r2 I:java.lang.String) =  \"Scaling tiles to \" \l0x0037: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x003d: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0041: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0044|0x0044: INVOKE  (r4 I:int) org.osmdroid.util.TileSystem.setTileSize(int):void type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0047|0x0047: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.views.MapView.updateTileSizeForDensity((r3 'this' I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, THIS]), (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

