digraph "CFG fororg.osmdroid.views.MapController.ReplayController.replayCalls()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.LinkedList\<org.osmdroid.views.MapController$ReplayController$ReplayClass\>) = (r9 I:org.osmdroid.views.MapController$ReplayController) org.osmdroid.views.MapController.ReplayController.mReplayList java.util.LinkedList \l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.LinkedList) java.util.LinkedList.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0082 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000c|0x000c: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0010: CHECK_CAST  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass) = (org.osmdroid.views.MapController$ReplayController$ReplayClass) (r1 I:?[OBJECT, ARRAY]) \l0x0012: SGET  (r2 I:int[]) =  org.osmdroid.views.MapController.1.$SwitchMap$org$osmdroid$views$MapController$ReplayType int[] \l0x0014: INVOKE  (r3 I:org.osmdroid.views.MapController$ReplayType) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$100(org.osmdroid.views.MapController$ReplayController$ReplayClass):org.osmdroid.views.MapController$ReplayType type: STATIC \l0x0018: INVOKE  (r3 I:int) = (r3 I:org.osmdroid.views.MapController$ReplayType) org.osmdroid.views.MapController.ReplayType.ordinal():int type: VIRTUAL \l0x001c: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3, 4] t:[0x0062, 0x004a, 0x003a, 0x0022] \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: INVOKE  (r2 I:android.graphics.Point) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$700(org.osmdroid.views.MapController$ReplayController$ReplayClass):android.graphics.Point type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IGET  (r2 I:org.osmdroid.views.MapController) = (r9 I:org.osmdroid.views.MapController$ReplayController) org.osmdroid.views.MapController.ReplayController.this$0 org.osmdroid.views.MapController \l0x002a: INVOKE  (r3 I:android.graphics.Point) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$700(org.osmdroid.views.MapController$ReplayController$ReplayClass):android.graphics.Point type: STATIC \l0x002e: IGET  (r3 I:int) = (r3 I:android.graphics.Point) android.graphics.Point.x int \l0x0030: INVOKE  (r1 I:android.graphics.Point) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$700(org.osmdroid.views.MapController$ReplayController$ReplayClass):android.graphics.Point type: STATIC \l0x0034: IGET  (r1 I:int) = (r1 I:android.graphics.Point) android.graphics.Point.y int \l0x0036: INVOKE  \l  (r2 I:org.osmdroid.views.MapController)\l  (r3 I:int)\l  (r1 I:int)\l org.osmdroid.views.MapController.zoomToSpan(int, int):void type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x003a|0x003a: INVOKE  (r2 I:org.osmdroid.api.IGeoPoint) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$200(org.osmdroid.views.MapController$ReplayController$ReplayClass):org.osmdroid.api.IGeoPoint type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x003e|0x003e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: IGET  (r2 I:org.osmdroid.views.MapController) = (r9 I:org.osmdroid.views.MapController$ReplayController) org.osmdroid.views.MapController.ReplayController.this$0 org.osmdroid.views.MapController \l0x0042: INVOKE  (r1 I:org.osmdroid.api.IGeoPoint) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$200(org.osmdroid.views.MapController$ReplayController$ReplayClass):org.osmdroid.api.IGeoPoint type: STATIC \l0x0046: INVOKE  \l  (r2 I:org.osmdroid.views.MapController)\l  (r1 I:org.osmdroid.api.IGeoPoint)\l org.osmdroid.views.MapController.setCenter(org.osmdroid.api.IGeoPoint):void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x004a|0x004a: INVOKE  (r2 I:android.graphics.Point) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$700(org.osmdroid.views.MapController$ReplayController$ReplayClass):android.graphics.Point type: STATIC \l}"];
Node_13 [shape=record,label="{13\:\ 0x004e|0x004e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0050|0x0050: IGET  (r2 I:org.osmdroid.views.MapController) = (r9 I:org.osmdroid.views.MapController$ReplayController) org.osmdroid.views.MapController.ReplayController.this$0 org.osmdroid.views.MapController \l0x0052: INVOKE  (r3 I:android.graphics.Point) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$700(org.osmdroid.views.MapController$ReplayController$ReplayClass):android.graphics.Point type: STATIC \l0x0056: IGET  (r3 I:int) = (r3 I:android.graphics.Point) android.graphics.Point.x int \l0x0058: INVOKE  (r1 I:android.graphics.Point) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$700(org.osmdroid.views.MapController$ReplayController$ReplayClass):android.graphics.Point type: STATIC \l0x005c: IGET  (r1 I:int) = (r1 I:android.graphics.Point) android.graphics.Point.y int \l0x005e: INVOKE  \l  (r2 I:org.osmdroid.views.MapController)\l  (r3 I:int)\l  (r1 I:int)\l org.osmdroid.views.MapController.animateTo(int, int):void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0062|0x0062: INVOKE  (r2 I:org.osmdroid.api.IGeoPoint) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$200(org.osmdroid.views.MapController$ReplayController$ReplayClass):org.osmdroid.api.IGeoPoint type: STATIC \l}"];
Node_16 [shape=record,label="{16\:\ 0x0066|0x0066: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0068|0x0068: IGET  (r3 I:org.osmdroid.views.MapController) = (r9 I:org.osmdroid.views.MapController$ReplayController) org.osmdroid.views.MapController.ReplayController.this$0 org.osmdroid.views.MapController \l0x006a: INVOKE  (r4 I:org.osmdroid.api.IGeoPoint) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$200(org.osmdroid.views.MapController$ReplayController$ReplayClass):org.osmdroid.api.IGeoPoint type: STATIC \l0x006e: INVOKE  (r5 I:java.lang.Double) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$300(org.osmdroid.views.MapController$ReplayController$ReplayClass):java.lang.Double type: STATIC \l0x0072: INVOKE  (r6 I:java.lang.Long) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$400(org.osmdroid.views.MapController$ReplayController$ReplayClass):java.lang.Long type: STATIC \l0x0076: INVOKE  (r7 I:java.lang.Float) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$500(org.osmdroid.views.MapController$ReplayController$ReplayClass):java.lang.Float type: STATIC \l0x007a: INVOKE  (r8 I:java.lang.Boolean) = \l  (r1 I:org.osmdroid.views.MapController$ReplayController$ReplayClass)\l org.osmdroid.views.MapController.ReplayController.ReplayClass.access$600(org.osmdroid.views.MapController$ReplayController$ReplayClass):java.lang.Boolean type: STATIC \l0x007e: INVOKE  \l  (r3 I:org.osmdroid.views.MapController)\l  (r4 I:org.osmdroid.api.IGeoPoint)\l  (r5 I:java.lang.Double)\l  (r6 I:java.lang.Long)\l  (r7 I:java.lang.Float)\l  (r8 I:java.lang.Boolean)\l org.osmdroid.views.MapController.animateTo(org.osmdroid.api.IGeoPoint, java.lang.Double, java.lang.Long, java.lang.Float, java.lang.Boolean):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0082|0x0082: IGET  (r0 I:java.util.LinkedList\<org.osmdroid.views.MapController$ReplayController$ReplayClass\>) = (r9 I:org.osmdroid.views.MapController$ReplayController) org.osmdroid.views.MapController.ReplayController.mReplayList java.util.LinkedList \l0x0084: INVOKE  (r0 I:java.util.LinkedList) java.util.LinkedList.clear():void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0087|0x0087: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.MapController.ReplayController.replayCalls((r9 'this' I:org.osmdroid.views.MapController$ReplayController A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_9;
Node_4 -> Node_12;
Node_4 -> Node_15;
Node_4 -> Node_1;
Node_6 -> Node_7;
Node_7 -> Node_1;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_1;
Node_12 -> Node_13;
Node_13 -> Node_1;
Node_13 -> Node_14[style=dashed];
Node_14 -> Node_1;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_16 -> Node_17[style=dashed];
Node_17 -> Node_1;
Node_18 -> Node_19;
}

