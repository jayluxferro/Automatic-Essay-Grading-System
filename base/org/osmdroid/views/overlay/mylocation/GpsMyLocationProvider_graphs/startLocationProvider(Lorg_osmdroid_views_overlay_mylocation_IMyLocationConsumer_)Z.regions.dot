digraph "CFG fororg.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.startLocationProvider(Lorg\/osmdroid\/views\/overlay\/mylocation\/IMyLocationConsumer;)Z" {
subgraph cluster_Region_1545331311 {
label = "R(3:0|(2:3|(1:(2:6|7))(0))|10)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r9.mMyLocationConsumer = r10\ljava.util.Iterator r10 = r9.mLocationManager.getProviders(true).iterator()\lboolean r1 = false\l}"];
subgraph cluster_LoopRegion_767457127 {
label = "LOOP:0: (2:3|(1:(2:6|7))(0))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0012|if (r10.hasNext() != false) goto L_0x0014\l}"];
subgraph cluster_Region_239024393 {
label = "R(2:3|(1:(2:6|7))(0))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0014|java.lang.String r2 = r10.next()\l}"];
subgraph cluster_IfRegion_158324978 {
label = "IF [B:4:0x0020] THEN: R(1:(2:6|7)) ELSE: R(0)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0020|if (r9.locationSources.contains(r2) == true) goto L_0x0022\l}"];
subgraph cluster_Region_309990451 {
label = "R(1:(2:6|7))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_1277254740 {
label = "Try: R(2:6|7) catches: R(2:8|9)";
node [shape=record,color=blue];
subgraph cluster_Region_298849168 {
label = "R(2:6|7)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ ?|Catch:\{ Throwable \-\> 0x002f \}\lSplitter:B:5:0x0022\l|r9.mLocationManager.requestLocationUpdates(r2, r9.mLocationUpdateMinTime, r9.mLocationUpdateMinDistance, r9)     \/\/ Catch:\{ Throwable \-\> 0x002f \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|r1 = true\l}"];
}
subgraph cluster_Region_992072616 {
label = "R(2:8|9) | ExcHandler: Throwable (r3v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002f|ExcHandler: Throwable (r3v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:5:0x0022\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"Unable to attach listener for location provider \" + r2 + \" check permissions?\", r3)\l}"];
}
}
}
subgraph cluster_Region_1283335286 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
Node_10 [shape=record,label="{10\:\ 0x004c|RETURN\l|return r1\l}"];
}
subgraph cluster_Region_992072616 {
label = "R(2:8|9) | ExcHandler: Throwable (r3v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002f|ExcHandler: Throwable (r3v2 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:5:0x0022\l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"Unable to attach listener for location provider \" + r2 + \" check permissions?\", r3)\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x000e|LOOP_START\lPHI: r1 \l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:0:0x0000, B:11:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:11:0x000e\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0022|SYNTHETIC\lSplitter:B:5:0x0022\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x000e|LOOP_END\lSYNTHETIC\lPHI: r1 \l  PHI: (r1v2 boolean) = (r1v1 boolean), (r1v1 boolean), (r1v3 boolean) binds: [B:13:0x000e, B:15:0x000e, B:14:0x000e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000e\-\>B:11:0x000e\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x004c|SYNTHETIC\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x000e|SYNTHETIC\l}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x000e|SYNTHETIC\l}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x000e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.startLocationProvider((r9v0 'this' org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider A[IMMUTABLE_TYPE, THIS]), (r10v0 org.osmdroid.views.overlay.mylocation.IMyLocationConsumer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.SuppressLint, \{value=[MissingPermission]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_12[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_13[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_14;
Node_8 -> Node_9;
Node_9 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_15;
Node_1 -> Node_2;
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_11 -> Node_1;
Node_12 -> Node_10;
Node_13 -> Node_11;
Node_14 -> Node_11;
Node_15 -> Node_11;
}

