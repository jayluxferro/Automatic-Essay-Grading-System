digraph "CFG fororg.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.startLocationProvider(Lorg\/osmdroid\/views\/overlay\/mylocation\/IMyLocationConsumer;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  \l  (r10 I:org.osmdroid.views.overlay.mylocation.IMyLocationConsumer)\l  (r9 I:org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider)\l org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.mMyLocationConsumer org.osmdroid.views.overlay.mylocation.IMyLocationConsumer \l0x0002: IGET  (r10 I:android.location.LocationManager) = \l  (r9 I:org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider)\l org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.mLocationManager android.location.LocationManager \l0x0004: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0005: INVOKE  (r10 I:java.util.List) = (r10 I:android.location.LocationManager), (r0 I:boolean) android.location.LocationManager.getProviders(boolean):java.util.List type: VIRTUAL \l0x0009: INVOKE  (r10 I:java.util.Iterator) = (r10 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x000d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: INVOKE  (r2 I:boolean) = (r10 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004c \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: INVOKE  (r2 I:java.lang.Object) = (r10 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0018: CHECK_CAST  (r2 I:java.lang.String) = (java.lang.String) (r2 I:?[OBJECT, ARRAY]) \l0x001a: IGET  (r3 I:java.util.Set\<java.lang.String\>) = \l  (r9 I:org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider)\l org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.locationSources java.util.Set \l0x001c: INVOKE  (r3 I:boolean) = (r3 I:java.util.Set), (r2 I:java.lang.Object) java.util.Set.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x000e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|SYNTHETIC\lSplitter:B:5:0x0022\l}"];
Node_6 [shape=record,label="{6\:\ ?|Splitter:B:5:0x0022\l|0x0022: IGET  (r3 I:android.location.LocationManager) = \l  (r9 I:org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider)\l org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.mLocationManager android.location.LocationManager A[Catch:\{ Throwable \-\> 0x002f \}, TRY_ENTER]\l0x0024: IGET  (r5 I:long) = \l  (r9 I:org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider)\l org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.mLocationUpdateMinTime long A[Catch:\{ Throwable \-\> 0x002f \}]\l0x0026: IGET  (r7 I:float) = \l  (r9 I:org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider)\l org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.mLocationUpdateMinDistance float A[Catch:\{ Throwable \-\> 0x002f \}]\l0x0028: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x002f \}]\l0x0029: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) A[Catch:\{ Throwable \-\> 0x002f \}]\l0x002a: INVOKE  \l  (r3 I:android.location.LocationManager)\l  (r4 I:java.lang.String)\l  (r5 I:long)\l  (r7 I:float)\l  (r8 I:android.location.LocationListener)\l android.location.LocationManager.requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener):void type: VIRTUAL A[Catch:\{ Throwable \-\> 0x002f \}, TRY_LEAVE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|ExcHandler: Throwable null\lSplitter:B:5:0x0022\l|0x002f: MOVE_EXCEPTION  (r3 I:?[OBJECT]) =  \l}"];
Node_9 [shape=record,label="{9\:\ 0x0030|0x0030: CONST_STR  (r4 I:java.lang.String) =  \"OsmDroid\" \l0x0032: NEW_INSTANCE  (r5 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0034: INVOKE  (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0037: CONST_STR  (r6 I:java.lang.String) =  \"Unable to attach listener for location provider \" \l0x0039: INVOKE  (r5 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003c: INVOKE  (r5 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: CONST_STR  (r2 I:java.lang.String) =  \" check permissions?\" \l0x0041: INVOKE  (r5 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0044: INVOKE  (r2 I:java.lang.String) = (r5 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0048: INVOKE  \l  (r4 I:java.lang.String)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|0x004c: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider.startLocationProvider((r9 'this' I:org.osmdroid.views.overlay.mylocation.GpsMyLocationProvider A[IMMUTABLE_TYPE, THIS]), (r10 I:org.osmdroid.views.overlay.mylocation.IMyLocationConsumer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[BUILD, android.annotation.SuppressLint, \{value=[MissingPermission]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_9 -> Node_1;
}

