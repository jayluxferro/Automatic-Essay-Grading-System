digraph "CFG fororg.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.enableMyLocation(Lorg\/osmdroid\/views\/overlay\/mylocation\/IMyLocationProvider;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r1 I:org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay)\l  (r2 I:org.osmdroid.views.overlay.mylocation.IMyLocationProvider)\l org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.setMyLocationProvider(org.osmdroid.views.overlay.mylocation.IMyLocationProvider):void type: VIRTUAL \l0x0003: IGET  (r2 I:org.osmdroid.views.overlay.mylocation.IMyLocationProvider) = \l  (r1 I:org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay)\l org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.mMyLocationProvider org.osmdroid.views.overlay.mylocation.IMyLocationProvider \l0x0005: INVOKE  (r2 I:boolean) = \l  (r2 I:org.osmdroid.views.overlay.mylocation.IMyLocationProvider)\l  (r1 I:org.osmdroid.views.overlay.mylocation.IMyLocationConsumer)\l org.osmdroid.views.overlay.mylocation.IMyLocationProvider.startLocationProvider(org.osmdroid.views.overlay.mylocation.IMyLocationConsumer):boolean type: INTERFACE \l0x0009: IPUT  \l  (r2 I:boolean)\l  (r1 I:org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay)\l org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.mIsLocationEnabled boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IGET  (r0 I:org.osmdroid.views.overlay.mylocation.IMyLocationProvider) = \l  (r1 I:org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay)\l org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.mMyLocationProvider org.osmdroid.views.overlay.mylocation.IMyLocationProvider \l0x000f: INVOKE  (r0 I:android.location.Location) = \l  (r0 I:org.osmdroid.views.overlay.mylocation.IMyLocationProvider)\l org.osmdroid.views.overlay.mylocation.IMyLocationProvider.getLastKnownLocation():android.location.Location type: INTERFACE \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0018 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: INVOKE  \l  (r1 I:org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay)\l  (r0 I:android.location.Location)\l org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.setLocation(android.location.Location):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IGET  (r0 I:org.osmdroid.views.MapView) = \l  (r1 I:org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay)\l org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.mMapView org.osmdroid.views.MapView \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0021 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001c|0x001c: IGET  (r0 I:org.osmdroid.views.MapView) = \l  (r1 I:org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay)\l org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.mMapView org.osmdroid.views.MapView \l0x001e: INVOKE  (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.postInvalidate():void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0021|0x0021: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.enableMyLocation((r1 'this' I:org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay A[IMMUTABLE_TYPE, THIS]), (r2 I:org.osmdroid.views.overlay.mylocation.IMyLocationProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
}

