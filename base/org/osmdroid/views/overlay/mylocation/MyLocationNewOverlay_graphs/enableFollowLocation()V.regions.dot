digraph "CFG fororg.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.enableFollowLocation()V" {
subgraph cluster_Region_1719662157 {
label = "R(3:0|(1:4)|(1:(1:7))) | DECL_VAR: android.location.Location null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1.mIsFollowing = true\l}"];
subgraph cluster_IfRegion_270660836 {
label = "IF [B:1:0x0007, B:3:0x000f] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0007|ADDED_TO_REGION\l|if (isMyLocationEnabled() == true) goto L_0x0009\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|ADDED_TO_REGION\l|if ((r0 = r1.mMyLocationProvider.getLastKnownLocation()) != null) goto L_0x0011\l}"];
subgraph cluster_Region_1075647173 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0011|setLocation(r0)\l}"];
}
}
subgraph cluster_Region_917485653 {
label = "R(1:(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_796650835 {
label = "IF [B:6:0x0016] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|if (r1.mMapView != null) goto L_0x0018\l}"];
subgraph cluster_Region_820165260 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0018|r1.mMapView.postInvalidate()\l}"];
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0014}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay.enableFollowLocation((r1v0 'this' org.osmdroid.views.overlay.mylocation.MyLocationNewOverlay A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_6 -> Node_9[style=dashed];
Node_7 -> Node_8;
Node_2 -> Node_3;
Node_5 -> Node_6;
}

