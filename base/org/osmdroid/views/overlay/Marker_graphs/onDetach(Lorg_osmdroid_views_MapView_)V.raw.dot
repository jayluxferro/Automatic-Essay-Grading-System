digraph "CFG fororg.osmdroid.views.overlay.Marker.onDetach(Lorg\/osmdroid\/views\/MapView;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.osmdroid.tileprovider.BitmapPool) =  org.osmdroid.tileprovider.BitmapPool.getInstance():org.osmdroid.tileprovider.BitmapPool type: STATIC \l0x0004: IGET  (r1 I:android.graphics.drawable.Drawable) = (r3 I:org.osmdroid.views.overlay.Marker) org.osmdroid.views.overlay.Marker.mIcon android.graphics.drawable.Drawable \l0x0006: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.BitmapPool)\l  (r1 I:android.graphics.drawable.Drawable)\l org.osmdroid.tileprovider.BitmapPool.asyncRecycle(android.graphics.drawable.Drawable):void type: VIRTUAL \l0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: IPUT  \l  (r0 I:android.graphics.drawable.Drawable)\l  (r3 I:org.osmdroid.views.overlay.Marker)\l org.osmdroid.views.overlay.Marker.mIcon android.graphics.drawable.Drawable \l0x000c: INVOKE  (r1 I:org.osmdroid.tileprovider.BitmapPool) =  org.osmdroid.tileprovider.BitmapPool.getInstance():org.osmdroid.tileprovider.BitmapPool type: STATIC \l0x0010: IGET  (r2 I:android.graphics.drawable.Drawable) = (r3 I:org.osmdroid.views.overlay.Marker) org.osmdroid.views.overlay.Marker.mImage android.graphics.drawable.Drawable \l0x0012: INVOKE  \l  (r1 I:org.osmdroid.tileprovider.BitmapPool)\l  (r2 I:android.graphics.drawable.Drawable)\l org.osmdroid.tileprovider.BitmapPool.asyncRecycle(android.graphics.drawable.Drawable):void type: VIRTUAL \l0x0015: IPUT  \l  (r0 I:org.osmdroid.views.overlay.Marker$OnMarkerClickListener)\l  (r3 I:org.osmdroid.views.overlay.Marker)\l org.osmdroid.views.overlay.Marker.mOnMarkerClickListener org.osmdroid.views.overlay.Marker$OnMarkerClickListener \l0x0017: IPUT  \l  (r0 I:org.osmdroid.views.overlay.Marker$OnMarkerDragListener)\l  (r3 I:org.osmdroid.views.overlay.Marker)\l org.osmdroid.views.overlay.Marker.mOnMarkerDragListener org.osmdroid.views.overlay.Marker$OnMarkerDragListener \l0x0019: IPUT  \l  (r0 I:android.content.res.Resources)\l  (r3 I:org.osmdroid.views.overlay.Marker)\l org.osmdroid.views.overlay.Marker.mResources android.content.res.Resources \l0x001b: INVOKE  \l  (r3 I:org.osmdroid.views.overlay.Marker)\l  (r0 I:java.lang.Object)\l org.osmdroid.views.overlay.Marker.setRelatedObject(java.lang.Object):void type: VIRTUAL \l0x001e: INVOKE  (r1 I:boolean) = (r3 I:org.osmdroid.views.overlay.Marker) org.osmdroid.views.overlay.Marker.isInfoWindowShown():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0027 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0024|0x0024: INVOKE  (r3 I:org.osmdroid.views.overlay.Marker) org.osmdroid.views.overlay.Marker.closeInfoWindow():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|0x0027: IPUT  \l  (r0 I:org.osmdroid.views.MapViewRepository)\l  (r3 I:org.osmdroid.views.overlay.Marker)\l org.osmdroid.views.overlay.Marker.mMapViewRepository org.osmdroid.views.MapViewRepository \l0x0029: INVOKE  \l  (r3 I:org.osmdroid.views.overlay.Marker)\l  (r0 I:org.osmdroid.views.overlay.infowindow.MarkerInfoWindow)\l org.osmdroid.views.overlay.Marker.setInfoWindow(org.osmdroid.views.overlay.infowindow.MarkerInfoWindow):void type: VIRTUAL \l0x002c: INVOKE  (r3 I:org.osmdroid.views.overlay.Marker) org.osmdroid.views.overlay.Marker.onDestroy():void type: VIRTUAL \l0x002f: INVOKE  \l  (r3 I:org.osmdroid.views.overlay.OverlayWithIW)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.overlay.OverlayWithIW.onDetach(org.osmdroid.views.MapView):void type: SUPER \l}"];
Node_4 [shape=record,label="{4\:\ 0x0032|0x0032: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.Marker.onDetach((r3 'this' I:org.osmdroid.views.overlay.Marker A[IMMUTABLE_TYPE, THIS]), (r4 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

