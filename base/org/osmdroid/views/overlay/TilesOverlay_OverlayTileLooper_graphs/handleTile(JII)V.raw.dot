digraph "CFG fororg.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.handleTile(JII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r21 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r22 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: IGET  (r3 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x0008: IGET  (r3 I:org.osmdroid.tileprovider.MapTileProviderBase) = (r3 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.mTileProvider org.osmdroid.tileprovider.MapTileProviderBase \l0x000a: MOVE  (r4 I:?[long, double]) = (r19 I:?[long, double]) \l0x000c: INVOKE  (r3 I:android.graphics.drawable.Drawable) = \l  (r3 I:org.osmdroid.tileprovider.MapTileProviderBase)\l  (r4 I:long)\l org.osmdroid.tileprovider.MapTileProviderBase.getMapTile(long):android.graphics.drawable.Drawable type: VIRTUAL \l0x0010: IGET  (r6 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x0012: INVOKE  (r6 I:org.osmdroid.tileprovider.TileStates) = (r6 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$000(org.osmdroid.views.overlay.TilesOverlay):org.osmdroid.tileprovider.TileStates type: STATIC \l0x0016: INVOKE  \l  (r6 I:org.osmdroid.tileprovider.TileStates)\l  (r3 I:android.graphics.drawable.Drawable)\l org.osmdroid.tileprovider.TileStates.handleTile(android.graphics.drawable.Drawable):void type: VIRTUAL \l0x0019: IGET  (r6 I:android.graphics.Canvas) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.mCanvas android.graphics.Canvas \l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|0x001b: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001e \l}"];
Node_2 [shape=record,label="{2\:\ 0x001d|0x001d: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|0x001e: INSTANCE_OF  (r6 I:boolean) = (r3 I:?[OBJECT, ARRAY]) org.osmdroid.tileprovider.ReusableBitmapDrawable \l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|0x0020: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0026 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0023: CHECK_CAST  (r7 I:org.osmdroid.tileprovider.ReusableBitmapDrawable) = (org.osmdroid.tileprovider.ReusableBitmapDrawable) (r7 I:?[OBJECT, ARRAY]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|0x0027: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x002f \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: IGET  (r3 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x002b: INVOKE  (r3 I:android.graphics.drawable.Drawable) = (r3 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$100(org.osmdroid.views.overlay.TilesOverlay):android.graphics.drawable.Drawable type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x006e \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IGET  (r8 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x0033: IGET  (r8 I:org.osmdroid.views.Projection) = (r8 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.mProjection org.osmdroid.views.Projection \l0x0035: IGET  (r9 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x0037: INVOKE  (r9 I:android.graphics.Rect) = (r9 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x003b: INVOKE  \l  (r8 I:org.osmdroid.views.Projection)\l  (r0 I:int)\l  (r2 I:int)\l  (r9 I:android.graphics.Rect)\l org.osmdroid.views.Projection.getPixelFromTile(int, int, android.graphics.Rect):android.graphics.Rect type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0043 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: INVOKE  (r7 I:org.osmdroid.tileprovider.ReusableBitmapDrawable) org.osmdroid.tileprovider.ReusableBitmapDrawable.beginUsingDrawable():void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|0x0043: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0055 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|SYNTHETIC\lSplitter:B:14:0x0045\l}"];
Node_15 [shape=record,label="{15\:\ ?|Splitter:B:14:0x0045\l|0x0045: INVOKE  (r8 I:boolean) = (r7 I:org.osmdroid.tileprovider.ReusableBitmapDrawable) org.osmdroid.tileprovider.ReusableBitmapDrawable.isBitmapValid():boolean type: VIRTUAL A[Catch:\{ all \-\> 0x0053 \}, TRY_ENTER]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0055 A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|0x004b: IGET  (r3 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay A[Catch:\{ all \-\> 0x0053 \}]\l0x004d: INVOKE  (r3 I:android.graphics.drawable.Drawable) = (r3 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$100(org.osmdroid.views.overlay.TilesOverlay):android.graphics.drawable.Drawable type: STATIC A[Catch:\{ all \-\> 0x0053 \}]\l0x0051: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ all \-\> 0x0053 \}]\l0x0052: GOTO  \-\> 0x0055 A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|ExcHandler: all null\lSplitter:B:14:0x0045\l|0x0053: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|0x0054: GOTO  \-\> 0x0068 A[Catch:\{ all \-\> 0x0053 \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x0055|0x0055: IGET  (r8 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay A[Catch:\{ all \-\> 0x0053 \}]\l0x0057: IGET  (r9 I:android.graphics.Canvas) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.mCanvas android.graphics.Canvas A[Catch:\{ all \-\> 0x0053 \}]\l0x0059: IGET  (r10 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay A[Catch:\{ all \-\> 0x0053 \}]\l0x005b: INVOKE  (r10 I:android.graphics.Rect) = (r10 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC A[Catch:\{ all \-\> 0x0053 \}]\l0x005f: INVOKE  \l  (r8 I:org.osmdroid.views.overlay.TilesOverlay)\l  (r9 I:android.graphics.Canvas)\l  (r3 I:android.graphics.drawable.Drawable)\l  (r10 I:android.graphics.Rect)\l org.osmdroid.views.overlay.TilesOverlay.onTileReadyToDraw(android.graphics.Canvas, android.graphics.drawable.Drawable, android.graphics.Rect):void type: VIRTUAL A[Catch:\{ all \-\> 0x0053 \}, TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0062|0x0062: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x006e \l}"];
Node_22 [shape=record,label="{22\:\ 0x0064|0x0064: INVOKE  (r7 I:org.osmdroid.tileprovider.ReusableBitmapDrawable) org.osmdroid.tileprovider.ReusableBitmapDrawable.finishUsingDrawable():void type: VIRTUAL \l}"];
Node_23 [shape=record,label="{23\:\ 0x0068|0x0068: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x006d \l}"];
Node_24 [shape=record,label="{24\:\ 0x006a|0x006a: INVOKE  (r7 I:org.osmdroid.tileprovider.ReusableBitmapDrawable) org.osmdroid.tileprovider.ReusableBitmapDrawable.finishUsingDrawable():void type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x006d|0x006d: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_26 [shape=record,label="{26\:\ 0x006e|0x006e: INVOKE  (r3 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0072: INVOKE  (r3 I:boolean) = (r3 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.isDebugTileProviders():boolean type: INTERFACE \l}"];
Node_27 [shape=record,label="{27\:\ 0x0076|0x0076: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x010d \l}"];
Node_28 [shape=record,label="{28\:\ 0x0078|0x0078: IGET  (r3 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x007a: IGET  (r3 I:org.osmdroid.views.Projection) = (r3 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.mProjection org.osmdroid.views.Projection \l0x007c: IGET  (r6 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x007e: INVOKE  (r6 I:android.graphics.Rect) = (r6 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x0082: INVOKE  \l  (r3 I:org.osmdroid.views.Projection)\l  (r0 I:int)\l  (r2 I:int)\l  (r6 I:android.graphics.Rect)\l org.osmdroid.views.Projection.getPixelFromTile(int, int, android.graphics.Rect):android.graphics.Rect type: VIRTUAL \l0x0085: IGET  (r0 I:android.graphics.Canvas) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.mCanvas android.graphics.Canvas \l0x0087: INVOKE  (r2 I:java.lang.String) = (r19 I:long) org.osmdroid.util.MapTileIndex.toString(long):java.lang.String type: STATIC \l0x008b: IGET  (r3 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x008d: INVOKE  (r3 I:android.graphics.Rect) = (r3 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x0091: IGET  (r3 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0093: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l0x0095: CAST  (r3 I:float) = (float) (r3 I:int) \l0x0096: IGET  (r4 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x0098: INVOKE  (r4 I:android.graphics.Rect) = (r4 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x009c: IGET  (r4 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.top int \l0x009e: CAST  (r4 I:float) = (float) (r4 I:int) \l0x009f: IGET  (r5 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00a1: IGET  (r5 I:android.graphics.Paint) = (r5 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.mDebugPaint android.graphics.Paint \l0x00a3: INVOKE  (r5 I:float) = (r5 I:android.graphics.Paint) android.graphics.Paint.getTextSize():float type: VIRTUAL \l0x00a7: ARITH  (r4 I:float) = (r4 I:float) + (r5 I:float) \l0x00a8: IGET  (r5 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00aa: IGET  (r5 I:android.graphics.Paint) = (r5 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.mDebugPaint android.graphics.Paint \l0x00ac: INVOKE  \l  (r0 I:android.graphics.Canvas)\l  (r2 I:java.lang.String)\l  (r3 I:float)\l  (r4 I:float)\l  (r5 I:android.graphics.Paint)\l android.graphics.Canvas.drawText(java.lang.String, float, float, android.graphics.Paint):void type: VIRTUAL \l0x00af: IGET  (r6 I:android.graphics.Canvas) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.mCanvas android.graphics.Canvas \l0x00b1: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00b3: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x00b7: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x00b9: CAST  (r7 I:float) = (float) (r0 I:int) \l0x00ba: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00bc: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x00c0: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x00c2: CAST  (r8 I:float) = (float) (r0 I:int) \l0x00c3: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00c5: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x00c9: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.right int \l0x00cb: CAST  (r9 I:float) = (float) (r0 I:int) \l0x00cc: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00ce: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x00d2: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x00d4: CAST  (r10 I:float) = (float) (r0 I:int) \l0x00d5: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00d7: IGET  (r11 I:android.graphics.Paint) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.mDebugPaint android.graphics.Paint \l0x00d9: INVOKE  \l  (r6 I:android.graphics.Canvas)\l  (r7 I:float)\l  (r8 I:float)\l  (r9 I:float)\l  (r10 I:float)\l  (r11 I:android.graphics.Paint)\l android.graphics.Canvas.drawLine(float, float, float, float, android.graphics.Paint):void type: VIRTUAL \l0x00dc: IGET  (r12 I:android.graphics.Canvas) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.mCanvas android.graphics.Canvas \l0x00de: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00e0: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x00e4: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x00e6: CAST  (r13 I:float) = (float) (r0 I:int) \l0x00e7: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00e9: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x00ed: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x00ef: CAST  (r14 I:float) = (float) (r0 I:int) \l0x00f0: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00f2: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x00f6: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x00f8: CAST  (r15 I:float) = (float) (r0 I:int) \l0x00f9: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x00fb: INVOKE  (r0 I:android.graphics.Rect) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.access$200(org.osmdroid.views.overlay.TilesOverlay):android.graphics.Rect type: STATIC \l0x00ff: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0101: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0102: IGET  (r2 I:org.osmdroid.views.overlay.TilesOverlay) = \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper)\l org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.this$0 org.osmdroid.views.overlay.TilesOverlay \l0x0104: IGET  (r2 I:android.graphics.Paint) = (r2 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.mDebugPaint android.graphics.Paint \l0x0106: MOVE  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0108: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x010a: INVOKE  \l  (r12 I:android.graphics.Canvas)\l  (r13 I:float)\l  (r14 I:float)\l  (r15 I:float)\l  (r16 I:float)\l  (r17 I:android.graphics.Paint)\l android.graphics.Canvas.drawLine(float, float, float, float, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x010d|0x010d: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.handleTile((r18 'this' I:org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper A[IMMUTABLE_TYPE, THIS]), (r19 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_26;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_26;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
}

