digraph "CFG fororg.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.handleTile(JII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = r18\lr0 = r21\lr2 = r22\landroid.graphics.drawable.Drawable r3 = r1.this$0.mTileProvider.getMapTile(r19)\lorg.osmdroid.views.overlay.TilesOverlay.access$000(r1.this$0).handleTile(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|if (r1.mCanvas != null) goto L_0x001e\l}"];
Node_2 [shape=record,label="{2\:\ 0x001d|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|boolean r6 = r3 instanceof org.osmdroid.tileprovider.ReusableBitmapDrawable\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|if (r6 == false) goto L_0x0026\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|org.osmdroid.tileprovider.ReusableBitmapDrawable r7 = (org.osmdroid.tileprovider.ReusableBitmapDrawable) r3\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|r7 = null\l}"];
Node_7 [shape=record,label="{7\:\ 0x0027|PHI: r7 \l  PHI: (r7v0 org.osmdroid.tileprovider.ReusableBitmapDrawable) = (r7v2 org.osmdroid.tileprovider.ReusableBitmapDrawable), (r7v4 org.osmdroid.tileprovider.ReusableBitmapDrawable) binds: [B:6:0x0026, B:5:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 != null) goto L_0x002f\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|android.graphics.drawable.Drawable r3 = org.osmdroid.views.overlay.TilesOverlay.access$100(r1.this$0)\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|PHI: r3 \l  PHI: (r3v3 android.graphics.drawable.Drawable) = (r3v2 android.graphics.drawable.Drawable), (r3v17 android.graphics.drawable.Drawable) binds: [B:7:0x0027, B:8:0x0029] A[DONT_GENERATE, DONT_INLINE]\l|if (r3 == null) goto L_0x006e\l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|r1.this$0.mProjection.getPixelFromTile(r0, r2, org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0))\l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|if (r6 == false) goto L_0x0043\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|r7.beginUsingDrawable()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0043|if (r6 == false) goto L_0x0055\l}"];
Node_14 [shape=record,label="{14\:\ 0x0045|SYNTHETIC\lSplitter:B:14:0x0045\l}"];
Node_15 [shape=record,label="{15\:\ ?|Catch:\{ all \-\> 0x0053 \}\lSplitter:B:14:0x0045\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|Catch:\{ all \-\> 0x0053 \}\l|if (r7.isBitmapValid() != false) goto L_0x0055     \/\/ Catch:\{ all \-\> 0x0053 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|Catch:\{ all \-\> 0x0053 \}\l|android.graphics.drawable.Drawable r3 = org.osmdroid.views.overlay.TilesOverlay.access$100(r1.this$0)     \/\/ Catch:\{ all \-\> 0x0053 \}\lr6 = false     \/\/ Catch:\{ all \-\> 0x0053 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x0053|Catch:\{ all \-\> 0x0053 \}\lExcHandler: all (r0v28 'th' java.lang.Throwable A[CUSTOM_DECLARE, Catch:\{ all \-\> 0x0053 \}])\lSplitter:B:14:0x0045\l|java.lang.Throwable r0 = move\-exception     \/\/ Catch:\{ all \-\> 0x0053 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0054|Catch:\{ all \-\> 0x0053 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0055|Catch:\{ all \-\> 0x0053 \}\lPHI: r3 r6 \l  PHI: (r3v13 android.graphics.drawable.Drawable) = (r3v3 android.graphics.drawable.Drawable), (r3v3 android.graphics.drawable.Drawable), (r3v15 android.graphics.drawable.Drawable) binds: [B:13:0x0043, B:16:0x0049, B:17:0x004b] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v7 boolean) = (r6v3 boolean), (r6v3 boolean), (r6v8 boolean) binds: [B:13:0x0043, B:16:0x0049, B:17:0x004b] A[DONT_GENERATE, DONT_INLINE]\l|r1.this$0.onTileReadyToDraw(r1.mCanvas, r3, org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0))     \/\/ Catch:\{ all \-\> 0x0053 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0062|if (r6 == false) goto L_0x006e\l}"];
Node_22 [shape=record,label="{22\:\ 0x0064|r7.finishUsingDrawable()\l}"];
Node_23 [shape=record,label="{23\:\ 0x0068|if (r6 == false) goto L_0x006d\l}"];
Node_24 [shape=record,label="{24\:\ 0x006a|r7.finishUsingDrawable()\l}"];
Node_25 [shape=record,label="{25\:\ 0x006d|throw r0\l}"];
Node_26 [shape=record,label="{26\:\ 0x006e}"];
Node_27 [shape=record,label="{27\:\ 0x0076|if (org.osmdroid.config.Configuration.getInstance().isDebugTileProviders() == false) goto L_?\l}"];
Node_28 [shape=record,label="{28\:\ 0x0078|r1.this$0.mProjection.getPixelFromTile(r0, r2, org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0))\lr1.mCanvas.drawText(org.osmdroid.util.MapTileIndex.toString(r19), (float) (org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0).left + 1), ((float) org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0).top) + r1.this$0.mDebugPaint.getTextSize(), r1.this$0.mDebugPaint)\lr1.mCanvas.drawLine((float) org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0).left, (float) org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0).top, (float) org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0).right, (float) org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0).top, r1.this$0.mDebugPaint)\lr1.mCanvas.drawLine((float) org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0).left, (float) org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0).top, (float) org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0).left, (float) org.osmdroid.views.overlay.TilesOverlay.access$200(r1.this$0).bottom, r1.this$0.mDebugPaint)\l}"];
Node_29 [shape=record,label="{29\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper.handleTile((r18v0 'this' org.osmdroid.views.overlay.TilesOverlay$OverlayTileLooper A[IMMUTABLE_TYPE, THIS]), (r19v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_26;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_20;
Node_14 -> Node_15;
Node_14 -> Node_18;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_20;
Node_18 -> Node_19;
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_26;
Node_22 -> Node_26;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_30;
Node_28 -> Node_29;
}

