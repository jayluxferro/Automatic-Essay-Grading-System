digraph "CFG fororg.osmdroid.views.overlay.LinearRing.setCloserPoint(Lorg\/osmdroid\/util\/PointL;Lorg\/osmdroid\/util\/PointL;D)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r6 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.isHorizontalRepeating boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0006: CAST  (r0 I:double) = (double) (r0 I:long) \l0x0007: ARITH  (r0 I:double) = (r0 I:double) \- (r9 I:double) \l0x0008: IGET  (r2 I:long) = (r7 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x000a: CAST  (r2 I:double) = (double) (r2 I:long) \l0x000b: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x000c: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0010: IGET  (r2 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0012: IGET  (r4 I:long) = (r7 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0014: ARITH  (r2 I:long) = (r2 I:long) \- (r4 I:long) \l0x0015: INVOKE  (r2 I:long) = (r2 I:long) java.lang.Math.abs(long):long type: STATIC \l0x0019: CAST  (r2 I:double) = (double) (r2 I:long) \l0x001a: CMP_G  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:5:0x0026 \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: IGET  (r0 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0020: CAST  (r0 I:double) = (double) (r0 I:long) \l0x0021: ARITH  (r0 I:double) = (r0 I:double) \- (r9 I:double) \l0x0022: CAST  (r0 I:long) = (long) (r0 I:double) \l0x0023: IPUT  (r0 I:long), (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l}"];
Node_5 [shape=record,label="{5\:\ 0x0026|0x0026: IGET  (r0 I:boolean) = (r6 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.isHorizontalRepeating boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x004c \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: IGET  (r0 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x002c: CAST  (r0 I:double) = (double) (r0 I:long) \l0x002d: ARITH  (r0 I:double) = (r0 I:double) + (r9 I:double) \l0x002e: IGET  (r2 I:long) = (r7 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0030: CAST  (r2 I:double) = (double) (r2 I:long) \l0x0031: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0032: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0036: IGET  (r2 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0038: IGET  (r4 I:long) = (r7 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x003a: ARITH  (r2 I:long) = (r2 I:long) \- (r4 I:long) \l0x003b: INVOKE  (r2 I:long) = (r2 I:long) java.lang.Math.abs(long):long type: STATIC \l0x003f: CAST  (r2 I:double) = (double) (r2 I:long) \l0x0040: CMP_G  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0042|0x0042: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:10:0x004c \l}"];
Node_9 [shape=record,label="{9\:\ 0x0044|0x0044: IGET  (r0 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0046: CAST  (r0 I:double) = (double) (r0 I:long) \l0x0047: ARITH  (r0 I:double) = (r0 I:double) + (r9 I:double) \l0x0048: CAST  (r0 I:long) = (long) (r0 I:double) \l0x0049: IPUT  (r0 I:long), (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|0x004c: IGET  (r0 I:boolean) = (r6 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.isVerticalRepeating boolean \l}"];
Node_11 [shape=record,label="{11\:\ 0x004e|0x004e: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0072 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|0x0050: IGET  (r0 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0052: CAST  (r0 I:double) = (double) (r0 I:long) \l0x0053: ARITH  (r0 I:double) = (r0 I:double) \- (r9 I:double) \l0x0054: IGET  (r2 I:long) = (r7 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0056: CAST  (r2 I:double) = (double) (r2 I:long) \l0x0057: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0058: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x005c: IGET  (r2 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x005e: IGET  (r4 I:long) = (r7 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0060: ARITH  (r2 I:long) = (r2 I:long) \- (r4 I:long) \l0x0061: INVOKE  (r2 I:long) = (r2 I:long) java.lang.Math.abs(long):long type: STATIC \l0x0065: CAST  (r2 I:double) = (double) (r2 I:long) \l0x0066: CMP_G  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0068|0x0068: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:15:0x0072 \l}"];
Node_14 [shape=record,label="{14\:\ 0x006a|0x006a: IGET  (r0 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x006c: CAST  (r0 I:double) = (double) (r0 I:long) \l0x006d: ARITH  (r0 I:double) = (r0 I:double) \- (r9 I:double) \l0x006e: CAST  (r0 I:long) = (long) (r0 I:double) \l0x006f: IPUT  (r0 I:long), (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l}"];
Node_15 [shape=record,label="{15\:\ 0x0072|0x0072: IGET  (r0 I:boolean) = (r6 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.isVerticalRepeating boolean \l}"];
Node_16 [shape=record,label="{16\:\ 0x0074|0x0074: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0098 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0076|0x0076: IGET  (r0 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0078: CAST  (r0 I:double) = (double) (r0 I:long) \l0x0079: ARITH  (r0 I:double) = (r0 I:double) + (r9 I:double) \l0x007a: IGET  (r2 I:long) = (r7 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x007c: CAST  (r2 I:double) = (double) (r2 I:long) \l0x007d: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x007e: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.abs(double):double type: STATIC \l0x0082: IGET  (r2 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0084: IGET  (r4 I:long) = (r7 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0086: ARITH  (r2 I:long) = (r2 I:long) \- (r4 I:long) \l0x0087: INVOKE  (r2 I:long) = (r2 I:long) java.lang.Math.abs(long):long type: STATIC \l0x008b: CAST  (r2 I:double) = (double) (r2 I:long) \l0x008c: CMP_G  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_18 [shape=record,label="{18\:\ 0x008e|0x008e: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:20:0x0098 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0090|0x0090: IGET  (r0 I:long) = (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0092: CAST  (r0 I:double) = (double) (r0 I:long) \l0x0093: ARITH  (r0 I:double) = (r0 I:double) + (r9 I:double) \l0x0094: CAST  (r0 I:long) = (long) (r0 I:double) \l0x0095: IPUT  (r0 I:long), (r8 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l}"];
Node_20 [shape=record,label="{20\:\ 0x0098|0x0098: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.views.overlay.LinearRing.setCloserPoint((r6 'this' I:org.osmdroid.views.overlay.LinearRing A[IMMUTABLE_TYPE, THIS]), (r7 I:org.osmdroid.util.PointL A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.osmdroid.util.PointL A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_0;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_10;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_5;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_10;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_15;
}

