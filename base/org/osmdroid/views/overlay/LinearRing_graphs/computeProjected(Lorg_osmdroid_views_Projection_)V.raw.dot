digraph "CFG fororg.osmdroid.views.overlay.LinearRing.computeProjected(Lorg\/osmdroid\/views\/Projection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0002: IGET  (r1 I:boolean) = (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mProjectedPrecomputed boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0008: IPUT  \l  (r1 I:boolean)\l  (r0 I:org.osmdroid.views.overlay.LinearRing)\l org.osmdroid.views.overlay.LinearRing.mProjectedPrecomputed boolean \l0x000a: IGET  (r2 I:long[]) = (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mProjectedPoints long[] \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IGET  (r2 I:long[]) = (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mProjectedPoints long[] \l0x0010: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x0011: IGET  (r3 I:java.util.ArrayList\<org.osmdroid.util.GeoPoint\>) = (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mOriginalPoints java.util.ArrayList \l0x0013: INVOKE  (r3 I:int) = (r3 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0017: ARITH  (r3 I:int) = (r3 I:int) * (2 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|0x0019: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0027 \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IGET  (r2 I:java.util.ArrayList\<org.osmdroid.util.GeoPoint\>) = (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mOriginalPoints java.util.ArrayList \l0x001d: INVOKE  (r2 I:int) = (r2 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0021: ARITH  (r2 I:int) = (r2 I:int) * (2 int) \l0x0023: NEW_ARRAY  (r2 I:long[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: long[] \l0x0025: IPUT  (r2 I:long[]), (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mProjectedPoints long[] \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0028: NEW_INSTANCE  (r3 I:org.osmdroid.util.PointL) =  org.osmdroid.util.PointL \l0x002a: INVOKE  (r3 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.\<init\>():void type: DIRECT \l0x002d: NEW_INSTANCE  (r11 I:org.osmdroid.util.PointL) =  org.osmdroid.util.PointL \l0x002f: INVOKE  (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.\<init\>():void type: DIRECT \l0x0032: IGET  (r4 I:java.util.ArrayList\<org.osmdroid.util.GeoPoint\>) = (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mOriginalPoints java.util.ArrayList \l0x0034: INVOKE  (r12 I:java.util.Iterator) = (r4 I:java.util.ArrayList) java.util.ArrayList.iterator():java.util.Iterator type: VIRTUAL \l0x0038: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x003a: MOVE  (r13 I:?[long, double]) = (r4 I:?[long, double]) \l0x003b: MOVE  (r15 I:?[long, double]) = (r13 I:?[long, double]) \l0x003c: MOVE  (r17 I:?[long, double]) = (r15 I:?[long, double]) \l0x003e: MOVE  (r19 I:?[long, double]) = (r17 I:?[long, double]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0040|0x0040: INVOKE  (r4 I:boolean) = (r12 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x0044|0x0044: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x00af \l}"];
Node_11 [shape=record,label="{11\:\ 0x0046|0x0046: INVOKE  (r4 I:java.lang.Object) = (r12 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x004a: CHECK_CAST  (r4 I:org.osmdroid.util.GeoPoint) = (org.osmdroid.util.GeoPoint) (r4 I:?[OBJECT, ARRAY]) \l0x004c: INVOKE  (r5 I:double) = (r4 I:org.osmdroid.util.GeoPoint) org.osmdroid.util.GeoPoint.getLatitude():double type: VIRTUAL \l0x0050: INVOKE  (r7 I:double) = (r4 I:org.osmdroid.util.GeoPoint) org.osmdroid.util.GeoPoint.getLongitude():double type: VIRTUAL \l0x0054: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0055: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x0057: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0058: INVOKE  \l  (r4 I:org.osmdroid.views.Projection)\l  (r5 I:double)\l  (r7 I:double)\l  (r9 I:boolean)\l  (r10 I:org.osmdroid.util.PointL)\l org.osmdroid.views.Projection.toProjectedPixels(double, double, boolean, org.osmdroid.util.PointL):org.osmdroid.util.PointL type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x005b|0x005b: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x006a \l}"];
Node_13 [shape=record,label="{13\:\ 0x005d|0x005d: IGET  (r4 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x005f: IGET  (r6 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0061: MOVE  (r13 I:?[long, double]) = (r4 I:?[long, double]) \l0x0062: MOVE  (r15 I:?[long, double]) = (r13 I:?[long, double]) \l0x0063: MOVE  (r17 I:?[long, double]) = (r6 I:?[long, double]) \l0x0065: MOVE  (r19 I:?[long, double]) = (r17 I:?[long, double]) \l0x0067: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x006a|0x006a: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x006c: IGET  (r5 I:double) = (r4 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.mProjectedMapSize double \l0x006e: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.LinearRing)\l  (r3 I:org.osmdroid.util.PointL)\l  (r11 I:org.osmdroid.util.PointL)\l  (r5 I:double)\l org.osmdroid.views.overlay.LinearRing.setCloserPoint(org.osmdroid.util.PointL, org.osmdroid.util.PointL, double):void type: DIRECT \l0x0071: IGET  (r5 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0073: CMP_L  (r5 I:int) = (r13 I:long), (r5 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0075|0x0075: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:17:0x0079 \l}"];
Node_16 [shape=record,label="{16\:\ 0x0077|0x0077: IGET  (r13 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l}"];
Node_17 [shape=record,label="{17\:\ 0x0079|0x0079: IGET  (r5 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x007b: CMP_L  (r5 I:int) = (r15 I:long), (r5 I:long) \l}"];
Node_18 [shape=record,label="{18\:\ 0x007d|0x007d: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:20:0x0082 \l}"];
Node_19 [shape=record,label="{19\:\ 0x007f|0x007f: IGET  (r5 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0081: MOVE  (r15 I:?[long, double]) = (r5 I:?[long, double]) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0082|0x0082: IGET  (r5 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0084: CMP_L  (r5 I:int) = (r17 I:long), (r5 I:long) \l}"];
Node_21 [shape=record,label="{21\:\ 0x0086|0x0086: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:23:0x008c \l}"];
Node_22 [shape=record,label="{22\:\ 0x0088|0x0088: IGET  (r5 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x008a: MOVE  (r17 I:?[long, double]) = (r5 I:?[long, double]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x008c|0x008c: IGET  (r5 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x008e: CMP_L  (r5 I:int) = (r19 I:long), (r5 I:long) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0090|0x0090: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:26:0x0096 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0092|0x0092: IGET  (r5 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0094: MOVE  (r19 I:?[long, double]) = (r5 I:?[long, double]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0096|0x0096: IGET  (r5 I:long[]) = (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mProjectedPoints long[] \l0x0098: ARITH  (r6 I:int) = (r2 I:int) * (2 int) \l0x009a: IGET  (r7 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x009c: APUT  \l  (r5 I:?[long, double][])\l  (r6 I:?[int, short, byte, char])\l  (r7 I:?[long, double])\l \l0x009e: IGET  (r5 I:long[]) = (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mProjectedPoints long[] \l0x00a0: ARITH  (r6 I:int) = (r6 I:int) + (r1 I:int) \l0x00a1: IGET  (r7 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x00a3: APUT  \l  (r5 I:?[long, double][])\l  (r6 I:?[int, short, byte, char])\l  (r7 I:?[long, double])\l \l0x00a5: IGET  (r5 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x00a7: IGET  (r7 I:long) = (r11 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x00a9: INVOKE  (r3 I:org.osmdroid.util.PointL), (r5 I:long), (r7 I:long) org.osmdroid.util.PointL.set(long, long):void type: VIRTUAL \l0x00ac: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00af|0x00af: IGET  (r1 I:org.osmdroid.util.PointL) = (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mProjectedCenter org.osmdroid.util.PointL \l0x00b1: ARITH  (r13 I:long) = (r13 I:long) + (r15 I:long) \l0x00b2: CONST  (r2 I:?[long, double]) = (2 ?[long, double]) \l0x00b4: ARITH  (r13 I:long) = (r13 I:long) \/ (r2 I:long) \l0x00b5: ARITH  (r17 I:long) = (r17 I:long) + (r19 I:long) \l0x00b7: ARITH  (r2 I:long) = (r17 I:long) \/ (r2 I:long) \l0x00b9: INVOKE  (r1 I:org.osmdroid.util.PointL), (r13 I:long), (r2 I:long) org.osmdroid.util.PointL.set(long, long):void type: VIRTUAL \l}"];
Node_28 [shape=record,label="{28\:\ 0x00bc|0x00bc: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.views.overlay.LinearRing.computeProjected((r21 'this' I:org.osmdroid.views.overlay.LinearRing A[IMMUTABLE_TYPE, THIS]), (r22 I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_27;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_26;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_9;
Node_27 -> Node_28;
}

