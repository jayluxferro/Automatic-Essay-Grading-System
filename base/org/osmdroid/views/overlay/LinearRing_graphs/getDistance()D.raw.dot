digraph "CFG fororg.osmdroid.views.overlay.LinearRing.getDistance()D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double[]) = (r7 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.getDistances():double[] type: VIRTUAL \l0x0004: ARRAY_LENGTH  (r1 I:int) = (r0 I:?[]) \l0x0005: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0007: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r4 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0010 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: AGET  (r5 I:?[long, double]) = (r0 I:?[long, double][]), (r4 I:?[int, short, byte, char]) \l0x000c: ARITH  (r2 I:double) = (r2 I:double) + (r5 I:double) \l0x000d: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|0x0010: RETURN  (r2 I:double) \l}"];
MethodNode[shape=record,label="{public double org.osmdroid.views.overlay.LinearRing.getDistance((r7 'this' I:org.osmdroid.views.overlay.LinearRing A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
}

