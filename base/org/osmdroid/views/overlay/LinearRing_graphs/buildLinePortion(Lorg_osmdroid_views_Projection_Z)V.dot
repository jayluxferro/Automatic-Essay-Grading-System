digraph "CFG fororg.osmdroid.views.overlay.LinearRing.buildLinePortion(Lorg\/osmdroid\/views\/Projection;Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (r8.mOriginalPoints.size() \>= 2) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|computeProjected(r9)\lcomputeDistances()\lorg.osmdroid.util.PointL r4 = new org.osmdroid.util.PointL()\lgetBestOffset(r9, r4)\lr8.mSegmentClipper.init()\lr2 = r8\lr3 = r9\lr6 = r10\lclipAndStore(r3, r4, false, r6, r8.mSegmentClipper)\lr8.mSegmentClipper.end()\l}"];
Node_4 [shape=record,label="{4\:\ 0x002b|RETURN\l|return\l}"];
MethodNode[shape=record,label="{void org.osmdroid.views.overlay.LinearRing.buildLinePortion((r8v0 'this' org.osmdroid.views.overlay.LinearRing A[IMMUTABLE_TYPE, THIS]), (r9v0 org.osmdroid.views.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

