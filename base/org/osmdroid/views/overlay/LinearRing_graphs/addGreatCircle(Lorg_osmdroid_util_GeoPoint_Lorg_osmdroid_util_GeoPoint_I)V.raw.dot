digraph "CFG fororg.osmdroid.views.overlay.LinearRing.addGreatCircle(Lorg\/osmdroid\/util\/GeoPoint;Lorg\/osmdroid\/util\/GeoPoint;I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r32 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r1 I:double) = (r30 I:org.osmdroid.util.GeoPoint) org.osmdroid.util.GeoPoint.getLatitude():double type: VIRTUAL \l0x0006: CONST  (r3 I:?[long, double]) = \l  (4580687790476533049(0x3f91df46a2529d39, double:0.017453292519943295) ?[long, double])\l \l0x000b: ARITH  (r1 I:double) = (r1 I:double) * (r3 I:double) \l0x000d: INVOKE  (r5 I:double) = (r30 I:org.osmdroid.util.GeoPoint) org.osmdroid.util.GeoPoint.getLongitude():double type: VIRTUAL \l0x0011: ARITH  (r5 I:double) = (r5 I:double) * (r3 I:double) \l0x0013: INVOKE  (r7 I:double) = (r31 I:org.osmdroid.util.GeoPoint) org.osmdroid.util.GeoPoint.getLatitude():double type: VIRTUAL \l0x0017: ARITH  (r7 I:double) = (r7 I:double) * (r3 I:double) \l0x0019: INVOKE  (r9 I:double) = (r31 I:org.osmdroid.util.GeoPoint) org.osmdroid.util.GeoPoint.getLongitude():double type: VIRTUAL \l0x001d: ARITH  (r9 I:double) = (r9 I:double) * (r3 I:double) \l0x001f: ARITH  (r3 I:double) = (r1 I:double) \- (r7 I:double) \l0x0021: CONST  (r11 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0023: ARITH  (r3 I:double) = (r3 I:double) \/ (r11 I:double) \l0x0024: INVOKE  (r3 I:double) = (r3 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0028: INVOKE  (r3 I:double) = (r3 I:double), (r11 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x002c: INVOKE  (r13 I:double) = (r1 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0030: INVOKE  (r15 I:double) = (r7 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0034: ARITH  (r13 I:double) = (r13 I:double) * (r15 I:double) \l0x0036: ARITH  (r15 I:double) = (r5 I:double) \- (r9 I:double) \l0x0038: ARITH  (r15 I:double) = (r15 I:double) \/ (r11 I:double) \l0x0039: MOVE  (r17 I:?[long, double]) = (r9 I:?[long, double]) \l0x003b: INVOKE  (r9 I:double) = (r15 I:double) java.lang.Math.sin(double):double type: STATIC \l0x003f: INVOKE  (r9 I:double) = (r9 I:double), (r11 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0043: ARITH  (r13 I:double) = (r13 I:double) * (r9 I:double) \l0x0045: ARITH  (r3 I:double) = (r3 I:double) + (r13 I:double) \l0x0046: INVOKE  (r3 I:double) = (r3 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x004a: INVOKE  (r3 I:double) = (r3 I:double) java.lang.Math.asin(double):double type: STATIC \l0x004e: ARITH  (r3 I:double) = (r3 I:double) * (r11 I:double) \l0x0050: CONST  (r9 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0051|0x0051: IF  (r9 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:3:0x00eb \l}"];
Node_2 [shape=record,label="{2\:\ 0x0053|0x0053: CAST  (r13 I:double) = (double) (r9 I:int) \l0x0054: CONST  (r15 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0056: ARITH  (r13 I:double) = (r13 I:double) * (r15 I:double) \l0x0058: ARITH  (r10 I:int) = (r0 I:int) + (1 int) \l0x005a: CAST  (r11 I:double) = (double) (r10 I:int) \l0x005b: ARITH  (r13 I:double) = (r13 I:double) \/ (r11 I:double) \l0x005c: ARITH  (r15 I:double) = (r15 I:double) \- (r13 I:double) \l0x005d: ARITH  (r15 I:double) = (r15 I:double) * (r3 I:double) \l0x005f: INVOKE  (r10 I:double) = (r15 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0063: INVOKE  (r15 I:double) = (r3 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0067: ARITH  (r10 I:double) = (r10 I:double) \/ (r15 I:double) \l0x0068: ARITH  (r13 I:double) = (r13 I:double) * (r3 I:double) \l0x006a: INVOKE  (r12 I:double) = (r13 I:double) java.lang.Math.sin(double):double type: STATIC \l0x006e: INVOKE  (r14 I:double) = (r3 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0072: ARITH  (r12 I:double) = (r12 I:double) \/ (r14 I:double) \l0x0073: INVOKE  (r14 I:double) = (r1 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0077: ARITH  (r14 I:double) = (r14 I:double) * (r10 I:double) \l0x0079: INVOKE  (r21 I:double) = (r5 I:double) java.lang.Math.cos(double):double type: STATIC \l0x007d: ARITH  (r14 I:double) = (r14 I:double) * (r21 I:double) \l0x007f: INVOKE  (r21 I:double) = (r7 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0083: ARITH  (r21 I:double) = (r21 I:double) * (r12 I:double) \l0x0085: INVOKE  (r23 I:double) = (r17 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0089: ARITH  (r21 I:double) = (r21 I:double) * (r23 I:double) \l0x008b: ARITH  (r14 I:double) = (r14 I:double) + (r21 I:double) \l0x008d: INVOKE  (r21 I:double) = (r1 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0091: ARITH  (r21 I:double) = (r21 I:double) * (r10 I:double) \l0x0093: INVOKE  (r23 I:double) = (r5 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0097: ARITH  (r21 I:double) = (r21 I:double) * (r23 I:double) \l0x0099: INVOKE  (r23 I:double) = (r7 I:double) java.lang.Math.cos(double):double type: STATIC \l0x009d: ARITH  (r23 I:double) = (r23 I:double) * (r12 I:double) \l0x009f: INVOKE  (r25 I:double) = (r17 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00a3: ARITH  (r23 I:double) = (r23 I:double) * (r25 I:double) \l0x00a5: MOVE  (r27 I:?[long, double]) = (r3 I:?[long, double]) \l0x00a7: ARITH  (r3 I:double) = (r21 I:double) + (r23 I:double) \l0x00a9: INVOKE  (r21 I:double) = (r1 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00ad: ARITH  (r10 I:double) = (r10 I:double) * (r21 I:double) \l0x00af: INVOKE  (r21 I:double) = (r7 I:double) java.lang.Math.sin(double):double type: STATIC \l0x00b3: ARITH  (r12 I:double) = (r12 I:double) * (r21 I:double) \l0x00b5: ARITH  (r10 I:double) = (r10 I:double) + (r12 I:double) \l0x00b6: CONST  (r12 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x00b8: INVOKE  (r19 I:double) = (r14 I:double), (r12 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x00bc: INVOKE  (r21 I:double) = (r3 I:double), (r12 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x00c0: ARITH  (r19 I:double) = (r19 I:double) + (r21 I:double) \l0x00c2: INVOKE  (r12 I:double) = (r19 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x00c6: INVOKE  (r10 I:double) = (r10 I:double), (r12 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x00ca: INVOKE  (r3 I:double) = (r3 I:double), (r14 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x00ce: NEW_INSTANCE  (r12 I:org.osmdroid.util.GeoPoint) =  org.osmdroid.util.GeoPoint \l0x00d0: CONST  (r13 I:?[long, double]) = \l  (4633260481411531256(0x404ca5dc1a63c1f8, double:57.29577951308232) ?[long, double])\l \l0x00d5: ARITH  (r10 I:double) = (r10 I:double) * (r13 I:double) \l0x00d7: ARITH  (r3 I:double) = (r3 I:double) * (r13 I:double) \l0x00d9: INVOKE  \l  (r12 I:org.osmdroid.util.GeoPoint)\l  (r10 I:double)\l  (r3 I:double)\l org.osmdroid.util.GeoPoint.\<init\>(double, double):void type: DIRECT \l0x00dc: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY]) \l0x00de: IGET  (r4 I:java.util.ArrayList\<org.osmdroid.util.GeoPoint\>) = (r3 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.mOriginalPoints java.util.ArrayList \l0x00e0: INVOKE  (r4 I:java.util.ArrayList), (r12 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l0x00e3: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l0x00e5: MOVE  (r3 I:?[long, double]) = (r27 I:?[long, double]) \l0x00e7: CONST  (r11 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x00eb|0x00eb: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r29 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x00ed|0x00ed: RETURN   \l}"];
MethodNode[shape=record,label="{protected void org.osmdroid.views.overlay.LinearRing.addGreatCircle((r29 'this' I:org.osmdroid.views.overlay.LinearRing A[IMMUTABLE_TYPE, THIS]), (r30 I:org.osmdroid.util.GeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:org.osmdroid.util.GeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_1;
Node_3 -> Node_4;
}

