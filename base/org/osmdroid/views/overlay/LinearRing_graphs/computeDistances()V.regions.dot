digraph "CFG fororg.osmdroid.views.overlay.LinearRing.computeDistances()V" {
subgraph cluster_Region_462389158 {
label = "R(1:(1:(4:3|(1:7)|8|(3:11|(1:13)(1:14)|15))))";
node [shape=record,color=blue];
subgraph cluster_Region_1678165813 {
label = "R(1:(4:3|(1:7)|8|(3:11|(1:13)(1:14)|15)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_613553665 {
label = "IF [B:1:0x0002] THEN: R(4:3|(1:7)|8|(3:11|(1:13)(1:14)|15)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r10.mDistancesPrecomputed != true) goto L_0x0005\l}"];
subgraph cluster_Region_1880385800 {
label = "R(4:3|(1:7)|8|(3:11|(1:13)(1:14)|15))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|r10.mDistancesPrecomputed = true\l}"];
subgraph cluster_IfRegion_515814815 {
label = "IF [B:4:0x000a, B:6:0x0015] THEN: R(1:7) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|ADDED_TO_REGION\l|if (r10.mDistances == null) goto L_0x0017\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|ADDED_TO_REGION\l|if (r10.mDistances.length != r10.mOriginalPoints.size()) goto L_0x0017\l}"];
subgraph cluster_Region_2125241249 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0017|r10.mDistances = new double[r10.mOriginalPoints.size()]\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0021|int r0 = 0\lorg.osmdroid.util.GeoPoint org.osmdroid.util.GeoPoint r1 = new org.osmdroid.util.GeoPoint(0.0d, 0.0d)\ljava.util.Iterator java.util.Iterator\<org.osmdroid.util.GeoPoint\> r4 = r10.mOriginalPoints.iterator()\l}"];
subgraph cluster_LoopRegion_149334135 {
label = "LOOP:0: (3:11|(1:13)(1:14)|15)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0033|if (r4.hasNext() != false) goto L_0x0035\l}"];
subgraph cluster_Region_724424003 {
label = "R(3:11|(1:13)(1:14)|15)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0035|org.osmdroid.util.GeoPoint org.osmdroid.util.GeoPoint r5 = r4.next()\l}"];
subgraph cluster_IfRegion_1702038337 {
label = "IF [B:12:0x003b] THEN: R(1:13) ELSE: R(1:14)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x003b|if (r0 == 0) goto L_0x003d\l}"];
subgraph cluster_Region_514563513 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x003d|r10.mDistances[r0] = 0.0d\l}"];
}
subgraph cluster_Region_1302653773 {
label = "R(1:14)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0042|r10.mDistances[r0] = r5.distanceToAsDouble(r1)\l}"];
}
}
Node_15 [shape=record,label="{15\:\ 0x004a|LOOP_END\lLOOP:0: B:9:0x002f\-\>B:15:0x004a\l|r1.setCoords(r5.getLatitude(), r5.getLongitude())\lr0++\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000c}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x002f|LOOP_START\lPHI: r0 \l  PHI: (r0v4 int) = (r0v3 int), (r0v5 int) binds: [B:8:0x0021, B:15:0x004a] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:9:0x002f\-\>B:15:0x004a\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0058}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0058|SYNTHETIC\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x004a|SYNTHETIC\l}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x004a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.osmdroid.views.overlay.LinearRing.computeDistances((r10v0 'this' org.osmdroid.views.overlay.LinearRing A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_17[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_14[style=dashed];
Node_13 -> Node_19;
Node_14 -> Node_18;
Node_15 -> Node_9;
Node_0 -> Node_1;
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_17 -> Node_16;
Node_18 -> Node_15;
Node_19 -> Node_15;
}

