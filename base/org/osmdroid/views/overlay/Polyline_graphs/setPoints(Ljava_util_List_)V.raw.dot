digraph "CFG fororg.osmdroid.views.overlay.Polyline.setPoints(Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.views.overlay.LinearRing) = (r3 I:org.osmdroid.views.overlay.Polyline) org.osmdroid.views.overlay.Polyline.mOutline org.osmdroid.views.overlay.LinearRing \l0x0002: INVOKE  (r0 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.clearPath():void type: VIRTUAL \l0x0005: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0007: INVOKE  (r1 I:int) = (r4 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x000b: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x000e: IPUT  \l  (r0 I:java.util.ArrayList\<org.osmdroid.util.GeoPoint\>)\l  (r3 I:org.osmdroid.views.overlay.Polyline)\l org.osmdroid.views.overlay.Polyline.mOriginalPoints java.util.ArrayList \l0x0010: INVOKE  (r0 I:java.util.Iterator) = (r4 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0026 \l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|0x001a: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001e: CHECK_CAST  (r1 I:org.osmdroid.util.GeoPoint) = (org.osmdroid.util.GeoPoint) (r1 I:?[OBJECT, ARRAY]) \l0x0020: IGET  (r2 I:java.util.ArrayList\<org.osmdroid.util.GeoPoint\>) = (r3 I:org.osmdroid.views.overlay.Polyline) org.osmdroid.views.overlay.Polyline.mOriginalPoints java.util.ArrayList \l0x0022: INVOKE  (r2 I:java.util.ArrayList), (r1 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0026|0x0026: IGET  (r0 I:org.osmdroid.views.overlay.LinearRing) = (r3 I:org.osmdroid.views.overlay.Polyline) org.osmdroid.views.overlay.Polyline.mOutline org.osmdroid.views.overlay.LinearRing \l0x0028: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.LinearRing)\l  (r4 I:java.util.List)\l org.osmdroid.views.overlay.LinearRing.setPoints(java.util.List):void type: VIRTUAL \l0x002b: INVOKE  (r3 I:org.osmdroid.views.overlay.Polyline) org.osmdroid.views.overlay.Polyline.setDefaultInfoWindowLocation():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.Polyline.setPoints((r3 'this' I:org.osmdroid.views.overlay.Polyline A[IMMUTABLE_TYPE, THIS]), (r4 I:java.util.List\<org.osmdroid.util.GeoPoint\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lorg\/osmdroid\/util\/GeoPoint;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
}

