digraph "CFG fororg.osmdroid.views.overlay.gridlines.LatLonGridlineOverlay2.getStartEndPointsWE(DDI)[D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r19\lr5 = r24\ldouble r6 = getIncrementor(r5)\lr11 = \-180.0d\lr13 = 180.0d\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|if (r5 \>= 10) goto L_0x0042\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|double r1 = java.lang.Math.floor(r20)\lr15 = 180.0d\l}"];
Node_3 [shape=record,label="{3\:\ 0x001e|LOOP_START\lPHI: r15 \l  PHI: (r15v5 double) = (r15v4 double), (r15v6 double) binds: [B:2:0x0019, B:5:0x0022] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x001e\-\>B:5:0x0022\l}"];
Node_4 [shape=record,label="{4\:\ 0x0020|if ((r15 \> r1 ? 1 : (r15 == r1 ? 0 : \-1)) \<= 0) goto L_0x0024\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|LOOP_END\lLOOP:0: B:3:0x001e\-\>B:5:0x0022\l|double r15 = r15 \- r6\l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|double r1 = java.lang.Math.ceil(r22)\lr3 = \-180.0d\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|LOOP_START\lPHI: r3 \l  PHI: (r3v1 double) = (r3v0 double), (r3v4 double) binds: [B:6:0x0024, B:9:0x002d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x0029\-\>B:9:0x002d\l}"];
Node_8 [shape=record,label="{8\:\ 0x002b|if ((r3 \> r1 ? 1 : (r3 == r1 ? 0 : \-1)) \>= 0) goto L_0x002f\l}"];
Node_9 [shape=record,label="{9\:\ 0x002d|LOOP_END\lLOOP:1: B:7:0x0029\-\>B:9:0x002d\l|double r3 = r3 + r6\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f}"];
Node_11 [shape=record,label="{11\:\ 0x0031|if ((r15 \> \-180.0d ? 1 : (r15 == \-180.0d ? 0 : \-1)) \>= 0) goto L_0x0034\l}"];
Node_12 [shape=record,label="{12\:\ 0x0034|r11 = r15\l}"];
Node_13 [shape=record,label="{13\:\ 0x0035|PHI: r11 \l  PHI: (r11v6 double) = (r11v0 double), (r11v7 double) binds: [B:11:0x0031, B:12:0x0034] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0037|if ((r1 \> 180.0d ? 1 : (r1 == 180.0d ? 0 : \-1)) \<= 0) goto L_0x003a\l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|r13 = r1\l}"];
Node_16 [shape=record,label="{16\:\ 0x003b|PHI: r13 \l  PHI: (r13v6 double) = (r13v0 double), (r13v7 double) binds: [B:14:0x0037, B:15:0x003a] A[DONT_GENERATE, DONT_INLINE]\l|double[] r1 = new double[]\{r13, r11\}\l}"];
Node_17 [shape=record,label="{17\:\ 0x0041|RETURN\l|return r1\l}"];
Node_18 [shape=record,label="{18\:\ 0x0042}"];
Node_19 [shape=record,label="{19\:\ 0x0046|if ((r20 \> 0.0d ? 1 : (r20 == 0.0d ? 0 : \-1)) \<= 0) goto L_0x0049\l}"];
Node_20 [shape=record,label="{20\:\ 0x0048|r11 = 0.0d\l}"];
Node_21 [shape=record,label="{21\:\ 0x0049|PHI: r11 \l  PHI: (r11v1 double) = (r11v0 double), (r11v5 double) binds: [B:19:0x0046, B:20:0x0048] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x004b|if ((r22 \> 0.0d ? 1 : (r22 == 0.0d ? 0 : \-1)) \>= 0) goto L_0x004e\l}"];
Node_23 [shape=record,label="{23\:\ 0x004d|r13 = 0.0d\l}"];
Node_24 [shape=record,label="{24\:\ 0x004e|PHI: r13 \l  PHI: (r13v1 double) = (r13v0 double), (r13v5 double) binds: [B:22:0x004b, B:23:0x004d] A[DONT_GENERATE, DONT_INLINE]\l|r6 = 2\l}"];
Node_25 [shape=record,label="{25\:\ 0x004f|LOOP_START\lPHI: r6 r11 r13 \l  PHI: (r6v3 int) = (r6v2 int), (r6v4 int) binds: [B:24:0x004e, B:33:0x0067] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r11v2 double) = (r11v1 double), (r11v3 double) binds: [B:24:0x004e, B:33:0x0067] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 double) = (r13v1 double), (r13v3 double) binds: [B:24:0x004e, B:33:0x0067] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:25:0x004f\-\>B:33:0x0067\l|if (r6 \> r5) goto L_0x006a\l}"];
Node_26 [shape=record,label="{26\:\ 0x0051|double r15 = getIncrementor(r6)\l}"];
Node_27 [shape=record,label="{27\:\ 0x0055|LOOP_START\lPHI: r13 \l  PHI: (r13v3 double) = (r13v2 double), (r13v4 double) binds: [B:26:0x0051, B:29:0x005c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:27:0x0055\-\>B:29:0x005c\l}"];
Node_28 [shape=record,label="{28\:\ 0x005a|if ((r13 \> (r22 + r15) ? 1 : (r13 == (r22 + r15) ? 0 : \-1)) \<= 0) goto L_0x005e\l}"];
Node_29 [shape=record,label="{29\:\ 0x005c|LOOP_END\lLOOP:3: B:27:0x0055\-\>B:29:0x005c\l|double r13 = r13 \- r15\l}"];
Node_30 [shape=record,label="{30\:\ 0x005e|LOOP_START\lPHI: r11 \l  PHI: (r11v3 double) = (r11v2 double), (r11v4 double) binds: [B:39:0x005e, B:32:0x0065] A[DONT_GENERATE, DONT_INLINE]\lLOOP:4: B:30:0x005e\-\>B:32:0x0065\l}"];
Node_31 [shape=record,label="{31\:\ 0x0063|if ((r11 \> (r20 \- r15) ? 1 : (r11 == (r20 \- r15) ? 0 : \-1)) \>= 0) goto L_0x0067\l}"];
Node_32 [shape=record,label="{32\:\ 0x0065|LOOP_END\lLOOP:4: B:30:0x005e\-\>B:32:0x0065\l|double r11 = r11 + r15\l}"];
Node_33 [shape=record,label="{33\:\ 0x0067|LOOP_END\lLOOP:2: B:25:0x004f\-\>B:33:0x0067\l|int r6 = r6 + 1\l}"];
Node_34 [shape=record,label="{34\:\ 0x006a|double[] r1 = new double[]\{r13, r11\}\l}"];
Node_35 [shape=record,label="{35\:\ 0x0070|RETURN\l|return r1\l}"];
Node_36 [shape=record,label="{36\:\ 0x0024|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x002f|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x006a|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x005e|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0067|SYNTHETIC\l}"];
MethodNode[shape=record,label="{protected double[] org.osmdroid.views.overlay.gridlines.LatLonGridlineOverlay2.getStartEndPointsWE((r19v0 'this' org.osmdroid.views.overlay.gridlines.LatLonGridlineOverlay2 A[IMMUTABLE_TYPE, THIS]), (r20v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_18;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_36;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_37;
Node_9 -> Node_7;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_38;
Node_26 -> Node_27;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_39;
Node_29 -> Node_27;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_40;
Node_32 -> Node_30;
Node_33 -> Node_25;
Node_34 -> Node_35;
Node_36 -> Node_6;
Node_37 -> Node_10;
Node_38 -> Node_34;
Node_39 -> Node_30;
Node_40 -> Node_33;
}

