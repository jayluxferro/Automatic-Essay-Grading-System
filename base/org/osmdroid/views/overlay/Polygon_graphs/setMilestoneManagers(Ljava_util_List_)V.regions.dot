digraph "CFG fororg.osmdroid.views.overlay.Polygon.setMilestoneManagers(Ljava\/util\/List;)V" {
subgraph cluster_Region_1181620154 {
label = "R(1:(1:4)(1:(1:3)(0)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_382860922 {
label = "IF [B:0:0x0000] THEN: R(1:4) ELSE: R(1:(1:3)(0))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r1 != null) goto L_0x0010\l}"];
subgraph cluster_Region_2042883046 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0010|r0.mMilestoneManagers = r1\l}"];
}
subgraph cluster_Region_1636488703 {
label = "R(1:(1:3)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1475333555 {
label = "IF [B:2:0x0008] THEN: R(1:3) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0008|if (r0.mMilestoneManagers.size() \> 0) goto L_0x000a\l}"];
subgraph cluster_Region_1322572570 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000a|r0.mMilestoneManagers.clear()\l}"];
}
subgraph cluster_Region_674137597 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_5 [shape=record,color=red,label="{5\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_6 [shape=record,color=red,label="{6\:\ ?|SYNTHETIC\l}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.Polygon.setMilestoneManagers((r0v0 'this' org.osmdroid.views.overlay.Polygon A[IMMUTABLE_TYPE, THIS]), (r1v0 java.util.List\<org.osmdroid.views.overlay.milestones.MilestoneManager\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lorg\/osmdroid\/views\/overlay\/milestones\/MilestoneManager;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_4;
Node_4 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_6[style=dashed];
Node_3 -> Node_7;
Node_1 -> Node_2;
}

