digraph "CFG fororg.osmdroid.views.overlay.Polygon.getHoles()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: IGET  (r1 I:java.util.ArrayList\<org.osmdroid.views.overlay.LinearRing\>) = (r3 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mHoles java.util.ArrayList \l0x0004: INVOKE  (r1 I:int) = (r1 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x0008: INVOKE  (r0 I:java.util.ArrayList), (r1 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x000b: IGET  (r1 I:java.util.ArrayList\<org.osmdroid.views.overlay.LinearRing\>) = (r3 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mHoles java.util.ArrayList \l0x000d: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.ArrayList) java.util.ArrayList.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|0x0011: INVOKE  (r2 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0015|0x0015: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0025 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x001b: CHECK_CAST  (r2 I:org.osmdroid.views.overlay.LinearRing) = (org.osmdroid.views.overlay.LinearRing) (r2 I:?[OBJECT, ARRAY]) \l0x001d: INVOKE  (r2 I:java.util.ArrayList) = (r2 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.getPoints():java.util.ArrayList type: VIRTUAL \l0x0021: INVOKE  (r0 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: RETURN  \l  (r0 I:java.util.List\<java.util.List\<org.osmdroid.util.GeoPoint\>\>)\l \l}"];
MethodNode[shape=record,label="{public java.util.List\<java.util.List\<org.osmdroid.util.GeoPoint\>\> org.osmdroid.views.overlay.Polygon.getHoles((r3 'this' I:org.osmdroid.views.overlay.Polygon A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Ljava\/util\/List\<, Lorg\/osmdroid\/util\/GeoPoint;, \>;\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
}

