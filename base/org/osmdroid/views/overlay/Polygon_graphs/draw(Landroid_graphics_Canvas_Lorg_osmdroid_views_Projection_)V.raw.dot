digraph "CFG fororg.osmdroid.views.overlay.Polygon.draw(Landroid\/graphics\/Canvas;Lorg\/osmdroid\/views\/Projection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.graphics.Path) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mPath android.graphics.Path \l0x0002: INVOKE  (r0 I:android.graphics.Path) android.graphics.Path.rewind():void type: VIRTUAL \l0x0005: IGET  (r0 I:org.osmdroid.views.overlay.LinearRing) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mOutline org.osmdroid.views.overlay.LinearRing \l0x0007: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.LinearRing)\l  (r13 I:org.osmdroid.views.Projection)\l org.osmdroid.views.overlay.LinearRing.setClipArea(org.osmdroid.views.Projection):void type: VIRTUAL \l0x000a: IGET  (r0 I:org.osmdroid.views.overlay.LinearRing) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mOutline org.osmdroid.views.overlay.LinearRing \l0x000c: IGET  (r1 I:java.util.List\<org.osmdroid.views.overlay.milestones.MilestoneManager\>) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mMilestoneManagers java.util.List \l0x000e: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0012: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|0x0014: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0018 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0016|0x0016: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001a: INVOKE  (r0 I:org.osmdroid.util.PointL) = \l  (r0 I:org.osmdroid.views.overlay.LinearRing)\l  (r13 I:org.osmdroid.views.Projection)\l  (r4 I:org.osmdroid.util.PointL)\l  (r1 I:boolean)\l org.osmdroid.views.overlay.LinearRing.buildPathPortion(org.osmdroid.views.Projection, org.osmdroid.util.PointL, boolean):org.osmdroid.util.PointL type: VIRTUAL \l0x001e: IGET  (r1 I:java.util.List\<org.osmdroid.views.overlay.milestones.MilestoneManager\>) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mMilestoneManagers java.util.List \l0x0020: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0024|0x0024: INVOKE  (r4 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x005e \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x002e: CHECK_CAST  (r4 I:org.osmdroid.views.overlay.milestones.MilestoneManager) = (org.osmdroid.views.overlay.milestones.MilestoneManager) (r4 I:?[OBJECT, ARRAY]) \l0x0030: INVOKE  \l  (r4 I:org.osmdroid.views.overlay.milestones.MilestoneManager)\l org.osmdroid.views.overlay.milestones.MilestoneManager.init():void type: VIRTUAL \l0x0033: IGET  (r5 I:org.osmdroid.views.overlay.LinearRing) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mOutline org.osmdroid.views.overlay.LinearRing \l0x0035: INVOKE  (r5 I:double[]) = (r5 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.getDistances():double[] type: VIRTUAL \l0x0039: INVOKE  \l  (r4 I:org.osmdroid.views.overlay.milestones.MilestoneManager)\l  (r5 I:double[])\l org.osmdroid.views.overlay.milestones.MilestoneManager.setDistances(double[]):void type: VIRTUAL \l0x003c: IGET  (r5 I:org.osmdroid.views.overlay.LinearRing) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mOutline org.osmdroid.views.overlay.LinearRing \l0x003e: INVOKE  (r5 I:org.osmdroid.util.ListPointL) = (r5 I:org.osmdroid.views.overlay.LinearRing) org.osmdroid.views.overlay.LinearRing.getPointsForMilestones():org.osmdroid.util.ListPointL type: VIRTUAL \l0x0042: INVOKE  (r5 I:java.util.Iterator) = (r5 I:org.osmdroid.util.ListPointL) org.osmdroid.util.ListPointL.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0046|0x0046: INVOKE  (r6 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x004a|0x004a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x005a \l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|0x004c: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0050: CHECK_CAST  (r6 I:org.osmdroid.util.PointL) = (org.osmdroid.util.PointL) (r6 I:?[OBJECT, ARRAY]) \l0x0052: IGET  (r7 I:long) = (r6 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0054: IGET  (r9 I:long) = (r6 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0056: INVOKE  \l  (r4 I:org.osmdroid.views.overlay.milestones.MilestoneManager)\l  (r7 I:long)\l  (r9 I:long)\l org.osmdroid.views.overlay.milestones.MilestoneManager.add(long, long):void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x005a|0x005a: INVOKE  \l  (r4 I:org.osmdroid.views.overlay.milestones.MilestoneManager)\l org.osmdroid.views.overlay.milestones.MilestoneManager.end():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x005e|0x005e: IGET  (r1 I:java.util.ArrayList\<org.osmdroid.views.overlay.LinearRing\>) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mHoles java.util.ArrayList \l0x0060: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.ArrayList) java.util.ArrayList.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|0x0064: INVOKE  (r4 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_14 [shape=record,label="{14\:\ 0x0068|0x0068: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0082 \l}"];
Node_15 [shape=record,label="{15\:\ 0x006a|0x006a: INVOKE  (r4 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x006e: CHECK_CAST  (r4 I:org.osmdroid.views.overlay.LinearRing) = (org.osmdroid.views.overlay.LinearRing) (r4 I:?[OBJECT, ARRAY]) \l0x0070: INVOKE  \l  (r4 I:org.osmdroid.views.overlay.LinearRing)\l  (r13 I:org.osmdroid.views.Projection)\l org.osmdroid.views.overlay.LinearRing.setClipArea(org.osmdroid.views.Projection):void type: VIRTUAL \l0x0073: IGET  (r5 I:java.util.List\<org.osmdroid.views.overlay.milestones.MilestoneManager\>) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mMilestoneManagers java.util.List \l0x0075: INVOKE  (r5 I:int) = (r5 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_16 [shape=record,label="{16\:\ 0x0079|0x0079: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:18:0x007d \l}"];
Node_17 [shape=record,label="{17\:\ 0x007b|0x007b: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x007d|0x007d: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x007e|0x007e: INVOKE  \l  (r4 I:org.osmdroid.views.overlay.LinearRing)\l  (r13 I:org.osmdroid.views.Projection)\l  (r0 I:org.osmdroid.util.PointL)\l  (r5 I:boolean)\l org.osmdroid.views.overlay.LinearRing.buildPathPortion(org.osmdroid.views.Projection, org.osmdroid.util.PointL, boolean):org.osmdroid.util.PointL type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0082|0x0082: IGET  (r13 I:android.graphics.Path) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mPath android.graphics.Path \l0x0084: SGET  (r0 I:android.graphics.Path$FillType) =  android.graphics.Path.FillType.EVEN_ODD android.graphics.Path$FillType \l0x0086: INVOKE  \l  (r13 I:android.graphics.Path)\l  (r0 I:android.graphics.Path$FillType)\l android.graphics.Path.setFillType(android.graphics.Path$FillType):void type: VIRTUAL \l0x0089: IGET  (r13 I:android.graphics.Path) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mPath android.graphics.Path \l0x008b: IGET  (r0 I:android.graphics.Paint) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mFillPaint android.graphics.Paint \l0x008d: INVOKE  \l  (r12 I:android.graphics.Canvas)\l  (r13 I:android.graphics.Path)\l  (r0 I:android.graphics.Paint)\l android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void type: VIRTUAL \l0x0090: IGET  (r13 I:android.graphics.Path) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mPath android.graphics.Path \l0x0092: IGET  (r0 I:android.graphics.Paint) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mOutlinePaint android.graphics.Paint \l0x0094: INVOKE  \l  (r12 I:android.graphics.Canvas)\l  (r13 I:android.graphics.Path)\l  (r0 I:android.graphics.Paint)\l android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void type: VIRTUAL \l0x0097: IGET  (r13 I:java.util.List\<org.osmdroid.views.overlay.milestones.MilestoneManager\>) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mMilestoneManagers java.util.List \l0x0099: INVOKE  (r13 I:java.util.Iterator) = (r13 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x009d|0x009d: INVOKE  (r0 I:boolean) = (r13 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a1|0x00a1: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x00ad \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a3|0x00a3: INVOKE  (r0 I:java.lang.Object) = (r13 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00a7: CHECK_CAST  (r0 I:org.osmdroid.views.overlay.milestones.MilestoneManager) = (org.osmdroid.views.overlay.milestones.MilestoneManager) (r0 I:?[OBJECT, ARRAY]) \l0x00a9: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.milestones.MilestoneManager)\l  (r12 I:android.graphics.Canvas)\l org.osmdroid.views.overlay.milestones.MilestoneManager.draw(android.graphics.Canvas):void type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x00ad|0x00ad: INVOKE  (r12 I:boolean) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.isInfoWindowOpen():boolean type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x00b1|0x00b1: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00c4 \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b3|0x00b3: IGET  (r12 I:org.osmdroid.views.overlay.infowindow.InfoWindow) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mInfoWindow org.osmdroid.views.overlay.infowindow.InfoWindow \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b5|0x00b5: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00c4 \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b7|0x00b7: IGET  (r12 I:org.osmdroid.views.overlay.infowindow.InfoWindow) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mInfoWindow org.osmdroid.views.overlay.infowindow.InfoWindow \l0x00b9: INVOKE  (r12 I:java.lang.Object) = (r12 I:org.osmdroid.views.overlay.infowindow.InfoWindow) org.osmdroid.views.overlay.infowindow.InfoWindow.getRelatedObject():java.lang.Object type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00bd|0x00bd: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x00c4 \l}"];
Node_30 [shape=record,label="{30\:\ 0x00bf|0x00bf: IGET  (r12 I:org.osmdroid.views.overlay.infowindow.InfoWindow) = (r11 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.mInfoWindow org.osmdroid.views.overlay.infowindow.InfoWindow \l0x00c1: INVOKE  (r12 I:org.osmdroid.views.overlay.infowindow.InfoWindow) org.osmdroid.views.overlay.infowindow.InfoWindow.draw():void type: VIRTUAL \l}"];
Node_31 [shape=record,label="{31\:\ 0x00c4|0x00c4: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.Polygon.draw((r11 'this' I:org.osmdroid.views.overlay.Polygon A[IMMUTABLE_TYPE, THIS]), (r12 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
Node_11 -> Node_5;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_13;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_21;
Node_24 -> Node_25;
Node_25 -> Node_26[style=dashed];
Node_25 -> Node_31;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
}

