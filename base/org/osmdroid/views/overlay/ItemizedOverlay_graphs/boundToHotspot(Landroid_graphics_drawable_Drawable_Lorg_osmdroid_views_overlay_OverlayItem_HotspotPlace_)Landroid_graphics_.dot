digraph "CFG fororg.osmdroid.views.overlay.ItemizedOverlay.boundToHotspot(Landroid\/graphics\/drawable\/Drawable;Lorg\/osmdroid\/views\/overlay\/OverlayItem$HotspotPlace;)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r8 != null) goto L_0x0004\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|org.osmdroid.views.overlay.OverlayItem$HotspotPlace r8 = org.osmdroid.views.overlay.OverlayItem.HotspotPlace.BOTTOM_CENTER\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|PHI: r8 \l  PHI: (r8v1 org.osmdroid.views.overlay.OverlayItem$HotspotPlace) = (r8v0 org.osmdroid.views.overlay.OverlayItem$HotspotPlace), (r8v5 org.osmdroid.views.overlay.OverlayItem$HotspotPlace) binds: [B:0:0x0000, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l|int r0 = r7.getIntrinsicWidth()\lint r1 = r7.getIntrinsicHeight()\lr3 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|switch(r8) \{\l    case org.osmdroid.views.overlay.OverlayItem.HotspotPlace.CENTER :org.osmdroid.views.overlay.OverlayItem$HotspotPlace: goto L_0x001d;\l    case org.osmdroid.views.overlay.OverlayItem.HotspotPlace.BOTTOM_CENTER :org.osmdroid.views.overlay.OverlayItem$HotspotPlace: goto L_0x001d;\l    case org.osmdroid.views.overlay.OverlayItem.HotspotPlace.TOP_CENTER :org.osmdroid.views.overlay.OverlayItem$HotspotPlace: goto L_0x001d;\l    case org.osmdroid.views.overlay.OverlayItem.HotspotPlace.RIGHT_CENTER :org.osmdroid.views.overlay.OverlayItem$HotspotPlace: goto L_0x001b;\l    case org.osmdroid.views.overlay.OverlayItem.HotspotPlace.UPPER_RIGHT_CORNER :org.osmdroid.views.overlay.OverlayItem$HotspotPlace: goto L_0x001b;\l    case org.osmdroid.views.overlay.OverlayItem.HotspotPlace.LOWER_RIGHT_CORNER :org.osmdroid.views.overlay.OverlayItem$HotspotPlace: goto L_0x001b;\l    default: goto L_0x0019;\l\}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|r2 = 0\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|int r2 = \-r0\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|int r2 = (\-r0) \/ 2\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|PHI: r2 \l  PHI: (r2v2 int) = (r2v4 int), (r2v5 int), (r2v6 int) binds: [B:6:0x001d, B:5:0x001b, B:4:0x0019] A[DONT_GENERATE, DONT_INLINE]\l|r8 = org.osmdroid.views.overlay.ItemizedOverlay.C14971.$SwitchMap$org$osmdroid$views$overlay$OverlayItem$HotspotPlace[r8.ordinal()]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|if (r8 == 2) goto L_0x0037\l}"];
Node_9 [shape=record,label="{9\:\ 0x0029}"];
Node_10 [shape=record,label="{10\:\ 0x002b|if (r8 == 8) goto L_0x0037\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d}"];
Node_12 [shape=record,label="{12\:\ 0x002f|if (r8 == 10) goto L_0x0035\l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|switch(r8) \{\l    case 4: goto L_0x0035;\l    case 5: goto L_0x0037;\l    case 6: goto L_0x0035;\l    default: goto L_0x0034;\l\}\l}"];
Node_14 [shape=record,label="{14\:\ 0x0035|int r3 = \-r1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0037|int r3 = (\-r1) \/ 2\l}"];
Node_16 [shape=record,label="{16\:\ 0x003a|PHI: r3 \l  PHI: (r3v2 int) = (r3v3 int), (r3v4 int), (r3v1 int) binds: [B:15:0x0037, B:14:0x0035, B:13:0x0031] A[DONT_GENERATE, DONT_INLINE]\l|r7.setBounds(r2, r3, r0 + r2, r1 + r3)\l}"];
Node_17 [shape=record,label="{17\:\ 0x003f|RETURN\l|return r7\l}"];
MethodNode[shape=record,label="{protected android.graphics.drawable.Drawable org.osmdroid.views.overlay.ItemizedOverlay.boundToHotspot((r6v0 'this' org.osmdroid.views.overlay.ItemizedOverlay A[IMMUTABLE_TYPE, THIS]), (r7v0 android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 org.osmdroid.views.overlay.OverlayItem$HotspotPlace A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_3 -> Node_6;
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_13 -> Node_15;
Node_13 -> Node_16;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

