digraph "CFG fororg.osmdroid.views.overlay.ItemizedOverlay.isEventOnItem(Lorg\/osmdroid\/views\/overlay\/OverlayItem;IILorg\/osmdroid\/views\/MapView;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: INVOKE  (r1 I:org.osmdroid.views.Projection) = (r12 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL \l0x0008: INVOKE  (r2 I:org.osmdroid.api.IGeoPoint) = (r9 I:org.osmdroid.views.overlay.OverlayItem) org.osmdroid.views.overlay.OverlayItem.getPoint():org.osmdroid.api.IGeoPoint type: VIRTUAL \l0x000c: IGET  (r3 I:android.graphics.Point) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mCurScreenCoords android.graphics.Point \l0x000e: INVOKE  \l  (r1 I:org.osmdroid.views.Projection)\l  (r2 I:org.osmdroid.api.IGeoPoint)\l  (r3 I:android.graphics.Point)\l org.osmdroid.views.Projection.toPixels(org.osmdroid.api.IGeoPoint, android.graphics.Point):android.graphics.Point type: VIRTUAL \l0x0011: IGET  (r1 I:boolean) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mDrawFocusedItem boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|0x0015: IGET  (r1 I:Item) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mFocusedItem org.osmdroid.views.overlay.OverlayItem \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_7 [shape=record,label="{7\:\ 0x0019|0x0019: CONST  (r0 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: INVOKE  (r1 I:android.graphics.drawable.Drawable) = (r9 I:org.osmdroid.views.overlay.OverlayItem), (r0 I:int) org.osmdroid.views.overlay.OverlayItem.getMarker(int):android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|0x001e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0024 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|0x0020: INVOKE  (r1 I:android.graphics.drawable.Drawable) = \l  (r8 I:org.osmdroid.views.overlay.ItemizedOverlay)\l  (r0 I:int)\l org.osmdroid.views.overlay.ItemizedOverlay.getDefaultMarker(int):android.graphics.drawable.Drawable type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0024|0x0024: INVOKE  (r9 I:org.osmdroid.views.overlay.OverlayItem$HotspotPlace) = (r9 I:org.osmdroid.views.overlay.OverlayItem) org.osmdroid.views.overlay.OverlayItem.getMarkerHotspot():org.osmdroid.views.overlay.OverlayItem$HotspotPlace type: VIRTUAL \l0x0028: INVOKE  \l  (r8 I:org.osmdroid.views.overlay.ItemizedOverlay)\l  (r1 I:android.graphics.drawable.Drawable)\l  (r9 I:org.osmdroid.views.overlay.OverlayItem$HotspotPlace)\l org.osmdroid.views.overlay.ItemizedOverlay.boundToHotspot(android.graphics.drawable.Drawable, org.osmdroid.views.overlay.OverlayItem$HotspotPlace):android.graphics.drawable.Drawable type: VIRTUAL \l0x002b: IGET  (r9 I:android.graphics.Rect) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mRect android.graphics.Rect \l0x002d: INVOKE  \l  (r1 I:android.graphics.drawable.Drawable)\l  (r9 I:android.graphics.Rect)\l android.graphics.drawable.Drawable.copyBounds(android.graphics.Rect):void type: VIRTUAL \l0x0030: IGET  (r9 I:android.graphics.Rect) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mRect android.graphics.Rect \l0x0032: IGET  (r0 I:android.graphics.Point) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mCurScreenCoords android.graphics.Point \l0x0034: IGET  (r0 I:int) = (r0 I:android.graphics.Point) android.graphics.Point.x int \l0x0036: IGET  (r1 I:android.graphics.Point) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mCurScreenCoords android.graphics.Point \l0x0038: IGET  (r1 I:int) = (r1 I:android.graphics.Point) android.graphics.Point.y int \l0x003a: INVOKE  (r9 I:android.graphics.Rect), (r0 I:int), (r1 I:int) android.graphics.Rect.offset(int, int):void type: VIRTUAL \l0x003d: IGET  (r2 I:android.graphics.Rect) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mRect android.graphics.Rect \l0x003f: IGET  (r9 I:android.graphics.Point) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mCurScreenCoords android.graphics.Point \l0x0041: IGET  (r3 I:int) = (r9 I:android.graphics.Point) android.graphics.Point.x int \l0x0043: IGET  (r9 I:android.graphics.Point) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mCurScreenCoords android.graphics.Point \l0x0045: IGET  (r4 I:int) = (r9 I:android.graphics.Point) android.graphics.Point.y int \l0x0047: INVOKE  (r9 I:float) = (r12 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMapOrientation():float type: VIRTUAL \l0x004b: NEG  (r9 I:float) = (r9 I:float) \l0x004c: CAST  (r5 I:double) = (double) (r9 I:float) \l0x004d: IGET  (r7 I:android.graphics.Rect) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mOrientedMarkerRect android.graphics.Rect \l0x004f: INVOKE  \l  (r2 I:android.graphics.Rect)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:double)\l  (r7 I:android.graphics.Rect)\l org.osmdroid.util.RectL.getBounds(android.graphics.Rect, int, int, double, android.graphics.Rect):android.graphics.Rect type: STATIC \l0x0052: IGET  (r9 I:android.graphics.Rect) = (r8 I:org.osmdroid.views.overlay.ItemizedOverlay) org.osmdroid.views.overlay.ItemizedOverlay.mOrientedMarkerRect android.graphics.Rect \l0x0054: INVOKE  (r9 I:boolean) = (r9 I:android.graphics.Rect), (r10 I:int), (r11 I:int) android.graphics.Rect.contains(int, int):boolean type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0058|0x0058: RETURN  (r9 I:boolean) \l}"];
MethodNode[shape=record,label="{protected boolean org.osmdroid.views.overlay.ItemizedOverlay.isEventOnItem((r8 'this' I:org.osmdroid.views.overlay.ItemizedOverlay A[IMMUTABLE_TYPE, THIS]), (r9 I:Item A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(TItem;II, Lorg\/osmdroid\/views\/MapView;, )Z]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
}

