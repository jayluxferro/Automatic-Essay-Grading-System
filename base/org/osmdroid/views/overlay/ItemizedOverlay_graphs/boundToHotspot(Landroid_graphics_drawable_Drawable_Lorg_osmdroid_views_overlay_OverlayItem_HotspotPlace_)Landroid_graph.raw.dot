digraph "CFG fororg.osmdroid.views.overlay.ItemizedOverlay.boundToHotspot(Landroid\/graphics\/drawable\/Drawable;Lorg\/osmdroid\/views\/overlay\/OverlayItem$HotspotPlace;)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0004 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: SGET  (r8 I:org.osmdroid.views.overlay.OverlayItem$HotspotPlace) =  org.osmdroid.views.overlay.OverlayItem.HotspotPlace.BOTTOM_CENTER org.osmdroid.views.overlay.OverlayItem$HotspotPlace \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: INVOKE  (r0 I:int) = (r7 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicWidth():int type: VIRTUAL \l0x0008: INVOKE  (r1 I:int) = (r7 I:android.graphics.drawable.Drawable) android.graphics.drawable.Drawable.getIntrinsicHeight():int type: VIRTUAL \l0x000c: SGET  (r2 I:int[]) =  org.osmdroid.views.overlay.ItemizedOverlay.1.$SwitchMap$org$osmdroid$views$overlay$OverlayItem$HotspotPlace int[] \l0x000e: INVOKE  (r3 I:int) = (r8 I:org.osmdroid.views.overlay.OverlayItem$HotspotPlace) org.osmdroid.views.overlay.OverlayItem.HotspotPlace.ordinal():int type: VIRTUAL \l0x0012: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x0014: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: CONST  (r4 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|0x0016: SWITCH  \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[5, 6, 7, 8, 9, 10] t:[0x001d, 0x001d, 0x001d, 0x001b, 0x001b, 0x001b] \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: NEG  (r2 I:int) = (r0 I:int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|0x001d: NEG  (r2 I:int) = (r0 I:int) \l0x001e: ARITH  (r2 I:int) = (r2 I:int) \/ (r4 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: SGET  (r5 I:int[]) =  org.osmdroid.views.overlay.ItemizedOverlay.1.$SwitchMap$org$osmdroid$views$overlay$OverlayItem$HotspotPlace int[] \l0x0021: INVOKE  (r8 I:int) = (r8 I:org.osmdroid.views.overlay.OverlayItem$HotspotPlace) org.osmdroid.views.overlay.OverlayItem.HotspotPlace.ordinal():int type: VIRTUAL \l0x0025: AGET  (r8 I:?[int, float]) = (r5 I:?[int, float][]), (r8 I:?[int, short, byte, char]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0027|0x0027: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0037 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: CONST  (r5 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0037 \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: CONST  (r5 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x002f|0x002f: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0035 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0031|0x0031: SWITCH  \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[4, 5, 6] t:[0x0035, 0x0037, 0x0035] \l}"];
Node_15 [shape=record,label="{15\:\ 0x0035|0x0035: NEG  (r3 I:int) = (r1 I:int) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0037|0x0037: NEG  (r8 I:int) = (r1 I:int) \l0x0038: ARITH  (r3 I:int) = (r8 I:int) \/ (2 int) \l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|0x003a: ARITH  (r0 I:int) = (r0 I:int) + (r2 I:int) \l0x003b: ARITH  (r1 I:int) = (r1 I:int) + (r3 I:int) \l0x003c: INVOKE  \l  (r7 I:android.graphics.drawable.Drawable)\l  (r2 I:int)\l  (r3 I:int)\l  (r0 I:int)\l  (r1 I:int)\l android.graphics.drawable.Drawable.setBounds(int, int, int, int):void type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|0x003f: RETURN  (r7 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{protected android.graphics.drawable.Drawable org.osmdroid.views.overlay.ItemizedOverlay.boundToHotspot((r6 'this' I:org.osmdroid.views.overlay.ItemizedOverlay A[IMMUTABLE_TYPE, THIS]), (r7 I:android.graphics.drawable.Drawable A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.osmdroid.views.overlay.OverlayItem$HotspotPlace A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_3 -> Node_6;
Node_4 -> Node_7;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_16;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_15;
Node_13 -> Node_16;
Node_13 -> Node_17;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
}

