digraph "CFG fororg.osmdroid.views.overlay.ItemizedOverlay.onSingleTapConfirmed(Landroid\/view\/MotionEvent;Lorg\/osmdroid\/views\/MapView;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = size()\lint r1 = java.lang.Math.round(r6.getX())\lint r2 = java.lang.Math.round(r6.getY())\lr3 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:7:0x0029] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0015\-\>B:7:0x0029\l|if (r3 \>= r0) goto L_0x002c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0017}"];
Node_3 [shape=record,label="{3\:\ 0x001f|if (isEventOnItem(getItem(r3), r1, r2, r7) == false) goto L_0x0029\l}"];
Node_4 [shape=record,label="{4\:\ 0x0021}"];
Node_5 [shape=record,label="{5\:\ 0x0025|if (onTap(r3) == false) goto L_0x0029\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|RETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x0029|LOOP_END\lLOOP:0: B:1:0x0015\-\>B:7:0x0029\l|int r3 = r3 + 1\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c}"];
Node_9 [shape=record,label="{9\:\ 0x0030|RETURN\l|return super.onSingleTapConfirmed(r6, r7)\l}"];
Node_10 [shape=record,label="{10\:\ 0x002c|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0027|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0029|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0029|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.overlay.ItemizedOverlay.onSingleTapConfirmed((r5v0 'this' org.osmdroid.views.overlay.ItemizedOverlay A[IMMUTABLE_TYPE, THIS]), (r6v0 android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_12;
Node_4 -> Node_5;
Node_5 -> Node_11[style=dashed];
Node_5 -> Node_13;
Node_7 -> Node_1;
Node_8 -> Node_9;
Node_10 -> Node_8;
Node_11 -> Node_6;
Node_12 -> Node_7;
Node_13 -> Node_7;
}

