digraph "CFG fororg.osmdroid.views.overlay.compass.CompassOverlay.\<init\>(Landroid\/content\/Context;Lorg\/osmdroid\/views\/overlay\/compass\/IOrientationProvider;Lorg\/osmdroid\/views\/MapView;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r5 I:org.osmdroid.views.overlay.Overlay) org.osmdroid.views.overlay.Overlay.\<init\>():void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:android.graphics.Paint) =  android.graphics.Paint \l0x0005: CONST  (r1 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0006: INVOKE  (r0 I:android.graphics.Paint), (r1 I:int) android.graphics.Paint.\<init\>(int):void type: DIRECT \l0x0009: IPUT  \l  (r0 I:android.graphics.Paint)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.sSmoothPaint android.graphics.Paint \l0x000b: NEW_INSTANCE  (r0 I:android.graphics.Matrix) =  android.graphics.Matrix \l0x000d: INVOKE  (r0 I:android.graphics.Matrix) android.graphics.Matrix.\<init\>():void type: DIRECT \l0x0010: IPUT  \l  (r0 I:android.graphics.Matrix)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mCompassMatrix android.graphics.Matrix \l0x0012: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: IPUT  \l  (r0 I:boolean)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.wasEnabledOnPause boolean \l0x0015: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0016: IPUT  \l  (r2 I:int)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mMode int \l0x0018: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (2143289344(0x7fc00000, float:NaN) ?[int, float, short, byte, char])\l \l0x001a: IPUT  \l  (r3 I:float)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mAzimuth float \l0x001c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001d: IPUT  \l  (r3 I:float)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mAzimuthOffset float \l0x001f: IPUT  \l  (r0 I:boolean)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mInCenter boolean \l0x0021: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1108082688(0x420c0000, float:35.0) ?[int, float, short, byte, char])\l \l0x0023: IPUT  \l  (r0 I:float)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mCompassCenterX float \l0x0025: IPUT  \l  (r0 I:float)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mCompassCenterY float \l0x0027: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1101004800(0x41a00000, float:20.0) ?[int, float, short, byte, char])\l \l0x0029: IPUT  \l  (r0 I:float)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mCompassRadius float \l0x002b: CONST  (r3 I:?[long, double]) = (0 ?[long, double]) \l0x002d: IPUT  \l  (r3 I:long)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mLastRender long \l0x002f: IPUT  \l  (r2 I:boolean)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mOptionsMenuEnabled boolean \l0x0031: INVOKE  (r0 I:android.content.res.Resources) = (r6 I:android.content.Context) android.content.Context.getResources():android.content.res.Resources type: VIRTUAL \l0x0035: INVOKE  (r0 I:android.util.DisplayMetrics) = (r0 I:android.content.res.Resources) android.content.res.Resources.getDisplayMetrics():android.util.DisplayMetrics type: VIRTUAL \l0x0039: IGET  (r0 I:float) = (r0 I:android.util.DisplayMetrics) android.util.DisplayMetrics.density float \l0x003b: IPUT  \l  (r0 I:float)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mScale float \l0x003d: IPUT  \l  (r8 I:org.osmdroid.views.MapView)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mMapView org.osmdroid.views.MapView \l0x003f: CONST_STR  (r8 I:java.lang.String) =  \"window\" \l0x0041: INVOKE  (r6 I:java.lang.Object) = (r6 I:android.content.Context), (r8 I:java.lang.String) android.content.Context.getSystemService(java.lang.String):java.lang.Object type: VIRTUAL \l0x0045: CHECK_CAST  (r6 I:android.view.WindowManager) = (android.view.WindowManager) (r6 I:?[OBJECT, ARRAY]) \l0x0047: INVOKE  (r6 I:android.view.Display) = (r6 I:android.view.WindowManager) android.view.WindowManager.getDefaultDisplay():android.view.Display type: INTERFACE \l0x004b: IPUT  \l  (r6 I:android.view.Display)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mDisplay android.view.Display \l0x004d: INVOKE  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay) org.osmdroid.views.overlay.compass.CompassOverlay.createCompassFramePicture():void type: DIRECT \l0x0050: IGET  (r6 I:int) = (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay) org.osmdroid.views.overlay.compass.CompassOverlay.mMode int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0052|0x0052: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0058 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0054|0x0054: INVOKE  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay) org.osmdroid.views.overlay.compass.CompassOverlay.createCompassRosePicture():void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0058|0x0058: INVOKE  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay) org.osmdroid.views.overlay.compass.CompassOverlay.createPointerPicture():void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x005b|0x005b: IGET  (r6 I:android.graphics.Bitmap) = (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay) org.osmdroid.views.overlay.compass.CompassOverlay.mCompassFrameBitmap android.graphics.Bitmap \l0x005d: INVOKE  (r6 I:int) = (r6 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l0x0061: ARITH  (r6 I:int) = (r6 I:int) \/ (r1 I:int) \l0x0062: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0063: CONST  (r8 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l0x0065: ARITH  (r6 I:float) = (r6 I:float) \- (r8 I:float) \l0x0066: IPUT  \l  (r6 I:float)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mCompassFrameCenterX float \l0x0068: IGET  (r6 I:android.graphics.Bitmap) = (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay) org.osmdroid.views.overlay.compass.CompassOverlay.mCompassFrameBitmap android.graphics.Bitmap \l0x006a: INVOKE  (r6 I:int) = (r6 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x006e: ARITH  (r6 I:int) = (r6 I:int) \/ (r1 I:int) \l0x006f: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0070: ARITH  (r6 I:float) = (r6 I:float) \- (r8 I:float) \l0x0071: IPUT  \l  (r6 I:float)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mCompassFrameCenterY float \l0x0073: IGET  (r6 I:android.graphics.Bitmap) = (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay) org.osmdroid.views.overlay.compass.CompassOverlay.mCompassRoseBitmap android.graphics.Bitmap \l0x0075: INVOKE  (r6 I:int) = (r6 I:android.graphics.Bitmap) android.graphics.Bitmap.getWidth():int type: VIRTUAL \l0x0079: ARITH  (r6 I:int) = (r6 I:int) \/ (r1 I:int) \l0x007a: CAST  (r6 I:float) = (float) (r6 I:int) \l0x007b: ARITH  (r6 I:float) = (r6 I:float) \- (r8 I:float) \l0x007c: IPUT  \l  (r6 I:float)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mCompassRoseCenterX float \l0x007e: IGET  (r6 I:android.graphics.Bitmap) = (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay) org.osmdroid.views.overlay.compass.CompassOverlay.mCompassRoseBitmap android.graphics.Bitmap \l0x0080: INVOKE  (r6 I:int) = (r6 I:android.graphics.Bitmap) android.graphics.Bitmap.getHeight():int type: VIRTUAL \l0x0084: ARITH  (r6 I:int) = (r6 I:int) \/ (r1 I:int) \l0x0085: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0086: ARITH  (r6 I:float) = (r6 I:float) \- (r8 I:float) \l0x0087: IPUT  \l  (r6 I:float)\l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l org.osmdroid.views.overlay.compass.CompassOverlay.mCompassRoseCenterY float \l0x0089: INVOKE  \l  (r5 I:org.osmdroid.views.overlay.compass.CompassOverlay)\l  (r7 I:org.osmdroid.views.overlay.compass.IOrientationProvider)\l org.osmdroid.views.overlay.compass.CompassOverlay.setOrientationProvider(org.osmdroid.views.overlay.compass.IOrientationProvider):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x008c|0x008c: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.compass.CompassOverlay.\<init\>((r5 'this' I:org.osmdroid.views.overlay.compass.CompassOverlay A[IMMUTABLE_TYPE, THIS]), (r6 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.osmdroid.views.overlay.compass.IOrientationProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

