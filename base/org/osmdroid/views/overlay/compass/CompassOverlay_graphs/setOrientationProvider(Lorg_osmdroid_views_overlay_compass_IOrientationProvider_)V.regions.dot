digraph "CFG fororg.osmdroid.views.overlay.compass.CompassOverlay.setOrientationProvider(Lorg\/osmdroid\/views\/overlay\/compass\/IOrientationProvider;)V" {
subgraph cluster_Region_977738974 {
label = "R(1:(2:(3:(1:3)|4|5)|(1:7)))";
node [shape=record,color=blue];
subgraph cluster_Region_352780907 {
label = "R(2:(3:(1:3)|4|5)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1701680628 {
label = "IF [B:0:0x0000] THEN: R(3:(1:3)|4|5) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r2 != null) goto L_0x0002\l}"];
subgraph cluster_Region_1903023166 {
label = "R(3:(1:3)|4|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1934530337 {
label = "IF [B:2:0x0006] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|if (isCompassEnabled() == true) goto L_0x0008\l}"];
subgraph cluster_Region_1593296761 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|r1.mOrientationProvider.stopOrientationProvider()\l}"];
}
}
Node_4 [shape=record,label="{4\:\ 0x000d|r1.mOrientationProvider = r2\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1471953766 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0017|throw new java.lang.RuntimeException(\"You must pass an IOrientationProvider to setOrientationProvider()\")\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0002}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0010}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.compass.CompassOverlay.setOrientationProvider((r1v0 'this' org.osmdroid.views.overlay.compass.CompassOverlay A[IMMUTABLE_TYPE, THIS]), (r2v0 org.osmdroid.views.overlay.compass.IOrientationProvider A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.lang.RuntimeException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_1 -> Node_2;
Node_6 -> Node_7;
}

