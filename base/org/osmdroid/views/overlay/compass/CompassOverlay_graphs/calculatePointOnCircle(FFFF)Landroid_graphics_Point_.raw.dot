digraph "CFG fororg.osmdroid.views.overlay.compass.CompassOverlay.calculatePointOnCircle(FFFF)Landroid\/graphics\/Point;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEG  (r8 I:float) = (r8 I:float) \l0x0001: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1119092736(0x42b40000, float:90.0) ?[int, float, short, byte, char])\l \l0x0003: ARITH  (r8 I:float) = (r8 I:float) + (r0 I:float) \l0x0004: CAST  (r0 I:double) = (double) (r8 I:float) \l0x0005: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x0009: CAST  (r7 I:double) = (double) (r7 I:float) \l0x000a: INVOKE  (r2 I:double) = (r0 I:double) java.lang.Math.cos(double):double type: STATIC \l0x000e: ARITH  (r2 I:double) = (r2 I:double) * (r7 I:double) \l0x0010: CAST  (r2 I:int) = (int) (r2 I:double) \l0x0011: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0015: ARITH  (r7 I:double) = (r7 I:double) * (r0 I:double) \l0x0017: CAST  (r7 I:int) = (int) (r7 I:double) \l0x0018: NEW_INSTANCE  (r8 I:android.graphics.Point) =  android.graphics.Point \l0x001a: CAST  (r5 I:int) = (int) (r5 I:float) \l0x001b: ARITH  (r5 I:int) = (r5 I:int) + (r2 I:int) \l0x001c: CAST  (r6 I:int) = (int) (r6 I:float) \l0x001d: ARITH  (r6 I:int) = (r6 I:int) \- (r7 I:int) \l0x001e: INVOKE  (r8 I:android.graphics.Point), (r5 I:int), (r6 I:int) android.graphics.Point.\<init\>(int, int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0021|0x0021: RETURN  (r8 I:android.graphics.Point) \l}"];
MethodNode[shape=record,label="{private android.graphics.Point org.osmdroid.views.overlay.compass.CompassOverlay.calculatePointOnCircle((r4 'this' I:org.osmdroid.views.overlay.compass.CompassOverlay A[IMMUTABLE_TYPE, THIS]), (r5 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

