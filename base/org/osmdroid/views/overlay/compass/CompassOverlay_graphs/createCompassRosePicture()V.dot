digraph "CFG fororg.osmdroid.views.overlay.compass.CompassOverlay.createCompassRosePicture()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|android.graphics.Paint r0 = new android.graphics.Paint()\lr0.setColor(\-6291456)\lr0.setAntiAlias(true)\lr0.setStyle(android.graphics.Paint.Style.FILL)\lr0.setAlpha(220)\landroid.graphics.Paint r3 = new android.graphics.Paint()\lr3.setColor(android.support.p000v4.view.ViewCompat.MEASURED_STATE_MASK)\lr3.setAntiAlias(true)\lr3.setStyle(android.graphics.Paint.Style.FILL)\lr3.setAlpha(220)\landroid.graphics.Paint r4 = new android.graphics.Paint()\lr4.setColor(\-1)\lr4.setAntiAlias(true)\lr4.setStyle(android.graphics.Paint.Style.FILL)\lr4.setAlpha(220)\lint r1 = (int) (r9.mScale * 50.0f)\lint r2 = r1 \/ 2\l}"];
Node_1 [shape=record,label="{1\:\ 0x004c|if (r9.mCompassRoseBitmap == null) goto L_0x0053\l}"];
Node_2 [shape=record,label="{2\:\ 0x004e|r9.mCompassRoseBitmap.recycle()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0053|r9.mCompassRoseBitmap = android.graphics.Bitmap.createBitmap(r1, r1, android.graphics.Bitmap.Config.ARGB_8888)\landroid.graphics.Canvas r1 = new android.graphics.Canvas(r9.mCompassRoseBitmap)\landroid.graphics.Path r5 = new android.graphics.Path()\lfloat r2 = (float) r2\lr5.moveTo(r2, r2 \- (r9.mScale * 17.0f))\lr5.lineTo((r9.mScale * 4.0f) + r2, r2)\lr5.lineTo(r2 \- (r9.mScale * 4.0f), r2)\lr5.lineTo(r2, r2 \- (r9.mScale * 17.0f))\lr5.close()\lr1.drawPath(r5, r0)\landroid.graphics.Path r0 = new android.graphics.Path()\lr0.moveTo(r2, (r9.mScale * 17.0f) + r2)\lr0.lineTo((r9.mScale * 4.0f) + r2, r2)\lr0.lineTo(r2 \- (r9.mScale * 4.0f), r2)\lr0.lineTo(r2, (r9.mScale * 17.0f) + r2)\lr0.close()\lr1.drawPath(r0, r3)\lr1.drawCircle(r2, r2, 2.0f, r4)\l}"];
Node_4 [shape=record,label="{4\:\ 0x00c6|RETURN\l|return\l}"];
MethodNode[shape=record,label="{private void org.osmdroid.views.overlay.compass.CompassOverlay.createCompassRosePicture((r9v0 'this' org.osmdroid.views.overlay.compass.CompassOverlay A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

