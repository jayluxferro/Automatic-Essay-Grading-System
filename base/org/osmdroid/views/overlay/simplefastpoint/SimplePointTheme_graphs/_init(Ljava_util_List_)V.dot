digraph "CFG fororg.osmdroid.views.overlay.simplefastpoint.SimplePointTheme.\<init\>(Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = true\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r5.size() == 0) goto L_0x0012\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if ((r5.get(0) instanceof org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint) == false) goto L_0x0012\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|r0 = true\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|r0 = false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|PHI: r0 \l  PHI: (r0v1 boolean) = (r0v2 boolean), (r0v5 boolean) binds: [B:5:0x0012, B:4:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|if (r5.size() == 0) goto L_0x0022\l}"];
Node_8 [shape=record,label="{8\:\ 0x0019}"];
Node_9 [shape=record,label="{9\:\ 0x001f|if ((r5.get(0) instanceof org.osmdroid.views.overlay.simplefastpoint.StyledLabelledGeoPoint) == false) goto L_0x0022\l}"];
Node_10 [shape=record,label="{10\:\ 0x0022|r1 = false\l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|PHI: r1 \l  PHI: (r1v1 boolean) = (r1v2 boolean), (r1v0 boolean) binds: [B:10:0x0022, B:9:0x001f] A[DONT_GENERATE, DONT_INLINE]\l|this(r5, r0, r1)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.simplefastpoint.SimplePointTheme.\<init\>((r4v0 'this' org.osmdroid.views.overlay.simplefastpoint.SimplePointTheme A[IMMUTABLE_TYPE, THIS]), (r5v0 java.util.List\<org.osmdroid.api.IGeoPoint\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/List\<, Lorg\/osmdroid\/api\/IGeoPoint;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
}

