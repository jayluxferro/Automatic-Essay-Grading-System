digraph "CFG fororg.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.computeGrid(Lorg\/osmdroid\/views\/MapView;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.osmdroid.util.BoundingBox) = (r14 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getBoundingBox():org.osmdroid.util.BoundingBox type: VIRTUAL \l0x0004: IPUT  \l  (r0 I:org.osmdroid.util.BoundingBox)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.startBoundingBox org.osmdroid.util.BoundingBox \l0x0006: INVOKE  (r1 I:org.osmdroid.views.Projection) = (r14 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL \l0x000a: IPUT  \l  (r1 I:org.osmdroid.views.Projection)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.startProjection org.osmdroid.views.Projection \l0x000c: INVOKE  (r1 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatNorth():double type: VIRTUAL \l0x0010: IGET  (r3 I:org.osmdroid.util.BoundingBox) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.prevBoundingBox org.osmdroid.util.BoundingBox \l0x0012: INVOKE  (r3 I:double) = (r3 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatNorth():double type: VIRTUAL \l0x0016: CMP_L  (r1 I:int) = (r1 I:double), (r3 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0044 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: INVOKE  (r1 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatSouth():double type: VIRTUAL \l0x001e: IGET  (r3 I:org.osmdroid.util.BoundingBox) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.prevBoundingBox org.osmdroid.util.BoundingBox \l0x0020: INVOKE  (r3 I:double) = (r3 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatSouth():double type: VIRTUAL \l0x0024: CMP_L  (r1 I:int) = (r1 I:double), (r3 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0026|0x0026: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0044 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: INVOKE  (r1 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonWest():double type: VIRTUAL \l0x002c: IGET  (r3 I:org.osmdroid.util.BoundingBox) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.prevBoundingBox org.osmdroid.util.BoundingBox \l0x002e: INVOKE  (r3 I:double) = (r3 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonWest():double type: VIRTUAL \l0x0032: CMP_L  (r1 I:int) = (r1 I:double), (r3 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|0x0034: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0044 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|0x0036: INVOKE  (r1 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonEast():double type: VIRTUAL \l0x003a: IGET  (r3 I:org.osmdroid.util.BoundingBox) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.prevBoundingBox org.osmdroid.util.BoundingBox \l0x003c: INVOKE  (r3 I:double) = (r3 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonEast():double type: VIRTUAL \l0x0040: CMP_L  (r1 I:int) = (r1 I:double), (r3 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0042|0x0042: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0161 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0044|0x0044: NEW_INSTANCE  (r1 I:org.osmdroid.util.BoundingBox) =  org.osmdroid.util.BoundingBox \l0x0046: INVOKE  (r3 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatNorth():double type: VIRTUAL \l0x004a: INVOKE  (r5 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonEast():double type: VIRTUAL \l0x004e: INVOKE  (r7 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatSouth():double type: VIRTUAL \l0x0052: INVOKE  (r9 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonWest():double type: VIRTUAL \l0x0056: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0057: INVOKE  \l  (r2 I:org.osmdroid.util.BoundingBox)\l  (r3 I:double)\l  (r5 I:double)\l  (r7 I:double)\l  (r9 I:double)\l org.osmdroid.util.BoundingBox.\<init\>(double, double, double, double):void type: DIRECT \l0x005a: IPUT  \l  (r1 I:org.osmdroid.util.BoundingBox)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.prevBoundingBox org.osmdroid.util.BoundingBox \l0x005c: IGET  (r1 I:boolean[][]) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.gridBool boolean[][] \l0x005e: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x005f|0x005f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0080 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0061|0x0061: IGET  (r1 I:int) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.viewHei int \l0x0063: INVOKE  (r3 I:int) = (r14 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getHeight():int type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0067|0x0067: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0080 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0069|0x0069: IGET  (r1 I:int) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.viewWid int \l0x006b: INVOKE  (r3 I:int) = (r14 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getWidth():int type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x006f|0x006f: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0072 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0072|0x0072: IGET  (r1 I:boolean[][]) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.gridBool boolean[][] \l0x0074: ARRAY_LENGTH  (r3 I:int) = (r1 I:?[]) \l0x0075: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_16 [shape=record,label="{16\:\ 0x0076|0x0076: IF  (r4 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:19:0x0083 \l}"];
Node_17 [shape=record,label="{17\:\ 0x0078|0x0078: AGET  (r5 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x007a: INVOKE  (r5 I:boolean[]), (r2 I:boolean) java.util.Arrays.fill(boolean[], boolean):void type: STATIC \l0x007d: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0080|0x0080: INVOKE  \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l  (r14 I:org.osmdroid.views.MapView)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.updateGrid(org.osmdroid.views.MapView):void type: DIRECT \l}"];
Node_19 [shape=record,label="{19\:\ 0x0083|0x0083: NEW_INSTANCE  (r1 I:android.graphics.Point) =  android.graphics.Point \l0x0085: INVOKE  (r1 I:android.graphics.Point) android.graphics.Point.\<init\>():void type: DIRECT \l0x0088: INVOKE  (r14 I:org.osmdroid.views.Projection) = (r14 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL \l0x008c: NEW_INSTANCE  (r3 I:java.util.ArrayList) =  java.util.ArrayList \l0x008e: INVOKE  (r3 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0091: IPUT  \l  (r3 I:java.util.List\<org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$StyledLabelledPoint\>)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.gridIndex java.util.List \l0x0093: IPUT  \l  (r2 I:int)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.numLabels int \l0x0095: IGET  (r2 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mPointList org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter \l0x0097: INVOKE  (r2 I:java.util.Iterator) = \l  (r2 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_20 [shape=record,label="{20\:\ 0x009b|0x009b: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_21 [shape=record,label="{21\:\ 0x009f|0x009f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x0161 \l}"];
Node_22 [shape=record,label="{22\:\ 0x00a1|0x00a1: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x00a5: CHECK_CAST  (r3 I:org.osmdroid.api.IGeoPoint) = (org.osmdroid.api.IGeoPoint) (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_23 [shape=record,label="{23\:\ 0x00a7|0x00a7: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00aa \l}"];
Node_25 [shape=record,label="{25\:\ 0x00aa|0x00aa: INVOKE  (r4 I:double) = (r3 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x00ae: INVOKE  (r6 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatSouth():double type: VIRTUAL \l0x00b2: CMP_L  (r4 I:int) = (r4 I:double), (r6 I:double) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00b4|0x00b4: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x009b \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b6|0x00b6: INVOKE  (r4 I:double) = (r3 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x00ba: INVOKE  (r6 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatNorth():double type: VIRTUAL \l0x00be: CMP_G  (r4 I:int) = (r4 I:double), (r6 I:double) \l}"];
Node_28 [shape=record,label="{28\:\ 0x00c0|0x00c0: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:20:0x009b \l}"];
Node_29 [shape=record,label="{29\:\ 0x00c2|0x00c2: INVOKE  (r4 I:double) = (r3 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x00c6: INVOKE  (r6 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonWest():double type: VIRTUAL \l0x00ca: CMP_L  (r4 I:int) = (r4 I:double), (r6 I:double) \l}"];
Node_30 [shape=record,label="{30\:\ 0x00cc|0x00cc: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:20:0x009b \l}"];
Node_31 [shape=record,label="{31\:\ 0x00ce|0x00ce: INVOKE  (r4 I:double) = (r3 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x00d2: INVOKE  (r6 I:double) = (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonEast():double type: VIRTUAL \l0x00d6: CMP_G  (r4 I:int) = (r4 I:double), (r6 I:double) \l}"];
Node_32 [shape=record,label="{32\:\ 0x00d8|0x00d8: IF  (r4 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:20:0x009b \l}"];
Node_33 [shape=record,label="{33\:\ 0x00da|0x00da: INVOKE  \l  (r14 I:org.osmdroid.views.Projection)\l  (r3 I:org.osmdroid.api.IGeoPoint)\l  (r1 I:android.graphics.Point)\l org.osmdroid.views.Projection.toPixels(org.osmdroid.api.IGeoPoint, android.graphics.Point):android.graphics.Point type: VIRTUAL \l0x00dd: IGET  (r4 I:int) = (r1 I:android.graphics.Point) android.graphics.Point.x int \l0x00df: CAST  (r4 I:float) = (float) (r4 I:int) \l0x00e0: IGET  (r5 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mStyle org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions \l0x00e2: IGET  (r5 I:int) = \l  (r5 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.mCellSize int \l0x00e4: CAST  (r5 I:float) = (float) (r5 I:int) \l0x00e5: ARITH  (r4 I:float) = (r4 I:float) \/ (r5 I:float) \l0x00e6: CAST  (r4 I:double) = (double) (r4 I:float) \l0x00e7: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.floor(double):double type: STATIC \l0x00eb: CAST  (r4 I:int) = (int) (r4 I:double) \l0x00ec: IGET  (r5 I:int) = (r1 I:android.graphics.Point) android.graphics.Point.y int \l0x00ee: CAST  (r5 I:float) = (float) (r5 I:int) \l0x00ef: IGET  (r6 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mStyle org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions \l0x00f1: IGET  (r6 I:int) = \l  (r6 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.mCellSize int \l0x00f3: CAST  (r6 I:float) = (float) (r6 I:int) \l0x00f4: ARITH  (r5 I:float) = (r5 I:float) \/ (r6 I:float) \l0x00f5: CAST  (r5 I:double) = (double) (r5 I:float) \l0x00f6: INVOKE  (r5 I:double) = (r5 I:double) java.lang.Math.floor(double):double type: STATIC \l0x00fa: CAST  (r5 I:int) = (int) (r5 I:double) \l0x00fb: IGET  (r6 I:int) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.gridWid int \l}"];
Node_34 [shape=record,label="{34\:\ 0x00fd|0x00fd: IF  (r4 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:20:0x009b \l}"];
Node_35 [shape=record,label="{35\:\ 0x00ff|0x00ff: IGET  (r6 I:int) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.gridHei int \l}"];
Node_36 [shape=record,label="{36\:\ 0x0101|0x0101: IF  (r5 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:20:0x009b \l}"];
Node_37 [shape=record,label="{37\:\ 0x0103|0x0103: IF  (r4 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:20:0x009b \l}"];
Node_38 [shape=record,label="{38\:\ 0x0105|0x0105: IF  (r5 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:20:0x009b \l}"];
Node_39 [shape=record,label="{39\:\ 0x0107|0x0107: IGET  (r6 I:boolean[][]) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.gridBool boolean[][] \l0x0109: AGET  (r6 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x010b: AGET  (r6 I:boolean A[IMMUTABLE_TYPE]) = \l  (r6 I:boolean[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l \l}"];
Node_40 [shape=record,label="{40\:\ 0x010d|0x010d: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:42:0x0110 \l}"];
Node_42 [shape=record,label="{42\:\ 0x0110|0x0110: IGET  (r6 I:boolean[][]) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.gridBool boolean[][] \l0x0112: AGET  (r4 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY][]), (r4 I:?[int, short, byte, char]) \l0x0114: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0115: APUT  \l  (r4 I:boolean[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l  (r11 I:boolean A[IMMUTABLE_TYPE])\l \l0x0117: IGET  (r4 I:java.util.List\<org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$StyledLabelledPoint\>) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.gridIndex java.util.List \l0x0119: NEW_INSTANCE  (r12 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$StyledLabelledPoint) =  org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$StyledLabelledPoint \l0x011b: IGET  (r5 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mPointList org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter \l0x011d: INVOKE  (r5 I:boolean) = \l  (r5 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.isLabelled():boolean type: INTERFACE \l0x0121: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_43 [shape=record,label="{43\:\ 0x0122|0x0122: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x012d \l}"];
Node_44 [shape=record,label="{44\:\ 0x0124|0x0124: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0125: CHECK_CAST  (r5 I:org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint) = (org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint) (r5 I:?[OBJECT, ARRAY]) \l0x0127: INVOKE  (r5 I:java.lang.String) = \l  (r5 I:org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint)\l org.osmdroid.views.overlay.simplefastpoint.LabelledGeoPoint.getLabel():java.lang.String type: VIRTUAL \l0x012b: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_45 [shape=record,label="{45\:\ 0x012d|0x012d: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_46 [shape=record,label="{46\:\ 0x012e|0x012e: IGET  (r5 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mPointList org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter \l0x0130: INVOKE  (r5 I:boolean) = \l  (r5 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.isStyled():boolean type: INTERFACE \l}"];
Node_47 [shape=record,label="{47\:\ 0x0134|0x0134: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:49:0x013f \l}"];
Node_48 [shape=record,label="{48\:\ 0x0136|0x0136: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0137: CHECK_CAST  (r5 I:org.osmdroid.views.overlay.simplefastpoint.StyledLabelledGeoPoint) = (org.osmdroid.views.overlay.simplefastpoint.StyledLabelledGeoPoint) (r5 I:?[OBJECT, ARRAY]) \l0x0139: INVOKE  (r5 I:android.graphics.Paint) = \l  (r5 I:org.osmdroid.views.overlay.simplefastpoint.StyledLabelledGeoPoint)\l org.osmdroid.views.overlay.simplefastpoint.StyledLabelledGeoPoint.getPointStyle():android.graphics.Paint type: VIRTUAL \l0x013d: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_49 [shape=record,label="{49\:\ 0x013f|0x013f: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_50 [shape=record,label="{50\:\ 0x0140|0x0140: IGET  (r5 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mPointList org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter \l0x0142: INVOKE  (r5 I:boolean) = \l  (r5 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.isStyled():boolean type: INTERFACE \l}"];
Node_51 [shape=record,label="{51\:\ 0x0146|0x0146: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:53:0x0150 \l}"];
Node_52 [shape=record,label="{52\:\ 0x0148|0x0148: CHECK_CAST  (r3 I:org.osmdroid.views.overlay.simplefastpoint.StyledLabelledGeoPoint) = (org.osmdroid.views.overlay.simplefastpoint.StyledLabelledGeoPoint) (r3 I:?[OBJECT, ARRAY]) \l0x014a: INVOKE  (r3 I:android.graphics.Paint) = \l  (r3 I:org.osmdroid.views.overlay.simplefastpoint.StyledLabelledGeoPoint)\l org.osmdroid.views.overlay.simplefastpoint.StyledLabelledGeoPoint.getTextStyle():android.graphics.Paint type: VIRTUAL \l0x014e: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l}"];
Node_53 [shape=record,label="{53\:\ 0x0150|0x0150: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_54 [shape=record,label="{54\:\ 0x0151|0x0151: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0152: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0153: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0154: INVOKE  \l  (r5 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$StyledLabelledPoint)\l  (r6 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l  (r7 I:android.graphics.Point)\l  (r8 I:java.lang.String)\l  (r9 I:android.graphics.Paint)\l  (r10 I:android.graphics.Paint)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.StyledLabelledPoint.\<init\>(org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay, android.graphics.Point, java.lang.String, android.graphics.Paint, android.graphics.Paint):void type: DIRECT \l0x0157: INVOKE  (r4 I:java.util.List), (r12 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x015a: IGET  (r3 I:int) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.numLabels int \l0x015c: ARITH  (r3 I:int) = (r3 I:int) + (r11 I:int) \l0x015d: IPUT  \l  (r3 I:int)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.numLabels int \l}"];
Node_55 [shape=record,label="{55\:\ 0x0161|0x0161: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.computeGrid((r13 'this' I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay A[IMMUTABLE_TYPE, THIS]), (r14 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_8;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_55;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_18;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_18;
Node_12 -> Node_13;
Node_13 -> Node_15;
Node_13 -> Node_18[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_19;
Node_17 -> Node_16;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_55;
Node_22 -> Node_23;
Node_23 -> Node_25;
Node_23 -> Node_20[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_20;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_20;
Node_28 -> Node_29[style=dashed];
Node_29 -> Node_30;
Node_30 -> Node_20;
Node_30 -> Node_31[style=dashed];
Node_31 -> Node_32;
Node_32 -> Node_20;
Node_32 -> Node_33[style=dashed];
Node_33 -> Node_34;
Node_34 -> Node_20;
Node_34 -> Node_35[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_20;
Node_36 -> Node_37[style=dashed];
Node_37 -> Node_20;
Node_37 -> Node_38[style=dashed];
Node_38 -> Node_20;
Node_38 -> Node_39[style=dashed];
Node_39 -> Node_40;
Node_40 -> Node_42;
Node_40 -> Node_20[style=dashed];
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48[style=dashed];
Node_47 -> Node_49;
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_51 -> Node_52[style=dashed];
Node_51 -> Node_53;
Node_52 -> Node_54;
Node_53 -> Node_54;
Node_54 -> Node_20;
}

