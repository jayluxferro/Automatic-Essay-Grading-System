digraph "CFG fororg.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.\<init\>(Lorg\/osmdroid\/views\/overlay\/simplefastpoint\/SimpleFastPointOverlay$PointAdapter;Lorg\/osmdroid\/views\/overlay\/simplefastpoint\/SimpleFastPointOverlayOptions;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r13 I:org.osmdroid.views.overlay.Overlay) org.osmdroid.views.overlay.Overlay.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  \l  (r0 I:boolean)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.hasMoved boolean \l0x0006: NEW_INSTANCE  (r0 I:org.osmdroid.util.BoundingBox) =  org.osmdroid.util.BoundingBox \l0x0008: INVOKE  (r0 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.\<init\>():void type: DIRECT \l0x000b: IPUT  \l  (r0 I:org.osmdroid.util.BoundingBox)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.prevBoundingBox org.osmdroid.util.BoundingBox \l0x000d: IPUT  \l  (r15 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mStyle org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions \l0x000f: IPUT  \l  (r14 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mPointList org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter \l0x0011: IGET  (r14 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter) = \l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mPointList org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter \l0x0013: INVOKE  (r14 I:java.util.Iterator) = \l  (r14 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.iterator():java.util.Iterator type: INTERFACE \l0x0017: CONST  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0019: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x001a: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x001b: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x001c|0x001c: INVOKE  (r4 I:boolean) = (r14 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0020|0x0020: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0084 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0022|0x0022: INVOKE  (r4 I:java.lang.Object) = (r14 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0026: CHECK_CAST  (r4 I:org.osmdroid.api.IGeoPoint) = (org.osmdroid.api.IGeoPoint) (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x002b \l}"];
Node_6 [shape=record,label="{6\:\ 0x002b|0x002b: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0039 \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: INVOKE  (r5 I:double) = (r4 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x0031: INVOKE  (r7 I:double) = (r0 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0035: CMP_L  (r5 I:int) = (r5 I:double), (r7 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0037|0x0037: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:10:0x0041 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|0x0039: INVOKE  (r5 I:double) = (r4 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x003d: INVOKE  (r0 I:java.lang.Double) = (r5 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|0x0041: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004f \l}"];
Node_11 [shape=record,label="{11\:\ 0x0043|0x0043: INVOKE  (r5 I:double) = (r4 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x0047: INVOKE  (r7 I:double) = (r3 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x004b: CMP_G  (r5 I:int) = (r5 I:double), (r7 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x004d|0x004d: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:14:0x0057 \l}"];
Node_13 [shape=record,label="{13\:\ 0x004f|0x004f: INVOKE  (r5 I:double) = (r4 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x0053: INVOKE  (r3 I:java.lang.Double) = (r5 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|0x0057: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x0065 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0059|0x0059: INVOKE  (r5 I:double) = (r4 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x005d: INVOKE  (r7 I:double) = (r1 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0061: CMP_L  (r5 I:int) = (r5 I:double), (r7 I:double) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0063|0x0063: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:18:0x006d \l}"];
Node_17 [shape=record,label="{17\:\ 0x0065|0x0065: INVOKE  (r5 I:double) = (r4 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x0069: INVOKE  (r1 I:java.lang.Double) = (r5 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l}"];
Node_18 [shape=record,label="{18\:\ 0x006d|0x006d: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x007b \l}"];
Node_19 [shape=record,label="{19\:\ 0x006f|0x006f: INVOKE  (r5 I:double) = (r4 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x0073: INVOKE  (r7 I:double) = (r2 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0077: CMP_G  (r5 I:int) = (r5 I:double), (r7 I:double) \l}"];
Node_20 [shape=record,label="{20\:\ 0x0079|0x0079: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:1:0x001c \l}"];
Node_21 [shape=record,label="{21\:\ 0x007b|0x007b: INVOKE  (r4 I:double) = (r4 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x007f: INVOKE  (r2 I:java.lang.Double) = (r4 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l}"];
Node_22 [shape=record,label="{22\:\ 0x0084|0x0084: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:24:0x009f \l}"];
Node_23 [shape=record,label="{23\:\ 0x0086|0x0086: NEW_INSTANCE  (r14 I:org.osmdroid.util.BoundingBox) =  org.osmdroid.util.BoundingBox \l0x0088: INVOKE  (r5 I:double) = (r1 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x008c: INVOKE  (r7 I:double) = (r0 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0090: INVOKE  (r9 I:double) = (r2 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0094: INVOKE  (r11 I:double) = (r3 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0098: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0099: INVOKE  \l  (r4 I:org.osmdroid.util.BoundingBox)\l  (r5 I:double)\l  (r7 I:double)\l  (r9 I:double)\l  (r11 I:double)\l org.osmdroid.util.BoundingBox.\<init\>(double, double, double, double):void type: DIRECT \l0x009c: IPUT  \l  (r14 I:org.osmdroid.util.BoundingBox)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mBoundingBox org.osmdroid.util.BoundingBox \l}"];
Node_24 [shape=record,label="{24\:\ 0x009f|0x009f: IPUT  \l  (r15 I:org.osmdroid.util.BoundingBox)\l  (r13 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mBoundingBox org.osmdroid.util.BoundingBox \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a1|0x00a1: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.\<init\>((r13 'this' I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay A[IMMUTABLE_TYPE, THIS]), (r14 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_22;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_1[style=dashed];
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_17;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_20;
Node_20 -> Node_1;
Node_20 -> Node_21[style=dashed];
Node_21 -> Node_1;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_25;
Node_24 -> Node_25;
}

