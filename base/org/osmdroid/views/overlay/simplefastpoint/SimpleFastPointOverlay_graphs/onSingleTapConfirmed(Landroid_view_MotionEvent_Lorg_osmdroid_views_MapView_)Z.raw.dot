digraph "CFG fororg.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.onSingleTapConfirmed(Landroid\/view\/MotionEvent;Lorg\/osmdroid\/views\/MapView;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions) = \l  (r10 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mStyle org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions \l0x0002: IGET  (r0 I:boolean) = \l  (r0 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.mClickable boolean \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: RETURN  (r1 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: CONST  (r2 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000a: NEW_INSTANCE  (r3 I:android.graphics.Point) =  android.graphics.Point \l0x000c: INVOKE  (r3 I:android.graphics.Point) android.graphics.Point.\<init\>():void type: DIRECT \l0x000f: INVOKE  (r4 I:org.osmdroid.views.Projection) = (r12 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL \l0x0013: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0014: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: CONST  (r5 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IGET  (r6 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter) = \l  (r10 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mPointList org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter \l0x0018: INVOKE  (r6 I:int) = \l  (r6 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.size():int type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: IF  (r0 I:?[int, byte, short, char]) \>= (r6 I:?[int, byte, short, char])  \-\> B:20:0x008a \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: IGET  (r6 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter) = \l  (r10 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mPointList org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter \l0x0020: INVOKE  (r6 I:org.osmdroid.api.IGeoPoint) = \l  (r6 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter)\l  (r0 I:int)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.get(int):org.osmdroid.api.IGeoPoint type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0024|0x0024: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0027 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|0x0027: IGET  (r6 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter) = \l  (r10 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mPointList org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter \l0x0029: INVOKE  (r6 I:org.osmdroid.api.IGeoPoint) = \l  (r6 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter)\l  (r0 I:int)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.PointAdapter.get(int):org.osmdroid.api.IGeoPoint type: INTERFACE \l0x002d: INVOKE  \l  (r4 I:org.osmdroid.views.Projection)\l  (r6 I:org.osmdroid.api.IGeoPoint)\l  (r3 I:android.graphics.Point)\l org.osmdroid.views.Projection.toPixels(org.osmdroid.api.IGeoPoint, android.graphics.Point):android.graphics.Point type: VIRTUAL \l0x0030: INVOKE  (r6 I:float) = (r11 I:android.view.MotionEvent) android.view.MotionEvent.getX():float type: VIRTUAL \l0x0034: IGET  (r7 I:int) = (r3 I:android.graphics.Point) android.graphics.Point.x int \l0x0036: CAST  (r7 I:float) = (float) (r7 I:int) \l0x0037: ARITH  (r6 I:float) = (r6 I:float) \- (r7 I:float) \l0x0038: INVOKE  (r6 I:float) = (r6 I:float) java.lang.Math.abs(float):float type: STATIC \l0x003c: CONST  (r7 I:?[int, float, short, byte, char]) = \l  (1112014848(0x42480000, float:50.0) ?[int, float, short, byte, char])\l \l0x003e: CMP_L  (r6 I:int) = (r6 I:float), (r7 I:float) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0040|0x0040: IF  (r6 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:19:0x0087 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0042|0x0042: INVOKE  (r6 I:float) = (r11 I:android.view.MotionEvent) android.view.MotionEvent.getY():float type: VIRTUAL \l0x0046: IGET  (r8 I:int) = (r3 I:android.graphics.Point) android.graphics.Point.y int \l0x0048: CAST  (r8 I:float) = (float) (r8 I:int) \l0x0049: ARITH  (r6 I:float) = (r6 I:float) \- (r8 I:float) \l0x004a: INVOKE  (r6 I:float) = (r6 I:float) java.lang.Math.abs(float):float type: STATIC \l0x004e: CMP_L  (r6 I:int) = (r6 I:float), (r7 I:float) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0050|0x0050: IF  (r6 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x0053 \l}"];
Node_14 [shape=record,label="{14\:\ 0x0053|0x0053: INVOKE  (r6 I:float) = (r11 I:android.view.MotionEvent) android.view.MotionEvent.getX():float type: VIRTUAL \l0x0057: IGET  (r7 I:int) = (r3 I:android.graphics.Point) android.graphics.Point.x int \l0x0059: CAST  (r7 I:float) = (float) (r7 I:int) \l0x005a: ARITH  (r6 I:float) = (r6 I:float) \- (r7 I:float) \l0x005b: INVOKE  (r7 I:float) = (r11 I:android.view.MotionEvent) android.view.MotionEvent.getX():float type: VIRTUAL \l0x005f: IGET  (r8 I:int) = (r3 I:android.graphics.Point) android.graphics.Point.x int \l0x0061: CAST  (r8 I:float) = (float) (r8 I:int) \l0x0062: ARITH  (r7 I:float) = (r7 I:float) \- (r8 I:float) \l0x0063: ARITH  (r6 I:float) = (r6 I:float) * (r7 I:float) \l0x0065: INVOKE  (r7 I:float) = (r11 I:android.view.MotionEvent) android.view.MotionEvent.getY():float type: VIRTUAL \l0x0069: IGET  (r8 I:int) = (r3 I:android.graphics.Point) android.graphics.Point.y int \l0x006b: CAST  (r8 I:float) = (float) (r8 I:int) \l0x006c: ARITH  (r7 I:float) = (r7 I:float) \- (r8 I:float) \l0x006d: INVOKE  (r8 I:float) = (r11 I:android.view.MotionEvent) android.view.MotionEvent.getY():float type: VIRTUAL \l0x0071: IGET  (r9 I:int) = (r3 I:android.graphics.Point) android.graphics.Point.y int \l0x0073: CAST  (r9 I:float) = (float) (r9 I:int) \l0x0074: ARITH  (r8 I:float) = (r8 I:float) \- (r9 I:float) \l0x0075: ARITH  (r7 I:float) = (r7 I:float) * (r8 I:float) \l0x0077: ARITH  (r6 I:float) = (r6 I:float) + (r7 I:float) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0078|0x0078: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x0082 \l}"];
Node_16 [shape=record,label="{16\:\ 0x007a|0x007a: INVOKE  (r7 I:float) = (r2 I:java.lang.Float) java.lang.Float.floatValue():float type: VIRTUAL \l0x007e: CMP_G  (r7 I:int) = (r6 I:float), (r7 I:float) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0080|0x0080: IF  (r7 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:19:0x0087 \l}"];
Node_18 [shape=record,label="{18\:\ 0x0082|0x0082: INVOKE  (r2 I:java.lang.Float) = (r6 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC \l0x0086: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_19 [shape=record,label="{19\:\ 0x0087|0x0087: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_20 [shape=record,label="{20\:\ 0x008a|0x008a: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x008d \l}"];
Node_21 [shape=record,label="{21\:\ 0x008c|0x008c: RETURN  (r1 I:boolean) \l}"];
Node_22 [shape=record,label="{22\:\ 0x008d|0x008d: INVOKE  (r11 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0091: INVOKE  \l  (r10 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l  (r11 I:java.lang.Integer)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.setSelectedPoint(java.lang.Integer):void type: VIRTUAL \l0x0094: INVOKE  (r12 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.invalidate():void type: VIRTUAL \l0x0097: IGET  (r11 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$OnClickListener) = \l  (r10 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.clickListener org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$OnClickListener \l}"];
Node_23 [shape=record,label="{23\:\ 0x0099|0x0099: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x00a6 \l}"];
Node_24 [shape=record,label="{24\:\ 0x009b|0x009b: IGET  (r11 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$OnClickListener) = \l  (r10 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.clickListener org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$OnClickListener \l0x009d: IGET  (r12 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter) = \l  (r10 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.mPointList org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter \l0x009f: INVOKE  (r0 I:java.lang.Integer) = (r5 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x00a3: INVOKE  \l  (r11 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$OnClickListener)\l  (r12 I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter)\l  (r0 I:java.lang.Integer)\l org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.OnClickListener.onClick(org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay$PointAdapter, java.lang.Integer):void type: INTERFACE \l}"];
Node_25 [shape=record,label="{25\:\ 0x00a6|0x00a6: CONST  (r11 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x00a7|0x00a7: RETURN  (r11 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.onSingleTapConfirmed((r10 'this' I:org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay A[IMMUTABLE_TYPE, THIS]), (r11 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_20;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_19[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_19;
Node_11 -> Node_12;
Node_12 -> Node_14;
Node_12 -> Node_19[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_18;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_4;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_25;
Node_24 -> Node_25;
Node_25 -> Node_26;
}

