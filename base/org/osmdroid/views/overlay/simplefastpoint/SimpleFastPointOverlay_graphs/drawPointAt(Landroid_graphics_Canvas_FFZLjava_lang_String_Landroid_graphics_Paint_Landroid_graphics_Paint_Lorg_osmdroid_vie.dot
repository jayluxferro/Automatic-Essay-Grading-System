digraph "CFG fororg.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.drawPointAt(Landroid\/graphics\/Canvas;FFZLjava\/lang\/String;Landroid\/graphics\/Paint;Landroid\/graphics\/Paint;Lorg\/osmdroid\/views\/MapView;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7.save()\lr7.rotate(\-r14.getMapOrientation(), r8, r9)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0011|if (r6.mStyle.mSymbol != org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlayOptions.Shape.CIRCLE) goto L_0x001b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|r7.drawCircle(r8, r9, r6.mStyle.mCircleRadius, r12)\l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|r0 = r7\lr0.drawRect(r8 \- r6.mStyle.mCircleRadius, r9 \- r6.mStyle.mCircleRadius, r8 + r6.mStyle.mCircleRadius, r9 + r6.mStyle.mCircleRadius, r12)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0038|if (r10 == false) goto L_0x0047\l}"];
Node_5 [shape=record,label="{5\:\ 0x003a|if (r11 == null) goto L_0x0047\l}"];
Node_6 [shape=record,label="{6\:\ 0x003c|r7.drawText(r11, r8, (r9 \- r6.mStyle.mCircleRadius) \- 5.0f, r13)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0047|r7.restore()\l}"];
Node_8 [shape=record,label="{8\:\ 0x004a|RETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay.drawPointAt((r6v0 'this' org.osmdroid.views.overlay.simplefastpoint.SimpleFastPointOverlay A[IMMUTABLE_TYPE, THIS]), (r7v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12v0 android.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 android.graphics.Paint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
}

