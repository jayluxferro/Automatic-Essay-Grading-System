digraph "CFG fororg.osmdroid.views.overlay.infowindow.InfoWindow.getOpenedInfoWindowsOn(Lorg\/osmdroid\/views\/MapView;)Ljava\/util\/ArrayList;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r5 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getChildCount():int type: VIRTUAL \l0x0004: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0006: INVOKE  (r1 I:java.util.ArrayList), (r0 I:int) java.util.ArrayList.\<init\>(int):void type: DIRECT \l0x0009: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:8:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: INVOKE  (r3 I:android.view.View) = (r5 I:org.osmdroid.views.MapView), (r2 I:int) org.osmdroid.views.MapView.getChildAt(int):android.view.View type: VIRTUAL \l0x0010: INVOKE  (r3 I:java.lang.Object) = (r3 I:android.view.View) android.view.View.getTag():java.lang.Object type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001f \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: INSTANCE_OF  (r4 I:boolean) = (r3 I:?[OBJECT, ARRAY]) org.osmdroid.views.overlay.infowindow.InfoWindow \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001f \l}"];
Node_6 [shape=record,label="{6\:\ 0x001a|0x001a: CHECK_CAST  (r3 I:org.osmdroid.views.overlay.infowindow.InfoWindow) = (org.osmdroid.views.overlay.infowindow.InfoWindow) (r3 I:?[OBJECT, ARRAY]) \l0x001c: INVOKE  (r1 I:java.util.ArrayList), (r3 I:java.lang.Object) java.util.ArrayList.add(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: RETURN  \l  (r1 I:java.util.ArrayList\<org.osmdroid.views.overlay.infowindow.InfoWindow\>)\l \l}"];
MethodNode[shape=record,label="{public static java.util.ArrayList\<org.osmdroid.views.overlay.infowindow.InfoWindow\> org.osmdroid.views.overlay.infowindow.InfoWindow.getOpenedInfoWindowsOn((r5 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/osmdroid\/views\/MapView;, ), Ljava\/util\/ArrayList\<, Lorg\/osmdroid\/views\/overlay\/infowindow\/InfoWindow;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_1;
}

