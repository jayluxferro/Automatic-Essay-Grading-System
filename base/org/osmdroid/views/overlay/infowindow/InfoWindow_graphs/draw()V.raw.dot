digraph "CFG fororg.osmdroid.views.overlay.infowindow.InfoWindow.draw()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:boolean) = (r8 I:org.osmdroid.views.overlay.infowindow.InfoWindow) org.osmdroid.views.overlay.infowindow.InfoWindow.mIsVisible boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0005 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|SYNTHETIC\lSplitter:B:3:0x0005\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0005\l|0x0005: NEW_INSTANCE  (r0 I:org.osmdroid.views.MapView$LayoutParams) =  org.osmdroid.views.MapView$LayoutParams A[Catch:\{ Exception \-\> 0x001d \}, TRY_ENTER]\l0x0007: CONST  (r2 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x001d \}]\l0x0008: CONST  (r3 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x001d \}]\l0x0009: IGET  (r4 I:org.osmdroid.util.GeoPoint) = (r8 I:org.osmdroid.views.overlay.infowindow.InfoWindow) org.osmdroid.views.overlay.infowindow.InfoWindow.mPosition org.osmdroid.util.GeoPoint A[Catch:\{ Exception \-\> 0x001d \}]\l0x000b: CONST  (r5 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x001d \}]\l0x000d: IGET  (r6 I:int) = (r8 I:org.osmdroid.views.overlay.infowindow.InfoWindow) org.osmdroid.views.overlay.infowindow.InfoWindow.mOffsetX int A[Catch:\{ Exception \-\> 0x001d \}]\l0x000f: IGET  (r7 I:int) = (r8 I:org.osmdroid.views.overlay.infowindow.InfoWindow) org.osmdroid.views.overlay.infowindow.InfoWindow.mOffsetY int A[Catch:\{ Exception \-\> 0x001d \}]\l0x0011: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x001d \}]\l0x0012: INVOKE  \l  (r1 I:org.osmdroid.views.MapView$LayoutParams)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:org.osmdroid.api.IGeoPoint)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l org.osmdroid.views.MapView.LayoutParams.\<init\>(int, int, org.osmdroid.api.IGeoPoint, int, int, int):void type: DIRECT A[Catch:\{ Exception \-\> 0x001d \}]\l0x0015: IGET  (r1 I:org.osmdroid.views.MapView) = (r8 I:org.osmdroid.views.overlay.infowindow.InfoWindow) org.osmdroid.views.overlay.infowindow.InfoWindow.mMapView org.osmdroid.views.MapView A[Catch:\{ Exception \-\> 0x001d \}]\l0x0017: IGET  (r2 I:android.view.View) = (r8 I:org.osmdroid.views.overlay.infowindow.InfoWindow) org.osmdroid.views.overlay.infowindow.InfoWindow.mView android.view.View A[Catch:\{ Exception \-\> 0x001d \}]\l0x0019: INVOKE  \l  (r1 I:org.osmdroid.views.MapView)\l  (r2 I:android.view.View)\l  (r0 I:android.view.ViewGroup$LayoutParams)\l org.osmdroid.views.MapView.updateViewLayout(android.view.View, android.view.ViewGroup$LayoutParams):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x001d \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d|ExcHandler: Exception null\lSplitter:B:3:0x0005\l|0x001d: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: INVOKE  (r1 I:boolean) =  org.osmdroid.views.drawing.MapSnapshot.isUIThread():boolean type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0025 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0024|0x0024: RETURN   \l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|0x0025: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.infowindow.InfoWindow.draw((r8 'this' I:org.osmdroid.views.overlay.infowindow.InfoWindow A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_6;
Node_4 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
}

