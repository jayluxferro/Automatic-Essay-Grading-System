digraph "CFG fororg.osmdroid.views.overlay.gestures.RotationGestureOverlay.onOptionsItemSelected(Landroid\/view\/MenuItem;ILorg\/osmdroid\/views\/MapView;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r6 I:int) = (r4 I:android.view.MenuItem) android.view.MenuItem.getItemId():int type: INTERFACE \l0x0004: SGET  (r0 I:int) =  org.osmdroid.views.overlay.gestures.RotationGestureOverlay.MENU_ENABLED int \l0x0006: ARITH  (r0 I:int) = (r0 I:int) + (r5 I:int) \l0x0007: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x001f \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r4 I:boolean) = \l  (r3 I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay)\l org.osmdroid.views.overlay.gestures.RotationGestureOverlay.isEnabled():boolean type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001a \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IGET  (r4 I:org.osmdroid.views.MapView) = \l  (r3 I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay)\l org.osmdroid.views.overlay.gestures.RotationGestureOverlay.mMapView org.osmdroid.views.MapView \l0x0012: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0013: INVOKE  (r4 I:org.osmdroid.views.MapView), (r5 I:float) org.osmdroid.views.MapView.setMapOrientation(float):void type: VIRTUAL \l0x0016: INVOKE  \l  (r3 I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay)\l  (r1 I:boolean)\l org.osmdroid.views.overlay.gestures.RotationGestureOverlay.setEnabled(boolean):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|0x001a: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x001b: INVOKE  \l  (r3 I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay)\l  (r4 I:boolean)\l org.osmdroid.views.overlay.gestures.RotationGestureOverlay.setEnabled(boolean):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: RETURN  (r4 I:boolean) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: INVOKE  (r6 I:int) = (r4 I:android.view.MenuItem) android.view.MenuItem.getItemId():int type: INTERFACE \l0x0023: SGET  (r0 I:int) =  org.osmdroid.views.overlay.gestures.RotationGestureOverlay.MENU_ROTATE_CCW int \l0x0025: ARITH  (r0 I:int) = (r0 I:int) + (r5 I:int) \l0x0026: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (1092616192(0x41200000, float:10.0) ?[int, float, short, byte, char])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x0028|0x0028: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0037 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|0x002a: IGET  (r4 I:org.osmdroid.views.MapView) = \l  (r3 I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay)\l org.osmdroid.views.overlay.gestures.RotationGestureOverlay.mMapView org.osmdroid.views.MapView \l0x002c: IGET  (r5 I:org.osmdroid.views.MapView) = \l  (r3 I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay)\l org.osmdroid.views.overlay.gestures.RotationGestureOverlay.mMapView org.osmdroid.views.MapView \l0x002e: INVOKE  (r5 I:float) = (r5 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMapOrientation():float type: VIRTUAL \l0x0032: ARITH  (r5 I:float) = (r5 I:float) \- (r2 I:float) \l0x0033: INVOKE  (r4 I:org.osmdroid.views.MapView), (r5 I:float) org.osmdroid.views.MapView.setMapOrientation(float):void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: INVOKE  (r4 I:int) = (r4 I:android.view.MenuItem) android.view.MenuItem.getItemId():int type: INTERFACE \l0x003b: SGET  (r6 I:int) =  org.osmdroid.views.overlay.gestures.RotationGestureOverlay.MENU_ROTATE_CW int \l0x003d: ARITH  (r6 I:int) = (r6 I:int) + (r5 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x004c \l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|0x0040: IGET  (r4 I:org.osmdroid.views.MapView) = \l  (r3 I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay)\l org.osmdroid.views.overlay.gestures.RotationGestureOverlay.mMapView org.osmdroid.views.MapView \l0x0042: IGET  (r5 I:org.osmdroid.views.MapView) = \l  (r3 I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay)\l org.osmdroid.views.overlay.gestures.RotationGestureOverlay.mMapView org.osmdroid.views.MapView \l0x0044: INVOKE  (r5 I:float) = (r5 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMapOrientation():float type: VIRTUAL \l0x0048: ARITH  (r5 I:float) = (r5 I:float) + (r2 I:float) \l0x0049: INVOKE  (r4 I:org.osmdroid.views.MapView), (r5 I:float) org.osmdroid.views.MapView.setMapOrientation(float):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|0x004c: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.overlay.gestures.RotationGestureOverlay.onOptionsItemSelected((r3 'this' I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay A[IMMUTABLE_TYPE, THIS]), (r4 I:android.view.MenuItem A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
}

