digraph "CFG fororg.osmdroid.views.overlay.gestures.RotationGestureOverlay.onTouchEvent(Landroid\/view\/MotionEvent;Lorg\/osmdroid\/views\/MapView;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r1 I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay)\l org.osmdroid.views.overlay.gestures.RotationGestureOverlay.isEnabled():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:org.osmdroid.views.overlay.gestures.RotationGestureDetector) = \l  (r1 I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay)\l org.osmdroid.views.overlay.gestures.RotationGestureOverlay.mRotationDetector org.osmdroid.views.overlay.gestures.RotationGestureDetector \l0x0008: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.gestures.RotationGestureDetector)\l  (r2 I:android.view.MotionEvent)\l org.osmdroid.views.overlay.gestures.RotationGestureDetector.onTouch(android.view.MotionEvent):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: INVOKE  (r2 I:boolean) = \l  (r1 I:org.osmdroid.views.overlay.Overlay)\l  (r2 I:android.view.MotionEvent)\l  (r3 I:org.osmdroid.views.MapView)\l org.osmdroid.views.overlay.Overlay.onTouchEvent(android.view.MotionEvent, org.osmdroid.views.MapView):boolean type: SUPER \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.overlay.gestures.RotationGestureOverlay.onTouchEvent((r1 'this' I:org.osmdroid.views.overlay.gestures.RotationGestureOverlay A[IMMUTABLE_TYPE, THIS]), (r2 I:android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

