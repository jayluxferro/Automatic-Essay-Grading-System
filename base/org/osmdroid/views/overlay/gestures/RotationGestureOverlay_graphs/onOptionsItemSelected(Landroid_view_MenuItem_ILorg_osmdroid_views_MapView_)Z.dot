digraph "CFG fororg.osmdroid.views.overlay.gestures.RotationGestureOverlay.onOptionsItemSelected(Landroid\/view\/MenuItem;ILorg\/osmdroid\/views\/MapView;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if (r4.getItemId() != (MENU_ENABLED + r5)) goto L_0x001f\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a}"];
Node_3 [shape=record,label="{3\:\ 0x000e|if (isEnabled() == false) goto L_0x001a\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|r3.mMapView.setMapOrientation(0.0f)\lsetEnabled(false)\l}"];
Node_5 [shape=record,label="{5\:\ 0x001a|setEnabled(true)\l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|RETURN\l|return true\l}"];
Node_7 [shape=record,label="{7\:\ 0x001f}"];
Node_8 [shape=record,label="{8\:\ 0x0028|if (r4.getItemId() != (MENU_ROTATE_CCW + r5)) goto L_0x0037\l}"];
Node_9 [shape=record,label="{9\:\ 0x002a|r3.mMapView.setMapOrientation(r3.mMapView.getMapOrientation() \- 10.0f)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0037}"];
Node_11 [shape=record,label="{11\:\ 0x003e|if (r4.getItemId() != (MENU_ROTATE_CW + r5)) goto L_0x004c\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|r3.mMapView.setMapOrientation(r3.mMapView.getMapOrientation() + 10.0f)\l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|RETURN\l|return false\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.overlay.gestures.RotationGestureOverlay.onOptionsItemSelected((r3v0 'this' org.osmdroid.views.overlay.gestures.RotationGestureOverlay A[IMMUTABLE_TYPE, THIS]), (r4v0 android.view.MenuItem A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_13;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
}

