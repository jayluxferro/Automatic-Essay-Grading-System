digraph "CFG fororg.osmdroid.views.overlay.ItemizedIconOverlay.activateSelectedItems(Landroid\/view\/MotionEvent;Lorg\/osmdroid\/views\/MapView;Lorg\/osmdroid\/views\/overlay\/ItemizedIconOverlay$ActiveItem;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = java.lang.Math.round(r5.getX())\lint r5 = java.lang.Math.round(r5.getY())\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:8:0x002c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0012\-\>B:8:0x002c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|if (r2 \>= r4.mItemList.size()) goto L_0x002f\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a}"];
Node_4 [shape=record,label="{4\:\ 0x0022|if (isEventOnItem(getItem(r2), r0, r5, r6) == false) goto L_0x002c\l}"];
Node_5 [shape=record,label="{5\:\ 0x0024}"];
Node_6 [shape=record,label="{6\:\ 0x0028|if (r7.run(r2) == false) goto L_0x002c\l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|RETURN\l|return true\l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|LOOP_END\lLOOP:0: B:1:0x0012\-\>B:8:0x002c\l|int r2 = r2 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|RETURN\l|return false\l}"];
Node_10 [shape=record,label="{10\:\ 0x002f|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x002c|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private boolean org.osmdroid.views.overlay.ItemizedIconOverlay.activateSelectedItems((r4v0 'this' org.osmdroid.views.overlay.ItemizedIconOverlay A[IMMUTABLE_TYPE, THIS]), (r5v0 android.view.MotionEvent A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 org.osmdroid.views.overlay.ItemizedIconOverlay$ActiveItem A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_10;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_11[style=dashed];
Node_6 -> Node_13;
Node_8 -> Node_1;
Node_10 -> Node_9;
Node_11 -> Node_7;
Node_12 -> Node_8;
Node_13 -> Node_8;
}

