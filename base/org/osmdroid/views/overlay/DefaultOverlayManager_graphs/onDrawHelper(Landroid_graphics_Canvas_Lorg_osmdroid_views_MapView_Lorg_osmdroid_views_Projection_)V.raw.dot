digraph "CFG fororg.osmdroid.views.overlay.DefaultOverlayManager.onDrawHelper(Landroid\/graphics\/Canvas;Lorg\/osmdroid\/views\/MapView;Lorg\/osmdroid\/views\/Projection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = (r4 I:org.osmdroid.views.overlay.DefaultOverlayManager) org.osmdroid.views.overlay.DefaultOverlayManager.mTilesOverlay org.osmdroid.views.overlay.TilesOverlay \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = (r4 I:org.osmdroid.views.overlay.DefaultOverlayManager) org.osmdroid.views.overlay.DefaultOverlayManager.mTilesOverlay org.osmdroid.views.overlay.TilesOverlay \l0x0006: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.TilesOverlay)\l  (r5 I:android.graphics.Canvas)\l  (r7 I:org.osmdroid.views.Projection)\l org.osmdroid.views.overlay.TilesOverlay.protectDisplayedTilesForCache(android.graphics.Canvas, org.osmdroid.views.Projection):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:java.util.concurrent.CopyOnWriteArrayList\<org.osmdroid.views.overlay.Overlay\>) = (r4 I:org.osmdroid.views.overlay.DefaultOverlayManager) org.osmdroid.views.overlay.DefaultOverlayManager.mOverlayList java.util.concurrent.CopyOnWriteArrayList \l0x000b: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.concurrent.CopyOnWriteArrayList) java.util.concurrent.CopyOnWriteArrayList.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x002d \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r1 I:org.osmdroid.views.overlay.Overlay) = (org.osmdroid.views.overlay.Overlay) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|0x001b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_8 [shape=record,label="{8\:\ 0x001d|0x001d: INVOKE  (r2 I:boolean) = (r1 I:org.osmdroid.views.overlay.Overlay) org.osmdroid.views.overlay.Overlay.isEnabled():boolean type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: INSTANCE_OF  (r2 I:boolean) = (r1 I:?[OBJECT, ARRAY]) org.osmdroid.views.overlay.TilesOverlay \l}"];
Node_11 [shape=record,label="{11\:\ 0x0025|0x0025: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000f \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: CHECK_CAST  (r1 I:org.osmdroid.views.overlay.TilesOverlay) = (org.osmdroid.views.overlay.TilesOverlay) (r1 I:?[OBJECT, ARRAY]) \l0x0029: INVOKE  \l  (r1 I:org.osmdroid.views.overlay.TilesOverlay)\l  (r5 I:android.graphics.Canvas)\l  (r7 I:org.osmdroid.views.Projection)\l org.osmdroid.views.overlay.TilesOverlay.protectDisplayedTilesForCache(android.graphics.Canvas, org.osmdroid.views.Projection):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x002d|0x002d: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = (r4 I:org.osmdroid.views.overlay.DefaultOverlayManager) org.osmdroid.views.overlay.DefaultOverlayManager.mTilesOverlay org.osmdroid.views.overlay.TilesOverlay \l0x002f: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0030|0x0030: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0047 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|0x0032: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = (r4 I:org.osmdroid.views.overlay.DefaultOverlayManager) org.osmdroid.views.overlay.DefaultOverlayManager.mTilesOverlay org.osmdroid.views.overlay.TilesOverlay \l0x0034: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.views.overlay.TilesOverlay) org.osmdroid.views.overlay.TilesOverlay.isEnabled():boolean type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0038|0x0038: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x0047 \l}"];
Node_17 [shape=record,label="{17\:\ 0x003a|0x003a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x0042 \l}"];
Node_18 [shape=record,label="{18\:\ 0x003c|0x003c: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = (r4 I:org.osmdroid.views.overlay.DefaultOverlayManager) org.osmdroid.views.overlay.DefaultOverlayManager.mTilesOverlay org.osmdroid.views.overlay.TilesOverlay \l0x003e: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.TilesOverlay)\l  (r5 I:android.graphics.Canvas)\l  (r6 I:org.osmdroid.views.MapView)\l  (r1 I:boolean)\l org.osmdroid.views.overlay.TilesOverlay.draw(android.graphics.Canvas, org.osmdroid.views.MapView, boolean):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0042|0x0042: IGET  (r0 I:org.osmdroid.views.overlay.TilesOverlay) = (r4 I:org.osmdroid.views.overlay.DefaultOverlayManager) org.osmdroid.views.overlay.DefaultOverlayManager.mTilesOverlay org.osmdroid.views.overlay.TilesOverlay \l0x0044: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.TilesOverlay)\l  (r5 I:android.graphics.Canvas)\l  (r7 I:org.osmdroid.views.Projection)\l org.osmdroid.views.overlay.TilesOverlay.draw(android.graphics.Canvas, org.osmdroid.views.Projection):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0047|0x0047: IGET  (r0 I:java.util.concurrent.CopyOnWriteArrayList\<org.osmdroid.views.overlay.Overlay\>) = (r4 I:org.osmdroid.views.overlay.DefaultOverlayManager) org.osmdroid.views.overlay.DefaultOverlayManager.mOverlayList java.util.concurrent.CopyOnWriteArrayList \l0x0049: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.concurrent.CopyOnWriteArrayList) java.util.concurrent.CopyOnWriteArrayList.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x004d|0x004d: INVOKE  (r2 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_22 [shape=record,label="{22\:\ 0x0051|0x0051: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x006b \l}"];
Node_23 [shape=record,label="{23\:\ 0x0053|0x0053: INVOKE  (r2 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0057: CHECK_CAST  (r2 I:org.osmdroid.views.overlay.Overlay) = (org.osmdroid.views.overlay.Overlay) (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_24 [shape=record,label="{24\:\ 0x0059|0x0059: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x004d \l}"];
Node_25 [shape=record,label="{25\:\ 0x005b|0x005b: INVOKE  (r3 I:boolean) = (r2 I:org.osmdroid.views.overlay.Overlay) org.osmdroid.views.overlay.Overlay.isEnabled():boolean type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x005f|0x005f: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x004d \l}"];
Node_27 [shape=record,label="{27\:\ 0x0061|0x0061: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x0067 \l}"];
Node_28 [shape=record,label="{28\:\ 0x0063|0x0063: INVOKE  \l  (r2 I:org.osmdroid.views.overlay.Overlay)\l  (r5 I:android.graphics.Canvas)\l  (r6 I:org.osmdroid.views.MapView)\l  (r1 I:boolean)\l org.osmdroid.views.overlay.Overlay.draw(android.graphics.Canvas, org.osmdroid.views.MapView, boolean):void type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x0067|0x0067: INVOKE  \l  (r2 I:org.osmdroid.views.overlay.Overlay)\l  (r5 I:android.graphics.Canvas)\l  (r7 I:org.osmdroid.views.Projection)\l org.osmdroid.views.overlay.Overlay.draw(android.graphics.Canvas, org.osmdroid.views.Projection):void type: VIRTUAL \l}"];
Node_30 [shape=record,label="{30\:\ 0x006b|0x006b: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.views.overlay.DefaultOverlayManager.onDrawHelper((r4 'this' I:org.osmdroid.views.overlay.DefaultOverlayManager A[IMMUTABLE_TYPE, THIS]), (r5 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_4;
Node_7 -> Node_8[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_4;
Node_9 -> Node_10[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_4;
Node_11 -> Node_12[style=dashed];
Node_12 -> Node_4;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_20;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_30;
Node_23 -> Node_24;
Node_24 -> Node_21;
Node_24 -> Node_25[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_21;
Node_26 -> Node_27[style=dashed];
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_21;
Node_29 -> Node_21;
}

