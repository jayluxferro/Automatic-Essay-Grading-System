digraph "CFG fororg.osmdroid.views.overlay.PathOverlay.draw(Landroid\/graphics\/Canvas;Lorg\/osmdroid\/views\/Projection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0004: IGET  (r1 I:java.util.ArrayList\<org.osmdroid.util.PointL\>) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPoints java.util.ArrayList \l0x0006: INVOKE  (r8 I:int) = (r1 I:java.util.ArrayList) java.util.ArrayList.size():int type: VIRTUAL \l0x000a: CONST  (r9 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000b|0x000b: IF  (r8 I:?[int, byte, short, char]) \>= (r9 I:?[int, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IGET  (r1 I:int) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPointsPrecomputed int \l0x0010: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: IF  (r1 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:6:0x002d \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IGET  (r1 I:java.util.ArrayList\<org.osmdroid.util.PointL\>) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPoints java.util.ArrayList \l0x0015: IGET  (r2 I:int) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPointsPrecomputed int \l0x0017: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.ArrayList), (r2 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x001b: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x001c: CHECK_CAST  (r6 I:org.osmdroid.util.PointL) = (org.osmdroid.util.PointL) (r6 I:?[OBJECT, ARRAY]) \l0x001e: IGET  (r2 I:long) = (r6 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0020: IGET  (r4 I:long) = (r6 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0022: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0024: INVOKE  \l  (r1 I:org.osmdroid.views.Projection)\l  (r2 I:long)\l  (r4 I:long)\l  (r6 I:org.osmdroid.util.PointL)\l org.osmdroid.views.Projection.toProjectedPixels(long, long, org.osmdroid.util.PointL):org.osmdroid.util.PointL type: VIRTUAL \l0x0027: IGET  (r1 I:int) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPointsPrecomputed int \l0x0029: ARITH  (r1 I:int) = (r1 I:int) + (r10 I:int) \l0x002a: IPUT  (r1 I:int), (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPointsPrecomputed int \l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|0x002d: INVOKE  (r11 I:org.osmdroid.util.BoundingBox) = (r26 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getBoundingBox():org.osmdroid.util.BoundingBox type: VIRTUAL \l0x0031: INVOKE  (r2 I:double) = (r11 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatNorth():double type: VIRTUAL \l0x0035: INVOKE  (r4 I:double) = (r11 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonWest():double type: VIRTUAL \l0x0039: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003a: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x003c: INVOKE  (r12 I:org.osmdroid.util.PointL) = \l  (r1 I:org.osmdroid.views.Projection)\l  (r2 I:double)\l  (r4 I:double)\l  (r6 I:org.osmdroid.util.PointL)\l org.osmdroid.views.Projection.toProjectedPixels(double, double, org.osmdroid.util.PointL):org.osmdroid.util.PointL type: VIRTUAL \l0x0040: INVOKE  (r2 I:double) = (r11 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatSouth():double type: VIRTUAL \l0x0044: INVOKE  (r4 I:double) = (r11 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonEast():double type: VIRTUAL \l0x0048: INVOKE  (r1 I:org.osmdroid.util.PointL) = \l  (r1 I:org.osmdroid.views.Projection)\l  (r2 I:double)\l  (r4 I:double)\l  (r6 I:org.osmdroid.util.PointL)\l org.osmdroid.views.Projection.toProjectedPixels(double, double, org.osmdroid.util.PointL):org.osmdroid.util.PointL type: VIRTUAL \l0x004c: NEW_INSTANCE  (r2 I:org.osmdroid.util.RectL) =  org.osmdroid.util.RectL \l0x004e: IGET  (r14 I:long) = (r12 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0050: IGET  (r3 I:long) = (r12 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0052: IGET  (r5 I:long) = (r1 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0054: IGET  (r11 I:long) = (r1 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0056: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x0057: MOVE  (r16 I:?[long, double]) = (r3 I:?[long, double]) \l0x0059: MOVE  (r18 I:?[long, double]) = (r5 I:?[long, double]) \l0x005b: MOVE  (r20 I:?[long, double]) = (r11 I:?[long, double]) \l0x005d: INVOKE  \l  (r13 I:org.osmdroid.util.RectL)\l  (r14 I:long)\l  (r16 I:long)\l  (r18 I:long)\l  (r20 I:long)\l org.osmdroid.util.RectL.\<init\>(long, long, long, long):void type: DIRECT \l0x0060: IGET  (r1 I:android.graphics.Path) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPath android.graphics.Path \l0x0062: INVOKE  (r1 I:android.graphics.Path) android.graphics.Path.rewind():void type: VIRTUAL \l0x0065: IGET  (r1 I:java.util.ArrayList\<org.osmdroid.util.PointL\>) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPoints java.util.ArrayList \l0x0067: ARITH  (r3 I:int) = (r8 I:int) + (\-1 int) \l0x0069: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.ArrayList), (r3 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x006d: CHECK_CAST  (r1 I:org.osmdroid.util.PointL) = (org.osmdroid.util.PointL) (r1 I:?[OBJECT, ARRAY]) \l0x006f: IGET  (r11 I:org.osmdroid.util.RectL) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mLineBounds org.osmdroid.util.RectL \l0x0071: IGET  (r12 I:long) = (r1 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0073: IGET  (r14 I:long) = (r1 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0075: IGET  (r3 I:long) = (r1 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0077: IGET  (r5 I:long) = (r1 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0079: MOVE  (r16 I:?[long, double]) = (r3 I:?[long, double]) \l0x007b: MOVE  (r18 I:?[long, double]) = (r5 I:?[long, double]) \l0x007d: INVOKE  \l  (r11 I:org.osmdroid.util.RectL)\l  (r12 I:long)\l  (r14 I:long)\l  (r16 I:long)\l  (r18 I:long)\l org.osmdroid.util.RectL.set(long, long, long, long):void type: VIRTUAL \l0x0080: INVOKE  (r3 I:double) = (r26 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getProjectedPowerDifference():double type: VIRTUAL \l0x0084: ARITH  (r8 I:int) = (r8 I:int) \- (r9 I:int) \l0x0085: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0086: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0087|0x0087: IF  (r8 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:18:0x0109 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0089|0x0089: IGET  (r9 I:java.util.ArrayList\<org.osmdroid.util.PointL\>) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPoints java.util.ArrayList \l0x008b: INVOKE  (r9 I:java.lang.Object) = (r9 I:java.util.ArrayList), (r8 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x008f: CHECK_CAST  (r9 I:org.osmdroid.util.PointL) = (org.osmdroid.util.PointL) (r9 I:?[OBJECT, ARRAY]) \l0x0091: IGET  (r11 I:org.osmdroid.util.RectL) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mLineBounds org.osmdroid.util.RectL \l0x0093: IGET  (r12 I:long) = (r9 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0095: IGET  (r14 I:long) = (r9 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0097: INVOKE  (r11 I:org.osmdroid.util.RectL), (r12 I:long), (r14 I:long) org.osmdroid.util.RectL.union(long, long):void type: VIRTUAL \l0x009a: IGET  (r11 I:org.osmdroid.util.RectL) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mLineBounds org.osmdroid.util.RectL \l0x009c: INVOKE  (r11 I:boolean) = \l  (r2 I:org.osmdroid.util.RectL)\l  (r11 I:org.osmdroid.util.RectL)\l org.osmdroid.util.RectL.intersects(org.osmdroid.util.RectL, org.osmdroid.util.RectL):boolean type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x00a0|0x00a0: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x00a7 \l}"];
Node_10 [shape=record,label="{10\:\ 0x00a2|0x00a2: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x00a4: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x00a5: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x00a7|0x00a7: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x00ba \l}"];
Node_12 [shape=record,label="{12\:\ 0x00a9|0x00a9: IGET  (r1 I:android.graphics.Point) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mTempPoint1 android.graphics.Point \l0x00ab: INVOKE  (r1 I:android.graphics.Point) = \l  (r7 I:org.osmdroid.views.Projection)\l  (r6 I:org.osmdroid.util.PointL)\l  (r3 I:double)\l  (r1 I:android.graphics.Point)\l org.osmdroid.views.Projection.getPixelsFromProjected(org.osmdroid.util.PointL, double, android.graphics.Point):android.graphics.Point type: VIRTUAL \l0x00af: IGET  (r11 I:android.graphics.Path) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPath android.graphics.Path \l0x00b1: IGET  (r12 I:int) = (r1 I:android.graphics.Point) android.graphics.Point.x int \l0x00b3: CAST  (r12 I:float) = (float) (r12 I:int) \l0x00b4: IGET  (r13 I:int) = (r1 I:android.graphics.Point) android.graphics.Point.y int \l0x00b6: CAST  (r13 I:float) = (float) (r13 I:int) \l0x00b7: INVOKE  (r11 I:android.graphics.Path), (r12 I:float), (r13 I:float) android.graphics.Path.moveTo(float, float):void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x00ba|0x00ba: IGET  (r11 I:android.graphics.Point) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mTempPoint2 android.graphics.Point \l0x00bc: INVOKE  (r11 I:android.graphics.Point) = \l  (r7 I:org.osmdroid.views.Projection)\l  (r9 I:org.osmdroid.util.PointL)\l  (r3 I:double)\l  (r11 I:android.graphics.Point)\l org.osmdroid.views.Projection.getPixelsFromProjected(org.osmdroid.util.PointL, double, android.graphics.Point):android.graphics.Point type: VIRTUAL \l0x00c0: IGET  (r12 I:int) = (r11 I:android.graphics.Point) android.graphics.Point.x int \l0x00c2: IGET  (r13 I:int) = (r1 I:android.graphics.Point) android.graphics.Point.x int \l0x00c4: ARITH  (r12 I:int) = (r12 I:int) \- (r13 I:int) \l0x00c5: INVOKE  (r12 I:int) = (r12 I:int) java.lang.Math.abs(int):int type: STATIC \l0x00c9: IGET  (r13 I:int) = (r11 I:android.graphics.Point) android.graphics.Point.y int \l0x00cb: IGET  (r14 I:int) = (r1 I:android.graphics.Point) android.graphics.Point.y int \l0x00cd: ARITH  (r13 I:int) = (r13 I:int) \- (r14 I:int) \l0x00ce: INVOKE  (r13 I:int) = (r13 I:int) java.lang.Math.abs(int):int type: STATIC \l0x00d2: ARITH  (r12 I:int) = (r12 I:int) + (r13 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00d3|0x00d3: IF  (r12 I:?[int, byte, short, char]) \> (r10 I:?[int, byte, short, char])  \-\> B:16:0x00d8 \l}"];
Node_15 [shape=record,label="{15\:\ 0x00d5|0x00d5: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x00d8|0x00d8: IGET  (r6 I:android.graphics.Path) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPath android.graphics.Path \l0x00da: IGET  (r12 I:int) = (r11 I:android.graphics.Point) android.graphics.Point.x int \l0x00dc: CAST  (r12 I:float) = (float) (r12 I:int) \l0x00dd: IGET  (r13 I:int) = (r11 I:android.graphics.Point) android.graphics.Point.y int \l0x00df: CAST  (r13 I:float) = (float) (r13 I:int) \l0x00e0: INVOKE  (r6 I:android.graphics.Path), (r12 I:float), (r13 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x00e3: IGET  (r6 I:int) = (r11 I:android.graphics.Point) android.graphics.Point.x int \l0x00e5: IPUT  (r6 I:int), (r1 I:android.graphics.Point) android.graphics.Point.x int \l0x00e7: IGET  (r6 I:int) = (r11 I:android.graphics.Point) android.graphics.Point.y int \l0x00e9: IPUT  (r6 I:int), (r1 I:android.graphics.Point) android.graphics.Point.y int \l0x00eb: IGET  (r11 I:org.osmdroid.util.RectL) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mLineBounds org.osmdroid.util.RectL \l0x00ed: IGET  (r12 I:long) = (r9 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x00ef: IGET  (r14 I:long) = (r9 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x00f1: IGET  (r5 I:long) = (r9 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x00f3: MOVE  (r23 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x00f5: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x00f7: IGET  (r1 I:long) = (r9 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x00f9: MOVE  (r16 I:?[long, double]) = (r5 I:?[long, double]) \l0x00fb: MOVE  (r18 I:?[long, double]) = (r1 I:?[long, double]) \l0x00fd: INVOKE  \l  (r11 I:org.osmdroid.util.RectL)\l  (r12 I:long)\l  (r14 I:long)\l  (r16 I:long)\l  (r18 I:long)\l org.osmdroid.util.RectL.set(long, long, long, long):void type: VIRTUAL \l0x0100: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0101: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x0103|0x0103: ARITH  (r8 I:int) = (r8 I:int) + (\-1 int) \l0x0105: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0109|0x0109: IGET  (r1 I:android.graphics.Path) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPath android.graphics.Path \l0x010b: IGET  (r2 I:android.graphics.Paint) = (r0 I:org.osmdroid.views.overlay.PathOverlay) org.osmdroid.views.overlay.PathOverlay.mPaint android.graphics.Paint \l0x010d: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r25 I:?[OBJECT, ARRAY]) \l0x010f: INVOKE  \l  (r3 I:android.graphics.Canvas)\l  (r1 I:android.graphics.Path)\l  (r2 I:android.graphics.Paint)\l android.graphics.Canvas.drawPath(android.graphics.Path, android.graphics.Paint):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0112|0x0112: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.PathOverlay.draw((r24 'this' I:org.osmdroid.views.overlay.PathOverlay A[IMMUTABLE_TYPE, THIS]), (r25 I:android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_18;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_17;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_7;
Node_18 -> Node_19;
}

