digraph "CFG fororg.osmdroid.views.overlay.TilesOverlay.\<init\>(Lorg\/osmdroid\/tileprovider\/MapTileProviderBase;Landroid\/content\/Context;ZZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.userSelectedLoadingDrawable = null\lr4.mDebugPaint = new android.graphics.Paint()\lr4.mTileRect = new android.graphics.Rect()\lr4.mViewPort = new org.osmdroid.util.RectL()\lr4.mOptionsMenuEnabled = true\lr4.mLoadingTile = null\lr4.mLoadingBackgroundColor = android.graphics.Color.rgb(216, 208, 208)\lr4.mLoadingLineColor = android.graphics.Color.rgb(android.support.p003v7.widget.helper.ItemTouchHelper.Callback.DEFAULT_DRAG_ANIMATION_DURATION, org.kxml2.wap.Wbxml.EXT_0, org.kxml2.wap.Wbxml.EXT_0)\lr4.horizontalWrapEnabled = true\lr4.verticalWrapEnabled = true\lr4.currentColorFilter = null\lr4.mProtectedTiles = new android.graphics.Rect()\lr4.mTileStates = new org.osmdroid.tileprovider.TileStates()\lr4.mTileLooper = new org.osmdroid.views.overlay.TilesOverlay.OverlayTileLooper(r4)\lr4.mIntersectionRect = new android.graphics.Rect()\lr4.ctx = r6\l}"];
Node_1 [shape=record,label="{1\:\ 0x0058|if (r5 == null) goto L_0x0063\l}"];
Node_2 [shape=record,label="{2\:\ 0x005a|r4.mTileProvider = r5\lsetHorizontalWrapEnabled(r7)\lsetVerticalWrapEnabled(r8)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0062|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0063}"];
Node_5 [shape=record,label="{5\:\ 0x006a|throw new java.lang.IllegalArgumentException(\"You must pass a valid tile provider to the tiles overlay.\")\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.TilesOverlay.\<init\>((r4v0 'this' org.osmdroid.views.overlay.TilesOverlay A[IMMUTABLE_TYPE, THIS]), (r5v0 org.osmdroid.tileprovider.MapTileProviderBase A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

