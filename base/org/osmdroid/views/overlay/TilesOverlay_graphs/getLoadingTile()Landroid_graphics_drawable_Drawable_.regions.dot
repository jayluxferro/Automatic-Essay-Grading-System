digraph "CFG fororg.osmdroid.views.overlay.TilesOverlay.getLoadingTile()Landroid\/graphics\/drawable\/Drawable;" {
subgraph cluster_Region_1358336475 {
label = "R(1:(2:(1:3)|(2:(1:(4:10|13|(1:15)|16))|22)))";
node [shape=record,color=blue];
subgraph cluster_Region_330758499 {
label = "R(2:(1:3)|(2:(1:(4:10|13|(1:15)|16))|22))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_328666538 {
label = "IF [B:1:0x0002] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r14.userSelectedLoadingDrawable != null) goto L_0x0004\l}"];
subgraph cluster_Region_439539382 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|return r14.userSelectedLoadingDrawable\l}"];
}
}
subgraph cluster_Region_2117002338 {
label = "R(2:(1:(4:10|13|(1:15)|16))|22)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1526167333 {
label = "IF [B:5:0x0009, B:7:0x000d] THEN: R(1:(4:10|13|(1:15)|16)) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0009|ADDED_TO_REGION\l|if (r14.mLoadingTile == null) goto L_0x000b\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|ADDED_TO_REGION\l|if (r14.mLoadingBackgroundColor != 0) goto L_0x000f\l}"];
subgraph cluster_Region_1898367884 {
label = "R(1:(4:10|13|(1:15)|16))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_2100114552 {
label = "Try: R(4:10|13|(1:15)|16) catches: R(1:19), R(1:17)";
node [shape=record,color=blue];
subgraph cluster_Region_1535420952 {
label = "R(4:10|13|(1:15)|16)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0015|Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\l|int r0 = r14.mTileProvider.getTileSource() != null ? r14.mTileProvider.getTileSource().getTileSizePixels() : 256\l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lPHI: r0 \l  PHI: (r0v8 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|android.graphics.Bitmap android.graphics.Bitmap r1 = android.graphics.Bitmap.createBitmap(r0, r0, android.graphics.Bitmap.Config.ARGB_8888)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\landroid.graphics.Canvas android.graphics.Canvas r8 = new android.graphics.Canvas(r1)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\landroid.graphics.Paint android.graphics.Paint r9 = new android.graphics.Paint()     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lr8.drawColor(r14.mLoadingBackgroundColor)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lr9.setColor(r14.mLoadingLineColor)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lr9.setStrokeWidth(0.0f)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lint int r10 = r0 \/ 16     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lint r11 = 0     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\l}"];
subgraph cluster_LoopRegion_895542763 {
label = "LOOP:0: (1:15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0046|LOOP_START\lCatch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lPHI: r11 \l  PHI: (r11v1 int) = (r11v0 int), (r11v2 int) binds: [B:13:0x0024, B:15:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:14:0x0046\-\>B:15:0x0048\l|if (r11 \< r0) goto L_0x0048     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\l}"];
subgraph cluster_Region_1752254901 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0048|LOOP_END\lCatch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lLOOP:0: B:14:0x0046\-\>B:15:0x0048\l|float float r12 = (float) r11     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lfloat float r13 = (float) r0     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lr8.drawLine(0.0f, r12, r13, r12, r9)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lr8.drawLine(r12, 0.0f, r12, r13, r9)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lr11 += r10     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\l}"];
}
}
Node_16 [shape=record,label="{16\:\ 0x005e|Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\l|r14.mLoadingTile = new android.graphics.drawable.BitmapDrawable(r1)     \/\/ Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\l}"];
}
subgraph cluster_Region_1948893771 {
label = "R(1:19) | ExcHandler: OutOfMemoryError (unused java.lang.OutOfMemoryError)\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0071|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"OutOfMemoryError getting loading tile\")\ljava.lang.System.gc()\l}"];
}
subgraph cluster_Region_352771508 {
label = "R(1:17) | ExcHandler: NullPointerException (unused java.lang.NullPointerException)\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0066|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"NullPointerException getting loading tile\")\ljava.lang.System.gc()\l}"];
}
}
}
}
Node_22 [shape=record,label="{22\:\ 0x007d|RETURN\l|return r14.mLoadingTile\l}"];
}
}
}
subgraph cluster_Region_1948893771 {
label = "R(1:19) | ExcHandler: OutOfMemoryError (unused java.lang.OutOfMemoryError)\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0071|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"OutOfMemoryError getting loading tile\")\ljava.lang.System.gc()\l}"];
}
subgraph cluster_Region_352771508 {
label = "R(1:17) | ExcHandler: NullPointerException (unused java.lang.NullPointerException)\l";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x0066|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"NullPointerException getting loading tile\")\ljava.lang.System.gc()\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0007}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x000b}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x000f|SYNTHETIC\lSplitter:B:8:0x000f\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\lSplitter:B:8:0x000f\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0017|Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\l}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0022|Catch:\{ OutOfMemoryError \-\> 0x0071, NullPointerException \-\> 0x0066 \}\l}"];
Node_18 [shape=record,color=red,label="{18\:\ ?|SYNTHETIC\lExcHandler: NullPointerException (unused java.lang.NullPointerException)\lSplitter:B:8:0x000f\l}"];
Node_20 [shape=record,color=red,label="{20\:\ ?|SYNTHETIC\lExcHandler: OutOfMemoryError (unused java.lang.OutOfMemoryError)\lSplitter:B:8:0x000f\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x007b}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x005e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.views.overlay.TilesOverlay.getLoadingTile((r14v0 'this' org.osmdroid.views.overlay.TilesOverlay A[IMMUTABLE_TYPE, THIS]))  | access modifiers changed from: private\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_4[style=dashed];
Node_5 -> Node_6;
Node_5 -> Node_21[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_21[style=dashed];
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_23[style=dashed];
Node_15 -> Node_14;
Node_16 -> Node_21;
Node_19 -> Node_21;
Node_17 -> Node_21;
Node_19 -> Node_21;
Node_17 -> Node_21;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_8 -> Node_20;
Node_8 -> Node_18;
Node_9 -> Node_10;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_18 -> Node_17;
Node_20 -> Node_19;
Node_21 -> Node_22;
Node_23 -> Node_16;
}

