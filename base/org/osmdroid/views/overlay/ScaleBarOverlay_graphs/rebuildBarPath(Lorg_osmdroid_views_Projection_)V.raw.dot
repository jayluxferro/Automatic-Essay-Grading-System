digraph "CFG fororg.osmdroid.views.overlay.ScaleBarOverlay.rebuildBarPath(Lorg\/osmdroid\/views\/Projection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:float) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.xdpi float \l0x0002: CAST  (r0 I:double) = (double) (r0 I:float) \l0x0003: CONST  (r2 I:?[long, double]) = \l  (4612901990326777938(0x400451eb851eb852, double:2.54) ?[long, double])\l \l0x0008: ARITH  (r0 I:double) = (r0 I:double) \/ (r2 I:double) \l0x0009: CAST  (r0 I:int) = (int) (r0 I:double) \l0x000a: IGET  (r1 I:float) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.ydpi float \l0x000c: CAST  (r4 I:double) = (double) (r1 I:float) \l0x000d: ARITH  (r4 I:double) = (r4 I:double) \/ (r2 I:double) \l0x000e: CAST  (r1 I:int) = (int) (r4 I:double) \l0x000f: IGET  (r2 I:float) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.maxLength float \l0x0011: CAST  (r0 I:float) = (float) (r0 I:int) \l0x0012: ARITH  (r2 I:float) = (r2 I:float) * (r0 I:float) \l0x0014: CAST  (r0 I:int) = (int) (r2 I:float) \l0x0015: IGET  (r2 I:float) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.maxLength float \l0x0017: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0018: ARITH  (r2 I:float) = (r2 I:float) * (r1 I:float) \l0x001a: CAST  (r1 I:int) = (int) (r2 I:float) \l0x001b: IGET  (r2 I:int) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.screenWidth int \l0x001d: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x001f: ARITH  (r3 I:int) = (r0 I:int) \/ (2 int) \l0x0021: ARITH  (r2 I:int) = (r2 I:int) \- (r3 I:int) \l0x0022: IGET  (r4 I:int) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.yOffset int \l0x0024: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0025: INVOKE  (r2 I:org.osmdroid.api.IGeoPoint) = \l  (r13 I:org.osmdroid.views.Projection)\l  (r2 I:int)\l  (r4 I:int)\l  (r5 I:org.osmdroid.util.GeoPoint)\l org.osmdroid.views.Projection.fromPixels(int, int, org.osmdroid.util.GeoPoint):org.osmdroid.api.IGeoPoint type: VIRTUAL \l0x0029: IGET  (r4 I:int) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.screenWidth int \l0x002b: ARITH  (r4 I:int) = (r4 I:int) \/ (2 int) \l0x002d: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int) \l0x002e: IGET  (r3 I:int) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.yOffset int \l0x0030: INVOKE  (r3 I:org.osmdroid.api.IGeoPoint) = \l  (r13 I:org.osmdroid.views.Projection)\l  (r4 I:int)\l  (r3 I:int)\l  (r5 I:org.osmdroid.util.GeoPoint)\l org.osmdroid.views.Projection.fromPixels(int, int, org.osmdroid.util.GeoPoint):org.osmdroid.api.IGeoPoint type: VIRTUAL \l0x0034: CHECK_CAST  (r2 I:org.osmdroid.util.GeoPoint) = (org.osmdroid.util.GeoPoint) (r2 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  (r2 I:double) = \l  (r2 I:org.osmdroid.util.GeoPoint)\l  (r3 I:org.osmdroid.api.IGeoPoint)\l org.osmdroid.util.GeoPoint.distanceToAsDouble(org.osmdroid.api.IGeoPoint):double type: VIRTUAL \l0x003a: IGET  (r4 I:boolean) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.adjustLength boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x003c|0x003c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0043 \l}"];
Node_2 [shape=record,label="{2\:\ 0x003e|0x003e: INVOKE  (r6 I:double) = \l  (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay)\l  (r2 I:double)\l org.osmdroid.views.overlay.ScaleBarOverlay.adjustScaleBarLength(double):double type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0043|0x0043: MOVE  (r6 I:?[long, double]) = (r2 I:?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0044|0x0044: CAST  (r8 I:double) = (double) (r0 I:int) \l0x0045: ARITH  (r8 I:double) = (r8 I:double) * (r6 I:double) \l0x0047: ARITH  (r8 I:double) = (r8 I:double) \/ (r2 I:double) \l0x0048: CAST  (r0 I:int) = (int) (r8 I:double) \l0x0049: IGET  (r2 I:int) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.screenWidth int \l0x004b: ARITH  (r2 I:int) = (r2 I:int) \/ (2 int) \l0x004d: IGET  (r3 I:int) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.screenHeight int \l0x004f: ARITH  (r3 I:int) = (r3 I:int) \/ (2 int) \l0x0051: ARITH  (r4 I:int) = (r1 I:int) \/ (2 int) \l0x0053: ARITH  (r3 I:int) = (r3 I:int) \- (r4 I:int) \l0x0054: INVOKE  (r2 I:org.osmdroid.api.IGeoPoint) = \l  (r13 I:org.osmdroid.views.Projection)\l  (r2 I:int)\l  (r3 I:int)\l  (r5 I:org.osmdroid.util.GeoPoint)\l org.osmdroid.views.Projection.fromPixels(int, int, org.osmdroid.util.GeoPoint):org.osmdroid.api.IGeoPoint type: VIRTUAL \l0x0058: IGET  (r3 I:int) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.screenWidth int \l0x005a: ARITH  (r3 I:int) = (r3 I:int) \/ (2 int) \l0x005c: IGET  (r8 I:int) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.screenHeight int \l0x005e: ARITH  (r8 I:int) = (r8 I:int) \/ (2 int) \l0x0060: ARITH  (r8 I:int) = (r8 I:int) + (r4 I:int) \l0x0061: INVOKE  (r13 I:org.osmdroid.api.IGeoPoint) = \l  (r13 I:org.osmdroid.views.Projection)\l  (r3 I:int)\l  (r8 I:int)\l  (r5 I:org.osmdroid.util.GeoPoint)\l org.osmdroid.views.Projection.fromPixels(int, int, org.osmdroid.util.GeoPoint):org.osmdroid.api.IGeoPoint type: VIRTUAL \l0x0065: CHECK_CAST  (r2 I:org.osmdroid.util.GeoPoint) = (org.osmdroid.util.GeoPoint) (r2 I:?[OBJECT, ARRAY]) \l0x0067: INVOKE  (r2 I:double) = \l  (r2 I:org.osmdroid.util.GeoPoint)\l  (r13 I:org.osmdroid.api.IGeoPoint)\l org.osmdroid.util.GeoPoint.distanceToAsDouble(org.osmdroid.api.IGeoPoint):double type: VIRTUAL \l0x006b: IGET  (r13 I:boolean) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.adjustLength boolean \l}"];
Node_5 [shape=record,label="{5\:\ 0x006d|0x006d: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0074 \l}"];
Node_6 [shape=record,label="{6\:\ 0x006f|0x006f: INVOKE  (r4 I:double) = \l  (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay)\l  (r2 I:double)\l org.osmdroid.views.overlay.ScaleBarOverlay.adjustScaleBarLength(double):double type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0074|0x0074: MOVE  (r4 I:?[long, double]) = (r2 I:?[long, double]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0075|0x0075: CAST  (r8 I:double) = (double) (r1 I:int) \l0x0076: ARITH  (r8 I:double) = (r8 I:double) * (r4 I:double) \l0x0078: ARITH  (r8 I:double) = (r8 I:double) \/ (r2 I:double) \l0x0079: CAST  (r13 I:int) = (int) (r8 I:double) \l0x007a: INVOKE  (r1 I:java.lang.String) = \l  (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay)\l  (r6 I:double)\l org.osmdroid.views.overlay.ScaleBarOverlay.scaleBarLengthText(double):java.lang.String type: VIRTUAL \l0x007e: NEW_INSTANCE  (r2 I:android.graphics.Rect) =  android.graphics.Rect \l0x0080: INVOKE  (r2 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x0083: IGET  (r3 I:android.graphics.Paint) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.textPaint android.graphics.Paint \l0x0085: INVOKE  (r6 I:int) = (r1 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0089: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008a: INVOKE  \l  (r3 I:android.graphics.Paint)\l  (r1 I:java.lang.String)\l  (r7 I:int)\l  (r6 I:int)\l  (r2 I:android.graphics.Rect)\l android.graphics.Paint.getTextBounds(java.lang.String, int, int, android.graphics.Rect):void type: VIRTUAL \l0x008d: INVOKE  (r1 I:int) = (r2 I:android.graphics.Rect) android.graphics.Rect.height():int type: VIRTUAL \l0x0091: CAST  (r8 I:double) = (double) (r1 I:int) \l0x0092: CONST  (r10 I:?[long, double]) = \l  (4617315517961601024(0x4014000000000000, double:5.0) ?[long, double])\l \l0x0094: ARITH  (r8 I:double) = (r8 I:double) \/ (r10 I:double) \l0x0095: CAST  (r1 I:int) = (int) (r8 I:double) \l0x0096: INVOKE  (r3 I:java.lang.String) = \l  (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay)\l  (r4 I:double)\l org.osmdroid.views.overlay.ScaleBarOverlay.scaleBarLengthText(double):java.lang.String type: VIRTUAL \l0x009a: NEW_INSTANCE  (r4 I:android.graphics.Rect) =  android.graphics.Rect \l0x009c: INVOKE  (r4 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l0x009f: IGET  (r5 I:android.graphics.Paint) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.textPaint android.graphics.Paint \l0x00a1: INVOKE  (r6 I:int) = (r3 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x00a5: INVOKE  \l  (r5 I:android.graphics.Paint)\l  (r3 I:java.lang.String)\l  (r7 I:int)\l  (r6 I:int)\l  (r4 I:android.graphics.Rect)\l android.graphics.Paint.getTextBounds(java.lang.String, int, int, android.graphics.Rect):void type: VIRTUAL \l0x00a8: INVOKE  (r3 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.height():int type: VIRTUAL \l0x00ac: CAST  (r5 I:double) = (double) (r3 I:int) \l0x00ad: ARITH  (r5 I:double) = (r5 I:double) \/ (r10 I:double) \l0x00ae: CAST  (r3 I:int) = (int) (r5 I:double) \l0x00af: INVOKE  (r2 I:int) = (r2 I:android.graphics.Rect) android.graphics.Rect.height():int type: VIRTUAL \l0x00b3: INVOKE  (r4 I:int) = (r4 I:android.graphics.Rect) android.graphics.Rect.height():int type: VIRTUAL \l0x00b7: IGET  (r5 I:android.graphics.Path) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.barPath android.graphics.Path \l0x00b9: INVOKE  (r5 I:android.graphics.Path) android.graphics.Path.rewind():void type: VIRTUAL \l0x00bc: IGET  (r5 I:boolean) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.alignBottom boolean \l}"];
Node_9 [shape=record,label="{9\:\ 0x00be|0x00be: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x00cb \l}"];
Node_10 [shape=record,label="{10\:\ 0x00c0|0x00c0: ARITH  (r1 I:int) = (r1 I:int) * (\-1 int) \l0x00c2: ARITH  (r2 I:int) = (r2 I:int) * (\-1 int) \l0x00c4: INVOKE  (r5 I:int) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.getMapHeight():int type: DIRECT \l0x00c8: ARITH  (r13 I:int) = (r5 I:int) \- (r13 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x00cb|0x00cb: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_12 [shape=record,label="{12\:\ 0x00cc|0x00cc: IGET  (r6 I:boolean) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.alignRight boolean \l}"];
Node_13 [shape=record,label="{13\:\ 0x00ce|0x00ce: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x00da \l}"];
Node_14 [shape=record,label="{14\:\ 0x00d0|0x00d0: ARITH  (r3 I:int) = (r3 I:int) * (\-1 int) \l0x00d2: ARITH  (r4 I:int) = (r4 I:int) * (\-1 int) \l0x00d4: INVOKE  (r7 I:int) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.getMapWidth():int type: DIRECT \l0x00d8: ARITH  (r0 I:int) = (r7 I:int) \- (r0 I:int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x00da|0x00da: IGET  (r6 I:boolean) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.latitudeBar boolean \l}"];
Node_16 [shape=record,label="{16\:\ 0x00dc|0x00dc: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x0103 \l}"];
Node_17 [shape=record,label="{17\:\ 0x00de|0x00de: IGET  (r6 I:android.graphics.Path) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.barPath android.graphics.Path \l0x00e0: CAST  (r8 I:float) = (float) (r0 I:int) \l0x00e1: ARITH  (r2 I:int) = (r2 I:int) + (r5 I:int) \l0x00e2: ARITH  (r1 I:int) = (r1 I:int) * (2 int) \l0x00e4: ARITH  (r2 I:int) = (r2 I:int) + (r1 I:int) \l0x00e5: CAST  (r1 I:float) = (float) (r2 I:int) \l0x00e6: INVOKE  (r6 I:android.graphics.Path), (r8 I:float), (r1 I:float) android.graphics.Path.moveTo(float, float):void type: VIRTUAL \l0x00e9: IGET  (r6 I:android.graphics.Path) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.barPath android.graphics.Path \l0x00eb: CAST  (r9 I:float) = (float) (r5 I:int) \l0x00ec: INVOKE  (r6 I:android.graphics.Path), (r8 I:float), (r9 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x00ef: IGET  (r6 I:android.graphics.Path) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.barPath android.graphics.Path \l0x00f1: CAST  (r8 I:float) = (float) (r7 I:int) \l0x00f2: INVOKE  (r6 I:android.graphics.Path), (r8 I:float), (r9 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x00f5: IGET  (r6 I:boolean) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.longitudeBar boolean \l}"];
Node_18 [shape=record,label="{18\:\ 0x00f7|0x00f7: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:20:0x00fe \l}"];
Node_19 [shape=record,label="{19\:\ 0x00f9|0x00f9: IGET  (r6 I:android.graphics.Path) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.barPath android.graphics.Path \l0x00fb: INVOKE  (r6 I:android.graphics.Path), (r8 I:float), (r1 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x00fe|0x00fe: IGET  (r1 I:android.graphics.Rect) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.latitudeBarRect android.graphics.Rect \l0x0100: INVOKE  \l  (r1 I:android.graphics.Rect)\l  (r7 I:int)\l  (r5 I:int)\l  (r0 I:int)\l  (r2 I:int)\l android.graphics.Rect.set(int, int, int, int):void type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0103|0x0103: IGET  (r0 I:boolean) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.longitudeBar boolean \l}"];
Node_22 [shape=record,label="{22\:\ 0x0105|0x0105: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:27:0x0133 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0107|0x0107: IGET  (r0 I:boolean) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.latitudeBar boolean \l}"];
Node_24 [shape=record,label="{24\:\ 0x0109|0x0109: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x011d \l}"];
Node_25 [shape=record,label="{25\:\ 0x010b|0x010b: IGET  (r0 I:android.graphics.Path) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.barPath android.graphics.Path \l0x010d: ARITH  (r1 I:int) = (r7 I:int) + (r4 I:int) \l0x010f: ARITH  (r2 I:int) = (r3 I:int) * (2 int) \l0x0111: ARITH  (r1 I:int) = (r1 I:int) + (r2 I:int) \l0x0112: CAST  (r1 I:float) = (float) (r1 I:int) \l0x0113: CAST  (r2 I:float) = (float) (r5 I:int) \l0x0114: INVOKE  (r0 I:android.graphics.Path), (r1 I:float), (r2 I:float) android.graphics.Path.moveTo(float, float):void type: VIRTUAL \l0x0117: IGET  (r0 I:android.graphics.Path) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.barPath android.graphics.Path \l0x0119: CAST  (r1 I:float) = (float) (r7 I:int) \l0x011a: INVOKE  (r0 I:android.graphics.Path), (r1 I:float), (r2 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x011d|0x011d: IGET  (r0 I:android.graphics.Path) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.barPath android.graphics.Path \l0x011f: CAST  (r1 I:float) = (float) (r7 I:int) \l0x0120: CAST  (r2 I:float) = (float) (r13 I:int) \l0x0121: INVOKE  (r0 I:android.graphics.Path), (r1 I:float), (r2 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x0124: IGET  (r0 I:android.graphics.Path) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.barPath android.graphics.Path \l0x0126: ARITH  (r4 I:int) = (r4 I:int) + (r7 I:int) \l0x0127: ARITH  (r3 I:int) = (r3 I:int) * (2 int) \l0x0129: ARITH  (r4 I:int) = (r4 I:int) + (r3 I:int) \l0x012a: CAST  (r1 I:float) = (float) (r4 I:int) \l0x012b: INVOKE  (r0 I:android.graphics.Path), (r1 I:float), (r2 I:float) android.graphics.Path.lineTo(float, float):void type: VIRTUAL \l0x012e: IGET  (r0 I:android.graphics.Rect) = (r12 I:org.osmdroid.views.overlay.ScaleBarOverlay) org.osmdroid.views.overlay.ScaleBarOverlay.longitudeBarRect android.graphics.Rect \l0x0130: INVOKE  \l  (r0 I:android.graphics.Rect)\l  (r7 I:int)\l  (r5 I:int)\l  (r4 I:int)\l  (r13 I:int)\l android.graphics.Rect.set(int, int, int, int):void type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x0133|0x0133: RETURN   \l}"];
MethodNode[shape=record,label="{protected void org.osmdroid.views.overlay.ScaleBarOverlay.rebuildBarPath((r12 'this' I:org.osmdroid.views.overlay.ScaleBarOverlay A[IMMUTABLE_TYPE, THIS]), (r13 I:org.osmdroid.views.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_27;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
}

