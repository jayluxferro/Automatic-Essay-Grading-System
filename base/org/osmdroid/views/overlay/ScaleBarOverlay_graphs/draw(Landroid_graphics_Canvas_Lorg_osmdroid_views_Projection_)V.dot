digraph "CFG fororg.osmdroid.views.overlay.ScaleBarOverlay.draw(Landroid\/graphics\/Canvas;Lorg\/osmdroid\/views\/Projection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double r0 = r15.getZoomLevel()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|if ((r0 \> r13.minZoom ? 1 : (r0 == r13.minZoom ? 0 : \-1)) \>= 0) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|android.graphics.Rect r2 = r15.getIntrinsicScreenRect()\lint r3 = r2.width()\lint r2 = r2.height()\lr5 = 0\l}"];
Node_4 [shape=record,label="{4\:\ 0x001b|if (r2 != r13.screenHeight) goto L_0x0024\l}"];
Node_5 [shape=record,label="{5\:\ 0x001d}"];
Node_6 [shape=record,label="{6\:\ 0x001f|if (r3 == r13.screenWidth) goto L_0x0022\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|r4 = false\l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|r4 = true\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|PHI: r4 \l  PHI: (r4v1 boolean) = (r4v2 boolean), (r4v4 boolean) binds: [B:8:0x0024, B:7:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|r13.screenHeight = r2\lr13.screenWidth = r3\lorg.osmdroid.api.IGeoPoint r2 = r15.fromPixels(r13.screenWidth \/ 2, r13.screenHeight \/ 2, (org.osmdroid.util.GeoPoint) null)\l}"];
Node_10 [shape=record,label="{10\:\ 0x003a|if ((r0 \> r13.lastZoomLevel ? 1 : (r0 == r13.lastZoomLevel ? 0 : \-1)) != 0) goto L_0x0048\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c}"];
Node_12 [shape=record,label="{12\:\ 0x0044|if ((r2.getLatitude() \> r13.lastLatitude ? 1 : (r2.getLatitude() == r13.lastLatitude ? 0 : \-1)) != 0) goto L_0x0048\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|if (r4 == false) goto L_0x0053\l}"];
Node_14 [shape=record,label="{14\:\ 0x0048|r13.lastZoomLevel = r0\lr13.lastLatitude = r2.getLatitude()\lrebuildBarPath(r15)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0053|int r0 = r13.xOffset\lint r1 = r13.yOffset\l}"];
Node_16 [shape=record,label="{16\:\ 0x0059|if (r13.alignBottom == false) goto L_0x005d\l}"];
Node_17 [shape=record,label="{17\:\ 0x005b|int r1 = r1 * \-1\l}"];
Node_18 [shape=record,label="{18\:\ 0x005d|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v7 int) binds: [B:16:0x0059, B:17:0x005b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_19 [shape=record,label="{19\:\ 0x005f|if (r13.alignRight == false) goto L_0x0063\l}"];
Node_20 [shape=record,label="{20\:\ 0x0061|int r0 = r0 * \-1\l}"];
Node_21 [shape=record,label="{21\:\ 0x0063|PHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v25 int) binds: [B:19:0x005f, B:20:0x0061] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0065|if (r13.centred == false) goto L_0x0075\l}"];
Node_23 [shape=record,label="{23\:\ 0x0067}"];
Node_24 [shape=record,label="{24\:\ 0x0069|if (r13.latitudeBar == false) goto L_0x0075\l}"];
Node_25 [shape=record,label="{25\:\ 0x006b|int r0 = r0 + ((\-r13.latitudeBarRect.width()) \/ 2)\l}"];
Node_26 [shape=record,label="{26\:\ 0x0075|PHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v2 int), (r0v24 int) binds: [B:22:0x0065, B:24:0x0069, B:25:0x006b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_27 [shape=record,label="{27\:\ 0x0077|if (r13.centred == false) goto L_0x0087\l}"];
Node_28 [shape=record,label="{28\:\ 0x0079}"];
Node_29 [shape=record,label="{29\:\ 0x007b|if (r13.longitudeBar == false) goto L_0x0087\l}"];
Node_30 [shape=record,label="{30\:\ 0x007d|int r1 = r1 + ((\-r13.longitudeBarRect.height()) \/ 2)\l}"];
Node_31 [shape=record,label="{31\:\ 0x0087|PHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v1 int), (r1v6 int) binds: [B:27:0x0077, B:29:0x007b, B:30:0x007d] A[DONT_GENERATE, DONT_INLINE]\l|r15.save(r14, false, true)\lr14.translate((float) r0, (float) r1)\l}"];
Node_32 [shape=record,label="{32\:\ 0x0091|if (r13.latitudeBar == false) goto L_0x009e\l}"];
Node_33 [shape=record,label="{33\:\ 0x0093}"];
Node_34 [shape=record,label="{34\:\ 0x0095|if (r13.bgPaint == null) goto L_0x009e\l}"];
Node_35 [shape=record,label="{35\:\ 0x0097|r14.drawRect(r13.latitudeBarRect, r13.bgPaint)\l}"];
Node_36 [shape=record,label="{36\:\ 0x009e}"];
Node_37 [shape=record,label="{37\:\ 0x00a0|if (r13.longitudeBar == false) goto L_0x00cb\l}"];
Node_38 [shape=record,label="{38\:\ 0x00a2}"];
Node_39 [shape=record,label="{39\:\ 0x00a4|if (r13.bgPaint == null) goto L_0x00cb\l}"];
Node_40 [shape=record,label="{40\:\ 0x00a6}"];
Node_41 [shape=record,label="{41\:\ 0x00a8|if (r13.latitudeBar == false) goto L_0x00b0\l}"];
Node_42 [shape=record,label="{42\:\ 0x00aa|int r5 = r13.latitudeBarRect.height()\l}"];
Node_43 [shape=record,label="{43\:\ 0x00b0|PHI: r5 \l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:41:0x00a8, B:42:0x00aa] A[DONT_GENERATE, DONT_INLINE]\l|r7 = r14\lr7.drawRect((float) r13.longitudeBarRect.left, (float) (r13.longitudeBarRect.top + r5), (float) r13.longitudeBarRect.right, (float) r13.longitudeBarRect.bottom, r13.bgPaint)\l}"];
Node_44 [shape=record,label="{44\:\ 0x00cb|r14.drawPath(r13.barPath, r13.barPaint)\l}"];
Node_45 [shape=record,label="{45\:\ 0x00d4|if (r13.latitudeBar == false) goto L_0x00d9\l}"];
Node_46 [shape=record,label="{46\:\ 0x00d6|drawLatitudeText(r14, r15)\l}"];
Node_47 [shape=record,label="{47\:\ 0x00d9}"];
Node_48 [shape=record,label="{48\:\ 0x00db|if (r13.longitudeBar == false) goto L_0x00e0\l}"];
Node_49 [shape=record,label="{49\:\ 0x00dd|drawLongitudeText(r14, r15)\l}"];
Node_50 [shape=record,label="{50\:\ 0x00e0|r15.restore(r14, true)\l}"];
Node_51 [shape=record,label="{51\:\ 0x00e3|RETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.overlay.ScaleBarOverlay.draw((r13v0 'this' org.osmdroid.views.overlay.ScaleBarOverlay A[IMMUTABLE_TYPE, THIS]), (r14v0 android.graphics.Canvas A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 org.osmdroid.views.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_14;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_31;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_31;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_36;
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_44;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_44;
Node_40 -> Node_41;
Node_41 -> Node_42[style=dashed];
Node_41 -> Node_43;
Node_42 -> Node_43;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_45 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_50 -> Node_51;
}

