digraph "CFG fororg.osmdroid.views.overlay.milestones.MilestoneMeterDistanceLister.getNewNeededForNext()D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r7.mMilestoneMeters != null) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|RETURN\l|return r7.mNbMetersRecurrence\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x000c|if (r7.mMilestoneMetersIndex \< r7.mMilestoneMeters.length) goto L_0x0011\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|RETURN\l|return \-1.0d\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011}"];
Node_8 [shape=record,label="{8\:\ 0x0015|if (r7.mMilestoneMetersIndex != 0) goto L_0x0019\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|r3 = 0.0d\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|r3 = r7.mMilestoneMeters[r7.mMilestoneMetersIndex + \-1]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0021|PHI: r3 \l  PHI: (r3v0 double) = (r3v3 double), (r3v4 double) binds: [B:10:0x0019, B:9:0x0017] A[DONT_GENERATE, DONT_INLINE]\l|double[] r0 = r7.mMilestoneMeters\lint r5 = r7.mMilestoneMetersIndex\lr7.mMilestoneMetersIndex = r5 + 1\ldouble r5 = r0[r5] \- r3\l}"];
Node_12 [shape=record,label="{12\:\ 0x002e|if ((r5 \> 0.0d ? 1 : (r5 == 0.0d ? 0 : \-1)) \< 0) goto L_0x0031\l}"];
Node_13 [shape=record,label="{13\:\ 0x0030|RETURN\l|return r5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0031}"];
Node_15 [shape=record,label="{15\:\ 0x0036|throw new java.lang.IllegalArgumentException()\l}"];
MethodNode[shape=record,label="{private double org.osmdroid.views.overlay.milestones.MilestoneMeterDistanceLister.getNewNeededForNext((r7v0 'this' org.osmdroid.views.overlay.milestones.MilestoneMeterDistanceLister A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_14 -> Node_15;
}

