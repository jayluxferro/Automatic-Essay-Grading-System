digraph "CFG fororg.osmdroid.views.MapController.animateTo(II)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.views.MapView) = (r8 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0002: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.isLayoutOccurred():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r0 I:org.osmdroid.views.MapController$ReplayController) = (r8 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mReplayController org.osmdroid.views.MapController$ReplayController \l0x000a: INVOKE  \l  (r0 I:org.osmdroid.views.MapController$ReplayController)\l  (r9 I:int)\l  (r10 I:int)\l org.osmdroid.views.MapController.ReplayController.animateTo(int, int):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000e|0x000e: IGET  (r0 I:org.osmdroid.views.MapView) = (r8 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0010: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.isAnimating():boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0057 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IGET  (r0 I:org.osmdroid.views.MapView) = (r8 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0018: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: IPUT  (r1 I:boolean), (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mIsFlinging boolean \l0x001b: IGET  (r0 I:org.osmdroid.views.MapView) = (r8 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x001d: INVOKE  (r0 I:long) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMapScrollX():long type: VIRTUAL \l0x0021: CAST  (r3 I:int) = (int) (r0 I:long) \l0x0022: IGET  (r0 I:org.osmdroid.views.MapView) = (r8 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0024: INVOKE  (r0 I:long) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMapScrollY():long type: VIRTUAL \l0x0028: CAST  (r4 I:int) = (int) (r0 I:long) \l0x0029: IGET  (r0 I:org.osmdroid.views.MapView) = (r8 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x002b: INVOKE  (r0 I:int) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getWidth():int type: VIRTUAL \l0x002f: ARITH  (r0 I:int) = (r0 I:int) \/ (2 int) \l0x0031: ARITH  (r5 I:int) = (r9 I:int) \- (r0 I:int) \l0x0033: IGET  (r9 I:org.osmdroid.views.MapView) = (r8 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0035: INVOKE  (r9 I:int) = (r9 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getHeight():int type: VIRTUAL \l0x0039: ARITH  (r9 I:int) = (r9 I:int) \/ (2 int) \l0x003b: ARITH  (r6 I:int) = (r10 I:int) \- (r9 I:int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x003d|0x003d: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0041 \l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|0x003f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0057 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: IGET  (r9 I:org.osmdroid.views.MapView) = (r8 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0043: INVOKE  (r2 I:android.widget.Scroller) = (r9 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getScroller():android.widget.Scroller type: VIRTUAL \l0x0047: INVOKE  (r9 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x004b: INVOKE  (r7 I:int) = (r9 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getAnimationSpeedDefault():int type: INTERFACE \l0x004f: INVOKE  \l  (r2 I:android.widget.Scroller)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:int)\l android.widget.Scroller.startScroll(int, int, int, int, int):void type: VIRTUAL \l0x0052: IGET  (r9 I:org.osmdroid.views.MapView) = (r8 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0054: INVOKE  (r9 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.postInvalidate():void type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0057|0x0057: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.MapController.animateTo((r8 'this' I:org.osmdroid.views.MapController A[IMMUTABLE_TYPE, THIS]), (r9 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
}

