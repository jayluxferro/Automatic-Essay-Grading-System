digraph "CFG fororg.osmdroid.views.MapController.zoomToFixing(DIILjava\/lang\/Long;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x0002: IGET  (r0 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0004: INVOKE  (r0 I:double) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMaxZoomLevel():double type: VIRTUAL \l0x0008: CMP_L  (r0 I:int) = (r21 I:double), (r0 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0013 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r0 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x000e: INVOKE  (r0 I:double) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMaxZoomLevel():double type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: MOVE  (r0 I:?[long, double]) = (r21 I:?[long, double]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: IGET  (r2 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0017: INVOKE  (r2 I:double) = (r2 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMinZoomLevel():double type: VIRTUAL \l0x001b: CMP_G  (r2 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: IF  (r2 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:7:0x0025 \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: IGET  (r0 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0021: INVOKE  (r0 I:double) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMinZoomLevel():double type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0025|0x0025: IGET  (r2 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0027: INVOKE  (r2 I:double) = (r2 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getZoomLevelDouble():double type: VIRTUAL \l0x002b: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002c: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002d: CMP_G  (r5 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002f|0x002f: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:11:0x0039 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0031|0x0031: IGET  (r5 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0033: INVOKE  (r5 I:boolean) = (r5 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.canZoomOut():boolean type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0037|0x0037: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x0045 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0039|0x0039: CMP_L  (r5 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003b|0x003b: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:16:0x0047 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003d|0x003d: IGET  (r5 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x003f: INVOKE  (r5 I:boolean) = (r5 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.canZoomIn():boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0043|0x0043: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x0047 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|0x0045: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|0x0047: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_17 [shape=record,label="{17\:\ 0x0048|0x0048: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004b \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: RETURN  (r4 I:boolean) \l}"];
Node_19 [shape=record,label="{19\:\ 0x004b|0x004b: IGET  (r5 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x004d: IGET  (r5 I:java.util.concurrent.atomic.AtomicBoolean) = (r5 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mIsAnimating java.util.concurrent.atomic.AtomicBoolean \l0x004f: INVOKE  (r5 I:boolean) = \l  (r5 I:java.util.concurrent.atomic.AtomicBoolean)\l  (r10 I:boolean)\l java.util.concurrent.atomic.AtomicBoolean.getAndSet(boolean):boolean type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0053|0x0053: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x0056 \l}"];
Node_21 [shape=record,label="{21\:\ 0x0055|0x0055: RETURN  (r4 I:boolean) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0056|0x0056: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0057: IGET  (r5 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0059: IGET  (r5 I:java.util.List\<org.osmdroid.events.MapListener\>) = (r5 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mListners java.util.List \l0x005b: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x005f|0x005f: INVOKE  (r6 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_24 [shape=record,label="{24\:\ 0x0063|0x0063: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:30:0x0079 \l}"];
Node_25 [shape=record,label="{25\:\ 0x0065|0x0065: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0069: CHECK_CAST  (r6 I:org.osmdroid.events.MapListener) = (org.osmdroid.events.MapListener) (r6 I:?[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ 0x006b|0x006b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x006e \l}"];
Node_28 [shape=record,label="{28\:\ 0x006e|0x006e: NEW_INSTANCE  (r4 I:org.osmdroid.events.ZoomEvent) =  org.osmdroid.events.ZoomEvent \l0x0070: IGET  (r7 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0072: INVOKE  \l  (r4 I:org.osmdroid.events.ZoomEvent)\l  (r7 I:org.osmdroid.views.MapView)\l  (r0 I:double)\l org.osmdroid.events.ZoomEvent.\<init\>(org.osmdroid.views.MapView, double):void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x0075|0x0075: INVOKE  \l  (r6 I:org.osmdroid.events.MapListener)\l  (r4 I:org.osmdroid.events.ZoomEvent)\l org.osmdroid.events.MapListener.onZoom(org.osmdroid.events.ZoomEvent):boolean type: INTERFACE \l}"];
Node_30 [shape=record,label="{30\:\ 0x0079|0x0079: IGET  (r4 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x007b: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x007d: CAST  (r5 I:float) = (float) (r5 I:int) \l0x007e: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r24 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0080: CAST  (r6 I:float) = (float) (r6 I:int) \l0x0081: INVOKE  \l  (r4 I:org.osmdroid.views.MapView)\l  (r5 I:float)\l  (r6 I:float)\l org.osmdroid.views.MapView.setMultiTouchScaleInitPoint(float, float):void type: VIRTUAL \l0x0084: IGET  (r4 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0086: INVOKE  (r4 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.startAnimation():void type: VIRTUAL \l0x0089: CONST  (r4 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x008b: ARITH  (r6 I:double) = (r0 I:double) \- (r2 I:double) \l0x008d: INVOKE  (r4 I:double) = (r4 I:double), (r6 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x0091: CAST  (r4 I:float) = (float) (r4 I:double) \l0x0092: SGET  (r5 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0094: CONST  (r6 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_31 [shape=record,label="{31\:\ 0x0096|0x0096: IF  (r5 I:?[int, byte, short, char]) \< (r6 I:?[int, byte, short, char])  \-\> B:38:0x00d9 \l}"];
Node_32 [shape=record,label="{32\:\ 0x0098|0x0098: NEW_INSTANCE  (r11 I:org.osmdroid.views.MapController$MapAnimatorListener) =  org.osmdroid.views.MapController$MapAnimatorListener \l0x009a: INVOKE  (r2 I:java.lang.Double) = (r2 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l0x009e: INVOKE  (r3 I:java.lang.Double) = (r0 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l0x00a2: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a3: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a4: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a5: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a6: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00a7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x00a8: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r20 I:?[OBJECT, ARRAY]) \l0x00aa: INVOKE  \l  (r0 I:org.osmdroid.views.MapController$MapAnimatorListener)\l  (r1 I:org.osmdroid.views.MapController)\l  (r2 I:java.lang.Double)\l  (r3 I:java.lang.Double)\l  (r4 I:org.osmdroid.api.IGeoPoint)\l  (r5 I:org.osmdroid.api.IGeoPoint)\l  (r6 I:java.lang.Float)\l  (r7 I:java.lang.Float)\l  (r8 I:java.lang.Boolean)\l org.osmdroid.views.MapController.MapAnimatorListener.\<init\>(org.osmdroid.views.MapController, java.lang.Double, java.lang.Double, org.osmdroid.api.IGeoPoint, org.osmdroid.api.IGeoPoint, java.lang.Float, java.lang.Float, java.lang.Boolean):void type: DIRECT \l0x00ad: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x00ae: NEW_ARRAY  (r0 I:float[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x00b0: FILL_ARRAY  (r0 I:?[int, float][]), data: [0, 1065353216] \l0x00b3: INVOKE  (r0 I:android.animation.ValueAnimator) = (r0 I:float[]) android.animation.ValueAnimator.ofFloat(float[]):android.animation.ValueAnimator type: STATIC \l0x00b7: INVOKE  \l  (r0 I:android.animation.ValueAnimator)\l  (r11 I:android.animation.Animator$AnimatorListener)\l android.animation.ValueAnimator.addListener(android.animation.Animator$AnimatorListener):void type: VIRTUAL \l0x00ba: INVOKE  \l  (r0 I:android.animation.ValueAnimator)\l  (r11 I:android.animation.ValueAnimator$AnimatorUpdateListener)\l android.animation.ValueAnimator.addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener):void type: VIRTUAL \l}"];
Node_33 [shape=record,label="{33\:\ 0x00bd|0x00bd: IF  (r25 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:35:0x00cc \l}"];
Node_34 [shape=record,label="{34\:\ 0x00bf|0x00bf: INVOKE  (r1 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x00c3: INVOKE  (r1 I:int) = (r1 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getAnimationSpeedShort():int type: INTERFACE \l0x00c7: CAST  (r1 I:long) = (long) (r1 I:int) \l0x00c8: INVOKE  (r0 I:android.animation.ValueAnimator), (r1 I:long) android.animation.ValueAnimator.setDuration(long):android.animation.ValueAnimator type: VIRTUAL \l}"];
Node_35 [shape=record,label="{35\:\ 0x00cc|0x00cc: INVOKE  (r1 I:long) = (r25 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x00d0: INVOKE  (r0 I:android.animation.ValueAnimator), (r1 I:long) android.animation.ValueAnimator.setDuration(long):android.animation.ValueAnimator type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x00d3|0x00d3: IPUT  \l  (r0 I:android.animation.Animator)\l  (r9 I:org.osmdroid.views.MapController)\l org.osmdroid.views.MapController.mCurrentAnimator android.animation.Animator \l0x00d5: INVOKE  (r0 I:android.animation.ValueAnimator) android.animation.ValueAnimator.start():void type: VIRTUAL \l}"];
Node_37 [shape=record,label="{37\:\ 0x00d8|0x00d8: RETURN  (r10 I:boolean) \l}"];
Node_38 [shape=record,label="{38\:\ 0x00d9|0x00d9: IPUT  (r0 I:double), (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mTargetZoomLevel double \l0x00db: CMP_L  (r0 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_39 [shape=record,label="{39\:\ 0x00dd|0x00dd: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:41:0x00e7 \l}"];
Node_40 [shape=record,label="{40\:\ 0x00df|0x00df: IGET  (r0 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x00e1: IGET  (r1 I:android.view.animation.ScaleAnimation) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mZoomInAnimationOld android.view.animation.ScaleAnimation \l0x00e3: INVOKE  \l  (r0 I:org.osmdroid.views.MapView)\l  (r1 I:android.view.animation.Animation)\l org.osmdroid.views.MapView.startAnimation(android.view.animation.Animation):void type: VIRTUAL \l}"];
Node_41 [shape=record,label="{41\:\ 0x00e7|0x00e7: IGET  (r0 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x00e9: IGET  (r1 I:android.view.animation.ScaleAnimation) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mZoomOutAnimationOld android.view.animation.ScaleAnimation \l0x00eb: INVOKE  \l  (r0 I:org.osmdroid.views.MapView)\l  (r1 I:android.view.animation.Animation)\l org.osmdroid.views.MapView.startAnimation(android.view.animation.Animation):void type: VIRTUAL \l}"];
Node_42 [shape=record,label="{42\:\ 0x00ee|0x00ee: NEW_INSTANCE  (r0 I:android.view.animation.ScaleAnimation) =  android.view.animation.ScaleAnimation \l0x00f0: CONST  (r12 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x00f2: CONST  (r14 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x00f4: CONST  (r16 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00f6: CONST  (r17 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l0x00f8: CONST  (r18 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x00fa: CONST  (r19 I:?[int, float, short, byte, char]) = \l  (1056964608(0x3f000000, float:0.5) ?[int, float, short, byte, char])\l \l0x00fc: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x00fd: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00fe: MOVE  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00ff: INVOKE  \l  (r11 I:android.view.animation.ScaleAnimation)\l  (r12 I:float)\l  (r13 I:float)\l  (r14 I:float)\l  (r15 I:float)\l  (r16 I:int)\l  (r17 I:float)\l  (r18 I:int)\l  (r19 I:float)\l android.view.animation.ScaleAnimation.\<init\>(float, float, float, float, int, float, int, float):void type: DIRECT \l}"];
Node_43 [shape=record,label="{43\:\ 0x0102|0x0102: IF  (r25 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0111 \l}"];
Node_44 [shape=record,label="{44\:\ 0x0104|0x0104: INVOKE  (r1 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0108: INVOKE  (r1 I:int) = (r1 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getAnimationSpeedShort():int type: INTERFACE \l0x010c: CAST  (r1 I:long) = (long) (r1 I:int) \l0x010d: INVOKE  (r0 I:android.view.animation.ScaleAnimation), (r1 I:long) android.view.animation.ScaleAnimation.setDuration(long):void type: VIRTUAL \l}"];
Node_45 [shape=record,label="{45\:\ 0x0111|0x0111: INVOKE  (r1 I:long) = (r25 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x0115: INVOKE  (r0 I:android.view.animation.ScaleAnimation), (r1 I:long) android.view.animation.ScaleAnimation.setDuration(long):void type: VIRTUAL \l}"];
Node_46 [shape=record,label="{46\:\ 0x0118|0x0118: NEW_INSTANCE  (r1 I:org.osmdroid.views.MapController$ZoomAnimationListener) =  org.osmdroid.views.MapController$ZoomAnimationListener \l0x011a: INVOKE  \l  (r1 I:org.osmdroid.views.MapController$ZoomAnimationListener)\l  (r9 I:org.osmdroid.views.MapController)\l org.osmdroid.views.MapController.ZoomAnimationListener.\<init\>(org.osmdroid.views.MapController):void type: DIRECT \l0x011d: INVOKE  \l  (r0 I:android.view.animation.ScaleAnimation)\l  (r1 I:android.view.animation.Animation$AnimationListener)\l android.view.animation.ScaleAnimation.setAnimationListener(android.view.animation.Animation$AnimationListener):void type: VIRTUAL \l}"];
Node_47 [shape=record,label="{47\:\ 0x0120|0x0120: RETURN  (r10 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.views.MapController.zoomToFixing((r20 'this' I:org.osmdroid.views.MapController A[IMMUTABLE_TYPE, THIS]), (r21 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:java.lang.Long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_11;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_15;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_30;
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_29[style=dashed];
Node_28 -> Node_29;
Node_29 -> Node_23;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_38;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_36;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_46;
Node_45 -> Node_46;
Node_46 -> Node_47;
}

