digraph "CFG fororg.osmdroid.views.MapController.animateTo(Lorg\/osmdroid\/api\/IGeoPoint;Ljava\/lang\/Double;Ljava\/lang\/Long;Ljava\/lang\/Float;Ljava\/lang\/Boolean;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0001: IGET  (r0 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0003: INVOKE  (r0 I:boolean) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.isLayoutOccurred():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0015 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r1 I:org.osmdroid.views.MapController$ReplayController) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mReplayController org.osmdroid.views.MapController$ReplayController \l0x000b: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x000c: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x000d: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x000e: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x000f: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0011: INVOKE  \l  (r1 I:org.osmdroid.views.MapController$ReplayController)\l  (r2 I:org.osmdroid.api.IGeoPoint)\l  (r3 I:java.lang.Double)\l  (r4 I:java.lang.Long)\l  (r5 I:java.lang.Float)\l  (r6 I:java.lang.Boolean)\l org.osmdroid.views.MapController.ReplayController.animateTo(org.osmdroid.api.IGeoPoint, java.lang.Double, java.lang.Long, java.lang.Float, java.lang.Boolean):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0017: CONST  (r1 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|0x0019: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:15:0x007f \l}"];
Node_6 [shape=record,label="{6\:\ 0x001b|0x001b: NEW_INSTANCE  (r4 I:org.osmdroid.util.GeoPoint) =  org.osmdroid.util.GeoPoint \l0x001d: IGET  (r0 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x001f: INVOKE  (r0 I:org.osmdroid.views.Projection) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL \l0x0023: INVOKE  (r0 I:org.osmdroid.util.GeoPoint) = (r0 I:org.osmdroid.views.Projection) org.osmdroid.views.Projection.getCurrentCenter():org.osmdroid.util.GeoPoint type: VIRTUAL \l0x0027: INVOKE  \l  (r4 I:org.osmdroid.util.GeoPoint)\l  (r0 I:org.osmdroid.util.GeoPoint)\l org.osmdroid.util.GeoPoint.\<init\>(org.osmdroid.util.GeoPoint):void type: DIRECT \l0x002a: NEW_INSTANCE  (r10 I:org.osmdroid.views.MapController$MapAnimatorListener) =  org.osmdroid.views.MapController$MapAnimatorListener \l0x002c: IGET  (r0 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x002e: INVOKE  (r0 I:double) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getZoomLevelDouble():double type: VIRTUAL \l0x0032: INVOKE  (r2 I:java.lang.Double) = (r0 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l0x0036: IGET  (r0 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0038: INVOKE  (r0 I:float) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getMapOrientation():float type: VIRTUAL \l0x003c: INVOKE  (r6 I:java.lang.Float) = (r0 I:float) java.lang.Float.valueOf(float):java.lang.Float type: STATIC \l0x0040: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0041: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0042: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0043: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0044: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0045: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0047: INVOKE  \l  (r0 I:org.osmdroid.views.MapController$MapAnimatorListener)\l  (r1 I:org.osmdroid.views.MapController)\l  (r2 I:java.lang.Double)\l  (r3 I:java.lang.Double)\l  (r4 I:org.osmdroid.api.IGeoPoint)\l  (r5 I:org.osmdroid.api.IGeoPoint)\l  (r6 I:java.lang.Float)\l  (r7 I:java.lang.Float)\l  (r8 I:java.lang.Boolean)\l org.osmdroid.views.MapController.MapAnimatorListener.\<init\>(org.osmdroid.views.MapController, java.lang.Double, java.lang.Double, org.osmdroid.api.IGeoPoint, org.osmdroid.api.IGeoPoint, java.lang.Float, java.lang.Float, java.lang.Boolean):void type: DIRECT \l0x004a: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x004b: NEW_ARRAY  (r0 I:float[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x004d: FILL_ARRAY  (r0 I:?[int, float][]), data: [0, 1065353216] \l0x0050: INVOKE  (r0 I:android.animation.ValueAnimator) = (r0 I:float[]) android.animation.ValueAnimator.ofFloat(float[]):android.animation.ValueAnimator type: STATIC \l0x0054: INVOKE  \l  (r0 I:android.animation.ValueAnimator)\l  (r10 I:android.animation.Animator$AnimatorListener)\l android.animation.ValueAnimator.addListener(android.animation.Animator$AnimatorListener):void type: VIRTUAL \l0x0057: INVOKE  \l  (r0 I:android.animation.ValueAnimator)\l  (r10 I:android.animation.ValueAnimator$AnimatorUpdateListener)\l android.animation.ValueAnimator.addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x005a|0x005a: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0069 \l}"];
Node_8 [shape=record,label="{8\:\ 0x005c|0x005c: INVOKE  (r1 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0060: INVOKE  (r1 I:int) = (r1 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getAnimationSpeedDefault():int type: INTERFACE \l0x0064: CAST  (r1 I:long) = (long) (r1 I:int) \l0x0065: INVOKE  (r0 I:android.animation.ValueAnimator), (r1 I:long) android.animation.ValueAnimator.setDuration(long):android.animation.ValueAnimator type: VIRTUAL \l}"];
Node_9 [shape=record,label="{9\:\ 0x0069|0x0069: INVOKE  (r1 I:long) = (r14 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x006d: INVOKE  (r0 I:android.animation.ValueAnimator), (r1 I:long) android.animation.ValueAnimator.setDuration(long):android.animation.ValueAnimator type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0070|0x0070: IGET  (r1 I:android.animation.Animator) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mCurrentAnimator android.animation.Animator \l}"];
Node_11 [shape=record,label="{11\:\ 0x0072|0x0072: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0079 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0074|0x0074: IGET  (r1 I:android.animation.Animator) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mCurrentAnimator android.animation.Animator \l0x0076: INVOKE  (r1 I:android.animation.Animator) android.animation.Animator.end():void type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0079|0x0079: IPUT  \l  (r0 I:android.animation.Animator)\l  (r9 I:org.osmdroid.views.MapController)\l org.osmdroid.views.MapController.mCurrentAnimator android.animation.Animator \l0x007b: INVOKE  (r0 I:android.animation.ValueAnimator) android.animation.ValueAnimator.start():void type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x007e|0x007e: RETURN   \l}"];
Node_15 [shape=record,label="{15\:\ 0x007f|0x007f: IGET  (r0 I:org.osmdroid.views.MapView) = (r9 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0081: INVOKE  (r0 I:org.osmdroid.views.Projection) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getProjection():org.osmdroid.views.Projection type: VIRTUAL \l0x0085: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0086: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0087: INVOKE  (r0 I:android.graphics.Point) = \l  (r0 I:org.osmdroid.views.Projection)\l  (r12 I:org.osmdroid.api.IGeoPoint)\l  (r1 I:android.graphics.Point)\l org.osmdroid.views.Projection.toPixels(org.osmdroid.api.IGeoPoint, android.graphics.Point):android.graphics.Point type: VIRTUAL \l0x008b: IGET  (r1 I:int) = (r0 I:android.graphics.Point) android.graphics.Point.x int \l0x008d: IGET  (r0 I:int) = (r0 I:android.graphics.Point) android.graphics.Point.y int \l0x008f: INVOKE  \l  (r11 I:org.osmdroid.views.MapController)\l  (r1 I:int)\l  (r0 I:int)\l org.osmdroid.views.MapController.animateTo(int, int):void type: VIRTUAL \l}"];
Node_16 [shape=record,label="{16\:\ 0x0092|0x0092: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.MapController.animateTo((r11 'this' I:org.osmdroid.views.MapController A[IMMUTABLE_TYPE, THIS]), (r12 I:org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.lang.Long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:java.lang.Float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:java.lang.Boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
}

