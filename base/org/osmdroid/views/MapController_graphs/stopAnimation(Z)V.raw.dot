digraph "CFG fororg.osmdroid.views.MapController.stopAnimation(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.views.MapView) = (r2 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0002: INVOKE  (r0 I:android.widget.Scroller) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getScroller():android.widget.Scroller type: VIRTUAL \l0x0006: INVOKE  (r0 I:boolean) = (r0 I:android.widget.Scroller) android.widget.Scroller.isFinished():boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0020 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x001d \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IGET  (r0 I:org.osmdroid.views.MapView) = (r2 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0010: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: IPUT  (r1 I:boolean), (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mIsFlinging boolean \l0x0013: IGET  (r0 I:org.osmdroid.views.MapView) = (r2 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0015: INVOKE  (r0 I:android.widget.Scroller) = (r0 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getScroller():android.widget.Scroller type: VIRTUAL \l0x0019: INVOKE  (r0 I:android.widget.Scroller) android.widget.Scroller.abortAnimation():void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001d|0x001d: INVOKE  (r2 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.stopPanning():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0020|0x0020: SGET  (r0 I:int) =  android.os.Build.VERSION.SDK_INT int \l0x0022: CONST  (r1 I:?[int, float, short, byte, char]) = (11 ?[int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: IF  (r0 I:?[int, byte, short, char]) \< (r1 I:?[int, byte, short, char])  \-\> B:12:0x003c \l}"];
Node_7 [shape=record,label="{7\:\ 0x0026|0x0026: IGET  (r0 I:android.animation.Animator) = (r2 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mCurrentAnimator android.animation.Animator \l0x0028: IGET  (r1 I:org.osmdroid.views.MapView) = (r2 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x002a: IGET  (r1 I:java.util.concurrent.atomic.AtomicBoolean) = (r1 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mIsAnimating java.util.concurrent.atomic.AtomicBoolean \l0x002c: INVOKE  (r1 I:boolean) = (r1 I:java.util.concurrent.atomic.AtomicBoolean) java.util.concurrent.atomic.AtomicBoolean.get():boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004b \l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|0x0032: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0038 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: INVOKE  (r0 I:android.animation.Animator) android.animation.Animator.end():void type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|0x0038: INVOKE  (r0 I:android.animation.Animator) android.animation.Animator.cancel():void type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x003c|0x003c: IGET  (r3 I:org.osmdroid.views.MapView) = (r2 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x003e: IGET  (r3 I:java.util.concurrent.atomic.AtomicBoolean) = (r3 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.mIsAnimating java.util.concurrent.atomic.AtomicBoolean \l0x0040: INVOKE  (r3 I:boolean) = (r3 I:java.util.concurrent.atomic.AtomicBoolean) java.util.concurrent.atomic.AtomicBoolean.get():boolean type: VIRTUAL \l}"];
Node_13 [shape=record,label="{13\:\ 0x0044|0x0044: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x004b \l}"];
Node_14 [shape=record,label="{14\:\ 0x0046|0x0046: IGET  (r3 I:org.osmdroid.views.MapView) = (r2 I:org.osmdroid.views.MapController) org.osmdroid.views.MapController.mMapView org.osmdroid.views.MapView \l0x0048: INVOKE  (r3 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.clearAnimation():void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x004b|0x004b: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.views.MapController.stopAnimation((r2 'this' I:org.osmdroid.views.MapController A[IMMUTABLE_TYPE, THIS]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_15;
Node_11 -> Node_15;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
}

