digraph "CFG fororg.osmdroid.util.GarbageCollector.gc()Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.concurrent.atomic.AtomicBoolean) = (r3 I:org.osmdroid.util.GarbageCollector) org.osmdroid.util.GarbageCollector.mRunning java.util.concurrent.atomic.AtomicBoolean \l0x0002: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0003: INVOKE  (r0 I:boolean) = \l  (r0 I:java.util.concurrent.atomic.AtomicBoolean)\l  (r1 I:boolean)\l java.util.concurrent.atomic.AtomicBoolean.getAndSet(boolean):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN  (r0 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: NEW_INSTANCE  (r0 I:java.lang.Thread) =  java.lang.Thread \l0x000d: NEW_INSTANCE  (r2 I:org.osmdroid.util.GarbageCollector$1) =  org.osmdroid.util.GarbageCollector$1 \l0x000f: INVOKE  \l  (r2 I:org.osmdroid.util.GarbageCollector$1)\l  (r3 I:org.osmdroid.util.GarbageCollector)\l org.osmdroid.util.GarbageCollector.1.\<init\>(org.osmdroid.util.GarbageCollector):void type: DIRECT \l0x0012: INVOKE  (r0 I:java.lang.Thread), (r2 I:java.lang.Runnable) java.lang.Thread.\<init\>(java.lang.Runnable):void type: DIRECT \l0x0015: INVOKE  (r0 I:java.lang.Thread), (r1 I:int) java.lang.Thread.setPriority(int):void type: VIRTUAL \l0x0018: INVOKE  (r0 I:java.lang.Thread) java.lang.Thread.start():void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: RETURN  (r1 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.util.GarbageCollector.gc((r3 'this' I:org.osmdroid.util.GarbageCollector A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

