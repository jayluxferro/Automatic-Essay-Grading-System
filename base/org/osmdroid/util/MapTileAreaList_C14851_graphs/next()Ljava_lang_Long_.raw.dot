digraph "CFG fororg.osmdroid.util.MapTileAreaList.1.next()Ljava\/lang\/Long;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.util.Iterator) = (r3 I:org.osmdroid.util.MapTileAreaList$1) org.osmdroid.util.MapTileAreaList.1.getCurrent():java.util.Iterator type: DIRECT \l0x0004: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0008: CHECK_CAST  (r0 I:java.lang.Long) = (java.lang.Long) (r0 I:?[OBJECT, ARRAY]) \l0x000a: INVOKE  (r0 I:long) = (r0 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x000e: INVOKE  (r2 I:java.util.Iterator) = (r3 I:org.osmdroid.util.MapTileAreaList$1) org.osmdroid.util.MapTileAreaList.1.getCurrent():java.util.Iterator type: DIRECT \l0x0012: INVOKE  (r2 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0016|0x0016: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0018|0x0018: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0019: IPUT  \l  (r2 I:java.util.Iterator\<java.lang.Long\>)\l  (r3 I:org.osmdroid.util.MapTileAreaList$1)\l org.osmdroid.util.MapTileAreaList.1.mCurrent java.util.Iterator \l}"];
Node_3 [shape=record,label="{3\:\ 0x001b|0x001b: INVOKE  (r0 I:java.lang.Long) = (r0 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x001f|0x001f: RETURN  (r0 I:java.lang.Long) \l}"];
MethodNode[shape=record,label="{public java.lang.Long org.osmdroid.util.MapTileAreaList.1.next((r3 'this' I:org.osmdroid.util.MapTileAreaList$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

