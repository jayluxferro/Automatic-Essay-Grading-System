digraph "CFG fororg.osmdroid.util.MapTileAreaList.1.getCurrent()Ljava\/util\/Iterator;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Iterator\<java.lang.Long\>) = (r3 I:org.osmdroid.util.MapTileAreaList$1) org.osmdroid.util.MapTileAreaList.1.mCurrent java.util.Iterator \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.util.Iterator\<java.lang.Long\>) = (r3 I:org.osmdroid.util.MapTileAreaList$1) org.osmdroid.util.MapTileAreaList.1.mCurrent java.util.Iterator \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: RETURN  (r0 I:java.util.Iterator\<java.lang.Long\>) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0007|0x0007: IGET  (r0 I:int) = (r3 I:org.osmdroid.util.MapTileAreaList$1) org.osmdroid.util.MapTileAreaList.1.mIndex int \l0x0009: IGET  (r1 I:org.osmdroid.util.MapTileAreaList) = (r3 I:org.osmdroid.util.MapTileAreaList$1) org.osmdroid.util.MapTileAreaList.1.this$0 org.osmdroid.util.MapTileAreaList \l0x000b: INVOKE  (r1 I:java.util.List) = (r1 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.access$000(org.osmdroid.util.MapTileAreaList):java.util.List type: STATIC \l0x000f: INVOKE  (r1 I:int) = (r1 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r0 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:8:0x002e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IGET  (r0 I:org.osmdroid.util.MapTileAreaList) = (r3 I:org.osmdroid.util.MapTileAreaList$1) org.osmdroid.util.MapTileAreaList.1.this$0 org.osmdroid.util.MapTileAreaList \l0x0017: INVOKE  (r0 I:java.util.List) = (r0 I:org.osmdroid.util.MapTileAreaList) org.osmdroid.util.MapTileAreaList.access$000(org.osmdroid.util.MapTileAreaList):java.util.List type: STATIC \l0x001b: IGET  (r1 I:int) = (r3 I:org.osmdroid.util.MapTileAreaList$1) org.osmdroid.util.MapTileAreaList.1.mIndex int \l0x001d: ARITH  (r2 I:int) = (r1 I:int) + (1 int) \l0x001f: IPUT  (r2 I:int), (r3 I:org.osmdroid.util.MapTileAreaList$1) org.osmdroid.util.MapTileAreaList.1.mIndex int \l0x0021: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0025: CHECK_CAST  (r0 I:org.osmdroid.util.MapTileArea) = (org.osmdroid.util.MapTileArea) (r0 I:?[OBJECT, ARRAY]) \l0x0027: INVOKE  (r0 I:java.util.Iterator) = (r0 I:org.osmdroid.util.MapTileArea) org.osmdroid.util.MapTileArea.iterator():java.util.Iterator type: VIRTUAL \l0x002b: IPUT  \l  (r0 I:java.util.Iterator\<java.lang.Long\>)\l  (r3 I:org.osmdroid.util.MapTileAreaList$1)\l org.osmdroid.util.MapTileAreaList.1.mCurrent java.util.Iterator \l}"];
Node_7 [shape=record,label="{7\:\ 0x002d|0x002d: RETURN  (r0 I:java.util.Iterator\<java.lang.Long\>) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|0x002e: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: RETURN  (r0 I:java.util.Iterator\<java.lang.Long\>) \l}"];
MethodNode[shape=record,label="{private java.util.Iterator\<java.lang.Long\> org.osmdroid.util.MapTileAreaList.1.getCurrent((r3 'this' I:org.osmdroid.util.MapTileAreaList$1 A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/Iterator\<, Ljava\/lang\/Long;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

