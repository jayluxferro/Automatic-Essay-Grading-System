digraph "CFG fororg.osmdroid.util.TileSystem.getLongitudeZoom(DDI)D" {
subgraph cluster_Region_618174920 {
label = "R(3:0|(1:2)|(2:(1:5)|(1:7)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double double r3 = getX01FromLongitude(r3, true) \- getX01FromLongitude(r5, true)\l}"];
subgraph cluster_IfRegion_966276925 {
label = "IF [B:1:0x000e] THEN: R(1:2) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000e|if (r3 \< 0.0d) goto L_0x0010\l}"];
subgraph cluster_Region_139339079 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0010|r3 += 1.0d\l}"];
}
}
subgraph cluster_Region_210646108 {
label = "R(2:(1:5)|(1:7))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_684149373 {
label = "IF [B:4:0x0015] THEN: R(1:5) ELSE: null";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|if (r3 == 0.0d) goto L_0x0017\l}"];
subgraph cluster_Region_2058424320 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0017|RETURN\l|return Double.MIN_VALUE\l}"];
}
}
subgraph cluster_Region_1211207796 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002d|RETURN\l|return java.lang.Math.log((((double) r7) \/ r3) \/ ((double) getTileSize())) \/ java.lang.Math.log(2.0d)\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0013|PHI: r3 \l  PHI: (r3v3 double) = (r3v2 double), (r3v9 double) binds: [B:1:0x000e, B:2:0x0010] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x001a}"];
MethodNode[shape=record,label="{public double org.osmdroid.util.TileSystem.getLongitudeZoom((r2v0 'this' org.osmdroid.util.TileSystem A[IMMUTABLE_TYPE, THIS]), (r3v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_3[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_3 -> Node_4;
Node_6 -> Node_7;
}

