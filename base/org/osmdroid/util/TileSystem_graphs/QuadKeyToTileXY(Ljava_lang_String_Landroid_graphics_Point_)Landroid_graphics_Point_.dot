digraph "CFG fororg.osmdroid.util.TileSystem.QuadKeyToTileXY(Ljava\/lang\/String;Landroid\/graphics\/Point;)Landroid\/graphics\/Point;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r8 != null) goto L_0x0007\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|android.graphics.Point r8 = new android.graphics.Point()\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|PHI: r8 \l  PHI: (r8v1 android.graphics.Point) = (r8v0 android.graphics.Point), (r8v4 android.graphics.Point) binds: [B:0:0x0000, B:1:0x0002] A[DONT_GENERATE, DONT_INLINE]\l|if (r7 == null) goto L_0x004a\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009}"];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r7.length() == 0) goto L_0x004a\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|int r0 = r7.length()\lr1 = 0\lr2 = 0\lr3 = 0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|LOOP_START\lPHI: r1 r2 r3 \l  PHI: (r1v2 int) = (r1v1 int), (r1v4 int) binds: [B:5:0x000f, B:14:0x0042] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:5:0x000f, B:14:0x0042] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:5:0x000f, B:14:0x0042] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0016\-\>B:14:0x0042\l|if (r1 \>= r0) goto L_0x0045\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|int r5 = 1 \<\< r1\l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|switch(r7.charAt((r0 \- r1) \- 1)) \{\l    case 48: goto L_0x0042;\l    case 49: goto L_0x0041;\l    case 50: goto L_0x003f;\l    case 51: goto L_0x003c;\l    default: goto L_0x0025;\l\}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Invalid QuadKey: \")\lr0.append(r7)\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|int r2 = r2 + r5\lint r3 = r3 + r5\l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|int r3 = r3 + r5\l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|int r2 = r2 + r5\l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|LOOP_END\lPHI: r2 r3 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int), (r2v1 int), (r2v4 int) binds: [B:22:0x0042, B:21:0x0042, B:24:0x0042, B:23:0x0042] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v2 int) = (r3v1 int), (r3v1 int), (r3v3 int), (r3v4 int) binds: [B:22:0x0042, B:21:0x0042, B:24:0x0042, B:23:0x0042] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:6:0x0016\-\>B:14:0x0042\l|int r1 = r1 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|r8.x = r2\lr8.y = r3\l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|RETURN\l|return r8\l}"];
Node_17 [shape=record,label="{17\:\ 0x004a|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Invalid QuadKey: \")\lr0.append(r7)\l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|throw new java.lang.IllegalArgumentException(r0.toString())\l}"];
Node_19 [shape=record,label="{19\:\ 0x0025|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x0045|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0042|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0042|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0042|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static android.graphics.Point org.osmdroid.util.TileSystem.QuadKeyToTileXY((r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 android.graphics.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_20;
Node_7 -> Node_8;
Node_8 -> Node_11;
Node_8 -> Node_12;
Node_8 -> Node_13;
Node_8 -> Node_19;
Node_8 -> Node_22;
Node_9 -> Node_10;
Node_11 -> Node_23;
Node_12 -> Node_24;
Node_13 -> Node_21;
Node_14 -> Node_6;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_9;
Node_20 -> Node_15;
Node_21 -> Node_14;
Node_22 -> Node_14;
Node_23 -> Node_14;
Node_24 -> Node_14;
}

