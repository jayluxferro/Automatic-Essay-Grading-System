digraph "CFG fororg.osmdroid.util.TileSystem.getBoundingBoxZoom(Lorg\/osmdroid\/util\/BoundingBox;II)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:double) = (r9 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonEast():double type: VIRTUAL \l0x0004: INVOKE  (r3 I:double) = (r9 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLonWest():double type: VIRTUAL \l0x0008: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0009: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: INVOKE  (r0 I:double) = \l  (r0 I:org.osmdroid.util.TileSystem)\l  (r1 I:double)\l  (r3 I:double)\l  (r5 I:int)\l org.osmdroid.util.TileSystem.getLongitudeZoom(double, double, int):double type: VIRTUAL \l0x000e: INVOKE  (r3 I:double) = (r9 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatNorth():double type: VIRTUAL \l0x0012: INVOKE  (r5 I:double) = (r9 I:org.osmdroid.util.BoundingBox) org.osmdroid.util.BoundingBox.getLatSouth():double type: VIRTUAL \l0x0016: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0017: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: INVOKE  (r9 I:double) = \l  (r2 I:org.osmdroid.util.TileSystem)\l  (r3 I:double)\l  (r5 I:double)\l  (r7 I:int)\l org.osmdroid.util.TileSystem.getLatitudeZoom(double, double, int):double type: VIRTUAL \l0x001c: CONST  (r2 I:?[long, double]) = (1 ?[long, double]) \l0x001e: CMP_L  (r11 I:int) = (r0 I:double), (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|0x0020: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0023 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0022|0x0022: RETURN  (r9 I:double) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: CMP_L  (r11 I:int) = (r9 I:double), (r2 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0028 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: RETURN  (r0 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: INVOKE  (r9 I:double) = (r9 I:double), (r0 I:double) java.lang.Math.min(double, double):double type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|0x002c: RETURN  (r9 I:double) \l}"];
MethodNode[shape=record,label="{public double org.osmdroid.util.TileSystem.getBoundingBoxZoom((r8 'this' I:org.osmdroid.util.TileSystem A[IMMUTABLE_TYPE, THIS]), (r9 I:org.osmdroid.util.BoundingBox A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
}

