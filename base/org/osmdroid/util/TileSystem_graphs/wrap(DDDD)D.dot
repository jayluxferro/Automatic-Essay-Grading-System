digraph "CFG fororg.osmdroid.util.TileSystem.wrap(DDDD)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r6 \> r8 ? 1 : (r6 == r8 ? 0 : \-1)) \> 0) goto L_0x0041\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x000b|if ((r10 \> ((r8 \- r6) + 1.0d) ? 1 : (r10 == ((r8 \- r6) + 1.0d) ? 0 : \-1)) \> 0) goto L_0x001a\l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|LOOP_START\lPHI: r4 \l  PHI: (r4v3 double) = (r4v0 double), (r4v6 double) binds: [B:3:0x000b, B:6:0x0011] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000d\-\>B:6:0x0011\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|if ((r4 \> r6 ? 1 : (r4 == r6 ? 0 : \-1)) \>= 0) goto L_0x0013\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|LOOP_END\lLOOP:0: B:4:0x000d\-\>B:6:0x0011\l|double r4 = r4 + r10\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|LOOP_START\lPHI: r4 \l  PHI: (r4v4 double) = (r4v3 double), (r4v5 double) binds: [B:15:0x0013, B:9:0x0017] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:7:0x0013\-\>B:9:0x0017\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|if ((r4 \> r8 ? 1 : (r4 == r8 ? 0 : \-1)) \<= 0) goto L_0x0019\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|LOOP_END\lLOOP:1: B:7:0x0013\-\>B:9:0x0017\l|double r4 = r4 \- r10\l}"];
Node_10 [shape=record,label="{10\:\ 0x0019|RETURN\l|return r4\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"interval must be equal or smaller than maxValue\-minValue: min: \")\lr5.append(r6)\lr5.append(\" max:\")\lr5.append(r8)\lr5.append(\" int:\")\lr5.append(r10)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0040|throw new java.lang.IllegalArgumentException(r5.toString())\l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|java.lang.StringBuilder r5 = new java.lang.StringBuilder()\lr5.append(\"minValue must be smaller than maxValue: \")\lr5.append(r6)\lr5.append(com.j256.ormlite.stmt.query.SimpleComparison.GREATER_THAN_OPERATION)\lr5.append(r8)\l}"];
Node_14 [shape=record,label="{14\:\ 0x005f|throw new java.lang.IllegalArgumentException(r5.toString())\l}"];
Node_15 [shape=record,label="{15\:\ 0x0013|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0019|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private static double org.osmdroid.util.TileSystem.wrap((r4v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_15;
Node_6 -> Node_4;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_16;
Node_9 -> Node_7;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_15 -> Node_7;
Node_16 -> Node_10;
}

