digraph "CFG fororg.osmdroid.util.TileSystem.getY01FromLatitude(DZ)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x000f \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: INVOKE  (r2 I:double) = (r6 I:org.osmdroid.util.TileSystem) org.osmdroid.util.TileSystem.getMinLatitude():double type: VIRTUAL \l0x0006: INVOKE  (r4 I:double) = (r6 I:org.osmdroid.util.TileSystem) org.osmdroid.util.TileSystem.getMaxLatitude():double type: VIRTUAL \l0x000a: MOVE  (r0 I:?[long, double]) = (r7 I:?[long, double]) \l0x000b: INVOKE  (r7 I:double) = (r0 I:double), (r2 I:double), (r4 I:double) org.osmdroid.util.TileSystem.Clip(double, double, double):double type: STATIC \l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|0x000f: INVOKE  (r0 I:double) = (r6 I:org.osmdroid.util.TileSystem), (r7 I:double) org.osmdroid.util.TileSystem.getY01FromLatitude(double):double type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0013|0x0013: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x001d \l}"];
Node_4 [shape=record,label="{4\:\ 0x0015|0x0015: CONST  (r2 I:?[long, double]) = (0 ?[long, double]) \l0x0017: CONST  (r4 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0019: INVOKE  (r0 I:double) = (r0 I:double), (r2 I:double), (r4 I:double) org.osmdroid.util.TileSystem.Clip(double, double, double):double type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x001d|0x001d: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public double org.osmdroid.util.TileSystem.getY01FromLatitude((r6 'this' I:org.osmdroid.util.TileSystem A[IMMUTABLE_TYPE, THIS]), (r7 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
}

