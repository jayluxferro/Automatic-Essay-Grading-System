digraph "CFG fororg.osmdroid.util.TileSystem.getMercatorFromGeo(DDDLorg\/osmdroid\/util\/PointL;Z)Lorg\/osmdroid\/util\/PointL;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0007 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r13 I:org.osmdroid.util.PointL) =  org.osmdroid.util.PointL \l0x0004: INVOKE  (r13 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.\<init\>():void type: DIRECT \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0008: MOVE  (r1 I:?[long, double]) = (r9 I:?[long, double]) \l0x0009: MOVE  (r3 I:?[long, double]) = (r11 I:?[long, double]) \l0x000a: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: INVOKE  (r9 I:long) = \l  (r0 I:org.osmdroid.util.TileSystem)\l  (r1 I:double)\l  (r3 I:double)\l  (r5 I:boolean)\l org.osmdroid.util.TileSystem.getMercatorXFromLongitude(double, double, boolean):long type: VIRTUAL \l0x000f: IPUT  (r9 I:long), (r13 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0011: MOVE  (r1 I:?[long, double]) = (r7 I:?[long, double]) \l0x0012: INVOKE  (r7 I:long) = \l  (r0 I:org.osmdroid.util.TileSystem)\l  (r1 I:double)\l  (r3 I:double)\l  (r5 I:boolean)\l org.osmdroid.util.TileSystem.getMercatorYFromLatitude(double, double, boolean):long type: VIRTUAL \l0x0016: IPUT  (r7 I:long), (r13 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l}"];
Node_3 [shape=record,label="{3\:\ 0x0018|0x0018: RETURN  (r13 I:org.osmdroid.util.PointL) \l}"];
MethodNode[shape=record,label="{public org.osmdroid.util.PointL org.osmdroid.util.TileSystem.getMercatorFromGeo((r6 'this' I:org.osmdroid.util.TileSystem A[IMMUTABLE_TYPE, THIS]), (r7 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:org.osmdroid.util.PointL A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3;
}

