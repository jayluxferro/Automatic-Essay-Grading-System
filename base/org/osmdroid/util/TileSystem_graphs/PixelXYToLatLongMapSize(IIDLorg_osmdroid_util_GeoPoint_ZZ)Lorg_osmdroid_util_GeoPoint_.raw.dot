digraph "CFG fororg.osmdroid.util.TileSystem.PixelXYToLatLongMapSize(IIDLorg\/osmdroid\/util\/GeoPoint;ZZ)Lorg\/osmdroid\/util\/GeoPoint;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CAST  (r1 I:long) = (long) (r0 I:int) \l0x0002: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: CAST  (r3 I:long) = (long) (r0 I:int) \l0x0004: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0005: MOVE  (r5 I:?[long, double]) = (r13 I:?[long, double]) \l0x0006: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r15 I:?[OBJECT, ARRAY]) \l0x0007: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0009: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: INVOKE  (r0 I:org.osmdroid.util.GeoPoint) = \l  (r0 I:org.osmdroid.util.TileSystem)\l  (r1 I:long)\l  (r3 I:long)\l  (r5 I:double)\l  (r7 I:org.osmdroid.util.GeoPoint)\l  (r8 I:boolean)\l  (r9 I:boolean)\l org.osmdroid.util.TileSystem.getGeoFromMercator(long, long, double, org.osmdroid.util.GeoPoint, boolean, boolean):org.osmdroid.util.GeoPoint type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: RETURN  (r0 I:org.osmdroid.util.GeoPoint) \l}"];
MethodNode[shape=record,label="{public org.osmdroid.util.GeoPoint org.osmdroid.util.TileSystem.PixelXYToLatLongMapSize((r10 'this' I:org.osmdroid.util.TileSystem A[IMMUTABLE_TYPE, THIS]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:org.osmdroid.util.GeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[RUNTIME, java.lang.Deprecated, \{\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

