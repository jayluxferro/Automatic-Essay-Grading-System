digraph "CFG fororg.osmdroid.util.TileSystem.QuadKeyToTileXY(Ljava\/lang\/String;Landroid\/graphics\/Point;)Landroid\/graphics\/Point;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:2:0x0007 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: NEW_INSTANCE  (r8 I:android.graphics.Point) =  android.graphics.Point \l0x0004: INVOKE  (r8 I:android.graphics.Point) android.graphics.Point.\<init\>():void type: DIRECT \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x004a \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: INVOKE  (r0 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x004a \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r0 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0013: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0015: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:15:0x0045 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0019: ARITH  (r5 I:int) = (r4 I:int) \<\< (r1 I:int) \l0x001b: ARITH  (r6 I:int) = (r0 I:int) \- (r1 I:int) \l0x001d: ARITH  (r6 I:int) = (r6 I:int) \- (r4 I:int) \l0x001e: INVOKE  (r4 I:char) = (r7 I:java.lang.String), (r6 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0022|0x0022: SWITCH  \l  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[48, 49, 50, 51] t:[0x0042, 0x0041, 0x003f, 0x003c] \l}"];
Node_9 [shape=record,label="{9\:\ 0x0025|0x0025: NEW_INSTANCE  (r8 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0027: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0029: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002c: CONST_STR  (r1 I:java.lang.String) =  \"Invalid QuadKey: \" \l0x002e: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0031: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0034: INVOKE  (r7 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0038: INVOKE  \l  (r8 I:java.lang.IllegalArgumentException)\l  (r7 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|0x003b: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x003c|0x003c: ARITH  (r2 I:int) = (r2 I:int) + (r5 I:int) \l0x003d: ARITH  (r3 I:int) = (r3 I:int) + (r5 I:int) \l}"];
Node_12 [shape=record,label="{12\:\ 0x003f|0x003f: ARITH  (r3 I:int) = (r3 I:int) + (r5 I:int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0041|0x0041: ARITH  (r2 I:int) = (r2 I:int) + (r5 I:int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0042|0x0042: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_15 [shape=record,label="{15\:\ 0x0045|0x0045: IPUT  (r2 I:int), (r8 I:android.graphics.Point) android.graphics.Point.x int \l0x0047: IPUT  (r3 I:int), (r8 I:android.graphics.Point) android.graphics.Point.y int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0049|0x0049: RETURN  (r8 I:android.graphics.Point) \l}"];
Node_17 [shape=record,label="{17\:\ 0x004a|0x004a: NEW_INSTANCE  (r8 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x004c: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x004e: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0051: CONST_STR  (r1 I:java.lang.String) =  \"Invalid QuadKey: \" \l0x0053: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0056: INVOKE  (r0 I:java.lang.StringBuilder), (r7 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0059: INVOKE  (r7 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x005d: INVOKE  \l  (r8 I:java.lang.IllegalArgumentException)\l  (r7 I:java.lang.String)\l java.lang.IllegalArgumentException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x0060|0x0060: THROW  (r8 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static android.graphics.Point org.osmdroid.util.TileSystem.QuadKeyToTileXY((r7 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:android.graphics.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_17;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_17;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_15;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_11;
Node_8 -> Node_12;
Node_8 -> Node_13;
Node_8 -> Node_14;
Node_9 -> Node_10;
Node_11 -> Node_14;
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_6;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

