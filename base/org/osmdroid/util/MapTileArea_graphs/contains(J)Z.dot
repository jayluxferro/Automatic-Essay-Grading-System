digraph "CFG fororg.osmdroid.util.MapTileArea.contains(J)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|if (org.osmdroid.util.MapTileIndex.getZoom(r5) == r4.mZoom) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a}"];
Node_4 [shape=record,label="{4\:\ 0x0016|if (contains(org.osmdroid.util.MapTileIndex.getX(r5), r4.mLeft, r4.mWidth) != false) goto L_0x0019\l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|RETURN\l|return false\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019}"];
Node_7 [shape=record,label="{7\:\ 0x0025|RETURN\l|return contains(org.osmdroid.util.MapTileIndex.getY(r5), r4.mTop, r4.mHeight)\l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.util.MapTileArea.contains((r4v0 'this' org.osmdroid.util.MapTileArea A[IMMUTABLE_TYPE, THIS]), (r5v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
}

