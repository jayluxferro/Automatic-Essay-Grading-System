digraph "CFG fororg.osmdroid.util.PointReducer.douglasPeuckerReduction(Ljava\/util\/ArrayList;[ZDII)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r6 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: ARITH  (r0 I:int) = (r4 I:int) + (1 int) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r7 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:3:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: RETURN   \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: CONST  (r1 I:?[long, double]) = (0 ?[long, double]) \l0x000c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: INVOKE  (r5 I:java.lang.Object) = (r12 I:java.util.ArrayList), (r4 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0011: CHECK_CAST  (r5 I:org.osmdroid.util.GeoPoint) = (org.osmdroid.util.GeoPoint) (r5 I:?[OBJECT, ARRAY]) \l0x0013: INVOKE  (r8 I:java.lang.Object) = (r12 I:java.util.ArrayList), (r7 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0017: CHECK_CAST  (r8 I:org.osmdroid.util.GeoPoint) = (org.osmdroid.util.GeoPoint) (r8 I:?[OBJECT, ARRAY]) \l0x0019: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r0 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:9:0x002f \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: INVOKE  (r3 I:java.lang.Object) = (r12 I:java.util.ArrayList), (r0 I:int) java.util.ArrayList.get(int):java.lang.Object type: VIRTUAL \l0x0020: CHECK_CAST  (r3 I:org.osmdroid.util.GeoPoint) = (org.osmdroid.util.GeoPoint) (r3 I:?[OBJECT, ARRAY]) \l0x0022: INVOKE  (r10 I:double) = \l  (r3 I:org.osmdroid.util.GeoPoint)\l  (r5 I:org.osmdroid.util.GeoPoint)\l  (r8 I:org.osmdroid.util.GeoPoint)\l org.osmdroid.util.PointReducer.orthogonalDistance(org.osmdroid.util.GeoPoint, org.osmdroid.util.GeoPoint, org.osmdroid.util.GeoPoint):double type: STATIC \l0x0026: CMP_L  (r3 I:int) = (r10 I:double), (r1 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0028|0x0028: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x002c \l}"];
Node_7 [shape=record,label="{7\:\ 0x002a|0x002a: MOVE  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: MOVE  (r1 I:?[long, double]) = (r10 I:?[long, double]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x002c|0x002c: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|0x002f: CMP_L  (r0 I:int) = (r1 I:double), (r14 I:double) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:12:0x0045 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0034: APUT  \l  (r13 I:boolean[] A[IMMUTABLE_TYPE])\l  (r9 I:?[int, short, byte, char])\l  (r0 I:boolean A[IMMUTABLE_TYPE])\l \l0x0036: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0037: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0038: MOVE  (r2 I:?[long, double]) = (r14 I:?[long, double]) \l0x0039: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003b: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003c: INVOKE  \l  (r0 I:java.util.ArrayList)\l  (r1 I:boolean[])\l  (r2 I:double)\l  (r4 I:int)\l  (r5 I:int)\l org.osmdroid.util.PointReducer.douglasPeuckerReduction(java.util.ArrayList, boolean[], double, int, int):void type: STATIC \l0x003f: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0040: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0042: INVOKE  \l  (r0 I:java.util.ArrayList)\l  (r1 I:boolean[])\l  (r2 I:double)\l  (r4 I:int)\l  (r5 I:int)\l org.osmdroid.util.PointReducer.douglasPeuckerReduction(java.util.ArrayList, boolean[], double, int, int):void type: STATIC \l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|0x0045: RETURN   \l}"];
MethodNode[shape=record,label="{private static void org.osmdroid.util.PointReducer.douglasPeuckerReduction((r12 I:java.util.ArrayList\<org.osmdroid.util.GeoPoint\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:boolean[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/util\/ArrayList\<, Lorg\/osmdroid\/util\/GeoPoint;, \>;[ZDII)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_4;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
}

