digraph "CFG fororg.osmdroid.util.GEMFFile.readHeader()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<java.io.RandomAccessFile\>) = (r8 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFiles java.util.List \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: INVOKE  (r0 I:java.lang.Object) = (r0 I:java.util.List), (r1 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x0007: CHECK_CAST  (r0 I:java.io.RandomAccessFile) = (java.io.RandomAccessFile) (r0 I:?[OBJECT, ARRAY]) \l0x0009: IGET  (r2 I:java.util.List\<java.io.RandomAccessFile\>) = (r8 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFiles java.util.List \l0x000b: INVOKE  (r2 I:java.util.Iterator) = (r2 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: INVOKE  (r3 I:boolean) = (r2 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|0x0013: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0029 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|0x0015: INVOKE  (r3 I:java.lang.Object) = (r2 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0019: CHECK_CAST  (r3 I:java.io.RandomAccessFile) = (java.io.RandomAccessFile) (r3 I:?[OBJECT, ARRAY]) \l0x001b: IGET  (r4 I:java.util.List\<java.lang.Long\>) = (r8 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFileSizes java.util.List \l0x001d: INVOKE  (r5 I:long) = (r3 I:java.io.RandomAccessFile) java.io.RandomAccessFile.length():long type: VIRTUAL \l0x0021: INVOKE  (r3 I:java.lang.Long) = (r5 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0025: INVOKE  (r4 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|0x0029: INVOKE  (r2 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x002d: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|0x002e: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x00d0 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|0x0030: INVOKE  (r2 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x0034: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (256(0x100, float:3.59E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|0x0036: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x00b9 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|0x0038: INVOKE  (r2 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x003c: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: IF  (r3 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:11:0x005e \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|0x003f: INVOKE  (r4 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x0043: INVOKE  (r5 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x0047: NEW_ARRAY  (r6 I:byte[]) = (r5 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x0049: INVOKE  \l  (r0 I:java.io.RandomAccessFile)\l  (r6 I:byte[])\l  (r1 I:int)\l  (r5 I:int)\l java.io.RandomAccessFile.read(byte[], int, int):int type: VIRTUAL \l0x004c: NEW_INSTANCE  (r5 I:java.lang.String) =  java.lang.String \l0x004e: INVOKE  (r5 I:java.lang.String), (r6 I:byte[]) java.lang.String.\<init\>(byte[]):void type: DIRECT \l0x0051: IGET  (r6 I:java.util.LinkedHashMap\<java.lang.Integer, java.lang.String\>) = (r8 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mSources java.util.LinkedHashMap \l0x0053: NEW_INSTANCE  (r7 I:java.lang.Integer) =  java.lang.Integer \l0x0055: INVOKE  (r7 I:java.lang.Integer), (r4 I:int) java.lang.Integer.\<init\>(int):void type: DIRECT \l0x0058: INVOKE  \l  (r6 I:java.util.LinkedHashMap)\l  (r7 I:java.lang.Object)\l  (r5 I:java.lang.Object)\l java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x005b: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x005e|0x005e: INVOKE  (r2 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0062|0x0062: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:14:0x00b8 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|0x0064: NEW_INSTANCE  (r3 I:org.osmdroid.util.GEMFFile$GEMFRange) =  org.osmdroid.util.GEMFFile$GEMFRange \l0x0066: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0067: INVOKE  \l  (r3 I:org.osmdroid.util.GEMFFile$GEMFRange)\l  (r8 I:org.osmdroid.util.GEMFFile)\l  (r4 I:org.osmdroid.util.GEMFFile$1)\l org.osmdroid.util.GEMFFile.GEMFRange.\<init\>(org.osmdroid.util.GEMFFile, org.osmdroid.util.GEMFFile$1):void type: DIRECT \l0x006a: INVOKE  (r4 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x006e: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0072: IPUT  \l  (r4 I:java.lang.Integer)\l  (r3 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.zoom java.lang.Integer \l0x0074: INVOKE  (r4 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x0078: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x007c: IPUT  \l  (r4 I:java.lang.Integer)\l  (r3 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.xMin java.lang.Integer \l0x007e: INVOKE  (r4 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x0082: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0086: IPUT  \l  (r4 I:java.lang.Integer)\l  (r3 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.xMax java.lang.Integer \l0x0088: INVOKE  (r4 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x008c: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0090: IPUT  \l  (r4 I:java.lang.Integer)\l  (r3 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer \l0x0092: INVOKE  (r4 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x0096: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x009a: IPUT  \l  (r4 I:java.lang.Integer)\l  (r3 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.yMax java.lang.Integer \l0x009c: INVOKE  (r4 I:int) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL \l0x00a0: INVOKE  (r4 I:java.lang.Integer) = (r4 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x00a4: IPUT  \l  (r4 I:java.lang.Integer)\l  (r3 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.sourceIndex java.lang.Integer \l0x00a6: INVOKE  (r4 I:long) = (r0 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readLong():long type: VIRTUAL \l0x00aa: INVOKE  (r4 I:java.lang.Long) = (r4 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x00ae: IPUT  \l  (r4 I:java.lang.Long)\l  (r3 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.offset java.lang.Long \l0x00b0: IGET  (r4 I:java.util.List\<org.osmdroid.util.GEMFFile$GEMFRange\>) = (r8 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mRangeData java.util.List \l0x00b2: INVOKE  (r4 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x00b5: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_14 [shape=record,label="{14\:\ 0x00b8|0x00b8: RETURN   \l}"];
Node_15 [shape=record,label="{15\:\ 0x00b9|0x00b9: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException \l0x00bb: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00bd: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00c0: CONST_STR  (r3 I:java.lang.String) =  \"Bad tile size: \" \l0x00c2: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00c5: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00c8: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00cc: INVOKE  (r0 I:java.io.IOException), (r1 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_16 [shape=record,label="{16\:\ 0x00cf|0x00cf: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_17 [shape=record,label="{17\:\ 0x00d0|0x00d0: NEW_INSTANCE  (r0 I:java.io.IOException) =  java.io.IOException \l0x00d2: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x00d4: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x00d7: CONST_STR  (r3 I:java.lang.String) =  \"Bad file version: \" \l0x00d9: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x00dc: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x00df: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x00e3: INVOKE  (r0 I:java.io.IOException), (r1 I:java.lang.String) java.io.IOException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_18 [shape=record,label="{18\:\ 0x00e6|0x00e6: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{private void org.osmdroid.util.GEMFFile.readHeader((r8 'this' I:org.osmdroid.util.GEMFFile A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_9;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_12;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

