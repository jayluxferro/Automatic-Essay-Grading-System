digraph "CFG fororg.osmdroid.util.GEMFFile.readHeader()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r1 = 0\ljava.io.RandomAccessFile r0 = r8.mFiles.get(0)\ljava.util.Iterator r2 = r8.mFiles.iterator()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|LOOP_START\lLOOP:0: B:1:0x000f\-\>B:3:0x0015\l}"];
Node_2 [shape=record,label="{2\:\ 0x0013|if (r2.hasNext() == false) goto L_0x0029\l}"];
Node_3 [shape=record,label="{3\:\ 0x0015|LOOP_END\lLOOP:0: B:1:0x000f\-\>B:3:0x0015\l|r8.mFileSizes.add(java.lang.Long.valueOf(r2.next().length()))\l}"];
Node_4 [shape=record,label="{4\:\ 0x0029|int r2 = r0.readInt()\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|if (r2 != 4) goto L_0x00d0\l}"];
Node_6 [shape=record,label="{6\:\ 0x0030|int r2 = r0.readInt()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0036|if (r2 != 256) goto L_0x00b9\l}"];
Node_8 [shape=record,label="{8\:\ 0x0038|int r2 = r0.readInt()\lr3 = 0\l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|LOOP_START\lPHI: r3 \l  PHI: (r3v6 int) = (r3v5 int), (r3v8 int) binds: [B:8:0x0038, B:10:0x003f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:9:0x003d\-\>B:10:0x003f\l|if (r3 \>= r2) goto L_0x005e\l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|LOOP_END\lLOOP:1: B:9:0x003d\-\>B:10:0x003f\l|int r4 = r0.readInt()\lint r5 = r0.readInt()\lbyte[] r6 = new byte[r5]\lr0.read(r6, 0, r5)\ljava.lang.String r5 = new java.lang.String(r6)\lr8.mSources.put(new java.lang.Integer(r4), r5)\lint r3 = r3 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x005e|int r2 = r0.readInt()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0062|LOOP_START\lPHI: r1 \l  PHI: (r1v5 int) = (r1v0 int), (r1v6 int) binds: [B:11:0x005e, B:13:0x0064] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:12:0x0062\-\>B:13:0x0064\l|if (r1 \>= r2) goto L_0x00b8\l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|LOOP_END\lLOOP:2: B:12:0x0062\-\>B:13:0x0064\l|org.osmdroid.util.GEMFFile$GEMFRange r3 = new org.osmdroid.util.GEMFFile.GEMFRange(r8, (org.osmdroid.util.GEMFFile.C14801) null)\lr3.zoom = java.lang.Integer.valueOf(r0.readInt())\lr3.xMin = java.lang.Integer.valueOf(r0.readInt())\lr3.xMax = java.lang.Integer.valueOf(r0.readInt())\lr3.yMin = java.lang.Integer.valueOf(r0.readInt())\lr3.yMax = java.lang.Integer.valueOf(r0.readInt())\lr3.sourceIndex = java.lang.Integer.valueOf(r0.readInt())\lr3.offset = java.lang.Long.valueOf(r0.readLong())\lr8.mRangeData.add(r3)\lint r1 = r1 + 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x00b8|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ 0x00b9|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Bad tile size: \")\lr1.append(r2)\l}"];
Node_16 [shape=record,label="{16\:\ 0x00cf|throw new java.io.IOException(r1.toString())\l}"];
Node_17 [shape=record,label="{17\:\ 0x00d0|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"Bad file version: \")\lr1.append(r2)\l}"];
Node_18 [shape=record,label="{18\:\ 0x00e6|throw new java.io.IOException(r1.toString())\l}"];
Node_19 [shape=record,label="{19\:\ 0x0029|SYNTHETIC\l}"];
Node_20 [shape=record,label="{20\:\ 0x005e|SYNTHETIC\l}"];
Node_21 [shape=record,label="{21\:\ 0x00b8|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.osmdroid.util.GEMFFile.readHeader((r8v0 'this' org.osmdroid.util.GEMFFile A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_19;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_17;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_20;
Node_10 -> Node_9;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_21;
Node_13 -> Node_12;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_4;
Node_20 -> Node_11;
Node_21 -> Node_14;
}

