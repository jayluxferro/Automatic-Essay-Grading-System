digraph "CFG fororg.osmdroid.util.GEMFFile.\<init\>(Ljava\/lang\/String;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0004: INVOKE  (r27 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0007: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0009: INVOKE  (r2 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000c: IPUT  \l  (r2 I:java.util.List\<java.io.RandomAccessFile\>)\l  (r0 I:org.osmdroid.util.GEMFFile)\l org.osmdroid.util.GEMFFile.mFiles java.util.List \l0x000e: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0010: INVOKE  (r2 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0013: IPUT  \l  (r2 I:java.util.List\<java.lang.String\>)\l  (r0 I:org.osmdroid.util.GEMFFile)\l org.osmdroid.util.GEMFFile.mFileNames java.util.List \l0x0015: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x0017: INVOKE  (r2 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x001a: IPUT  \l  (r2 I:java.util.List\<org.osmdroid.util.GEMFFile$GEMFRange\>)\l  (r0 I:org.osmdroid.util.GEMFFile)\l org.osmdroid.util.GEMFFile.mRangeData java.util.List \l0x001c: NEW_INSTANCE  (r2 I:java.util.ArrayList) =  java.util.ArrayList \l0x001e: INVOKE  (r2 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0021: IPUT  \l  (r2 I:java.util.List\<java.lang.Long\>)\l  (r0 I:org.osmdroid.util.GEMFFile)\l org.osmdroid.util.GEMFFile.mFileSizes java.util.List \l0x0023: NEW_INSTANCE  (r2 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x0025: INVOKE  (r2 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x0028: IPUT  \l  (r2 I:java.util.LinkedHashMap\<java.lang.Integer, java.lang.String\>)\l  (r0 I:org.osmdroid.util.GEMFFile)\l org.osmdroid.util.GEMFFile.mSources java.util.LinkedHashMap \l0x002a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: IPUT  (r2 I:boolean), (r0 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mSourceLimited boolean \l0x002d: IPUT  (r2 I:int), (r0 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mCurrentSource int \l0x002f: IPUT  (r1 I:java.lang.String), (r0 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mLocation java.lang.String \l0x0031: NEW_INSTANCE  (r3 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x0033: INVOKE  (r3 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x0036: INVOKE  (r4 I:java.util.Iterator) = (r29 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x003a|0x003a: INVOKE  (r5 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x003e|0x003e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0137 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0040|0x0040: INVOKE  (r5 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0044: CHECK_CAST  (r5 I:java.io.File) = (java.io.File) (r5 I:?[OBJECT, ARRAY]) \l0x0046: NEW_INSTANCE  (r6 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x0048: INVOKE  (r6 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x004b: INVOKE  (r7 I:java.io.File[]) = (r5 I:java.io.File) java.io.File.listFiles():java.io.File[] type: VIRTUAL \l0x004f: ARRAY_LENGTH  (r8 I:int) = (r7 I:?[]) \l0x0050: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0051|0x0051: IF  (r9 I:?[int, byte, short, char]) \>= (r8 I:?[int, byte, short, char])  \-\> B:39:0x0129 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0053|0x0053: AGET  (r10 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY][]), (r9 I:?[int, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0055|SYNTHETIC\lSplitter:B:6:0x0055\l}"];
Node_7 [shape=record,label="{7\:\ ?|Splitter:B:6:0x0055\l|0x0055: INVOKE  (r11 I:java.lang.String) = (r10 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x0116 \}, TRY_ENTER]\l0x0059: INVOKE  (r11 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x0116 \}, TRY_LEAVE]\l}"];
Node_8 [shape=record,label="{8\:\ 0x005c|0x005c: NEW_INSTANCE  (r11 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x005e: INVOKE  (r11 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x0061: INVOKE  (r12 I:java.io.File[]) = (r10 I:java.io.File) java.io.File.listFiles():java.io.File[] type: VIRTUAL \l0x0065: ARRAY_LENGTH  (r13 I:int) = (r12 I:?[]) \l0x0066: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0067|0x0067: IF  (r14 I:?[int, byte, short, char]) \>= (r13 I:?[int, byte, short, char])  \-\> B:35:0x0100 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0069|0x0069: AGET  (r15 I:?[OBJECT, ARRAY]) = \l  (r12 I:?[OBJECT, ARRAY][])\l  (r14 I:?[int, short, byte, char])\l \l}"];
Node_11 [shape=record,label="{11\:\ 0x006b|SYNTHETIC\lSplitter:B:11:0x006b\l}"];
Node_12 [shape=record,label="{12\:\ ?|Splitter:B:11:0x006b\l|0x006b: INVOKE  (r16 I:java.lang.String) = (r15 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00e5 \}, TRY_ENTER]\l0x006f: INVOKE  (r16 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00e5 \}, TRY_LEAVE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0072|0x0072: NEW_INSTANCE  (r2 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x0074: INVOKE  (r2 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x0077: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0079: INVOKE  (r4 I:java.io.File[]) = (r15 I:java.io.File) java.io.File.listFiles():java.io.File[] type: VIRTUAL \l0x007d: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x007f: ARRAY_LENGTH  (r7 I:int) = (r4 I:?[]) \l0x0080: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0082: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_14 [shape=record,label="{14\:\ 0x0083|0x0083: IF  (r8 I:?[int, byte, short, char]) \>= (r7 I:?[int, byte, short, char])  \-\> B:31:0x00d4 \l}"];
Node_15 [shape=record,label="{15\:\ 0x0085|0x0085: MOVE  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0087: AGET  (r7 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY][]), (r8 I:?[int, short, byte, char]) \l0x0089: MOVE  (r21 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x008b|SYNTHETIC\lSplitter:B:16:0x008b\l}"];
Node_17 [shape=record,label="{17\:\ ?|Splitter:B:16:0x008b\l|0x008b: INVOKE  (r4 I:java.lang.String) = (r7 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00c3 \}, TRY_ENTER]\l0x008e: NOP   A[TRY_LEAVE]\l}"];
Node_18 [shape=record,label="{18\:\ 0x008f|0x008f: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0091|SYNTHETIC\lSplitter:B:19:0x0091\l}"];
Node_20 [shape=record,label="{20\:\ ?|Splitter:B:19:0x0091\l|0x0091: INVOKE  (r12 I:java.lang.String) = (r7 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00c5 \}, TRY_ENTER]\l0x0094: NOP   A[TRY_LEAVE]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0095|0x0095: MOVE  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0097: CONST  (r13 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0099|SYNTHETIC\lSplitter:B:22:0x0099\l}"];
Node_23 [shape=record,label="{23\:\ ?|Splitter:B:22:0x0099\l|0x0099: INVOKE  (r12 I:int) = (r12 I:java.lang.String), (r13 I:int) java.lang.String.indexOf(int):int type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00c7 \}, TRY_ENTER]\l0x009d: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ NumberFormatException \-\> 0x00c7 \}]\l0x009e: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.String), (r13 I:int), (r12 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL A[Catch:\{ NumberFormatException \-\> 0x00c7 \}]\l0x00a2: INVOKE  (r4 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC A[Catch:\{ NumberFormatException \-\> 0x00c7 \}, TRY_LEAVE]\l}"];
Node_24 [shape=record,label="{24\:\ 0x00a5|0x00a5: INVOKE  (r4 I:java.lang.String) = (r7 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL \l0x00a9: INVOKE  (r12 I:java.lang.String) = (r7 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL \l0x00ad: CONST  (r1 I:?[int, float, short, byte, char]) = (46 ?[int, float, short, byte, char]) \l0x00af: INVOKE  (r1 I:int) = (r12 I:java.lang.String), (r1 I:int) java.lang.String.indexOf(int):int type: VIRTUAL \l0x00b3: INVOKE  (r1 I:java.lang.String) = (r4 I:java.lang.String), (r13 I:int), (r1 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x00b7: INVOKE  (r1 I:int) = (r1 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC \l0x00bb: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x00bf: INVOKE  \l  (r2 I:java.util.LinkedHashMap)\l  (r1 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_25 [shape=record,label="{25\:\ 0x00c3|0x00c3: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_26 [shape=record,label="{26\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:16:0x008b\l}"];
Node_27 [shape=record,label="{27\:\ 0x00c5|0x00c5: MOVE  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:19:0x0091\l}"];
Node_29 [shape=record,label="{29\:\ 0x00c7|0x00c7: ARITH  (r8 I:int) = (r8 I:int) + (1 int) \l0x00c9: MOVE  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00cb: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x00cd: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00cf: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d1: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l}"];
Node_30 [shape=record,label="{30\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:22:0x0099\l}"];
Node_31 [shape=record,label="{31\:\ 0x00d4|0x00d4: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x00d6: MOVE  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00d8: NEW_INSTANCE  (r1 I:java.lang.Integer) =  java.lang.Integer \l0x00da: INVOKE  (r4 I:java.lang.String) = (r15 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL \l0x00de: INVOKE  (r1 I:java.lang.Integer), (r4 I:java.lang.String) java.lang.Integer.\<init\>(java.lang.String):void type: DIRECT \l0x00e1: INVOKE  \l  (r11 I:java.util.LinkedHashMap)\l  (r1 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_32 [shape=record,label="{32\:\ 0x00e5|0x00e5: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x00e7: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x00e9: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00eb: MOVE  (r22 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x00ed: MOVE  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_33 [shape=record,label="{33\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:11:0x006b\l}"];
Node_34 [shape=record,label="{34\:\ 0x00ef|0x00ef: ARITH  (r14 I:int) = (r14 I:int) + (1 int) \l0x00f1: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x00f3: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x00f5: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00f7: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l0x00f9: MOVE  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r23 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00fb: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x00fd: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_35 [shape=record,label="{35\:\ 0x0100|0x0100: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0102: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0104: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0106: INVOKE  (r1 I:java.lang.String) = (r10 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL \l0x010a: INVOKE  (r1 I:int) = (r1 I:java.lang.String) java.lang.Integer.parseInt(java.lang.String):int type: STATIC \l0x010e: INVOKE  (r1 I:java.lang.Integer) = (r1 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0112: INVOKE  \l  (r6 I:java.util.LinkedHashMap)\l  (r1 I:java.lang.Object)\l  (r11 I:java.lang.Object)\l java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_36 [shape=record,label="{36\:\ 0x0116|0x0116: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x0118: MOVE  (r18 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x011a: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lExcHandler: NumberFormatException null\lSplitter:B:6:0x0055\l}"];
Node_38 [shape=record,label="{38\:\ 0x011c|0x011c: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l0x011e: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x0120: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r18 I:?[OBJECT, ARRAY]) \l0x0122: MOVE  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0124: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0126: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_39 [shape=record,label="{39\:\ 0x0129|0x0129: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r4 I:?[OBJECT, ARRAY]) \l0x012b: INVOKE  (r1 I:java.lang.String) = (r5 I:java.io.File) java.io.File.getName():java.lang.String type: VIRTUAL \l0x012f: INVOKE  \l  (r3 I:java.util.LinkedHashMap)\l  (r1 I:java.lang.Object)\l  (r6 I:java.lang.Object)\l java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x0132: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x0134: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_40 [shape=record,label="{40\:\ 0x0137|0x0137: NEW_INSTANCE  (r1 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x0139: INVOKE  (r1 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x013c: NEW_INSTANCE  (r2 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x013e: INVOKE  (r2 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x0141: INVOKE  (r4 I:java.util.Set) = (r3 I:java.util.LinkedHashMap) java.util.LinkedHashMap.keySet():java.util.Set type: VIRTUAL \l0x0145: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l0x0149: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_41 [shape=record,label="{41\:\ 0x014a|0x014a: INVOKE  (r6 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_42 [shape=record,label="{42\:\ 0x014e|0x014e: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:44:0x0169 \l}"];
Node_43 [shape=record,label="{43\:\ 0x0150|0x0150: INVOKE  (r6 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0154: CHECK_CAST  (r6 I:java.lang.String) = (java.lang.String) (r6 I:?[OBJECT, ARRAY]) \l0x0156: NEW_INSTANCE  (r7 I:java.lang.Integer) =  java.lang.Integer \l0x0158: INVOKE  (r7 I:java.lang.Integer), (r5 I:int) java.lang.Integer.\<init\>(int):void type: DIRECT \l0x015b: INVOKE  \l  (r1 I:java.util.LinkedHashMap)\l  (r6 I:java.lang.Object)\l  (r7 I:java.lang.Object)\l java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x015e: NEW_INSTANCE  (r7 I:java.lang.Integer) =  java.lang.Integer \l0x0160: INVOKE  (r7 I:java.lang.Integer), (r5 I:int) java.lang.Integer.\<init\>(int):void type: DIRECT \l0x0163: INVOKE  \l  (r2 I:java.util.LinkedHashMap)\l  (r7 I:java.lang.Object)\l  (r6 I:java.lang.Object)\l java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x0166: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_44 [shape=record,label="{44\:\ 0x0169|0x0169: NEW_INSTANCE  (r4 I:java.util.ArrayList) =  java.util.ArrayList \l0x016b: INVOKE  (r4 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x016e: INVOKE  (r5 I:java.util.Set) = (r3 I:java.util.LinkedHashMap) java.util.LinkedHashMap.keySet():java.util.Set type: VIRTUAL \l0x0172: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_45 [shape=record,label="{45\:\ 0x0176|0x0176: INVOKE  (r6 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_46 [shape=record,label="{46\:\ 0x017a|0x017a: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:101:0x033e \l}"];
Node_47 [shape=record,label="{47\:\ 0x017c|0x017c: INVOKE  (r6 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0180: CHECK_CAST  (r6 I:java.lang.String) = (java.lang.String) (r6 I:?[OBJECT, ARRAY]) \l0x0182: INVOKE  (r7 I:java.lang.Object) = (r3 I:java.util.LinkedHashMap), (r6 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0186: CHECK_CAST  (r7 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r7 I:?[OBJECT, ARRAY]) \l0x0188: INVOKE  (r7 I:java.util.Set) = (r7 I:java.util.LinkedHashMap) java.util.LinkedHashMap.keySet():java.util.Set type: VIRTUAL \l0x018c: INVOKE  (r7 I:java.util.Iterator) = (r7 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_48 [shape=record,label="{48\:\ 0x0190|0x0190: INVOKE  (r8 I:boolean) = (r7 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_49 [shape=record,label="{49\:\ 0x0194|0x0194: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:45:0x0176 \l}"];
Node_50 [shape=record,label="{50\:\ 0x0196|0x0196: INVOKE  (r8 I:java.lang.Object) = (r7 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x019a: CHECK_CAST  (r8 I:java.lang.Integer) = (java.lang.Integer) (r8 I:?[OBJECT, ARRAY]) \l0x019c: NEW_INSTANCE  (r9 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x019e: INVOKE  (r9 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x01a1: NEW_INSTANCE  (r10 I:java.util.TreeSet) =  java.util.TreeSet \l0x01a3: INVOKE  (r11 I:java.lang.Object) = (r3 I:java.util.LinkedHashMap), (r6 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x01a7: CHECK_CAST  (r11 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r11 I:?[OBJECT, ARRAY]) \l0x01a9: INVOKE  (r11 I:java.lang.Object) = (r11 I:java.util.LinkedHashMap), (r8 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x01ad: CHECK_CAST  (r11 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r11 I:?[OBJECT, ARRAY]) \l0x01af: INVOKE  (r11 I:java.util.Set) = (r11 I:java.util.LinkedHashMap) java.util.LinkedHashMap.keySet():java.util.Set type: VIRTUAL \l0x01b3: INVOKE  (r10 I:java.util.TreeSet), (r11 I:java.util.Collection) java.util.TreeSet.\<init\>(java.util.Collection):void type: DIRECT \l0x01b6: INVOKE  (r10 I:java.util.Iterator) = (r10 I:java.util.TreeSet) java.util.TreeSet.iterator():java.util.Iterator type: VIRTUAL \l}"];
Node_51 [shape=record,label="{51\:\ 0x01ba|0x01ba: INVOKE  (r11 I:boolean) = (r10 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_52 [shape=record,label="{52\:\ 0x01be|0x01be: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:64:0x0217 \l}"];
Node_53 [shape=record,label="{53\:\ 0x01c0|0x01c0: INVOKE  (r11 I:java.lang.Object) = (r10 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x01c4: CHECK_CAST  (r11 I:java.lang.Integer) = (java.lang.Integer) (r11 I:?[OBJECT, ARRAY]) \l0x01c6: NEW_INSTANCE  (r12 I:java.util.ArrayList) =  java.util.ArrayList \l0x01c8: INVOKE  (r12 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x01cb: INVOKE  (r13 I:java.lang.Object) = (r3 I:java.util.LinkedHashMap), (r6 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x01cf: CHECK_CAST  (r13 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r13 I:?[OBJECT, ARRAY]) \l0x01d1: INVOKE  (r13 I:java.lang.Object) = (r13 I:java.util.LinkedHashMap), (r8 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x01d5: CHECK_CAST  (r13 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r13 I:?[OBJECT, ARRAY]) \l0x01d7: INVOKE  (r13 I:java.lang.Object) = (r13 I:java.util.LinkedHashMap), (r11 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x01db: CHECK_CAST  (r13 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r13 I:?[OBJECT, ARRAY]) \l0x01dd: INVOKE  (r13 I:java.util.Set) = (r13 I:java.util.LinkedHashMap) java.util.LinkedHashMap.keySet():java.util.Set type: VIRTUAL \l0x01e1: INVOKE  (r13 I:java.util.Iterator) = (r13 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_54 [shape=record,label="{54\:\ 0x01e5|0x01e5: INVOKE  (r14 I:boolean) = (r13 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_55 [shape=record,label="{55\:\ 0x01e9|0x01e9: IF  (r14 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:57:0x01f5 \l}"];
Node_56 [shape=record,label="{56\:\ 0x01eb|0x01eb: INVOKE  (r14 I:java.lang.Object) = (r13 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x01ef: CHECK_CAST  (r14 I:java.lang.Integer) = (java.lang.Integer) (r14 I:?[OBJECT, ARRAY]) \l0x01f1: INVOKE  (r12 I:java.util.List), (r14 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_57 [shape=record,label="{57\:\ 0x01f5|0x01f5: INVOKE  (r13 I:int) = (r12 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_58 [shape=record,label="{58\:\ 0x01f9|0x01f9: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:60:0x01fc \l}"];
Node_60 [shape=record,label="{60\:\ 0x01fc|0x01fc: INVOKE  (r12 I:java.util.List) java.util.Collections.sort(java.util.List):void type: STATIC \l0x01ff: INVOKE  (r13 I:boolean) = (r9 I:java.util.LinkedHashMap), (r12 I:java.lang.Object) java.util.LinkedHashMap.containsKey(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_61 [shape=record,label="{61\:\ 0x0203|0x0203: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:63:0x020d \l}"];
Node_62 [shape=record,label="{62\:\ 0x0205|0x0205: NEW_INSTANCE  (r13 I:java.util.ArrayList) =  java.util.ArrayList \l0x0207: INVOKE  (r13 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x020a: INVOKE  \l  (r9 I:java.util.LinkedHashMap)\l  (r12 I:java.lang.Object)\l  (r13 I:java.lang.Object)\l java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_63 [shape=record,label="{63\:\ 0x020d|0x020d: INVOKE  (r12 I:java.lang.Object) = (r9 I:java.util.LinkedHashMap), (r12 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0211: CHECK_CAST  (r12 I:java.util.List) = (java.util.List) (r12 I:?[OBJECT, ARRAY]) \l0x0213: INVOKE  (r12 I:java.util.List), (r11 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_64 [shape=record,label="{64\:\ 0x0217|0x0217: NEW_INSTANCE  (r10 I:java.util.LinkedHashMap) =  java.util.LinkedHashMap \l0x0219: INVOKE  (r10 I:java.util.LinkedHashMap) java.util.LinkedHashMap.\<init\>():void type: DIRECT \l0x021c: INVOKE  (r11 I:java.util.Set) = (r9 I:java.util.LinkedHashMap) java.util.LinkedHashMap.keySet():java.util.Set type: VIRTUAL \l0x0220: INVOKE  (r11 I:java.util.Iterator) = (r11 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_65 [shape=record,label="{65\:\ 0x0224|0x0224: INVOKE  (r12 I:boolean) = (r11 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_66 [shape=record,label="{66\:\ 0x0228|0x0228: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:81:0x028e \l}"];
Node_67 [shape=record,label="{67\:\ 0x022a|0x022a: INVOKE  (r12 I:java.lang.Object) = (r11 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x022e: CHECK_CAST  (r12 I:java.util.List) = (java.util.List) (r12 I:?[OBJECT, ARRAY]) \l0x0230: NEW_INSTANCE  (r13 I:java.util.TreeSet) =  java.util.TreeSet \l0x0232: INVOKE  (r14 I:java.lang.Object) = (r9 I:java.util.LinkedHashMap), (r12 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0236: CHECK_CAST  (r14 I:java.util.Collection) = (java.util.Collection) (r14 I:?[OBJECT, ARRAY]) \l0x0238: INVOKE  (r13 I:java.util.TreeSet), (r14 I:java.util.Collection) java.util.TreeSet.\<init\>(java.util.Collection):void type: DIRECT \l0x023b: NEW_INSTANCE  (r14 I:java.util.ArrayList) =  java.util.ArrayList \l0x023d: INVOKE  (r14 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0240: INVOKE  (r15 I:java.lang.Object) = (r13 I:java.util.TreeSet) java.util.TreeSet.first():java.lang.Object type: VIRTUAL \l0x0244: CHECK_CAST  (r15 I:java.lang.Integer) = (java.lang.Integer) (r15 I:?[OBJECT, ARRAY]) \l0x0246: INVOKE  (r15 I:int) = (r15 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_68 [shape=record,label="{68\:\ 0x024a|0x024a: INVOKE  (r16 I:java.lang.Object) = (r13 I:java.util.TreeSet) java.util.TreeSet.last():java.lang.Object type: VIRTUAL \l0x024e: CHECK_CAST  (r16 I:java.lang.Integer) = (java.lang.Integer) (r16 I:?[OBJECT, ARRAY]) \l0x0250: INVOKE  (r16 I:int) = (r16 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0254: MOVE  (r24 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0256: ARITH  (r5 I:int) = (r16 I:int) + (1 int) \l}"];
Node_69 [shape=record,label="{69\:\ 0x0258|0x0258: IF  (r15 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:77:0x0282 \l}"];
Node_70 [shape=record,label="{70\:\ 0x025a|0x025a: NEW_INSTANCE  (r5 I:java.lang.Integer) =  java.lang.Integer \l0x025c: INVOKE  (r5 I:java.lang.Integer), (r15 I:int) java.lang.Integer.\<init\>(int):void type: DIRECT \l0x025f: INVOKE  (r5 I:boolean) = (r13 I:java.util.TreeSet), (r5 I:java.lang.Object) java.util.TreeSet.contains(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_71 [shape=record,label="{71\:\ 0x0263|0x0263: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:73:0x026e \l}"];
Node_72 [shape=record,label="{72\:\ 0x0265|0x0265: NEW_INSTANCE  (r5 I:java.lang.Integer) =  java.lang.Integer \l0x0267: INVOKE  (r5 I:java.lang.Integer), (r15 I:int) java.lang.Integer.\<init\>(int):void type: DIRECT \l0x026a: INVOKE  (r14 I:java.util.List), (r5 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_73 [shape=record,label="{73\:\ 0x026e|0x026e: INVOKE  (r5 I:int) = (r14 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_74 [shape=record,label="{74\:\ 0x0272|0x0272: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:76:0x027d \l}"];
Node_75 [shape=record,label="{75\:\ 0x0274|0x0274: INVOKE  \l  (r10 I:java.util.LinkedHashMap)\l  (r12 I:java.lang.Object)\l  (r14 I:java.lang.Object)\l java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x0277: NEW_INSTANCE  (r5 I:java.util.ArrayList) =  java.util.ArrayList \l0x0279: INVOKE  (r5 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x027c: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l}"];
Node_76 [shape=record,label="{76\:\ 0x027d|0x027d: ARITH  (r15 I:int) = (r15 I:int) + (1 int) \l0x027f: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l}"];
Node_77 [shape=record,label="{77\:\ 0x0282|0x0282: INVOKE  (r5 I:int) = (r14 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_78 [shape=record,label="{78\:\ 0x0286|0x0286: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:80:0x028b \l}"];
Node_79 [shape=record,label="{79\:\ 0x0288|0x0288: INVOKE  \l  (r10 I:java.util.LinkedHashMap)\l  (r12 I:java.lang.Object)\l  (r14 I:java.lang.Object)\l java.util.LinkedHashMap.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_80 [shape=record,label="{80\:\ 0x028b|0x028b: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l}"];
Node_81 [shape=record,label="{81\:\ 0x028e|0x028e: MOVE  (r24 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY]) \l0x0290: INVOKE  (r5 I:java.util.Set) = (r10 I:java.util.LinkedHashMap) java.util.LinkedHashMap.keySet():java.util.Set type: VIRTUAL \l0x0294: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_82 [shape=record,label="{82\:\ 0x0298|0x0298: INVOKE  (r10 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_83 [shape=record,label="{83\:\ 0x029c|0x029c: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:100:0x033a \l}"];
Node_84 [shape=record,label="{84\:\ 0x029e|0x029e: INVOKE  (r10 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x02a2: CHECK_CAST  (r10 I:java.util.List) = (java.util.List) (r10 I:?[OBJECT, ARRAY]) \l0x02a4: NEW_INSTANCE  (r11 I:java.util.TreeSet) =  java.util.TreeSet \l0x02a6: INVOKE  (r11 I:java.util.TreeSet), (r10 I:java.util.Collection) java.util.TreeSet.\<init\>(java.util.Collection):void type: DIRECT \l0x02a9: NEW_INSTANCE  (r12 I:java.util.TreeSet) =  java.util.TreeSet \l0x02ab: INVOKE  (r10 I:java.lang.Object) = (r9 I:java.util.LinkedHashMap), (r10 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x02af: CHECK_CAST  (r10 I:java.util.Collection) = (java.util.Collection) (r10 I:?[OBJECT, ARRAY]) \l0x02b1: INVOKE  (r12 I:java.util.TreeSet), (r10 I:java.util.Collection) java.util.TreeSet.\<init\>(java.util.Collection):void type: DIRECT \l0x02b4: NEW_INSTANCE  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange) =  org.osmdroid.util.GEMFFile$GEMFRange \l0x02b6: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x02b7: INVOKE  \l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l  (r0 I:org.osmdroid.util.GEMFFile)\l  (r13 I:org.osmdroid.util.GEMFFile$1)\l org.osmdroid.util.GEMFFile.GEMFRange.\<init\>(org.osmdroid.util.GEMFFile, org.osmdroid.util.GEMFFile$1):void type: DIRECT \l0x02ba: IPUT  \l  (r8 I:java.lang.Integer)\l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.zoom java.lang.Integer \l0x02bc: INVOKE  (r14 I:java.lang.Object) = (r1 I:java.util.LinkedHashMap), (r6 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x02c0: CHECK_CAST  (r14 I:java.lang.Integer) = (java.lang.Integer) (r14 I:?[OBJECT, ARRAY]) \l0x02c2: IPUT  \l  (r14 I:java.lang.Integer)\l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.sourceIndex java.lang.Integer \l0x02c4: INVOKE  (r14 I:java.lang.Object) = (r12 I:java.util.TreeSet) java.util.TreeSet.first():java.lang.Object type: VIRTUAL \l0x02c8: CHECK_CAST  (r14 I:java.lang.Integer) = (java.lang.Integer) (r14 I:?[OBJECT, ARRAY]) \l0x02ca: IPUT  \l  (r14 I:java.lang.Integer)\l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.xMin java.lang.Integer \l0x02cc: INVOKE  (r14 I:java.lang.Object) = (r12 I:java.util.TreeSet) java.util.TreeSet.last():java.lang.Object type: VIRTUAL \l0x02d0: CHECK_CAST  (r14 I:java.lang.Integer) = (java.lang.Integer) (r14 I:?[OBJECT, ARRAY]) \l0x02d2: IPUT  \l  (r14 I:java.lang.Integer)\l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.xMax java.lang.Integer \l0x02d4: INVOKE  (r14 I:java.lang.Object) = (r11 I:java.util.TreeSet) java.util.TreeSet.first():java.lang.Object type: VIRTUAL \l0x02d8: CHECK_CAST  (r14 I:java.lang.Integer) = (java.lang.Integer) (r14 I:?[OBJECT, ARRAY]) \l0x02da: INVOKE  (r14 I:int) = (r14 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_85 [shape=record,label="{85\:\ 0x02de|0x02de: INVOKE  (r15 I:java.lang.Object) = (r11 I:java.util.TreeSet) java.util.TreeSet.last():java.lang.Object type: VIRTUAL \l0x02e2: CHECK_CAST  (r15 I:java.lang.Integer) = (java.lang.Integer) (r15 I:?[OBJECT, ARRAY]) \l0x02e4: INVOKE  (r15 I:int) = (r15 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x02e8: ARITH  (r15 I:int) = (r15 I:int) + (1 int) \l}"];
Node_86 [shape=record,label="{86\:\ 0x02ea|0x02ea: IF  (r14 I:?[int, byte, short, char]) \>= (r15 I:?[int, byte, short, char])  \-\> B:97:0x0331 \l}"];
Node_87 [shape=record,label="{87\:\ 0x02ec|0x02ec: NEW_INSTANCE  (r15 I:java.lang.Integer) =  java.lang.Integer \l0x02ee: INVOKE  (r15 I:java.lang.Integer), (r14 I:int) java.lang.Integer.\<init\>(int):void type: DIRECT \l0x02f1: INVOKE  (r15 I:boolean) = (r11 I:java.util.TreeSet), (r15 I:java.lang.Object) java.util.TreeSet.contains(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_88 [shape=record,label="{88\:\ 0x02f5|0x02f5: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:93:0x0308 \l}"];
Node_89 [shape=record,label="{89\:\ 0x02f7|0x02f7: IGET  (r15 I:java.lang.Integer) = (r10 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer \l}"];
Node_90 [shape=record,label="{90\:\ 0x02f9|0x02f9: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:92:0x0301 \l}"];
Node_91 [shape=record,label="{91\:\ 0x02fb|0x02fb: INVOKE  (r15 I:java.lang.Integer) = (r14 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x02ff: IPUT  \l  (r15 I:java.lang.Integer)\l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer \l}"];
Node_92 [shape=record,label="{92\:\ 0x0301|0x0301: INVOKE  (r15 I:java.lang.Integer) = (r14 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0305: IPUT  \l  (r15 I:java.lang.Integer)\l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.yMax java.lang.Integer \l}"];
Node_93 [shape=record,label="{93\:\ 0x0308|0x0308: IGET  (r15 I:java.lang.Integer) = (r10 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer \l}"];
Node_94 [shape=record,label="{94\:\ 0x030a|0x030a: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:96:0x032e \l}"];
Node_95 [shape=record,label="{95\:\ 0x030c|0x030c: INVOKE  (r4 I:java.util.List), (r10 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x030f: NEW_INSTANCE  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange) =  org.osmdroid.util.GEMFFile$GEMFRange \l0x0311: INVOKE  \l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l  (r0 I:org.osmdroid.util.GEMFFile)\l  (r13 I:org.osmdroid.util.GEMFFile$1)\l org.osmdroid.util.GEMFFile.GEMFRange.\<init\>(org.osmdroid.util.GEMFFile, org.osmdroid.util.GEMFFile$1):void type: DIRECT \l0x0314: IPUT  \l  (r8 I:java.lang.Integer)\l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.zoom java.lang.Integer \l0x0316: INVOKE  (r15 I:java.lang.Object) = (r1 I:java.util.LinkedHashMap), (r6 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x031a: CHECK_CAST  (r15 I:java.lang.Integer) = (java.lang.Integer) (r15 I:?[OBJECT, ARRAY]) \l0x031c: IPUT  \l  (r15 I:java.lang.Integer)\l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.sourceIndex java.lang.Integer \l0x031e: INVOKE  (r15 I:java.lang.Object) = (r12 I:java.util.TreeSet) java.util.TreeSet.first():java.lang.Object type: VIRTUAL \l0x0322: CHECK_CAST  (r15 I:java.lang.Integer) = (java.lang.Integer) (r15 I:?[OBJECT, ARRAY]) \l0x0324: IPUT  \l  (r15 I:java.lang.Integer)\l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.xMin java.lang.Integer \l0x0326: INVOKE  (r15 I:java.lang.Object) = (r12 I:java.util.TreeSet) java.util.TreeSet.last():java.lang.Object type: VIRTUAL \l0x032a: CHECK_CAST  (r15 I:java.lang.Integer) = (java.lang.Integer) (r15 I:?[OBJECT, ARRAY]) \l0x032c: IPUT  \l  (r15 I:java.lang.Integer)\l  (r10 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.xMax java.lang.Integer \l}"];
Node_96 [shape=record,label="{96\:\ 0x032e|0x032e: ARITH  (r14 I:int) = (r14 I:int) + (1 int) \l}"];
Node_97 [shape=record,label="{97\:\ 0x0331|0x0331: IGET  (r11 I:java.lang.Integer) = (r10 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer \l}"];
Node_98 [shape=record,label="{98\:\ 0x0333|0x0333: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:82:0x0298 \l}"];
Node_99 [shape=record,label="{99\:\ 0x0335|0x0335: INVOKE  (r4 I:java.util.List), (r10 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_100 [shape=record,label="{100\:\ 0x033a|0x033a: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l}"];
Node_101 [shape=record,label="{101\:\ 0x033e|0x033e: INVOKE  (r5 I:java.util.Set) = (r1 I:java.util.LinkedHashMap) java.util.LinkedHashMap.keySet():java.util.Set type: VIRTUAL \l0x0342: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l0x0346: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_102 [shape=record,label="{102\:\ 0x0347|0x0347: INVOKE  (r7 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_103 [shape=record,label="{103\:\ 0x034b|0x034b: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:105:0x035b \l}"];
Node_104 [shape=record,label="{104\:\ 0x034d|0x034d: INVOKE  (r7 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0351: CHECK_CAST  (r7 I:java.lang.String) = (java.lang.String) (r7 I:?[OBJECT, ARRAY]) \l0x0353: INVOKE  (r7 I:int) = (r7 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0357: ARITH  (r7 I:int) = (r7 I:int) + (8 int) \l0x0359: ARITH  (r6 I:int) = (r6 I:int) + (r7 I:int) \l}"];
Node_105 [shape=record,label="{105\:\ 0x035b|0x035b: ARITH  (r6 I:int) = (r6 I:int) + (12 int) \l0x035d: INVOKE  (r5 I:int) = (r4 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x0361: ARITH  (r5 I:int) = (r5 I:int) * (32 int) \l0x0363: ARITH  (r6 I:int) = (r6 I:int) + (r5 I:int) \l0x0364: CONST  (r5 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x0365: ARITH  (r6 I:int) = (r6 I:int) + (r5 I:int) \l0x0366: CAST  (r6 I:long) = (long) (r6 I:int) \l0x0367: INVOKE  (r8 I:java.util.Iterator) = (r4 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_106 [shape=record,label="{106\:\ 0x036b|0x036b: INVOKE  (r9 I:boolean) = (r8 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_107 [shape=record,label="{107\:\ 0x036f|0x036f: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:116:0x03a6 \l}"];
Node_108 [shape=record,label="{108\:\ 0x0371|0x0371: INVOKE  (r9 I:java.lang.Object) = (r8 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0375: CHECK_CAST  (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) = (org.osmdroid.util.GEMFFile$GEMFRange) (r9 I:?[OBJECT, ARRAY]) \l0x0377: INVOKE  (r10 I:java.lang.Long) = (r6 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x037b: IPUT  \l  (r10 I:java.lang.Long)\l  (r9 I:org.osmdroid.util.GEMFFile$GEMFRange)\l org.osmdroid.util.GEMFFile.GEMFRange.offset java.lang.Long \l0x037d: IGET  (r10 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMin java.lang.Integer \l0x037f: INVOKE  (r10 I:int) = (r10 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_109 [shape=record,label="{109\:\ 0x0383|0x0383: IGET  (r11 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMax java.lang.Integer \l0x0385: INVOKE  (r11 I:int) = (r11 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0389: ARITH  (r11 I:int) = (r11 I:int) + (1 int) \l}"];
Node_110 [shape=record,label="{110\:\ 0x038b|0x038b: IF  (r10 I:?[int, byte, short, char]) \>= (r11 I:?[int, byte, short, char])  \-\> B:106:0x036b \l}"];
Node_111 [shape=record,label="{111\:\ 0x038d|0x038d: IGET  (r11 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer \l0x038f: INVOKE  (r11 I:int) = (r11 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_112 [shape=record,label="{112\:\ 0x0393|0x0393: IGET  (r12 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMax java.lang.Integer \l0x0395: INVOKE  (r12 I:int) = (r12 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0399: ARITH  (r12 I:int) = (r12 I:int) + (1 int) \l}"];
Node_113 [shape=record,label="{113\:\ 0x039b|0x039b: IF  (r11 I:?[int, byte, short, char]) \>= (r12 I:?[int, byte, short, char])  \-\> B:115:0x03a3 \l}"];
Node_114 [shape=record,label="{114\:\ 0x039d|0x039d: CONST  (r12 I:?[long, double]) = (12 ?[long, double]) \l0x039f: ARITH  (r6 I:long) = (r6 I:long) + (r12 I:long) \l0x03a0: ARITH  (r11 I:int) = (r11 I:int) + (1 int) \l}"];
Node_115 [shape=record,label="{115\:\ 0x03a3|0x03a3: ARITH  (r10 I:int) = (r10 I:int) + (1 int) \l}"];
Node_116 [shape=record,label="{116\:\ 0x03a6|0x03a6: NEW_INSTANCE  (r8 I:java.io.RandomAccessFile) =  java.io.RandomAccessFile \l0x03a8: CONST_STR  (r9 I:java.lang.String) =  \"rw\" \l0x03aa: MOVE  (r10 I:?[OBJECT, ARRAY]) = (r28 I:?[OBJECT, ARRAY]) \l0x03ac: INVOKE  \l  (r8 I:java.io.RandomAccessFile)\l  (r10 I:java.lang.String)\l  (r9 I:java.lang.String)\l java.io.RandomAccessFile.\<init\>(java.lang.String, java.lang.String):void type: DIRECT \l0x03af: INVOKE  (r8 I:java.io.RandomAccessFile), (r5 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x03b2: CONST  (r5 I:?[int, float, short, byte, char]) = \l  (256(0x100, float:3.59E\-43) ?[int, float, short, byte, char])\l \l0x03b4: INVOKE  (r8 I:java.io.RandomAccessFile), (r5 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x03b7: INVOKE  (r5 I:int) = (r1 I:java.util.LinkedHashMap) java.util.LinkedHashMap.size():int type: VIRTUAL \l0x03bb: INVOKE  (r8 I:java.io.RandomAccessFile), (r5 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x03be: INVOKE  (r5 I:java.util.Set) = (r1 I:java.util.LinkedHashMap) java.util.LinkedHashMap.keySet():java.util.Set type: VIRTUAL \l0x03c2: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_117 [shape=record,label="{117\:\ 0x03c6|0x03c6: INVOKE  (r9 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_118 [shape=record,label="{118\:\ 0x03ca|0x03ca: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:120:0x03ee \l}"];
Node_119 [shape=record,label="{119\:\ 0x03cc|0x03cc: INVOKE  (r9 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x03d0: CHECK_CAST  (r9 I:java.lang.String) = (java.lang.String) (r9 I:?[OBJECT, ARRAY]) \l0x03d2: INVOKE  (r11 I:java.lang.Object) = (r1 I:java.util.LinkedHashMap), (r9 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x03d6: CHECK_CAST  (r11 I:java.lang.Integer) = (java.lang.Integer) (r11 I:?[OBJECT, ARRAY]) \l0x03d8: INVOKE  (r11 I:int) = (r11 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x03dc: INVOKE  (r8 I:java.io.RandomAccessFile), (r11 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x03df: INVOKE  (r11 I:int) = (r9 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x03e3: INVOKE  (r8 I:java.io.RandomAccessFile), (r11 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x03e6: INVOKE  (r9 I:byte[]) = (r9 I:java.lang.String) java.lang.String.getBytes():byte[] type: VIRTUAL \l0x03ea: INVOKE  (r8 I:java.io.RandomAccessFile), (r9 I:byte[]) java.io.RandomAccessFile.write(byte[]):void type: VIRTUAL \l}"];
Node_120 [shape=record,label="{120\:\ 0x03ee|0x03ee: INVOKE  (r1 I:int) = (r4 I:java.util.List) java.util.List.size():int type: INTERFACE \l0x03f2: INVOKE  (r8 I:java.io.RandomAccessFile), (r1 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x03f5: INVOKE  (r1 I:java.util.Iterator) = (r4 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_121 [shape=record,label="{121\:\ 0x03f9|0x03f9: INVOKE  (r5 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_122 [shape=record,label="{122\:\ 0x03fd|0x03fd: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:124:0x0445 \l}"];
Node_123 [shape=record,label="{123\:\ 0x03ff|0x03ff: INVOKE  (r5 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0403: CHECK_CAST  (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) = (org.osmdroid.util.GEMFFile$GEMFRange) (r5 I:?[OBJECT, ARRAY]) \l0x0405: IGET  (r9 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.zoom java.lang.Integer \l0x0407: INVOKE  (r9 I:int) = (r9 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x040b: INVOKE  (r8 I:java.io.RandomAccessFile), (r9 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x040e: IGET  (r9 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMin java.lang.Integer \l0x0410: INVOKE  (r9 I:int) = (r9 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0414: INVOKE  (r8 I:java.io.RandomAccessFile), (r9 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x0417: IGET  (r9 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMax java.lang.Integer \l0x0419: INVOKE  (r9 I:int) = (r9 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x041d: INVOKE  (r8 I:java.io.RandomAccessFile), (r9 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x0420: IGET  (r9 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer \l0x0422: INVOKE  (r9 I:int) = (r9 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0426: INVOKE  (r8 I:java.io.RandomAccessFile), (r9 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x0429: IGET  (r9 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMax java.lang.Integer \l0x042b: INVOKE  (r9 I:int) = (r9 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x042f: INVOKE  (r8 I:java.io.RandomAccessFile), (r9 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x0432: IGET  (r9 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.sourceIndex java.lang.Integer \l0x0434: INVOKE  (r9 I:int) = (r9 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0438: INVOKE  (r8 I:java.io.RandomAccessFile), (r9 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x043b: IGET  (r5 I:java.lang.Long) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.offset java.lang.Long \l0x043d: INVOKE  (r11 I:long) = (r5 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL \l0x0441: INVOKE  (r8 I:java.io.RandomAccessFile), (r11 I:long) java.io.RandomAccessFile.writeLong(long):void type: VIRTUAL \l}"];
Node_124 [shape=record,label="{124\:\ 0x0445|0x0445: INVOKE  (r1 I:java.util.Iterator) = (r4 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x0449: MOVE  (r11 I:?[long, double]) = (r6 I:?[long, double]) \l}"];
Node_125 [shape=record,label="{125\:\ 0x044a|0x044a: INVOKE  (r5 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_126 [shape=record,label="{126\:\ 0x044e|0x044e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:136:0x04b7 \l}"];
Node_127 [shape=record,label="{127\:\ 0x0450|0x0450: INVOKE  (r5 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0454: CHECK_CAST  (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) = (org.osmdroid.util.GEMFFile$GEMFRange) (r5 I:?[OBJECT, ARRAY]) \l0x0456: IGET  (r9 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMin java.lang.Integer \l0x0458: INVOKE  (r9 I:int) = (r9 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_128 [shape=record,label="{128\:\ 0x045c|0x045c: IGET  (r13 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMax java.lang.Integer \l0x045e: INVOKE  (r13 I:int) = (r13 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0462: ARITH  (r13 I:int) = (r13 I:int) + (1 int) \l}"];
Node_129 [shape=record,label="{129\:\ 0x0464|0x0464: IF  (r9 I:?[int, byte, short, char]) \>= (r13 I:?[int, byte, short, char])  \-\> B:135:0x04b4 \l}"];
Node_130 [shape=record,label="{130\:\ 0x0466|0x0466: IGET  (r13 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer \l0x0468: INVOKE  (r13 I:int) = (r13 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_131 [shape=record,label="{131\:\ 0x046c|0x046c: IGET  (r14 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMax java.lang.Integer \l0x046e: INVOKE  (r14 I:int) = (r14 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0472: ARITH  (r14 I:int) = (r14 I:int) + (1 int) \l}"];
Node_132 [shape=record,label="{132\:\ 0x0474|0x0474: IF  (r13 I:?[int, byte, short, char]) \>= (r14 I:?[int, byte, short, char])  \-\> B:134:0x04af \l}"];
Node_133 [shape=record,label="{133\:\ 0x0476|0x0476: INVOKE  (r8 I:java.io.RandomAccessFile), (r11 I:long) java.io.RandomAccessFile.writeLong(long):void type: VIRTUAL \l0x0479: IGET  (r14 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.sourceIndex java.lang.Integer \l0x047b: INVOKE  (r14 I:java.lang.Object) = (r2 I:java.util.LinkedHashMap), (r14 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x047f: INVOKE  (r14 I:java.lang.Object) = (r3 I:java.util.LinkedHashMap), (r14 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0483: CHECK_CAST  (r14 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r14 I:?[OBJECT, ARRAY]) \l0x0485: IGET  (r15 I:java.lang.Integer) = (r5 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.zoom java.lang.Integer \l0x0487: INVOKE  (r14 I:java.lang.Object) = (r14 I:java.util.LinkedHashMap), (r15 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x048b: CHECK_CAST  (r14 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r14 I:?[OBJECT, ARRAY]) \l0x048d: INVOKE  (r15 I:java.lang.Integer) = (r9 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0491: INVOKE  (r14 I:java.lang.Object) = (r14 I:java.util.LinkedHashMap), (r15 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0495: CHECK_CAST  (r14 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r14 I:?[OBJECT, ARRAY]) \l0x0497: INVOKE  (r15 I:java.lang.Integer) = (r13 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x049b: INVOKE  (r14 I:java.lang.Object) = (r14 I:java.util.LinkedHashMap), (r15 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x049f: CHECK_CAST  (r14 I:java.io.File) = (java.io.File) (r14 I:?[OBJECT, ARRAY]) \l0x04a1: INVOKE  (r14 I:long) = (r14 I:java.io.File) java.io.File.length():long type: VIRTUAL \l0x04a5: CAST  (r0 I:int) = (int) (r14 I:long) \l0x04a6: INVOKE  (r8 I:java.io.RandomAccessFile), (r0 I:int) java.io.RandomAccessFile.writeInt(int):void type: VIRTUAL \l0x04a9: ARITH  (r11 I:long) = (r11 I:long) + (r14 I:long) \l0x04aa: ARITH  (r13 I:int) = (r13 I:int) + (1 int) \l0x04ac: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l}"];
Node_134 [shape=record,label="{134\:\ 0x04af|0x04af: ARITH  (r9 I:int) = (r9 I:int) + (1 int) \l0x04b1: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l}"];
Node_135 [shape=record,label="{135\:\ 0x04b4|0x04b4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r27 I:?[OBJECT, ARRAY]) \l}"];
Node_136 [shape=record,label="{136\:\ 0x04b7|0x04b7: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1024(0x400, float:1.435E\-42) ?[int, float, short, byte, char])\l \l0x04b9: NEW_ARRAY  (r1 I:byte[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: byte[] \l0x04bb: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x04bf: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_137 [shape=record,label="{137\:\ 0x04c0|0x04c0: INVOKE  (r9 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_138 [shape=record,label="{138\:\ 0x04c4|0x04c4: IF  (r9 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:154:0x0594 \l}"];
Node_139 [shape=record,label="{139\:\ 0x04c6|0x04c6: INVOKE  (r9 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x04ca: CHECK_CAST  (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) = (org.osmdroid.util.GEMFFile$GEMFRange) (r9 I:?[OBJECT, ARRAY]) \l0x04cc: IGET  (r11 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMin java.lang.Integer \l0x04ce: INVOKE  (r11 I:int) = (r11 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_140 [shape=record,label="{140\:\ 0x04d2|0x04d2: IGET  (r12 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMax java.lang.Integer \l0x04d4: INVOKE  (r12 I:int) = (r12 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x04d8: ARITH  (r12 I:int) = (r12 I:int) + (1 int) \l}"];
Node_141 [shape=record,label="{141\:\ 0x04da|0x04da: IF  (r11 I:?[int, byte, short, char]) \>= (r12 I:?[int, byte, short, char])  \-\> B:137:0x04c0 \l}"];
Node_142 [shape=record,label="{142\:\ 0x04dc|0x04dc: IGET  (r12 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer \l0x04de: INVOKE  (r12 I:int) = (r12 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_143 [shape=record,label="{143\:\ 0x04e2|0x04e2: IGET  (r13 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMax java.lang.Integer \l0x04e4: INVOKE  (r13 I:int) = (r13 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x04e8: ARITH  (r13 I:int) = (r13 I:int) + (1 int) \l}"];
Node_144 [shape=record,label="{144\:\ 0x04ea|0x04ea: IF  (r12 I:?[int, byte, short, char]) \>= (r13 I:?[int, byte, short, char])  \-\> B:153:0x058f \l}"];
Node_145 [shape=record,label="{145\:\ 0x04ec|0x04ec: IGET  (r13 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.sourceIndex java.lang.Integer \l0x04ee: INVOKE  (r13 I:java.lang.Object) = (r2 I:java.util.LinkedHashMap), (r13 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x04f2: INVOKE  (r13 I:java.lang.Object) = (r3 I:java.util.LinkedHashMap), (r13 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x04f6: CHECK_CAST  (r13 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r13 I:?[OBJECT, ARRAY]) \l0x04f8: IGET  (r14 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.zoom java.lang.Integer \l0x04fa: INVOKE  (r13 I:java.lang.Object) = (r13 I:java.util.LinkedHashMap), (r14 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x04fe: CHECK_CAST  (r13 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r13 I:?[OBJECT, ARRAY]) \l0x0500: INVOKE  (r14 I:java.lang.Integer) = (r11 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0504: INVOKE  (r13 I:java.lang.Object) = (r13 I:java.util.LinkedHashMap), (r14 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0508: CHECK_CAST  (r13 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r13 I:?[OBJECT, ARRAY]) \l0x050a: INVOKE  (r14 I:java.lang.Integer) = (r12 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x050e: INVOKE  (r13 I:java.lang.Object) = (r13 I:java.util.LinkedHashMap), (r14 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0512: CHECK_CAST  (r13 I:java.io.File) = (java.io.File) (r13 I:?[OBJECT, ARRAY]) \l0x0514: INVOKE  (r13 I:long) = (r13 I:java.io.File) java.io.File.length():long type: VIRTUAL \l0x0518: ARITH  (r6 I:long) = (r6 I:long) + (r13 I:long) \l0x0519: CONST  (r13 I:?[long, double]) = \l  (1073741824(0x40000000, double:5.304989477E\-315) ?[long, double])\l \l0x051c: CMP_L  (r13 I:int) = (r6 I:long), (r13 I:long) \l}"];
Node_146 [shape=record,label="{146\:\ 0x051e|0x051e: IF  (r13 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:148:0x0547 \l}"];
Node_147 [shape=record,label="{147\:\ 0x0520|0x0520: INVOKE  (r8 I:java.io.RandomAccessFile) java.io.RandomAccessFile.close():void type: VIRTUAL \l0x0523: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l0x0525: NEW_INSTANCE  (r6 I:java.io.RandomAccessFile) =  java.io.RandomAccessFile \l0x0527: NEW_INSTANCE  (r7 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0529: INVOKE  (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x052c: INVOKE  (r7 I:java.lang.StringBuilder), (r10 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x052f: CONST_STR  (r8 I:java.lang.String) =  \"\-\" \l0x0531: INVOKE  (r7 I:java.lang.StringBuilder), (r8 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0534: INVOKE  (r7 I:java.lang.StringBuilder), (r5 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0537: INVOKE  (r7 I:java.lang.String) = (r7 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x053b: CONST_STR  (r8 I:java.lang.String) =  \"rw\" \l0x053d: INVOKE  \l  (r6 I:java.io.RandomAccessFile)\l  (r7 I:java.lang.String)\l  (r8 I:java.lang.String)\l java.io.RandomAccessFile.\<init\>(java.lang.String, java.lang.String):void type: DIRECT \l0x0540: CONST  (r7 I:?[long, double]) = (0 ?[long, double]) \l0x0542: MOVE  (r25 I:?[long, double]) = (r7 I:?[long, double]) \l0x0544: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0545: MOVE  (r6 I:?[long, double]) = (r25 I:?[long, double]) \l}"];
Node_148 [shape=record,label="{148\:\ 0x0547|0x0547: NEW_INSTANCE  (r13 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0549: IGET  (r14 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.sourceIndex java.lang.Integer \l0x054b: INVOKE  (r14 I:java.lang.Object) = (r2 I:java.util.LinkedHashMap), (r14 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x054f: INVOKE  (r14 I:java.lang.Object) = (r3 I:java.util.LinkedHashMap), (r14 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0553: CHECK_CAST  (r14 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r14 I:?[OBJECT, ARRAY]) \l0x0555: IGET  (r15 I:java.lang.Integer) = (r9 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.zoom java.lang.Integer \l0x0557: INVOKE  (r14 I:java.lang.Object) = (r14 I:java.util.LinkedHashMap), (r15 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x055b: CHECK_CAST  (r14 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r14 I:?[OBJECT, ARRAY]) \l0x055d: INVOKE  (r15 I:java.lang.Integer) = (r11 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x0561: INVOKE  (r14 I:java.lang.Object) = (r14 I:java.util.LinkedHashMap), (r15 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x0565: CHECK_CAST  (r14 I:java.util.LinkedHashMap) = (java.util.LinkedHashMap) (r14 I:?[OBJECT, ARRAY]) \l0x0567: INVOKE  (r15 I:java.lang.Integer) = (r12 I:int) java.lang.Integer.valueOf(int):java.lang.Integer type: STATIC \l0x056b: INVOKE  (r14 I:java.lang.Object) = (r14 I:java.util.LinkedHashMap), (r15 I:java.lang.Object) java.util.LinkedHashMap.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x056f: CHECK_CAST  (r14 I:java.io.File) = (java.io.File) (r14 I:?[OBJECT, ARRAY]) \l0x0571: INVOKE  (r13 I:java.io.FileInputStream), (r14 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT \l0x0574: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0575: INVOKE  (r15 I:int) = \l  (r13 I:java.io.FileInputStream)\l  (r1 I:byte[])\l  (r14 I:int)\l  (r0 I:int)\l java.io.FileInputStream.read(byte[], int, int):int type: VIRTUAL \l}"];
Node_149 [shape=record,label="{149\:\ 0x0579|0x0579: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_150 [shape=record,label="{150\:\ 0x057a|0x057a: IF  (r15 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:152:0x0586 \l}"];
Node_151 [shape=record,label="{151\:\ 0x057c|0x057c: INVOKE  \l  (r8 I:java.io.RandomAccessFile)\l  (r1 I:byte[])\l  (r14 I:int)\l  (r15 I:int)\l java.io.RandomAccessFile.write(byte[], int, int):void type: VIRTUAL \l0x057f: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1024(0x400, float:1.435E\-42) ?[int, float, short, byte, char])\l \l0x0581: INVOKE  (r15 I:int) = \l  (r13 I:java.io.FileInputStream)\l  (r1 I:byte[])\l  (r14 I:int)\l  (r0 I:int)\l java.io.FileInputStream.read(byte[], int, int):int type: VIRTUAL \l}"];
Node_152 [shape=record,label="{152\:\ 0x0586|0x0586: CONST  (r0 I:?[int, float, short, byte, char]) = \l  (1024(0x400, float:1.435E\-42) ?[int, float, short, byte, char])\l \l0x0588: INVOKE  (r13 I:java.io.FileInputStream) java.io.FileInputStream.close():void type: VIRTUAL \l0x058b: ARITH  (r12 I:int) = (r12 I:int) + (1 int) \l}"];
Node_153 [shape=record,label="{153\:\ 0x058f|0x058f: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0590: ARITH  (r11 I:int) = (r11 I:int) + (1 int) \l}"];
Node_154 [shape=record,label="{154\:\ 0x0594|0x0594: INVOKE  (r8 I:java.io.RandomAccessFile) java.io.RandomAccessFile.close():void type: VIRTUAL \l0x0597: INVOKE  (r27 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.openFiles():void type: DIRECT \l0x059a: INVOKE  (r27 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.readHeader():void type: DIRECT \l}"];
Node_155 [shape=record,label="{155\:\ 0x059d|0x059d: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.util.GEMFFile.\<init\>((r27 'this' I:org.osmdroid.util.GEMFFile A[IMMUTABLE_TYPE, THIS]), (r28 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:java.util.List\<java.io.File\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.FileNotFoundException, java.io.IOException]\}], Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Ljava\/lang\/String;, Ljava\/util\/List\<, Ljava\/io\/File;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_40;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_39;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_37;
Node_7 -> Node_8;
Node_7 -> Node_37;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_35;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_33;
Node_12 -> Node_13;
Node_12 -> Node_33;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_31;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_16 -> Node_26;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_19 -> Node_28;
Node_20 -> Node_21;
Node_21 -> Node_22;
Node_22 -> Node_23;
Node_22 -> Node_30;
Node_23 -> Node_24;
Node_23 -> Node_30;
Node_24 -> Node_29;
Node_25 -> Node_27;
Node_26 -> Node_25;
Node_27 -> Node_29;
Node_28 -> Node_27;
Node_29 -> Node_14;
Node_30 -> Node_29;
Node_31 -> Node_34;
Node_32 -> Node_34;
Node_33 -> Node_32;
Node_34 -> Node_9;
Node_35 -> Node_38;
Node_36 -> Node_38;
Node_37 -> Node_36;
Node_38 -> Node_4;
Node_39 -> Node_1;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_41;
Node_44 -> Node_45;
Node_45 -> Node_46;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_101;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_45;
Node_49 -> Node_50[style=dashed];
Node_50 -> Node_51;
Node_51 -> Node_52;
Node_52 -> Node_53[style=dashed];
Node_52 -> Node_64;
Node_53 -> Node_54;
Node_54 -> Node_55;
Node_55 -> Node_56[style=dashed];
Node_55 -> Node_57;
Node_56 -> Node_54;
Node_57 -> Node_58;
Node_58 -> Node_60;
Node_58 -> Node_51[style=dashed];
Node_60 -> Node_61;
Node_61 -> Node_62[style=dashed];
Node_61 -> Node_63;
Node_62 -> Node_63;
Node_63 -> Node_51;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_81;
Node_67 -> Node_68;
Node_68 -> Node_69;
Node_69 -> Node_70[style=dashed];
Node_69 -> Node_77;
Node_70 -> Node_71;
Node_71 -> Node_72[style=dashed];
Node_71 -> Node_73;
Node_72 -> Node_76;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_76;
Node_76 -> Node_68;
Node_77 -> Node_78;
Node_78 -> Node_79[style=dashed];
Node_78 -> Node_80;
Node_79 -> Node_80;
Node_80 -> Node_65;
Node_81 -> Node_82;
Node_82 -> Node_83;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_100;
Node_84 -> Node_85;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_97;
Node_87 -> Node_88;
Node_88 -> Node_89[style=dashed];
Node_88 -> Node_93;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_92;
Node_91 -> Node_92;
Node_92 -> Node_96;
Node_93 -> Node_94;
Node_94 -> Node_95[style=dashed];
Node_94 -> Node_96;
Node_95 -> Node_96;
Node_96 -> Node_85;
Node_97 -> Node_98;
Node_98 -> Node_82;
Node_98 -> Node_99[style=dashed];
Node_99 -> Node_82;
Node_100 -> Node_48;
Node_101 -> Node_102;
Node_102 -> Node_103;
Node_103 -> Node_104[style=dashed];
Node_103 -> Node_105;
Node_104 -> Node_102;
Node_105 -> Node_106;
Node_106 -> Node_107;
Node_107 -> Node_108[style=dashed];
Node_107 -> Node_116;
Node_108 -> Node_109;
Node_109 -> Node_110;
Node_110 -> Node_106;
Node_110 -> Node_111[style=dashed];
Node_111 -> Node_112;
Node_112 -> Node_113;
Node_113 -> Node_114[style=dashed];
Node_113 -> Node_115;
Node_114 -> Node_112;
Node_115 -> Node_109;
Node_116 -> Node_117;
Node_117 -> Node_118;
Node_118 -> Node_119[style=dashed];
Node_118 -> Node_120;
Node_119 -> Node_117;
Node_120 -> Node_121;
Node_121 -> Node_122;
Node_122 -> Node_123[style=dashed];
Node_122 -> Node_124;
Node_123 -> Node_121;
Node_124 -> Node_125;
Node_125 -> Node_126;
Node_126 -> Node_127[style=dashed];
Node_126 -> Node_136;
Node_127 -> Node_128;
Node_128 -> Node_129;
Node_129 -> Node_130[style=dashed];
Node_129 -> Node_135;
Node_130 -> Node_131;
Node_131 -> Node_132;
Node_132 -> Node_133[style=dashed];
Node_132 -> Node_134;
Node_133 -> Node_131;
Node_134 -> Node_128;
Node_135 -> Node_125;
Node_136 -> Node_137;
Node_137 -> Node_138;
Node_138 -> Node_139[style=dashed];
Node_138 -> Node_154;
Node_139 -> Node_140;
Node_140 -> Node_141;
Node_141 -> Node_137;
Node_141 -> Node_142[style=dashed];
Node_142 -> Node_143;
Node_143 -> Node_144;
Node_144 -> Node_145[style=dashed];
Node_144 -> Node_153;
Node_145 -> Node_146;
Node_146 -> Node_147[style=dashed];
Node_146 -> Node_148;
Node_147 -> Node_148;
Node_148 -> Node_149;
Node_149 -> Node_150;
Node_150 -> Node_151[style=dashed];
Node_150 -> Node_152;
Node_151 -> Node_149;
Node_152 -> Node_143;
Node_153 -> Node_140;
Node_154 -> Node_155;
}

