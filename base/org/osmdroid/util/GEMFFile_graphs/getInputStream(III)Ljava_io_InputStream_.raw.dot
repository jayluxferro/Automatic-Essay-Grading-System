digraph "CFG fororg.osmdroid.util.GEMFFile.getInputStream(III)Ljava\/io\/InputStream;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.List\<org.osmdroid.util.GEMFFile$GEMFRange\>) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mRangeData java.util.List \l0x0002: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|0x000b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x004a \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0011: CHECK_CAST  (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) = (org.osmdroid.util.GEMFFile$GEMFRange) (r1 I:?[OBJECT, ARRAY]) \l0x0013: IGET  (r3 I:java.lang.Integer) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.zoom java.lang.Integer \l0x0015: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|0x0019: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|0x001b: IGET  (r3 I:java.lang.Integer) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMin java.lang.Integer \l0x001d: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0021|0x0021: IF  (r11 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0023|0x0023: IGET  (r3 I:java.lang.Integer) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMax java.lang.Integer \l0x0025: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|0x0029: IF  (r11 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_9 [shape=record,label="{9\:\ 0x002b|0x002b: IGET  (r3 I:java.lang.Integer) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer \l0x002d: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0031|0x0031: IF  (r12 I:?[int, byte, short, char]) \< (r3 I:?[int, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0033|0x0033: IGET  (r3 I:java.lang.Integer) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMax java.lang.Integer \l0x0035: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l}"];
Node_12 [shape=record,label="{12\:\ 0x0039|0x0039: IF  (r12 I:?[int, byte, short, char]) \> (r3 I:?[int, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_13 [shape=record,label="{13\:\ 0x003b|0x003b: IGET  (r3 I:boolean) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mSourceLimited boolean \l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|0x003d: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:19:0x004b \l}"];
Node_15 [shape=record,label="{15\:\ 0x003f|0x003f: IGET  (r3 I:java.lang.Integer) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.sourceIndex java.lang.Integer \l0x0041: INVOKE  (r3 I:int) = (r3 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL \l0x0045: IGET  (r4 I:int) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mCurrentSource int \l}"];
Node_16 [shape=record,label="{16\:\ 0x0047|0x0047: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0006 \l}"];
Node_18 [shape=record,label="{18\:\ 0x004a|0x004a: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_19 [shape=record,label="{19\:\ 0x004b|0x004b: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:21:0x004e \l}"];
Node_20 [shape=record,label="{20\:\ 0x004d|0x004d: RETURN  (r2 I:java.io.InputStream) \l}"];
Node_21 [shape=record,label="{21\:\ 0x004e|SYNTHETIC\lSplitter:B:21:0x004e\l}"];
Node_22 [shape=record,label="{22\:\ ?|Splitter:B:21:0x004e\l|0x004e: IGET  (r13 I:java.lang.Integer) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMax java.lang.Integer A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}, TRY_ENTER]\l0x0050: INVOKE  (r13 I:int) = (r13 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0054: ARITH  (r13 I:int) = (r13 I:int) + (1 int) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0056: IGET  (r0 I:java.lang.Integer) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0058: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x005c: ARITH  (r13 I:int) = (r13 I:int) \- (r0 I:int) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x005d: IGET  (r0 I:java.lang.Integer) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.xMin java.lang.Integer A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x005f: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0063: ARITH  (r11 I:int) = (r11 I:int) \- (r0 I:int) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0064: IGET  (r0 I:java.lang.Integer) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.yMin java.lang.Integer A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0066: INVOKE  (r0 I:int) = (r0 I:java.lang.Integer) java.lang.Integer.intValue():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x006a: ARITH  (r12 I:int) = (r12 I:int) \- (r0 I:int) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x006b: ARITH  (r11 I:int) = (r11 I:int) * (r13 I:int) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x006d: ARITH  (r11 I:int) = (r11 I:int) + (r12 I:int) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x006e: CAST  (r11 I:long) = (long) (r11 I:int) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x006f: CONST  (r3 I:?[long, double]) = (12 ?[long, double]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0071: ARITH  (r11 I:long) = (r11 I:long) * (r3 I:long) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0073: IGET  (r13 I:java.lang.Long) = (r1 I:org.osmdroid.util.GEMFFile$GEMFRange) org.osmdroid.util.GEMFFile.GEMFRange.offset java.lang.Long A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0075: INVOKE  (r0 I:long) = (r13 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0079: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x007a: ARITH  (r11 I:long) = (r11 I:long) + (r0 I:long) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x007b: IGET  (r13 I:java.util.List\<java.io.RandomAccessFile\>) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFiles java.util.List A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x007d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x007e: INVOKE  (r13 I:java.lang.Object) = (r13 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0082: CHECK_CAST  (r13 I:java.io.RandomAccessFile) = (java.io.RandomAccessFile) (r13 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0084: INVOKE  (r13 I:java.io.RandomAccessFile), (r11 I:long) java.io.RandomAccessFile.seek(long):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0087: INVOKE  (r11 I:long) = (r13 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readLong():long type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x008b: INVOKE  (r8 I:int) = (r13 I:java.io.RandomAccessFile) java.io.RandomAccessFile.readInt():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x008f: IGET  (r13 I:java.util.List\<java.io.RandomAccessFile\>) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFiles java.util.List A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0091: INVOKE  (r13 I:java.lang.Object) = (r13 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0095: CHECK_CAST  (r13 I:java.io.RandomAccessFile) = (java.io.RandomAccessFile) (r13 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0097: IGET  (r1 I:java.util.List\<java.lang.Long\>) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFileSizes java.util.List A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x0099: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.List), (r0 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x009d: CHECK_CAST  (r1 I:java.lang.Long) = (java.lang.Long) (r1 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x009f: INVOKE  (r3 I:long) = (r1 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00a3: CMP_L  (r1 I:int) = (r11 I:long), (r3 I:long) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x00a5|0x00a5: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:31:0x00df A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x00a7|0x00a7: IGET  (r13 I:java.util.List\<java.lang.Long\>) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFileSizes java.util.List A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00a9: INVOKE  (r13 I:int) = (r13 I:java.util.List) java.util.List.size():int type: INTERFACE A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00ad: MOVE  (r3 I:?[long, double]) = (r11 I:?[long, double]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00ae: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x00af|0x00af: ARITH  (r12 I:int) = (r13 I:int) + (\-1 int) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x00b1|0x00b1: IF  (r11 I:?[int, byte, short, char]) \>= (r12 I:?[int, byte, short, char])  \-\> B:30:0x00d4 A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x00b3|0x00b3: IGET  (r12 I:java.util.List\<java.lang.Long\>) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFileSizes java.util.List A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00b5: INVOKE  (r12 I:java.lang.Object) = (r12 I:java.util.List), (r11 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00b9: CHECK_CAST  (r12 I:java.lang.Long) = (java.lang.Long) (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00bb: INVOKE  (r5 I:long) = (r12 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00bf: CMP_L  (r12 I:int) = (r3 I:long), (r5 I:long) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x00c1|0x00c1: IF  (r12 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:30:0x00d4 A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x00c3|0x00c3: IGET  (r12 I:java.util.List\<java.lang.Long\>) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFileSizes java.util.List A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00c5: INVOKE  (r12 I:java.lang.Object) = (r12 I:java.util.List), (r11 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00c9: CHECK_CAST  (r12 I:java.lang.Long) = (java.lang.Long) (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00cb: INVOKE  (r5 I:long) = (r12 I:java.lang.Long) java.lang.Long.longValue():long type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00cf: CONST  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00d0: ARITH  (r3 I:long) = (r3 I:long) \- (r5 I:long) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00d1: ARITH  (r11 I:int) = (r11 I:int) + (1 int) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00d3: GOTO  \-\> 0x00af A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x00d4|0x00d4: IGET  (r12 I:java.util.List\<java.io.RandomAccessFile\>) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFiles java.util.List A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00d6: INVOKE  (r12 I:java.lang.Object) = (r12 I:java.util.List), (r11 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00da: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00db: CHECK_CAST  (r13 I:java.io.RandomAccessFile) = (java.io.RandomAccessFile) (r13 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00dd: MOVE  (r6 I:?[long, double]) = (r3 I:?[long, double]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00de: GOTO  \-\> 0x00e1 A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x00df|0x00df: MOVE  (r6 I:?[long, double]) = (r11 I:?[long, double]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00e0: CONST  (r11 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l}"];
Node_32 [shape=record,label="{32\:\ 0x00e1|0x00e1: INVOKE  (r13 I:java.io.RandomAccessFile), (r6 I:long) java.io.RandomAccessFile.seek(long):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00e4: NEW_INSTANCE  (r12 I:org.osmdroid.util.GEMFFile$GEMFInputStream) =  org.osmdroid.util.GEMFFile$GEMFInputStream A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00e6: IGET  (r13 I:java.util.List\<java.lang.String\>) = (r10 I:org.osmdroid.util.GEMFFile) org.osmdroid.util.GEMFFile.mFileNames java.util.List A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00e8: INVOKE  (r11 I:java.lang.Object) = (r13 I:java.util.List), (r11 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00ec: MOVE  (r5 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00ed: CHECK_CAST  (r5 I:java.lang.String) = (java.lang.String) (r5 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00ef: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00f0: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}]\l0x00f1: INVOKE  \l  (r3 I:org.osmdroid.util.GEMFFile$GEMFInputStream)\l  (r4 I:org.osmdroid.util.GEMFFile)\l  (r5 I:java.lang.String)\l  (r6 I:long)\l  (r8 I:int)\l org.osmdroid.util.GEMFFile.GEMFInputStream.\<init\>(org.osmdroid.util.GEMFFile, java.lang.String, long, int):void type: DIRECT A[Catch:\{ IOException \-\> 0x013a, all \-\> 0x0137 \}, TRY_LEAVE]\l}"];
Node_33 [shape=record,label="{33\:\ 0x00f4|SYNTHETIC\lSplitter:B:33:0x00f4\l}"];
Node_34 [shape=record,label="{34\:\ ?|Splitter:B:33:0x00f4\l|0x00f4: NEW_INSTANCE  (r11 I:java.io.ByteArrayOutputStream) =  java.io.ByteArrayOutputStream A[Catch:\{ IOException \-\> 0x0133, all \-\> 0x0131 \}, TRY_ENTER]\l0x00f6: INVOKE  (r11 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.\<init\>():void type: DIRECT A[Catch:\{ IOException \-\> 0x0133, all \-\> 0x0131 \}, TRY_LEAVE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x00f9|0x00f9: CONST  (r13 I:?[int, float, short, byte, char]) = \l  (1024(0x400, float:1.435E\-42) ?[int, float, short, byte, char])\l \l}"];
Node_36 [shape=record,label="{36\:\ 0x00fb|SYNTHETIC\lSplitter:B:36:0x00fb\l}"];
Node_37 [shape=record,label="{37\:\ ?|Splitter:B:36:0x00fb\l|0x00fb: NEW_ARRAY  (r13 I:byte[]) = (r13 I:int A[IMMUTABLE_TYPE]) type: byte[] A[Catch:\{ IOException \-\> 0x012b, all \-\> 0x0127 \}, TRY_ENTER]\l}"];
Node_38 [shape=record,label="{38\:\ 0x00fd|0x00fd: INVOKE  (r1 I:int) = (r12 I:org.osmdroid.util.GEMFFile$GEMFInputStream) org.osmdroid.util.GEMFFile.GEMFInputStream.available():int type: VIRTUAL A[Catch:\{ IOException \-\> 0x012b, all \-\> 0x0127 \}]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0101|0x0101: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:43:0x010d A[Catch:\{ IOException \-\> 0x012b, all \-\> 0x0127 \}]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0103|0x0103: INVOKE  (r1 I:int) = \l  (r12 I:org.osmdroid.util.GEMFFile$GEMFInputStream)\l  (r13 I:byte[])\l org.osmdroid.util.GEMFFile.GEMFInputStream.read(byte[]):int type: VIRTUAL A[Catch:\{ IOException \-\> 0x012b, all \-\> 0x0127 \}]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0107|0x0107: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:38:0x00fd A[Catch:\{ IOException \-\> 0x012b, all \-\> 0x0127 \}]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0109|0x0109: INVOKE  \l  (r11 I:java.io.ByteArrayOutputStream)\l  (r13 I:byte[])\l  (r0 I:int)\l  (r1 I:int)\l java.io.ByteArrayOutputStream.write(byte[], int, int):void type: VIRTUAL A[Catch:\{ IOException \-\> 0x012b, all \-\> 0x0127 \}]\l0x010c: GOTO  \-\> 0x00fd A[Catch:\{ IOException \-\> 0x012b, all \-\> 0x0127 \}]\l}"];
Node_43 [shape=record,label="{43\:\ 0x010d|0x010d: INVOKE  (r13 I:byte[]) = (r11 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.toByteArray():byte[] type: VIRTUAL A[Catch:\{ IOException \-\> 0x012b, all \-\> 0x0127 \}]\l0x0111: NEW_INSTANCE  (r0 I:java.io.ByteArrayInputStream) =  java.io.ByteArrayInputStream A[Catch:\{ IOException \-\> 0x012b, all \-\> 0x0127 \}]\l0x0113: INVOKE  (r0 I:java.io.ByteArrayInputStream), (r13 I:byte[]) java.io.ByteArrayInputStream.\<init\>(byte[]):void type: DIRECT A[Catch:\{ IOException \-\> 0x012b, all \-\> 0x0127 \}, TRY_LEAVE]\l}"];
Node_44 [shape=record,label="{44\:\ 0x0116|SYNTHETIC\lSplitter:B:44:0x0116\l}"];
Node_45 [shape=record,label="{45\:\ ?|Splitter:B:44:0x0116\l|0x0116: INVOKE  (r11 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x011a \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_47 [shape=record,label="{47\:\ 0x011a|ExcHandler: IOException null\lSplitter:B:44:0x0116\l|0x011a: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_48 [shape=record,label="{48\:\ 0x011b|0x011b: INVOKE  (r11 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_49 [shape=record,label="{49\:\ 0x011e|SYNTHETIC\lSplitter:B:49:0x011e\l}"];
Node_50 [shape=record,label="{50\:\ ?|Splitter:B:49:0x011e\l|0x011e: INVOKE  (r12 I:org.osmdroid.util.GEMFFile$GEMFInputStream) org.osmdroid.util.GEMFFile.GEMFInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0122 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_52 [shape=record,label="{52\:\ 0x0122|ExcHandler: IOException null\lSplitter:B:49:0x011e\l|0x0122: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_53 [shape=record,label="{53\:\ 0x0123|0x0123: INVOKE  (r11 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_54 [shape=record,label="{54\:\ 0x0127|ExcHandler: all null\lSplitter:B:36:0x00fb\l|0x0127: MOVE_EXCEPTION  (r13 I:?[OBJECT]) =  \l}"];
Node_55 [shape=record,label="{55\:\ 0x0128|0x0128: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0129: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l}"];
Node_56 [shape=record,label="{56\:\ 0x012b|ExcHandler: IOException null\lSplitter:B:36:0x00fb\l|0x012b: MOVE_EXCEPTION  (r13 I:?[OBJECT]) =  \l}"];
Node_57 [shape=record,label="{57\:\ 0x012c|0x012c: MOVE  (r9 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x012d: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x012e: MOVE  (r11 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x012f: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l}"];
Node_58 [shape=record,label="{58\:\ 0x0131|ExcHandler: all null\lSplitter:B:33:0x00f4\l|0x0131: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_60 [shape=record,label="{60\:\ 0x0133|ExcHandler: IOException null\lSplitter:B:33:0x00f4\l|0x0133: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_61 [shape=record,label="{61\:\ 0x0134|0x0134: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0135: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_62 [shape=record,label="{62\:\ 0x0137|ExcHandler: all null\lSplitter:B:21:0x004e\l|0x0137: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_63 [shape=record,label="{63\:\ 0x0138|0x0138: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_64 [shape=record,label="{64\:\ 0x013a|ExcHandler: IOException null\lSplitter:B:21:0x004e\l|0x013a: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_65 [shape=record,label="{65\:\ 0x013b|0x013b: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l0x013c: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l}"];
Node_66 [shape=record,label="{66\:\ 0x013d|SYNTHETIC\lSplitter:B:66:0x013d\l}"];
Node_67 [shape=record,label="{67\:\ ?|Splitter:B:66:0x013d\l|0x013d: INVOKE  (r11 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL A[Catch:\{ all \-\> 0x0156 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_68 [shape=record,label="{68\:\ 0x0140|0x0140: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:74:0x014a \l}"];
Node_69 [shape=record,label="{69\:\ 0x0142|SYNTHETIC\lSplitter:B:69:0x0142\l}"];
Node_70 [shape=record,label="{70\:\ ?|Splitter:B:69:0x0142\l|0x0142: INVOKE  (r12 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0146 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_72 [shape=record,label="{72\:\ 0x0146|ExcHandler: IOException null\lSplitter:B:69:0x0142\l|0x0146: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_73 [shape=record,label="{73\:\ 0x0147|0x0147: INVOKE  (r11 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_74 [shape=record,label="{74\:\ 0x014a|0x014a: IF  (r13 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:80:0x0154 \l}"];
Node_75 [shape=record,label="{75\:\ 0x014c|SYNTHETIC\lSplitter:B:75:0x014c\l}"];
Node_76 [shape=record,label="{76\:\ ?|Splitter:B:75:0x014c\l|0x014c: INVOKE  (r13 I:org.osmdroid.util.GEMFFile$GEMFInputStream) org.osmdroid.util.GEMFFile.GEMFInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0150 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_78 [shape=record,label="{78\:\ 0x0150|ExcHandler: IOException null\lSplitter:B:75:0x014c\l|0x0150: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_79 [shape=record,label="{79\:\ 0x0151|0x0151: INVOKE  (r11 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_80 [shape=record,label="{80\:\ 0x0154|0x0154: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_81 [shape=record,label="{81\:\ 0x0155|0x0155: RETURN  (r0 I:java.io.InputStream) \l}"];
Node_82 [shape=record,label="{82\:\ 0x0156|ExcHandler: all null\lSplitter:B:66:0x013d\l|0x0156: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  \l}"];
Node_83 [shape=record,label="{83\:\ 0x0157|0x0157: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) \l0x0158: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l}"];
Node_84 [shape=record,label="{84\:\ 0x0159|0x0159: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:90:0x0163 \l}"];
Node_85 [shape=record,label="{85\:\ 0x015b|SYNTHETIC\lSplitter:B:85:0x015b\l}"];
Node_86 [shape=record,label="{86\:\ ?|Splitter:B:85:0x015b\l|0x015b: INVOKE  (r2 I:java.io.ByteArrayOutputStream) java.io.ByteArrayOutputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x015f \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_88 [shape=record,label="{88\:\ 0x015f|ExcHandler: IOException null\lSplitter:B:85:0x015b\l|0x015f: MOVE_EXCEPTION  (r13 I:?[OBJECT]) =  \l}"];
Node_89 [shape=record,label="{89\:\ 0x0160|0x0160: INVOKE  (r13 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_90 [shape=record,label="{90\:\ 0x0163|0x0163: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:96:0x016d \l}"];
Node_91 [shape=record,label="{91\:\ 0x0165|SYNTHETIC\lSplitter:B:91:0x0165\l}"];
Node_92 [shape=record,label="{92\:\ ?|Splitter:B:91:0x0165\l|0x0165: INVOKE  (r12 I:org.osmdroid.util.GEMFFile$GEMFInputStream) org.osmdroid.util.GEMFFile.GEMFInputStream.close():void type: VIRTUAL A[Catch:\{ IOException \-\> 0x0169 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_94 [shape=record,label="{94\:\ 0x0169|ExcHandler: IOException null\lSplitter:B:91:0x0165\l|0x0169: MOVE_EXCEPTION  (r12 I:?[OBJECT]) =  \l}"];
Node_95 [shape=record,label="{95\:\ 0x016a|0x016a: INVOKE  (r12 I:java.io.IOException) java.io.IOException.printStackTrace():void type: VIRTUAL \l}"];
Node_96 [shape=record,label="{96\:\ 0x016d|0x016d: THROW  (r11 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.io.InputStream org.osmdroid.util.GEMFFile.getInputStream((r10 'this' I:org.osmdroid.util.GEMFFile A[IMMUTABLE_TYPE, THIS]), (r11 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_18;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_8 -> Node_9[style=dashed];
Node_9 -> Node_10;
Node_10 -> Node_1;
Node_10 -> Node_11[style=dashed];
Node_11 -> Node_12;
Node_12 -> Node_1;
Node_12 -> Node_13[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_19;
Node_15 -> Node_16;
Node_16 -> Node_1;
Node_16 -> Node_19[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_64;
Node_21 -> Node_62;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_31;
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_30;
Node_27 -> Node_28;
Node_28 -> Node_29[style=dashed];
Node_28 -> Node_30;
Node_29 -> Node_25;
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34;
Node_33 -> Node_60;
Node_33 -> Node_58;
Node_34 -> Node_35;
Node_34 -> Node_60;
Node_34 -> Node_58;
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_56;
Node_36 -> Node_54;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_43;
Node_40 -> Node_41;
Node_41 -> Node_38;
Node_41 -> Node_42[style=dashed];
Node_42 -> Node_38;
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_44 -> Node_47;
Node_45 -> Node_47;
Node_45 -> Node_49;
Node_47 -> Node_48;
Node_48 -> Node_49;
Node_49 -> Node_50;
Node_49 -> Node_52;
Node_50 -> Node_52;
Node_50 -> Node_81;
Node_52 -> Node_53;
Node_53 -> Node_81;
Node_54 -> Node_55;
Node_55 -> Node_84;
Node_56 -> Node_57;
Node_57 -> Node_66;
Node_58 -> Node_84;
Node_60 -> Node_61;
Node_61 -> Node_66;
Node_62 -> Node_63;
Node_63 -> Node_84;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_66 -> Node_67;
Node_66 -> Node_82;
Node_67 -> Node_68;
Node_67 -> Node_82;
Node_68 -> Node_69[style=dashed];
Node_68 -> Node_74;
Node_69 -> Node_70;
Node_69 -> Node_72;
Node_70 -> Node_72;
Node_70 -> Node_74;
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_80;
Node_75 -> Node_76;
Node_75 -> Node_78;
Node_76 -> Node_78;
Node_76 -> Node_80;
Node_78 -> Node_79;
Node_79 -> Node_80;
Node_80 -> Node_81;
Node_82 -> Node_83;
Node_83 -> Node_84;
Node_84 -> Node_85[style=dashed];
Node_84 -> Node_90;
Node_85 -> Node_86;
Node_85 -> Node_88;
Node_86 -> Node_88;
Node_86 -> Node_90;
Node_88 -> Node_89;
Node_89 -> Node_90;
Node_90 -> Node_91[style=dashed];
Node_90 -> Node_96;
Node_91 -> Node_92;
Node_91 -> Node_94;
Node_92 -> Node_94;
Node_92 -> Node_96;
Node_94 -> Node_95;
Node_95 -> Node_96;
}

