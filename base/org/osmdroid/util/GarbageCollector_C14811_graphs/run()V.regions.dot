digraph "CFG fororg.osmdroid.util.GarbageCollector.1.run()V" {
subgraph cluster_Region_1466309150 {
label = "R(1:(1:2))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_589498531 {
label = "Try: R(1:2) finally: R(3:5|6|7)";
node [shape=record,color=blue];
subgraph cluster_Region_1053705388 {
label = "R(1:2)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ all \-\> 0x0014 \}\lSplitter:B:1:0x0001\l|org.osmdroid.util.GarbageCollector.this.mAction.run()     \/\/ Catch:\{ all \-\> 0x0014 \}\l}"];
}
subgraph cluster_Region_838714653 {
label = "R(3:5|6|7) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|ExcHandler:  FINALLY\lSplitter:B:1:0x0001\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|FINALLY_INSNS\l|org.osmdroid.util.GarbageCollector.this.mRunning.set(false)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|throw r1\l}"];
}
}
}
subgraph cluster_Region_838714653 {
label = "R(3:5|6|7) | ExcHandler:  FINALLY\l";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|ExcHandler:  FINALLY\lSplitter:B:1:0x0001\l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|FINALLY_INSNS\l|org.osmdroid.util.GarbageCollector.this.mRunning.set(false)\l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|throw r1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,color=red,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000a|DONT_GENERATE\l|org.osmdroid.util.GarbageCollector r1 = org.osmdroid.util.GarbageCollector.this\ljava.util.concurrent.atomic.AtomicBoolean r1 = r1.mRunning\lr1.set(false)\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0013}"];
MethodNode[shape=record,label="{public void org.osmdroid.util.GarbageCollector.1.run((r3v0 'this' org.osmdroid.util.GarbageCollector$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_3 -> Node_4;
}

