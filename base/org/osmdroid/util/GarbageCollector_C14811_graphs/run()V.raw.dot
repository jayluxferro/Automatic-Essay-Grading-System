digraph "CFG fororg.osmdroid.util.GarbageCollector.1.run()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: IGET  (r1 I:org.osmdroid.util.GarbageCollector) = (r3 I:org.osmdroid.util.GarbageCollector$1) org.osmdroid.util.GarbageCollector.1.this$0 org.osmdroid.util.GarbageCollector A[Catch:\{ all \-\> 0x0014 \}, TRY_ENTER]\l0x0003: INVOKE  (r1 I:java.lang.Runnable) = (r1 I:org.osmdroid.util.GarbageCollector) org.osmdroid.util.GarbageCollector.access$000(org.osmdroid.util.GarbageCollector):java.lang.Runnable type: STATIC A[Catch:\{ all \-\> 0x0014 \}]\l0x0007: INVOKE  (r1 I:java.lang.Runnable) java.lang.Runnable.run():void type: INTERFACE A[Catch:\{ all \-\> 0x0014 \}, TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IGET  (r1 I:org.osmdroid.util.GarbageCollector) = (r3 I:org.osmdroid.util.GarbageCollector$1) org.osmdroid.util.GarbageCollector.1.this$0 org.osmdroid.util.GarbageCollector \l0x000c: INVOKE  (r1 I:java.util.concurrent.atomic.AtomicBoolean) = (r1 I:org.osmdroid.util.GarbageCollector) org.osmdroid.util.GarbageCollector.access$100(org.osmdroid.util.GarbageCollector):java.util.concurrent.atomic.AtomicBoolean type: STATIC \l0x0010: INVOKE  \l  (r1 I:java.util.concurrent.atomic.AtomicBoolean)\l  (r0 I:boolean)\l java.util.concurrent.atomic.AtomicBoolean.set(boolean):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0013|0x0013: RETURN   \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|ExcHandler: all null\lSplitter:B:1:0x0001\l|0x0014: MOVE_EXCEPTION  (r1 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: IGET  (r2 I:org.osmdroid.util.GarbageCollector) = (r3 I:org.osmdroid.util.GarbageCollector$1) org.osmdroid.util.GarbageCollector.1.this$0 org.osmdroid.util.GarbageCollector \l0x0017: INVOKE  (r2 I:java.util.concurrent.atomic.AtomicBoolean) = (r2 I:org.osmdroid.util.GarbageCollector) org.osmdroid.util.GarbageCollector.access$100(org.osmdroid.util.GarbageCollector):java.util.concurrent.atomic.AtomicBoolean type: STATIC \l0x001b: INVOKE  \l  (r2 I:java.util.concurrent.atomic.AtomicBoolean)\l  (r0 I:boolean)\l java.util.concurrent.atomic.AtomicBoolean.set(boolean):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x001e|0x001e: THROW  (r1 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.util.GarbageCollector.1.run((r3 'this' I:org.osmdroid.util.GarbageCollector$1 A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
}

