digraph "CFG fororg.osmdroid.util.SegmentClipper.getClosestCorner(JJJJ)I" {
subgraph cluster_Region_425258772 {
label = "R(3:0|(3:3|(1:5)(1:6)|7)|8)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.osmdroid.util.SegmentClipper r0 = r25\lint r1 = 0\ldouble r2 = Double.MAX_VALUE\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_1836750449 {
label = "LOOP:0: (3:3|(1:5)(1:6)|7)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|if (r1 \< r0.cornerX.length) goto L_0x000e\l}"];
subgraph cluster_Region_1041275397 {
label = "R(3:3|(1:5)(1:6)|7)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000e|int r20 = r1\ldouble r21 = r2\ldouble r2 = org.osmdroid.util.Distance.getSquaredDistanceToSegment((double) r0.cornerX[r1], (double) r0.cornerY[r1], (double) r26, (double) r28, (double) r30, (double) r32)\l}"];
subgraph cluster_IfRegion_311513110 {
label = "IF [B:4:0x0035] THEN: R(1:5) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0035|if (r21 \> r2) goto L_0x0037\l}"];
subgraph cluster_Region_678113523 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0037|r4 = r20\l}"];
}
subgraph cluster_Region_1290741456 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x003a|r2 = r21\l}"];
}
}
Node_7 [shape=record,label="{7\:\ 0x003c|LOOP_END\lPHI: r2 r4 \l  PHI: (r2v5 double) = (r2v6 double), (r2v4 double) binds: [B:10:0x003c, B:11:0x003c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 int) = (r4v1 int), (r4v3 int) binds: [B:10:0x003c, B:11:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:7:0x003c\l|r1 = r20 + 1\lr0 = r25\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0042|RETURN\l|return r4\l}"];
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0009|LOOP_START\lPHI: r0 r1 r2 r4 \l  PHI: (r0v1 org.osmdroid.util.SegmentClipper) = (r0v0 org.osmdroid.util.SegmentClipper), (r0v4 org.osmdroid.util.SegmentClipper) binds: [B:0:0x0000, B:7:0x003c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:7:0x003c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 double) = (r2v0 double), (r2v5 double) binds: [B:0:0x0000, B:7:0x003c] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:7:0x003c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0009\-\>B:7:0x003c\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x0042|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003c|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x003c|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private int org.osmdroid.util.SegmentClipper.getClosestCorner((r25v0 'this' org.osmdroid.util.SegmentClipper A[IMMUTABLE_TYPE, THIS]), (r26v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_10;
Node_7 -> Node_1;
Node_1 -> Node_2;
Node_9 -> Node_8;
Node_10 -> Node_7;
Node_11 -> Node_7;
}

