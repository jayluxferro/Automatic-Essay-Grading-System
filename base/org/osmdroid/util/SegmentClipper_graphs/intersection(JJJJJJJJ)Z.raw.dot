digraph "CFG fororg.osmdroid.util.SegmentClipper.intersection(JJJJJJJJ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[long, double]) = (r20 I:?[long, double]) \l0x0002: CAST  (r0 I:double) = (double) (r0 I:long) \l0x0003: MOVE  (r2 I:?[long, double]) = (r22 I:?[long, double]) \l0x0005: CAST  (r2 I:double) = (double) (r2 I:long) \l0x0006: MOVE  (r4 I:?[long, double]) = (r24 I:?[long, double]) \l0x0008: CAST  (r4 I:double) = (double) (r4 I:long) \l0x0009: MOVE  (r6 I:?[long, double]) = (r26 I:?[long, double]) \l0x000b: CAST  (r6 I:double) = (double) (r6 I:long) \l0x000c: MOVE  (r8 I:?[long, double]) = (r28 I:?[long, double]) \l0x000e: CAST  (r8 I:double) = (double) (r8 I:long) \l0x000f: MOVE  (r10 I:?[long, double]) = (r30 I:?[long, double]) \l0x0011: CAST  (r10 I:double) = (double) (r10 I:long) \l0x0012: MOVE  (r12 I:?[long, double]) = (r32 I:?[long, double]) \l0x0014: CAST  (r12 I:double) = (double) (r12 I:long) \l0x0015: MOVE  (r14 I:?[long, double]) = (r34 I:?[long, double]) \l0x0017: CAST  (r14 I:double) = (double) (r14 I:long) \l0x0018: MOVE  (r17 I:?[long, double]) = (r0 I:?[long, double]) \l0x001a: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r19 I:?[OBJECT, ARRAY]) \l0x001c: IGET  (r1 I:org.osmdroid.util.PointL) = (r0 I:org.osmdroid.util.SegmentClipper) org.osmdroid.util.SegmentClipper.mOptimIntersection org.osmdroid.util.PointL \l0x001e: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0020: MOVE  (r0 I:?[long, double]) = (r17 I:?[long, double]) \l0x0022: INVOKE  (r0 I:boolean) = \l  (r0 I:double)\l  (r2 I:double)\l  (r4 I:double)\l  (r6 I:double)\l  (r8 I:double)\l  (r10 I:double)\l  (r12 I:double)\l  (r14 I:double)\l  (r16 I:org.osmdroid.util.PointL)\l org.osmdroid.util.SegmentIntersection.intersection(double, double, double, double, double, double, double, double, org.osmdroid.util.PointL):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0026|0x0026: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private boolean org.osmdroid.util.SegmentClipper.intersection((r19 'this' I:org.osmdroid.util.SegmentClipper A[IMMUTABLE_TYPE, THIS]), (r20 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r26 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r30 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r32 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r34 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

