digraph "CFG fororg.osmdroid.util.SegmentClipper.intersection(JJJJ)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r15 = r20\lr0 = r20\llong r9 = r15.mXMin\llong r11 = r15.mYMin\llong r13 = r15.mXMin\lr17 = r0\lr2 = r15\lr15 = r15.mYMax\lr0 = r17\lr1 = r21\l}"];
Node_1 [shape=record,label="{1\:\ 0x0022|if (intersection(r1, r23, r25, r27, r9, r11, r13, r15) != false) goto L_0x0078\l}"];
Node_2 [shape=record,label="{2\:\ 0x0024|r7 = r20\llong r9 = r7.mXMax\llong r11 = r7.mYMin\llong r13 = r7.mXMax\lr15 = r7.mYMax\l}"];
Node_3 [shape=record,label="{3\:\ 0x003d|if (intersection(r21, r23, r25, r27, r9, r11, r13, r15) != false) goto L_0x0078\l}"];
Node_4 [shape=record,label="{4\:\ 0x003f|r7 = r20\llong r9 = r7.mXMin\llong r11 = r7.mYMin\llong r13 = r7.mXMax\lr15 = r7.mYMin\l}"];
Node_5 [shape=record,label="{5\:\ 0x0058|if (intersection(r21, r23, r25, r27, r9, r11, r13, r15) != false) goto L_0x0078\l}"];
Node_6 [shape=record,label="{6\:\ 0x005a|r7 = r20\llong r9 = r7.mXMin\llong r11 = r7.mYMax\llong r13 = r7.mXMax\lr15 = r7.mYMax\l}"];
Node_7 [shape=record,label="{7\:\ 0x0073|if (intersection(r21, r23, r25, r27, r9, r11, r13, r15) == false) goto L_0x0076\l}"];
Node_8 [shape=record,label="{8\:\ 0x0076|SYNTHETIC\lRETURN\l|return false\l}"];
Node_9 [shape=record,label="{9\:\ 0x0078|SYNTHETIC\lRETURN\lORIG_RETURN\l|return true\l}"];
MethodNode[shape=record,label="{private boolean org.osmdroid.util.SegmentClipper.intersection((r20v0 'this' org.osmdroid.util.SegmentClipper A[IMMUTABLE_TYPE, THIS]), (r21v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_9;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
}

