digraph "CFG fororg.osmdroid.util.SegmentClipper.clip(JJJ)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CMP_L  (r0 I:int) = (r1 I:long), (r3 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MOVE  (r1 I:?[long, double]) = (r3 I:?[long, double]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: CMP_L  (r3 I:int) = (r1 I:long), (r5 I:long) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r3 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: MOVE  (r1 I:?[long, double]) = (r5 I:?[long, double]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: RETURN  (r1 I:long) \l}"];
MethodNode[shape=record,label="{private static long org.osmdroid.util.SegmentClipper.clip((r1 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
}

