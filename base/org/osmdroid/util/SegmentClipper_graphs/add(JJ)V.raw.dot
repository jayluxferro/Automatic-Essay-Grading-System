digraph "CFG fororg.osmdroid.util.SegmentClipper.add(JJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.util.PointL) = (r9 I:org.osmdroid.util.SegmentClipper) org.osmdroid.util.SegmentClipper.mPoint1 org.osmdroid.util.PointL \l0x0002: INVOKE  (r0 I:org.osmdroid.util.PointL), (r10 I:long), (r12 I:long) org.osmdroid.util.PointL.set(long, long):void type: VIRTUAL \l0x0005: IGET  (r10 I:boolean) = (r9 I:org.osmdroid.util.SegmentClipper) org.osmdroid.util.SegmentClipper.mFirstPoint boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r10 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000d \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: CONST  (r10 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: IPUT  (r10 I:boolean), (r9 I:org.osmdroid.util.SegmentClipper) org.osmdroid.util.SegmentClipper.mFirstPoint boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|0x000d: IGET  (r10 I:org.osmdroid.util.PointL) = (r9 I:org.osmdroid.util.SegmentClipper) org.osmdroid.util.SegmentClipper.mPoint0 org.osmdroid.util.PointL \l0x000f: IGET  (r1 I:long) = (r10 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0011: IGET  (r10 I:org.osmdroid.util.PointL) = (r9 I:org.osmdroid.util.SegmentClipper) org.osmdroid.util.SegmentClipper.mPoint0 org.osmdroid.util.PointL \l0x0013: IGET  (r3 I:long) = (r10 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x0015: IGET  (r10 I:org.osmdroid.util.PointL) = (r9 I:org.osmdroid.util.SegmentClipper) org.osmdroid.util.SegmentClipper.mPoint1 org.osmdroid.util.PointL \l0x0017: IGET  (r5 I:long) = (r10 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.x long \l0x0019: IGET  (r10 I:org.osmdroid.util.PointL) = (r9 I:org.osmdroid.util.SegmentClipper) org.osmdroid.util.SegmentClipper.mPoint1 org.osmdroid.util.PointL \l0x001b: IGET  (r7 I:long) = (r10 I:org.osmdroid.util.PointL) org.osmdroid.util.PointL.y long \l0x001d: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x001e: INVOKE  \l  (r0 I:org.osmdroid.util.SegmentClipper)\l  (r1 I:long)\l  (r3 I:long)\l  (r5 I:long)\l  (r7 I:long)\l org.osmdroid.util.SegmentClipper.clip(long, long, long, long):void type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0021|0x0021: IGET  (r10 I:org.osmdroid.util.PointL) = (r9 I:org.osmdroid.util.SegmentClipper) org.osmdroid.util.SegmentClipper.mPoint0 org.osmdroid.util.PointL \l0x0023: IGET  (r11 I:org.osmdroid.util.PointL) = (r9 I:org.osmdroid.util.SegmentClipper) org.osmdroid.util.SegmentClipper.mPoint1 org.osmdroid.util.PointL \l0x0025: INVOKE  \l  (r10 I:org.osmdroid.util.PointL)\l  (r11 I:org.osmdroid.util.PointL)\l org.osmdroid.util.PointL.set(org.osmdroid.util.PointL):void type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.util.SegmentClipper.add((r9 'this' I:org.osmdroid.util.SegmentClipper A[IMMUTABLE_TYPE, THIS]), (r10 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

