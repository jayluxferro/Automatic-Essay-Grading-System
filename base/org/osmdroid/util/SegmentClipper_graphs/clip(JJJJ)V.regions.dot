digraph "CFG fororg.osmdroid.util.SegmentClipper.clip(JJJJ)V" {
subgraph cluster_Region_682907474 {
label = "R(2:0|(2:(1:4)|(1:(1:(1:9)(1:(2:13|(1:(1:15)))(2:16|17)))(1:(6:29|(1:31)(1:32)|(3:35|(1:37)(1:38)|39)(1:40)|(3:43|(1:45)(1:46)|47)(1:48)|(3:51|(1:53)(1:54)|55)(1:56)|(2:(6:59|60|63|(1:68)|69|(2:(2:71|85)|(1:86)))|(2:72|(1:(1:(1:76)))(1:(2:81|82)(1:(1:80)(0))))))(1:(2:(1:24)|25)(2:27|28)))))) | DECL_VAR: org.osmdroid.util.SegmentClipper null, org.osmdroid.util.SegmentClipper null, org.osmdroid.util.SegmentClipper null, org.osmdroid.util.SegmentClipper null, int null, org.osmdroid.util.PointL null, org.osmdroid.util.PointL null, org.osmdroid.util.PointL null\l";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r7 = r18\llong r5 = r21\llong r3 = r23\llong r1 = r25\l}"];
subgraph cluster_Region_1519191908 {
label = "R(2:(1:4)|(1:(1:(1:9)(1:(2:13|(1:(1:15)))(2:16|17)))(1:(6:29|(1:31)(1:32)|(3:35|(1:37)(1:38)|39)(1:40)|(3:43|(1:45)(1:46)|47)(1:48)|(3:51|(1:53)(1:54)|55)(1:56)|(2:(6:59|60|63|(1:68)|69|(2:(2:71|85)|(1:86)))|(2:72|(1:(1:(1:76)))(1:(2:81|82)(1:(1:80)(0))))))(1:(2:(1:24)|25)(2:27|28)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_648793791 {
label = "IF [B:1:0x000a, B:3:0x0010] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r7.mPathMode != true) goto L_0x000c\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|ADDED_TO_REGION\l|if (isOnTheSameSideOut(r19, r21, r23, r25) != false) goto L_0x0012\l}"];
subgraph cluster_Region_1941097643 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1114837530 {
label = "R(1:(1:(1:9)(1:(2:13|(1:(1:15)))(2:16|17)))(1:(6:29|(1:31)(1:32)|(3:35|(1:37)(1:38)|39)(1:40)|(3:43|(1:45)(1:46)|47)(1:48)|(3:51|(1:53)(1:54)|55)(1:56)|(2:(6:59|60|63|(1:68)|69|(2:(2:71|85)|(1:86)))|(2:72|(1:(1:(1:76)))(1:(2:81|82)(1:(1:80)(0))))))(1:(2:(1:24)|25)(2:27|28))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1895271191 {
label = "IF [B:6:0x0017] THEN: R(1:(1:9)(1:(2:13|(1:(1:15)))(2:16|17))) ELSE: R(1:(6:29|(1:31)(1:32)|(3:35|(1:37)(1:38)|39)(1:40)|(3:43|(1:45)(1:46)|47)(1:48)|(3:51|(1:53)(1:54)|55)(1:56)|(2:(6:59|60|63|(1:68)|69|(2:(2:71|85)|(1:86)))|(2:72|(1:(1:(1:76)))(1:(2:81|82)(1:(1:80)(0))))))(1:(2:(1:24)|25)(2:27|28)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0017|if (isInClipArea(r19, r21) == true) goto L_0x0019\l}"];
subgraph cluster_Region_139554176 {
label = "R(1:(1:9)(1:(2:13|(1:(1:15)))(2:16|17)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_549903417 {
label = "IF [B:8:0x001d] THEN: R(1:9) ELSE: R(1:(2:13|(1:(1:15)))(2:16|17))";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001d|if (isInClipArea(r3, r1) == true) goto L_0x001f\l}"];
subgraph cluster_Region_380319520 {
label = "R(1:9)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x001f|nextVertex(r19, r21)\lnextVertex(r3, r1)\l}"];
}
subgraph cluster_Region_1835216821 {
label = "R(1:(2:13|(1:(1:15)))(2:16|17)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_928650177 {
label = "IF [B:12:0x002a] THEN: R(2:13|(1:(1:15))) ELSE: R(2:16|17) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x002a|if (intersection(r19, r21, r23, r25) == true) goto L_0x002c\l}"];
subgraph cluster_Region_2067368206 {
label = "R(2:13|(1:(1:15)))";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x002c|nextVertex(r19, r21)\lnextVertex(r7.mOptimIntersection.f444x, r7.mOptimIntersection.f445y)\l}"];
subgraph cluster_Region_2022164100 {
label = "R(1:(1:15))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_208490662 {
label = "IF [B:14:0x003c] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x003c|if (r7.mPathMode == true) goto L_0x003e\l}"];
subgraph cluster_Region_481291360 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x003e|nextVertex(clipX(r3), clipY(r1))\l}"];
}
}
}
}
subgraph cluster_Region_1820134139 {
label = "R(2:16|17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x004a|java.lang.StringBuilder java.lang.StringBuilder r15 = new java.lang.StringBuilder()\lr15.append(\"Cannot find expected mOptimIntersection for \")\lorg.osmdroid.util.RectL r5 = r8\ljava.lang.StringBuilder r3 = r15\lorg.osmdroid.util.RectL org.osmdroid.util.RectL r8 = new org.osmdroid.util.RectL(r19, r21, r23, r25)\lr3.append(r5)\l}"];
Node_17 [shape=record,label="{17\:\ 0x0070|throw new java.lang.RuntimeException(r3.toString())\l}"];
}
}
}
}
}
subgraph cluster_Region_1800314609 {
label = "R(1:(6:29|(1:31)(1:32)|(3:35|(1:37)(1:38)|39)(1:40)|(3:43|(1:45)(1:46)|47)(1:48)|(3:51|(1:53)(1:54)|55)(1:56)|(2:(6:59|60|63|(1:68)|69|(2:(2:71|85)|(1:86)))|(2:72|(1:(1:(1:76)))(1:(2:81|82)(1:(1:80)(0))))))(1:(2:(1:24)|25)(2:27|28))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_508301380 {
label = "IF [B:19:0x0075] THEN: R(6:29|(1:31)(1:32)|(3:35|(1:37)(1:38)|39)(1:40)|(3:43|(1:45)(1:46)|47)(1:48)|(3:51|(1:53)(1:54)|55)(1:56)|(2:(6:59|60|63|(1:68)|69|(2:(2:71|85)|(1:86)))|(2:72|(1:(1:(1:76)))(1:(2:81|82)(1:(1:80)(0)))))) ELSE: R(1:(2:(1:24)|25)(2:27|28)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0075|if (isInClipArea(r3, r1) != true) goto L_0x00c2\l}"];
subgraph cluster_Region_1201669304 {
label = "R(6:29|(1:31)(1:32)|(3:35|(1:37)(1:38)|39)(1:40)|(3:43|(1:45)(1:46)|47)(1:48)|(3:51|(1:53)(1:54)|55)(1:56)|(2:(6:59|60|63|(1:68)|69|(2:(2:71|85)|(1:86)))|(2:72|(1:(1:(1:76)))(1:(2:81|82)(1:(1:80)(0))))))";
node [shape=record,color=blue];
Node_29 [shape=record,label="{29\:\ 0x00c2|int r17 = 0\l}"];
subgraph cluster_IfRegion_1544035183 {
label = "IF [B:30:0x00dc] THEN: R(1:31) ELSE: R(1:32)";
node [shape=record,color=blue];
Node_30 [shape=record,label="{30\:\ 0x00dc|if (intersection(r19, r21, r23, r25, r7.mXMin, r7.mYMin, r7.mXMin, r7.mYMax) == true) goto L_0x00de\l}"];
subgraph cluster_Region_1000773090 {
label = "R(1:31)";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x00de|r8 = r18\lr8.mOptimIntersection1.set(r8.mOptimIntersection)\lr17 = 1\l}"];
}
subgraph cluster_Region_1977898973 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x00ea|r8 = r18\l}"];
}
}
subgraph cluster_IfRegion_452806028 {
label = "IF [B:34:0x0103] THEN: R(3:35|(1:37)(1:38)|39) ELSE: R(1:40)";
node [shape=record,color=blue];
Node_34 [shape=record,label="{34\:\ 0x0103|if (intersection(r19, r21, r23, r25, r8.mXMax, r8.mYMin, r8.mXMax, r8.mYMax) == true) goto L_0x0105\l}"];
subgraph cluster_Region_1514128933 {
label = "R(3:35|(1:37)(1:38)|39)";
node [shape=record,color=blue];
Node_35 [shape=record,label="{35\:\ 0x0105|int int r0 = r17 + 1\l}"];
subgraph cluster_IfRegion_2095367146 {
label = "IF [B:36:0x0107] THEN: R(1:37) ELSE: R(1:38)";
node [shape=record,color=blue];
Node_36 [shape=record,label="{36\:\ 0x0107|if (r17 == 0) goto L_0x0109\l}"];
subgraph cluster_Region_1922748771 {
label = "R(1:37)";
node [shape=record,color=blue];
Node_37 [shape=record,label="{37\:\ 0x0109|r7 = r18\lorg.osmdroid.util.PointL r1 = r7.mOptimIntersection1\l}"];
}
subgraph cluster_Region_1312809233 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ 0x010e|r7 = r18\lorg.osmdroid.util.PointL r1 = r7.mOptimIntersection2\l}"];
}
}
Node_39 [shape=record,label="{39\:\ 0x0112|PHI: r1 r7 \l  PHI: (r1v13 org.osmdroid.util.PointL) = (r1v14 org.osmdroid.util.PointL), (r1v15 org.osmdroid.util.PointL) binds: [B:38:0x010e, B:37:0x0109] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v13 org.osmdroid.util.SegmentClipper) = (r7v14 org.osmdroid.util.SegmentClipper), (r7v15 org.osmdroid.util.SegmentClipper) binds: [B:38:0x010e, B:37:0x0109] A[DONT_GENERATE, DONT_INLINE]\l|r1.set(r7.mOptimIntersection)\lr17 = r0\l}"];
}
subgraph cluster_Region_589528511 {
label = "R(1:40)";
node [shape=record,color=blue];
Node_40 [shape=record,label="{40\:\ 0x011a|r7 = r18\l}"];
}
}
subgraph cluster_IfRegion_2096352789 {
label = "IF [B:42:0x0133] THEN: R(3:43|(1:45)(1:46)|47) ELSE: R(1:48)";
node [shape=record,color=blue];
Node_42 [shape=record,label="{42\:\ 0x0133|if (intersection(r19, r21, r23, r25, r7.mXMin, r7.mYMin, r7.mXMax, r7.mYMin) == true) goto L_0x0135\l}"];
subgraph cluster_Region_613366976 {
label = "R(3:43|(1:45)(1:46)|47)";
node [shape=record,color=blue];
Node_43 [shape=record,label="{43\:\ 0x0135|int int r0 = r17 + 1\l}"];
subgraph cluster_IfRegion_567318922 {
label = "IF [B:44:0x0137] THEN: R(1:45) ELSE: R(1:46)";
node [shape=record,color=blue];
Node_44 [shape=record,label="{44\:\ 0x0137|if (r17 == 0) goto L_0x0139\l}"];
subgraph cluster_Region_753346590 {
label = "R(1:45)";
node [shape=record,color=blue];
Node_45 [shape=record,label="{45\:\ 0x0139|r7 = r18\lorg.osmdroid.util.PointL r1 = r7.mOptimIntersection1\l}"];
}
subgraph cluster_Region_492922314 {
label = "R(1:46)";
node [shape=record,color=blue];
Node_46 [shape=record,label="{46\:\ 0x013e|r7 = r18\lorg.osmdroid.util.PointL r1 = r7.mOptimIntersection2\l}"];
}
}
Node_47 [shape=record,label="{47\:\ 0x0142|PHI: r1 r7 \l  PHI: (r1v10 org.osmdroid.util.PointL) = (r1v11 org.osmdroid.util.PointL), (r1v12 org.osmdroid.util.PointL) binds: [B:46:0x013e, B:45:0x0139] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r7v9 org.osmdroid.util.SegmentClipper) = (r7v10 org.osmdroid.util.SegmentClipper), (r7v11 org.osmdroid.util.SegmentClipper) binds: [B:46:0x013e, B:45:0x0139] A[DONT_GENERATE, DONT_INLINE]\l|r1.set(r7.mOptimIntersection)\lr17 = r0\l}"];
}
subgraph cluster_Region_622275154 {
label = "R(1:48)";
node [shape=record,color=blue];
Node_48 [shape=record,label="{48\:\ 0x014a|r7 = r18\l}"];
}
}
subgraph cluster_IfRegion_1666547308 {
label = "IF [B:50:0x0163] THEN: R(3:51|(1:53)(1:54)|55) ELSE: R(1:56)";
node [shape=record,color=blue];
Node_50 [shape=record,label="{50\:\ 0x0163|if (intersection(r19, r21, r23, r25, r7.mXMin, r7.mYMax, r7.mXMax, r7.mYMax) == true) goto L_0x0165\l}"];
subgraph cluster_Region_91913595 {
label = "R(3:51|(1:53)(1:54)|55)";
node [shape=record,color=blue];
Node_51 [shape=record,label="{51\:\ 0x0165|int r0 = r17 + 1\l}"];
subgraph cluster_IfRegion_184345011 {
label = "IF [B:52:0x0167] THEN: R(1:53) ELSE: R(1:54)";
node [shape=record,color=blue];
Node_52 [shape=record,label="{52\:\ 0x0167|if (r17 == 0) goto L_0x0169\l}"];
subgraph cluster_Region_336268250 {
label = "R(1:53)";
node [shape=record,color=blue];
Node_53 [shape=record,label="{53\:\ 0x0169|r1 = r18\lorg.osmdroid.util.PointL r2 = r1.mOptimIntersection1\l}"];
}
subgraph cluster_Region_148043048 {
label = "R(1:54)";
node [shape=record,color=blue];
Node_54 [shape=record,label="{54\:\ 0x016e|r1 = r18\lorg.osmdroid.util.PointL r2 = r1.mOptimIntersection2\l}"];
}
}
Node_55 [shape=record,label="{55\:\ 0x0172|PHI: r1 r2 \l  PHI: (r1v7 org.osmdroid.util.SegmentClipper) = (r1v8 org.osmdroid.util.SegmentClipper), (r1v9 org.osmdroid.util.SegmentClipper) binds: [B:54:0x016e, B:53:0x0169] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v16 org.osmdroid.util.PointL) = (r2v17 org.osmdroid.util.PointL), (r2v18 org.osmdroid.util.PointL) binds: [B:54:0x016e, B:53:0x0169] A[DONT_GENERATE, DONT_INLINE]\l|r2.set(r1.mOptimIntersection)\l}"];
}
subgraph cluster_Region_1348307093 {
label = "R(1:56)";
node [shape=record,color=blue];
Node_56 [shape=record,label="{56\:\ 0x0178|r1 = r18\lr0 = r17\l}"];
}
}
subgraph cluster_Region_2140852746 {
label = "R(2:(6:59|60|63|(1:68)|69|(2:(2:71|85)|(1:86)))|(2:72|(1:(1:(1:76)))(1:(2:81|82)(1:(1:80)(0)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_263928144 {
label = "IF [B:58:0x017d] THEN: R(6:59|60|63|(1:68)|69|(2:(2:71|85)|(1:86))) ELSE: null";
node [shape=record,color=blue];
Node_58 [shape=record,label="{58\:\ 0x017d|if (r0 == 2) goto L_0x017f\l}"];
subgraph cluster_Region_1142771544 {
label = "R(6:59|60|63|(1:68)|69|(2:(2:71|85)|(1:86)))";
node [shape=record,color=blue];
Node_59 [shape=record,label="{59\:\ 0x017f|double double r12 = (double) r19\llong r14 = r21\ldouble double r10 = (double) r14\llong r6 = r14\lint int r0 = (org.osmdroid.util.Distance.getSquaredDistanceToPoint((double) r1.mOptimIntersection1.f444x, (double) r1.mOptimIntersection1.f445y, r12, r10) \> org.osmdroid.util.Distance.getSquaredDistanceToPoint((double) r1.mOptimIntersection2.f444x, (double) r1.mOptimIntersection2.f445y, r12, r10) ? 1 : (org.osmdroid.util.Distance.getSquaredDistanceToPoint((double) r1.mOptimIntersection1.f444x, (double) r1.mOptimIntersection1.f445y, r12, r10) == org.osmdroid.util.Distance.getSquaredDistanceToPoint((double) r1.mOptimIntersection2.f444x, (double) r1.mOptimIntersection2.f445y, r12, r10) ? 0 : \-1))\l}"];
Node_60 [shape=record,label="{60\:\ 0x01a9|org.osmdroid.util.PointL r4 = r0 \< 0 ? r1.mOptimIntersection1 : r1.mOptimIntersection2\l}"];
Node_63 [shape=record,label="{63\:\ 0x01b0|PHI: r4 \l  PHI: (r4v6 org.osmdroid.util.PointL) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|org.osmdroid.util.PointL r0 = r0 \< 0 ? r1.mOptimIntersection2 : r1.mOptimIntersection1\l}"];
subgraph cluster_IfRegion_1834671572 {
label = "IF [B:67:0x01b9] THEN: R(1:68) ELSE: null";
node [shape=record,color=blue];
Node_67 [shape=record,label="{67\:\ 0x01b9|if (r1.mPathMode == true) goto L_0x01bb\l}"];
subgraph cluster_Region_1430506300 {
label = "R(1:68)";
node [shape=record,color=blue];
Node_68 [shape=record,label="{68\:\ 0x01bb|r1.nextVertex(clipX(r19), r1.clipY(r6))\l}"];
}
}
Node_69 [shape=record,label="{69\:\ 0x01c6|r1.nextVertex(r4.f444x, r4.f445y)\lr1.nextVertex(r0.f444x, r0.f445y)\l}"];
subgraph cluster_Region_632580109 {
label = "R(2:(2:71|85)|(1:86))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_211280947 {
label = "IF [B:70:0x01d6] THEN: R(2:71|85) ELSE: null";
node [shape=record,color=blue];
Node_70 [shape=record,label="{70\:\ 0x01d6|if (r1.mPathMode == true) goto L_0x01d8\l}"];
subgraph cluster_Region_1513106760 {
label = "R(2:71|85)";
node [shape=record,color=blue];
Node_71 [shape=record,label="{71\:\ 0x01d8|r1.nextVertex(r1.clipX(r23), r1.clipY(r25))\l}"];
Node_85 [shape=record,label="{85\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
}
}
subgraph cluster_Region_1631584167 {
label = "R(1:86)";
node [shape=record,color=blue];
Node_86 [shape=record,label="{86\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
subgraph cluster_Region_47342500 {
label = "R(2:72|(1:(1:(1:76)))(1:(2:81|82)(1:(1:80)(0))))";
node [shape=record,color=blue];
Node_72 [shape=record,label="{72\:\ 0x01e8|long r2 = r19\llong r4 = r23\llong r6 = r21\llong r8 = r25\l}"];
subgraph cluster_IfRegion_1733101453 {
label = "IF [B:73:0x01f1] THEN: R(1:(1:(1:76))) ELSE: R(1:(2:81|82)(1:(1:80)(0)))";
node [shape=record,color=blue];
Node_73 [shape=record,label="{73\:\ 0x01f1|if (r0 == 1) goto L_0x01f3\l}"];
subgraph cluster_Region_1414058283 {
label = "R(1:(1:(1:76)))";
node [shape=record,color=blue];
subgraph cluster_Region_256502919 {
label = "R(1:(1:76))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_286648334 {
label = "IF [B:75:0x01f5] THEN: R(1:76) ELSE: null";
node [shape=record,color=blue];
Node_75 [shape=record,label="{75\:\ 0x01f5|if (r1.mPathMode == true) goto L_0x01f7\l}"];
subgraph cluster_Region_392174648 {
label = "R(1:76)";
node [shape=record,color=blue];
Node_76 [shape=record,label="{76\:\ 0x01f7|r1.nextVertex(clipX(r19), r1.clipY(r6))\lr1.nextVertex(r1.mOptimIntersection1.f444x, r1.mOptimIntersection1.f445y)\lr1.nextVertex(r1.clipX(r4), r1.clipY(r8))\l}"];
}
}
}
}
subgraph cluster_Region_518776014 {
label = "R(1:(2:81|82)(1:(1:80)(0))) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_205041585 {
label = "IF [B:77:0x0219] THEN: R(2:81|82) ELSE: R(1:(1:80)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_77 [shape=record,label="{77\:\ 0x0219|if (r0 != 0) goto L_0x0245\l}"];
subgraph cluster_Region_1280661349 {
label = "R(2:81|82)";
node [shape=record,color=blue];
Node_81 [shape=record,label="{81\:\ 0x0245}"];
Node_82 [shape=record,label="{82\:\ 0x0260|throw new java.lang.RuntimeException(\"Impossible mOptimIntersection count (\" + r0 + \")\")\l}"];
}
subgraph cluster_Region_1916703609 {
label = "R(1:(1:80)(0)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_867353700 {
label = "IF [B:79:0x021d] THEN: R(1:80) ELSE: R(0) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_79 [shape=record,label="{79\:\ 0x021d|if (r1.mPathMode == true) goto L_0x021f\l}"];
subgraph cluster_Region_142921801 {
label = "R(1:80)";
node [shape=record,color=blue];
Node_80 [shape=record,label="{80\:\ 0x021f|r1.nextVertex(clipX(r19), r1.clipY(r6))\lint int r0 = getClosestCorner(r19, r21, r23, r25)\lr1.nextVertex(r1.cornerX[r0], r1.cornerY[r0])\lr1.nextVertex(r1.clipX(r4), r1.clipY(r8))\l}"];
}
subgraph cluster_Region_2050924676 {
label = "R(0)";
node [shape=record,color=blue];
}
}
}
}
}
}
}
}
}
subgraph cluster_Region_473312985 {
label = "R(1:(2:(1:24)|25)(2:27|28)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_437638013 {
label = "IF [B:21:0x007b] THEN: R(2:(1:24)|25) ELSE: R(2:27|28) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x007b|if (intersection(r19, r21, r23, r25) == true) goto L_0x007d\l}"];
subgraph cluster_Region_142418080 {
label = "R(2:(1:24)|25)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1059173823 {
label = "IF [B:23:0x007f] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x007f|if (r7.mPathMode == true) goto L_0x0081\l}"];
subgraph cluster_Region_30438975 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0081|nextVertex(clipX(r19), clipY(r5))\l}"];
}
}
Node_25 [shape=record,label="{25\:\ 0x008c|nextVertex(r7.mOptimIntersection.f444x, r7.mOptimIntersection.f445y)\lnextVertex(r3, r1)\l}"];
}
subgraph cluster_Region_1121291376 {
label = "R(2:27|28)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x009b|java.lang.StringBuilder java.lang.StringBuilder r15 = new java.lang.StringBuilder()\lr15.append(\"Cannot find expected mOptimIntersection for \")\lorg.osmdroid.util.RectL r5 = r8\ljava.lang.StringBuilder r3 = r15\lorg.osmdroid.util.RectL org.osmdroid.util.RectL r8 = new org.osmdroid.util.RectL(r19, r21, r23, r25)\lr3.append(r5)\l}"];
Node_28 [shape=record,label="{28\:\ 0x00c1|throw new java.lang.RuntimeException(r3.toString())\l}"];
}
}
}
}
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x000c}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0013}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0019}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0025}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0026}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0071}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0077}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x007d}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x009a}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x00ec|PHI: r8 r17 \l  PHI: (r8v0 org.osmdroid.util.SegmentClipper) = (r8v6 org.osmdroid.util.SegmentClipper), (r8v7 org.osmdroid.util.SegmentClipper) binds: [B:32:0x00ea, B:31:0x00de] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v1 int) = (r17v0 int), (r17v6 int) binds: [B:32:0x00ea, B:31:0x00de] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_41 [shape=record,color=red,label="{41\:\ 0x011c|PHI: r7 r17 \l  PHI: (r7v4 org.osmdroid.util.SegmentClipper) = (r7v12 org.osmdroid.util.SegmentClipper), (r7v13 org.osmdroid.util.SegmentClipper) binds: [B:40:0x011a, B:39:0x0112] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v2 int) = (r17v1 int), (r17v5 int) binds: [B:40:0x011a, B:39:0x0112] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_49 [shape=record,color=red,label="{49\:\ 0x014c|PHI: r7 r17 \l  PHI: (r7v6 org.osmdroid.util.SegmentClipper) = (r7v8 org.osmdroid.util.SegmentClipper), (r7v9 org.osmdroid.util.SegmentClipper) binds: [B:48:0x014a, B:47:0x0142] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r17v3 int) = (r17v2 int), (r17v4 int) binds: [B:48:0x014a, B:47:0x0142] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_57 [shape=record,color=red,label="{57\:\ 0x017c|PHI: r0 r1 \l  PHI: (r0v15 int) = (r0v32 int), (r0v33 int) binds: [B:56:0x0178, B:55:0x0172] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v5 org.osmdroid.util.SegmentClipper) = (r1v6 org.osmdroid.util.SegmentClipper), (r1v7 org.osmdroid.util.SegmentClipper) binds: [B:56:0x0178, B:55:0x0172] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_61 [shape=record,color=red,label="{61\:\ 0x01ab}"];
Node_62 [shape=record,color=red,label="{62\:\ 0x01ae}"];
Node_64 [shape=record,color=red,label="{64\:\ 0x01b2}"];
Node_65 [shape=record,color=red,label="{65\:\ 0x01b5}"];
Node_66 [shape=record,color=red,label="{66\:\ 0x01b7|PHI: r0 \l  PHI: (r0v28 org.osmdroid.util.PointL) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_74 [shape=record,color=red,label="{74\:\ 0x01f3}"];
Node_78 [shape=record,color=red,label="{78\:\ 0x021b}"];
Node_83 [shape=record,color=red,label="{83\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_84 [shape=record,color=red,label="{84\:\ ?|SYNTHETIC\l}"];
Node_87 [shape=record,color=red,label="{87\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_88 [shape=record,color=red,label="{88\:\ ?|SYNTHETIC\l}"];
Node_89 [shape=record,color=red,label="{89\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_90 [shape=record,color=red,label="{90\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.util.SegmentClipper.clip((r18v0 'this' org.osmdroid.util.SegmentClipper A[IMMUTABLE_TYPE, THIS]), (r19v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_6 -> Node_7;
Node_6 -> Node_18[style=dashed];
Node_8 -> Node_9;
Node_8 -> Node_11[style=dashed];
Node_9 -> Node_10;
Node_12 -> Node_13;
Node_12 -> Node_16[style=dashed];
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_84[style=dashed];
Node_15 -> Node_83;
Node_16 -> Node_17;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31;
Node_30 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
Node_34 -> Node_35;
Node_34 -> Node_40[style=dashed];
Node_35 -> Node_36;
Node_36 -> Node_37;
Node_36 -> Node_38[style=dashed];
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_42 -> Node_43;
Node_42 -> Node_48[style=dashed];
Node_43 -> Node_44;
Node_44 -> Node_45;
Node_44 -> Node_46[style=dashed];
Node_45 -> Node_47;
Node_46 -> Node_47;
Node_47 -> Node_49;
Node_48 -> Node_49;
Node_50 -> Node_51;
Node_50 -> Node_56[style=dashed];
Node_51 -> Node_52;
Node_52 -> Node_53;
Node_52 -> Node_54[style=dashed];
Node_53 -> Node_55;
Node_54 -> Node_55;
Node_55 -> Node_57;
Node_56 -> Node_57;
Node_58 -> Node_59;
Node_58 -> Node_72[style=dashed];
Node_59 -> Node_60;
Node_60 -> Node_61;
Node_60 -> Node_62;
Node_63 -> Node_64;
Node_63 -> Node_65;
Node_67 -> Node_68;
Node_67 -> Node_69[style=dashed];
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_71;
Node_70 -> Node_86[style=dashed];
Node_71 -> Node_85;
Node_72 -> Node_73;
Node_73 -> Node_74;
Node_73 -> Node_77[style=dashed];
Node_75 -> Node_76;
Node_75 -> Node_88[style=dashed];
Node_76 -> Node_87;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_81;
Node_81 -> Node_82;
Node_79 -> Node_80;
Node_79 -> Node_90[style=dashed];
Node_80 -> Node_89;
Node_21 -> Node_22;
Node_21 -> Node_27[style=dashed];
Node_23 -> Node_24;
Node_23 -> Node_25[style=dashed];
Node_24 -> Node_25;
Node_25 -> Node_26;
Node_27 -> Node_28;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_11 -> Node_12;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_33 -> Node_34;
Node_41 -> Node_42;
Node_49 -> Node_50;
Node_57 -> Node_58;
Node_61 -> Node_63;
Node_62 -> Node_63;
Node_64 -> Node_66;
Node_65 -> Node_66;
Node_66 -> Node_67;
Node_74 -> Node_75;
Node_78 -> Node_79;
}

