digraph "CFG fororg.osmdroid.util.MyMath.gudermannInverse(D)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = \l  (4580687790476533049(0x3f91df46a2529d39, double:0.017453292519943295) ?[long, double])\l \l0x0005: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double) \l0x0007: CONST  (r0 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0009: ARITH  (r2 I:double) = (r2 I:double) \/ (r0 I:double) \l0x000a: CONST  (r0 I:?[long, double]) = \l  (4605249457297304856(0x3fe921fb54442d18, double:0.7853981633974483) ?[long, double])\l \l0x000f: ARITH  (r2 I:double) = (r2 I:double) + (r0 I:double) \l0x0010: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.tan(double):double type: STATIC \l0x0014: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.log(double):double type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: RETURN  (r2 I:double) \l}"];
MethodNode[shape=record,label="{public static double org.osmdroid.util.MyMath.gudermannInverse((r2 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

