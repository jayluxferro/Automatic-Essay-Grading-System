digraph "CFG fororg.osmdroid.util.GEMFFile.GEMFInputStream.read([BII)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.io.RandomAccessFile) = (r2 I:org.osmdroid.util.GEMFFile$GEMFInputStream) org.osmdroid.util.GEMFFile.GEMFInputStream.raf java.io.RandomAccessFile \l0x0002: IGET  (r1 I:int) = (r2 I:org.osmdroid.util.GEMFFile$GEMFInputStream) org.osmdroid.util.GEMFFile.GEMFInputStream.remainingBytes int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r5 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r5 I:int) = (r2 I:org.osmdroid.util.GEMFFile$GEMFInputStream) org.osmdroid.util.GEMFFile.GEMFInputStream.remainingBytes int \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: INVOKE  (r3 I:int) = \l  (r0 I:java.io.RandomAccessFile)\l  (r3 I:byte[])\l  (r4 I:int)\l  (r5 I:int)\l java.io.RandomAccessFile.read(byte[], int, int):int type: VIRTUAL \l0x000c: IGET  (r4 I:int) = (r2 I:org.osmdroid.util.GEMFFile$GEMFInputStream) org.osmdroid.util.GEMFFile.GEMFInputStream.remainingBytes int \l0x000e: ARITH  (r4 I:int) = (r4 I:int) \- (r3 I:int) \l0x000f: IPUT  \l  (r4 I:int)\l  (r2 I:org.osmdroid.util.GEMFFile$GEMFInputStream)\l org.osmdroid.util.GEMFFile.GEMFInputStream.remainingBytes int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0011|0x0011: RETURN  (r3 I:int) \l}"];
MethodNode[shape=record,label="{public int org.osmdroid.util.GEMFFile.GEMFInputStream.read((r2 'this' I:org.osmdroid.util.GEMFFile$GEMFInputStream A[IMMUTABLE_TYPE, THIS]), (r3 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

