digraph "CFG fororg.osmdroid.util.MapTileAreaZoomComputer.computeFromSource(Lorg\/osmdroid\/util\/MapTileArea;Lorg\/osmdroid\/util\/MapTileArea;)Lorg\/osmdroid\/util\/MapTileArea;" {
subgraph cluster_Region_605889706 {
label = "R(2:(1:1)|(2:(2:4|5)|(2:6|(2:16|17)(1:(2:12|13)(2:14|15)))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1736015306 {
label = "IF [B:0:0x0000] THEN: R(1:1) ELSE: null";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r8 == null) goto L_0x0003\l}"];
subgraph cluster_Region_802044398 {
label = "R(1:1)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0003|org.osmdroid.util.MapTileArea r8 = new org.osmdroid.util.MapTileArea()\l}"];
}
}
subgraph cluster_Region_510519925 {
label = "R(2:(2:4|5)|(2:6|(2:16|17)(1:(2:12|13)(2:14|15))))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1402516838 {
label = "IF [B:3:0x000c] THEN: R(2:4|5) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|if (r7.size() == 0) goto L_0x000e\l}"];
subgraph cluster_Region_2141390322 {
label = "R(2:4|5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000e|r8.reset()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|RETURN\l|return r8\l}"];
}
}
subgraph cluster_Region_857366827 {
label = "R(2:6|(2:16|17)(1:(2:12|13)(2:14|15)))";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0012|int int r1 = r6.mZoomDelta + r7.getZoom()\l}"];
subgraph cluster_IfRegion_1130965435 {
label = "IF [B:7:0x0019, B:9:0x001d] THEN: R(2:16|17) ELSE: R(1:(2:12|13)(2:14|15))";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0019|if (r1 \< 0) goto L_0x0078\l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|ADDED_TO_REGION\l|if (r1 \> org.osmdroid.util.MapTileIndex.mMaxZoomLevel) goto L_0x0078\l}"];
subgraph cluster_Region_561795745 {
label = "R(2:16|17)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0078|r8.reset()\l}"];
Node_17 [shape=record,label="{17\:\ 0x007b|RETURN\l|return r8\l}"];
}
subgraph cluster_Region_1353919161 {
label = "R(1:(2:12|13)(2:14|15)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1175881292 {
label = "IF [B:11:0x0022] THEN: R(2:12|13) ELSE: R(2:14|15) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0022|if (r6.mZoomDelta \<= 0) goto L_0x0024\l}"];
subgraph cluster_Region_1588834969 {
label = "R(2:12|13)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0024|r8.set(r1, r7.getLeft() \>\> (\-r6.mZoomDelta), r7.getTop() \>\> (\-r6.mZoomDelta), r7.getRight() \>\> (\-r6.mZoomDelta), r7.getBottom() \>\> (\-r6.mZoomDelta))\l}"];
Node_13 [shape=record,label="{13\:\ 0x004c|RETURN\l|return r8\l}"];
}
subgraph cluster_Region_1321261052 {
label = "R(2:14|15)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004d|r8.set(r1, r7.getLeft() \<\< r6.mZoomDelta, r7.getTop() \<\< r6.mZoomDelta, ((r7.getRight() + 1) \<\< r6.mZoomDelta) \- 1, ((r7.getBottom() + 1) \<\< r6.mZoomDelta) \- 1)\l}"];
Node_15 [shape=record,label="{15\:\ 0x0077|RETURN\l|return r8\l}"];
}
}
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0008|PHI: r8 \l  PHI: (r8v1 org.osmdroid.util.MapTileArea) = (r8v0 org.osmdroid.util.MapTileArea), (r8v2 org.osmdroid.util.MapTileArea) binds: [B:0:0x0000, B:1:0x0003] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x001b}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0020}"];
MethodNode[shape=record,label="{public org.osmdroid.util.MapTileArea org.osmdroid.util.MapTileAreaZoomComputer.computeFromSource((r6v0 'this' org.osmdroid.util.MapTileAreaZoomComputer A[IMMUTABLE_TYPE, THIS]), (r7v0 org.osmdroid.util.MapTileArea A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 org.osmdroid.util.MapTileArea A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_2[style=dashed];
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_16 -> Node_17;
Node_11 -> Node_12;
Node_11 -> Node_14[style=dashed];
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_2 -> Node_3;
Node_8 -> Node_9;
Node_10 -> Node_11;
}

