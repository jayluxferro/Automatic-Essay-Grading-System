digraph "CFG fororg.osmdroid.util.RectL.getRotatedX(JJJJDD)J" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r0 I:long) = (r0 I:long) \- (r4 I:long) \l0x0001: CAST  (r0 I:double) = (double) (r0 I:long) \l0x0002: ARITH  (r0 I:double) = (r0 I:double) * (r8 I:double) \l0x0004: ARITH  (r2 I:long) = (r2 I:long) \- (r6 I:long) \l0x0005: CAST  (r2 I:double) = (double) (r2 I:long) \l0x0006: ARITH  (r2 I:double) = (r2 I:double) * (r10 I:double) \l0x0008: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0009: INVOKE  (r0 I:long) = (r0 I:double) java.lang.Math.round(double):long type: STATIC \l0x000d: ARITH  (r4 I:long) = (r4 I:long) + (r0 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN  (r4 I:long) \l}"];
MethodNode[shape=record,label="{public static long org.osmdroid.util.RectL.getRotatedX((r0 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

