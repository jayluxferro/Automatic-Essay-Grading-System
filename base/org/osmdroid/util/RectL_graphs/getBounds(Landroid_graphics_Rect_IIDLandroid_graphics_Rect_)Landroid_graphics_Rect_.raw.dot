digraph "CFG fororg.osmdroid.util.RectL.getBounds(Landroid\/graphics\/Rect;IIDLandroid\/graphics\/Rect;)Landroid\/graphics\/Rect;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r31 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0007 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r31 I:?[OBJECT, ARRAY]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|0x0007: NEW_INSTANCE  (r3 I:android.graphics.Rect) =  android.graphics.Rect \l0x0009: INVOKE  (r3 I:android.graphics.Rect) android.graphics.Rect.\<init\>():void type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: CONST  (r4 I:?[long, double]) = (0 ?[long, double]) \l0x000e: CMP_L  (r4 I:int) = (r29 I:double), (r4 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|0x0010: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0023 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: IGET  (r1 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0014: IPUT  (r1 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0016: IGET  (r1 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x0018: IPUT  (r1 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.left int \l0x001a: IGET  (r1 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x001c: IPUT  (r1 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x001e: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0020: IPUT  (r0 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.right int \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: RETURN  (r3 I:android.graphics.Rect) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|0x0023: CONST  (r4 I:?[long, double]) = \l  (4614256656552045848(0x400921fb54442d18, double:3.141592653589793) ?[long, double])\l \l0x0028: ARITH  (r1 I:double) = (r29 I:double) * (r4 I:double) \l0x002a: CONST  (r4 I:?[long, double]) = \l  (4640537203540230144(0x4066800000000000, double:180.0) ?[long, double])\l \l0x002f: ARITH  (r1 I:double) = (r1 I:double) \/ (r4 I:double) \l0x0030: INVOKE  (r16 I:double) = (r1 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0034: INVOKE  (r1 I:double) = (r1 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0038: IGET  (r4 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x003a: IGET  (r5 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x003c: CAST  (r14 I:long) = (long) (r4 I:int) \l0x003d: CAST  (r12 I:long) = (long) (r5 I:int) \l0x003e: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r27 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0040: CAST  (r10 I:long) = (long) (r4 I:int) \l0x0041: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r28 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0043: CAST  (r8 I:long) = (long) (r4 I:int) \l0x0044: MOVE  (r4 I:?[long, double]) = (r14 I:?[long, double]) \l0x0045: MOVE  (r6 I:?[long, double]) = (r12 I:?[long, double]) \l0x0046: MOVE  (r18 I:?[long, double]) = (r8 I:?[long, double]) \l0x0048: MOVE  (r8 I:?[long, double]) = (r10 I:?[long, double]) \l0x0049: MOVE  (r20 I:?[long, double]) = (r10 I:?[long, double]) \l0x004b: MOVE  (r10 I:?[long, double]) = (r18 I:?[long, double]) \l0x004d: MOVE  (r22 I:?[long, double]) = (r12 I:?[long, double]) \l0x004f: MOVE  (r12 I:?[long, double]) = (r16 I:?[long, double]) \l0x0051: MOVE  (r24 I:?[long, double]) = (r14 I:?[long, double]) \l0x0053: MOVE  (r14 I:?[long, double]) = (r1 I:?[long, double]) \l0x0054: INVOKE  (r4 I:long) = \l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:long)\l  (r10 I:long)\l  (r12 I:double)\l  (r14 I:double)\l org.osmdroid.util.RectL.getRotatedX(long, long, long, long, double, double):long type: STATIC \l0x0058: CAST  (r14 I:int) = (int) (r4 I:long) \l0x0059: MOVE  (r4 I:?[long, double]) = (r24 I:?[long, double]) \l0x005b: MOVE  (r6 I:?[long, double]) = (r22 I:?[long, double]) \l0x005d: MOVE  (r8 I:?[long, double]) = (r20 I:?[long, double]) \l0x005f: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0060: MOVE  (r14 I:?[long, double]) = (r1 I:?[long, double]) \l0x0061: INVOKE  (r4 I:long) = \l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:long)\l  (r10 I:long)\l  (r12 I:double)\l  (r14 I:double)\l org.osmdroid.util.RectL.getRotatedY(long, long, long, long, double, double):long type: STATIC \l0x0065: CAST  (r4 I:int) = (int) (r4 I:long) \l0x0066: IPUT  (r4 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x0068: IPUT  (r4 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l0x006a: IPUT  (r0 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.right int \l0x006c: IPUT  (r0 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.left int \l0x006e: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x0070: IGET  (r4 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.right int \l0x0072: IGET  (r5 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.top int \l0x0074: CAST  (r14 I:long) = (long) (r4 I:int) \l0x0075: CAST  (r12 I:long) = (long) (r5 I:int) \l0x0076: MOVE  (r4 I:?[long, double]) = (r14 I:?[long, double]) \l0x0077: MOVE  (r6 I:?[long, double]) = (r12 I:?[long, double]) \l0x0078: MOVE  (r22 I:?[long, double]) = (r12 I:?[long, double]) \l0x007a: MOVE  (r12 I:?[long, double]) = (r16 I:?[long, double]) \l0x007c: MOVE  (r24 I:?[long, double]) = (r14 I:?[long, double]) \l0x007e: MOVE  (r14 I:?[long, double]) = (r1 I:?[long, double]) \l0x007f: INVOKE  (r4 I:long) = \l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:long)\l  (r10 I:long)\l  (r12 I:double)\l  (r14 I:double)\l org.osmdroid.util.RectL.getRotatedX(long, long, long, long, double, double):long type: STATIC \l0x0083: CAST  (r14 I:int) = (int) (r4 I:long) \l0x0084: MOVE  (r4 I:?[long, double]) = (r24 I:?[long, double]) \l0x0086: MOVE  (r6 I:?[long, double]) = (r22 I:?[long, double]) \l0x0088: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0089: MOVE  (r14 I:?[long, double]) = (r1 I:?[long, double]) \l0x008a: INVOKE  (r4 I:long) = \l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:long)\l  (r10 I:long)\l  (r12 I:double)\l  (r14 I:double)\l org.osmdroid.util.RectL.getRotatedY(long, long, long, long, double, double):long type: STATIC \l0x008e: CAST  (r4 I:int) = (int) (r4 I:long) \l0x008f: IGET  (r5 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_9 [shape=record,label="{9\:\ 0x0091|0x0091: IF  (r5 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:11:0x0095 \l}"];
Node_10 [shape=record,label="{10\:\ 0x0093|0x0093: IPUT  (r4 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_11 [shape=record,label="{11\:\ 0x0095|0x0095: IGET  (r5 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.bottom int \l}"];
Node_12 [shape=record,label="{12\:\ 0x0097|0x0097: IF  (r5 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:14:0x009b \l}"];
Node_13 [shape=record,label="{13\:\ 0x0099|0x0099: IPUT  (r4 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.bottom int \l}"];
Node_14 [shape=record,label="{14\:\ 0x009b|0x009b: IGET  (r4 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.left int \l}"];
Node_15 [shape=record,label="{15\:\ 0x009d|0x009d: IF  (r4 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:17:0x00a1 \l}"];
Node_16 [shape=record,label="{16\:\ 0x009f|0x009f: IPUT  (r0 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.left int \l}"];
Node_17 [shape=record,label="{17\:\ 0x00a1|0x00a1: IGET  (r4 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.right int \l}"];
Node_18 [shape=record,label="{18\:\ 0x00a3|0x00a3: IF  (r4 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:20:0x00a7 \l}"];
Node_19 [shape=record,label="{19\:\ 0x00a5|0x00a5: IPUT  (r0 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.right int \l}"];
Node_20 [shape=record,label="{20\:\ 0x00a7|0x00a7: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x00a9: IGET  (r4 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.right int \l0x00ab: IGET  (r5 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x00ad: CAST  (r14 I:long) = (long) (r4 I:int) \l0x00ae: CAST  (r12 I:long) = (long) (r5 I:int) \l0x00af: MOVE  (r4 I:?[long, double]) = (r14 I:?[long, double]) \l0x00b0: MOVE  (r6 I:?[long, double]) = (r12 I:?[long, double]) \l0x00b1: MOVE  (r8 I:?[long, double]) = (r20 I:?[long, double]) \l0x00b3: MOVE  (r10 I:?[long, double]) = (r18 I:?[long, double]) \l0x00b5: MOVE  (r22 I:?[long, double]) = (r12 I:?[long, double]) \l0x00b7: MOVE  (r12 I:?[long, double]) = (r16 I:?[long, double]) \l0x00b9: MOVE  (r24 I:?[long, double]) = (r14 I:?[long, double]) \l0x00bb: MOVE  (r14 I:?[long, double]) = (r1 I:?[long, double]) \l0x00bc: INVOKE  (r4 I:long) = \l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:long)\l  (r10 I:long)\l  (r12 I:double)\l  (r14 I:double)\l org.osmdroid.util.RectL.getRotatedX(long, long, long, long, double, double):long type: STATIC \l0x00c0: CAST  (r14 I:int) = (int) (r4 I:long) \l0x00c1: MOVE  (r4 I:?[long, double]) = (r24 I:?[long, double]) \l0x00c3: MOVE  (r6 I:?[long, double]) = (r22 I:?[long, double]) \l0x00c5: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x00c6: MOVE  (r14 I:?[long, double]) = (r1 I:?[long, double]) \l0x00c7: INVOKE  (r4 I:long) = \l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:long)\l  (r10 I:long)\l  (r12 I:double)\l  (r14 I:double)\l org.osmdroid.util.RectL.getRotatedY(long, long, long, long, double, double):long type: STATIC \l0x00cb: CAST  (r4 I:int) = (int) (r4 I:long) \l0x00cc: IGET  (r5 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_21 [shape=record,label="{21\:\ 0x00ce|0x00ce: IF  (r5 I:?[int, byte, short, char]) \<= (r4 I:?[int, byte, short, char])  \-\> B:23:0x00d2 \l}"];
Node_22 [shape=record,label="{22\:\ 0x00d0|0x00d0: IPUT  (r4 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_23 [shape=record,label="{23\:\ 0x00d2|0x00d2: IGET  (r5 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.bottom int \l}"];
Node_24 [shape=record,label="{24\:\ 0x00d4|0x00d4: IF  (r5 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:26:0x00d8 \l}"];
Node_25 [shape=record,label="{25\:\ 0x00d6|0x00d6: IPUT  (r4 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.bottom int \l}"];
Node_26 [shape=record,label="{26\:\ 0x00d8|0x00d8: IGET  (r4 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.left int \l}"];
Node_27 [shape=record,label="{27\:\ 0x00da|0x00da: IF  (r4 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:29:0x00de \l}"];
Node_28 [shape=record,label="{28\:\ 0x00dc|0x00dc: IPUT  (r0 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.left int \l}"];
Node_29 [shape=record,label="{29\:\ 0x00de|0x00de: IGET  (r4 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.right int \l}"];
Node_30 [shape=record,label="{30\:\ 0x00e0|0x00e0: IF  (r4 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:32:0x00e4 \l}"];
Node_31 [shape=record,label="{31\:\ 0x00e2|0x00e2: IPUT  (r0 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.right int \l}"];
Node_32 [shape=record,label="{32\:\ 0x00e4|0x00e4: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r26 I:?[OBJECT, ARRAY]) \l0x00e6: IGET  (r4 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.left int \l0x00e8: IGET  (r0 I:int) = (r0 I:android.graphics.Rect) android.graphics.Rect.bottom int \l0x00ea: CAST  (r14 I:long) = (long) (r4 I:int) \l0x00eb: CAST  (r12 I:long) = (long) (r0 I:int) \l0x00ec: MOVE  (r4 I:?[long, double]) = (r14 I:?[long, double]) \l0x00ed: MOVE  (r6 I:?[long, double]) = (r12 I:?[long, double]) \l0x00ee: MOVE  (r8 I:?[long, double]) = (r20 I:?[long, double]) \l0x00f0: MOVE  (r10 I:?[long, double]) = (r18 I:?[long, double]) \l0x00f2: MOVE  (r22 I:?[long, double]) = (r12 I:?[long, double]) \l0x00f4: MOVE  (r12 I:?[long, double]) = (r16 I:?[long, double]) \l0x00f6: MOVE  (r24 I:?[long, double]) = (r14 I:?[long, double]) \l0x00f8: MOVE  (r14 I:?[long, double]) = (r1 I:?[long, double]) \l0x00f9: INVOKE  (r4 I:long) = \l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:long)\l  (r10 I:long)\l  (r12 I:double)\l  (r14 I:double)\l org.osmdroid.util.RectL.getRotatedX(long, long, long, long, double, double):long type: STATIC \l0x00fd: CAST  (r0 I:int) = (int) (r4 I:long) \l0x00fe: MOVE  (r4 I:?[long, double]) = (r24 I:?[long, double]) \l0x0100: MOVE  (r6 I:?[long, double]) = (r22 I:?[long, double]) \l0x0102: INVOKE  (r1 I:long) = \l  (r4 I:long)\l  (r6 I:long)\l  (r8 I:long)\l  (r10 I:long)\l  (r12 I:double)\l  (r14 I:double)\l org.osmdroid.util.RectL.getRotatedY(long, long, long, long, double, double):long type: STATIC \l0x0106: CAST  (r1 I:int) = (int) (r1 I:long) \l0x0107: IGET  (r2 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_33 [shape=record,label="{33\:\ 0x0109|0x0109: IF  (r2 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:35:0x010d \l}"];
Node_34 [shape=record,label="{34\:\ 0x010b|0x010b: IPUT  (r1 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.top int \l}"];
Node_35 [shape=record,label="{35\:\ 0x010d|0x010d: IGET  (r2 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.bottom int \l}"];
Node_36 [shape=record,label="{36\:\ 0x010f|0x010f: IF  (r2 I:?[int, byte, short, char]) \>= (r1 I:?[int, byte, short, char])  \-\> B:38:0x0113 \l}"];
Node_37 [shape=record,label="{37\:\ 0x0111|0x0111: IPUT  (r1 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.bottom int \l}"];
Node_38 [shape=record,label="{38\:\ 0x0113|0x0113: IGET  (r1 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.left int \l}"];
Node_39 [shape=record,label="{39\:\ 0x0115|0x0115: IF  (r1 I:?[int, byte, short, char]) \<= (r0 I:?[int, byte, short, char])  \-\> B:41:0x0119 \l}"];
Node_40 [shape=record,label="{40\:\ 0x0117|0x0117: IPUT  (r0 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.left int \l}"];
Node_41 [shape=record,label="{41\:\ 0x0119|0x0119: IGET  (r1 I:int) = (r3 I:android.graphics.Rect) android.graphics.Rect.right int \l}"];
Node_42 [shape=record,label="{42\:\ 0x011b|0x011b: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:44:0x011f \l}"];
Node_43 [shape=record,label="{43\:\ 0x011d|0x011d: IPUT  (r0 I:int), (r3 I:android.graphics.Rect) android.graphics.Rect.right int \l}"];
Node_44 [shape=record,label="{44\:\ 0x011f|0x011f: RETURN  (r3 I:android.graphics.Rect) \l}"];
MethodNode[shape=record,label="{public static android.graphics.Rect org.osmdroid.util.RectL.getBounds((r26 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r28 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:android.graphics.Rect A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
}

