digraph "CFG fororg.osmdroid.util.RectL.union(JJJJ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CMP_L  (r0 I:int) = (r5 I:long), (r9 I:long) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:21:0x0041 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: CMP_L  (r0 I:int) = (r7 I:long), (r11 I:long) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:21:0x0041 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IGET  (r0 I:long) = (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.left long \l0x000a: IGET  (r2 I:long) = (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.right long \l0x000c: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:20:0x0039 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: IGET  (r0 I:long) = (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.top long \l0x0012: IGET  (r2 I:long) = (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.bottom long \l0x0014: CMP_L  (r0 I:int) = (r0 I:long), (r2 I:long) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0016|0x0016: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:20:0x0039 \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: IGET  (r0 I:long) = (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.left long \l0x001a: CMP_L  (r0 I:int) = (r0 I:long), (r5 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001c|0x001c: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x0020 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001e|0x001e: IPUT  (r5 I:long), (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.left long \l}"];
Node_11 [shape=record,label="{11\:\ 0x0020|0x0020: IGET  (r5 I:long) = (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.top long \l0x0022: CMP_L  (r5 I:int) = (r5 I:long), (r7 I:long) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|0x0024: IF  (r5 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:14:0x0028 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|0x0026: IPUT  (r7 I:long), (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.top long \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: IGET  (r5 I:long) = (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.right long \l0x002a: CMP_L  (r5 I:int) = (r5 I:long), (r9 I:long) \l}"];
Node_15 [shape=record,label="{15\:\ 0x002c|0x002c: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:17:0x0030 \l}"];
Node_16 [shape=record,label="{16\:\ 0x002e|0x002e: IPUT  (r9 I:long), (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.right long \l}"];
Node_17 [shape=record,label="{17\:\ 0x0030|0x0030: IGET  (r5 I:long) = (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.bottom long \l0x0032: CMP_L  (r5 I:int) = (r5 I:long), (r11 I:long) \l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|0x0034: IF  (r5 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:21:0x0041 \l}"];
Node_19 [shape=record,label="{19\:\ 0x0036|0x0036: IPUT  (r11 I:long), (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.bottom long \l}"];
Node_20 [shape=record,label="{20\:\ 0x0039|0x0039: IPUT  (r5 I:long), (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.left long \l0x003b: IPUT  (r7 I:long), (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.top long \l0x003d: IPUT  (r9 I:long), (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.right long \l0x003f: IPUT  (r11 I:long), (r4 I:org.osmdroid.util.RectL) org.osmdroid.util.RectL.bottom long \l}"];
Node_21 [shape=record,label="{21\:\ 0x0041|0x0041: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.util.RectL.union((r4 'this' I:org.osmdroid.util.RectL A[IMMUTABLE_TYPE, THIS]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_21;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_21;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_20;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_20;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_21;
Node_19 -> Node_21;
Node_20 -> Node_21;
}

