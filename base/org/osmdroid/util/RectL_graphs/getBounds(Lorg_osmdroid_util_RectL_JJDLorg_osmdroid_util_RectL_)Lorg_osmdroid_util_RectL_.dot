digraph "CFG fororg.osmdroid.util.RectL.getBounds(Lorg\/osmdroid\/util\/RectL;JJDLorg\/osmdroid\/util\/RectL;)Lorg\/osmdroid\/util\/RectL;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = r30\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r37 == null) goto L_0x0007\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|r3 = r37\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|org.osmdroid.util.RectL r3 = new org.osmdroid.util.RectL()\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|PHI: r3 \l  PHI: (r3v0 org.osmdroid.util.RectL) = (r3v1 org.osmdroid.util.RectL), (r3v2 org.osmdroid.util.RectL) binds: [B:3:0x0007, B:2:0x0004] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if ((r35 \> 0.0d ? 1 : (r35 == 0.0d ? 0 : \-1)) != 0) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|r3.top = r0.top\lr3.left = r0.left\lr3.bottom = r0.bottom\lr3.right = r0.right\l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|RETURN\l|return r3\l}"];
Node_8 [shape=record,label="{8\:\ 0x0023|double r1 = (r35 * 3.141592653589793d) \/ 180.0d\ldouble r16 = java.lang.Math.cos(r1)\ldouble r1 = java.lang.Math.sin(r1)\llong r14 = r0.left\llong r12 = r0.top\lr6 = r12\lr8 = r31\lr10 = r33\lr18 = r12\lr12 = r16\lr20 = r14\llong r14 = getRotatedX(r14, r6, r8, r10, r12, r1)\lr22 = r14\llong r4 = getRotatedY(r20, r18, r8, r10, r12, r1)\lr3.bottom = r4\lr3.top = r4\lr4 = r22\lr3.right = r4\lr3.left = r4\llong r14 = r0.right\llong r12 = r0.top\lr6 = r12\lr18 = r12\lr12 = r16\lr20 = r14\llong r14 = getRotatedX(r14, r6, r8, r10, r12, r1)\lr24 = r14\llong r4 = getRotatedY(r20, r18, r8, r10, r12, r1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0082|if ((r3.top \> r4 ? 1 : (r3.top == r4 ? 0 : \-1)) \<= 0) goto L_0x0086\l}"];
Node_10 [shape=record,label="{10\:\ 0x0084|r3.top = r4\l}"];
Node_11 [shape=record,label="{11\:\ 0x0086}"];
Node_12 [shape=record,label="{12\:\ 0x008a|if ((r3.bottom \> r4 ? 1 : (r3.bottom == r4 ? 0 : \-1)) \>= 0) goto L_0x008e\l}"];
Node_13 [shape=record,label="{13\:\ 0x008c|r3.bottom = r4\l}"];
Node_14 [shape=record,label="{14\:\ 0x008e|r6 = r24\l}"];
Node_15 [shape=record,label="{15\:\ 0x0094|if ((r3.left \> r6 ? 1 : (r3.left == r6 ? 0 : \-1)) \<= 0) goto L_0x0098\l}"];
Node_16 [shape=record,label="{16\:\ 0x0096|r3.left = r6\l}"];
Node_17 [shape=record,label="{17\:\ 0x0098}"];
Node_18 [shape=record,label="{18\:\ 0x009c|if ((r3.right \> r6 ? 1 : (r3.right == r6 ? 0 : \-1)) \>= 0) goto L_0x00a0\l}"];
Node_19 [shape=record,label="{19\:\ 0x009e|r3.right = r6\l}"];
Node_20 [shape=record,label="{20\:\ 0x00a0|long r14 = r0.right\llong r12 = r0.bottom\lr6 = r12\lr8 = r31\lr10 = r33\lr18 = r12\lr12 = r16\lr20 = r14\llong r14 = getRotatedX(r14, r6, r8, r10, r12, r1)\lr26 = r14\llong r4 = getRotatedY(r20, r18, r8, r10, r12, r1)\l}"];
Node_21 [shape=record,label="{21\:\ 0x00c4|if ((r3.top \> r4 ? 1 : (r3.top == r4 ? 0 : \-1)) \<= 0) goto L_0x00c8\l}"];
Node_22 [shape=record,label="{22\:\ 0x00c6|r3.top = r4\l}"];
Node_23 [shape=record,label="{23\:\ 0x00c8}"];
Node_24 [shape=record,label="{24\:\ 0x00cc|if ((r3.bottom \> r4 ? 1 : (r3.bottom == r4 ? 0 : \-1)) \>= 0) goto L_0x00d0\l}"];
Node_25 [shape=record,label="{25\:\ 0x00ce|r3.bottom = r4\l}"];
Node_26 [shape=record,label="{26\:\ 0x00d0|r6 = r26\l}"];
Node_27 [shape=record,label="{27\:\ 0x00d6|if ((r3.left \> r6 ? 1 : (r3.left == r6 ? 0 : \-1)) \<= 0) goto L_0x00da\l}"];
Node_28 [shape=record,label="{28\:\ 0x00d8|r3.left = r6\l}"];
Node_29 [shape=record,label="{29\:\ 0x00da}"];
Node_30 [shape=record,label="{30\:\ 0x00de|if ((r3.right \> r6 ? 1 : (r3.right == r6 ? 0 : \-1)) \>= 0) goto L_0x00e2\l}"];
Node_31 [shape=record,label="{31\:\ 0x00e0|r3.right = r6\l}"];
Node_32 [shape=record,label="{32\:\ 0x00e2|long r14 = r0.left\llong r12 = r0.bottom\lr6 = r12\lr8 = r31\lr10 = r33\lr18 = r12\lr12 = r16\lr20 = r14\llong r14 = getRotatedX(r14, r6, r8, r10, r12, r1)\lr28 = r14\llong r0 = getRotatedY(r20, r18, r8, r10, r12, r1)\l}"];
Node_33 [shape=record,label="{33\:\ 0x0106|if ((r3.top \> r0 ? 1 : (r3.top == r0 ? 0 : \-1)) \<= 0) goto L_0x010a\l}"];
Node_34 [shape=record,label="{34\:\ 0x0108|r3.top = r0\l}"];
Node_35 [shape=record,label="{35\:\ 0x010a}"];
Node_36 [shape=record,label="{36\:\ 0x010e|if ((r3.bottom \> r0 ? 1 : (r3.bottom == r0 ? 0 : \-1)) \>= 0) goto L_0x0112\l}"];
Node_37 [shape=record,label="{37\:\ 0x0110|r3.bottom = r0\l}"];
Node_38 [shape=record,label="{38\:\ 0x0112|r4 = r28\l}"];
Node_39 [shape=record,label="{39\:\ 0x0118|if ((r3.left \> r4 ? 1 : (r3.left == r4 ? 0 : \-1)) \<= 0) goto L_0x011c\l}"];
Node_40 [shape=record,label="{40\:\ 0x011a|r3.left = r4\l}"];
Node_41 [shape=record,label="{41\:\ 0x011c}"];
Node_42 [shape=record,label="{42\:\ 0x0120|if ((r3.right \> r4 ? 1 : (r3.right == r4 ? 0 : \-1)) \>= 0) goto L_0x0124\l}"];
Node_43 [shape=record,label="{43\:\ 0x0122|r3.right = r4\l}"];
Node_44 [shape=record,label="{44\:\ 0x0124|RETURN\l|return r3\l}"];
MethodNode[shape=record,label="{public static org.osmdroid.util.RectL org.osmdroid.util.RectL.getBounds((r30v0 org.osmdroid.util.RectL A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r37v0 org.osmdroid.util.RectL A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_19 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_32;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_35;
Node_34 -> Node_35;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_38;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_41;
Node_40 -> Node_41;
Node_41 -> Node_42;
Node_42 -> Node_43[style=dashed];
Node_42 -> Node_44;
Node_43 -> Node_44;
}

