digraph "CFG fororg.osmdroid.util.MapTileIndex.checkValues(III)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 \< 0) goto L_0x0006\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r4 \<= mMaxZoomLevel) goto L_0x000b\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|throwIllegalValue(r4, r4, \"Zoom\")\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|long r0 = (long) (1 \<\< r4)\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|if (r5 \< 0) goto L_0x0015\l}"];
Node_6 [shape=record,label="{6\:\ 0x0010}"];
Node_7 [shape=record,label="{7\:\ 0x0013|if ((((long) r5) \> r0 ? 1 : (((long) r5) == r0 ? 0 : \-1)) \< 0) goto L_0x001a\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|throwIllegalValue(r4, r5, \"X\")\l}"];
Node_9 [shape=record,label="{9\:\ 0x001a|if (r6 \< 0) goto L_0x0021\l}"];
Node_10 [shape=record,label="{10\:\ 0x001c}"];
Node_11 [shape=record,label="{11\:\ 0x001f|if ((((long) r6) \> r0 ? 1 : (((long) r6) == r0 ? 0 : \-1)) \< 0) goto L_?\l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|throwIllegalValue(r4, r6, \"Y\")\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private static void org.osmdroid.util.MapTileIndex.checkValues((r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
}

