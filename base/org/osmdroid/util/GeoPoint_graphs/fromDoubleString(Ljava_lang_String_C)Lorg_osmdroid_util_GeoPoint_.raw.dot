digraph "CFG fororg.osmdroid.util.GeoPoint.fromDoubleString(Ljava\/lang\/String;C)Lorg\/osmdroid\/util\/GeoPoint;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r11 I:java.lang.String), (r12 I:int) java.lang.String.indexOf(int):int type: VIRTUAL \l0x0004: ARITH  (r1 I:int) = (r0 I:int) + (1 int) \l0x0006: INVOKE  (r12 I:int) = (r11 I:java.lang.String), (r12 I:int), (r1 I:int) java.lang.String.indexOf(int, int):int type: VIRTUAL \l0x000a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|0x000c: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x0028 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|0x000e: NEW_INSTANCE  (r12 I:org.osmdroid.util.GeoPoint) =  org.osmdroid.util.GeoPoint \l0x0010: INVOKE  (r0 I:java.lang.String) = (r11 I:java.lang.String), (r2 I:int), (r0 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0014: INVOKE  (r2 I:double) = (r0 I:java.lang.String) java.lang.Double.parseDouble(java.lang.String):double type: STATIC \l0x0018: INVOKE  (r0 I:int) = (r11 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x001c: INVOKE  (r11 I:java.lang.String) = (r11 I:java.lang.String), (r1 I:int), (r0 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0020: INVOKE  (r0 I:double) = (r11 I:java.lang.String) java.lang.Double.parseDouble(java.lang.String):double type: STATIC \l0x0024: INVOKE  \l  (r12 I:org.osmdroid.util.GeoPoint)\l  (r2 I:double)\l  (r0 I:double)\l org.osmdroid.util.GeoPoint.\<init\>(double, double):void type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|0x0027: RETURN  (r12 I:org.osmdroid.util.GeoPoint) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|0x0028: NEW_INSTANCE  (r3 I:org.osmdroid.util.GeoPoint) =  org.osmdroid.util.GeoPoint \l0x002a: INVOKE  (r0 I:java.lang.String) = (r11 I:java.lang.String), (r2 I:int), (r0 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x002e: INVOKE  (r5 I:double) = (r0 I:java.lang.String) java.lang.Double.parseDouble(java.lang.String):double type: STATIC \l0x0032: INVOKE  (r0 I:java.lang.String) = (r11 I:java.lang.String), (r1 I:int), (r12 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0036: INVOKE  (r7 I:double) = (r0 I:java.lang.String) java.lang.Double.parseDouble(java.lang.String):double type: STATIC \l0x003a: ARITH  (r12 I:int) = (r12 I:int) + (1 int) \l0x003c: INVOKE  (r0 I:int) = (r11 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0040: INVOKE  (r11 I:java.lang.String) = (r11 I:java.lang.String), (r12 I:int), (r0 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0044: INVOKE  (r9 I:double) = (r11 I:java.lang.String) java.lang.Double.parseDouble(java.lang.String):double type: STATIC \l0x0048: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) \l0x0049: INVOKE  \l  (r4 I:org.osmdroid.util.GeoPoint)\l  (r5 I:double)\l  (r7 I:double)\l  (r9 I:double)\l org.osmdroid.util.GeoPoint.\<init\>(double, double, double):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x004c|0x004c: RETURN  (r3 I:org.osmdroid.util.GeoPoint) \l}"];
MethodNode[shape=record,label="{public static org.osmdroid.util.GeoPoint org.osmdroid.util.GeoPoint.fromDoubleString((r11 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:char A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

