digraph "CFG fororg.osmdroid.util.GeoPoint.distanceToAsDouble(Lorg\/osmdroid\/api\/IGeoPoint;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r12 I:org.osmdroid.util.GeoPoint) org.osmdroid.util.GeoPoint.getLatitude():double type: VIRTUAL \l0x0004: CONST  (r2 I:?[long, double]) = \l  (4580687790476533049(0x3f91df46a2529d39, double:0.017453292519943295) ?[long, double])\l \l0x0009: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l0x000b: INVOKE  (r4 I:double) = (r13 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x000f: ARITH  (r4 I:double) = (r4 I:double) * (r2 I:double) \l0x0011: INVOKE  (r6 I:double) = (r12 I:org.osmdroid.util.GeoPoint) org.osmdroid.util.GeoPoint.getLongitude():double type: VIRTUAL \l0x0015: ARITH  (r6 I:double) = (r6 I:double) * (r2 I:double) \l0x0017: INVOKE  (r8 I:double) = (r13 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x001b: ARITH  (r8 I:double) = (r8 I:double) * (r2 I:double) \l0x001d: ARITH  (r2 I:double) = (r4 I:double) \- (r0 I:double) \l0x001f: CONST  (r10 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x0021: ARITH  (r2 I:double) = (r2 I:double) \/ (r10 I:double) \l0x0022: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0026: INVOKE  (r2 I:double) = (r2 I:double), (r10 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x002a: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.cos(double):double type: STATIC \l0x002e: INVOKE  (r4 I:double) = (r4 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0032: ARITH  (r0 I:double) = (r0 I:double) * (r4 I:double) \l0x0034: ARITH  (r8 I:double) = (r8 I:double) \- (r6 I:double) \l0x0035: ARITH  (r8 I:double) = (r8 I:double) \/ (r10 I:double) \l0x0036: INVOKE  (r4 I:double) = (r8 I:double) java.lang.Math.sin(double):double type: STATIC \l0x003a: INVOKE  (r4 I:double) = (r4 I:double), (r10 I:double) java.lang.Math.pow(double, double):double type: STATIC \l0x003e: ARITH  (r0 I:double) = (r0 I:double) * (r4 I:double) \l0x0040: ARITH  (r2 I:double) = (r2 I:double) + (r0 I:double) \l0x0041: INVOKE  (r0 I:double) = (r2 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x0045: CONST  (r2 I:?[long, double]) = \l  (4607182418800017408(0x3ff0000000000000, double:1.0) ?[long, double])\l \l0x0047: INVOKE  (r0 I:double) = (r2 I:double), (r0 I:double) java.lang.Math.min(double, double):double type: STATIC \l0x004b: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.asin(double):double type: STATIC \l0x004f: CONST  (r2 I:?[long, double]) = \l  (4713110083058270208(0x416854a640000000, double:1.2756274E7) ?[long, double])\l \l0x0054: ARITH  (r0 I:double) = (r0 I:double) * (r2 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0056|0x0056: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public double org.osmdroid.util.GeoPoint.distanceToAsDouble((r12 'this' I:org.osmdroid.util.GeoPoint A[IMMUTABLE_TYPE, THIS]), (r13 I:org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

