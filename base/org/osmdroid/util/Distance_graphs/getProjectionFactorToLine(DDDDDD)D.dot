digraph "CFG fororg.osmdroid.util.Distance.getProjectionFactorToLine(DDDDDD)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if ((r16 \> r20 ? 1 : (r16 == r20 ? 0 : \-1)) != 0) goto L_0x000b\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004}"];
Node_3 [shape=record,label="{3\:\ 0x0006|if ((r18 \> r22 ? 1 : (r18 == r22 ? 0 : \-1)) != 0) goto L_0x000b\l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|RETURN\l|return 0.0d\l}"];
Node_5 [shape=record,label="{5\:\ 0x000b}"];
Node_6 [shape=record,label="{6\:\ 0x001e|RETURN\l|return dotProduct(r16, r18, r20, r22, r12, r14) \/ getSquaredDistanceToPoint(r16, r18, r20, r22)\l}"];
MethodNode[shape=record,label="{public static double org.osmdroid.util.Distance.getProjectionFactorToLine((r12v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_5 -> Node_6;
}

