digraph "CFG fororg.osmdroid.util.Distance.getSquaredDistanceToProjection(DDDDDDD)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARITH  (r4 I:double) = (r14 I:double) \- (r10 I:double) \l0x0002: ARITH  (r4 I:double) = (r4 I:double) * (r18 I:double) \l0x0004: ARITH  (r0 I:double) = (r10 I:double) + (r4 I:double) \l0x0006: ARITH  (r4 I:double) = (r16 I:double) \- (r12 I:double) \l0x0008: ARITH  (r4 I:double) = (r4 I:double) * (r18 I:double) \l0x000a: ARITH  (r2 I:double) = (r12 I:double) + (r4 I:double) \l0x000c: MOVE  (r10 I:?[long, double]) = (r6 I:?[long, double]) \l0x000d: MOVE  (r12 I:?[long, double]) = (r8 I:?[long, double]) \l0x000e: MOVE  (r14 I:?[long, double]) = (r0 I:?[long, double]) \l0x000f: MOVE  (r16 I:?[long, double]) = (r2 I:?[long, double]) \l0x0011: INVOKE  (r0 I:double) = \l  (r10 I:double)\l  (r12 I:double)\l  (r14 I:double)\l  (r16 I:double)\l org.osmdroid.util.Distance.getSquaredDistanceToPoint(double, double, double, double):double type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0015|0x0015: RETURN  (r0 I:double) \l}"];
MethodNode[shape=record,label="{public static double org.osmdroid.util.Distance.getSquaredDistanceToProjection((r6 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

