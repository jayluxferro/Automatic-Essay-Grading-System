digraph "CFG fororg.osmdroid.util.MapTileAreaList.size()I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r3.mList.iterator()\lr1 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:3:0x000d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:3:0x000d\l}"];
Node_2 [shape=record,label="{2\:\ 0x000b|if (r0.hasNext() == false) goto L_0x0019\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|LOOP_END\lLOOP:0: B:1:0x0007\-\>B:3:0x000d\l|int r1 = r1 + r0.next().size()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0019|RETURN\l|return r1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0019|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int org.osmdroid.util.MapTileAreaList.size((r3v0 'this' org.osmdroid.util.MapTileAreaList A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_1;
Node_5 -> Node_4;
}

