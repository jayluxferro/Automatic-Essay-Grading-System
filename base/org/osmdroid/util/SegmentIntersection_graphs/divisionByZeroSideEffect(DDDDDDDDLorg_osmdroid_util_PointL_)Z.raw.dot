digraph "CFG fororg.osmdroid.util.SegmentIntersection.divisionByZeroSideEffect(DDDDDDDDLorg\/osmdroid\/util\/PointL;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:boolean) = \l  (r17 I:double)\l  (r19 I:double)\l  (r21 I:double)\l  (r23 I:double)\l  (r25 I:double)\l  (r27 I:double)\l  (r29 I:double)\l  (r31 I:double)\l  (r33 I:org.osmdroid.util.PointL)\l org.osmdroid.util.SegmentIntersection.divisionByZeroSideEffectX(double, double, double, double, double, double, double, double, org.osmdroid.util.PointL):boolean type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: MOVE  (r0 I:?[long, double]) = (r25 I:?[long, double]) \l0x0008: MOVE  (r2 I:?[long, double]) = (r27 I:?[long, double]) \l0x000a: MOVE  (r4 I:?[long, double]) = (r29 I:?[long, double]) \l0x000c: MOVE  (r6 I:?[long, double]) = (r31 I:?[long, double]) \l0x000e: MOVE  (r8 I:?[long, double]) = (r17 I:?[long, double]) \l0x0010: MOVE  (r10 I:?[long, double]) = (r19 I:?[long, double]) \l0x0012: MOVE  (r12 I:?[long, double]) = (r21 I:?[long, double]) \l0x0014: MOVE  (r14 I:?[long, double]) = (r23 I:?[long, double]) \l0x0016: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r33 I:?[OBJECT, ARRAY]) \l0x0018: INVOKE  (r0 I:boolean) = \l  (r0 I:double)\l  (r2 I:double)\l  (r4 I:double)\l  (r6 I:double)\l  (r8 I:double)\l  (r10 I:double)\l  (r12 I:double)\l  (r14 I:double)\l  (r16 I:org.osmdroid.util.PointL)\l org.osmdroid.util.SegmentIntersection.divisionByZeroSideEffectX(double, double, double, double, double, double, double, double, org.osmdroid.util.PointL):boolean type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003f \l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|0x001e: INVOKE  (r0 I:boolean) = \l  (r17 I:double)\l  (r19 I:double)\l  (r21 I:double)\l  (r23 I:double)\l  (r25 I:double)\l  (r27 I:double)\l  (r29 I:double)\l  (r31 I:double)\l  (r33 I:org.osmdroid.util.PointL)\l org.osmdroid.util.SegmentIntersection.divisionByZeroSideEffectY(double, double, double, double, double, double, double, double, org.osmdroid.util.PointL):boolean type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|0x0022: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x003f \l}"];
Node_6 [shape=record,label="{6\:\ 0x0024|0x0024: MOVE  (r0 I:?[long, double]) = (r25 I:?[long, double]) \l0x0026: MOVE  (r2 I:?[long, double]) = (r27 I:?[long, double]) \l0x0028: MOVE  (r4 I:?[long, double]) = (r29 I:?[long, double]) \l0x002a: MOVE  (r6 I:?[long, double]) = (r31 I:?[long, double]) \l0x002c: MOVE  (r8 I:?[long, double]) = (r17 I:?[long, double]) \l0x002e: MOVE  (r10 I:?[long, double]) = (r19 I:?[long, double]) \l0x0030: MOVE  (r12 I:?[long, double]) = (r21 I:?[long, double]) \l0x0032: MOVE  (r14 I:?[long, double]) = (r23 I:?[long, double]) \l0x0034: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r33 I:?[OBJECT, ARRAY]) \l0x0036: INVOKE  (r0 I:boolean) = \l  (r0 I:double)\l  (r2 I:double)\l  (r4 I:double)\l  (r6 I:double)\l  (r8 I:double)\l  (r10 I:double)\l  (r12 I:double)\l  (r14 I:double)\l  (r16 I:org.osmdroid.util.PointL)\l org.osmdroid.util.SegmentIntersection.divisionByZeroSideEffectY(double, double, double, double, double, double, double, double, org.osmdroid.util.PointL):boolean type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x003a|0x003a: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003d \l}"];
Node_9 [shape=record,label="{9\:\ 0x003d|0x003d: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x003f|0x003f: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0040|0x0040: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean org.osmdroid.util.SegmentIntersection.divisionByZeroSideEffect((r17 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r27 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:org.osmdroid.util.PointL A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_10;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7;
Node_7 -> Node_9;
Node_7 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_11;
}

