digraph "CFG fororg.osmdroid.util.SegmentIntersection.parallelSideEffectSameX(DDDDDDDDLorg\/osmdroid\/util\/PointL;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: CMP_L  (r1 I:int) = (r27 I:double), (r31 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0006 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: RETURN  (r0 I:boolean) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: CMP_L  (r1 I:int) = (r35 I:double), (r39 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x000b \l}"];
Node_5 [shape=record,label="{5\:\ 0x000a|0x000a: RETURN  (r0 I:boolean) \l}"];
Node_6 [shape=record,label="{6\:\ 0x000b|0x000b: CMP_L  (r1 I:int) = (r27 I:double), (r35 I:double) \l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0010 \l}"];
Node_8 [shape=record,label="{8\:\ 0x000f|0x000f: RETURN  (r0 I:boolean) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0010|0x0010: MOVE  (r19 I:?[long, double]) = (r29 I:?[long, double]) \l0x0012: MOVE  (r21 I:?[long, double]) = (r33 I:?[long, double]) \l0x0014: MOVE  (r23 I:?[long, double]) = (r37 I:?[long, double]) \l0x0016: MOVE  (r25 I:?[long, double]) = (r41 I:?[long, double]) \l0x0018: INVOKE  (r19 I:double) = \l  (r19 I:double)\l  (r21 I:double)\l  (r23 I:double)\l  (r25 I:double)\l org.osmdroid.util.SegmentIntersection.middle(double, double, double, double):double type: STATIC \l0x001c: MOVE  (r0 I:?[long, double]) = (r27 I:?[long, double]) \l0x001e: MOVE  (r2 I:?[long, double]) = (r29 I:?[long, double]) \l0x0020: MOVE  (r4 I:?[long, double]) = (r31 I:?[long, double]) \l0x0022: MOVE  (r6 I:?[long, double]) = (r33 I:?[long, double]) \l0x0024: MOVE  (r8 I:?[long, double]) = (r35 I:?[long, double]) \l0x0026: MOVE  (r10 I:?[long, double]) = (r37 I:?[long, double]) \l0x0028: MOVE  (r12 I:?[long, double]) = (r39 I:?[long, double]) \l0x002a: MOVE  (r14 I:?[long, double]) = (r41 I:?[long, double]) \l0x002c: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r43 I:?[OBJECT, ARRAY]) \l0x002e: MOVE  (r17 I:?[long, double]) = (r27 I:?[long, double]) \l0x0030: INVOKE  (r0 I:boolean) = \l  (r0 I:double)\l  (r2 I:double)\l  (r4 I:double)\l  (r6 I:double)\l  (r8 I:double)\l  (r10 I:double)\l  (r12 I:double)\l  (r14 I:double)\l  (r16 I:org.osmdroid.util.PointL)\l  (r17 I:double)\l  (r19 I:double)\l org.osmdroid.util.SegmentIntersection.check(double, double, double, double, double, double, double, double, org.osmdroid.util.PointL, double, double):boolean type: STATIC \l}"];
Node_10 [shape=record,label="{10\:\ 0x0034|0x0034: RETURN  (r0 I:boolean) \l}"];
MethodNode[shape=record,label="{private static boolean org.osmdroid.util.SegmentIntersection.parallelSideEffectSameX((r27 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r29 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r31 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r33 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r35 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r37 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r39 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r41 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r43 I:org.osmdroid.util.PointL A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_9 -> Node_10;
}

