digraph "CFG fororg.osmdroid.util.MapTileList.put(IIIII)V" {
subgraph cluster_Region_307300008 {
label = "R(4:0|4|8|(3:10|(1:12)|13))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r1 = 1 \<\< r7\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|PHI: r10 \l  PHI: (r10v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r2 = (r10 \- r8) + 1 + (r10 \< r8 ? r1 : 0)\l}"];
Node_8 [shape=record,label="{8\:\ 0x0015|PHI: r11 \l  PHI: (r11v1 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|int int r10 = (r11 \- r9) + 1 + (r11 \< r9 ? r1 : 0)\lensureCapacity(getSize() + (r2 * r10))\lint r11 = 0\l}"];
subgraph cluster_LoopRegion_1113123532 {
label = "LOOP:0: (3:10|(1:12)|13)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0021|LOOP_START\lPHI: r11 \l  PHI: (r11v5 int) = (r11v4 int), (r11v6 int) binds: [B:8:0x0015, B:13:0x0036] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:9:0x0021\-\>B:13:0x0036\l|if (r11 \< r2) goto L_0x0023\l}"];
subgraph cluster_Region_1300991077 {
label = "R(3:10|(1:12)|13)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0023|int r0 = 0\l}"];
subgraph cluster_LoopRegion_1467327589 {
label = "LOOP:1: (1:12)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0024|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:10:0x0023, B:12:0x0026] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:11:0x0024\-\>B:12:0x0026\l|if (r0 \< r10) goto L_0x0026\l}"];
subgraph cluster_Region_644224130 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0026|LOOP_END\lLOOP:1: B:11:0x0024\-\>B:12:0x0026\l|put(org.osmdroid.util.MapTileIndex.getTileIndex(r7, (r8 + r11) % r1, (r9 + r0) % r1))\lr0++\l}"];
}
}
Node_13 [shape=record,label="{13\:\ 0x0036|LOOP_END\lLOOP:0: B:9:0x0021\-\>B:13:0x0036\l|r11++\l}"];
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0007}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0009}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0010}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0012}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x0014}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0039}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x0039|SYNTHETIC\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0036|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.util.MapTileList.put((r6v0 'this' org.osmdroid.util.MapTileList A[IMMUTABLE_TYPE, THIS]), (r7v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_4 -> Node_5;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_15[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_16[style=dashed];
Node_12 -> Node_11;
Node_13 -> Node_9;
Node_1 -> Node_2;
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_15 -> Node_14;
Node_16 -> Node_13;
}

