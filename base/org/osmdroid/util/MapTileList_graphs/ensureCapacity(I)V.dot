digraph "CFG fororg.osmdroid.util.MapTileList.ensureCapacity(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 != 0) goto L_0x0003\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|RETURN\l|return\l}"];
Node_2 [shape=record,label="{2\:\ 0x0003}"];
Node_3 [shape=record,label="{3\:\ 0x0005|if (r3.mTileIndices == null) goto L_0x000d\l}"];
Node_4 [shape=record,label="{4\:\ 0x0007}"];
Node_5 [shape=record,label="{5\:\ 0x000a|if (r3.mTileIndices.length \< r4) goto L_0x000d\l}"];
Node_6 [shape=record,label="{6\:\ 0x000c|RETURN\l|return\l}"];
Node_7 [shape=record,label="{7\:\ 0x000d|monitor\-enter(r3)\l}"];
Node_8 [shape=record,label="{8\:\ 0x000e|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ ?|long[] r4 = new long[r4]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|if (r3.mTileIndices == null) goto L_0x001d\l}"];
Node_11 [shape=record,label="{11\:\ 0x0014|java.lang.System.arraycopy(r3.mTileIndices, 0, r4, 0, r3.mTileIndices.length)\l}"];
Node_12 [shape=record,label="{12\:\ 0x001d|r3.mTileIndices = r4\l}"];
Node_13 [shape=record,label="{13\:\ 0x001f|monitor\-exit(r3)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0020|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ 0x0021|REMOVE\l|java.lang.Throwable r4 = move\-exception\l}"];
Node_16 [shape=record,label="{16\:\ 0x0022|REMOVE\l}"];
Node_17 [shape=record,label="{17\:\ 0x0023|REMOVE\l|throw r4\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.util.MapTileList.ensureCapacity((r3v0 'this' org.osmdroid.util.MapTileList A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_2;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_16 -> Node_17;
}

