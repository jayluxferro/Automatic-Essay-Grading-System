digraph "CFG fororg.osmdroid.util.LocationUtils.getLastKnownLocation(Landroid\/location\/LocationManager;)Landroid\/location\/Location;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST  (r7 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r7 I:android.location.Location) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: CONST_STR  (r0 I:java.lang.String) =  \"gps\" \l0x0006: INVOKE  (r0 I:android.location.Location) = \l  (r7 I:android.location.LocationManager)\l  (r0 I:java.lang.String)\l org.osmdroid.util.LocationUtils.getLastKnownLocation(android.location.LocationManager, java.lang.String):android.location.Location type: STATIC \l0x000a: CONST_STR  (r1 I:java.lang.String) =  \"network\" \l0x000c: INVOKE  (r7 I:android.location.Location) = \l  (r7 I:android.location.LocationManager)\l  (r1 I:java.lang.String)\l org.osmdroid.util.LocationUtils.getLastKnownLocation(android.location.LocationManager, java.lang.String):android.location.Location type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN  (r7 I:android.location.Location) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0016 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: RETURN  (r0 I:android.location.Location) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0016|0x0016: INVOKE  (r1 I:long) = (r7 I:android.location.Location) android.location.Location.getTime():long type: VIRTUAL \l0x001a: INVOKE  (r3 I:long) = (r0 I:android.location.Location) android.location.Location.getTime():long type: VIRTUAL \l0x001e: INVOKE  (r5 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0022: INVOKE  (r5 I:long) = (r5 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getGpsWaitTime():long type: INTERFACE \l0x0026: ARITH  (r3 I:long) = (r3 I:long) + (r5 I:long) \l0x0027: CMP_L  (r1 I:int) = (r1 I:long), (r3 I:long) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0029|0x0029: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:11:0x002c \l}"];
Node_10 [shape=record,label="{10\:\ 0x002b|0x002b: RETURN  (r7 I:android.location.Location) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|0x002c: RETURN  (r0 I:android.location.Location) \l}"];
MethodNode[shape=record,label="{public static android.location.Location org.osmdroid.util.LocationUtils.getLastKnownLocation((r7 I:android.location.LocationManager A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_3;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
}

