digraph "CFG fororg.osmdroid.SensorEventListenerProxy.startListening(Landroid\/hardware\/SensorEventListener;II)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:android.hardware.SensorManager) = (r1 I:org.osmdroid.SensorEventListenerProxy) org.osmdroid.SensorEventListenerProxy.mSensorManager android.hardware.SensorManager \l0x0002: INVOKE  (r3 I:android.hardware.Sensor) = (r0 I:android.hardware.SensorManager), (r3 I:int) android.hardware.SensorManager.getDefaultSensor(int):android.hardware.Sensor type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN  (r2 I:boolean) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: IPUT  \l  (r2 I:android.hardware.SensorEventListener)\l  (r1 I:org.osmdroid.SensorEventListenerProxy)\l org.osmdroid.SensorEventListenerProxy.mListener android.hardware.SensorEventListener \l0x000c: IGET  (r2 I:android.hardware.SensorManager) = (r1 I:org.osmdroid.SensorEventListenerProxy) org.osmdroid.SensorEventListenerProxy.mSensorManager android.hardware.SensorManager \l0x000e: INVOKE  (r2 I:boolean) = \l  (r2 I:android.hardware.SensorManager)\l  (r1 I:android.hardware.SensorEventListener)\l  (r3 I:android.hardware.Sensor)\l  (r4 I:int)\l android.hardware.SensorManager.registerListener(android.hardware.SensorEventListener, android.hardware.Sensor, int):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.osmdroid.SensorEventListenerProxy.startListening((r1 'this' I:org.osmdroid.SensorEventListenerProxy A[IMMUTABLE_TYPE, THIS]), (r2 I:android.hardware.SensorEventListener A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

