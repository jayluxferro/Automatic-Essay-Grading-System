digraph "CFG fororg.osmdroid.mapsforge.MapsForgeTileSource.\<init\>(Ljava\/lang\/String;III[Ljava\/io\/File;Lorg\/mapsforge\/map\/rendertheme\/XmlRenderTheme;Lorg\/mapsforge\/map\/datastore\/MultiMapDataStore$DataPolicy;Lorg\/mapsforge\/map\/layer\/hills\/HillsRenderConfig;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x0002: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r21 I:?[OBJECT, ARRAY]) \l0x0004: CONST_STR  (r5 I:java.lang.String) =  \".png\" \l0x0006: CONST_STR  (r6 I:java.lang.String) =  \"Â© OpenStreetMap contributors\" \l0x0008: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r16 I:?[OBJECT, ARRAY]) \l0x000a: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r17 I:?[OBJECT, ARRAY]) \l0x000c: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0010: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase)\l  (r1 I:java.lang.String)\l  (r2 I:int)\l  (r3 I:int)\l  (r4 I:int)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l org.osmdroid.tileprovider.tilesource.BitmapTileSourceBase.\<init\>(java.lang.String, int, int, int, java.lang.String, java.lang.String):void type: DIRECT \l0x0015: NEW_INSTANCE  (r0 I:org.mapsforge.map.model.DisplayModel) =  org.mapsforge.map.model.DisplayModel \l0x0017: INVOKE  (r0 I:org.mapsforge.map.model.DisplayModel) org.mapsforge.map.model.DisplayModel.\<init\>():void type: DIRECT \l0x001a: IPUT  \l  (r0 I:org.mapsforge.map.model.DisplayModel)\l  (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource)\l org.osmdroid.mapsforge.MapsForgeTileSource.model org.mapsforge.map.model.DisplayModel \l0x001c: INVOKE  (r0 I:float) =  org.mapsforge.map.model.DisplayModel.getDefaultUserScaleFactor():float type: STATIC \l0x0020: IPUT  \l  (r0 I:float)\l  (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource)\l org.osmdroid.mapsforge.MapsForgeTileSource.scale float \l0x0022: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0023: IPUT  \l  (r0 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture)\l  (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource)\l org.osmdroid.mapsforge.MapsForgeTileSource.theme org.mapsforge.map.rendertheme.rule.RenderThemeFuture \l0x0025: IPUT  \l  (r0 I:org.mapsforge.map.rendertheme.XmlRenderTheme)\l  (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource)\l org.osmdroid.mapsforge.MapsForgeTileSource.mXmlRenderTheme org.mapsforge.map.rendertheme.XmlRenderTheme \l0x0027: NEW_INSTANCE  (r0 I:org.mapsforge.map.datastore.MultiMapDataStore) =  org.mapsforge.map.datastore.MultiMapDataStore \l0x0029: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r23 I:?[OBJECT, ARRAY]) \l0x002b: INVOKE  \l  (r0 I:org.mapsforge.map.datastore.MultiMapDataStore)\l  (r1 I:org.mapsforge.map.datastore.MultiMapDataStore$DataPolicy)\l org.mapsforge.map.datastore.MultiMapDataStore.\<init\>(org.mapsforge.map.datastore.MultiMapDataStore$DataPolicy):void type: DIRECT \l0x002e: IPUT  \l  (r0 I:org.mapsforge.map.datastore.MultiMapDataStore)\l  (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource)\l org.osmdroid.mapsforge.MapsForgeTileSource.mapDatabase org.mapsforge.map.datastore.MultiMapDataStore \l0x0030: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0031: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0032|0x0032: ARRAY_LENGTH  (r2 I:int) = (r8 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0033|0x0033: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:4:0x0044 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0035|0x0035: IGET  (r2 I:org.mapsforge.map.datastore.MultiMapDataStore) = (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource) org.osmdroid.mapsforge.MapsForgeTileSource.mapDatabase org.mapsforge.map.datastore.MultiMapDataStore \l0x0037: NEW_INSTANCE  (r3 I:org.mapsforge.map.reader.MapFile) =  org.mapsforge.map.reader.MapFile \l0x0039: AGET  (r4 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l0x003b: INVOKE  \l  (r3 I:org.mapsforge.map.reader.MapFile)\l  (r4 I:java.io.File)\l org.mapsforge.map.reader.MapFile.\<init\>(java.io.File):void type: DIRECT \l0x003e: INVOKE  \l  (r2 I:org.mapsforge.map.datastore.MultiMapDataStore)\l  (r3 I:org.mapsforge.map.datastore.MapDataStore)\l  (r0 I:boolean)\l  (r0 I:boolean)\l org.mapsforge.map.datastore.MultiMapDataStore.addMapDataStore(org.mapsforge.map.datastore.MapDataStore, boolean, boolean):void type: VIRTUAL \l0x0041: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0044|0x0044: SGET  (r0 I:org.mapsforge.map.android.graphics.AndroidGraphicFactory) =  org.mapsforge.map.android.graphics.AndroidGraphicFactory.INSTANCE org.mapsforge.map.android.graphics.AndroidGraphicFactory \l}"];
Node_5 [shape=record,label="{5\:\ 0x0046|0x0046: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:16:0x00bc \l}"];
Node_6 [shape=record,label="{6\:\ 0x0048|0x0048: NEW_INSTANCE  (r11 I:org.mapsforge.map.layer.cache.InMemoryTileCache) =  org.mapsforge.map.layer.cache.InMemoryTileCache \l0x004a: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x004b: INVOKE  \l  (r11 I:org.mapsforge.map.layer.cache.InMemoryTileCache)\l  (r0 I:int)\l org.mapsforge.map.layer.cache.InMemoryTileCache.\<init\>(int):void type: DIRECT \l0x004e: NEW_INSTANCE  (r0 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) =  org.mapsforge.map.layer.renderer.DatabaseRenderer \l0x0050: IGET  (r9 I:org.mapsforge.map.datastore.MultiMapDataStore) = (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource) org.osmdroid.mapsforge.MapsForgeTileSource.mapDatabase org.mapsforge.map.datastore.MultiMapDataStore \l0x0052: SGET  (r10 I:org.mapsforge.map.android.graphics.AndroidGraphicFactory) =  org.mapsforge.map.android.graphics.AndroidGraphicFactory.INSTANCE org.mapsforge.map.android.graphics.AndroidGraphicFactory \l0x0054: NEW_INSTANCE  (r12 I:org.mapsforge.map.layer.labels.TileBasedLabelStore) =  org.mapsforge.map.layer.labels.TileBasedLabelStore \l0x0056: INVOKE  (r1 I:int) = (r11 I:org.mapsforge.map.layer.cache.InMemoryTileCache) org.mapsforge.map.layer.cache.InMemoryTileCache.getCapacityFirstLevel():int type: VIRTUAL \l0x005a: INVOKE  \l  (r12 I:org.mapsforge.map.layer.labels.TileBasedLabelStore)\l  (r1 I:int)\l org.mapsforge.map.layer.labels.TileBasedLabelStore.\<init\>(int):void type: DIRECT \l0x005d: CONST  (r13 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x005e: CONST  (r14 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x005f: MOVE  (r8 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l0x0060: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r24 I:?[OBJECT, ARRAY]) \l0x0062: INVOKE  \l  (r8 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l  (r9 I:org.mapsforge.map.datastore.MapDataStore)\l  (r10 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r11 I:org.mapsforge.map.layer.cache.TileCache)\l  (r12 I:org.mapsforge.map.layer.labels.TileBasedLabelStore)\l  (r13 I:boolean)\l  (r14 I:boolean)\l  (r15 I:org.mapsforge.map.layer.hills.HillsRenderConfig)\l org.mapsforge.map.layer.renderer.DatabaseRenderer.\<init\>(org.mapsforge.map.datastore.MapDataStore, org.mapsforge.core.graphics.GraphicFactory, org.mapsforge.map.layer.cache.TileCache, org.mapsforge.map.layer.labels.TileBasedLabelStore, boolean, boolean, org.mapsforge.map.layer.hills.HillsRenderConfig):void type: DIRECT \l0x0065: IPUT  \l  (r0 I:org.mapsforge.map.layer.renderer.DatabaseRenderer)\l  (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource)\l org.osmdroid.mapsforge.MapsForgeTileSource.renderer org.mapsforge.map.layer.renderer.DatabaseRenderer \l0x0067: SGET  (r0 I:int) =  org.osmdroid.mapsforge.MapsForgeTileSource.MIN_ZOOM int \l0x0069: IGET  (r1 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) = (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource) org.osmdroid.mapsforge.MapsForgeTileSource.renderer org.mapsforge.map.layer.renderer.DatabaseRenderer \l0x006b: INVOKE  (r1 I:byte) = (r1 I:org.mapsforge.map.layer.renderer.DatabaseRenderer) org.mapsforge.map.layer.renderer.DatabaseRenderer.getZoomLevelMax():byte type: VIRTUAL \l0x006f: CONST_STR  (r2 I:java.lang.String) =  \"OsmDroid\" \l0x0071: NEW_INSTANCE  (r3 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0073: INVOKE  (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0076: CONST_STR  (r4 I:java.lang.String) =  \"min=\" \l0x0078: INVOKE  (r3 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x007b: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x007e: CONST_STR  (r0 I:java.lang.String) =  \" max=\" \l0x0080: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0083: INVOKE  (r3 I:java.lang.StringBuilder), (r1 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0086: CONST_STR  (r0 I:java.lang.String) =  \" tilesize=\" \l0x0088: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x008b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r20 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x008d: INVOKE  (r3 I:java.lang.StringBuilder), (r0 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0090: INVOKE  (r0 I:java.lang.String) = (r3 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0094: INVOKE  (r2 I:java.lang.String), (r0 I:java.lang.String) android.util.Log.d(java.lang.String, java.lang.String):int type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x0097|0x0097: IF  (r22 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x009c \l}"];
Node_8 [shape=record,label="{8\:\ 0x0099|0x0099: SGET  (r0 I:org.mapsforge.map.rendertheme.InternalRenderTheme) =  org.mapsforge.map.rendertheme.InternalRenderTheme.OSMARENDER org.mapsforge.map.rendertheme.InternalRenderTheme \l}"];
Node_9 [shape=record,label="{9\:\ 0x009c|0x009c: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r22 I:?[OBJECT, ARRAY]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x009e|0x009e: IGET  (r1 I:org.mapsforge.map.rendertheme.XmlRenderTheme) = (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource) org.osmdroid.mapsforge.MapsForgeTileSource.mXmlRenderTheme org.mapsforge.map.rendertheme.XmlRenderTheme \l}"];
Node_11 [shape=record,label="{11\:\ 0x00a0|0x00a0: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x00a6 \l}"];
Node_12 [shape=record,label="{12\:\ 0x00a2|0x00a2: IGET  (r1 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture) = (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource) org.osmdroid.mapsforge.MapsForgeTileSource.theme org.mapsforge.map.rendertheme.rule.RenderThemeFuture \l}"];
Node_13 [shape=record,label="{13\:\ 0x00a4|0x00a4: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x00bb \l}"];
Node_14 [shape=record,label="{14\:\ 0x00a6|0x00a6: NEW_INSTANCE  (r1 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture) =  org.mapsforge.map.rendertheme.rule.RenderThemeFuture \l0x00a8: SGET  (r2 I:org.mapsforge.map.android.graphics.AndroidGraphicFactory) =  org.mapsforge.map.android.graphics.AndroidGraphicFactory.INSTANCE org.mapsforge.map.android.graphics.AndroidGraphicFactory \l0x00aa: IGET  (r3 I:org.mapsforge.map.model.DisplayModel) = (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource) org.osmdroid.mapsforge.MapsForgeTileSource.model org.mapsforge.map.model.DisplayModel \l0x00ac: INVOKE  \l  (r1 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture)\l  (r2 I:org.mapsforge.core.graphics.GraphicFactory)\l  (r0 I:org.mapsforge.map.rendertheme.XmlRenderTheme)\l  (r3 I:org.mapsforge.map.model.DisplayModel)\l org.mapsforge.map.rendertheme.rule.RenderThemeFuture.\<init\>(org.mapsforge.core.graphics.GraphicFactory, org.mapsforge.map.rendertheme.XmlRenderTheme, org.mapsforge.map.model.DisplayModel):void type: DIRECT \l0x00af: IPUT  \l  (r1 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture)\l  (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource)\l org.osmdroid.mapsforge.MapsForgeTileSource.theme org.mapsforge.map.rendertheme.rule.RenderThemeFuture \l0x00b1: NEW_INSTANCE  (r0 I:java.lang.Thread) =  java.lang.Thread \l0x00b3: IGET  (r1 I:org.mapsforge.map.rendertheme.rule.RenderThemeFuture) = (r7 I:org.osmdroid.mapsforge.MapsForgeTileSource) org.osmdroid.mapsforge.MapsForgeTileSource.theme org.mapsforge.map.rendertheme.rule.RenderThemeFuture \l0x00b5: INVOKE  (r0 I:java.lang.Thread), (r1 I:java.lang.Runnable) java.lang.Thread.\<init\>(java.lang.Runnable):void type: DIRECT \l0x00b8: INVOKE  (r0 I:java.lang.Thread) java.lang.Thread.start():void type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x00bb|0x00bb: RETURN   \l}"];
Node_16 [shape=record,label="{16\:\ 0x00bc|0x00bc: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x00be: CONST_STR  (r1 I:java.lang.String) =  \"Must call MapsForgeTileSource.createInstance(context.getApplication()); once before MapsForgeTileSource.createFromFiles().\" \l0x00c0: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x00c3|0x00c3: THROW  (r0 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{protected void org.osmdroid.mapsforge.MapsForgeTileSource.\<init\>((r16 'this' I:org.osmdroid.mapsforge.MapsForgeTileSource A[IMMUTABLE_TYPE, THIS]), (r17 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:java.io.File[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:org.mapsforge.map.rendertheme.XmlRenderTheme A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:org.mapsforge.map.datastore.MultiMapDataStore$DataPolicy A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r24 I:org.mapsforge.map.layer.hills.HillsRenderConfig A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_16 -> Node_17;
}

