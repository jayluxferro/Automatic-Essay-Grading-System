digraph "CFG fororg.osmdroid.mapsforge.MapsForgeTileSource.renderTile(J)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|monitor\-enter(r8)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ Exception \-\> 0x0046 \}\l|org.mapsforge.core.model.Tile r1 = new org.mapsforge.core.model.Tile(org.osmdroid.util.MapTileIndex.getX(r9), org.osmdroid.util.MapTileIndex.getY(r9), (byte) org.osmdroid.util.MapTileIndex.getZoom(r9), 256)     \/\/ Catch:\{ Exception \-\> 0x0046 \}\lr8.model.setFixedTileSize(256)     \/\/ Catch:\{ Exception \-\> 0x0046 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|if (r8.mapDatabase != null) goto L_0x0021\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e}"];
Node_5 [shape=record,label="{5\:\ 0x001f|monitor\-exit(r8)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0020|RETURN\l|return null\l}"];
Node_7 [shape=record,label="{7\:\ 0x0021|SYNTHETIC\lSplitter:B:7:0x0021\l}"];
Node_8 [shape=record,label="{8\:\ ?|Catch:\{ Exception \-\> 0x0046 \}\lSplitter:B:7:0x0021\l|org.mapsforge.map.layer.renderer.RendererJob r0 = new org.mapsforge.map.layer.renderer.RendererJob(r1, r8.mapDatabase, r8.theme, r8.model, r8.scale, false, false)     \/\/ Catch:\{ Exception \-\> 0x0046 \}\lorg.mapsforge.map.android.graphics.AndroidTileBitmap r9 = (org.mapsforge.map.android.graphics.AndroidTileBitmap) r8.renderer.executeJob(r0)     \/\/ Catch:\{ Exception \-\> 0x0046 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x0039|Catch:\{ Exception \-\> 0x0046 \}\l|if (r9 == null) goto L_0x004e     \/\/ Catch:\{ Exception \-\> 0x0046 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x003b|Catch:\{ Exception \-\> 0x0046 \}\l|android.graphics.drawable.BitmapDrawable r0 = new android.graphics.drawable.BitmapDrawable(org.mapsforge.map.android.graphics.AndroidGraphicFactory.getBitmap(r9))     \/\/ Catch:\{ Exception \-\> 0x0046 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0044|monitor\-exit(r8)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0045|RETURN\l|return r0\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|ExcHandler: Exception (r9v8 'e' java.lang.Exception A[CUSTOM_DECLARE])\lSplitter:B:7:0x0021\l|java.lang.Exception r9 = move\-exception\l}"];
Node_14 [shape=record,label="{14\:\ 0x0047}"];
Node_15 [shape=record,label="{15\:\ 0x004b|SYNTHETIC\lSplitter:B:15:0x004b\l}"];
Node_16 [shape=record,label="{16\:\ ?|Catch:\{ Exception \-\> 0x0046 \}\lSplitter:B:15:0x004b\l|android.util.Log.d(org.osmdroid.api.IMapView.LOGTAG, \"###################### Mapsforge tile generation failed\", r9)     \/\/ Catch:\{ Exception \-\> 0x0046 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x004e|Catch:\{ Exception \-\> 0x0046 \}\l|android.graphics.Bitmap r9 = android.graphics.Bitmap.createBitmap(256, 256, android.graphics.Bitmap.Config.RGB_565)     \/\/ Catch:\{ Exception \-\> 0x0046 \}\lr9.eraseColor(android.support.p000v4.view.InputDeviceCompat.SOURCE_ANY)     \/\/ Catch:\{ Exception \-\> 0x0046 \}\landroid.graphics.drawable.BitmapDrawable r10 = new android.graphics.drawable.BitmapDrawable(r9)     \/\/ Catch:\{ Exception \-\> 0x0046 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x005e|monitor\-exit(r8)\l}"];
Node_19 [shape=record,label="{19\:\ 0x005f|RETURN\l|return r10\l}"];
Node_20 [shape=record,label="{20\:\ 0x0060|REMOVE\l|java.lang.Throwable r9 = move\-exception\l}"];
Node_21 [shape=record,label="{21\:\ 0x0061|REMOVE\l}"];
Node_22 [shape=record,label="{22\:\ 0x0062|REMOVE\l|throw r9\l}"];
MethodNode[shape=record,label="{public synchronized android.graphics.drawable.Drawable org.osmdroid.mapsforge.MapsForgeTileSource.renderTile((r8v0 'this' org.osmdroid.mapsforge.MapsForgeTileSource A[IMMUTABLE_TYPE, THIS]), (r9v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_20;
Node_2 -> Node_3;
Node_2 -> Node_20;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_20;
Node_16 -> Node_17;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_20 -> Node_21;
Node_21 -> Node_22;
}

