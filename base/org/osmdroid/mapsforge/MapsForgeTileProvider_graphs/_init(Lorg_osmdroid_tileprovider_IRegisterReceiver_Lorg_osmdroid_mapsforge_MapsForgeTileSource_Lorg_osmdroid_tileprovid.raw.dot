digraph "CFG fororg.osmdroid.mapsforge.MapsForgeTileProvider.\<init\>(Lorg\/osmdroid\/tileprovider\/IRegisterReceiver;Lorg\/osmdroid\/mapsforge\/MapsForgeTileSource;Lorg\/osmdroid\/tileprovider\/modules\/IFilesystemCache;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r2 I:org.osmdroid.tileprovider.MapTileProviderArray)\l  (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l  (r3 I:org.osmdroid.tileprovider.IRegisterReceiver)\l org.osmdroid.tileprovider.MapTileProviderArray.\<init\>(org.osmdroid.tileprovider.tilesource.ITileSource, org.osmdroid.tileprovider.IRegisterReceiver):void type: DIRECT \l0x0003: NEW_INSTANCE  (r0 I:org.osmdroid.tileprovider.modules.MapTileFilesystemProvider) =  org.osmdroid.tileprovider.modules.MapTileFilesystemProvider \l0x0005: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.modules.MapTileFilesystemProvider)\l  (r3 I:org.osmdroid.tileprovider.IRegisterReceiver)\l  (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l org.osmdroid.tileprovider.modules.MapTileFilesystemProvider.\<init\>(org.osmdroid.tileprovider.IRegisterReceiver, org.osmdroid.tileprovider.tilesource.ITileSource):void type: DIRECT \l0x0008: IGET  (r1 I:java.util.List) = (r2 I:org.osmdroid.mapsforge.MapsForgeTileProvider) org.osmdroid.mapsforge.MapsForgeTileProvider.mTileProviderList java.util.List \l0x000a: INVOKE  (r1 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x000d: NEW_INSTANCE  (r0 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider) =  org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider \l0x000f: INVOKE  \l  (r0 I:org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider)\l  (r3 I:org.osmdroid.tileprovider.IRegisterReceiver)\l  (r4 I:org.osmdroid.tileprovider.tilesource.ITileSource)\l org.osmdroid.tileprovider.modules.MapTileFileArchiveProvider.\<init\>(org.osmdroid.tileprovider.IRegisterReceiver, org.osmdroid.tileprovider.tilesource.ITileSource):void type: DIRECT \l0x0012: IGET  (r4 I:java.util.List) = (r2 I:org.osmdroid.mapsforge.MapsForgeTileProvider) org.osmdroid.mapsforge.MapsForgeTileProvider.mTileProviderList java.util.List \l0x0014: INVOKE  (r4 I:java.util.List), (r0 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|0x0017: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|0x0019: IPUT  \l  (r5 I:org.osmdroid.tileprovider.modules.IFilesystemCache)\l  (r2 I:org.osmdroid.mapsforge.MapsForgeTileProvider)\l org.osmdroid.mapsforge.MapsForgeTileProvider.tileWriter org.osmdroid.tileprovider.modules.IFilesystemCache \l}"];
Node_3 [shape=record,label="{3\:\ 0x001c|0x001c: NEW_INSTANCE  (r4 I:org.osmdroid.tileprovider.modules.SqlTileWriter) =  org.osmdroid.tileprovider.modules.SqlTileWriter \l0x001e: INVOKE  (r4 I:org.osmdroid.tileprovider.modules.SqlTileWriter) org.osmdroid.tileprovider.modules.SqlTileWriter.\<init\>():void type: DIRECT \l0x0021: IPUT  \l  (r4 I:org.osmdroid.tileprovider.modules.IFilesystemCache)\l  (r2 I:org.osmdroid.mapsforge.MapsForgeTileProvider)\l org.osmdroid.mapsforge.MapsForgeTileProvider.tileWriter org.osmdroid.tileprovider.modules.IFilesystemCache \l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|0x0023: NEW_INSTANCE  (r4 I:org.osmdroid.mapsforge.MapsForgeTileModuleProvider) =  org.osmdroid.mapsforge.MapsForgeTileModuleProvider \l0x0025: INVOKE  (r5 I:org.osmdroid.tileprovider.tilesource.ITileSource) = (r2 I:org.osmdroid.mapsforge.MapsForgeTileProvider) org.osmdroid.mapsforge.MapsForgeTileProvider.getTileSource():org.osmdroid.tileprovider.tilesource.ITileSource type: VIRTUAL \l0x0029: CHECK_CAST  (r5 I:org.osmdroid.mapsforge.MapsForgeTileSource) = (org.osmdroid.mapsforge.MapsForgeTileSource) (r5 I:?[OBJECT, ARRAY]) \l0x002b: IGET  (r0 I:org.osmdroid.tileprovider.modules.IFilesystemCache) = (r2 I:org.osmdroid.mapsforge.MapsForgeTileProvider) org.osmdroid.mapsforge.MapsForgeTileProvider.tileWriter org.osmdroid.tileprovider.modules.IFilesystemCache \l0x002d: INVOKE  \l  (r4 I:org.osmdroid.mapsforge.MapsForgeTileModuleProvider)\l  (r3 I:org.osmdroid.tileprovider.IRegisterReceiver)\l  (r5 I:org.osmdroid.mapsforge.MapsForgeTileSource)\l  (r0 I:org.osmdroid.tileprovider.modules.IFilesystemCache)\l org.osmdroid.mapsforge.MapsForgeTileModuleProvider.\<init\>(org.osmdroid.tileprovider.IRegisterReceiver, org.osmdroid.mapsforge.MapsForgeTileSource, org.osmdroid.tileprovider.modules.IFilesystemCache):void type: DIRECT \l0x0030: IGET  (r3 I:java.util.List) = (r2 I:org.osmdroid.mapsforge.MapsForgeTileProvider) org.osmdroid.mapsforge.MapsForgeTileProvider.mTileProviderList java.util.List \l0x0032: INVOKE  (r3 I:java.util.List), (r4 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0035|0x0035: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.mapsforge.MapsForgeTileProvider.\<init\>((r2 'this' I:org.osmdroid.mapsforge.MapsForgeTileProvider A[IMMUTABLE_TYPE, THIS]), (r3 I:org.osmdroid.tileprovider.IRegisterReceiver A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.osmdroid.mapsforge.MapsForgeTileSource A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.osmdroid.tileprovider.modules.IFilesystemCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

