digraph "CFG fororg.osmdroid.gpkg.overlay.features.SphericalUtil.computeHeading(Lorg\/osmdroid\/api\/IGeoPoint;Lorg\/osmdroid\/api\/IGeoPoint;)D" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double r0 = java.lang.Math.toRadians(r10.getLatitude())\ldouble r2 = java.lang.Math.toRadians(r10.getLongitude())\ldouble r4 = java.lang.Math.toRadians(r11.getLatitude())\ldouble r10 = java.lang.Math.toRadians(r11.getLongitude()) \- r2\l}"];
Node_1 [shape=record,label="{1\:\ 0x005c|RETURN\l|return wrap(java.lang.Math.toDegrees(java.lang.Math.atan2(java.lang.Math.sin(r10) * java.lang.Math.cos(r4), (java.lang.Math.cos(r0) * java.lang.Math.sin(r4)) \- ((java.lang.Math.sin(r0) * java.lang.Math.cos(r4)) * java.lang.Math.cos(r10)))), \-180.0d, 180.0d)\l}"];
MethodNode[shape=record,label="{public static double org.osmdroid.gpkg.overlay.features.SphericalUtil.computeHeading((r10v0 org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

