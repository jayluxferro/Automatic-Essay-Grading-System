digraph "CFG fororg.osmdroid.gpkg.overlay.features.SphericalUtil.computeOffsetOrigin(Lorg\/osmdroid\/api\/IGeoPoint;DD)Lorg\/osmdroid\/api\/IGeoPoint;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:double) = (r25 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x0004: CONST  (r2 I:?[long, double]) = \l  (4708598829799178240(0x41584db040000000, double:6371009.0) ?[long, double])\l \l0x0009: ARITH  (r2 I:double) = (r23 I:double) \/ (r2 I:double) \l0x000b: INVOKE  (r4 I:double) = (r2 I:double) java.lang.Math.cos(double):double type: STATIC \l0x000f: INVOKE  (r6 I:double) = (r2 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0013: INVOKE  (r8 I:double) = (r0 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0017: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x0019: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.sin(double):double type: STATIC \l0x001d: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0021: ARITH  (r2 I:double) = (r2 I:double) * (r0 I:double) \l0x0023: INVOKE  (r0 I:double) = (r22 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x0027: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x002b: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x002f: ARITH  (r8 I:double) = (r4 I:double) * (r4 I:double) \l0x0031: ARITH  (r10 I:double) = (r6 I:double) * (r6 I:double) \l0x0033: ARITH  (r12 I:double) = (r10 I:double) * (r8 I:double) \l0x0035: ARITH  (r14 I:double) = (r8 I:double) * (r8 I:double) \l0x0037: ARITH  (r12 I:double) = (r12 I:double) + (r14 I:double) \l0x0038: ARITH  (r14 I:double) = (r8 I:double) * (r0 I:double) \l0x003a: ARITH  (r14 I:double) = (r14 I:double) * (r0 I:double) \l0x003c: ARITH  (r12 I:double) = (r12 I:double) \- (r14 I:double) \l0x003d: CONST  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003e: CONST  (r15 I:?[long, double]) = (0 ?[long, double]) \l0x0040: CMP_G  (r15 I:int) = (r12 I:double), (r15 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0042|0x0042: IF  (r15 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x0045 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0044|0x0044: RETURN  (r14 I:org.osmdroid.api.IGeoPoint) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0045|0x0045: ARITH  (r15 I:double) = (r6 I:double) * (r0 I:double) \l0x0047: INVOKE  (r17 I:double) = (r12 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x004b: ARITH  (r17 I:double) = (r15 I:double) + (r17 I:double) \l0x004d: ARITH  (r8 I:double) = (r8 I:double) + (r10 I:double) \l0x004e: ARITH  (r10 I:double) = (r17 I:double) \/ (r8 I:double) \l0x0050: ARITH  (r17 I:double) = (r6 I:double) * (r10 I:double) \l0x0052: ARITH  (r0 I:double) = (r0 I:double) \- (r17 I:double) \l0x0054: ARITH  (r0 I:double) = (r0 I:double) \/ (r4 I:double) \l0x0055: INVOKE  (r10 I:double) = (r0 I:double), (r10 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x0059: CONST  (r17 I:?[long, double]) = \l  (4609753056924675352(0x3ff921fb54442d18, double:1.5707963267948966) ?[long, double])\l \l0x005e: CONST  (r19 I:?[long, double]) = \l  (\-4613618979930100456(0xbff921fb54442d18, double:\-1.5707963267948966) ?[long, double])\l \l0x0063: CMP_G  (r21 I:int) = (r10 I:double), (r19 I:double) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0065|0x0065: IF  (r21 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:7:0x006b \l}"];
Node_5 [shape=record,label="{5\:\ 0x0067|0x0067: CMP_L  (r21 I:int) = (r10 I:double), (r17 I:double) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0069|0x0069: IF  (r21 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:8:0x0076 \l}"];
Node_7 [shape=record,label="{7\:\ 0x006b|0x006b: INVOKE  (r10 I:double) = (r12 I:double) java.lang.Math.sqrt(double):double type: STATIC \l0x006f: ARITH  (r15 I:double) = (r15 I:double) \- (r10 I:double) \l0x0070: ARITH  (r8 I:double) = (r15 I:double) \/ (r8 I:double) \l0x0072: INVOKE  (r10 I:double) = (r0 I:double), (r8 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l}"];
Node_8 [shape=record,label="{8\:\ 0x0076|0x0076: CMP_G  (r0 I:int) = (r10 I:double), (r19 I:double) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0078|0x0078: IF  (r0 I:?[int, byte, short, char]) \< (0 ?[int, byte, short, char])  \-\> B:15:0x00a7 \l}"];
Node_10 [shape=record,label="{10\:\ 0x007a|0x007a: CMP_L  (r0 I:int) = (r10 I:double), (r17 I:double) \l}"];
Node_11 [shape=record,label="{11\:\ 0x007c|0x007c: IF  (r0 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:13:0x007f \l}"];
Node_13 [shape=record,label="{13\:\ 0x007f|0x007f: INVOKE  (r0 I:double) = (r22 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x0083: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x0087: INVOKE  (r8 I:double) = (r10 I:double) java.lang.Math.cos(double):double type: STATIC \l0x008b: ARITH  (r4 I:double) = (r4 I:double) * (r8 I:double) \l0x008d: INVOKE  (r8 I:double) = (r10 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0091: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x0093: ARITH  (r4 I:double) = (r4 I:double) \- (r6 I:double) \l0x0094: INVOKE  (r2 I:double) = (r2 I:double), (r4 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x0098: ARITH  (r0 I:double) = (r0 I:double) \- (r2 I:double) \l0x0099: NEW_INSTANCE  (r2 I:org.osmdroid.util.GeoPoint) =  org.osmdroid.util.GeoPoint \l0x009b: INVOKE  (r3 I:double) = (r10 I:double) java.lang.Math.toDegrees(double):double type: STATIC \l0x009f: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toDegrees(double):double type: STATIC \l0x00a3: INVOKE  \l  (r2 I:org.osmdroid.util.GeoPoint)\l  (r3 I:double)\l  (r0 I:double)\l org.osmdroid.util.GeoPoint.\<init\>(double, double):void type: DIRECT \l}"];
Node_14 [shape=record,label="{14\:\ 0x00a6|0x00a6: RETURN  (r2 I:org.osmdroid.api.IGeoPoint) \l}"];
Node_15 [shape=record,label="{15\:\ 0x00a7|0x00a7: RETURN  (r14 I:org.osmdroid.api.IGeoPoint) \l}"];
MethodNode[shape=record,label="{public static org.osmdroid.api.IGeoPoint org.osmdroid.gpkg.overlay.features.SphericalUtil.computeOffsetOrigin((r22 I:org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r23 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r25 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_15;
Node_10 -> Node_11;
Node_11 -> Node_13;
Node_11 -> Node_15[style=dashed];
Node_13 -> Node_14;
}

