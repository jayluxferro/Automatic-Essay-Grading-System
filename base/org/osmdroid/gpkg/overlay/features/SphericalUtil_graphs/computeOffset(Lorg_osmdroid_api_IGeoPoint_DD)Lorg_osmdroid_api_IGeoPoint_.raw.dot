digraph "CFG fororg.osmdroid.gpkg.overlay.features.SphericalUtil.computeOffset(Lorg\/osmdroid\/api\/IGeoPoint;DD)Lorg\/osmdroid\/api\/IGeoPoint;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[long, double]) = \l  (4708598829799178240(0x41584db040000000, double:6371009.0) ?[long, double])\l \l0x0005: ARITH  (r11 I:double) = (r11 I:double) \/ (r0 I:double) \l0x0006: INVOKE  (r13 I:double) = (r13 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x000a: INVOKE  (r0 I:double) = (r10 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLatitude():double type: INTERFACE \l0x000e: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x0012: INVOKE  (r2 I:double) = (r10 I:org.osmdroid.api.IGeoPoint) org.osmdroid.api.IGeoPoint.getLongitude():double type: INTERFACE \l0x0016: INVOKE  (r2 I:double) = (r2 I:double) java.lang.Math.toRadians(double):double type: STATIC \l0x001a: INVOKE  (r4 I:double) = (r11 I:double) java.lang.Math.cos(double):double type: STATIC \l0x001e: INVOKE  (r10 I:double) = (r11 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0022: INVOKE  (r6 I:double) = (r0 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0026: INVOKE  (r0 I:double) = (r0 I:double) java.lang.Math.cos(double):double type: STATIC \l0x002a: ARITH  (r8 I:double) = (r4 I:double) * (r6 I:double) \l0x002c: ARITH  (r10 I:double) = (r10 I:double) * (r0 I:double) \l0x002e: INVOKE  (r0 I:double) = (r13 I:double) java.lang.Math.cos(double):double type: STATIC \l0x0032: ARITH  (r0 I:double) = (r0 I:double) * (r10 I:double) \l0x0034: ARITH  (r8 I:double) = (r8 I:double) + (r0 I:double) \l0x0035: INVOKE  (r12 I:double) = (r13 I:double) java.lang.Math.sin(double):double type: STATIC \l0x0039: ARITH  (r10 I:double) = (r10 I:double) * (r12 I:double) \l0x003b: ARITH  (r6 I:double) = (r6 I:double) * (r8 I:double) \l0x003d: ARITH  (r4 I:double) = (r4 I:double) \- (r6 I:double) \l0x003e: INVOKE  (r10 I:double) = (r10 I:double), (r4 I:double) java.lang.Math.atan2(double, double):double type: STATIC \l0x0042: NEW_INSTANCE  (r12 I:org.osmdroid.util.GeoPoint) =  org.osmdroid.util.GeoPoint \l0x0044: INVOKE  (r13 I:double) = (r8 I:double) java.lang.Math.asin(double):double type: STATIC \l0x0048: INVOKE  (r13 I:double) = (r13 I:double) java.lang.Math.toDegrees(double):double type: STATIC \l0x004c: ARITH  (r2 I:double) = (r2 I:double) + (r10 I:double) \l0x004d: INVOKE  (r10 I:double) = (r2 I:double) java.lang.Math.toDegrees(double):double type: STATIC \l0x0051: INVOKE  \l  (r12 I:org.osmdroid.util.GeoPoint)\l  (r13 I:double)\l  (r10 I:double)\l org.osmdroid.util.GeoPoint.\<init\>(double, double):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x0054|0x0054: RETURN  (r12 I:org.osmdroid.api.IGeoPoint) \l}"];
MethodNode[shape=record,label="{public static org.osmdroid.api.IGeoPoint org.osmdroid.gpkg.overlay.features.SphericalUtil.computeOffset((r10 I:org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

