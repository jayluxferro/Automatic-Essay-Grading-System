digraph "CFG fororg.osmdroid.gpkg.overlay.features.SphericalUtil.computeOffset(Lorg\/osmdroid\/api\/IGeoPoint;DD)Lorg\/osmdroid\/api\/IGeoPoint;" {
subgraph cluster_Region_956961222 {
label = "R(2:0|1)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|double double r11 = r11 \/ EARTH_RADIUS\ldouble double r13 = java.lang.Math.toRadians(r13)\ldouble double r0 = java.lang.Math.toRadians(r10.getLatitude())\ldouble double r2 = java.lang.Math.toRadians(r10.getLongitude())\ldouble double r4 = java.lang.Math.cos(r11)\ldouble double r10 = java.lang.Math.sin(r11)\ldouble double r6 = java.lang.Math.sin(r0)\ldouble double r10 = r10 * java.lang.Math.cos(r0)\ldouble double r8 = (r4 * r6) + (java.lang.Math.cos(r13) * r10)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0054|RETURN\l|return new org.osmdroid.util.GeoPoint(java.lang.Math.toDegrees(java.lang.Math.asin(r8)), java.lang.Math.toDegrees(r2 + java.lang.Math.atan2(r10 * java.lang.Math.sin(r13), r4 \- (r6 * r8))))\l}"];
}
MethodNode[shape=record,label="{public static org.osmdroid.api.IGeoPoint org.osmdroid.gpkg.overlay.features.SphericalUtil.computeOffset((r10v0 org.osmdroid.api.IGeoPoint A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

