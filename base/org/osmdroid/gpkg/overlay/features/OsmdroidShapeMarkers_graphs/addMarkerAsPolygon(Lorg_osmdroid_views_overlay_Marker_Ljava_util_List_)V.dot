digraph "CFG fororg.osmdroid.gpkg.overlay.features.OsmdroidShapeMarkers.addMarkerAsPolygon(Lorg\/osmdroid\/views\/overlay\/Marker;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.osmdroid.util.GeoPoint r0 = r10.getPosition()\lint r1 = r11.size()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r11.size() \<= 2) goto L_0x0063\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|double[] r1 = new double[r11.size()]\lr2 = 0\lr1[0] = org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r0, r11.get(0).getPosition())\lr4 = 1\lr5 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|LOOP_START\lPHI: r4 r5 \l  PHI: (r4v1 int) = (r4v0 int), (r4v4 int) binds: [B:2:0x000f, B:8:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v1 int) = (r5v0 int), (r5v2 int) binds: [B:2:0x000f, B:8:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0029\-\>B:8:0x0048\l}"];
Node_4 [shape=record,label="{4\:\ 0x002d|if (r4 \>= r11.size()) goto L_0x004b\l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|r1[r4] = org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r0, r11.get(r4).getPosition())\l}"];
Node_6 [shape=record,label="{6\:\ 0x0045|if ((r1[r4] \> r1[r5] ? 1 : (r1[r4] == r1[r5] ? 0 : \-1)) \>= 0) goto L_0x0048\l}"];
Node_7 [shape=record,label="{7\:\ 0x0047|r5 = r4\l}"];
Node_8 [shape=record,label="{8\:\ 0x0048|LOOP_END\lPHI: r5 \l  PHI: (r5v2 int) = (r5v1 int), (r5v3 int) binds: [B:23:0x0048, B:22:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0029\-\>B:8:0x0048\l|int r4 = r4 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x004b|if (r5 \<= 0) goto L_0x0050\l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|int r0 = r5 + \-1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|int r0 = r1.length \- 1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|PHI: r0 \l  PHI: (r0v1 int) = (r0v5 int), (r0v6 int) binds: [B:11:0x0050, B:10:0x004d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_13 [shape=record,label="{13\:\ 0x0054|if (r5 \>= (r1.length \- 1)) goto L_0x0058\l}"];
Node_14 [shape=record,label="{14\:\ 0x0056|int r2 = r5 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0058|PHI: r2 \l  PHI: (r2v2 int) = (r2v1 int), (r2v3 int) binds: [B:13:0x0054, B:14:0x0056] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,label="{16\:\ 0x005e|if ((r1[r0] \> r1[r2] ? 1 : (r1[r0] == r1[r2] ? 0 : \-1)) \<= 0) goto L_0x0062\l}"];
Node_17 [shape=record,label="{17\:\ 0x0060|r1 = r2\l}"];
Node_18 [shape=record,label="{18\:\ 0x0062|r1 = r5\l}"];
Node_19 [shape=record,label="{19\:\ 0x0063|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v4 int), (r1v5 int) binds: [B:1:0x000d, B:18:0x0062, B:17:0x0060] A[DONT_GENERATE, DONT_INLINE]\l|r11.add(r1, r10)\l}"];
Node_20 [shape=record,label="{20\:\ 0x0066|RETURN\l|return\l}"];
Node_21 [shape=record,label="{21\:\ 0x004b|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x0048|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0048|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void org.osmdroid.gpkg.overlay.features.OsmdroidShapeMarkers.addMarkerAsPolygon((r10v0 org.osmdroid.views.overlay.Marker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 java.util.List\<org.osmdroid.views.overlay.Marker\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/osmdroid\/views\/overlay\/Marker;, Ljava\/util\/List\<, Lorg\/osmdroid\/views\/overlay\/Marker;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_21;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_23;
Node_7 -> Node_22;
Node_8 -> Node_3;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_19;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_21 -> Node_9;
Node_22 -> Node_8;
Node_23 -> Node_8;
}

