digraph "CFG fororg.osmdroid.gpkg.overlay.features.OsmdroidShapeMarkers.addMarkerAsPolyline(Lorg\/osmdroid\/views\/overlay\/Marker;Ljava\/util\/List;)V" {
subgraph cluster_Region_1833433807 {
label = "R(3:0|(7:2|(3:5|(1:7)(0)|8)|9|10|(1:15)|(1:(1:(1:24))(1:(1:27)))(1:(1:20))|28)|29)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.osmdroid.util.GeoPoint org.osmdroid.util.GeoPoint r0 = r9.getPosition()\lint int r1 = r10.size()\l}"];
subgraph cluster_IfRegion_30671751 {
label = "IF [B:1:0x000d] THEN: R(7:2|(3:5|(1:7)(0)|8)|9|10|(1:15)|(1:(1:(1:24))(1:(1:27)))(1:(1:20))|28) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r10.size() \> 1) goto L_0x000f\l}"];
subgraph cluster_Region_413808936 {
label = "R(7:2|(3:5|(1:7)(0)|8)|9|10|(1:15)|(1:(1:(1:24))(1:(1:27)))(1:(1:20))|28)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000f|double[] double[] r1 = new double[r10.size()]\lr1[0] = org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r0, r10.get(0).getPosition())\lint r2 = 1\lint r4 = 0\l}"];
subgraph cluster_LoopRegion_509823217 {
label = "LOOP:0: (3:5|(1:7)(0)|8)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x002c|if (r2 \< r10.size()) goto L_0x002e\l}"];
subgraph cluster_Region_1648024342 {
label = "R(3:5|(1:7)(0)|8)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x002e|r1[r2] = org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r0, r10.get(r2).getPosition())\l}"];
subgraph cluster_IfRegion_522928482 {
label = "IF [B:6:0x0044] THEN: R(1:7) ELSE: R(0)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0044|if (r1[r2] \< r1[r4]) goto L_0x0046\l}"];
subgraph cluster_Region_155470868 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0046|r4 = r2\l}"];
}
subgraph cluster_Region_1738803025 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_8 [shape=record,label="{8\:\ 0x0047|LOOP_END\lPHI: r4 \l  PHI: (r4v6 int) = (r4v5 int), (r4v7 int) binds: [B:33:0x0047, B:32:0x0047] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0028\-\>B:8:0x0047\l|r2++\l}"];
}
}
Node_9 [shape=record,label="{9\:\ 0x004a|java.lang.Integer r0 = null\l}"];
Node_10 [shape=record,label="{10\:\ 0x004b|java.lang.Integer r2 = r4 \> 0 ? java.lang.Integer.valueOf(r4 \- 1) : null\l}"];
subgraph cluster_IfRegion_156785101 {
label = "IF [B:14:0x0057] THEN: R(1:15) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0057|if (r4 \< (r1.length \- 1)) goto L_0x0059\l}"];
subgraph cluster_Region_1164424360 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0059|java.lang.Integer r0 = java.lang.Integer.valueOf(r4 + 1)\l}"];
}
}
subgraph cluster_IfRegion_1742084635 {
label = "IF [B:16:0x005f, B:17:0x0061] THEN: R(1:(1:(1:24))(1:(1:27))) ELSE: R(1:(1:20))";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x005f|PHI: r0 \l  PHI: (r0v2 java.lang.Integer) = (r0v1 java.lang.Integer), (r0v13 java.lang.Integer) binds: [B:14:0x0057, B:15:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == null) goto L_0x0078\l}"];
Node_17 [shape=record,label="{17\:\ 0x0061|ADDED_TO_REGION\l|if (r0 == null) goto L_0x0078\l}"];
subgraph cluster_Region_596030099 {
label = "R(1:(1:(1:24))(1:(1:27)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1668735696 {
label = "IF [B:21:0x0078] THEN: R(1:(1:24)) ELSE: R(1:(1:27))";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0078|if (r2 != null) goto L_0x007a\l}"];
subgraph cluster_Region_160947264 {
label = "R(1:(1:24))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1434998542 {
label = "IF [B:23:0x009e] THEN: R(1:24) ELSE: null";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x009e|if (r1[r2.intValue()] \>= org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r10.get(r2.intValue()).getPosition(), r10.get(r4).getPosition())) goto L_0x00a0\l}"];
subgraph cluster_Region_1649924971 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x00a0|int r1 = r4 + 1\l}"];
}
}
}
subgraph cluster_Region_679358158 {
label = "R(1:(1:27)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_274437778 {
label = "IF [B:26:0x00c7] THEN: R(1:27) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00c7|if (r1[r0.intValue()] \< org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r10.get(r0.intValue()).getPosition(), r10.get(r4).getPosition())) goto L_0x00c9\l}"];
subgraph cluster_Region_815062580 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x00c9|int r1 = r4 + 1\l}"];
}
}
}
}
}
subgraph cluster_Region_1873230367 {
label = "R(1:(1:20)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1430185386 {
label = "IF [B:19:0x0071] THEN: R(1:20) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0071|if (r1[r2.intValue()] \> r1[r0.intValue()]) goto L_0x0073\l}"];
subgraph cluster_Region_729668976 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0073|int r1 = r0.intValue()\l}"];
}
}
}
}
Node_28 [shape=record,label="{28\:\ 0x00cc|r1 = r4\l}"];
}
}
Node_29 [shape=record,label="{29\:\ 0x00cd|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v4 int), (r1v8 int), (r1v9 int), (r1v11 int) binds: [B:1:0x000d, B:28:0x00cc, B:27:0x00c9, B:24:0x00a0, B:20:0x0073] A[DONT_GENERATE, DONT_INLINE]\l|r10.add(r1, r9)\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0028|LOOP_START\lPHI: r2 r4 \l  PHI: (r2v3 int) = (r2v2 int), (r2v17 int) binds: [B:2:0x000f, B:8:0x0047] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v5 int) = (r4v4 int), (r4v6 int) binds: [B:2:0x000f, B:8:0x0047] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0028\-\>B:8:0x0047\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x004d}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0054}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0055|PHI: r2 \l  PHI: (r2v4 java.lang.Integer) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_18 [shape=record,color=red,label="{18\:\ 0x0063}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x007a}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x00a3}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x00d0}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x004a|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0047|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0047|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void org.osmdroid.gpkg.overlay.features.OsmdroidShapeMarkers.addMarkerAsPolyline((r9v0 org.osmdroid.views.overlay.Marker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.util.List\<org.osmdroid.views.overlay.Marker\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/osmdroid\/views\/overlay\/Marker;, Ljava\/util\/List\<, Lorg\/osmdroid\/views\/overlay\/Marker;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_29[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_31[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_33[style=dashed];
Node_7 -> Node_32;
Node_8 -> Node_3;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_21 -> Node_22;
Node_21 -> Node_25[style=dashed];
Node_23 -> Node_24;
Node_23 -> Node_28[style=dashed];
Node_24 -> Node_29;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_19 -> Node_20;
Node_19 -> Node_28[style=dashed];
Node_20 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_3 -> Node_4;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_18 -> Node_19;
Node_22 -> Node_23;
Node_25 -> Node_26;
Node_31 -> Node_9;
Node_32 -> Node_8;
Node_33 -> Node_8;
}

