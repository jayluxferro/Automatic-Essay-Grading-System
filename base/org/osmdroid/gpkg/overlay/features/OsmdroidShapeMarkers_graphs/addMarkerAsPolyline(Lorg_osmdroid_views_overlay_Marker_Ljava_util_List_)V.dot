digraph "CFG fororg.osmdroid.gpkg.overlay.features.OsmdroidShapeMarkers.addMarkerAsPolyline(Lorg\/osmdroid\/views\/overlay\/Marker;Ljava\/util\/List;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.osmdroid.util.GeoPoint r0 = r9.getPosition()\lint r1 = r10.size()\l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|if (r10.size() \<= 1) goto L_0x00cd\l}"];
Node_2 [shape=record,label="{2\:\ 0x000f|double[] r1 = new double[r10.size()]\lr1[0] = org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r0, r10.get(0).getPosition())\lr2 = 1\lr4 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x0028|LOOP_START\lPHI: r2 r4 \l  PHI: (r2v3 int) = (r2v2 int), (r2v17 int) binds: [B:2:0x000f, B:8:0x0047] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v5 int) = (r4v4 int), (r4v6 int) binds: [B:2:0x000f, B:8:0x0047] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0028\-\>B:8:0x0047\l}"];
Node_4 [shape=record,label="{4\:\ 0x002c|if (r2 \>= r10.size()) goto L_0x004a\l}"];
Node_5 [shape=record,label="{5\:\ 0x002e|r1[r2] = org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r0, r10.get(r2).getPosition())\l}"];
Node_6 [shape=record,label="{6\:\ 0x0044|if ((r1[r2] \> r1[r4] ? 1 : (r1[r2] == r1[r4] ? 0 : \-1)) \>= 0) goto L_0x0047\l}"];
Node_7 [shape=record,label="{7\:\ 0x0046|r4 = r2\l}"];
Node_8 [shape=record,label="{8\:\ 0x0047|LOOP_END\lPHI: r4 \l  PHI: (r4v6 int) = (r4v5 int), (r4v7 int) binds: [B:33:0x0047, B:32:0x0047] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0028\-\>B:8:0x0047\l|int r2 = r2 + 1\l}"];
Node_9 [shape=record,label="{9\:\ 0x004a|r0 = null\l}"];
Node_10 [shape=record,label="{10\:\ 0x004b|if (r4 \<= 0) goto L_0x0054\l}"];
Node_11 [shape=record,label="{11\:\ 0x004d|java.lang.Integer r2 = java.lang.Integer.valueOf(r4 + \-1)\l}"];
Node_12 [shape=record,label="{12\:\ 0x0054|r2 = null\l}"];
Node_13 [shape=record,label="{13\:\ 0x0055|PHI: r2 \l  PHI: (r2v4 java.lang.Integer) = (r2v14 java.lang.Integer), (r2v16 java.lang.Integer) binds: [B:12:0x0054, B:11:0x004d] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_14 [shape=record,label="{14\:\ 0x0057|if (r4 \>= (r1.length \- 1)) goto L_0x005f\l}"];
Node_15 [shape=record,label="{15\:\ 0x0059|java.lang.Integer r0 = java.lang.Integer.valueOf(r4 + 1)\l}"];
Node_16 [shape=record,label="{16\:\ 0x005f|PHI: r0 \l  PHI: (r0v2 java.lang.Integer) = (r0v1 java.lang.Integer), (r0v13 java.lang.Integer) binds: [B:14:0x0057, B:15:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == null) goto L_0x0078\l}"];
Node_17 [shape=record,label="{17\:\ 0x0061|if (r0 == null) goto L_0x0078\l}"];
Node_18 [shape=record,label="{18\:\ 0x0063}"];
Node_19 [shape=record,label="{19\:\ 0x0071|if ((r1[r2.intValue()] \> r1[r0.intValue()] ? 1 : (r1[r2.intValue()] == r1[r0.intValue()] ? 0 : \-1)) \<= 0) goto L_0x00cc\l}"];
Node_20 [shape=record,label="{20\:\ 0x0073|int r1 = r0.intValue()\l}"];
Node_21 [shape=record,label="{21\:\ 0x0078|if (r2 == null) goto L_0x00a3\l}"];
Node_22 [shape=record,label="{22\:\ 0x007a}"];
Node_23 [shape=record,label="{23\:\ 0x009e|if ((r1[r2.intValue()] \> org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r10.get(r2.intValue()).getPosition(), r10.get(r4).getPosition()) ? 1 : (r1[r2.intValue()] == org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r10.get(r2.intValue()).getPosition(), r10.get(r4).getPosition()) ? 0 : \-1)) \< 0) goto L_0x00cc\l}"];
Node_24 [shape=record,label="{24\:\ 0x00a0|int r1 = r4 + 1\l}"];
Node_25 [shape=record,label="{25\:\ 0x00a3}"];
Node_26 [shape=record,label="{26\:\ 0x00c7|if ((r1[r0.intValue()] \> org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r10.get(r0.intValue()).getPosition(), r10.get(r4).getPosition()) ? 1 : (r1[r0.intValue()] == org.osmdroid.gpkg.overlay.features.SphericalUtil.computeDistanceBetween(r10.get(r0.intValue()).getPosition(), r10.get(r4).getPosition()) ? 0 : \-1)) \>= 0) goto L_0x00cc\l}"];
Node_27 [shape=record,label="{27\:\ 0x00c9|int r1 = r4 + 1\l}"];
Node_28 [shape=record,label="{28\:\ 0x00cc|r1 = r4\l}"];
Node_29 [shape=record,label="{29\:\ 0x00cd|PHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v4 int), (r1v8 int), (r1v9 int), (r1v11 int) binds: [B:1:0x000d, B:28:0x00cc, B:27:0x00c9, B:24:0x00a0, B:20:0x0073] A[DONT_GENERATE, DONT_INLINE]\l|r10.add(r1, r9)\l}"];
Node_30 [shape=record,label="{30\:\ 0x00d0|RETURN\l|return\l}"];
Node_31 [shape=record,label="{31\:\ 0x004a|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x0047|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0047|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public static void org.osmdroid.gpkg.overlay.features.OsmdroidShapeMarkers.addMarkerAsPolyline((r9v0 org.osmdroid.views.overlay.Marker A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 java.util.List\<org.osmdroid.views.overlay.Marker\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/osmdroid\/views\/overlay\/Marker;, Ljava\/util\/List\<, Lorg\/osmdroid\/views\/overlay\/Marker;, \>;)V]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_29;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_31;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_33;
Node_7 -> Node_32;
Node_8 -> Node_3;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_21;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_21;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_28;
Node_20 -> Node_29;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_25;
Node_22 -> Node_23;
Node_23 -> Node_24[style=dashed];
Node_23 -> Node_28;
Node_24 -> Node_29;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_31 -> Node_9;
Node_32 -> Node_8;
Node_33 -> Node_8;
}

