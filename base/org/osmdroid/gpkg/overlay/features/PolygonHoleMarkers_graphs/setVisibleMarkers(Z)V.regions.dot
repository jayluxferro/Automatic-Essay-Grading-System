digraph "CFG fororg.osmdroid.gpkg.overlay.features.PolygonHoleMarkers.setVisibleMarkers(Z)V" {
subgraph cluster_Region_434366279 {
label = "R(2:0|(2:3|(1:5)(1:6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.Iterator r0 = r3.markers.iterator()\l}"];
subgraph cluster_LoopRegion_877087629 {
label = "LOOP:0: (2:3|(1:5)(1:6))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000a|if (r0.hasNext() != false) goto L_0x000c\l}"];
subgraph cluster_Region_1302757998 {
label = "R(2:3|(1:5)(1:6))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x000c|org.osmdroid.views.overlay.Marker r1 = r0.next()\l}"];
subgraph cluster_IfRegion_409751984 {
label = "IF [B:4:0x0012] THEN: R(1:5) ELSE: R(1:6)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|if (r4 == true) goto L_0x0014\l}"];
subgraph cluster_Region_506680357 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0014|r1.setAlpha(1.0f)\l}"];
}
subgraph cluster_Region_279347021 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x001a|r1.setAlpha(0.0f)\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006|LOOP_START\lLOOP:0: B:1:0x0006\-\>B:8:0x0006\l}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x001f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0006|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0006\-\>B:8:0x0006\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x001f|SYNTHETIC\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0006|SYNTHETIC\l}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0006|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.osmdroid.gpkg.overlay.features.PolygonHoleMarkers.setVisibleMarkers((r3v0 'this' org.osmdroid.gpkg.overlay.features.PolygonHoleMarkers A[IMMUTABLE_TYPE, THIS]), (r4v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_9[style=dashed];
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_11;
Node_1 -> Node_2;
Node_8 -> Node_1;
Node_9 -> Node_7;
Node_10 -> Node_8;
Node_11 -> Node_8;
}

