digraph "CFG fororg.osmdroid.gpkg.overlay.OsmMapShapeConverter.toPolyline(Lmil\/nga\/wkb\/geom\/LineString;)Lorg\/osmdroid\/views\/overlay\/Polyline;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:org.osmdroid.views.overlay.Polyline) =  org.osmdroid.views.overlay.Polyline \l0x0002: INVOKE  (r0 I:org.osmdroid.views.overlay.Polyline) org.osmdroid.views.overlay.Polyline.\<init\>():void type: DIRECT \l0x0005: IGET  (r1 I:org.osmdroid.gpkg.overlay.features.PolylineOptions) = (r3 I:org.osmdroid.gpkg.overlay.OsmMapShapeConverter) org.osmdroid.gpkg.overlay.OsmMapShapeConverter.polylineOptions org.osmdroid.gpkg.overlay.features.PolylineOptions \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0036 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IGET  (r1 I:org.osmdroid.gpkg.overlay.features.PolylineOptions) = (r3 I:org.osmdroid.gpkg.overlay.OsmMapShapeConverter) org.osmdroid.gpkg.overlay.OsmMapShapeConverter.polylineOptions org.osmdroid.gpkg.overlay.features.PolylineOptions \l0x000b: INVOKE  (r1 I:java.lang.String) = (r1 I:org.osmdroid.gpkg.overlay.features.PolylineOptions) org.osmdroid.gpkg.overlay.features.PolylineOptions.getTitle():java.lang.String type: VIRTUAL \l0x000f: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.Polyline)\l  (r1 I:java.lang.String)\l org.osmdroid.views.overlay.Polyline.setTitle(java.lang.String):void type: VIRTUAL \l0x0012: IGET  (r1 I:org.osmdroid.gpkg.overlay.features.PolylineOptions) = (r3 I:org.osmdroid.gpkg.overlay.OsmMapShapeConverter) org.osmdroid.gpkg.overlay.OsmMapShapeConverter.polylineOptions org.osmdroid.gpkg.overlay.features.PolylineOptions \l0x0014: INVOKE  (r1 I:int) = (r1 I:org.osmdroid.gpkg.overlay.features.PolylineOptions) org.osmdroid.gpkg.overlay.features.PolylineOptions.getColor():int type: VIRTUAL \l0x0018: INVOKE  (r0 I:org.osmdroid.views.overlay.Polyline), (r1 I:int) org.osmdroid.views.overlay.Polyline.setColor(int):void type: VIRTUAL \l0x001b: IGET  (r1 I:org.osmdroid.gpkg.overlay.features.PolylineOptions) = (r3 I:org.osmdroid.gpkg.overlay.OsmMapShapeConverter) org.osmdroid.gpkg.overlay.OsmMapShapeConverter.polylineOptions org.osmdroid.gpkg.overlay.features.PolylineOptions \l0x001d: INVOKE  (r1 I:boolean) = (r1 I:org.osmdroid.gpkg.overlay.features.PolylineOptions) org.osmdroid.gpkg.overlay.features.PolylineOptions.isGeodesic():boolean type: VIRTUAL \l0x0021: INVOKE  (r0 I:org.osmdroid.views.overlay.Polyline), (r1 I:boolean) org.osmdroid.views.overlay.Polyline.setGeodesic(boolean):void type: VIRTUAL \l0x0024: IGET  (r1 I:org.osmdroid.gpkg.overlay.features.PolylineOptions) = (r3 I:org.osmdroid.gpkg.overlay.OsmMapShapeConverter) org.osmdroid.gpkg.overlay.OsmMapShapeConverter.polylineOptions org.osmdroid.gpkg.overlay.features.PolylineOptions \l0x0026: INVOKE  (r1 I:float) = (r1 I:org.osmdroid.gpkg.overlay.features.PolylineOptions) org.osmdroid.gpkg.overlay.features.PolylineOptions.getWidth():float type: VIRTUAL \l0x002a: INVOKE  (r0 I:org.osmdroid.views.overlay.Polyline), (r1 I:float) org.osmdroid.views.overlay.Polyline.setWidth(float):void type: VIRTUAL \l0x002d: IGET  (r1 I:org.osmdroid.gpkg.overlay.features.PolygonOptions) = (r3 I:org.osmdroid.gpkg.overlay.OsmMapShapeConverter) org.osmdroid.gpkg.overlay.OsmMapShapeConverter.polygonOptions org.osmdroid.gpkg.overlay.features.PolygonOptions \l0x002f: INVOKE  (r1 I:java.lang.String) = (r1 I:org.osmdroid.gpkg.overlay.features.PolygonOptions) org.osmdroid.gpkg.overlay.features.PolygonOptions.getSubtitle():java.lang.String type: VIRTUAL \l0x0033: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.Polyline)\l  (r1 I:java.lang.String)\l org.osmdroid.views.overlay.Polyline.setSubDescription(java.lang.String):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0036|0x0036: NEW_INSTANCE  (r1 I:java.util.ArrayList) =  java.util.ArrayList \l0x0038: INVOKE  (r1 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x003b: INVOKE  (r4 I:java.util.List) = (r4 I:mil.nga.wkb.geom.LineString) mil.nga.wkb.geom.LineString.getPoints():java.util.List type: VIRTUAL \l0x003f: INVOKE  (r4 I:java.util.Iterator) = (r4 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0043|0x0043: INVOKE  (r2 I:boolean) = (r4 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_5 [shape=record,label="{5\:\ 0x0047|0x0047: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0057 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0049|0x0049: INVOKE  (r2 I:java.lang.Object) = (r4 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x004d: CHECK_CAST  (r2 I:mil.nga.wkb.geom.Point) = (mil.nga.wkb.geom.Point) (r2 I:?[OBJECT, ARRAY]) \l0x004f: INVOKE  (r2 I:org.osmdroid.util.GeoPoint) = \l  (r3 I:org.osmdroid.gpkg.overlay.OsmMapShapeConverter)\l  (r2 I:mil.nga.wkb.geom.Point)\l org.osmdroid.gpkg.overlay.OsmMapShapeConverter.toLatLng(mil.nga.wkb.geom.Point):org.osmdroid.util.GeoPoint type: VIRTUAL \l0x0053: INVOKE  (r1 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_7 [shape=record,label="{7\:\ 0x0057|0x0057: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.Polyline)\l  (r1 I:java.util.List)\l org.osmdroid.views.overlay.Polyline.setPoints(java.util.List):void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x005a|0x005a: RETURN  (r0 I:org.osmdroid.views.overlay.Polyline) \l}"];
MethodNode[shape=record,label="{public org.osmdroid.views.overlay.Polyline org.osmdroid.gpkg.overlay.OsmMapShapeConverter.toPolyline((r3 'this' I:org.osmdroid.gpkg.overlay.OsmMapShapeConverter A[IMMUTABLE_TYPE, THIS]), (r4 I:mil.nga.wkb.geom.LineString A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_8;
}

