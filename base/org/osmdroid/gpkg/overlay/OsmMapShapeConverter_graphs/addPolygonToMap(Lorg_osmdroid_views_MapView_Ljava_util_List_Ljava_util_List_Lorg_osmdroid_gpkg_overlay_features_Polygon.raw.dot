digraph "CFG fororg.osmdroid.gpkg.overlay.OsmMapShapeConverter.addPolygonToMap(Lorg\/osmdroid\/views\/MapView;Ljava\/util\/List;Ljava\/util\/List;Lorg\/osmdroid\/gpkg\/overlay\/features\/PolygonOptions;)Lorg\/osmdroid\/views\/overlay\/Polygon;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:org.osmdroid.views.overlay.Polygon) =  org.osmdroid.views.overlay.Polygon \l0x0002: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.Polygon)\l  (r1 I:org.osmdroid.views.MapView)\l org.osmdroid.views.overlay.Polygon.\<init\>(org.osmdroid.views.MapView):void type: DIRECT \l0x0005: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.Polygon)\l  (r2 I:java.util.List)\l org.osmdroid.views.overlay.Polygon.setPoints(java.util.List):void type: VIRTUAL \l0x0008: INVOKE  (r2 I:java.util.List) = (r0 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.getHoles():java.util.List type: VIRTUAL \l0x000c: INVOKE  (r2 I:java.util.List), (r3 I:java.util.Collection) java.util.List.addAll(java.util.Collection):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x000f|0x000f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x003e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0011|0x0011: INVOKE  (r2 I:int) = (r4 I:org.osmdroid.gpkg.overlay.features.PolygonOptions) org.osmdroid.gpkg.overlay.features.PolygonOptions.getFillColor():int type: VIRTUAL \l0x0015: INVOKE  (r0 I:org.osmdroid.views.overlay.Polygon), (r2 I:int) org.osmdroid.views.overlay.Polygon.setFillColor(int):void type: VIRTUAL \l0x0018: INVOKE  (r2 I:java.lang.String) = (r4 I:org.osmdroid.gpkg.overlay.features.PolygonOptions) org.osmdroid.gpkg.overlay.features.PolygonOptions.getTitle():java.lang.String type: VIRTUAL \l0x001c: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.Polygon)\l  (r2 I:java.lang.String)\l org.osmdroid.views.overlay.Polygon.setTitle(java.lang.String):void type: VIRTUAL \l0x001f: INVOKE  (r2 I:int) = (r4 I:org.osmdroid.gpkg.overlay.features.PolygonOptions) org.osmdroid.gpkg.overlay.features.PolygonOptions.getStrokeColor():int type: VIRTUAL \l0x0023: INVOKE  (r0 I:org.osmdroid.views.overlay.Polygon), (r2 I:int) org.osmdroid.views.overlay.Polygon.setStrokeColor(int):void type: VIRTUAL \l0x0026: INVOKE  (r2 I:float) = (r4 I:org.osmdroid.gpkg.overlay.features.PolygonOptions) org.osmdroid.gpkg.overlay.features.PolygonOptions.getStrokeWidth():float type: VIRTUAL \l0x002a: INVOKE  (r0 I:org.osmdroid.views.overlay.Polygon), (r2 I:float) org.osmdroid.views.overlay.Polygon.setStrokeWidth(float):void type: VIRTUAL \l0x002d: INVOKE  (r2 I:java.lang.String) = (r4 I:org.osmdroid.gpkg.overlay.features.PolygonOptions) org.osmdroid.gpkg.overlay.features.PolygonOptions.getSubtitle():java.lang.String type: VIRTUAL \l0x0031: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.Polygon)\l  (r2 I:java.lang.String)\l org.osmdroid.views.overlay.Polygon.setSubDescription(java.lang.String):void type: VIRTUAL \l0x0034: NEW_INSTANCE  (r2 I:org.osmdroid.views.overlay.infowindow.BasicInfoWindow) =  org.osmdroid.views.overlay.infowindow.BasicInfoWindow \l0x0036: SGET  (r3 I:int) =  org.osmdroid.gpkg.R.layout.bonuspack_bubble int \l0x0038: INVOKE  \l  (r2 I:org.osmdroid.views.overlay.infowindow.BasicInfoWindow)\l  (r3 I:int)\l  (r1 I:org.osmdroid.views.MapView)\l org.osmdroid.views.overlay.infowindow.BasicInfoWindow.\<init\>(int, org.osmdroid.views.MapView):void type: DIRECT \l0x003b: INVOKE  \l  (r0 I:org.osmdroid.views.overlay.Polygon)\l  (r2 I:org.osmdroid.views.overlay.infowindow.InfoWindow)\l org.osmdroid.views.overlay.Polygon.setInfoWindow(org.osmdroid.views.overlay.infowindow.InfoWindow):void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x003e|0x003e: INVOKE  (r1 I:org.osmdroid.views.overlay.OverlayManager) = (r1 I:org.osmdroid.views.MapView) org.osmdroid.views.MapView.getOverlayManager():org.osmdroid.views.overlay.OverlayManager type: VIRTUAL \l0x0042: INVOKE  \l  (r1 I:org.osmdroid.views.overlay.OverlayManager)\l  (r0 I:java.lang.Object)\l org.osmdroid.views.overlay.OverlayManager.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_4 [shape=record,label="{4\:\ 0x0045|0x0045: RETURN  (r0 I:org.osmdroid.views.overlay.Polygon) \l}"];
MethodNode[shape=record,label="{public static org.osmdroid.views.overlay.Polygon org.osmdroid.gpkg.overlay.OsmMapShapeConverter.addPolygonToMap((r1 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.util.List\<org.osmdroid.util.GeoPoint\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.util.List\<java.util.List\<org.osmdroid.util.GeoPoint\>\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:org.osmdroid.gpkg.overlay.features.PolygonOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/osmdroid\/views\/MapView;, Ljava\/util\/List\<, Lorg\/osmdroid\/util\/GeoPoint;, \>;, Ljava\/util\/List\<, Ljava\/util\/List\<, Lorg\/osmdroid\/util\/GeoPoint;, \>;\>;, Lorg\/osmdroid\/gpkg\/overlay\/features\/PolygonOptions;, ), Lorg\/osmdroid\/views\/overlay\/Polygon;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
}

