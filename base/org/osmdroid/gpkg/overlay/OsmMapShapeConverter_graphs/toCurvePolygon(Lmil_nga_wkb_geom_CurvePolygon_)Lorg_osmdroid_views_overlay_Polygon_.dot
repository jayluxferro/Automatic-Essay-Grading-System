digraph "CFG fororg.osmdroid.gpkg.overlay.OsmMapShapeConverter.toCurvePolygon(Lmil\/nga\/wkb\/geom\/CurvePolygon;)Lorg\/osmdroid\/views\/overlay\/Polygon;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|org.osmdroid.views.overlay.Polygon r0 = new org.osmdroid.views.overlay.Polygon()\ljava.util.ArrayList r1 = new java.util.ArrayList()\ljava.util.List r13 = r13.getRings()\ljava.util.ArrayList r2 = new java.util.ArrayList()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0017|if (r13.isEmpty() != false) goto L_0x014d\l}"];
Node_2 [shape=record,label="{2\:\ 0x0019|r3 = null\lmil.nga.wkb.geom.Curve r4 = (mil.nga.wkb.geom.Curve) r13.get(0)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|if ((r4 instanceof mil.nga.wkb.geom.CompoundCurve) == false) goto L_0x0057\l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|java.util.Iterator r4 = ((mil.nga.wkb.geom.CompoundCurve) r4).getLineStrings().iterator()\l}"];
Node_5 [shape=record,label="{5\:\ 0x002f|LOOP_START\lLOOP:0: B:5:0x002f\-\>B:48:0x002f\l}"];
Node_6 [shape=record,label="{6\:\ 0x0033|if (r4.hasNext() == false) goto L_0x0079\l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|java.util.Iterator r5 = r4.next().getPoints().iterator()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0043|LOOP_START\lLOOP:1: B:8:0x0043\-\>B:10:0x0049\l}"];
Node_9 [shape=record,label="{9\:\ 0x0047|if (r5.hasNext() == false) goto L_0x002f\l}"];
Node_10 [shape=record,label="{10\:\ 0x0049|LOOP_END\lLOOP:1: B:8:0x0043\-\>B:10:0x0049\l|r1.add(toLatLng(r5.next()))\l}"];
Node_11 [shape=record,label="{11\:\ 0x0057}"];
Node_12 [shape=record,label="{12\:\ 0x0059|if ((r4 instanceof mil.nga.wkb.geom.LineString) == false) goto L_0x012e\l}"];
Node_13 [shape=record,label="{13\:\ 0x005b|java.util.Iterator r4 = ((mil.nga.wkb.geom.LineString) r4).getPoints().iterator()\l}"];
Node_14 [shape=record,label="{14\:\ 0x0065|LOOP_START\lLOOP:2: B:14:0x0065\-\>B:16:0x006b\l}"];
Node_15 [shape=record,label="{15\:\ 0x0069|if (r4.hasNext() == false) goto L_0x0079\l}"];
Node_16 [shape=record,label="{16\:\ 0x006b|LOOP_END\lLOOP:2: B:14:0x0065\-\>B:16:0x006b\l|r1.add(toLatLng(r4.next()))\l}"];
Node_17 [shape=record,label="{17\:\ 0x0079|r4 = 1\l}"];
Node_18 [shape=record,label="{18\:\ 0x007a|LOOP_START\lPHI: r3 r4 \l  PHI: (r3v2 java.lang.Double) = (r3v1 java.lang.Double), (r3v3 java.lang.Double) binds: [B:17:0x0079, B:40:0x0108] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v4 int) = (r4v3 int), (r4v5 int) binds: [B:17:0x0079, B:40:0x0108] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:18:0x007a\-\>B:40:0x0108\l}"];
Node_19 [shape=record,label="{19\:\ 0x007e|if (r4 \>= r13.size()) goto L_0x014d\l}"];
Node_20 [shape=record,label="{20\:\ 0x0080|mil.nga.wkb.geom.Curve r5 = (mil.nga.wkb.geom.Curve) r13.get(r4)\ljava.util.ArrayList r6 = new java.util.ArrayList()\l}"];
Node_21 [shape=record,label="{21\:\ 0x008d|if ((r5 instanceof mil.nga.wkb.geom.CompoundCurve) == false) goto L_0x00c1\l}"];
Node_22 [shape=record,label="{22\:\ 0x008f|java.util.Iterator r5 = ((mil.nga.wkb.geom.CompoundCurve) r5).getLineStrings().iterator()\l}"];
Node_23 [shape=record,label="{23\:\ 0x0099|LOOP_START\lLOOP:4: B:23:0x0099\-\>B:54:0x0099\l}"];
Node_24 [shape=record,label="{24\:\ 0x009d|if (r5.hasNext() == false) goto L_0x0108\l}"];
Node_25 [shape=record,label="{25\:\ 0x009f|java.util.Iterator r7 = r5.next().getPoints().iterator()\l}"];
Node_26 [shape=record,label="{26\:\ 0x00ad|LOOP_START\lLOOP:5: B:26:0x00ad\-\>B:28:0x00b3\l}"];
Node_27 [shape=record,label="{27\:\ 0x00b1|if (r7.hasNext() == false) goto L_0x0099\l}"];
Node_28 [shape=record,label="{28\:\ 0x00b3|LOOP_END\lLOOP:5: B:26:0x00ad\-\>B:28:0x00b3\l|r6.add(toLatLng(r7.next()))\l}"];
Node_29 [shape=record,label="{29\:\ 0x00c1}"];
Node_30 [shape=record,label="{30\:\ 0x00c3|if ((r5 instanceof mil.nga.wkb.geom.LineString) == false) goto L_0x010f\l}"];
Node_31 [shape=record,label="{31\:\ 0x00c5|java.util.Iterator r5 = ((mil.nga.wkb.geom.LineString) r5).getPoints().iterator()\l}"];
Node_32 [shape=record,label="{32\:\ 0x00cf|LOOP_START\lPHI: r3 \l  PHI: (r3v4 java.lang.Double) = (r3v2 java.lang.Double), (r3v5 java.lang.Double) binds: [B:31:0x00c5, B:55:0x00cf] A[DONT_GENERATE, DONT_INLINE]\lLOOP:6: B:32:0x00cf\-\>B:55:0x00cf\l}"];
Node_33 [shape=record,label="{33\:\ 0x00d3|if (r5.hasNext() == false) goto L_0x0108\l}"];
Node_34 [shape=record,label="{34\:\ 0x00d5|mil.nga.wkb.geom.Point r7 = r5.next()\lr6.add(toLatLng(r7))\l}"];
Node_35 [shape=record,label="{35\:\ 0x00e6|if (r7.hasZ() == false) goto L_0x00cf\l}"];
Node_36 [shape=record,label="{36\:\ 0x00e8|if (r3 != null) goto L_0x00f3\l}"];
Node_37 [shape=record,label="{37\:\ 0x00ea|double r7 = r7.getZ().doubleValue()\l}"];
Node_38 [shape=record,label="{38\:\ 0x00f3|double r7 = java.lang.Math.max(r3.doubleValue(), r7.getZ().doubleValue())\l}"];
Node_39 [shape=record,label="{39\:\ 0x0103|PHI: r7 \l  PHI: (r7v5 double) = (r7v6 double), (r7v7 double) binds: [B:38:0x00f3, B:37:0x00ea] A[DONT_GENERATE, DONT_INLINE]\l|java.lang.Double r3 = java.lang.Double.valueOf(r7)\l}"];
Node_40 [shape=record,label="{40\:\ 0x0108|LOOP_END\lPHI: r3 \l  PHI: (r3v3 java.lang.Double) = (r3v4 java.lang.Double), (r3v2 java.lang.Double) binds: [B:53:0x0108, B:52:0x0108] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:18:0x007a\-\>B:40:0x0108\l|r2.add(r6)\lint r4 = r4 + 1\l}"];
Node_41 [shape=record,label="{41\:\ 0x010f|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Unsupported Curve Hole Type: \")\lr0.append(r5.getClass().getSimpleName())\l}"];
Node_42 [shape=record,label="{42\:\ 0x012d|throw new mil.nga.geopackage.GeoPackageException(r0.toString())\l}"];
Node_43 [shape=record,label="{43\:\ 0x012e|java.lang.StringBuilder r0 = new java.lang.StringBuilder()\lr0.append(\"Unsupported Curve Type: \")\lr0.append(r4.getClass().getSimpleName())\l}"];
Node_44 [shape=record,label="{44\:\ 0x014c|throw new mil.nga.geopackage.GeoPackageException(r0.toString())\l}"];
Node_45 [shape=record,label="{45\:\ 0x014d|r0.setHoles(r2)\lr0.setPoints(r1)\l}"];
Node_46 [shape=record,label="{46\:\ 0x0153|RETURN\l|return r0\l}"];
Node_47 [shape=record,label="{47\:\ 0x0079|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x002f|LOOP_END\lSYNTHETIC\lLOOP:0: B:5:0x002f\-\>B:48:0x002f\l}"];
Node_49 [shape=record,label="{49\:\ 0x0079|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x010f|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x014d|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x0108|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x0108|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0099|LOOP_END\lSYNTHETIC\lLOOP:4: B:23:0x0099\-\>B:54:0x0099\l}"];
Node_55 [shape=record,label="{55\:\ 0x00cf|LOOP_END\lSYNTHETIC\lPHI: r3 \l  PHI: (r3v5 java.lang.Double) = (r3v4 java.lang.Double), (r3v6 java.lang.Double) binds: [B:56:0x00cf, B:57:0x00cf] A[DONT_GENERATE, DONT_INLINE]\lLOOP:6: B:32:0x00cf\-\>B:55:0x00cf\l}"];
Node_56 [shape=record,label="{56\:\ 0x00cf|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x00cf|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public org.osmdroid.views.overlay.Polygon org.osmdroid.gpkg.overlay.OsmMapShapeConverter.toCurvePolygon((r12v0 'this' org.osmdroid.gpkg.overlay.OsmMapShapeConverter A[IMMUTABLE_TYPE, THIS]), (r13v0 mil.nga.wkb.geom.CurvePolygon A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_45;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_11;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_47;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_48;
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_43;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_49;
Node_16 -> Node_14;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_51;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_52;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_54;
Node_28 -> Node_26;
Node_29 -> Node_30;
Node_30 -> Node_31[style=dashed];
Node_30 -> Node_50;
Node_31 -> Node_32;
Node_32 -> Node_33;
Node_33 -> Node_34[style=dashed];
Node_33 -> Node_53;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_56;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_38;
Node_37 -> Node_39;
Node_38 -> Node_39;
Node_39 -> Node_57;
Node_40 -> Node_18;
Node_41 -> Node_42;
Node_43 -> Node_44;
Node_45 -> Node_46;
Node_47 -> Node_17;
Node_48 -> Node_5;
Node_49 -> Node_17;
Node_50 -> Node_41;
Node_51 -> Node_45;
Node_52 -> Node_40;
Node_53 -> Node_40;
Node_54 -> Node_23;
Node_55 -> Node_32;
Node_56 -> Node_55;
Node_57 -> Node_55;
}

