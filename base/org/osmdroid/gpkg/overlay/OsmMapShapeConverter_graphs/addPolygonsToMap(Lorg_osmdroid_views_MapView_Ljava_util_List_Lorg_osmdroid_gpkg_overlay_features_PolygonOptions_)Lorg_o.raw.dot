digraph "CFG fororg.osmdroid.gpkg.overlay.OsmMapShapeConverter.addPolygonsToMap(Lorg\/osmdroid\/views\/MapView;Ljava\/util\/List;Lorg\/osmdroid\/gpkg\/overlay\/features\/PolygonOptions;)Lorg\/osmdroid\/gpkg\/overlay\/features\/MultiPolygon;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:org.osmdroid.gpkg.overlay.features.MultiPolygon) =  org.osmdroid.gpkg.overlay.features.MultiPolygon \l0x0002: INVOKE  (r0 I:org.osmdroid.gpkg.overlay.features.MultiPolygon) org.osmdroid.gpkg.overlay.features.MultiPolygon.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r5 I:java.util.Iterator) = (r5 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0009|0x0009: INVOKE  (r1 I:boolean) = (r5 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|0x000d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0035 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: INVOKE  (r1 I:java.lang.Object) = (r5 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0013: CHECK_CAST  (r1 I:org.osmdroid.views.overlay.Polygon) = (org.osmdroid.views.overlay.Polygon) (r1 I:?[OBJECT, ARRAY]) \l0x0015: INVOKE  (r2 I:java.util.List) = (r1 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.getPoints():java.util.List type: VIRTUAL \l0x0019: INVOKE  (r1 I:java.util.List) = (r1 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.getHoles():java.util.List type: VIRTUAL \l0x001d: INVOKE  (r1 I:org.osmdroid.views.overlay.Polygon) = \l  (r4 I:org.osmdroid.views.MapView)\l  (r2 I:java.util.List)\l  (r1 I:java.util.List)\l  (r6 I:org.osmdroid.gpkg.overlay.features.PolygonOptions)\l org.osmdroid.gpkg.overlay.OsmMapShapeConverter.addPolygonToMap(org.osmdroid.views.MapView, java.util.List, java.util.List, org.osmdroid.gpkg.overlay.features.PolygonOptions):org.osmdroid.views.overlay.Polygon type: STATIC \l0x0021: INVOKE  (r2 I:org.osmdroid.views.overlay.infowindow.InfoWindow) = (r1 I:org.osmdroid.views.overlay.Polygon) org.osmdroid.views.overlay.Polygon.getInfoWindow():org.osmdroid.views.overlay.infowindow.InfoWindow type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0025|0x0025: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0031 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|0x0027: NEW_INSTANCE  (r2 I:org.osmdroid.views.overlay.infowindow.BasicInfoWindow) =  org.osmdroid.views.overlay.infowindow.BasicInfoWindow \l0x0029: SGET  (r3 I:int) =  org.osmdroid.gpkg.R.layout.bonuspack_bubble int \l0x002b: INVOKE  \l  (r2 I:org.osmdroid.views.overlay.infowindow.BasicInfoWindow)\l  (r3 I:int)\l  (r4 I:org.osmdroid.views.MapView)\l org.osmdroid.views.overlay.infowindow.BasicInfoWindow.\<init\>(int, org.osmdroid.views.MapView):void type: DIRECT \l0x002e: INVOKE  \l  (r1 I:org.osmdroid.views.overlay.Polygon)\l  (r2 I:org.osmdroid.views.overlay.infowindow.InfoWindow)\l org.osmdroid.views.overlay.Polygon.setInfoWindow(org.osmdroid.views.overlay.infowindow.InfoWindow):void type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0031|0x0031: INVOKE  \l  (r0 I:org.osmdroid.gpkg.overlay.features.MultiPolygon)\l  (r1 I:org.osmdroid.views.overlay.Polygon)\l org.osmdroid.gpkg.overlay.features.MultiPolygon.add(org.osmdroid.views.overlay.Polygon):void type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x0035|0x0035: RETURN  (r0 I:org.osmdroid.gpkg.overlay.features.MultiPolygon) \l}"];
MethodNode[shape=record,label="{public static org.osmdroid.gpkg.overlay.features.MultiPolygon org.osmdroid.gpkg.overlay.OsmMapShapeConverter.addPolygonsToMap((r4 I:org.osmdroid.views.MapView A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.util.List\<org.osmdroid.views.overlay.Polygon\> A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:org.osmdroid.gpkg.overlay.features.PolygonOptions A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lorg\/osmdroid\/views\/MapView;, Ljava\/util\/List\<, Lorg\/osmdroid\/views\/overlay\/Polygon;, \>;, Lorg\/osmdroid\/gpkg\/overlay\/features\/PolygonOptions;, ), Lorg\/osmdroid\/gpkg\/overlay\/features\/MultiPolygon;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_7;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_6 -> Node_1;
}

