digraph "CFG fororg.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.\<init\>([Ljava\/io\/File;Landroid\/content\/Context;Lorg\/osmdroid\/tileprovider\/modules\/IFilesystemCache;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x0004: INVOKE  (r0 I:short) = (r0 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileFileSystemThreads():short type: INTERFACE \l0x0008: INVOKE  (r1 I:org.osmdroid.config.IConfigurationProvider) =  org.osmdroid.config.Configuration.getInstance():org.osmdroid.config.IConfigurationProvider type: STATIC \l0x000c: INVOKE  (r1 I:short) = (r1 I:org.osmdroid.config.IConfigurationProvider) org.osmdroid.config.IConfigurationProvider.getTileFileSystemMaxQueueSize():short type: INTERFACE \l0x0010: INVOKE  \l  (r2 I:org.osmdroid.tileprovider.modules.MapTileModuleProviderBase)\l  (r0 I:int)\l  (r1 I:int)\l org.osmdroid.tileprovider.modules.MapTileModuleProviderBase.\<init\>(int, int):void type: DIRECT \l0x0013: INVOKE  (r0 I:org.osmdroid.util.TileSystem) =  org.osmdroid.views.MapView.getTileSystem():org.osmdroid.util.TileSystem type: STATIC \l0x0017: IPUT  \l  (r0 I:org.osmdroid.util.TileSystem)\l  (r2 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.tileSystem org.osmdroid.util.TileSystem \l0x0019: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001a: IPUT  \l  (r0 I:org.osmdroid.tileprovider.modules.IFilesystemCache)\l  (r2 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.tileWriter org.osmdroid.tileprovider.modules.IFilesystemCache \l0x001c: NEW_INSTANCE  (r0 I:java.util.HashSet) =  java.util.HashSet \l0x001e: INVOKE  (r0 I:java.util.HashSet) java.util.HashSet.\<init\>():void type: DIRECT \l0x0021: IPUT  \l  (r0 I:java.util.Set\<mil.nga.geopackage.GeoPackage\>)\l  (r2 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.tileSources java.util.Set \l0x0023: CONST_STR  (r0 I:java.lang.String) =  \"OsmDroid\" \l0x0025: CONST_STR  (r1 I:java.lang.String) =  \"Geopackage support is BETA. Please report any issues\" \l0x0027: INVOKE  (r0 I:java.lang.String), (r1 I:java.lang.String) android.util.Log.i(java.lang.String, java.lang.String):int type: STATIC \l0x002a: IPUT  \l  (r5 I:org.osmdroid.tileprovider.modules.IFilesystemCache)\l  (r2 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.tileWriter org.osmdroid.tileprovider.modules.IFilesystemCache \l0x002c: INVOKE  (r4 I:mil.nga.geopackage.GeoPackageManager) = (r4 I:android.content.Context) mil.nga.geopackage.factory.GeoPackageFactory.getManager(android.content.Context):mil.nga.geopackage.GeoPackageManager type: STATIC \l0x0030: IPUT  \l  (r4 I:mil.nga.geopackage.GeoPackageManager)\l  (r2 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.manager mil.nga.geopackage.GeoPackageManager \l0x0032: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0033: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0034|0x0034: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0035|0x0035: IF  (r5 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:9:0x0046 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0037|SYNTHETIC\lSplitter:B:3:0x0037\l}"];
Node_4 [shape=record,label="{4\:\ ?|Splitter:B:3:0x0037\l|0x0037: IGET  (r0 I:mil.nga.geopackage.GeoPackageManager) = \l  (r2 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.manager mil.nga.geopackage.GeoPackageManager A[Catch:\{ Exception \-\> 0x003f \}, TRY_ENTER]\l0x0039: AGET  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY][]), (r5 I:?[int, short, byte, char]) A[Catch:\{ Exception \-\> 0x003f \}]\l0x003b: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageManager)\l  (r1 I:java.io.File)\l mil.nga.geopackage.GeoPackageManager.importGeoPackage(java.io.File):boolean type: INTERFACE A[Catch:\{ Exception \-\> 0x003f \}, TRY_LEAVE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x003f|ExcHandler: Exception null\lSplitter:B:3:0x0037\l|0x003f: MOVE_EXCEPTION  (r0 I:?[OBJECT]) =  \l}"];
Node_7 [shape=record,label="{7\:\ 0x0040|0x0040: INVOKE  (r0 I:java.lang.Exception) java.lang.Exception.printStackTrace():void type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0043|0x0043: ARITH  (r5 I:int) = (r5 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0046|0x0046: IGET  (r3 I:mil.nga.geopackage.GeoPackageManager) = \l  (r2 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.manager mil.nga.geopackage.GeoPackageManager \l0x0048: INVOKE  (r3 I:java.util.List) = (r3 I:mil.nga.geopackage.GeoPackageManager) mil.nga.geopackage.GeoPackageManager.databases():java.util.List type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x004c|0x004c: INVOKE  (r5 I:int) = (r3 I:java.util.List) java.util.List.size():int type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x0050|0x0050: IF  (r4 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:13:0x0066 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0052|0x0052: IGET  (r5 I:java.util.Set\<mil.nga.geopackage.GeoPackage\>) = \l  (r2 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.tileSources java.util.Set \l0x0054: IGET  (r0 I:mil.nga.geopackage.GeoPackageManager) = \l  (r2 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.manager mil.nga.geopackage.GeoPackageManager \l0x0056: INVOKE  (r1 I:java.lang.Object) = (r3 I:java.util.List), (r4 I:int) java.util.List.get(int):java.lang.Object type: INTERFACE \l0x005a: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l0x005c: INVOKE  (r0 I:mil.nga.geopackage.GeoPackage) = \l  (r0 I:mil.nga.geopackage.GeoPackageManager)\l  (r1 I:java.lang.String)\l mil.nga.geopackage.GeoPackageManager.open(java.lang.String):mil.nga.geopackage.GeoPackage type: INTERFACE \l0x0060: INVOKE  (r5 I:java.util.Set), (r0 I:java.lang.Object) java.util.Set.add(java.lang.Object):boolean type: INTERFACE \l0x0063: ARITH  (r4 I:int) = (r4 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0066|0x0066: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.\<init\>((r2 'this' I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider A[IMMUTABLE_TYPE, THIS]), (r3 I:java.io.File[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:android.content.Context A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:org.osmdroid.tileprovider.modules.IFilesystemCache A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_3 -> Node_6;
Node_4 -> Node_6;
Node_4 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_10;
}

