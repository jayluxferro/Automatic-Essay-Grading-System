digraph "CFG fororg.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.getMapTile(J)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource) = \l  (r4 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.currentTileSource org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource \l0x0002: INVOKE  (r0 I:java.lang.String) = \l  (r0 I:org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource)\l org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource.getDatabase():java.lang.String type: VIRTUAL \l0x0006: IGET  (r1 I:org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource) = \l  (r4 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.currentTileSource org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource \l0x0008: INVOKE  (r1 I:java.lang.String) = \l  (r1 I:org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource)\l org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource.getTableDao():java.lang.String type: VIRTUAL \l0x000c: IGET  (r2 I:mil.nga.geopackage.GeoPackageManager) = \l  (r4 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.manager mil.nga.geopackage.GeoPackageManager \l0x000e: INVOKE  (r0 I:mil.nga.geopackage.GeoPackage) = \l  (r2 I:mil.nga.geopackage.GeoPackageManager)\l  (r0 I:java.lang.String)\l mil.nga.geopackage.GeoPackageManager.open(java.lang.String):mil.nga.geopackage.GeoPackage type: INTERFACE \l0x0012: INVOKE  (r1 I:mil.nga.geopackage.tiles.user.TileDao) = \l  (r0 I:mil.nga.geopackage.GeoPackage)\l  (r1 I:java.lang.String)\l mil.nga.geopackage.GeoPackage.getTileDao(java.lang.String):mil.nga.geopackage.tiles.user.TileDao type: INTERFACE \l0x0016: NEW_INSTANCE  (r2 I:mil.nga.geopackage.tiles.retriever.GeoPackageTileRetriever) =  mil.nga.geopackage.tiles.retriever.GeoPackageTileRetriever \l0x0018: INVOKE  \l  (r2 I:mil.nga.geopackage.tiles.retriever.GeoPackageTileRetriever)\l  (r1 I:mil.nga.geopackage.tiles.user.TileDao)\l mil.nga.geopackage.tiles.retriever.GeoPackageTileRetriever.\<init\>(mil.nga.geopackage.tiles.user.TileDao):void type: DIRECT \l0x001b: INVOKE  (r1 I:int) = (r5 I:long) org.osmdroid.util.MapTileIndex.getZoom(long):int type: STATIC \l0x001f: INVOKE  (r3 I:int) = (r5 I:long) org.osmdroid.util.MapTileIndex.getX(long):int type: STATIC \l0x0023: INVOKE  (r5 I:int) = (r5 I:long) org.osmdroid.util.MapTileIndex.getY(long):int type: STATIC \l0x0027: INVOKE  (r5 I:mil.nga.geopackage.tiles.retriever.GeoPackageTile) = \l  (r2 I:mil.nga.geopackage.tiles.retriever.GeoPackageTileRetriever)\l  (r3 I:int)\l  (r5 I:int)\l  (r1 I:int)\l mil.nga.geopackage.tiles.retriever.GeoPackageTileRetriever.getTile(int, int, int):mil.nga.geopackage.tiles.retriever.GeoPackageTile type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x002b|0x002b: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x004c \l}"];
Node_2 [shape=record,label="{2\:\ 0x002d|0x002d: IGET  (r6 I:byte[]) = (r5 I:mil.nga.geopackage.tiles.retriever.GeoPackageTile) mil.nga.geopackage.tiles.retriever.GeoPackageTile.data byte[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x002f|0x002f: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x004c \l}"];
Node_4 [shape=record,label="{4\:\ 0x0031|0x0031: IGET  (r5 I:byte[]) = (r5 I:mil.nga.geopackage.tiles.retriever.GeoPackageTile) mil.nga.geopackage.tiles.retriever.GeoPackageTile.data byte[] \l}"];
Node_5 [shape=record,label="{5\:\ 0x0033|0x0033: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x004c \l}"];
Node_6 [shape=record,label="{6\:\ 0x0035|0x0035: NEW_INSTANCE  (r6 I:android.graphics.BitmapFactory$Options) =  android.graphics.BitmapFactory$Options \l0x0037: INVOKE  (r6 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.\<init\>():void type: DIRECT \l0x003a: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (256(0x100, float:3.59E\-43) ?[int, float, short, byte, char])\l \l0x003c: IPUT  (r1 I:int), (r6 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.outHeight int \l0x003e: IPUT  (r1 I:int), (r6 I:android.graphics.BitmapFactory$Options) android.graphics.BitmapFactory.Options.outWidth int \l0x0040: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0041: ARRAY_LENGTH  (r2 I:int) = (r5 I:?[]) \l0x0042: INVOKE  (r5 I:android.graphics.Bitmap) = \l  (r5 I:byte[])\l  (r1 I:int)\l  (r2 I:int)\l  (r6 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.decodeByteArray(byte[], int, int, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC \l0x0046: NEW_INSTANCE  (r6 I:android.graphics.drawable.BitmapDrawable) =  android.graphics.drawable.BitmapDrawable \l0x0048: INVOKE  \l  (r6 I:android.graphics.drawable.BitmapDrawable)\l  (r5 I:android.graphics.Bitmap)\l android.graphics.drawable.BitmapDrawable.\<init\>(android.graphics.Bitmap):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x004c|0x004c: CONST  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_8 [shape=record,label="{8\:\ 0x004d|0x004d: INVOKE  (r0 I:mil.nga.geopackage.GeoPackage) mil.nga.geopackage.GeoPackage.close():void type: INTERFACE \l}"];
Node_9 [shape=record,label="{9\:\ 0x0050|0x0050: RETURN  (r6 I:android.graphics.drawable.Drawable) \l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.getMapTile((r4 'this' I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider A[IMMUTABLE_TYPE, THIS]), (r5 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
}

