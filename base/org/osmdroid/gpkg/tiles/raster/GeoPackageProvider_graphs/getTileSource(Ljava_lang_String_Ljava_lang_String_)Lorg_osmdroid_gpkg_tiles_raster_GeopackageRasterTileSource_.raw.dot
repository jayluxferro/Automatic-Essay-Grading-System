digraph "CFG fororg.osmdroid.gpkg.tiles.raster.GeoPackageProvider.getTileSource(Ljava\/lang\/String;Ljava\/lang\/String;)Lorg\/osmdroid\/gpkg\/tiles\/raster\/GeopackageRasterTileSource;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider) = (r12 I:org.osmdroid.gpkg.tiles.raster.GeoPackageProvider) org.osmdroid.gpkg.tiles.raster.GeoPackageProvider.geopackage org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider \l0x0002: IGET  (r0 I:java.util.Set\<mil.nga.geopackage.GeoPackage\>) = \l  (r0 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.tileSources java.util.Set \l0x0004: INVOKE  (r0 I:java.util.Iterator) = (r0 I:java.util.Set) java.util.Set.iterator():java.util.Iterator type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: INVOKE  (r1 I:boolean) = (r0 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x006a \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: INVOKE  (r1 I:java.lang.Object) = (r0 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0012: CHECK_CAST  (r1 I:mil.nga.geopackage.GeoPackage) = (mil.nga.geopackage.GeoPackage) (r1 I:?[OBJECT, ARRAY]) \l0x0014: INVOKE  (r2 I:java.lang.String) = (r1 I:mil.nga.geopackage.GeoPackage) mil.nga.geopackage.GeoPackage.getName():java.lang.String type: INTERFACE \l0x0018: INVOKE  (r2 I:boolean) = (r2 I:java.lang.String), (r13 I:java.lang.String) java.lang.String.equalsIgnoreCase(java.lang.String):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0008 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: INVOKE  (r2 I:java.util.List) = (r1 I:mil.nga.geopackage.GeoPackage) mil.nga.geopackage.GeoPackage.getTileTables():java.util.List type: INTERFACE \l0x0022: INVOKE  (r2 I:boolean) = (r2 I:java.util.List), (r14 I:java.lang.Object) java.util.List.contains(java.lang.Object):boolean type: INTERFACE \l}"];
Node_6 [shape=record,label="{6\:\ 0x0026|0x0026: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x0008 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0028|0x0028: INVOKE  (r0 I:mil.nga.geopackage.tiles.user.TileDao) = \l  (r1 I:mil.nga.geopackage.GeoPackage)\l  (r14 I:java.lang.String)\l mil.nga.geopackage.GeoPackage.getTileDao(java.lang.String):mil.nga.geopackage.tiles.user.TileDao type: INTERFACE \l0x002c: INVOKE  (r1 I:mil.nga.geopackage.BoundingBox) = (r0 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.getBoundingBox():mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x0030: INVOKE  (r2 I:mil.nga.geopackage.projection.Projection) = (r0 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.getProjection():mil.nga.geopackage.projection.Projection type: VIRTUAL \l0x0034: INVOKE  (r3 I:mil.nga.geopackage.projection.Projection) = (r0 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.getProjection():mil.nga.geopackage.projection.Projection type: VIRTUAL \l0x0038: INVOKE  (r2 I:mil.nga.geopackage.projection.ProjectionTransform) = \l  (r2 I:mil.nga.geopackage.projection.Projection)\l  (r3 I:mil.nga.geopackage.projection.Projection)\l mil.nga.geopackage.projection.Projection.getTransformation(mil.nga.geopackage.projection.Projection):mil.nga.geopackage.projection.ProjectionTransform type: VIRTUAL \l0x003c: INVOKE  (r1 I:mil.nga.geopackage.BoundingBox) = \l  (r2 I:mil.nga.geopackage.projection.ProjectionTransform)\l  (r1 I:mil.nga.geopackage.BoundingBox)\l mil.nga.geopackage.projection.ProjectionTransform.transform(mil.nga.geopackage.BoundingBox):mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x0040: NEW_INSTANCE  (r11 I:org.osmdroid.util.BoundingBox) =  org.osmdroid.util.BoundingBox \l0x0042: INVOKE  (r3 I:double) = (r1 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLatitude():double type: VIRTUAL \l0x0046: INVOKE  (r5 I:double) = (r1 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMaxLongitude():double type: VIRTUAL \l0x004a: INVOKE  (r7 I:double) = (r1 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLatitude():double type: VIRTUAL \l0x004e: INVOKE  (r9 I:double) = (r1 I:mil.nga.geopackage.BoundingBox) mil.nga.geopackage.BoundingBox.getMinLongitude():double type: VIRTUAL \l0x0052: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0053: INVOKE  \l  (r2 I:org.osmdroid.util.BoundingBox)\l  (r3 I:double)\l  (r5 I:double)\l  (r7 I:double)\l  (r9 I:double)\l org.osmdroid.util.BoundingBox.\<init\>(double, double, double, double):void type: DIRECT \l0x0056: NEW_INSTANCE  (r1 I:org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource) =  org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource \l0x0058: INVOKE  (r2 I:long) = (r0 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.getMinZoom():long type: VIRTUAL \l0x005c: CAST  (r5 I:int) = (int) (r2 I:long) \l0x005d: INVOKE  (r2 I:long) = (r0 I:mil.nga.geopackage.tiles.user.TileDao) mil.nga.geopackage.tiles.user.TileDao.getMaxZoom():long type: VIRTUAL \l0x0061: CAST  (r6 I:int) = (int) (r2 I:long) \l0x0062: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY]) \l0x0063: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r13 I:?[OBJECT, ARRAY]) \l0x0064: MOVE  (r4 I:?[OBJECT, ARRAY]) = (r14 I:?[OBJECT, ARRAY]) \l0x0065: MOVE  (r7 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0066: INVOKE  \l  (r2 I:org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:int)\l  (r6 I:int)\l  (r7 I:org.osmdroid.util.BoundingBox)\l org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource.\<init\>(java.lang.String, java.lang.String, int, int, org.osmdroid.util.BoundingBox):void type: DIRECT \l}"];
Node_8 [shape=record,label="{8\:\ 0x0069|0x0069: RETURN  \l  (r1 I:org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource)\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x006a|0x006a: CONST  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x006b|0x006b: RETURN  \l  (r13 I:org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource)\l \l}"];
MethodNode[shape=record,label="{public org.osmdroid.gpkg.tiles.raster.GeopackageRasterTileSource org.osmdroid.gpkg.tiles.raster.GeoPackageProvider.getTileSource((r12 'this' I:org.osmdroid.gpkg.tiles.raster.GeoPackageProvider A[IMMUTABLE_TYPE, THIS]), (r13 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_9;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_1;
Node_6 -> Node_7[style=dashed];
Node_7 -> Node_8;
Node_9 -> Node_10;
}

