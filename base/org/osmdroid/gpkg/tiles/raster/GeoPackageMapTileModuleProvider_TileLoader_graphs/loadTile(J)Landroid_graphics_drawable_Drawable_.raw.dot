digraph "CFG fororg.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.TileLoader.loadTile(J)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Splitter:B:0:0x0000\l|0x0000: IGET  (r0 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider) = \l  (r1 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider$TileLoader)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.TileLoader.this$0 org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider A[Catch:\{ Throwable \-\> 0x0009 \}, TRY_ENTER]\l0x0002: INVOKE  (r2 I:android.graphics.drawable.Drawable) = \l  (r0 I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider)\l  (r2 I:long)\l org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.getMapTile(long):android.graphics.drawable.Drawable type: VIRTUAL A[Catch:\{ Throwable \-\> 0x0009 \}]\l0x0005: NOP   A[TRY_LEAVE]\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: RETURN  (r2 I:android.graphics.drawable.Drawable) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|ExcHandler: all null\lSplitter:B:7:0x000e\l|0x0007: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x0009|ExcHandler: Throwable null\lSplitter:B:0:0x0000\l|0x0009: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_6 [shape=record,label="{6\:\ 0x000a|0x000a: CONST_STR  (r3 I:java.lang.String) =  \"OsmDroid\" \l0x000c: CONST_STR  (r0 I:java.lang.String) =  \"Error loading tile\" \l}"];
Node_7 [shape=record,label="{7\:\ 0x000e|SYNTHETIC\lSplitter:B:7:0x000e\l}"];
Node_8 [shape=record,label="{8\:\ ?|Splitter:B:7:0x000e\l|0x000e: INVOKE  \l  (r3 I:java.lang.String)\l  (r0 I:java.lang.String)\l  (r2 I:java.lang.Throwable)\l android.util.Log.e(java.lang.String, java.lang.String, java.lang.Throwable):int type: STATIC A[Catch:\{ all \-\> 0x0007 \}, TRY_ENTER, TRY_LEAVE]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0011|0x0011: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_10 [shape=record,label="{10\:\ 0x0012|0x0012: RETURN  (r2 I:android.graphics.drawable.Drawable) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0013|0x0013: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.TileLoader.loadTile((r1 'this' I:org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider$TileLoader A[IMMUTABLE_TYPE, THIS]), (r2 I:long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_5;
Node_1 -> Node_2;
Node_3 -> Node_11;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_3;
Node_8 -> Node_9;
Node_8 -> Node_3;
Node_9 -> Node_10;
}

