digraph "CFG fororg.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.TileLoader.loadTile(J)Landroid\/graphics\/drawable\/Drawable;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,label="{1\:\ ?|Catch:\{ Throwable \-\> 0x0009 \}\lSplitter:B:0:0x0000\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|RETURN\l|return r1.this$0.getMapTile(r2)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0007|REMOVE\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|ExcHandler: Throwable (r2v1 'th' java.lang.Throwable A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l|java.lang.Throwable r2 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x000a}"];
Node_6 [shape=record,label="{6\:\ 0x000e|SYNTHETIC\l}"];
Node_7 [shape=record,label="{7\:\ ?|Catch:\{ Throwable \-\> 0x0009 \}\l|android.util.Log.e(org.osmdroid.api.IMapView.LOGTAG, \"Error loading tile\", r2)     \/\/ Catch:\{ Throwable \-\> 0x0009 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x0011|RETURN\l|return null\l}"];
Node_9 [shape=record,label="{9\:\ 0x0013|REMOVE\l|throw r2\l}"];
MethodNode[shape=record,label="{public android.graphics.drawable.Drawable org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider.TileLoader.loadTile((r1v0 'this' org.osmdroid.gpkg.tiles.raster.GeoPackageMapTileModuleProvider$TileLoader A[IMMUTABLE_TYPE, THIS]), (r2v0 long A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_0 -> Node_4;
Node_1 -> Node_2;
Node_3 -> Node_9;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_3;
Node_7 -> Node_8;
Node_7 -> Node_3;
}

