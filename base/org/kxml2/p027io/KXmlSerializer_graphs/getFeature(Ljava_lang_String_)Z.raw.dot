digraph "CFG fororg.kxml2.io.KXmlSerializer.getFeature(Ljava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST_STR  (r0 I:java.lang.String) =  \"http:\/\/xmlpull.org\/v1\/doc\/features.html#indent\-output\" \l0x0002: INVOKE  (r2 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IGET  (r2 I:boolean[]) = (r1 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.indent boolean[] \l0x000a: IGET  (r0 I:int) = (r1 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.depth int \l0x000c: AGET  (r2 I:boolean A[IMMUTABLE_TYPE]) = \l  (r2 I:boolean[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: RETURN  (r2 I:boolean) \l}"];
MethodNode[shape=record,label="{public boolean org.kxml2.io.KXmlSerializer.getFeature((r1 'this' I:org.kxml2.io.KXmlSerializer A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

