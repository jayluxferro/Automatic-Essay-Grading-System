digraph "CFG fororg.kxml2.io.KXmlSerializer.startTag(Ljava\/lang\/String;Ljava\/lang\/String;)Lorg\/xmlpull\/v1\/XmlSerializer;" {
subgraph cluster_Region_1833843317 {
label = "R(10:0|(2:2|(1:5))|6|(1:8)|10|(2:15|(2:18|(1:24)(1:23)))|25|(1:27)|28|29)";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|check(false)\l}"];
subgraph cluster_IfRegion_1885819608 {
label = "IF [B:1:0x000a] THEN: R(2:2|(1:5)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000a|if (r7.indent[r7.depth] == true) goto L_0x000c\l}"];
subgraph cluster_Region_1169938532 {
label = "R(2:2|(1:5))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x000c|r7.writer.write(\"rn\")\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_2097226205 {
label = "LOOP:0: (1:5)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0016|if (r1 \< r7.depth) goto L_0x0018\l}"];
subgraph cluster_Region_1875910386 {
label = "R(1:5)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0018|LOOP_END\lLOOP:0: B:3:0x0014\-\>B:5:0x0018\l|r7.writer.write(\"  \")\lr1++\l}"];
}
}
}
}
Node_6 [shape=record,label="{6\:\ 0x0022|int int r1 = r7.depth * 3\l}"];
subgraph cluster_IfRegion_1505236726 {
label = "IF [B:7:0x002b] THEN: R(1:8) ELSE: null";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x002b|if (r7.elementStack.length \< (r1 + 3)) goto L_0x002d\l}"];
subgraph cluster_Region_1933518547 {
label = "R(1:8)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x002d|java.lang.String[] java.lang.String[] r2 = new java.lang.String[(r7.elementStack.length + 12)]\ljava.lang.System.arraycopy(r7.elementStack, 0, r2, 0, r1)\lr7.elementStack = r2\l}"];
}
}
Node_10 [shape=record,label="{10\:\ 0x003c|java.lang.String r2 = r8 == null ? \"\" : getPrefix(r8, true, true)\l}"];
subgraph cluster_IfRegion_1212555788 {
label = "IF [B:14:0x004b] THEN: R(2:15|(2:18|(1:24)(1:23))) ELSE: null";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004b|if (\"\".equals(r8) == true) goto L_0x004d\l}"];
subgraph cluster_Region_1282984646 {
label = "R(2:15|(2:18|(1:24)(1:23)))";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x004d|int r3 = r7.nspCounts[r7.depth]\l}"];
subgraph cluster_LoopRegion_1952029565 {
label = "LOOP:1: (2:18|(1:24)(1:23))";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x005a|if (r3 \< r7.nspCounts[r7.depth + 1]) goto L_0x005c\l}"];
subgraph cluster_Region_1381503868 {
label = "R(2:18|(1:24)(1:23))";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x005c|int int r6 = r3 * 2\l}"];
subgraph cluster_IfRegion_1492966667 {
label = "IF [B:19:0x0068, B:21:0x0076] THEN: R(1:24) ELSE: R(1:23)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0068|if (\"\".equals(r7.nspStack[r6]) == false) goto L_0x0081\l}"];
Node_21 [shape=record,label="{21\:\ 0x0076|ADDED_TO_REGION\l|if (\"\".equals(r7.nspStack[r6 + 1]) == true) goto L_0x0081\l}"];
subgraph cluster_Region_1190884388 {
label = "R(1:24)";
node [shape=record,color=blue];
Node_24 [shape=record,label="{24\:\ 0x0081|LOOP_END\lLOOP:1: B:16:0x0053\-\>B:24:0x0081\l|r3++\l}"];
}
subgraph cluster_Region_542719189 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x0080|throw new java.lang.IllegalStateException(\"Cannot set default namespace for elements in no namespace\")\l}"];
}
}
}
}
}
}
Node_25 [shape=record,label="{25\:\ 0x0084|int int r4 = r1 + 1\lr7.elementStack[r1] = r8\lr7.elementStack[r4] = r2\lr7.elementStack[r4 + 1] = r9\lr7.writer.write(60)\l}"];
subgraph cluster_IfRegion_1240428513 {
label = "IF [B:26:0x00a1] THEN: R(1:27) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x00a1|if (\"\".equals(r2) == false) goto L_0x00a3\l}"];
subgraph cluster_Region_1433299259 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x00a3|r7.writer.write(r2)\lr7.writer.write(58)\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x00af|r7.writer.write(r9)\lr7.pending = true\l}"];
Node_29 [shape=record,label="{29\:\ 0x00b6|RETURN\l|return r7\l}"];
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0014|LOOP_START\lPHI: r1 \l  PHI: (r1v9 int) = (r1v8 int), (r1v10 int) binds: [B:2:0x000c, B:5:0x0018] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:3:0x0014\-\>B:5:0x0018\l}"];
Node_9 [shape=record,color=red,label="{9\:\ 0x003b}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x003e}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0041}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0045|PHI: r2 \l  PHI: (r2v3 java.lang.String) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_16 [shape=record,color=red,label="{16\:\ 0x0053|LOOP_START\lPHI: r3 \l  PHI: (r3v6 int) = (r3v5 int), (r3v7 int) binds: [B:15:0x004d, B:24:0x0081] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:16:0x0053\-\>B:24:0x0081\l}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x006a}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0079}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x0022|SYNTHETIC\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x0079|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x0084|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0081|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0081|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public org.xmlpull.v1.XmlSerializer org.kxml2.io.KXmlSerializer.startTag((r7v0 'this' org.kxml2.io.KXmlSerializer A[IMMUTABLE_TYPE, THIS]), (r8v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_6[style=dashed];
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_4 -> Node_30[style=dashed];
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_7 -> Node_9[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_10 -> Node_12;
Node_14 -> Node_15;
Node_14 -> Node_25[style=dashed];
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_17 -> Node_32[style=dashed];
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_33;
Node_21 -> Node_31[style=dashed];
Node_21 -> Node_34;
Node_24 -> Node_16;
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_3 -> Node_4;
Node_9 -> Node_10;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_16 -> Node_17;
Node_20 -> Node_21;
Node_22 -> Node_23;
Node_30 -> Node_6;
Node_31 -> Node_22;
Node_32 -> Node_25;
Node_33 -> Node_24;
Node_34 -> Node_24;
}

