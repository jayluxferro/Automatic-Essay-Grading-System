digraph "CFG fororg.kxml2.io.KXmlSerializer.startTag(Ljava\/lang\/String;Ljava\/lang\/String;)Lorg\/xmlpull\/v1\/XmlSerializer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r7 I:org.kxml2.io.KXmlSerializer), (r0 I:boolean) org.kxml2.io.KXmlSerializer.check(boolean):void type: DIRECT \l0x0004: IGET  (r1 I:boolean[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.indent boolean[] \l0x0006: IGET  (r2 I:int) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.depth int \l0x0008: AGET  (r1 I:boolean A[IMMUTABLE_TYPE]) = \l  (r1 I:boolean[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|0x000c: IGET  (r1 I:java.io.Writer) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.writer java.io.Writer \l0x000e: CONST_STR  (r2 I:java.lang.String) =  \"\l\" \l0x0010: INVOKE  (r1 I:java.io.Writer), (r2 I:java.lang.String) java.io.Writer.write(java.lang.String):void type: VIRTUAL \l0x0013: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0014|0x0014: IGET  (r2 I:int) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.depth int \l}"];
Node_4 [shape=record,label="{4\:\ 0x0016|0x0016: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:6:0x0022 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0018|0x0018: IGET  (r2 I:java.io.Writer) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.writer java.io.Writer \l0x001a: CONST_STR  (r3 I:java.lang.String) =  \"  \" \l0x001c: INVOKE  (r2 I:java.io.Writer), (r3 I:java.lang.String) java.io.Writer.write(java.lang.String):void type: VIRTUAL \l0x001f: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0022|0x0022: IGET  (r1 I:int) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.depth int \l0x0024: ARITH  (r1 I:int) = (r1 I:int) * (3 int) \l0x0026: IGET  (r2 I:java.lang.String[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.elementStack java.lang.String[] \l0x0028: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x0029: ARITH  (r3 I:int) = (r1 I:int) + (3 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:9:0x003b \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: IGET  (r2 I:java.lang.String[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.elementStack java.lang.String[] \l0x002f: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l0x0030: ARITH  (r2 I:int) = (r2 I:int) + (12 int) \l0x0032: NEW_ARRAY  (r2 I:java.lang.String[]) = (r2 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0034: IGET  (r3 I:java.lang.String[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.elementStack java.lang.String[] \l0x0036: INVOKE  \l  (r3 I:java.lang.Object)\l  (r0 I:int)\l  (r2 I:java.lang.Object)\l  (r0 I:int)\l  (r1 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x0039: IPUT  \l  (r2 I:java.lang.String[])\l  (r7 I:org.kxml2.io.KXmlSerializer)\l org.kxml2.io.KXmlSerializer.elementStack java.lang.String[] \l}"];
Node_9 [shape=record,label="{9\:\ 0x003b|0x003b: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_10 [shape=record,label="{10\:\ 0x003c|0x003c: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0041 \l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|0x003e: CONST_STR  (r2 I:java.lang.String) =  \"\" \l}"];
Node_12 [shape=record,label="{12\:\ 0x0041|0x0041: INVOKE  (r2 I:java.lang.String) = \l  (r7 I:org.kxml2.io.KXmlSerializer)\l  (r8 I:java.lang.String)\l  (r0 I:boolean)\l  (r0 I:boolean)\l org.kxml2.io.KXmlSerializer.getPrefix(java.lang.String, boolean, boolean):java.lang.String type: DIRECT \l}"];
Node_13 [shape=record,label="{13\:\ 0x0045|0x0045: CONST_STR  (r3 I:java.lang.String) =  \"\" \l0x0047: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r8 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x004b|0x004b: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x0084 \l}"];
Node_15 [shape=record,label="{15\:\ 0x004d|0x004d: IGET  (r3 I:int[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.nspCounts int[] \l0x004f: IGET  (r4 I:int) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.depth int \l0x0051: AGET  (r3 I:?[int, float]) = (r3 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x0053|0x0053: IGET  (r4 I:int[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.nspCounts int[] \l0x0055: IGET  (r5 I:int) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.depth int \l0x0057: ARITH  (r5 I:int) = (r5 I:int) + (r0 I:int) \l0x0058: AGET  (r4 I:?[int, float]) = (r4 I:?[int, float][]), (r5 I:?[int, short, byte, char]) \l}"];
Node_17 [shape=record,label="{17\:\ 0x005a|0x005a: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:26:0x0084 \l}"];
Node_18 [shape=record,label="{18\:\ 0x005c|0x005c: CONST_STR  (r4 I:java.lang.String) =  \"\" \l0x005e: IGET  (r5 I:java.lang.String[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.nspStack java.lang.String[] \l0x0060: ARITH  (r6 I:int) = (r3 I:int) * (2 int) \l0x0062: AGET  (r5 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x0064: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0068|0x0068: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:25:0x0081 \l}"];
Node_20 [shape=record,label="{20\:\ 0x006a|0x006a: CONST_STR  (r4 I:java.lang.String) =  \"\" \l0x006c: IGET  (r5 I:java.lang.String[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.nspStack java.lang.String[] \l0x006e: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l0x0070: AGET  (r5 I:?[OBJECT, ARRAY]) = (r5 I:?[OBJECT, ARRAY][]), (r6 I:?[int, short, byte, char]) \l0x0072: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_21 [shape=record,label="{21\:\ 0x0076|0x0076: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0079 \l}"];
Node_23 [shape=record,label="{23\:\ 0x0079|0x0079: NEW_INSTANCE  (r8 I:java.lang.IllegalStateException) =  java.lang.IllegalStateException \l0x007b: CONST_STR  (r9 I:java.lang.String) =  \"Cannot set default namespace for elements in no namespace\" \l0x007d: INVOKE  \l  (r8 I:java.lang.IllegalStateException)\l  (r9 I:java.lang.String)\l java.lang.IllegalStateException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_24 [shape=record,label="{24\:\ 0x0080|0x0080: THROW  (r8 I:java.lang.Throwable) \l}"];
Node_25 [shape=record,label="{25\:\ 0x0081|0x0081: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x0084|0x0084: IGET  (r3 I:java.lang.String[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.elementStack java.lang.String[] \l0x0086: ARITH  (r4 I:int) = (r1 I:int) + (1 int) \l0x0088: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r8 I:?[OBJECT, ARRAY])\l \l0x008a: IGET  (r8 I:java.lang.String[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.elementStack java.lang.String[] \l0x008c: ARITH  (r1 I:int) = (r4 I:int) + (1 int) \l0x008e: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x0090: IGET  (r8 I:java.lang.String[]) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.elementStack java.lang.String[] \l0x0092: APUT  \l  (r8 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r9 I:?[OBJECT, ARRAY])\l \l0x0094: IGET  (r8 I:java.io.Writer) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.writer java.io.Writer \l0x0096: CONST  (r1 I:?[int, float, short, byte, char]) = (60 ?[int, float, short, byte, char]) \l0x0098: INVOKE  (r8 I:java.io.Writer), (r1 I:int) java.io.Writer.write(int):void type: VIRTUAL \l0x009b: CONST_STR  (r8 I:java.lang.String) =  \"\" \l0x009d: INVOKE  (r8 I:boolean) = (r8 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_27 [shape=record,label="{27\:\ 0x00a1|0x00a1: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:29:0x00af \l}"];
Node_28 [shape=record,label="{28\:\ 0x00a3|0x00a3: IGET  (r8 I:java.io.Writer) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.writer java.io.Writer \l0x00a5: INVOKE  (r8 I:java.io.Writer), (r2 I:java.lang.String) java.io.Writer.write(java.lang.String):void type: VIRTUAL \l0x00a8: IGET  (r8 I:java.io.Writer) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.writer java.io.Writer \l0x00aa: CONST  (r1 I:?[int, float, short, byte, char]) = (58 ?[int, float, short, byte, char]) \l0x00ac: INVOKE  (r8 I:java.io.Writer), (r1 I:int) java.io.Writer.write(int):void type: VIRTUAL \l}"];
Node_29 [shape=record,label="{29\:\ 0x00af|0x00af: IGET  (r8 I:java.io.Writer) = (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.writer java.io.Writer \l0x00b1: INVOKE  (r8 I:java.io.Writer), (r9 I:java.lang.String) java.io.Writer.write(java.lang.String):void type: VIRTUAL \l0x00b4: IPUT  (r0 I:boolean), (r7 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.pending boolean \l}"];
Node_30 [shape=record,label="{30\:\ 0x00b6|0x00b6: RETURN  (r7 I:org.xmlpull.v1.XmlSerializer) \l}"];
MethodNode[shape=record,label="{public org.xmlpull.v1.XmlSerializer org.kxml2.io.KXmlSerializer.startTag((r7 'this' I:org.kxml2.io.KXmlSerializer A[IMMUTABLE_TYPE, THIS]), (r8 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_13;
Node_12 -> Node_13;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_26;
Node_15 -> Node_16;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_25;
Node_20 -> Node_21;
Node_21 -> Node_23;
Node_21 -> Node_25[style=dashed];
Node_23 -> Node_24;
Node_25 -> Node_16;
Node_26 -> Node_27;
Node_27 -> Node_28[style=dashed];
Node_27 -> Node_29;
Node_28 -> Node_29;
Node_29 -> Node_30;
}

