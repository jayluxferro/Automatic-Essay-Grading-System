digraph "CFG fororg.kxml2.io.KXmlSerializer.setOutput(Ljava\/io\/Writer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IPUT  (r5 I:java.io.Writer), (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.writer java.io.Writer \l0x0002: IGET  (r5 I:int[]) = (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.nspCounts int[] \l0x0004: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0005: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: APUT  \l  (r5 I:?[int, float][])\l  (r1 I:?[int, short, byte, char])\l  (r0 I:?[int, float])\l \l0x0008: IGET  (r5 I:int[]) = (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.nspCounts int[] \l0x000a: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x000b: APUT  \l  (r5 I:?[int, float][])\l  (r2 I:?[int, short, byte, char])\l  (r0 I:?[int, float])\l \l0x000d: IGET  (r5 I:java.lang.String[]) = (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.nspStack java.lang.String[] \l0x000f: CONST_STR  (r3 I:java.lang.String) =  \"\" \l0x0011: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r1 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0013: IGET  (r5 I:java.lang.String[]) = (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.nspStack java.lang.String[] \l0x0015: CONST_STR  (r3 I:java.lang.String) =  \"\" \l0x0017: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x0019: IGET  (r5 I:java.lang.String[]) = (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.nspStack java.lang.String[] \l0x001b: CONST_STR  (r2 I:java.lang.String) =  \"xml\" \l0x001d: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r0 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x001f: IGET  (r5 I:java.lang.String[]) = (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.nspStack java.lang.String[] \l0x0021: CONST_STR  (r0 I:java.lang.String) =  \"http:\/\/www.w3.org\/XML\/1998\/namespace\" \l0x0023: CONST  (r2 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0024: APUT  \l  (r5 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l0x0026: IPUT  (r1 I:boolean), (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.pending boolean \l0x0028: IPUT  (r1 I:int), (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.auto int \l0x002a: IPUT  (r1 I:int), (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.depth int \l0x002c: IPUT  (r1 I:boolean), (r4 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.unicode boolean \l}"];
Node_1 [shape=record,label="{1\:\ 0x002e|0x002e: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.kxml2.io.KXmlSerializer.setOutput((r4 'this' I:org.kxml2.io.KXmlSerializer A[IMMUTABLE_TYPE, THIS]), (r5 I:java.io.Writer A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

