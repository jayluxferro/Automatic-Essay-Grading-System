digraph "CFG fororg.kxml2.io.KXmlSerializer.getPrefix(Ljava\/lang\/String;Z)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Splitter:B:1:0x0001\l|0x0001: INVOKE  (r2 I:java.lang.String) = \l  (r1 I:org.kxml2.io.KXmlSerializer)\l  (r2 I:java.lang.String)\l  (r0 I:boolean)\l  (r3 I:boolean)\l org.kxml2.io.KXmlSerializer.getPrefix(java.lang.String, boolean, boolean):java.lang.String type: DIRECT A[Catch:\{ IOException \-\> 0x0006 \}, TRY_ENTER]\l0x0004: NOP   A[TRY_LEAVE]\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|0x0005: RETURN  (r2 I:java.lang.String) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|ExcHandler: IOException null\lSplitter:B:1:0x0001\l|0x0006: MOVE_EXCEPTION  (r2 I:?[OBJECT]) =  \l}"];
Node_5 [shape=record,label="{5\:\ 0x0007|0x0007: NEW_INSTANCE  (r3 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x0009: INVOKE  (r2 I:java.lang.String) = (r2 I:java.io.IOException) java.io.IOException.toString():java.lang.String type: VIRTUAL \l0x000d: INVOKE  (r3 I:java.lang.RuntimeException), (r2 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_6 [shape=record,label="{6\:\ 0x0010|0x0010: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public java.lang.String org.kxml2.io.KXmlSerializer.getPrefix((r1 'this' I:org.kxml2.io.KXmlSerializer A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

