digraph "CFG fororg.kxml2.io.KXmlSerializer.getPrefix(Ljava\/lang\/String;ZZ)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = r6.nspCounts[r6.depth + 1] * 2\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:0:0x0000, B:17:0x004d] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000c\-\>B:17:0x004d\l|int r0 = r0 + \-2\lr1 = null\l}"];
Node_2 [shape=record,label="{2\:\ 0x000d|if (r0 \< 0) goto L_0x0050\l}"];
Node_3 [shape=record,label="{3\:\ 0x000f}"];
Node_4 [shape=record,label="{4\:\ 0x0019|if (r6.nspStack[r0 + 1].equals(r7) == false) goto L_0x004d\l}"];
Node_5 [shape=record,label="{5\:\ 0x001b|if (r8 != false) goto L_0x0029\l}"];
Node_6 [shape=record,label="{6\:\ 0x001d}"];
Node_7 [shape=record,label="{7\:\ 0x0027|if (r6.nspStack[r0].equals(\"\") != false) goto L_0x004d\l}"];
Node_8 [shape=record,label="{8\:\ 0x0029|r2 = r6.nspStack[r0]\lint r3 = r0 + 2\l}"];
Node_9 [shape=record,label="{9\:\ 0x002f|LOOP_START\lPHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:8:0x0029, B:13:0x0046] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:9:0x002f\-\>B:13:0x0046\l}"];
Node_10 [shape=record,label="{10\:\ 0x0039|if (r3 \>= (r6.nspCounts[r6.depth + 1] * 2)) goto L_0x0049\l}"];
Node_11 [shape=record,label="{11\:\ 0x003b}"];
Node_12 [shape=record,label="{12\:\ 0x0043|if (r6.nspStack[r3].equals(r2) == false) goto L_0x0046\l}"];
Node_13 [shape=record,label="{13\:\ 0x0046|LOOP_END\lLOOP:1: B:9:0x002f\-\>B:13:0x0046\l|int r3 = r3 + 1\l}"];
Node_14 [shape=record,label="{14\:\ 0x0049|r1 = r2\l}"];
Node_15 [shape=record,label="{15\:\ 0x004a|PHI: r1 \l  PHI: (r1v4 java.lang.String) = (r1v3 java.lang.String), (r1v2 java.lang.String) binds: [B:14:0x0049, B:37:0x004a] A[DONT_GENERATE, DONT_INLINE]\l|if (r1 == null) goto L_0x004d\l}"];
Node_16 [shape=record,label="{16\:\ 0x004c|RETURN\l|return r1\l}"];
Node_17 [shape=record,label="{17\:\ 0x004d|LOOP_END\lLOOP:0: B:1:0x000c\-\>B:17:0x004d\l}"];
Node_18 [shape=record,label="{18\:\ 0x0050|if (r9 != false) goto L_0x0053\l}"];
Node_19 [shape=record,label="{19\:\ 0x0052|RETURN\l|return null\l}"];
Node_20 [shape=record,label="{20\:\ 0x0053}"];
Node_21 [shape=record,label="{21\:\ 0x0059|if (\"\".equals(r7) == false) goto L_0x005e\l}"];
Node_22 [shape=record,label="{22\:\ 0x005b|java.lang.String r8 = \"\"\l}"];
Node_23 [shape=record,label="{23\:\ 0x005e|LOOP_START\lLOOP:2: B:23:0x005e\-\>B:29:0x0092\l|java.lang.StringBuffer r8 = new java.lang.StringBuffer()\lr8.append(\"n\")\lint r9 = r6.auto\lr6.auto = r9 + 1\lr8.append(r9)\ljava.lang.String r8 = r8.toString()\lint r9 = (r6.nspCounts[r6.depth + 1] * 2) + \-2\l}"];
Node_24 [shape=record,label="{24\:\ 0x0081|LOOP_START\lPHI: r9 \l  PHI: (r9v8 int) = (r9v7 int), (r9v9 int) binds: [B:23:0x005e, B:28:0x008f] A[DONT_GENERATE, DONT_INLINE]\lLOOP:3: B:24:0x0081\-\>B:28:0x008f\l|if (r9 \< 0) goto L_0x0092\l}"];
Node_25 [shape=record,label="{25\:\ 0x0083}"];
Node_26 [shape=record,label="{26\:\ 0x008b|if (r8.equals(r6.nspStack[r9]) == false) goto L_0x008f\l}"];
Node_27 [shape=record,label="{27\:\ 0x008d|r8 = null\l}"];
Node_28 [shape=record,label="{28\:\ 0x008f|LOOP_END\lLOOP:3: B:24:0x0081\-\>B:28:0x008f\l|int r9 = r9 + \-2\l}"];
Node_29 [shape=record,label="{29\:\ 0x0092|LOOP_END\lPHI: r8 \l  PHI: (r8v6 java.lang.String) = (r8v5 java.lang.String), (r8v7 java.lang.String) binds: [B:40:0x0092, B:41:0x0092] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:23:0x005e\-\>B:29:0x0092\l|if (r8 == null) goto L_0x005e\l}"];
Node_30 [shape=record,label="{30\:\ 0x0094|PHI: r8 \l  PHI: (r8v3 java.lang.String) = (r8v6 java.lang.String), (r8v8 java.lang.String) binds: [B:39:0x0094, B:22:0x005b] A[DONT_GENERATE, DONT_INLINE]\l|boolean r9 = r6.pending\lr6.pending = false\lsetPrefix(r8, r7)\lr6.pending = r9\l}"];
Node_31 [shape=record,label="{31\:\ 0x009e|RETURN\l|return r8\l}"];
Node_32 [shape=record,label="{32\:\ 0x004c|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0050|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x004d|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ 0x004d|SYNTHETIC\l}"];
Node_36 [shape=record,label="{36\:\ 0x004d|SYNTHETIC\l}"];
Node_37 [shape=record,label="{37\:\ 0x004a|SYNTHETIC\l}"];
Node_38 [shape=record,label="{38\:\ 0x0049|SYNTHETIC\l}"];
Node_39 [shape=record,label="{39\:\ 0x0094|SYNTHETIC\l}"];
Node_40 [shape=record,label="{40\:\ 0x0092|SYNTHETIC\l}"];
Node_41 [shape=record,label="{41\:\ 0x0092|SYNTHETIC\l}"];
Node_42 [shape=record,label="{42\:\ 0x008d|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final java.lang.String org.kxml2.io.KXmlSerializer.getPrefix((r6v0 'this' org.kxml2.io.KXmlSerializer A[IMMUTABLE_TYPE, THIS]), (r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_33;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_34;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_35;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_38;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_12 -> Node_37[style=dashed];
Node_13 -> Node_9;
Node_14 -> Node_15;
Node_15 -> Node_32[style=dashed];
Node_15 -> Node_36;
Node_17 -> Node_1;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_20;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_30;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_40;
Node_25 -> Node_26;
Node_26 -> Node_28;
Node_26 -> Node_42[style=dashed];
Node_27 -> Node_41;
Node_28 -> Node_24;
Node_29 -> Node_23;
Node_29 -> Node_39[style=dashed];
Node_30 -> Node_31;
Node_32 -> Node_16;
Node_33 -> Node_18;
Node_34 -> Node_17;
Node_35 -> Node_17;
Node_36 -> Node_17;
Node_37 -> Node_15;
Node_38 -> Node_14;
Node_39 -> Node_30;
Node_40 -> Node_29;
Node_41 -> Node_29;
Node_42 -> Node_27;
}

