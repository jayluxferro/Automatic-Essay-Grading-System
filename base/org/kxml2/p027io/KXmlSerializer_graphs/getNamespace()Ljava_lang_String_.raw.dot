digraph "CFG fororg.kxml2.io.KXmlSerializer.getNamespace()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r2 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.getDepth():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0008 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IGET  (r0 I:java.lang.String[]) = (r2 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.elementStack java.lang.String[] \l0x000a: INVOKE  (r1 I:int) = (r2 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.getDepth():int type: VIRTUAL \l0x000e: ARITH  (r1 I:int) = (r1 I:int) * (3 int) \l0x0010: ARITH  (r1 I:int) = (r1 I:int) + (\-3 int) \l0x0012: AGET  (r0 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY][]), (r1 I:?[int, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0014|0x0014: RETURN  (r0 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String org.kxml2.io.KXmlSerializer.getNamespace((r2 'this' I:org.kxml2.io.KXmlSerializer A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

