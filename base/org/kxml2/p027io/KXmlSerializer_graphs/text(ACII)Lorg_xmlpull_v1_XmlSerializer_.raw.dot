digraph "CFG fororg.kxml2.io.KXmlSerializer.text([CII)Lorg\/xmlpull\/v1\/XmlSerializer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.lang.String) =  java.lang.String \l0x0002: INVOKE  \l  (r0 I:java.lang.String)\l  (r2 I:char[])\l  (r3 I:int)\l  (r4 I:int)\l java.lang.String.\<init\>(char[], int, int):void type: DIRECT \l0x0005: INVOKE  (r1 I:org.kxml2.io.KXmlSerializer), (r0 I:java.lang.String) org.kxml2.io.KXmlSerializer.text(java.lang.String):org.xmlpull.v1.XmlSerializer type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: RETURN  (r1 I:org.xmlpull.v1.XmlSerializer) \l}"];
MethodNode[shape=record,label="{public org.xmlpull.v1.XmlSerializer org.kxml2.io.KXmlSerializer.text((r1 'this' I:org.kxml2.io.KXmlSerializer A[IMMUTABLE_TYPE, THIS]), (r2 I:char[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

