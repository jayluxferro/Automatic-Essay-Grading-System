digraph "CFG fororg.kxml2.io.KXmlSerializer.text(Ljava\/lang\/String;)Lorg\/xmlpull\/v1\/XmlSerializer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: INVOKE  (r3 I:org.kxml2.io.KXmlSerializer), (r0 I:boolean) org.kxml2.io.KXmlSerializer.check(boolean):void type: DIRECT \l0x0004: IGET  (r1 I:boolean[]) = (r3 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.indent boolean[] \l0x0006: IGET  (r2 I:int) = (r3 I:org.kxml2.io.KXmlSerializer) org.kxml2.io.KXmlSerializer.depth int \l0x0008: APUT  \l  (r1 I:boolean[] A[IMMUTABLE_TYPE])\l  (r2 I:?[int, short, byte, char])\l  (r0 I:boolean A[IMMUTABLE_TYPE])\l \l0x000a: CONST  (r0 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l0x000b: INVOKE  \l  (r3 I:org.kxml2.io.KXmlSerializer)\l  (r4 I:java.lang.String)\l  (r0 I:int)\l org.kxml2.io.KXmlSerializer.writeEscaped(java.lang.String, int):void type: DIRECT \l}"];
Node_1 [shape=record,label="{1\:\ 0x000e|0x000e: RETURN  (r3 I:org.xmlpull.v1.XmlSerializer) \l}"];
MethodNode[shape=record,label="{public org.xmlpull.v1.XmlSerializer org.kxml2.io.KXmlSerializer.text((r3 'this' I:org.kxml2.io.KXmlSerializer A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

