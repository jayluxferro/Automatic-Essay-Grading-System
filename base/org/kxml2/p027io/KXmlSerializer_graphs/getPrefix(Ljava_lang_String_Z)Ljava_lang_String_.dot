digraph "CFG fororg.kxml2.io.KXmlSerializer.getPrefix(Ljava\/lang\/String;Z)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|SYNTHETIC\lSplitter:B:1:0x0001\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0006 \}\lSplitter:B:1:0x0001\l}"];
Node_3 [shape=record,label="{3\:\ 0x0005|RETURN\l|return getPrefix(r2, false, r3)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0006|ExcHandler: IOException (r2v1 'e' java.io.IOException A[CUSTOM_DECLARE])\lSplitter:B:1:0x0001\l|java.io.IOException r2 = move\-exception\l}"];
Node_5 [shape=record,label="{5\:\ 0x0007}"];
Node_6 [shape=record,label="{6\:\ 0x0010|throw new java.lang.RuntimeException(r2.toString())\l}"];
MethodNode[shape=record,label="{public java.lang.String org.kxml2.io.KXmlSerializer.getPrefix((r1v0 'this' org.kxml2.io.KXmlSerializer A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

