digraph "CFG fororg.kxml2.io.KXmlParser.parseDoctype(Z)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r0 = 1\lr1 = false\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|LOOP_START\lPHI: r0 r1 \l  PHI: (r0v1 int) = (r0v0 int), (r0v2 int) binds: [B:0:0x0000, B:20:0x0002] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v1 boolean) = (r1v0 boolean), (r1v2 boolean) binds: [B:0:0x0000, B:20:0x0002] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0002\-\>B:20:0x0002\l|int r2 = read()\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r2 == \-1) goto L_0x002a\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009}"];
Node_4 [shape=record,label="{4\:\ 0x000b|if (r2 == 39) goto L_0x0022\l}"];
Node_5 [shape=record,label="{5\:\ 0x000d}"];
Node_6 [shape=record,label="{6\:\ 0x000f|if (r2 == 60) goto L_0x001d\l}"];
Node_7 [shape=record,label="{7\:\ 0x0011}"];
Node_8 [shape=record,label="{8\:\ 0x0013|if (r2 == 62) goto L_0x0016\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|if (r1 != false) goto L_0x0024\l}"];
Node_10 [shape=record,label="{10\:\ 0x0018|int r0 = r0 + \-1\l}"];
Node_11 [shape=record,label="{11\:\ 0x001a|if (r0 != 0) goto L_0x0024\l}"];
Node_12 [shape=record,label="{12\:\ 0x001c|RETURN\l|return\l}"];
Node_13 [shape=record,label="{13\:\ 0x001d|if (r1 != false) goto L_0x0024\l}"];
Node_14 [shape=record,label="{14\:\ 0x001f|int r0 = r0 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x0022|r1 = r1 ^ true\l}"];
Node_16 [shape=record,label="{16\:\ 0x0024|PHI: r0 r1 \l  PHI: (r0v2 int) = (r0v1 int), (r0v1 int), (r0v3 int), (r0v1 int), (r0v1 int), (r0v4 int) binds: [B:15:0x0022, B:13:0x001d, B:14:0x001f, B:8:0x0013, B:9:0x0016, B:11:0x001a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r1v2 boolean) = (r1v3 boolean), (r1v1 boolean), (r1v1 boolean), (r1v1 boolean), (r1v1 boolean), (r1v1 boolean) binds: [B:15:0x0022, B:13:0x001d, B:14:0x001f, B:8:0x0013, B:9:0x0016, B:11:0x001a] A[DONT_GENERATE, DONT_INLINE]\l|if (r5 == false) goto L_0x0002\l}"];
Node_17 [shape=record,label="{17\:\ 0x0026|push(r2)\l}"];
Node_18 [shape=record,label="{18\:\ 0x002a|error(UNEXPECTED_EOF)\l}"];
Node_19 [shape=record,label="{19\:\ 0x002f|RETURN\l|return\l}"];
Node_20 [shape=record,label="{20\:\ 0x0002|LOOP_END\lSYNTHETIC\lLOOP:0: B:1:0x0002\-\>B:20:0x0002\l}"];
Node_21 [shape=record,label="{21\:\ 0x002a|SYNTHETIC\l}"];
Node_22 [shape=record,label="{22\:\ 0x001c|SYNTHETIC\l}"];
Node_23 [shape=record,label="{23\:\ 0x0002|SYNTHETIC\l}"];
Node_24 [shape=record,label="{24\:\ 0x0002|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final void org.kxml2.io.KXmlParser.parseDoctype((r4v0 'this' org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_21;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_15;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_13;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_8 -> Node_16[style=dashed];
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_16;
Node_10 -> Node_11;
Node_11 -> Node_16;
Node_11 -> Node_22[style=dashed];
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_16;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_23;
Node_17 -> Node_24;
Node_18 -> Node_19;
Node_20 -> Node_1;
Node_21 -> Node_18;
Node_22 -> Node_12;
Node_23 -> Node_20;
Node_24 -> Node_20;
}

