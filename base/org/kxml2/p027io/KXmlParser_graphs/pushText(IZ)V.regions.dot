digraph "CFG fororg.kxml2.io.KXmlParser.pushText(IZ)V" {
subgraph cluster_Region_593604642 {
label = "R(2:0|(2:4|(4:(2:(1:16)(1:17)|18)(1:(1:11)(1:39))|(1:23)|24|27)(1:38)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r1 = peek(0)\lint r2 = 0\l}"];
subgraph cluster_LoopRegion_1456581506 {
label = "LOOP:0: (2:4|(4:(2:(1:16)(1:17)|18)(1:(1:11)(1:39))|(1:23)|24|27)(1:38))";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r1 != \-1) goto L_0x0009\l}"];
subgraph cluster_Region_1642718961 {
label = "R(2:4|(4:(2:(1:16)(1:17)|18)(1:(1:11)(1:39))|(1:23)|24|27)(1:38))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|int r4 = 32\l}"];
subgraph cluster_IfRegion_2093572163 {
label = "IF [B:5:0x000f, B:6:0x0011, B:7:0x0013] THEN: R(4:(2:(1:16)(1:17)|18)(1:(1:11)(1:39))|(1:23)|24|27) ELSE: R(1:38)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000f|if (r8 != 32) goto L_0x0016\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|ADDED_TO_REGION\l|if (r1 \> 32) goto L_0x0013\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|ADDED_TO_REGION\l|if (r1 != 62) goto L_0x0016\l}"];
subgraph cluster_Region_879587015 {
label = "R(4:(2:(1:16)(1:17)|18)(1:(1:11)(1:39))|(1:23)|24|27)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1376202584 {
label = "IF [B:9:0x0019] THEN: R(2:(1:16)(1:17)|18) ELSE: R(1:(1:11)(1:39))";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0019|if (r1 != 38) goto L_0x0022\l}"];
subgraph cluster_Region_485416589 {
label = "R(2:(1:16)(1:17)|18)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_230910089 {
label = "IF [B:13:0x0024, B:15:0x0028] THEN: R(1:16) ELSE: R(1:17)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0024|if (r1 == 10) goto L_0x0026\l}"];
Node_15 [shape=record,label="{15\:\ 0x0028|ADDED_TO_REGION\l|if (r7.type == 2) goto L_0x002a\l}"];
subgraph cluster_Region_92995394 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002a|read()\l}"];
}
subgraph cluster_Region_184510587 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x002e|int r4 = read()\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x0032|PHI: r4 \l  PHI: (r4v2 int) = (r4v3 int), (r4v0 int) binds: [B:17:0x002e, B:16:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|push(r4)\l}"];
}
subgraph cluster_Region_900418775 {
label = "R(1:(1:11)(1:39)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_4128473 {
label = "IF [B:10:0x001b] THEN: R(1:11) ELSE: R(1:39) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x001b|if (r9 != false) goto L_0x001e\l}"];
subgraph cluster_Region_529866093 {
label = "R(1:11)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x001e|pushEntity()\l}"];
}
subgraph cluster_Region_1295487282 {
label = "R(1:39)";
node [shape=record,color=blue];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
subgraph cluster_IfRegion_1444237064 {
label = "IF [B:20:0x0037, B:21:0x0039, B:22:0x003b] THEN: R(1:23) ELSE: null";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0037|ADDED_TO_REGION\l|if (r1 == 62) goto L_0x0039\l}"];
Node_21 [shape=record,label="{21\:\ 0x0039|ADDED_TO_REGION\l|if (r2 \>= 2) goto L_0x003b\l}"];
Node_22 [shape=record,label="{22\:\ 0x003b|ADDED_TO_REGION\l|if (r8 != 93) goto L_0x003d\l}"];
subgraph cluster_Region_571842999 {
label = "R(1:23)";
node [shape=record,color=blue];
Node_23 [shape=record,label="{23\:\ 0x003d|error(\"Illegal: ]]\>\")\l}"];
}
}
Node_24 [shape=record,label="{24\:\ 0x0042|r2 = r1 == 93 ? r2 + 1 : 0\l}"];
Node_27 [shape=record,label="{27\:\ 0x0048|LOOP_END\lPHI: r2 \l  PHI: (r2v2 int) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:27:0x0048\l|int r1 = peek(0)\l}"];
}
subgraph cluster_Region_1428835098 {
label = "R(1:38)";
node [shape=record,color=blue];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
}
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0006|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:27:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:27:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:27:0x0048\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0009|ADDED_TO_REGION\l|if (r1 != r8) goto L_0x000b\l}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0016}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0022}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x0026}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0035}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0044}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0047}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x004d|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x004d|SYNTHETIC\l}"];
Node_30 [shape=record,color=red,label="{30\:\ 0x004d|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_31 [shape=record,color=red,label="{31\:\ 0x004d|SYNTHETIC\l}"];
Node_32 [shape=record,color=red,label="{32\:\ 0x004d|SYNTHETIC\l}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0048|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0048|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_36 [shape=record,color=red,label="{36\:\ ?|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
MethodNode[shape=record,label="{private final void org.kxml2.io.KXmlParser.pushText((r7v0 'this' org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_28[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7;
Node_6 -> Node_30[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_31[style=dashed];
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_10 -> Node_11;
Node_10 -> Node_32[style=dashed];
Node_11 -> Node_19;
Node_20 -> Node_21;
Node_20 -> Node_24[style=dashed];
Node_21 -> Node_22;
Node_21 -> Node_24[style=dashed];
Node_22 -> Node_23;
Node_22 -> Node_24[style=dashed];
Node_23 -> Node_24;
Node_24 -> Node_25;
Node_24 -> Node_26;
Node_27 -> Node_1;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_3 -> Node_29[style=dashed];
Node_8 -> Node_9;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_19 -> Node_20;
Node_25 -> Node_34;
Node_26 -> Node_33;
Node_28 -> Node_35;
Node_29 -> Node_36;
Node_30 -> Node_37;
Node_31 -> Node_38;
Node_32 -> Node_39;
Node_33 -> Node_27;
Node_34 -> Node_27;
}

