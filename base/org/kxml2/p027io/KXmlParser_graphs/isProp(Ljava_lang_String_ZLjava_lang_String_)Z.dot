digraph "CFG fororg.kxml2.io.KXmlParser.isProp(Ljava\/lang\/String;ZLjava\/lang\/String;)Z" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|if (r2.startsWith(\"http:\/\/xmlpull.org\/v1\/doc\/\") != false) goto L_0x000a\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|RETURN\l|return false\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r3 == false) goto L_0x0017\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|r3 = 42\l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|PHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:7:0x0017, B:4:0x000c] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|RETURN\l|return r2.substring(r3).equals(r4)\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|r3 = 40\l}"];
MethodNode[shape=record,label="{private final boolean org.kxml2.io.KXmlParser.isProp((r1v0 'this' org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_7;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_7 -> Node_5;
}

