digraph "CFG fororg.kxml2.io.KXmlParser.setInput(Ljava\/io\/InputStream;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0001: IPUT  (r0 I:int), (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcPos int \l0x0003: IPUT  (r0 I:int), (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r11 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:69:0x013e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r12 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x010f \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|SYNTHETIC\lSplitter:B:4:0x000a\l}"];
Node_5 [shape=record,label="{5\:\ ?|Splitter:B:4:0x000a\l|0x000a: IGET  (r2 I:int) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}, TRY_ENTER]\l0x000c: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l0x000d: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_6 [shape=record,label="{6\:\ 0x000e|0x000e: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:11:0x0026 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_7 [shape=record,label="{7\:\ 0x0010|0x0010: INVOKE  (r2 I:int) = (r11 I:java.io.InputStream) java.io.InputStream.read():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_8 [shape=record,label="{8\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0017 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_9 [shape=record,label="{9\:\ 0x0016|0x0016: GOTO  \-\> 0x0026 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_10 [shape=record,label="{10\:\ 0x0017|0x0017: ARITH  (r1 I:int) = (r1 I:int) \<\< (8 int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x0019: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) \| (r2 I:?[int, boolean, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l0x001a: IGET  (r3 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x001c: IGET  (r4 I:int) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}]\l0x001e: ARITH  (r5 I:int) = (r4 I:int) + (1 int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x0020: IPUT  (r5 I:int), (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}]\l0x0022: CAST  (r2 I:char) = (char) (r2 I:int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x0023: APUT  \l  (r3 I:char[] A[IMMUTABLE_TYPE])\l  (r4 I:?[int, short, byte, char])\l  (r2 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x0025: GOTO  \-\> 0x000a A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: IGET  (r2 I:int) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_12 [shape=record,label="{12\:\ 0x0028|0x0028: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:62:0x010f A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_13 [shape=record,label="{13\:\ 0x002a|0x002a: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (\-131072(0xfffffffffffe0000, float:NaN) ?[int, float, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_14 [shape=record,label="{14\:\ 0x002c|0x002c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:59:0x010a A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_15 [shape=record,label="{15\:\ 0x002e|0x002e: CONST  (r3 I:?[int, float, short, byte, char]) = (60 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l0x0030: CONST  (r5 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_16 [shape=record,label="{16\:\ 0x0031|0x0031: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:58:0x0103 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_17 [shape=record,label="{17\:\ 0x0033|0x0033: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (65279(0xfeff, float:9.1475E\-41) ?[int, float, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_18 [shape=record,label="{18\:\ 0x0036|0x0036: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:56:0x00fe A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_19 [shape=record,label="{19\:\ 0x0038|0x0038: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (3932223(0x3c003f, float:5.510218E\-39) ?[int, float, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x003b: CONST  (r7 I:?[int, float, short, byte, char]) = (63 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l0x003d: CONST  (r8 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_20 [shape=record,label="{20\:\ 0x003e|0x003e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:55:0x00f3 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_21 [shape=record,label="{21\:\ 0x0040|0x0040: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1006632960(0x3c000000, float:0.0078125) ?[int, float, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_22 [shape=record,label="{22\:\ 0x0042|0x0042: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:54:0x00ec A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_23 [shape=record,label="{23\:\ 0x0044|0x0044: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (1006649088(0x3c003f00, float:0.00782752) ?[int, float, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_24 [shape=record,label="{24\:\ 0x0047|0x0047: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:52:0x00df A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_25 [shape=record,label="{25\:\ 0x0049|0x0049: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1010792557(0x3c3f786d, float:0.011686427) ?[int, float, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_26 [shape=record,label="{26\:\ 0x004c|0x004c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x004f A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_27 [shape=record,label="{27\:\ 0x004e|0x004e: GOTO  \-\> 0x0098 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_28 [shape=record,label="{28\:\ 0x004f|0x004f: INVOKE  (r3 I:int) = (r11 I:java.io.InputStream) java.io.InputStream.read():int type: VIRTUAL A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0053|0x0053: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:31:0x0056 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_30 [shape=record,label="{30\:\ 0x0055|0x0055: GOTO  \-\> 0x0098 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_31 [shape=record,label="{31\:\ 0x0056|0x0056: IGET  (r6 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x0058: IGET  (r7 I:int) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}]\l0x005a: ARITH  (r9 I:int) = (r7 I:int) + (1 int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x005c: IPUT  (r9 I:int), (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}]\l0x005e: CAST  (r9 I:char) = (char) (r3 I:int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x005f: APUT  \l  (r6 I:char[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l  (r9 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x0061: CONST  (r6 I:?[int, float, short, byte, char]) = (62 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_32 [shape=record,label="{32\:\ 0x0063|0x0063: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x004f A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_33 [shape=record,label="{33\:\ 0x0065|0x0065: NEW_INSTANCE  (r3 I:java.lang.String) =  java.lang.String A[Catch:\{ Exception \-\> 0x010d \}]\l0x0067: IGET  (r6 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x0069: IGET  (r7 I:int) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}]\l0x006b: INVOKE  \l  (r3 I:java.lang.String)\l  (r6 I:char[])\l  (r0 I:int)\l  (r7 I:int)\l java.lang.String.\<init\>(char[], int, int):void type: DIRECT A[Catch:\{ Exception \-\> 0x010d \}]\l0x006e: CONST_STR  (r6 I:java.lang.String) =  \"encoding\" A[Catch:\{ Exception \-\> 0x010d \}]\l0x0070: INVOKE  (r6 I:int) = (r3 I:java.lang.String), (r6 I:java.lang.String) java.lang.String.indexOf(java.lang.String):int type: VIRTUAL A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_34 [shape=record,label="{34\:\ 0x0074|0x0074: IF  (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:41:0x0098 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_35 [shape=record,label="{35\:\ 0x0076|0x0076: INVOKE  (r4 I:char) = (r3 I:java.lang.String), (r6 I:int) java.lang.String.charAt(int):char type: VIRTUAL A[Catch:\{ Exception \-\> 0x010d \}]\l0x007a: CONST  (r7 I:?[int, float, short, byte, char]) = (34 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_36 [shape=record,label="{36\:\ 0x007c|0x007c: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0089 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_37 [shape=record,label="{37\:\ 0x007e|0x007e: INVOKE  (r4 I:char) = (r3 I:java.lang.String), (r6 I:int) java.lang.String.charAt(int):char type: VIRTUAL A[Catch:\{ Exception \-\> 0x010d \}]\l0x0082: CONST  (r7 I:?[int, float, short, byte, char]) = (39 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_38 [shape=record,label="{38\:\ 0x0084|0x0084: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:40:0x0089 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_39 [shape=record,label="{39\:\ 0x0086|0x0086: ARITH  (r6 I:int) = (r6 I:int) + (1 int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x0088: GOTO  \-\> 0x0076 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_40 [shape=record,label="{40\:\ 0x0089|0x0089: ARITH  (r4 I:int) = (r6 I:int) + (1 int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x008b: INVOKE  (r6 I:char) = (r3 I:java.lang.String), (r6 I:int) java.lang.String.charAt(int):char type: VIRTUAL A[Catch:\{ Exception \-\> 0x010d \}]\l0x008f: INVOKE  (r6 I:int) = (r3 I:java.lang.String), (r6 I:int), (r4 I:int) java.lang.String.indexOf(int, int):int type: VIRTUAL A[Catch:\{ Exception \-\> 0x010d \}]\l0x0093: INVOKE  (r3 I:java.lang.String) = (r3 I:java.lang.String), (r4 I:int), (r6 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL A[Catch:\{ Exception \-\> 0x010d \}]\l0x0097: GOTO  \-\> 0x0099 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_41 [shape=record,label="{41\:\ 0x0098|0x0098: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_42 [shape=record,label="{42\:\ 0x0099|0x0099: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (\-65536(0xffffffffffff0000, float:NaN) ?[int, float, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x009b: ARITH  (r4 I:?[int, boolean, short, byte, char]) = (r4 I:?[int, boolean, short, byte, char]) & (r1 I:?[int, boolean, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l0x009c: CONST  (r6 I:?[int, float, short, byte, char]) = \l  (\-16842752(0xfffffffffeff0000, float:\-1.6947657E38) ?[int, float, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x009e: CONST  (r7 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_43 [shape=record,label="{43\:\ 0x009f|0x009f: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r6 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:46:0x00b6 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_44 [shape=record,label="{44\:\ 0x00a1|0x00a1: CONST_STR  (r1 I:java.lang.String) =  \"UTF\-16BE\" A[Catch:\{ Exception \-\> 0x010d \}]\l0x00a3: IGET  (r2 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00a5: IGET  (r3 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00a7: AGET  (r3 I:char A[IMMUTABLE_TYPE]) = \l  (r3 I:char[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00a9: ARITH  (r3 I:int) = (r3 I:int) \<\< (8 int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x00ab: IGET  (r4 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00ad: AGET  (r4 I:char A[IMMUTABLE_TYPE]) = \l  (r4 I:char[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00af: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) \| (r4 I:?[int, boolean, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l0x00b0: CAST  (r3 I:char) = (char) (r3 I:int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x00b1: APUT  \l  (r2 I:char[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_45 [shape=record,label="{45\:\ 0x00b3|0x00b3: IPUT  (r5 I:int), (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}]\l0x00b5: GOTO  \-\> 0x0110 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_46 [shape=record,label="{46\:\ 0x00b6|0x00b6: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:48:0x00cb A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_47 [shape=record,label="{47\:\ 0x00b8|0x00b8: CONST_STR  (r1 I:java.lang.String) =  \"UTF\-16LE\" A[Catch:\{ Exception \-\> 0x010d \}]\l0x00ba: IGET  (r2 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00bc: IGET  (r3 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00be: AGET  (r3 I:char A[IMMUTABLE_TYPE]) = \l  (r3 I:char[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00c0: ARITH  (r3 I:int) = (r3 I:int) \<\< (8 int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x00c2: IGET  (r4 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00c4: AGET  (r4 I:char A[IMMUTABLE_TYPE]) = \l  (r4 I:char[] A[IMMUTABLE_TYPE])\l  (r8 I:?[int, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00c6: ARITH  (r3 I:?[int, boolean, short, byte, char]) = (r3 I:?[int, boolean, short, byte, char]) \| (r4 I:?[int, boolean, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l0x00c7: CAST  (r3 I:char) = (char) (r3 I:int) A[Catch:\{ Exception \-\> 0x010d \}]\l0x00c8: APUT  \l  (r2 I:char[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00ca: GOTO  \-\> 0x00b3 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_48 [shape=record,label="{48\:\ 0x00cb|0x00cb: ARITH  (r1 I:?[int, boolean, short, byte, char]) = (r1 I:?[int, boolean, short, byte, char]) & (\-256(0xffffffffffffff00, float:NaN) ?[int, float, short, byte, char]) A[Catch:\{ Exception \-\> 0x010d \}]\l0x00cd: CONST  (r2 I:?[int, float, short, byte, char]) = \l  (\-272908544(0xffffffffefbbbf00, float:\-1.162092E29) ?[int, float, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_49 [shape=record,label="{49\:\ 0x00d0|0x00d0: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:51:0x00dd A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_50 [shape=record,label="{50\:\ 0x00d2|0x00d2: CONST_STR  (r1 I:java.lang.String) =  \"UTF\-8\" A[Catch:\{ Exception \-\> 0x010d \}]\l0x00d4: IGET  (r2 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00d6: IGET  (r3 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00d8: AGET  (r3 I:char A[IMMUTABLE_TYPE]) = \l  (r3 I:char[] A[IMMUTABLE_TYPE])\l  (r7 I:?[int, short, byte, char])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00da: APUT  \l  (r2 I:char[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00dc: GOTO  \-\> 0x00b3 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_51 [shape=record,label="{51\:\ 0x00dd|0x00dd: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r3 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x010d \}]\l0x00de: GOTO  \-\> 0x0110 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_52 [shape=record,label="{52\:\ 0x00df|0x00df: CONST_STR  (r1 I:java.lang.String) =  \"UTF\-16LE\" A[Catch:\{ Exception \-\> 0x010d \}]\l0x00e1: IGET  (r2 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00e3: APUT  \l  (r2 I:char[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00e5: IGET  (r0 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00e7: APUT  \l  (r0 I:char[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l  (r7 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_53 [shape=record,label="{53\:\ 0x00e9|0x00e9: IPUT  (r8 I:int), (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}]\l0x00eb: GOTO  \-\> 0x0110 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_54 [shape=record,label="{54\:\ 0x00ec|0x00ec: CONST_STR  (r1 I:java.lang.String) =  \"UTF\-32LE\" A[Catch:\{ Exception \-\> 0x010d \}]\l0x00ee: IGET  (r2 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00f0: APUT  \l  (r2 I:char[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00f2: GOTO  \-\> 0x00b3 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_55 [shape=record,label="{55\:\ 0x00f3|0x00f3: CONST_STR  (r1 I:java.lang.String) =  \"UTF\-16BE\" A[Catch:\{ Exception \-\> 0x010d \}]\l0x00f5: IGET  (r2 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00f7: APUT  \l  (r2 I:char[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00f9: IGET  (r0 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x00fb: APUT  \l  (r0 I:char[] A[IMMUTABLE_TYPE])\l  (r5 I:?[int, short, byte, char])\l  (r7 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x00fd: GOTO  \-\> 0x00e9 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_56 [shape=record,label="{56\:\ 0x00fe|0x00fe: CONST_STR  (r1 I:java.lang.String) =  \"UTF\-32BE\" A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_57 [shape=record,label="{57\:\ 0x0100|0x0100: IPUT  (r0 I:int), (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}]\l0x0102: GOTO  \-\> 0x0110 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_58 [shape=record,label="{58\:\ 0x0103|0x0103: CONST_STR  (r1 I:java.lang.String) =  \"UTF\-32BE\" A[Catch:\{ Exception \-\> 0x010d \}]\l0x0105: IGET  (r2 I:char[]) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcBuf char[] A[Catch:\{ Exception \-\> 0x010d \}]\l0x0107: APUT  \l  (r2 I:char[] A[IMMUTABLE_TYPE])\l  (r0 I:?[int, short, byte, char])\l  (r3 I:char A[IMMUTABLE_TYPE])\l A[Catch:\{ Exception \-\> 0x010d \}]\l0x0109: GOTO  \-\> 0x00b3 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_59 [shape=record,label="{59\:\ 0x010a|0x010a: CONST_STR  (r1 I:java.lang.String) =  \"UTF\-32LE\" A[Catch:\{ Exception \-\> 0x010d \}]\l0x010c: GOTO  \-\> 0x0100 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_60 [shape=record,label="{60\:\ 0x010d|ExcHandler: Exception null\lSplitter:B:4:0x000a\l|0x010d: MOVE_EXCEPTION  (r11 I:?[OBJECT]) =  A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_61 [shape=record,label="{61\:\ 0x010e|0x010e: GOTO  \-\> 0x0123 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_62 [shape=record,label="{62\:\ 0x010f|0x010f: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r12 I:?[OBJECT, ARRAY]) A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_63 [shape=record,label="{63\:\ 0x0110|0x0110: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:65:0x0114 A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_64 [shape=record,label="{64\:\ 0x0112|0x0112: CONST_STR  (r1 I:java.lang.String) =  \"UTF\-8\" A[Catch:\{ Exception \-\> 0x010d \}]\l}"];
Node_65 [shape=record,label="{65\:\ 0x0114|0x0114: IGET  (r0 I:int) = (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}]\l0x0116: NEW_INSTANCE  (r2 I:java.io.InputStreamReader) =  java.io.InputStreamReader A[Catch:\{ Exception \-\> 0x010d \}]\l0x0118: INVOKE  \l  (r2 I:java.io.InputStreamReader)\l  (r11 I:java.io.InputStream)\l  (r1 I:java.lang.String)\l java.io.InputStreamReader.\<init\>(java.io.InputStream, java.lang.String):void type: DIRECT A[Catch:\{ Exception \-\> 0x010d \}]\l0x011b: INVOKE  (r10 I:org.kxml2.io.KXmlParser), (r2 I:java.io.Reader) org.kxml2.io.KXmlParser.setInput(java.io.Reader):void type: VIRTUAL A[Catch:\{ Exception \-\> 0x010d \}]\l0x011e: IPUT  (r12 I:java.lang.String), (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.encoding java.lang.String A[Catch:\{ Exception \-\> 0x010d \}]\l0x0120: IPUT  (r0 I:int), (r10 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.srcCount int A[Catch:\{ Exception \-\> 0x010d \}, TRY_LEAVE]\l}"];
Node_66 [shape=record,label="{66\:\ 0x0122|0x0122: RETURN   \l}"];
Node_67 [shape=record,label="{67\:\ 0x0123|0x0123: NEW_INSTANCE  (r12 I:org.xmlpull.v1.XmlPullParserException) =  org.xmlpull.v1.XmlPullParserException \l0x0125: NEW_INSTANCE  (r0 I:java.lang.StringBuffer) =  java.lang.StringBuffer \l0x0127: INVOKE  (r0 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT \l0x012a: CONST_STR  (r1 I:java.lang.String) =  \"Invalid stream or encoding: \" \l0x012c: INVOKE  (r0 I:java.lang.StringBuffer), (r1 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x012f: INVOKE  (r1 I:java.lang.String) = (r11 I:java.lang.Exception) java.lang.Exception.toString():java.lang.String type: VIRTUAL \l0x0133: INVOKE  (r0 I:java.lang.StringBuffer), (r1 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x0136: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuffer) java.lang.StringBuffer.toString():java.lang.String type: VIRTUAL \l0x013a: INVOKE  \l  (r12 I:org.xmlpull.v1.XmlPullParserException)\l  (r0 I:java.lang.String)\l  (r10 I:org.xmlpull.v1.XmlPullParser)\l  (r11 I:java.lang.Throwable)\l org.xmlpull.v1.XmlPullParserException.\<init\>(java.lang.String, org.xmlpull.v1.XmlPullParser, java.lang.Throwable):void type: DIRECT \l}"];
Node_68 [shape=record,label="{68\:\ 0x013d|0x013d: THROW  (r12 I:java.lang.Throwable) \l}"];
Node_69 [shape=record,label="{69\:\ 0x013e|0x013e: NEW_INSTANCE  (r11 I:java.lang.IllegalArgumentException) =  java.lang.IllegalArgumentException \l0x0140: INVOKE  (r11 I:java.lang.IllegalArgumentException) java.lang.IllegalArgumentException.\<init\>():void type: DIRECT \l}"];
Node_70 [shape=record,label="{70\:\ 0x0143|0x0143: THROW  (r11 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.kxml2.io.KXmlParser.setInput((r10 'this' I:org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]), (r11 I:java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_69;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_62;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_60;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_11;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_11;
Node_10 -> Node_4;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_62;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_59;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_58;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_56;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_55;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_54;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_52;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_41;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_31;
Node_30 -> Node_41;
Node_31 -> Node_32;
Node_32 -> Node_28;
Node_32 -> Node_33[style=dashed];
Node_33 -> Node_34;
Node_34 -> Node_35[style=dashed];
Node_34 -> Node_41;
Node_35 -> Node_36;
Node_36 -> Node_37[style=dashed];
Node_36 -> Node_40;
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_40;
Node_39 -> Node_35;
Node_40 -> Node_42;
Node_41 -> Node_42;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_46;
Node_44 -> Node_45;
Node_45 -> Node_63;
Node_46 -> Node_47[style=dashed];
Node_46 -> Node_48;
Node_47 -> Node_45;
Node_48 -> Node_49;
Node_49 -> Node_50[style=dashed];
Node_49 -> Node_51;
Node_50 -> Node_45;
Node_51 -> Node_63;
Node_52 -> Node_53;
Node_53 -> Node_63;
Node_54 -> Node_45;
Node_55 -> Node_53;
Node_56 -> Node_57;
Node_57 -> Node_63;
Node_58 -> Node_45;
Node_59 -> Node_57;
Node_60 -> Node_61;
Node_61 -> Node_67;
Node_62 -> Node_63;
Node_63 -> Node_64[style=dashed];
Node_63 -> Node_65;
Node_64 -> Node_65;
Node_65 -> Node_66;
Node_67 -> Node_68;
Node_69 -> Node_70;
}

