digraph "CFG fororg.kxml2.io.KXmlParser.pushText(IZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r1 = peek(0)\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r1 r2 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:0:0x0000, B:27:0x0048] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:27:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:27:0x0048\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|if (r1 == \-1) goto L_0x004d\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r1 == r8) goto L_0x004d\l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|r4 = 32\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|if (r8 != 32) goto L_0x0016\l}"];
Node_6 [shape=record,label="{6\:\ 0x0011|if (r1 \<= 32) goto L_0x004d\l}"];
Node_7 [shape=record,label="{7\:\ 0x0013|if (r1 != 62) goto L_0x0016\l}"];
Node_8 [shape=record,label="{8\:\ 0x0016}"];
Node_9 [shape=record,label="{9\:\ 0x0019|if (r1 != 38) goto L_0x0022\l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|if (r9 != false) goto L_0x001e\l}"];
Node_11 [shape=record,label="{11\:\ 0x001e|pushEntity()\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022}"];
Node_13 [shape=record,label="{13\:\ 0x0024|if (r1 != 10) goto L_0x002e\l}"];
Node_14 [shape=record,label="{14\:\ 0x0026}"];
Node_15 [shape=record,label="{15\:\ 0x0028|if (r7.type != 2) goto L_0x002e\l}"];
Node_16 [shape=record,label="{16\:\ 0x002a|read()\l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|int r4 = read()\l}"];
Node_18 [shape=record,label="{18\:\ 0x0032|PHI: r4 \l  PHI: (r4v2 int) = (r4v3 int), (r4v0 int) binds: [B:17:0x002e, B:16:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|push(r4)\l}"];
Node_19 [shape=record,label="{19\:\ 0x0035}"];
Node_20 [shape=record,label="{20\:\ 0x0037|if (r1 != 62) goto L_0x0042\l}"];
Node_21 [shape=record,label="{21\:\ 0x0039|if (r2 \< 2) goto L_0x0042\l}"];
Node_22 [shape=record,label="{22\:\ 0x003b|if (r8 == 93) goto L_0x0042\l}"];
Node_23 [shape=record,label="{23\:\ 0x003d|error(\"Illegal: ]]\>\")\l}"];
Node_24 [shape=record,label="{24\:\ 0x0042|if (r1 != 93) goto L_0x0047\l}"];
Node_25 [shape=record,label="{25\:\ 0x0044|int r2 = r2 + 1\l}"];
Node_26 [shape=record,label="{26\:\ 0x0047|r2 = 0\l}"];
Node_27 [shape=record,label="{27\:\ 0x0048|LOOP_END\lPHI: r2 \l  PHI: (r2v2 int) = (r2v3 int), (r2v4 int) binds: [B:33:0x0048, B:34:0x0048] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:27:0x0048\l|int r1 = peek(0)\l}"];
Node_28 [shape=record,label="{28\:\ 0x004d|SYNTHETIC\l}"];
Node_29 [shape=record,label="{29\:\ 0x004d|SYNTHETIC\l}"];
Node_30 [shape=record,label="{30\:\ 0x004d|SYNTHETIC\l}"];
Node_31 [shape=record,label="{31\:\ 0x004d|SYNTHETIC\l}"];
Node_32 [shape=record,label="{32\:\ 0x004d|SYNTHETIC\l}"];
Node_33 [shape=record,label="{33\:\ 0x0048|SYNTHETIC\l}"];
Node_34 [shape=record,label="{34\:\ 0x0048|SYNTHETIC\l}"];
Node_35 [shape=record,label="{35\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_36 [shape=record,label="{36\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_38 [shape=record,label="{38\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_39 [shape=record,label="{39\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private final void org.kxml2.io.KXmlParser.pushText((r7v0 'this' org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]), (r8v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_28;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_29;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_8;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_30;
Node_7 -> Node_8;
Node_7 -> Node_31[style=dashed];
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_10 -> Node_11;
Node_10 -> Node_32[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_17;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_24;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_24;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_24;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_34;
Node_26 -> Node_33;
Node_27 -> Node_1;
Node_28 -> Node_35;
Node_29 -> Node_36;
Node_30 -> Node_37;
Node_31 -> Node_38;
Node_32 -> Node_39;
Node_33 -> Node_27;
Node_34 -> Node_27;
}

