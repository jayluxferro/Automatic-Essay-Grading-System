digraph "CFG fororg.kxml2.io.KXmlParser.defineEntityReplacementText(Ljava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Hashtable) = (r1 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.entityMap java.util.Hashtable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000a \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:java.util.Hashtable) = (r1 I:org.kxml2.io.KXmlParser) org.kxml2.io.KXmlParser.entityMap java.util.Hashtable \l0x0006: INVOKE  \l  (r0 I:java.util.Hashtable)\l  (r2 I:java.lang.Object)\l  (r3 I:java.lang.Object)\l java.util.Hashtable.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: NEW_INSTANCE  (r2 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x000c: CONST_STR  (r3 I:java.lang.String) =  \"entity replacement text must be defined after setInput!\" \l0x000e: INVOKE  (r2 I:java.lang.RuntimeException), (r3 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public void org.kxml2.io.KXmlParser.defineEntityReplacementText((r1 'this' I:org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

