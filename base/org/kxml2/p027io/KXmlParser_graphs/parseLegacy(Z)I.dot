digraph "CFG fororg.kxml2.io.KXmlParser.parseLegacy(Z)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.String r0 = \"\"\lread()\lint r1 = read()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0014|if (r1 != 63) goto L_0x0111\l}"];
Node_2 [shape=record,label="{2\:\ 0x0016}"];
Node_3 [shape=record,label="{3\:\ 0x001c|if (peek(0) == 120) goto L_0x0026\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e}"];
Node_5 [shape=record,label="{5\:\ 0x0024|if (peek(0) != 88) goto L_0x0109\l}"];
Node_6 [shape=record,label="{6\:\ 0x0026}"];
Node_7 [shape=record,label="{7\:\ 0x002c|if (peek(1) == 109) goto L_0x0036\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e}"];
Node_9 [shape=record,label="{9\:\ 0x0034|if (peek(1) != 77) goto L_0x0109\l}"];
Node_10 [shape=record,label="{10\:\ 0x0036|if (r13 == false) goto L_0x0046\l}"];
Node_11 [shape=record,label="{11\:\ 0x0038|push(peek(0))\lpush(peek(1))\l}"];
Node_12 [shape=record,label="{12\:\ 0x0046|read()\lread()\l}"];
Node_13 [shape=record,label="{13\:\ 0x0052|if (peek(0) == 108) goto L_0x005c\l}"];
Node_14 [shape=record,label="{14\:\ 0x0054}"];
Node_15 [shape=record,label="{15\:\ 0x005a|if (peek(0) != 76) goto L_0x0109\l}"];
Node_16 [shape=record,label="{16\:\ 0x005c}"];
Node_17 [shape=record,label="{17\:\ 0x0062|if (peek(1) \> 32) goto L_0x0109\l}"];
Node_18 [shape=record,label="{18\:\ 0x0064}"];
Node_19 [shape=record,label="{19\:\ 0x0066|if (r12.line != 1) goto L_0x006d\l}"];
Node_20 [shape=record,label="{20\:\ 0x0068}"];
Node_21 [shape=record,label="{21\:\ 0x006b|if (r12.column \<= 4) goto L_0x0072\l}"];
Node_22 [shape=record,label="{22\:\ 0x006d|error(\"PI must not start with xml\")\l}"];
Node_23 [shape=record,label="{23\:\ 0x0072|parseStartTag(true)\lr0 = 2\l}"];
Node_24 [shape=record,label="{24\:\ 0x0078|if (r12.attributeCount \< 1) goto L_0x0086\l}"];
Node_25 [shape=record,label="{25\:\ 0x007a}"];
Node_26 [shape=record,label="{26\:\ 0x0084|if (\"version\".equals(r12.attributes[2]) != false) goto L_0x008b\l}"];
Node_27 [shape=record,label="{27\:\ 0x0086|error(\"version expected\")\l}"];
Node_28 [shape=record,label="{28\:\ 0x008b|r12.version = r12.attributes[3]\l}"];
Node_29 [shape=record,label="{29\:\ 0x0094|if (1 \>= r12.attributeCount) goto L_0x00ab\l}"];
Node_30 [shape=record,label="{30\:\ 0x0096}"];
Node_31 [shape=record,label="{31\:\ 0x00a1|if (\"encoding\".equals(r12.attributes[6]) == false) goto L_0x00ab\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a3|r12.encoding = r12.attributes[7]\l}"];
Node_33 [shape=record,label="{33\:\ 0x00ab|r0 = 1\l}"];
Node_34 [shape=record,label="{34\:\ 0x00ac|PHI: r0 \l  PHI: (r0v16 int) = (r0v19 int), (r0v15 int) binds: [B:33:0x00ab, B:32:0x00a3] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_35 [shape=record,label="{35\:\ 0x00ae|if (r0 \>= r12.attributeCount) goto L_0x00f9\l}"];
Node_36 [shape=record,label="{36\:\ 0x00b0|int r3 = r0 * 4\l}"];
Node_37 [shape=record,label="{37\:\ 0x00be|if (\"standalone\".equals(r12.attributes[r3 + 2]) == false) goto L_0x00f9\l}"];
Node_38 [shape=record,label="{38\:\ 0x00c0|r13 = r12.attributes[r3 + 3]\l}"];
Node_39 [shape=record,label="{39\:\ 0x00cb|if (\"yes\".equals(r13) == false) goto L_0x00d5\l}"];
Node_40 [shape=record,label="{40\:\ 0x00cd|java.lang.Boolean r13 = new java.lang.Boolean(true)\l}"];
Node_41 [shape=record,label="{41\:\ 0x00d2|PHI: r13 \l  PHI: (r13v25 java.lang.Boolean) = (r13v24 java.lang.Boolean), (r13v26 java.lang.Boolean) binds: [B:44:0x00dd, B:40:0x00cd] A[DONT_GENERATE, DONT_INLINE]\l|r12.standalone = r13\l}"];
Node_42 [shape=record,label="{42\:\ 0x00d5}"];
Node_43 [shape=record,label="{43\:\ 0x00db|if (com.caverock.androidsvg.SVGParser.XML_STYLESHEET_ATTR_ALTERNATE_NO.equals(r13) == false) goto L_0x00e3\l}"];
Node_44 [shape=record,label="{44\:\ 0x00dd|java.lang.Boolean r13 = new java.lang.Boolean(false)\l}"];
Node_45 [shape=record,label="{45\:\ 0x00e3|java.lang.StringBuffer r1 = new java.lang.StringBuffer()\lr1.append(\"illegal standalone value: \")\lr1.append(r13)\lerror(r1.toString())\l}"];
Node_46 [shape=record,label="{46\:\ 0x00f7|int r0 = r0 + 1\l}"];
Node_47 [shape=record,label="{47\:\ 0x00f9|PHI: r0 \l  PHI: (r0v17 int) = (r0v16 int), (r0v16 int), (r0v18 int) binds: [B:35:0x00ae, B:37:0x00be, B:46:0x00f7] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_48 [shape=record,label="{48\:\ 0x00fb|if (r0 == r12.attributeCount) goto L_0x0102\l}"];
Node_49 [shape=record,label="{49\:\ 0x00fd|error(\"illegal xmldecl\")\l}"];
Node_50 [shape=record,label="{50\:\ 0x0102|r12.isWhitespace = true\lr12.txtPos = 0\l}"];
Node_51 [shape=record,label="{51\:\ 0x0108|RETURN\l|return XML_DECL\l}"];
Node_52 [shape=record,label="{52\:\ 0x0109|r9 = r13\lr13 = 8\lr10 = 63\l}"];
Node_53 [shape=record,label="{53\:\ 0x0111}"];
Node_54 [shape=record,label="{54\:\ 0x0113|if (r1 != 33) goto L_0x0190\l}"];
Node_55 [shape=record,label="{55\:\ 0x0115}"];
Node_56 [shape=record,label="{56\:\ 0x0119|if (peek(0) != 45) goto L_0x0123\l}"];
Node_57 [shape=record,label="{57\:\ 0x011b|java.lang.String r0 = \"\-\-\"\lr9 = r13\lr13 = 9\lr10 = 45\l}"];
Node_58 [shape=record,label="{58\:\ 0x0123}"];
Node_59 [shape=record,label="{59\:\ 0x0129|if (peek(0) != 91) goto L_0x0134\l}"];
Node_60 [shape=record,label="{60\:\ 0x012b|r13 = 5\ljava.lang.String r0 = \"[CDATA[\"\lr9 = true\lr10 = 93\l}"];
Node_61 [shape=record,label="{61\:\ 0x0134|java.lang.String r0 = \"DOCTYPE\"\lr9 = r13\lr13 = 10\lr10 = \-1\l}"];
Node_62 [shape=record,label="{62\:\ 0x013a|PHI: r0 r9 r10 r13 \l  PHI: (r0v1 java.lang.String) = (r0v12 java.lang.String), (r0v13 java.lang.String), (r0v14 java.lang.String), (r0v0 java.lang.String) binds: [B:61:0x0134, B:60:0x012b, B:57:0x011b, B:52:0x0109] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r9v0 boolean) = (r9v1 boolean), (r9v2 boolean), (r9v3 boolean), (r9v5 boolean) binds: [B:61:0x0134, B:60:0x012b, B:57:0x011b, B:52:0x0109] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v0 int) = (r10v1 int), (r10v2 int), (r10v3 int), (r10v4 int) binds: [B:61:0x0134, B:60:0x012b, B:57:0x011b, B:52:0x0109] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r13v2 int) = (r13v6 int), (r13v7 int), (r13v8 int), (r13v9 int) binds: [B:61:0x0134, B:60:0x012b, B:57:0x011b, B:52:0x0109] A[DONT_GENERATE, DONT_INLINE]\l|r1 = 0\l}"];
Node_63 [shape=record,label="{63\:\ 0x013b|LOOP_START\lPHI: r1 \l  PHI: (r1v2 int) = (r1v1 int), (r1v4 int) binds: [B:62:0x013a, B:65:0x0141] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:63:0x013b\-\>B:65:0x0141\l}"];
Node_64 [shape=record,label="{64\:\ 0x013f|if (r1 \>= r0.length()) goto L_0x014b\l}"];
Node_65 [shape=record,label="{65\:\ 0x0141|LOOP_END\lLOOP:0: B:63:0x013b\-\>B:65:0x0141\l|read(r0.charAt(r1))\lint r1 = r1 + 1\l}"];
Node_66 [shape=record,label="{66\:\ 0x014b|if (r13 != 10) goto L_0x0151\l}"];
Node_67 [shape=record,label="{67\:\ 0x014d|parseDoctype(r9)\l}"];
Node_68 [shape=record,label="{68\:\ 0x0151|r0 = 0\l}"];
Node_69 [shape=record,label="{69\:\ 0x0152|LOOP_START\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int) binds: [B:68:0x0151, B:90:0x018e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:69:0x0152\-\>B:90:0x018e\l|int r1 = read()\l}"];
Node_70 [shape=record,label="{70\:\ 0x0156|if (r1 != \-1) goto L_0x015e\l}"];
Node_71 [shape=record,label="{71\:\ 0x0158|java.lang.String r13 = UNEXPECTED_EOF\l}"];
Node_72 [shape=record,label="{72\:\ 0x015a|PHI: r13 \l  PHI: (r13v1 java.lang.String) = (r13v3 java.lang.String), (r13v5 java.lang.String) binds: [B:71:0x0158, B:91:0x0190] A[DONT_GENERATE, DONT_INLINE]\l|error(r13)\l}"];
Node_73 [shape=record,label="{73\:\ 0x015d|RETURN\l|return 9\l}"];
Node_74 [shape=record,label="{74\:\ 0x015e|if (r9 == false) goto L_0x0163\l}"];
Node_75 [shape=record,label="{75\:\ 0x0160|push(r1)\l}"];
Node_76 [shape=record,label="{76\:\ 0x0163|if (r10 == 63) goto L_0x0167\l}"];
Node_77 [shape=record,label="{77\:\ 0x0165|if (r1 != r10) goto L_0x018e\l}"];
Node_78 [shape=record,label="{78\:\ 0x0167}"];
Node_79 [shape=record,label="{79\:\ 0x016b|if (peek(0) != r10) goto L_0x018e\l}"];
Node_80 [shape=record,label="{80\:\ 0x016d}"];
Node_81 [shape=record,label="{81\:\ 0x0173|if (peek(1) != 62) goto L_0x018e\l}"];
Node_82 [shape=record,label="{82\:\ 0x0175|if (r10 != 45) goto L_0x017e\l}"];
Node_83 [shape=record,label="{83\:\ 0x0177|if (r0 != 45) goto L_0x017e\l}"];
Node_84 [shape=record,label="{84\:\ 0x0179|error(\"illegal comment delimiter: \-\-\-\>\")\l}"];
Node_85 [shape=record,label="{85\:\ 0x017e|read()\lread()\l}"];
Node_86 [shape=record,label="{86\:\ 0x0184|if (r9 == false) goto L_0x018d\l}"];
Node_87 [shape=record,label="{87\:\ 0x0186|if (r10 == 63) goto L_0x018d\l}"];
Node_88 [shape=record,label="{88\:\ 0x0188|r12.txtPos = r12.txtPos \- 1\l}"];
Node_89 [shape=record,label="{89\:\ 0x018d|RETURN\l|return r13\l}"];
Node_90 [shape=record,label="{90\:\ 0x018e|LOOP_END\lLOOP:1: B:69:0x0152\-\>B:90:0x018e\l|r0 = r1\l}"];
Node_91 [shape=record,label="{91\:\ 0x0190|java.lang.StringBuffer r13 = new java.lang.StringBuffer()\lr13.append(\"illegal: \<\")\lr13.append(r1)\ljava.lang.String r13 = r13.toString()\l}"];
Node_92 [shape=record,label="{92\:\ 0x014b|SYNTHETIC\l}"];
Node_93 [shape=record,label="{93\:\ 0x0175|SYNTHETIC\l}"];
Node_94 [shape=record,label="{94\:\ 0x0158|SYNTHETIC\l}"];
Node_95 [shape=record,label="{95\:\ 0x018e|SYNTHETIC\l}"];
Node_96 [shape=record,label="{96\:\ 0x018e|SYNTHETIC\l}"];
Node_97 [shape=record,label="{97\:\ 0x018e|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final int org.kxml2.io.KXmlParser.parseLegacy((r12v0 'this' org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]), (r13v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_53;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_6;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_52;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_10;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_52;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_16;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_52;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_52;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_22;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_27;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_33;
Node_30 -> Node_31;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_34;
Node_33 -> Node_34;
Node_34 -> Node_35;
Node_35 -> Node_36[style=dashed];
Node_35 -> Node_47;
Node_36 -> Node_37;
Node_37 -> Node_38[style=dashed];
Node_37 -> Node_47;
Node_38 -> Node_39;
Node_39 -> Node_40[style=dashed];
Node_39 -> Node_42;
Node_40 -> Node_41;
Node_41 -> Node_46;
Node_42 -> Node_43;
Node_43 -> Node_44[style=dashed];
Node_43 -> Node_45;
Node_44 -> Node_41;
Node_45 -> Node_46;
Node_46 -> Node_47;
Node_47 -> Node_48;
Node_48 -> Node_49[style=dashed];
Node_48 -> Node_50;
Node_49 -> Node_50;
Node_50 -> Node_51;
Node_52 -> Node_62;
Node_53 -> Node_54;
Node_54 -> Node_55[style=dashed];
Node_54 -> Node_91;
Node_55 -> Node_56;
Node_56 -> Node_57[style=dashed];
Node_56 -> Node_58;
Node_57 -> Node_62;
Node_58 -> Node_59;
Node_59 -> Node_60[style=dashed];
Node_59 -> Node_61;
Node_60 -> Node_62;
Node_61 -> Node_62;
Node_62 -> Node_63;
Node_63 -> Node_64;
Node_64 -> Node_65[style=dashed];
Node_64 -> Node_92;
Node_65 -> Node_63;
Node_66 -> Node_67[style=dashed];
Node_66 -> Node_68;
Node_67 -> Node_89;
Node_68 -> Node_69;
Node_69 -> Node_70;
Node_70 -> Node_74;
Node_70 -> Node_94[style=dashed];
Node_71 -> Node_72;
Node_72 -> Node_73;
Node_74 -> Node_75[style=dashed];
Node_74 -> Node_76;
Node_75 -> Node_76;
Node_76 -> Node_77[style=dashed];
Node_76 -> Node_78;
Node_77 -> Node_78[style=dashed];
Node_77 -> Node_95;
Node_78 -> Node_79;
Node_79 -> Node_80[style=dashed];
Node_79 -> Node_96;
Node_80 -> Node_81;
Node_81 -> Node_93[style=dashed];
Node_81 -> Node_97;
Node_82 -> Node_83[style=dashed];
Node_82 -> Node_85;
Node_83 -> Node_84[style=dashed];
Node_83 -> Node_85;
Node_84 -> Node_85;
Node_85 -> Node_86;
Node_86 -> Node_87[style=dashed];
Node_86 -> Node_89;
Node_87 -> Node_88[style=dashed];
Node_87 -> Node_89;
Node_88 -> Node_89;
Node_90 -> Node_69;
Node_91 -> Node_72;
Node_92 -> Node_66;
Node_93 -> Node_82;
Node_94 -> Node_71;
Node_95 -> Node_90;
Node_96 -> Node_90;
Node_97 -> Node_90;
}

