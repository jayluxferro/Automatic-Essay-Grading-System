digraph "CFG fororg.kxml2.io.KXmlParser.parseEndTag()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|read()\lread()\lr6.name = readName()\lskip()\lread(kotlin.text.Typography.greater)\lint r0 = (r6.depth + \-1) \<\< 2\l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|if (r6.depth != 0) goto L_0x0028\l}"];
Node_2 [shape=record,label="{2\:\ 0x0020|error(\"element stack empty\")\lr6.type = 9\l}"];
Node_3 [shape=record,label="{3\:\ 0x0027|RETURN\l|return\l}"];
Node_4 [shape=record,label="{4\:\ 0x0028|int r4 = r0 + 3\l}"];
Node_5 [shape=record,label="{5\:\ 0x0034|if (r6.name.equals(r6.elementStack[r4]) != false) goto L_0x0082\l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|java.lang.StringBuffer r1 = new java.lang.StringBuffer()\lr1.append(\"expected: \/\")\lr1.append(r6.elementStack[r4])\lr1.append(\" read: \")\lr1.append(r6.name)\lerror(r1.toString())\lr1 = r0\l}"];
Node_7 [shape=record,label="{7\:\ 0x0059|LOOP_START\lPHI: r1 \l  PHI: (r1v11 int) = (r1v10 int), (r1v12 int) binds: [B:6:0x0036, B:10:0x0071] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:7:0x0059\-\>B:10:0x0071\l|if (r1 \< 0) goto L_0x007a\l}"];
Node_8 [shape=record,label="{8\:\ 0x005b}"];
Node_9 [shape=record,label="{9\:\ 0x006f|if (r6.name.toLowerCase().equals(r6.elementStack[r1 + 3].toLowerCase()) != false) goto L_0x007a\l}"];
Node_10 [shape=record,label="{10\:\ 0x0071|LOOP_END\lLOOP:0: B:7:0x0059\-\>B:10:0x0071\l|r6.stackMismatch = r6.stackMismatch + 1\lint r1 = r1 + \-4\l}"];
Node_11 [shape=record,label="{11\:\ 0x007a|if (r1 \>= 0) goto L_0x0082\l}"];
Node_12 [shape=record,label="{12\:\ 0x007c|r6.stackMismatch = 0\lr6.type = 9\l}"];
Node_13 [shape=record,label="{13\:\ 0x0081|RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ 0x0082|r6.namespace = r6.elementStack[r0]\lr6.prefix = r6.elementStack[r0 + 1]\lr6.name = r6.elementStack[r0 + 2]\l}"];
Node_15 [shape=record,label="{15\:\ 0x0098|RETURN\l|return\l}"];
Node_16 [shape=record,label="{16\:\ 0x007a|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x007a|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final void org.kxml2.io.KXmlParser.parseEndTag((r6v0 'this' org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_16;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_17;
Node_10 -> Node_7;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_14;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_16 -> Node_11;
Node_17 -> Node_11;
}

