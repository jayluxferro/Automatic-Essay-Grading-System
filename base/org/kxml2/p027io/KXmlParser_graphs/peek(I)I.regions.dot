digraph "CFG fororg.kxml2.io.KXmlParser.peek(I)I" {
subgraph cluster_Region_127180364 {
label = "R(2:(2:(1:4)(1:(1:7)(3:8|9|12))|(1:15)(2:(1:20)(1:(1:19))|21))|23) | DECL_VAR: int null\l";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_906259758 {
label = "LOOP:0: (2:(1:4)(1:(1:7)(3:8|9|12))|(1:15)(2:(1:20)(1:(1:19))|21))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r6 \>= r5.peekCount) goto L_0x0004\l}"];
subgraph cluster_Region_552909288 {
label = "R(2:(1:4)(1:(1:7)(3:8|9|12))|(1:15)(2:(1:20)(1:(1:19))|21))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_73952491 {
label = "IF [B:3:0x0009] THEN: R(1:4) ELSE: R(1:(1:7)(3:8|9|12))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0009|if (r5.srcBuf.length \<= 1) goto L_0x000b\l}"];
subgraph cluster_Region_1453537830 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000b|r0 = r5.reader.read()\l}"];
}
subgraph cluster_Region_665711828 {
label = "R(1:(1:7)(3:8|9|12)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_852856850 {
label = "IF [B:6:0x0016] THEN: R(1:7) ELSE: R(3:8|9|12) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0016|if (r5.srcPos \< r5.srcCount) goto L_0x0018\l}"];
subgraph cluster_Region_782430581 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0018|char[] char[] r0 = r5.srcBuf\lint int r3 = r5.srcPos\lr5.srcPos = r3 + 1\lr0 = r0[r3]\l}"];
}
subgraph cluster_Region_1077562421 {
label = "R(3:8|9|12)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x0023|r5.srcCount = r5.reader.read(r5.srcBuf, 0, r5.srcBuf.length)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0032|char r0 = r5.srcCount \<= 0 ? 65535 : r5.srcBuf[0]\l}"];
Node_12 [shape=record,label="{12\:\ 0x003a|PHI: r0 \l  PHI: (r0v12 char) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r5.srcPos = 1\lr0 = r0\l}"];
}
}
}
}
subgraph cluster_IfRegion_929776729 {
label = "IF [B:14:0x0040] THEN: R(1:15) ELSE: R(2:(1:20)(1:(1:19))|21)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0040|if (r0 == 13) goto L_0x0042\l}"];
subgraph cluster_Region_80202857 {
label = "R(1:15)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0042|r5.wasCR = true\lint[] int[] r0 = r5.peek\lint int r1 = r5.peekCount\lr5.peekCount = r1 + 1\lr0[r1] = 10\l}"];
}
subgraph cluster_Region_1881373035 {
label = "R(2:(1:20)(1:(1:19))|21)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_954214639 {
label = "IF [B:16:0x004f] THEN: R(1:20) ELSE: R(1:(1:19))";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x004f|if (r0 != 10) goto L_0x0060\l}"];
subgraph cluster_Region_790499789 {
label = "R(1:20)";
node [shape=record,color=blue];
Node_20 [shape=record,label="{20\:\ 0x0060|int[] int[] r2 = r5.peek\lint int r3 = r5.peekCount\lr5.peekCount = r3 + 1\lr2[r3] = r0\l}"];
}
subgraph cluster_Region_648768225 {
label = "R(1:(1:19)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1267710945 {
label = "IF [B:18:0x0053] THEN: R(1:19) ELSE: null | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_18 [shape=record,label="{18\:\ 0x0053|if (r5.wasCR == false) goto L_0x0055\l}"];
subgraph cluster_Region_1037544447 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ 0x0055|int[] int[] r0 = r5.peek\lint int r2 = r5.peekCount\lr5.peekCount = r2 + 1\lr0[r2] = 10\l}"];
}
}
}
}
Node_21 [shape=record,label="{21\:\ 0x006a|r5.wasCR = false\l}"];
}
}
}
}
Node_23 [shape=record,label="{23\:\ 0x0071|RETURN\l|return r5.peek[r6]\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lLOOP_START\lLOOP:0: B:0:0x0000\-\>B:24:0x0000\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x0012}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0034}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x0036}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x003c|PHI: r0 \l  PHI: (r0v4 int) = (r0v20 int), (r0v22 int), (r0v23 int) binds: [B:12:0x003a, B:7:0x0018, B:4:0x000b] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0051}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x006d}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0000|LOOP_END\lSYNTHETIC\lLOOP:0: B:0:0x0000\-\>B:24:0x0000\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x006d|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0000|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0000|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private final int org.kxml2.io.KXmlParser.peek((r5v0 'this' org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_25[style=dashed];
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_13;
Node_6 -> Node_7;
Node_6 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_11;
Node_12 -> Node_13;
Node_14 -> Node_15;
Node_14 -> Node_16[style=dashed];
Node_15 -> Node_26;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_20;
Node_20 -> Node_21;
Node_18 -> Node_19;
Node_18 -> Node_21[style=dashed];
Node_19 -> Node_21;
Node_21 -> Node_27;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_5 -> Node_6;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_13 -> Node_14;
Node_17 -> Node_18;
Node_22 -> Node_23;
Node_24 -> Node_0;
Node_25 -> Node_22;
Node_26 -> Node_24;
Node_27 -> Node_24;
}

