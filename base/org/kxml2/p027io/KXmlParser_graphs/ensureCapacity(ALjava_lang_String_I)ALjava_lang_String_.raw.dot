digraph "CFG fororg.kxml2.io.KXmlParser.ensureCapacity([Ljava\/lang\/String;I)[Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0001|0x0001: IF  (r0 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:3:0x0004 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0003|0x0003: RETURN  (r3 I:java.lang.String[]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0004|0x0004: ARITH  (r4 I:int) = (r4 I:int) + (16 int) \l0x0006: NEW_ARRAY  (r4 I:java.lang.String[]) = (r4 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0008: ARRAY_LENGTH  (r0 I:int) = (r3 I:?[]) \l0x0009: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: INVOKE  \l  (r3 I:java.lang.Object)\l  (r1 I:int)\l  (r4 I:java.lang.Object)\l  (r1 I:int)\l  (r0 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: RETURN  (r4 I:java.lang.String[]) \l}"];
MethodNode[shape=record,label="{private final java.lang.String[] org.kxml2.io.KXmlParser.ensureCapacity((r2 'this' I:org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

