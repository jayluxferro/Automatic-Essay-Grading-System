digraph "CFG fororg.kxml2.io.KXmlParser.skipSubTree()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|require(2, (java.lang.String) null, (java.lang.String) null)\lr0 = 1\l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|LOOP_START\lPHI: r0 \l  PHI: (r0v2 int) = (r0v1 int), (r0v3 int) binds: [B:0:0x0000, B:8:0x0006] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:8:0x0006\l|if (r0 \<= 0) goto L_0x0017\l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|int r2 = next()\l}"];
Node_3 [shape=record,label="{3\:\ 0x000d|if (r2 != 3) goto L_0x0012\l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|int r0 = r0 + \-1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|if (r2 != 2) goto L_0x0006\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|int r0 = r0 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x0017|RETURN\l|return\l}"];
Node_8 [shape=record,label="{8\:\ 0x0006|LOOP_END\lSYNTHETIC\lPHI: r0 \l  PHI: (r0v3 int) = (r0v2 int), (r0v4 int), (r0v5 int) binds: [B:11:0x0006, B:12:0x0006, B:10:0x0006] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0006\-\>B:8:0x0006\l}"];
Node_9 [shape=record,label="{9\:\ 0x0017|SYNTHETIC\l}"];
Node_10 [shape=record,label="{10\:\ 0x0006|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x0006|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ 0x0006|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.kxml2.io.KXmlParser.skipSubTree((r4v0 'this' org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_9;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_10;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_12;
Node_8 -> Node_1;
Node_9 -> Node_7;
Node_10 -> Node_8;
Node_11 -> Node_8;
Node_12 -> Node_8;
}

