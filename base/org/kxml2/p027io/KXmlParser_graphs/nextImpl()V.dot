digraph "CFG fororg.kxml2.io.KXmlParser.nextImpl()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r6.reader != null) goto L_0x0009\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|exception(\"No Input specified\")\l}"];
Node_3 [shape=record,label="{3\:\ 0x0009}"];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r6.type != 3) goto L_0x0014\l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|r6.depth = r6.depth \- 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|LOOP_START\lLOOP:0: B:6:0x0014\-\>B:35:0x00b8\l|r6.attributeCount = \-1\lr4 = 0\l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r6.degenerated == false) goto L_0x0021\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|r6.degenerated = false\lr6.type = 3\l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|RETURN\l|return\l}"];
Node_10 [shape=record,label="{10\:\ 0x0021}"];
Node_11 [shape=record,label="{11\:\ 0x0024|if (r6.error == null) goto L_0x0041\l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|LOOP_START\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:47:0x0026, B:14:0x002e] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:12:0x0026\-\>B:14:0x002e\l}"];
Node_13 [shape=record,label="{13\:\ 0x002c|if (r4 \>= r6.error.length()) goto L_0x003a\l}"];
Node_14 [shape=record,label="{14\:\ 0x002e|LOOP_END\lLOOP:1: B:12:0x0026\-\>B:14:0x002e\l|push(r6.error.charAt(r4))\lint r4 = r4 + 1\l}"];
Node_15 [shape=record,label="{15\:\ 0x003a|r6.error = null\lr6.type = 9\l}"];
Node_16 [shape=record,label="{16\:\ 0x0040|RETURN\l|return\l}"];
Node_17 [shape=record,label="{17\:\ 0x0041}"];
Node_18 [shape=record,label="{18\:\ 0x0043|if (r6.relaxed == false) goto L_0x0098\l}"];
Node_19 [shape=record,label="{19\:\ 0x0045}"];
Node_20 [shape=record,label="{20\:\ 0x0047|if (r6.stackMismatch \> 0) goto L_0x0053\l}"];
Node_21 [shape=record,label="{21\:\ 0x0049}"];
Node_22 [shape=record,label="{22\:\ 0x004d|if (peek(0) != \-1) goto L_0x0098\l}"];
Node_23 [shape=record,label="{23\:\ 0x004f}"];
Node_24 [shape=record,label="{24\:\ 0x0051|if (r6.depth \<= 0) goto L_0x0098\l}"];
Node_25 [shape=record,label="{25\:\ 0x0053|int r0 = (r6.depth \- 1) \<\< 2\lr6.type = 3\lr6.namespace = r6.elementStack[r0]\lr6.prefix = r6.elementStack[r0 + 1]\lr6.name = r6.elementStack[r0 + 2]\l}"];
Node_26 [shape=record,label="{26\:\ 0x0072|if (r6.stackMismatch == 1) goto L_0x008e\l}"];
Node_27 [shape=record,label="{27\:\ 0x0074|java.lang.StringBuffer r0 = new java.lang.StringBuffer()\lr0.append(\"missing end tag \/\")\lr0.append(r6.name)\lr0.append(\" inserted\")\lr6.error = r0.toString()\l}"];
Node_28 [shape=record,label="{28\:\ 0x008e}"];
Node_29 [shape=record,label="{29\:\ 0x0090|if (r6.stackMismatch \<= 0) goto L_?\l}"];
Node_30 [shape=record,label="{30\:\ 0x0092|r6.stackMismatch = r6.stackMismatch \- 1\l}"];
Node_31 [shape=record,label="{31\:\ 0x0098|r6.prefix = null\lr6.name = null\lr6.namespace = null\lr6.type = peekType()\lint r0 = r6.type\l}"];
Node_32 [shape=record,label="{32\:\ 0x00a7|if (r0 == 6) goto L_0x00d7\l}"];
Node_33 [shape=record,label="{33\:\ 0x00a9|switch(r0) \{\l    case 1: goto L_0x00d6;\l    case 2: goto L_0x00d3;\l    case 3: goto L_0x00cf;\l    case 4: goto L_0x00bb;\l    default: goto L_0x00ac;\l\}\l}"];
Node_34 [shape=record,label="{34\:\ 0x00ac|r6.type = parseLegacy(r6.token)\l}"];
Node_35 [shape=record,label="{35\:\ 0x00b8|LOOP_END\lLOOP:0: B:6:0x0014\-\>B:35:0x00b8\l|if (r6.type == XML_DECL) goto L_0x0014\l}"];
Node_36 [shape=record,label="{36\:\ 0x00ba|RETURN\l|return\l}"];
Node_37 [shape=record,label="{37\:\ 0x00bb|pushText(60, r6.token ^ true)\l}"];
Node_38 [shape=record,label="{38\:\ 0x00c5|if (r6.depth != 0) goto L_?\l}"];
Node_39 [shape=record,label="{39\:\ 0x00c7}"];
Node_40 [shape=record,label="{40\:\ 0x00c9|if (r6.isWhitespace == false) goto L_?\l}"];
Node_41 [shape=record,label="{41\:\ 0x00cb|r6.type = 7\l}"];
Node_42 [shape=record,label="{42\:\ 0x00cf|parseEndTag()\l}"];
Node_43 [shape=record,label="{43\:\ 0x00d2|RETURN\l|return\l}"];
Node_44 [shape=record,label="{44\:\ 0x00d3|parseStartTag(false)\l}"];
Node_45 [shape=record,label="{45\:\ 0x00d7|pushEntity()\l}"];
Node_46 [shape=record,label="{46\:\ 0x00da|RETURN\l|return\l}"];
Node_47 [shape=record,label="{47\:\ 0x0026|SYNTHETIC\l}"];
Node_48 [shape=record,label="{48\:\ 0x00d7|SYNTHETIC\l}"];
Node_49 [shape=record,label="{49\:\ 0x0053|SYNTHETIC\l}"];
Node_50 [shape=record,label="{50\:\ 0x00bb|SYNTHETIC\l}"];
Node_51 [shape=record,label="{51\:\ 0x00cf|SYNTHETIC\l}"];
Node_52 [shape=record,label="{52\:\ 0x00d3|SYNTHETIC\l}"];
Node_53 [shape=record,label="{53\:\ 0x00d6|SYNTHETIC\l}"];
Node_54 [shape=record,label="{54\:\ 0x0053|SYNTHETIC\l}"];
Node_55 [shape=record,label="{55\:\ 0x00ba|SYNTHETIC\l}"];
Node_56 [shape=record,label="{56\:\ 0x001c|SYNTHETIC\l}"];
Node_57 [shape=record,label="{57\:\ 0x0014|SYNTHETIC\l}"];
Node_58 [shape=record,label="{58\:\ 0x003a|SYNTHETIC\l}"];
Node_59 [shape=record,label="{59\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_60 [shape=record,label="{60\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_61 [shape=record,label="{61\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_62 [shape=record,label="{62\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_63 [shape=record,label="{63\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_64 [shape=record,label="{64\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_65 [shape=record,label="{65\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{private final void org.kxml2.io.KXmlParser.nextImpl((r6v0 'this' org.kxml2.io.KXmlParser A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_57;
Node_5 -> Node_57;
Node_6 -> Node_7;
Node_7 -> Node_10;
Node_7 -> Node_56[style=dashed];
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_11 -> Node_17;
Node_11 -> Node_47[style=dashed];
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_58;
Node_14 -> Node_12;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_31;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_49;
Node_21 -> Node_22;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_31;
Node_23 -> Node_24;
Node_24 -> Node_31;
Node_24 -> Node_54[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30[style=dashed];
Node_29 -> Node_60;
Node_30 -> Node_59;
Node_31 -> Node_32;
Node_32 -> Node_33[style=dashed];
Node_32 -> Node_48;
Node_33 -> Node_34;
Node_33 -> Node_50;
Node_33 -> Node_51;
Node_33 -> Node_52;
Node_33 -> Node_53;
Node_34 -> Node_35;
Node_35 -> Node_6;
Node_35 -> Node_55[style=dashed];
Node_37 -> Node_38;
Node_38 -> Node_39[style=dashed];
Node_38 -> Node_62;
Node_39 -> Node_40;
Node_40 -> Node_41[style=dashed];
Node_40 -> Node_63;
Node_41 -> Node_61;
Node_42 -> Node_43;
Node_44 -> Node_64;
Node_45 -> Node_46;
Node_47 -> Node_12;
Node_48 -> Node_45;
Node_49 -> Node_25;
Node_50 -> Node_37;
Node_51 -> Node_42;
Node_52 -> Node_44;
Node_53 -> Node_65;
Node_54 -> Node_25;
Node_55 -> Node_36;
Node_56 -> Node_8;
Node_57 -> Node_6;
Node_58 -> Node_15;
}

