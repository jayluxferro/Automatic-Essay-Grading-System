digraph "CFG fororg.kxml2.kdom.Document.parse(Lorg\/xmlpull\/v1\/XmlPullParser;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r3.require(0, (java.lang.String) null, (java.lang.String) null)\lr3.nextToken()\lr2.encoding = r3.getInputEncoding()\lr2.standalone = (java.lang.Boolean) r3.getProperty(\"http:\/\/xmlpull.org\/v1\/doc\/properties.html#xmldecl\-standalone\")\lsuper.parse(r3)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0020|if (r3.getEventType() != 1) goto L_0x0023\l}"];
Node_2 [shape=record,label="{2\:\ 0x0022|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0023}"];
Node_4 [shape=record,label="{4\:\ 0x002a|throw new java.lang.RuntimeException(\"Document end expected!\")\l}"];
MethodNode[shape=record,label="{public void org.kxml2.kdom.Document.parse((r2v0 'this' org.kxml2.kdom.Document A[IMMUTABLE_TYPE, THIS]), (r3v0 org.xmlpull.v1.XmlPullParser A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

