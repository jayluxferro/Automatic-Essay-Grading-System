digraph "CFG fororg.kxml2.kdom.Node.getElement(Ljava\/lang\/String;Ljava\/lang\/String;)Lorg\/kxml2\/kdom\/Element;" {
subgraph cluster_Region_1065596595 {
label = "R(2:0|(2:(1:4)|(3:5|9|10)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = indexOf(r6, r7, 0)\lint int r1 = indexOf(r6, r7, r0 + 1)\l}"];
subgraph cluster_Region_1280514538 {
label = "R(2:(1:4)|(3:5|9|10))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1335749618 {
label = "IF [B:1:0x000c, B:2:0x000e] THEN: R(1:4) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r0 != \-1) goto L_0x000e\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|ADDED_TO_REGION\l|if (r1 == \-1) goto L_0x0011\l}"];
subgraph cluster_Region_678895957 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0015|RETURN\l|return getElement(r0)\l}"];
}
}
subgraph cluster_Region_1802399427 {
label = "R(3:5|9|10)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0016|java.lang.StringBuffer java.lang.StringBuffer r3 = new java.lang.StringBuffer()\lr3.append(\"Element \{\")\lr3.append(r6)\lr3.append(\"\}\")\lr3.append(r7)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|PHI: r6 \l  PHI: (r6v2 java.lang.String) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|r3.append(r0 == \-1 ? \" not found in \" : \" more than once in \")\lr3.append(r5)\l}"];
Node_10 [shape=record,label="{10\:\ 0x0041|throw new java.lang.RuntimeException(r3.toString())\l}"];
}
}
}
Node_3 [shape=record,color=red,label="{3\:\ 0x0011}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x002d}"];
Node_7 [shape=record,color=red,label="{7\:\ 0x002f}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0032}"];
MethodNode[shape=record,label="{public org.kxml2.kdom.Element org.kxml2.kdom.Node.getElement((r5v0 'this' org.kxml2.kdom.Node A[IMMUTABLE_TYPE, THIS]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_5[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_5[style=dashed];
Node_5 -> Node_6;
Node_9 -> Node_10;
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_9;
Node_8 -> Node_9;
}

