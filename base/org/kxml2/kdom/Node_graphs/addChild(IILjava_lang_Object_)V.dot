digraph "CFG fororg.kxml2.kdom.Node.addChild(IILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|if (r4 == null) goto L_0x0042\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r1.children != null) goto L_0x0014\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|r1.children = new java.util.Vector()\lr1.types = new java.lang.StringBuffer()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0014}"];
Node_5 [shape=record,label="{5\:\ 0x0015|if (r3 != 2) goto L_0x002a\l}"];
Node_6 [shape=record,label="{6\:\ 0x0017}"];
Node_7 [shape=record,label="{7\:\ 0x0019|if ((r4 instanceof org.kxml2.kdom.Element) == false) goto L_0x0022\l}"];
Node_8 [shape=record,label="{8\:\ 0x001b|((org.kxml2.kdom.Element) r4).setParent(r1)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022}"];
Node_10 [shape=record,label="{10\:\ 0x0029|throw new java.lang.RuntimeException(\"Element obj expected)\")\l}"];
Node_11 [shape=record,label="{11\:\ 0x002a}"];
Node_12 [shape=record,label="{12\:\ 0x002c|if ((r4 instanceof java.lang.String) == false) goto L_0x003a\l}"];
Node_13 [shape=record,label="{13\:\ 0x002e|r1.children.insertElementAt(r4, r2)\lr1.types.insert(r2, (char) r3)\l}"];
Node_14 [shape=record,label="{14\:\ 0x0039|RETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ 0x003a}"];
Node_16 [shape=record,label="{16\:\ 0x0041|throw new java.lang.RuntimeException(\"String expected\")\l}"];
Node_17 [shape=record,label="{17\:\ 0x0042}"];
Node_18 [shape=record,label="{18\:\ 0x0047|throw new java.lang.NullPointerException()\l}"];
MethodNode[shape=record,label="{public void org.kxml2.kdom.Node.addChild((r1v0 'this' org.kxml2.kdom.Node A[IMMUTABLE_TYPE, THIS]), (r2v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_17;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_11;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_13;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_15;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
}

