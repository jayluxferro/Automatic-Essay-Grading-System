digraph "CFG fororg.kxml2.kdom.Node.indexOf(Ljava\/lang\/String;Ljava\/lang\/String;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int r0 = getChildCount()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|LOOP_START\lPHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:0:0x0000, B:10:0x0023] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0004\-\>B:10:0x0023\l|if (r6 \>= r0) goto L_0x0026\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|org.kxml2.kdom.Element r1 = getElement(r6)\l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|if (r1 == null) goto L_0x0023\l}"];
Node_4 [shape=record,label="{4\:\ 0x000c}"];
Node_5 [shape=record,label="{5\:\ 0x0014|if (r5.equals(r1.getName()) == false) goto L_0x0023\l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|if (r4 == null) goto L_0x0022\l}"];
Node_7 [shape=record,label="{7\:\ 0x0018}"];
Node_8 [shape=record,label="{8\:\ 0x0020|if (r4.equals(r1.getNamespace()) == false) goto L_0x0023\l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|RETURN\l|return r6\l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|LOOP_END\lLOOP:0: B:1:0x0004\-\>B:10:0x0023\l|int r6 = r6 + 1\l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|RETURN\l|return \-1\l}"];
Node_12 [shape=record,label="{12\:\ 0x0022|SYNTHETIC\l}"];
Node_13 [shape=record,label="{13\:\ 0x0026|SYNTHETIC\l}"];
Node_14 [shape=record,label="{14\:\ 0x0022|SYNTHETIC\l}"];
Node_15 [shape=record,label="{15\:\ 0x0023|SYNTHETIC\l}"];
Node_16 [shape=record,label="{16\:\ 0x0023|SYNTHETIC\l}"];
Node_17 [shape=record,label="{17\:\ 0x0023|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int org.kxml2.kdom.Node.indexOf((r3v0 'this' org.kxml2.kdom.Node A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_15;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_16;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_14;
Node_7 -> Node_8;
Node_8 -> Node_12[style=dashed];
Node_8 -> Node_17;
Node_10 -> Node_1;
Node_12 -> Node_9;
Node_13 -> Node_11;
Node_14 -> Node_9;
Node_15 -> Node_10;
Node_16 -> Node_10;
Node_17 -> Node_10;
}

