digraph "CFG fororg.kxml2.kdom.Node.indexOf(Ljava\/lang\/String;Ljava\/lang\/String;I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r3 I:org.kxml2.kdom.Node) org.kxml2.kdom.Node.getChildCount():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r6 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:11:0x0026 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INVOKE  (r1 I:org.kxml2.kdom.Element) = (r3 I:org.kxml2.kdom.Node), (r6 I:int) org.kxml2.kdom.Node.getElement(int):org.kxml2.kdom.Element type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0023 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: INVOKE  (r2 I:java.lang.String) = (r1 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.getName():java.lang.String type: VIRTUAL \l0x0010: INVOKE  (r2 I:boolean) = (r5 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0023 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x0022 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0018|0x0018: INVOKE  (r1 I:java.lang.String) = (r1 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.getNamespace():java.lang.String type: VIRTUAL \l0x001c: INVOKE  (r1 I:boolean) = (r4 I:java.lang.String), (r1 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0020|0x0020: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:10:0x0023 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0022|0x0022: RETURN  (r6 I:int) \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0026|0x0026: CONST  (r4 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0027|0x0027: RETURN  (r4 I:int) \l}"];
MethodNode[shape=record,label="{public int org.kxml2.kdom.Node.indexOf((r3 'this' I:org.kxml2.kdom.Node A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_10;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_10;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_9;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_10 -> Node_1;
Node_11 -> Node_12;
}

