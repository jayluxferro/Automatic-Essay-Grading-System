digraph "CFG fororg.kxml2.kdom.Node.writeChildren(Lorg\/xmlpull\/v1\/XmlSerializer;)V" {
subgraph cluster_Region_168779446 {
label = "R(1:(1:(2:3|(3:5|(1:7)(1:17)|18))))";
node [shape=record,color=blue];
subgraph cluster_Region_1949886616 {
label = "R(1:(2:3|(3:5|(1:7)(1:17)|18)))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1588094415 {
label = "IF [B:1:0x0002] THEN: R(2:3|(3:5|(1:7)(1:17)|18)) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r5.children != null) goto L_0x0005\l}"];
subgraph cluster_Region_1798217986 {
label = "R(2:3|(3:5|(1:7)(1:17)|18))";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0005|int int r0 = r5.children.size()\lint r1 = 0\l}"];
subgraph cluster_LoopRegion_1130393677 {
label = "LOOP:0: (3:5|(1:7)(1:17)|18)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000c|LOOP_START\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:3:0x0005, B:18:0x0064] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:4:0x000c\-\>B:18:0x0064\l|if (r1 \< r0) goto L_0x000e\l}"];
subgraph cluster_Region_1787171677 {
label = "R(3:5|(1:7)(1:17)|18)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x000e|int int r2 = getType(r1)\ljava.lang.Object java.lang.Object r3 = r5.children.elementAt(r1)\l}"];
subgraph cluster_IfRegion_1820621202 {
label = "IF [B:6:0x0019] THEN: R(1:7) ELSE: R(1:17)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0019|if (r2 != 2) goto L_0x001b\l}"];
subgraph cluster_Region_292692033 {
label = "R(1:7)";
node [shape=record,color=blue];
subgraph cluster_SwitchRegion_1916597169 {
label = "Switch: 7, default: R(2:8|9)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x001b|switch(r2) \{\l    case 4: goto L_0x0059;\l    case 5: goto L_0x0053;\l    case 6: goto L_0x004d;\l    case 7: goto L_0x0047;\l    case 8: goto L_0x0041;\l    case 9: goto L_0x003b;\l    case 10: goto L_0x0035;\l    default: goto L_0x001e;\l\}\l}"];
subgraph cluster_Region_1750660678 {
label = "R(2:16|1)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0059|r6.text((java.lang.String) r3)\l}"];
Node_InsnContainer_1643652663 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_668944950 {
label = "R(2:15|1)";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x0053|r6.cdsect((java.lang.String) r3)\l}"];
Node_InsnContainer_1379364536 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_854299655 {
label = "R(2:14|1)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004d|r6.entityRef((java.lang.String) r3)\l}"];
Node_InsnContainer_1328348972 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1888141030 {
label = "R(2:13|1)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0047|r6.ignorableWhitespace((java.lang.String) r3)\l}"];
Node_InsnContainer_1331478176 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1599048823 {
label = "R(2:12|1)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0041|r6.processingInstruction((java.lang.String) r3)\l}"];
Node_InsnContainer_1874194658 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_35447634 {
label = "R(2:11|1)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x003b|r6.comment((java.lang.String) r3)\l}"];
Node_InsnContainer_102629634 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_1824064698 {
label = "R(2:10|1)";
node [shape=record,color=blue];
Node_10 [shape=record,label="{10\:\ 0x0035|r6.docdecl((java.lang.String) r3)\l}"];
Node_InsnContainer_778259314 [shape=record,label="{|break\l}"];
}
subgraph cluster_Region_840828835 {
label = "R(2:8|9)";
node [shape=record,color=blue];
Node_8 [shape=record,label="{8\:\ 0x001e|java.lang.StringBuffer java.lang.StringBuffer r0 = new java.lang.StringBuffer()\lr0.append(\"Illegal type: \")\lr0.append(r2)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0034|throw new java.lang.RuntimeException(r0.toString())\l}"];
}
}
}
subgraph cluster_Region_1231153733 {
label = "R(1:17)";
node [shape=record,color=blue];
Node_17 [shape=record,label="{17\:\ 0x005f|((org.kxml2.kdom.Element) r3).write(r6)\l}"];
}
}
Node_18 [shape=record,label="{18\:\ 0x0064|LOOP_END\lLOOP:0: B:4:0x000c\-\>B:18:0x0064\l|r1++\l}"];
}
}
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0067}"];
Node_20 [shape=record,color=red,label="{20\:\ 0x0067|SYNTHETIC\l}"];
Node_21 [shape=record,color=red,label="{21\:\ 0x001e|SYNTHETIC\l}"];
Node_22 [shape=record,color=red,label="{22\:\ 0x0064|SYNTHETIC\l}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0064|SYNTHETIC\l}"];
Node_24 [shape=record,color=red,label="{24\:\ 0x0064|SYNTHETIC\l}"];
Node_25 [shape=record,color=red,label="{25\:\ 0x0064|SYNTHETIC\l}"];
Node_26 [shape=record,color=red,label="{26\:\ 0x0064|SYNTHETIC\l}"];
Node_27 [shape=record,color=red,label="{27\:\ 0x0064|SYNTHETIC\l}"];
Node_28 [shape=record,color=red,label="{28\:\ 0x0064|SYNTHETIC\l}"];
Node_29 [shape=record,color=red,label="{29\:\ 0x0064|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void org.kxml2.kdom.Node.writeChildren((r5v0 'this' org.kxml2.kdom.Node A[IMMUTABLE_TYPE, THIS]), (r6v0 org.xmlpull.v1.XmlSerializer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_4 -> Node_20[style=dashed];
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_17[style=dashed];
Node_7 -> Node_10;
Node_7 -> Node_11;
Node_7 -> Node_12;
Node_7 -> Node_13;
Node_7 -> Node_14;
Node_7 -> Node_15;
Node_7 -> Node_16;
Node_7 -> Node_21;
Node_16 -> Node_29;
Node_15 -> Node_28;
Node_14 -> Node_27;
Node_13 -> Node_26;
Node_12 -> Node_25;
Node_11 -> Node_24;
Node_10 -> Node_23;
Node_8 -> Node_9;
Node_17 -> Node_22;
Node_18 -> Node_4;
Node_0 -> Node_1;
Node_20 -> Node_19;
Node_21 -> Node_8;
Node_22 -> Node_18;
Node_23 -> Node_18;
Node_24 -> Node_18;
Node_25 -> Node_18;
Node_26 -> Node_18;
Node_27 -> Node_18;
Node_28 -> Node_18;
Node_29 -> Node_18;
}

