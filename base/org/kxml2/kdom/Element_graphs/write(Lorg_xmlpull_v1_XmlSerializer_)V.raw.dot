digraph "CFG fororg.kxml2.kdom.Element.write(Lorg\/xmlpull\/v1\/XmlSerializer;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Vector) = (r5 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.prefixes java.util.Vector \l0x0002: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0003|0x0003: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001c \l}"];
Node_2 [shape=record,label="{2\:\ 0x0005|0x0005: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IGET  (r2 I:java.util.Vector) = (r5 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.prefixes java.util.Vector \l0x0008: INVOKE  (r2 I:int) = (r2 I:java.util.Vector) java.util.Vector.size():int type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x000c|0x000c: IF  (r0 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:6:0x001c \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: INVOKE  (r2 I:java.lang.String) = (r5 I:org.kxml2.kdom.Element), (r0 I:int) org.kxml2.kdom.Element.getNamespacePrefix(int):java.lang.String type: VIRTUAL \l0x0012: INVOKE  (r3 I:java.lang.String) = (r5 I:org.kxml2.kdom.Element), (r0 I:int) org.kxml2.kdom.Element.getNamespaceUri(int):java.lang.String type: VIRTUAL \l0x0016: INVOKE  \l  (r6 I:org.xmlpull.v1.XmlSerializer)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l org.xmlpull.v1.XmlSerializer.setPrefix(java.lang.String, java.lang.String):void type: INTERFACE \l0x0019: ARITH  (r0 I:int) = (r0 I:int) + (1 int) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001c|0x001c: INVOKE  (r0 I:java.lang.String) = (r5 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.getNamespace():java.lang.String type: VIRTUAL \l0x0020: INVOKE  (r2 I:java.lang.String) = (r5 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.getName():java.lang.String type: VIRTUAL \l0x0024: INVOKE  \l  (r6 I:org.xmlpull.v1.XmlSerializer)\l  (r0 I:java.lang.String)\l  (r2 I:java.lang.String)\l org.xmlpull.v1.XmlSerializer.startTag(java.lang.String, java.lang.String):org.xmlpull.v1.XmlSerializer type: INTERFACE \l0x0027: INVOKE  (r0 I:int) = (r5 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.getAttributeCount():int type: VIRTUAL \l}"];
Node_7 [shape=record,label="{7\:\ 0x002b|0x002b: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:9:0x003f \l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|0x002d: INVOKE  (r2 I:java.lang.String) = (r5 I:org.kxml2.kdom.Element), (r1 I:int) org.kxml2.kdom.Element.getAttributeNamespace(int):java.lang.String type: VIRTUAL \l0x0031: INVOKE  (r3 I:java.lang.String) = (r5 I:org.kxml2.kdom.Element), (r1 I:int) org.kxml2.kdom.Element.getAttributeName(int):java.lang.String type: VIRTUAL \l0x0035: INVOKE  (r4 I:java.lang.String) = (r5 I:org.kxml2.kdom.Element), (r1 I:int) org.kxml2.kdom.Element.getAttributeValue(int):java.lang.String type: VIRTUAL \l0x0039: INVOKE  \l  (r6 I:org.xmlpull.v1.XmlSerializer)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l org.xmlpull.v1.XmlSerializer.attribute(java.lang.String, java.lang.String, java.lang.String):org.xmlpull.v1.XmlSerializer type: INTERFACE \l0x003c: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x003f|0x003f: INVOKE  \l  (r5 I:org.kxml2.kdom.Element)\l  (r6 I:org.xmlpull.v1.XmlSerializer)\l org.kxml2.kdom.Element.writeChildren(org.xmlpull.v1.XmlSerializer):void type: VIRTUAL \l0x0042: INVOKE  (r0 I:java.lang.String) = (r5 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.getNamespace():java.lang.String type: VIRTUAL \l0x0046: INVOKE  (r1 I:java.lang.String) = (r5 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.getName():java.lang.String type: VIRTUAL \l0x004a: INVOKE  \l  (r6 I:org.xmlpull.v1.XmlSerializer)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l org.xmlpull.v1.XmlSerializer.endTag(java.lang.String, java.lang.String):org.xmlpull.v1.XmlSerializer type: INTERFACE \l}"];
Node_10 [shape=record,label="{10\:\ 0x004d|0x004d: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.kxml2.kdom.Element.write((r5 'this' I:org.kxml2.kdom.Element A[IMMUTABLE_TYPE, THIS]), (r6 I:org.xmlpull.v1.XmlSerializer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_6;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_3;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_7;
Node_9 -> Node_10;
}

