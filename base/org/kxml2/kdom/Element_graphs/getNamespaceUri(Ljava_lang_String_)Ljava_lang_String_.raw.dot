digraph "CFG fororg.kxml2.kdom.Element.getNamespaceUri(Ljava\/lang\/String;)Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r3 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.getNamespaceCount():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r1 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:11:0x0022 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: INVOKE  (r2 I:java.lang.String) = (r3 I:org.kxml2.kdom.Element), (r1 I:int) org.kxml2.kdom.Element.getNamespacePrefix(int):java.lang.String type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x001d \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r2 I:java.lang.String) = (r3 I:org.kxml2.kdom.Element), (r1 I:int) org.kxml2.kdom.Element.getNamespacePrefix(int):java.lang.String type: VIRTUAL \l0x0013: INVOKE  (r2 I:boolean) = (r4 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0017|0x0017: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x001a \l}"];
Node_8 [shape=record,label="{8\:\ 0x001a|0x001a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_9 [shape=record,label="{9\:\ 0x001d|0x001d: INVOKE  (r4 I:java.lang.String) = (r3 I:org.kxml2.kdom.Element), (r1 I:int) org.kxml2.kdom.Element.getNamespaceUri(int):java.lang.String type: VIRTUAL \l}"];
Node_10 [shape=record,label="{10\:\ 0x0021|0x0021: RETURN  (r4 I:java.lang.String) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|0x0022: IGET  (r0 I:org.kxml2.kdom.Node) = (r3 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.parent org.kxml2.kdom.Node \l0x0024: INSTANCE_OF  (r0 I:boolean) = (r0 I:?[OBJECT, ARRAY]) org.kxml2.kdom.Element \l}"];
Node_12 [shape=record,label="{12\:\ 0x0026|0x0026: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:14:0x0031 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0028|0x0028: IGET  (r0 I:org.kxml2.kdom.Node) = (r3 I:org.kxml2.kdom.Element) org.kxml2.kdom.Element.parent org.kxml2.kdom.Node \l0x002a: CHECK_CAST  (r0 I:org.kxml2.kdom.Element) = (org.kxml2.kdom.Element) (r0 I:?[OBJECT, ARRAY]) \l0x002c: INVOKE  (r4 I:java.lang.String) = (r0 I:org.kxml2.kdom.Element), (r4 I:java.lang.String) org.kxml2.kdom.Element.getNamespaceUri(java.lang.String):java.lang.String type: VIRTUAL \l}"];
Node_14 [shape=record,label="{14\:\ 0x0031|0x0031: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_15 [shape=record,label="{15\:\ 0x0032|0x0032: RETURN  (r4 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{public java.lang.String org.kxml2.kdom.Element.getNamespaceUri((r3 'this' I:org.kxml2.kdom.Element A[IMMUTABLE_TYPE, THIS]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_11;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_8;
Node_6 -> Node_9[style=dashed];
Node_8 -> Node_1;
Node_9 -> Node_10;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_15;
Node_14 -> Node_15;
}

