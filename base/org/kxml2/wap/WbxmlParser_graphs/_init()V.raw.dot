digraph "CFG fororg.kxml2.wap.WbxmlParser.\<init\>()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r2 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0004: IPUT  (r0 I:int), (r2 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.TAG_TABLE int \l0x0006: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0007: IPUT  (r0 I:int), (r2 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.ATTR_START_TABLE int \l0x0009: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x000a: IPUT  (r0 I:int), (r2 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.ATTR_VALUE_TABLE int \l0x000c: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: IPUT  \l  (r0 I:java.util.Hashtable)\l  (r2 I:org.kxml2.wap.WbxmlParser)\l org.kxml2.wap.WbxmlParser.cacheStringTable java.util.Hashtable \l0x000f: CONST  (r0 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l0x0011: NEW_ARRAY  (r1 I:java.lang.String[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0013: IPUT  (r1 I:java.lang.String[]), (r2 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.elementStack java.lang.String[] \l0x0015: CONST  (r1 I:?[int, float, short, byte, char]) = (8 ?[int, float, short, byte, char]) \l0x0017: NEW_ARRAY  (r1 I:java.lang.String[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0019: IPUT  (r1 I:java.lang.String[]), (r2 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nspStack java.lang.String[] \l0x001b: CONST  (r1 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l0x001c: NEW_ARRAY  (r1 I:int[]) = (r1 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x001e: IPUT  (r1 I:int[]), (r2 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nspCounts int[] \l0x0020: NEW_ARRAY  (r0 I:java.lang.String[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: java.lang.String[] \l0x0022: IPUT  (r0 I:java.lang.String[]), (r2 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.attributes java.lang.String[] \l0x0024: CONST  (r0 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) \l0x0025: IPUT  (r0 I:int), (r2 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nextId int \l0x0027: NEW_INSTANCE  (r0 I:java.util.Vector) =  java.util.Vector \l0x0029: INVOKE  (r0 I:java.util.Vector) java.util.Vector.\<init\>():void type: DIRECT \l0x002c: IPUT  (r0 I:java.util.Vector), (r2 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.tables java.util.Vector \l}"];
Node_1 [shape=record,label="{1\:\ 0x002e|0x002e: RETURN   \l}"];
MethodNode[shape=record,label="{public void org.kxml2.wap.WbxmlParser.\<init\>((r2 'this' I:org.kxml2.wap.WbxmlParser A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

