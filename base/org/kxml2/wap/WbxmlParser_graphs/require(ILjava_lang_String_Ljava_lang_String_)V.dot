digraph "CFG fororg.kxml2.wap.WbxmlParser.require(ILjava\/lang\/String;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r4 != r3.type) goto L_0x001c\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|if (r5 == null) goto L_0x0010\l}"];
Node_3 [shape=record,label="{3\:\ 0x0006}"];
Node_4 [shape=record,label="{4\:\ 0x000e|if (r5.equals(getNamespace()) == false) goto L_0x001c\l}"];
Node_5 [shape=record,label="{5\:\ 0x0010|if (r6 == null) goto L_?\l}"];
Node_6 [shape=record,label="{6\:\ 0x0012}"];
Node_7 [shape=record,label="{7\:\ 0x001a|if (r6.equals(getName()) != false) goto L_?\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|java.lang.StringBuffer r0 = new java.lang.StringBuffer()\lr0.append(\"expected: \")\l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|if (r4 != 64) goto L_0x002d\l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|java.lang.String r4 = \"WAP Ext.\"\l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|java.lang.StringBuffer r1 = new java.lang.StringBuffer()\lr1.append(org.xmlpull.p030v1.XmlPullParser.TYPES[r4])\lr1.append(\" \{\")\lr1.append(r5)\lr1.append(\"\}\")\lr1.append(r6)\ljava.lang.String r4 = r1.toString()\l}"];
Node_12 [shape=record,label="{12\:\ 0x004d|PHI: r4 \l  PHI: (r4v1 java.lang.String) = (r4v6 java.lang.String), (r4v7 java.lang.String) binds: [B:11:0x002d, B:10:0x002a] A[DONT_GENERATE, DONT_INLINE]\l|r0.append(r4)\lexception(r0.toString())\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_14 [shape=record,label="{14\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
Node_15 [shape=record,label="{15\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.kxml2.wap.WbxmlParser.require((r3v0 'this' org.kxml2.wap.WbxmlParser A[IMMUTABLE_TYPE, THIS]), (r4v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException, java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_14;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_15;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
}

