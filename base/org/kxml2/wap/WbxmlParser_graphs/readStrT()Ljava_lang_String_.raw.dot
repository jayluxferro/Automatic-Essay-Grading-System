digraph "CFG fororg.kxml2.wap.WbxmlParser.readStrT()Ljava\/lang\/String;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r5 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.readInt():int type: VIRTUAL \l0x0004: IGET  (r1 I:java.util.Hashtable) = (r5 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.cacheStringTable java.util.Hashtable \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000f \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: NEW_INSTANCE  (r1 I:java.util.Hashtable) =  java.util.Hashtable \l0x000a: INVOKE  (r1 I:java.util.Hashtable) java.util.Hashtable.\<init\>():void type: DIRECT \l0x000d: IPUT  \l  (r1 I:java.util.Hashtable)\l  (r5 I:org.kxml2.wap.WbxmlParser)\l org.kxml2.wap.WbxmlParser.cacheStringTable java.util.Hashtable \l}"];
Node_3 [shape=record,label="{3\:\ 0x000f|0x000f: IGET  (r1 I:java.util.Hashtable) = (r5 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.cacheStringTable java.util.Hashtable \l0x0011: NEW_INSTANCE  (r2 I:java.lang.Integer) =  java.lang.Integer \l0x0013: INVOKE  (r2 I:java.lang.Integer), (r0 I:int) java.lang.Integer.\<init\>(int):void type: DIRECT \l0x0016: INVOKE  (r1 I:java.lang.Object) = (r1 I:java.util.Hashtable), (r2 I:java.lang.Object) java.util.Hashtable.get(java.lang.Object):java.lang.Object type: VIRTUAL \l0x001a: CHECK_CAST  (r1 I:java.lang.String) = (java.lang.String) (r1 I:?[OBJECT, ARRAY]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|0x001c: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:12:0x0042 \l}"];
Node_5 [shape=record,label="{5\:\ 0x001e|0x001e: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x001f|0x001f: IGET  (r2 I:byte[]) = (r5 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.stringTable byte[] \l0x0021: ARRAY_LENGTH  (r2 I:int) = (r2 I:?[]) \l}"];
Node_7 [shape=record,label="{7\:\ 0x0022|0x0022: IF  (r1 I:?[int, byte, short, char]) \>= (r2 I:?[int, byte, short, char])  \-\> B:11:0x002d \l}"];
Node_8 [shape=record,label="{8\:\ 0x0024|0x0024: IGET  (r2 I:byte[]) = (r5 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.stringTable byte[] \l0x0026: AGET  (r2 I:byte A[IMMUTABLE_TYPE]) = \l  (r2 I:byte[] A[IMMUTABLE_TYPE])\l  (r1 I:?[int, short, byte, char])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0028|0x0028: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002d \l}"];
Node_10 [shape=record,label="{10\:\ 0x002a|0x002a: ARITH  (r1 I:int) = (r1 I:int) + (1 int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: NEW_INSTANCE  (r2 I:java.lang.String) =  java.lang.String \l0x002f: IGET  (r3 I:byte[]) = (r5 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.stringTable byte[] \l0x0031: ARITH  (r1 I:int) = (r1 I:int) \- (r0 I:int) \l0x0032: IGET  (r4 I:java.lang.String) = (r5 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.encoding java.lang.String \l0x0034: INVOKE  \l  (r2 I:java.lang.String)\l  (r3 I:byte[])\l  (r0 I:int)\l  (r1 I:int)\l  (r4 I:java.lang.String)\l java.lang.String.\<init\>(byte[], int, int, java.lang.String):void type: DIRECT \l0x0037: IGET  (r1 I:java.util.Hashtable) = (r5 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.cacheStringTable java.util.Hashtable \l0x0039: NEW_INSTANCE  (r3 I:java.lang.Integer) =  java.lang.Integer \l0x003b: INVOKE  (r3 I:java.lang.Integer), (r0 I:int) java.lang.Integer.\<init\>(int):void type: DIRECT \l0x003e: INVOKE  \l  (r1 I:java.util.Hashtable)\l  (r3 I:java.lang.Object)\l  (r2 I:java.lang.Object)\l java.util.Hashtable.put(java.lang.Object, java.lang.Object):java.lang.Object type: VIRTUAL \l0x0041: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r2 I:?[OBJECT, ARRAY]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0042|0x0042: RETURN  (r1 I:java.lang.String) \l}"];
MethodNode[shape=record,label="{java.lang.String org.kxml2.wap.WbxmlParser.readStrT((r5 'this' I:org.kxml2.wap.WbxmlParser A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_12;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_11;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_6;
Node_11 -> Node_12;
}

