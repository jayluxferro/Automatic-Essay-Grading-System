digraph "CFG fororg.kxml2.wap.WbxmlParser.setInput(Ljava\/io\/InputStream;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4.f264in = r5\l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|SYNTHETIC\lSplitter:B:1:0x0002\l}"];
Node_2 [shape=record,label="{2\:\ ?|Catch:\{ IOException \-\> 0x0062 \}\lSplitter:B:1:0x0002\l|r4.version = readByte()     \/\/ Catch:\{ IOException \-\> 0x0062 \}\lr4.publicIdentifierId = readInt()     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_3 [shape=record,label="{3\:\ 0x0010|Catch:\{ IOException \-\> 0x0062 \}\l|if (r4.publicIdentifierId != 0) goto L_0x0015     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|Catch:\{ IOException \-\> 0x0062 \}\l|readInt()     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_5 [shape=record,label="{5\:\ 0x0015|Catch:\{ IOException \-\> 0x0062 \}\l|int r0 = readInt()     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_6 [shape=record,label="{6\:\ 0x0019|Catch:\{ IOException \-\> 0x0062 \}\l|if (r6 != null) goto L_0x0024     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_7 [shape=record,label="{7\:\ 0x001b|Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|Catch:\{ IOException \-\> 0x0062 \}\l|if (r0 == 4) goto L_0x003e     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_9 [shape=record,label="{9\:\ 0x001e|Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_10 [shape=record,label="{10\:\ 0x0020|Catch:\{ IOException \-\> 0x0062 \}\l|if (r0 != 106) goto L_0x0027     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_11 [shape=record,label="{11\:\ 0x0022|Catch:\{ IOException \-\> 0x0062 \}\l|java.lang.String r6 = p018io.fabric.sdk.android.services.network.HttpRequest.CHARSET_UTF8     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_12 [shape=record,label="{12\:\ 0x0024|Catch:\{ IOException \-\> 0x0062 \}\lPHI: r6 \l  PHI: (r6v1 java.lang.String) = (r6v0 java.lang.String), (r6v4 java.lang.String), (r6v8 java.lang.String) binds: [B:6:0x0019, B:15:0x003e, B:11:0x0022] A[DONT_GENERATE, DONT_INLINE]\l|r4.encoding = r6     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_13 [shape=record,label="{13\:\ 0x0027|Catch:\{ IOException \-\> 0x0062 \}\l|java.lang.StringBuffer r6 = new java.lang.StringBuffer()     \/\/ Catch:\{ IOException \-\> 0x0062 \}\lr6.append(\"\")     \/\/ Catch:\{ IOException \-\> 0x0062 \}\lr6.append(r0)     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_14 [shape=record,label="{14\:\ 0x003d|Catch:\{ IOException \-\> 0x0062 \}\l|throw new java.io.UnsupportedEncodingException(r6.toString())     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_15 [shape=record,label="{15\:\ 0x003e|Catch:\{ IOException \-\> 0x0062 \}\l|java.lang.String r6 = \"ISO\-8859\-1\"     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_16 [shape=record,label="{16\:\ 0x0041|Catch:\{ IOException \-\> 0x0062 \}\l|int r6 = readInt()     \/\/ Catch:\{ IOException \-\> 0x0062 \}\lr4.stringTable = new byte[r6]     \/\/ Catch:\{ IOException \-\> 0x0062 \}\lr1 = 0     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_17 [shape=record,label="{17\:\ 0x004b|LOOP_START\lCatch:\{ IOException \-\> 0x0062 \}\lPHI: r1 \l  PHI: (r1v1 int) = (r1v0 int), (r1v2 int) binds: [B:16:0x0041, B:21:0x0058] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:17:0x004b\-\>B:21:0x0058\l|if (r1 \>= r6) goto L_0x005a     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_18 [shape=record,label="{18\:\ 0x004d|Catch:\{ IOException \-\> 0x0062 \}\l|int r2 = r5.read(r4.stringTable, r1, r6 \- r1)     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_19 [shape=record,label="{19\:\ 0x0055|Catch:\{ IOException \-\> 0x0062 \}\l|if (r2 \> 0) goto L_0x0058     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_20 [shape=record,label="{20\:\ 0x0057|Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_21 [shape=record,label="{21\:\ 0x0058|LOOP_END\lCatch:\{ IOException \-\> 0x0062 \}\lLOOP:0: B:17:0x004b\-\>B:21:0x0058\l|int r1 = r1 + r2     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_22 [shape=record,label="{22\:\ 0x005a|Catch:\{ IOException \-\> 0x0062 \}\l|selectPage(0, true)     \/\/ Catch:\{ IOException \-\> 0x0062 \}\lselectPage(0, false)     \/\/ Catch:\{ IOException \-\> 0x0062 \}\l}"];
Node_23 [shape=record,label="{23\:\ 0x0062|exception(\"Illegal input format\")\l}"];
Node_24 [shape=record,label="{24\:\ ?|SYNTHETIC\lExcHandler: IOException (unused java.io.IOException)\lSplitter:B:1:0x0002\l}"];
Node_25 [shape=record,label="{25\:\ 0x0057|SYNTHETIC\l}"];
Node_26 [shape=record,label="{26\:\ 0x005a|SYNTHETIC\l}"];
Node_27 [shape=record,label="{27\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_28 [shape=record,label="{28\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{public void org.kxml2.wap.WbxmlParser.setInput((r4v0 'this' org.kxml2.wap.WbxmlParser A[IMMUTABLE_TYPE, THIS]), (r5v0 java.io.InputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_1 -> Node_24;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_12;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_15;
Node_9 -> Node_10;
Node_10 -> Node_11[style=dashed];
Node_10 -> Node_13;
Node_11 -> Node_12;
Node_12 -> Node_16;
Node_13 -> Node_14;
Node_15 -> Node_12;
Node_16 -> Node_17;
Node_17 -> Node_18[style=dashed];
Node_17 -> Node_26;
Node_18 -> Node_19;
Node_19 -> Node_21;
Node_19 -> Node_25[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_17;
Node_22 -> Node_28;
Node_23 -> Node_27;
Node_24 -> Node_23;
Node_25 -> Node_20;
Node_26 -> Node_22;
}

