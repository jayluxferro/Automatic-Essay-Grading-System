digraph "CFG fororg.kxml2.wap.WbxmlParser.getNamespaceCount(I)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r1 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.depth int \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r2 I:?[int, byte, short, char]) \> (r0 I:?[int, byte, short, char])  \-\> B:4:0x0009 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IGET  (r0 I:int[]) = (r1 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nspCounts int[] \l0x0006: AGET  (r2 I:?[int, float]) = (r0 I:?[int, float][]), (r2 I:?[int, short, byte, char]) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: RETURN  (r2 I:int) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0009|0x0009: NEW_INSTANCE  (r2 I:java.lang.IndexOutOfBoundsException) =  java.lang.IndexOutOfBoundsException \l0x000b: INVOKE  (r2 I:java.lang.IndexOutOfBoundsException) java.lang.IndexOutOfBoundsException.\<init\>():void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x000e|0x000e: THROW  (r2 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public int org.kxml2.wap.WbxmlParser.getNamespaceCount((r1 'this' I:org.kxml2.wap.WbxmlParser A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_4 -> Node_5;
}

