digraph "CFG fororg.kxml2.wap.WbxmlParser.parseElement(I)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CONST  (r0 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0001: IPUT  (r0 I:int), (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.type int \l0x0003: IGET  (r1 I:java.lang.String[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.tagTable java.lang.String[] \l0x0005: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) & (63 ?[int, float, short, byte, char]) \l0x0007: INVOKE  (r1 I:java.lang.String) = \l  (r7 I:org.kxml2.wap.WbxmlParser)\l  (r1 I:java.lang.String[])\l  (r2 I:int)\l org.kxml2.wap.WbxmlParser.resolveId(java.lang.String[], int):java.lang.String type: VIRTUAL \l0x000b: IPUT  (r1 I:java.lang.String), (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.name java.lang.String \l0x000d: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000e: IPUT  (r1 I:int), (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.attributeCount int \l0x0010: ARITH  (r2 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) & (128(0x80, float:1.794E\-43) ?[int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0012|0x0012: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0017 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0014|0x0014: INVOKE  (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.readAttr():void type: VIRTUAL \l}"];
Node_3 [shape=record,label="{3\:\ 0x0017|0x0017: ARITH  (r8 I:?[int, boolean, short, byte, char]) = (r8 I:?[int, boolean, short, byte, char]) & (64 ?[int, float, short, byte, char]) \l0x0019: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|0x001a: IF  (r8 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x001c|0x001c: CONST  (r8 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_6 [shape=record,label="{6\:\ 0x001e|0x001e: CONST  (r8 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: IPUT  (r8 I:boolean), (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.degenerated boolean \l0x0021: IGET  (r8 I:int) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.depth int \l0x0023: ARITH  (r3 I:int) = (r8 I:int) + (1 int) \l0x0025: IPUT  (r3 I:int), (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.depth int \l0x0027: ARITH  (r8 I:int) = (r8 I:int) \<\< (r0 I:int) \l0x0028: IGET  (r3 I:java.lang.String[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.elementStack java.lang.String[] \l0x002a: ARITH  (r4 I:int) = (r8 I:int) + (4 int) \l0x002c: INVOKE  (r3 I:java.lang.String[]) = \l  (r7 I:org.kxml2.wap.WbxmlParser)\l  (r3 I:java.lang.String[])\l  (r4 I:int)\l org.kxml2.wap.WbxmlParser.ensureCapacity(java.lang.String[], int):java.lang.String[] type: DIRECT \l0x0030: IPUT  (r3 I:java.lang.String[]), (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.elementStack java.lang.String[] \l0x0032: IGET  (r3 I:java.lang.String[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.elementStack java.lang.String[] \l0x0034: ARITH  (r4 I:int) = (r8 I:int) + (3 int) \l0x0036: IGET  (r5 I:java.lang.String) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.name java.lang.String \l0x0038: APUT  \l  (r3 I:?[OBJECT, ARRAY][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[OBJECT, ARRAY])\l \l0x003a: IGET  (r3 I:int) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.depth int \l0x003c: IGET  (r4 I:int[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nspCounts int[] \l0x003e: ARRAY_LENGTH  (r4 I:int) = (r4 I:?[]) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003f|0x003f: IF  (r3 I:?[int, byte, short, char]) \< (r4 I:?[int, byte, short, char])  \-\> B:10:0x0051 \l}"];
Node_9 [shape=record,label="{9\:\ 0x0041|0x0041: IGET  (r3 I:int) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.depth int \l0x0043: ARITH  (r3 I:int) = (r3 I:int) + (4 int) \l0x0045: NEW_ARRAY  (r3 I:int[]) = (r3 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0047: IGET  (r4 I:int[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nspCounts int[] \l0x0049: IGET  (r5 I:int[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nspCounts int[] \l0x004b: ARRAY_LENGTH  (r5 I:int) = (r5 I:?[]) \l0x004c: INVOKE  \l  (r4 I:java.lang.Object)\l  (r1 I:int)\l  (r3 I:java.lang.Object)\l  (r1 I:int)\l  (r5 I:int)\l java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int):void type: STATIC \l0x004f: IPUT  (r3 I:int[]), (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nspCounts int[] \l}"];
Node_10 [shape=record,label="{10\:\ 0x0051|0x0051: IGET  (r3 I:int[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nspCounts int[] \l0x0053: IGET  (r4 I:int) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.depth int \l0x0055: IGET  (r5 I:int[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nspCounts int[] \l0x0057: IGET  (r6 I:int) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.depth int \l0x0059: ARITH  (r6 I:int) = (r6 I:int) \- (r2 I:int) \l0x005a: AGET  (r5 I:?[int, float]) = (r5 I:?[int, float][]), (r6 I:?[int, short, byte, char]) \l0x005c: APUT  \l  (r3 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x005e: IGET  (r3 I:int) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.attributeCount int \l0x0060: ARITH  (r3 I:int) = (r3 I:int) \- (r2 I:int) \l}"];
Node_11 [shape=record,label="{11\:\ 0x0061|0x0061: IF  (r3 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:19:0x0092 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0063|0x0063: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_13 [shape=record,label="{13\:\ 0x0064|0x0064: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:18:0x008f \l}"];
Node_14 [shape=record,label="{14\:\ 0x0066|0x0066: INVOKE  (r4 I:java.lang.String) = (r7 I:org.kxml2.wap.WbxmlParser), (r3 I:int) org.kxml2.wap.WbxmlParser.getAttributeName(int):java.lang.String type: VIRTUAL \l0x006a: INVOKE  (r5 I:java.lang.String) = (r7 I:org.kxml2.wap.WbxmlParser), (r2 I:int) org.kxml2.wap.WbxmlParser.getAttributeName(int):java.lang.String type: VIRTUAL \l0x006e: INVOKE  (r4 I:boolean) = (r4 I:java.lang.String), (r5 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_15 [shape=record,label="{15\:\ 0x0072|0x0072: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:17:0x008c \l}"];
Node_16 [shape=record,label="{16\:\ 0x0074|0x0074: NEW_INSTANCE  (r4 I:java.lang.StringBuffer) =  java.lang.StringBuffer \l0x0076: INVOKE  (r4 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT \l0x0079: CONST_STR  (r5 I:java.lang.String) =  \"Duplicate Attribute: \" \l0x007b: INVOKE  (r4 I:java.lang.StringBuffer), (r5 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x007e: INVOKE  (r5 I:java.lang.String) = (r7 I:org.kxml2.wap.WbxmlParser), (r3 I:int) org.kxml2.wap.WbxmlParser.getAttributeName(int):java.lang.String type: VIRTUAL \l0x0082: INVOKE  (r4 I:java.lang.StringBuffer), (r5 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x0085: INVOKE  (r4 I:java.lang.String) = (r4 I:java.lang.StringBuffer) java.lang.StringBuffer.toString():java.lang.String type: VIRTUAL \l0x0089: INVOKE  (r7 I:org.kxml2.wap.WbxmlParser), (r4 I:java.lang.String) org.kxml2.wap.WbxmlParser.exception(java.lang.String):void type: DIRECT \l}"];
Node_17 [shape=record,label="{17\:\ 0x008c|0x008c: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_18 [shape=record,label="{18\:\ 0x008f|0x008f: ARITH  (r3 I:int) = (r3 I:int) + (\-1 int) \l}"];
Node_19 [shape=record,label="{19\:\ 0x0092|0x0092: IGET  (r1 I:boolean) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.processNsp boolean \l}"];
Node_20 [shape=record,label="{20\:\ 0x0094|0x0094: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x009a \l}"];
Node_21 [shape=record,label="{21\:\ 0x0096|0x0096: INVOKE  (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.adjustNsp():boolean type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x009a|0x009a: CONST_STR  (r1 I:java.lang.String) =  \"\" \l0x009c: IPUT  (r1 I:java.lang.String), (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.namespace java.lang.String \l}"];
Node_23 [shape=record,label="{23\:\ 0x009e|0x009e: IGET  (r1 I:java.lang.String[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.elementStack java.lang.String[] \l0x00a0: IGET  (r2 I:java.lang.String) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.namespace java.lang.String \l0x00a2: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r2 I:?[OBJECT, ARRAY])\l \l0x00a4: IGET  (r1 I:java.lang.String[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.elementStack java.lang.String[] \l0x00a6: ARITH  (r2 I:int) = (r8 I:int) + (1 int) \l0x00a8: IGET  (r3 I:java.lang.String) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.prefix java.lang.String \l0x00aa: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r2 I:?[int, short, byte, char])\l  (r3 I:?[OBJECT, ARRAY])\l \l0x00ac: IGET  (r1 I:java.lang.String[]) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.elementStack java.lang.String[] \l0x00ae: ARITH  (r8 I:int) = (r8 I:int) + (r0 I:int) \l0x00af: IGET  (r0 I:java.lang.String) = (r7 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.name java.lang.String \l0x00b1: APUT  \l  (r1 I:?[OBJECT, ARRAY][])\l  (r8 I:?[int, short, byte, char])\l  (r0 I:?[OBJECT, ARRAY])\l \l}"];
Node_24 [shape=record,label="{24\:\ 0x00b3|0x00b3: RETURN   \l}"];
MethodNode[shape=record,label="{void org.kxml2.wap.WbxmlParser.parseElement((r7 'this' I:org.kxml2.wap.WbxmlParser A[IMMUTABLE_TYPE, THIS]), (r8 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_8 -> Node_9[style=dashed];
Node_8 -> Node_10;
Node_9 -> Node_10;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_19;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_18;
Node_14 -> Node_15;
Node_15 -> Node_16[style=dashed];
Node_15 -> Node_17;
Node_16 -> Node_17;
Node_17 -> Node_13;
Node_18 -> Node_11;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_23;
Node_22 -> Node_23;
Node_23 -> Node_24;
}

