digraph "CFG fororg.kxml2.wap.WbxmlParser.nextImpl()V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:int) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.type int \l0x0002: CONST  (r1 I:?[int, float, short, byte, char]) = (3 ?[int, float, short, byte, char]) \l0x0003: CONST  (r2 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: IGET  (r0 I:int) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.depth int \l0x0008: ARITH  (r0 I:int) = (r0 I:int) \- (r2 I:int) \l0x0009: IPUT  (r0 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.depth int \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: IGET  (r0 I:boolean) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.degenerated boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:7:0x0015 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: IPUT  (r1 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.type int \l0x0011: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0012: IPUT  (r0 I:boolean), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.degenerated boolean \l}"];
Node_6 [shape=record,label="{6\:\ 0x0014|0x0014: RETURN   \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0016: IPUT  (r0 I:java.lang.String), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.text java.lang.String \l0x0018: IPUT  (r0 I:java.lang.String), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.prefix java.lang.String \l0x001a: IPUT  (r0 I:java.lang.String), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.name java.lang.String \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: INVOKE  (r0 I:int) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.peekId():int type: DIRECT \l0x0020: CONST  (r3 I:?[int, float, short, byte, char]) = (\-2 ?[int, float, short, byte, char]) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0021|0x0021: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x002d \l}"];
Node_10 [shape=record,label="{10\:\ 0x0023|0x0023: IPUT  (r3 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nextId int \l0x0025: INVOKE  (r0 I:int) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.readByte():int type: VIRTUAL \l0x0029: INVOKE  \l  (r4 I:org.kxml2.wap.WbxmlParser)\l  (r0 I:int)\l  (r2 I:boolean)\l org.kxml2.wap.WbxmlParser.selectPage(int, boolean):void type: DIRECT \l}"];
Node_11 [shape=record,label="{11\:\ 0x002d|0x002d: IPUT  (r3 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.nextId int \l0x002f: CONST  (r3 I:?[int, float, short, byte, char]) = (\-1 ?[int, float, short, byte, char]) \l}"];
Node_12 [shape=record,label="{12\:\ 0x0030|0x0030: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:28:0x00b3 \l}"];
Node_13 [shape=record,label="{13\:\ 0x0032|0x0032: CONST  (r3 I:?[int, float, short, byte, char]) = (4 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0033|0x0033: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[1, 2, 3] t:[0x0095, 0x0068, 0x005f] \l}"];
Node_15 [shape=record,label="{15\:\ 0x0036|0x0036: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[64, 65, 66, 67] t:[0x0052, 0x0052, 0x0052, 0x004a] \l}"];
Node_16 [shape=record,label="{16\:\ 0x0039|0x0039: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[128, 129, 130, 131] t:[0x0052, 0x0052, 0x0052, 0x0043] \l}"];
Node_17 [shape=record,label="{17\:\ 0x003c|0x003c: SWITCH  \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l k:[192, 193, 194, 195] t:[0x0052, 0x0052, 0x0052, 0x0052] \l}"];
Node_18 [shape=record,label="{18\:\ 0x003f|0x003f: INVOKE  (r4 I:org.kxml2.wap.WbxmlParser), (r0 I:int) org.kxml2.wap.WbxmlParser.parseElement(int):void type: VIRTUAL \l}"];
Node_19 [shape=record,label="{19\:\ 0x0043|0x0043: IPUT  (r3 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.type int \l0x0045: INVOKE  (r0 I:java.lang.String) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.readStrT():java.lang.String type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x004a|0x004a: NEW_INSTANCE  (r0 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x004c: CONST_STR  (r1 I:java.lang.String) =  \"PI curr. not supp.\" \l0x004e: INVOKE  (r0 I:java.lang.RuntimeException), (r1 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_21 [shape=record,label="{21\:\ 0x0051|0x0051: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_22 [shape=record,label="{22\:\ 0x0052|0x0052: CONST  (r1 I:?[int, float, short, byte, char]) = (64 ?[int, float, short, byte, char]) \l0x0054: IPUT  (r1 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.type int \l0x0056: IPUT  (r0 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.wapCode int \l0x0058: INVOKE  (r0 I:java.lang.Object) = (r4 I:org.kxml2.wap.WbxmlParser), (r0 I:int) org.kxml2.wap.WbxmlParser.parseWapExtension(int):java.lang.Object type: VIRTUAL \l0x005c: IPUT  (r0 I:java.lang.Object), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.wapExtensionData java.lang.Object \l}"];
Node_23 [shape=record,label="{23\:\ 0x005f|0x005f: IPUT  (r3 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.type int \l0x0061: INVOKE  (r0 I:java.lang.String) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.readStrI():java.lang.String type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0065|0x0065: IPUT  (r0 I:java.lang.String), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.text java.lang.String \l}"];
Node_25 [shape=record,label="{25\:\ 0x0068|0x0068: CONST  (r0 I:?[int, float, short, byte, char]) = (6 ?[int, float, short, byte, char]) \l0x0069: IPUT  (r0 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.type int \l0x006b: INVOKE  (r0 I:int) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.readInt():int type: VIRTUAL \l0x006f: CAST  (r0 I:char) = (char) (r0 I:int) \l0x0070: NEW_INSTANCE  (r1 I:java.lang.StringBuffer) =  java.lang.StringBuffer \l0x0072: INVOKE  (r1 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT \l0x0075: CONST_STR  (r2 I:java.lang.String) =  \"\" \l0x0077: INVOKE  (r1 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x007a: INVOKE  (r1 I:java.lang.StringBuffer), (r0 I:char) java.lang.StringBuffer.append(char):java.lang.StringBuffer type: VIRTUAL \l0x007d: INVOKE  (r1 I:java.lang.String) = (r1 I:java.lang.StringBuffer) java.lang.StringBuffer.toString():java.lang.String type: VIRTUAL \l0x0081: IPUT  (r1 I:java.lang.String), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.text java.lang.String \l0x0083: NEW_INSTANCE  (r1 I:java.lang.StringBuffer) =  java.lang.StringBuffer \l0x0085: INVOKE  (r1 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT \l0x0088: CONST_STR  (r2 I:java.lang.String) =  \"#\" \l0x008a: INVOKE  (r1 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x008d: INVOKE  (r1 I:java.lang.StringBuffer), (r0 I:int) java.lang.StringBuffer.append(int):java.lang.StringBuffer type: VIRTUAL \l0x0090: INVOKE  (r0 I:java.lang.String) = (r1 I:java.lang.StringBuffer) java.lang.StringBuffer.toString():java.lang.String type: VIRTUAL \l}"];
Node_26 [shape=record,label="{26\:\ 0x0095|0x0095: IGET  (r0 I:int) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.depth int \l0x0097: ARITH  (r0 I:int) = (r0 I:int) \- (r2 I:int) \l0x0098: ARITH  (r0 I:int) = (r0 I:int) \<\< (2 int) \l0x009a: IPUT  (r1 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.type int \l0x009c: IGET  (r1 I:java.lang.String[]) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.elementStack java.lang.String[] \l0x009e: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l0x00a0: IPUT  (r1 I:java.lang.String), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.namespace java.lang.String \l0x00a2: IGET  (r1 I:java.lang.String[]) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.elementStack java.lang.String[] \l0x00a4: ARITH  (r2 I:int) = (r0 I:int) + (1 int) \l0x00a6: AGET  (r1 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r2 I:?[int, short, byte, char]) \l0x00a8: IPUT  (r1 I:java.lang.String), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.prefix java.lang.String \l0x00aa: IGET  (r1 I:java.lang.String[]) = (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.elementStack java.lang.String[] \l0x00ac: ARITH  (r0 I:int) = (r0 I:int) + (2 int) \l0x00ae: AGET  (r0 I:?[OBJECT, ARRAY]) = (r1 I:?[OBJECT, ARRAY][]), (r0 I:?[int, short, byte, char]) \l}"];
Node_27 [shape=record,label="{27\:\ 0x00b0|0x00b0: IPUT  (r0 I:java.lang.String), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.name java.lang.String \l}"];
Node_28 [shape=record,label="{28\:\ 0x00b3|0x00b3: IPUT  (r2 I:int), (r4 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.type int \l}"];
Node_29 [shape=record,label="{29\:\ 0x00b5|0x00b5: RETURN   \l}"];
MethodNode[shape=record,label="{private final void org.kxml2.wap.WbxmlParser.nextImpl((r4 'this' I:org.kxml2.wap.WbxmlParser A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException, org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_7;
Node_5 -> Node_6;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_8;
Node_11 -> Node_12;
Node_12 -> Node_13[style=dashed];
Node_12 -> Node_28;
Node_13 -> Node_14;
Node_14 -> Node_15;
Node_14 -> Node_23;
Node_14 -> Node_25;
Node_14 -> Node_26;
Node_15 -> Node_16;
Node_15 -> Node_20;
Node_15 -> Node_22;
Node_16 -> Node_17;
Node_16 -> Node_19;
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_17 -> Node_22;
Node_18 -> Node_29;
Node_19 -> Node_24;
Node_20 -> Node_21;
Node_22 -> Node_29;
Node_23 -> Node_24;
Node_24 -> Node_29;
Node_25 -> Node_27;
Node_26 -> Node_27;
Node_27 -> Node_29;
Node_28 -> Node_29;
}

