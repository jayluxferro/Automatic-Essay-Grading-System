digraph "CFG fororg.kxml2.wap.WbxmlParser.selectPage(IZ)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.util.Vector) = (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.tables java.util.Vector \l0x0002: INVOKE  (r0 I:int) = (r0 I:java.util.Vector) java.util.Vector.size():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_3 [shape=record,label="{3\:\ 0x000a|0x000a: RETURN   \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: ARITH  (r0 I:int) = (r4 I:int) * (3 int) \l0x000d: IGET  (r1 I:java.util.Vector) = (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.tables java.util.Vector \l0x000f: INVOKE  (r1 I:int) = (r1 I:java.util.Vector) java.util.Vector.size():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0013|0x0013: IF  (r0 I:?[int, byte, short, char]) \<= (r1 I:?[int, byte, short, char])  \-\> B:7:0x002e \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: NEW_INSTANCE  (r1 I:java.lang.StringBuffer) =  java.lang.StringBuffer \l0x0017: INVOKE  (r1 I:java.lang.StringBuffer) java.lang.StringBuffer.\<init\>():void type: DIRECT \l0x001a: CONST_STR  (r2 I:java.lang.String) =  \"Code Page \" \l0x001c: INVOKE  (r1 I:java.lang.StringBuffer), (r2 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x001f: INVOKE  (r1 I:java.lang.StringBuffer), (r4 I:int) java.lang.StringBuffer.append(int):java.lang.StringBuffer type: VIRTUAL \l0x0022: CONST_STR  (r4 I:java.lang.String) =  \" undefined!\" \l0x0024: INVOKE  (r1 I:java.lang.StringBuffer), (r4 I:java.lang.String) java.lang.StringBuffer.append(java.lang.String):java.lang.StringBuffer type: VIRTUAL \l0x0027: INVOKE  (r4 I:java.lang.String) = (r1 I:java.lang.StringBuffer) java.lang.StringBuffer.toString():java.lang.String type: VIRTUAL \l0x002b: INVOKE  (r3 I:org.kxml2.wap.WbxmlParser), (r4 I:java.lang.String) org.kxml2.wap.WbxmlParser.exception(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x002e|0x002e: IF  (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:9:0x003e \l}"];
Node_8 [shape=record,label="{8\:\ 0x0030|0x0030: IGET  (r4 I:java.util.Vector) = (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.tables java.util.Vector \l0x0032: IGET  (r5 I:int) = (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.TAG_TABLE int \l0x0034: ARITH  (r0 I:int) = (r0 I:int) + (r5 I:int) \l0x0035: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Vector), (r0 I:int) java.util.Vector.elementAt(int):java.lang.Object type: VIRTUAL \l0x0039: CHECK_CAST  (r4 I:java.lang.String[]) = (java.lang.String[]) (r4 I:?[OBJECT, ARRAY]) \l0x003b: IPUT  (r4 I:java.lang.String[]), (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.tagTable java.lang.String[] \l}"];
Node_9 [shape=record,label="{9\:\ 0x003e|0x003e: IGET  (r4 I:java.util.Vector) = (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.tables java.util.Vector \l0x0040: IGET  (r5 I:int) = (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.ATTR_START_TABLE int \l0x0042: ARITH  (r5 I:int) = (r5 I:int) + (r0 I:int) \l0x0043: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Vector), (r5 I:int) java.util.Vector.elementAt(int):java.lang.Object type: VIRTUAL \l0x0047: CHECK_CAST  (r4 I:java.lang.String[]) = (java.lang.String[]) (r4 I:?[OBJECT, ARRAY]) \l0x0049: IPUT  (r4 I:java.lang.String[]), (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.attrStartTable java.lang.String[] \l0x004b: IGET  (r4 I:java.util.Vector) = (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.tables java.util.Vector \l0x004d: IGET  (r5 I:int) = (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.ATTR_VALUE_TABLE int \l0x004f: ARITH  (r0 I:int) = (r0 I:int) + (r5 I:int) \l0x0050: INVOKE  (r4 I:java.lang.Object) = (r4 I:java.util.Vector), (r0 I:int) java.util.Vector.elementAt(int):java.lang.Object type: VIRTUAL \l0x0054: CHECK_CAST  (r4 I:java.lang.String[]) = (java.lang.String[]) (r4 I:?[OBJECT, ARRAY]) \l0x0056: IPUT  (r4 I:java.lang.String[]), (r3 I:org.kxml2.wap.WbxmlParser) org.kxml2.wap.WbxmlParser.attrValueTable java.lang.String[] \l}"];
Node_10 [shape=record,label="{10\:\ 0x0058|0x0058: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.kxml2.wap.WbxmlParser.selectPage((r3 'this' I:org.kxml2.wap.WbxmlParser A[IMMUTABLE_TYPE, THIS]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[org.xmlpull.v1.XmlPullParserException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_10;
Node_9 -> Node_10;
}

