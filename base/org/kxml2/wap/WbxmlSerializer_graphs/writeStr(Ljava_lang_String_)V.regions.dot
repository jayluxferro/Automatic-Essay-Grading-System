digraph "CFG fororg.kxml2.wap.WbxmlSerializer.writeStr(Ljava\/lang\/String;)V" {
subgraph cluster_Region_1178559577 {
label = "R(3:0|(5:(1:7)|8|(1:12)|(2:(1:21)(3:(1:25)|(1:27)|28)|29)(0)|30)|(1:(1:32)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|int int r0 = r10.length()\lint r2 = 0\lint r3 = 0\l}"];
subgraph cluster_LoopRegion_461264295 {
label = "LOOP:0: (5:(1:7)|8|(1:12)|(2:(1:21)(3:(1:25)|(1:27)|28)|29)(0)|30)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0009|if (r2 \< r0) goto L_0x000b\l}"];
subgraph cluster_Region_765569243 {
label = "R(5:(1:7)|8|(1:12)|(2:(1:21)(3:(1:25)|(1:27)|28)|29)(0)|30)";
node [shape=record,color=blue];
subgraph cluster_LoopRegion_2091716317 {
label = "LOOP:1: (1:7)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000d|if (r2 \< r0) goto L_0x000f\l}"];
subgraph cluster_Region_358324057 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0015|LOOP_END\lLOOP:1: B:3:0x000b\-\>B:7:0x0015\l|r2++\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0018|int r6 = r2\l}"];
subgraph cluster_LoopRegion_1844742726 {
label = "LOOP:2: (1:12)";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x0019|LOOP_START\lPHI: r6 \l  PHI: (r6v1 int) = (r6v0 int), (r6v2 int) binds: [B:8:0x0018, B:12:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:2: B:9:0x0019\-\>B:12:0x0021\l|if (r6 \< r0) goto L_0x001b\l}"];
subgraph cluster_Region_1226744161 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0021|LOOP_END\lLOOP:2: B:9:0x0019\-\>B:12:0x0021\l|r6++\l}"];
}
}
subgraph cluster_IfRegion_1483605829 {
label = "IF [B:14:0x0028] THEN: R(2:(1:21)(3:(1:25)|(1:27)|28)|29) ELSE: R(0)";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x0028|if ((r6 \- r2) \> 10) goto L_0x002a\l}"];
subgraph cluster_Region_47337262 {
label = "R(2:(1:21)(3:(1:25)|(1:27)|28)|29)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_2024377315 {
label = "IF [B:16:0x002c, B:18:0x0034, B:20:0x0040] THEN: R(1:21) ELSE: R(3:(1:25)|(1:27)|28)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x002c|if (r2 \> r3) goto L_0x002e\l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|ADDED_TO_REGION\l|if (r10.charAt(r2 \- 1) == ' ') goto L_0x0036\l}"];
Node_20 [shape=record,label="{20\:\ 0x0040|ADDED_TO_REGION\l|if (r9.stringTable.get(r10.substring(r2, r6)) == null) goto L_0x0042\l}"];
subgraph cluster_Region_819010165 {
label = "R(1:21)";
node [shape=record,color=blue];
Node_21 [shape=record,label="{21\:\ 0x0042|r9.buf.write(org.kxml2.wap.Wbxml.STR_T)\lwriteStrT(r10.substring(r3, r6), false)\l}"];
}
subgraph cluster_Region_1022117728 {
label = "R(3:(1:25)|(1:27)|28)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1769668428 {
label = "IF [B:22:0x004f, B:24:0x0057] THEN: R(1:25) ELSE: null";
node [shape=record,color=blue];
Node_22 [shape=record,label="{22\:\ 0x004f|ADDED_TO_REGION\l|if (r2 \> r3) goto L_0x0051\l}"];
Node_24 [shape=record,label="{24\:\ 0x0057|ADDED_TO_REGION\l|if (r10.charAt(r2 \- 1) == ' ') goto L_0x0059\l}"];
subgraph cluster_Region_1691267475 {
label = "R(1:25)";
node [shape=record,color=blue];
Node_25 [shape=record,label="{25\:\ 0x0059|r2\-\-\l}"];
}
}
subgraph cluster_IfRegion_542264421 {
label = "IF [B:26:0x005b] THEN: R(1:27) ELSE: null";
node [shape=record,color=blue];
Node_26 [shape=record,label="{26\:\ 0x005b|PHI: r2 \l  PHI: (r2v5 int) = (r2v3 int), (r2v3 int), (r2v7 int) binds: [B:22:0x004f, B:24:0x0057, B:25:0x0059] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 \> r3) goto L_0x005d\l}"];
subgraph cluster_Region_145629957 {
label = "R(1:27)";
node [shape=record,color=blue];
Node_27 [shape=record,label="{27\:\ 0x005d|r9.buf.write(org.kxml2.wap.Wbxml.STR_T)\lwriteStrT(r10.substring(r3, r2), false)\l}"];
}
}
Node_28 [shape=record,label="{28\:\ 0x0069|r9.buf.write(org.kxml2.wap.Wbxml.STR_T)\lwriteStrT(r10.substring(r2, r6), true)\l}"];
}
}
Node_29 [shape=record,label="{29\:\ 0x0076|r3 = r6\l}"];
}
subgraph cluster_Region_200619087 {
label = "R(0)";
node [shape=record,color=blue];
}
}
Node_30 [shape=record,label="{30\:\ 0x0077|LOOP_END\lPHI: r3 \l  PHI: (r3v2 int) = (r3v1 int), (r3v3 int) binds: [B:35:0x0077, B:34:0x0077] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:30:0x0077\l|r2 = r6\l}"];
}
}
subgraph cluster_Region_137349690 {
label = "R(1:(1:32))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1356084749 {
label = "IF [B:31:0x0079] THEN: R(1:32) ELSE: null";
node [shape=record,color=blue];
Node_31 [shape=record,label="{31\:\ 0x0079|if (r3 \< r0) goto L_0x007b\l}"];
subgraph cluster_Region_971932381 {
label = "R(1:32)";
node [shape=record,color=blue];
Node_32 [shape=record,label="{32\:\ 0x007b|r9.buf.write(org.kxml2.wap.Wbxml.STR_T)\lwriteStrT(r10.substring(r3, r0), false)\l}"];
}
}
}
}
Node_1 [shape=record,color=red,label="{1\:\ 0x0007|LOOP_START\lPHI: r2 r3 \l  PHI: (r2v1 int) = (r2v0 int), (r2v4 int) binds: [B:0:0x0000, B:30:0x0077] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:30:0x0077] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0007\-\>B:30:0x0077\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x000b|LOOP_START\lPHI: r2 \l  PHI: (r2v3 int) = (r2v1 int), (r2v10 int) binds: [B:2:0x0009, B:7:0x0015] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:3:0x000b\-\>B:7:0x0015\l}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x000f}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0013|ADDED_TO_REGION\l|if (r10.charAt(r2) \< 'A') goto L_0x0015\l}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x001b}"];
Node_11 [shape=record,color=red,label="{11\:\ 0x001f|ADDED_TO_REGION\l|if (r10.charAt(r6) \>= 'A') goto L_0x0021\l}"];
Node_13 [shape=record,color=red,label="{13\:\ 0x0024}"];
Node_15 [shape=record,color=red,label="{15\:\ 0x002a}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x002e}"];
Node_19 [shape=record,color=red,label="{19\:\ 0x0036}"];
Node_23 [shape=record,color=red,label="{23\:\ 0x0051}"];
Node_33 [shape=record,color=red,label="{33\:\ 0x0079|SYNTHETIC\l}"];
Node_34 [shape=record,color=red,label="{34\:\ 0x0077|SYNTHETIC\l}"];
Node_35 [shape=record,color=red,label="{35\:\ 0x0077|SYNTHETIC\l}"];
Node_36 [shape=record,color=red,label="{36\:\ 0x0018|SYNTHETIC\l}"];
Node_37 [shape=record,color=red,label="{37\:\ 0x0018|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_38 [shape=record,color=red,label="{38\:\ 0x0024|SYNTHETIC\lADDED_TO_REGION\l}"];
Node_39 [shape=record,color=red,label="{39\:\ 0x0024|SYNTHETIC\l}"];
Node_40 [shape=record,color=red,label="{40\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_41 [shape=record,color=red,label="{41\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void org.kxml2.wap.WbxmlSerializer.writeStr((r9v0 'this' org.kxml2.wap.WbxmlSerializer A[IMMUTABLE_TYPE, THIS]), (r10v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_2 -> Node_33[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_37[style=dashed];
Node_7 -> Node_3;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_38[style=dashed];
Node_12 -> Node_9;
Node_14 -> Node_15;
Node_14 -> Node_35[style=dashed];
Node_16 -> Node_17;
Node_16 -> Node_22[style=dashed];
Node_18 -> Node_19;
Node_18 -> Node_22[style=dashed];
Node_20 -> Node_21;
Node_20 -> Node_22[style=dashed];
Node_21 -> Node_29;
Node_22 -> Node_23;
Node_22 -> Node_26[style=dashed];
Node_24 -> Node_25;
Node_24 -> Node_26[style=dashed];
Node_25 -> Node_26;
Node_26 -> Node_27;
Node_26 -> Node_28[style=dashed];
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_34;
Node_30 -> Node_1;
Node_31 -> Node_32;
Node_31 -> Node_41[style=dashed];
Node_32 -> Node_40;
Node_1 -> Node_2;
Node_3 -> Node_4;
Node_5 -> Node_6;
Node_6 -> Node_7;
Node_6 -> Node_36[style=dashed];
Node_10 -> Node_11;
Node_11 -> Node_12;
Node_11 -> Node_39[style=dashed];
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_17 -> Node_18;
Node_19 -> Node_20;
Node_23 -> Node_24;
Node_33 -> Node_31;
Node_34 -> Node_30;
Node_35 -> Node_30;
Node_36 -> Node_8;
Node_37 -> Node_8;
Node_38 -> Node_13;
Node_39 -> Node_13;
}

