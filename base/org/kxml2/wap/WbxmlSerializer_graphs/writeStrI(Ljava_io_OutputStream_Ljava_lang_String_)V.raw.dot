digraph "CFG fororg.kxml2.wap.WbxmlSerializer.writeStrI(Ljava\/io\/OutputStream;Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.String) = (r1 I:org.kxml2.wap.WbxmlSerializer) org.kxml2.wap.WbxmlSerializer.encoding java.lang.String \l0x0002: INVOKE  (r3 I:byte[]) = (r3 I:java.lang.String), (r0 I:java.lang.String) java.lang.String.getBytes(java.lang.String):byte[] type: VIRTUAL \l0x0006: INVOKE  (r2 I:java.io.OutputStream), (r3 I:byte[]) java.io.OutputStream.write(byte[]):void type: VIRTUAL \l0x0009: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000a: INVOKE  (r2 I:java.io.OutputStream), (r3 I:int) java.io.OutputStream.write(int):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{void org.kxml2.wap.WbxmlSerializer.writeStrI((r1 'this' I:org.kxml2.wap.WbxmlSerializer A[IMMUTABLE_TYPE, THIS]), (r2 I:java.io.OutputStream A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

