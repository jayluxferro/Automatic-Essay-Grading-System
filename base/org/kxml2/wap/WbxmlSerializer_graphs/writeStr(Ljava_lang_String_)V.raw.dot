digraph "CFG fororg.kxml2.wap.WbxmlSerializer.writeStr(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r10 I:java.lang.String) java.lang.String.length():int type: VIRTUAL \l0x0004: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0006: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x0007|0x0007: CONST  (r4 I:?[int, float, short, byte, char]) = \l  (131(0x83, float:1.84E\-43) ?[int, float, short, byte, char])\l \l}"];
Node_2 [shape=record,label="{2\:\ 0x0009|0x0009: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:31:0x0079 \l}"];
Node_3 [shape=record,label="{3\:\ 0x000b|0x000b: CONST  (r5 I:?[int, float, short, byte, char]) = (65 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000d|0x000d: IF  (r2 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_5 [shape=record,label="{5\:\ 0x000f|0x000f: INVOKE  (r6 I:char) = (r10 I:java.lang.String), (r2 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: IF  (r6 I:?[int, byte, short, char]) \>= (r5 I:?[int, byte, short, char])  \-\> B:8:0x0018 \l}"];
Node_7 [shape=record,label="{7\:\ 0x0015|0x0015: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0018|0x0018: MOVE  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_9 [shape=record,label="{9\:\ 0x0019|0x0019: IF  (r6 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:13:0x0024 \l}"];
Node_10 [shape=record,label="{10\:\ 0x001b|0x001b: INVOKE  (r7 I:char) = (r10 I:java.lang.String), (r6 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_11 [shape=record,label="{11\:\ 0x001f|0x001f: IF  (r7 I:?[int, byte, short, char]) \< (r5 I:?[int, byte, short, char])  \-\> B:13:0x0024 \l}"];
Node_12 [shape=record,label="{12\:\ 0x0021|0x0021: ARITH  (r6 I:int) = (r6 I:int) + (1 int) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0024|0x0024: ARITH  (r5 I:int) = (r6 I:int) \- (r2 I:int) \l0x0026: CONST  (r7 I:?[int, float, short, byte, char]) = (10 ?[int, float, short, byte, char]) \l}"];
Node_14 [shape=record,label="{14\:\ 0x0028|0x0028: IF  (r5 I:?[int, byte, short, char]) \<= (r7 I:?[int, byte, short, char])  \-\> B:30:0x0077 \l}"];
Node_15 [shape=record,label="{15\:\ 0x002a|0x002a: CONST  (r5 I:?[int, float, short, byte, char]) = (32 ?[int, float, short, byte, char]) \l}"];
Node_16 [shape=record,label="{16\:\ 0x002c|0x002c: IF  (r2 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:22:0x004f \l}"];
Node_17 [shape=record,label="{17\:\ 0x002e|0x002e: ARITH  (r7 I:int) = (r2 I:int) + (\-1 int) \l0x0030: INVOKE  (r7 I:char) = (r10 I:java.lang.String), (r7 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_18 [shape=record,label="{18\:\ 0x0034|0x0034: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x004f \l}"];
Node_19 [shape=record,label="{19\:\ 0x0036|0x0036: IGET  (r7 I:java.util.Hashtable) = (r9 I:org.kxml2.wap.WbxmlSerializer) org.kxml2.wap.WbxmlSerializer.stringTable java.util.Hashtable \l0x0038: INVOKE  (r8 I:java.lang.String) = (r10 I:java.lang.String), (r2 I:int), (r6 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x003c: INVOKE  (r7 I:java.lang.Object) = (r7 I:java.util.Hashtable), (r8 I:java.lang.Object) java.util.Hashtable.get(java.lang.Object):java.lang.Object type: VIRTUAL \l}"];
Node_20 [shape=record,label="{20\:\ 0x0040|0x0040: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:22:0x004f \l}"];
Node_21 [shape=record,label="{21\:\ 0x0042|0x0042: IGET  (r2 I:java.io.ByteArrayOutputStream) = (r9 I:org.kxml2.wap.WbxmlSerializer) org.kxml2.wap.WbxmlSerializer.buf java.io.ByteArrayOutputStream \l0x0044: INVOKE  (r2 I:java.io.ByteArrayOutputStream), (r4 I:int) java.io.ByteArrayOutputStream.write(int):void type: VIRTUAL \l0x0047: INVOKE  (r2 I:java.lang.String) = (r10 I:java.lang.String), (r3 I:int), (r6 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x004b: INVOKE  \l  (r9 I:org.kxml2.wap.WbxmlSerializer)\l  (r2 I:java.lang.String)\l  (r1 I:boolean)\l org.kxml2.wap.WbxmlSerializer.writeStrT(java.lang.String, boolean):void type: DIRECT \l}"];
Node_22 [shape=record,label="{22\:\ 0x004f|0x004f: IF  (r2 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:26:0x005b \l}"];
Node_23 [shape=record,label="{23\:\ 0x0051|0x0051: ARITH  (r7 I:int) = (r2 I:int) + (\-1 int) \l0x0053: INVOKE  (r7 I:char) = (r10 I:java.lang.String), (r7 I:int) java.lang.String.charAt(int):char type: VIRTUAL \l}"];
Node_24 [shape=record,label="{24\:\ 0x0057|0x0057: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r5 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:26:0x005b \l}"];
Node_25 [shape=record,label="{25\:\ 0x0059|0x0059: ARITH  (r2 I:int) = (r2 I:int) + (\-1 int) \l}"];
Node_26 [shape=record,label="{26\:\ 0x005b|0x005b: IF  (r2 I:?[int, byte, short, char]) \<= (r3 I:?[int, byte, short, char])  \-\> B:28:0x0069 \l}"];
Node_27 [shape=record,label="{27\:\ 0x005d|0x005d: IGET  (r5 I:java.io.ByteArrayOutputStream) = (r9 I:org.kxml2.wap.WbxmlSerializer) org.kxml2.wap.WbxmlSerializer.buf java.io.ByteArrayOutputStream \l0x005f: INVOKE  (r5 I:java.io.ByteArrayOutputStream), (r4 I:int) java.io.ByteArrayOutputStream.write(int):void type: VIRTUAL \l0x0062: INVOKE  (r3 I:java.lang.String) = (r10 I:java.lang.String), (r3 I:int), (r2 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0066: INVOKE  \l  (r9 I:org.kxml2.wap.WbxmlSerializer)\l  (r3 I:java.lang.String)\l  (r1 I:boolean)\l org.kxml2.wap.WbxmlSerializer.writeStrT(java.lang.String, boolean):void type: DIRECT \l}"];
Node_28 [shape=record,label="{28\:\ 0x0069|0x0069: IGET  (r3 I:java.io.ByteArrayOutputStream) = (r9 I:org.kxml2.wap.WbxmlSerializer) org.kxml2.wap.WbxmlSerializer.buf java.io.ByteArrayOutputStream \l0x006b: INVOKE  (r3 I:java.io.ByteArrayOutputStream), (r4 I:int) java.io.ByteArrayOutputStream.write(int):void type: VIRTUAL \l0x006e: INVOKE  (r2 I:java.lang.String) = (r10 I:java.lang.String), (r2 I:int), (r6 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0072: CONST  (r3 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0073: INVOKE  \l  (r9 I:org.kxml2.wap.WbxmlSerializer)\l  (r2 I:java.lang.String)\l  (r3 I:boolean)\l org.kxml2.wap.WbxmlSerializer.writeStrT(java.lang.String, boolean):void type: DIRECT \l}"];
Node_29 [shape=record,label="{29\:\ 0x0076|0x0076: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_30 [shape=record,label="{30\:\ 0x0077|0x0077: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r6 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_31 [shape=record,label="{31\:\ 0x0079|0x0079: IF  (r3 I:?[int, byte, short, char]) \>= (r0 I:?[int, byte, short, char])  \-\> B:33:0x0087 \l}"];
Node_32 [shape=record,label="{32\:\ 0x007b|0x007b: IGET  (r2 I:java.io.ByteArrayOutputStream) = (r9 I:org.kxml2.wap.WbxmlSerializer) org.kxml2.wap.WbxmlSerializer.buf java.io.ByteArrayOutputStream \l0x007d: INVOKE  (r2 I:java.io.ByteArrayOutputStream), (r4 I:int) java.io.ByteArrayOutputStream.write(int):void type: VIRTUAL \l0x0080: INVOKE  (r10 I:java.lang.String) = (r10 I:java.lang.String), (r3 I:int), (r0 I:int) java.lang.String.substring(int, int):java.lang.String type: VIRTUAL \l0x0084: INVOKE  \l  (r9 I:org.kxml2.wap.WbxmlSerializer)\l  (r10 I:java.lang.String)\l  (r1 I:boolean)\l org.kxml2.wap.WbxmlSerializer.writeStrT(java.lang.String, boolean):void type: DIRECT \l}"];
Node_33 [shape=record,label="{33\:\ 0x0087|0x0087: RETURN   \l}"];
MethodNode[shape=record,label="{private void org.kxml2.wap.WbxmlSerializer.writeStr((r9 'this' I:org.kxml2.wap.WbxmlSerializer A[IMMUTABLE_TYPE, THIS]), (r10 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_31;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_8;
Node_5 -> Node_6;
Node_6 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_3;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_13;
Node_10 -> Node_11;
Node_11 -> Node_12[style=dashed];
Node_11 -> Node_13;
Node_12 -> Node_9;
Node_13 -> Node_14;
Node_14 -> Node_15[style=dashed];
Node_14 -> Node_30;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_22;
Node_17 -> Node_18;
Node_18 -> Node_19[style=dashed];
Node_18 -> Node_22;
Node_19 -> Node_20;
Node_20 -> Node_21[style=dashed];
Node_20 -> Node_22;
Node_21 -> Node_29;
Node_22 -> Node_23[style=dashed];
Node_22 -> Node_26;
Node_23 -> Node_24;
Node_24 -> Node_25[style=dashed];
Node_24 -> Node_26;
Node_25 -> Node_26;
Node_26 -> Node_27[style=dashed];
Node_26 -> Node_28;
Node_27 -> Node_28;
Node_28 -> Node_29;
Node_29 -> Node_30;
Node_30 -> Node_1;
Node_31 -> Node_32[style=dashed];
Node_31 -> Node_33;
Node_32 -> Node_33;
}

