digraph "CFG fororg.kxml2.wap.WbxmlSerializer.startTag(Ljava\/lang\/String;Ljava\/lang\/String;)Lorg\/xmlpull\/v1\/XmlSerializer;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: CONST_STR  (r0 I:java.lang.String) =  \"\" \l0x0004: INVOKE  (r2 I:boolean) = (r0 I:java.lang.String), (r2 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0008|0x0008: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:4:0x000b \l}"];
Node_4 [shape=record,label="{4\:\ 0x000b|0x000b: NEW_INSTANCE  (r2 I:java.lang.RuntimeException) =  java.lang.RuntimeException \l0x000d: CONST_STR  (r3 I:java.lang.String) =  \"NSP NYI\" \l0x000f: INVOKE  (r2 I:java.lang.RuntimeException), (r3 I:java.lang.String) java.lang.RuntimeException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: THROW  (r2 I:java.lang.Throwable) \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0014: INVOKE  (r1 I:org.kxml2.wap.WbxmlSerializer), (r2 I:boolean) org.kxml2.wap.WbxmlSerializer.checkPending(boolean):void type: VIRTUAL \l0x0017: IPUT  \l  (r3 I:java.lang.String)\l  (r1 I:org.kxml2.wap.WbxmlSerializer)\l org.kxml2.wap.WbxmlSerializer.pending java.lang.String \l0x0019: IGET  (r2 I:int) = (r1 I:org.kxml2.wap.WbxmlSerializer) org.kxml2.wap.WbxmlSerializer.depth int \l0x001b: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l0x001d: IPUT  (r2 I:int), (r1 I:org.kxml2.wap.WbxmlSerializer) org.kxml2.wap.WbxmlSerializer.depth int \l}"];
Node_7 [shape=record,label="{7\:\ 0x001f|0x001f: RETURN  (r1 I:org.xmlpull.v1.XmlSerializer) \l}"];
MethodNode[shape=record,label="{public org.xmlpull.v1.XmlSerializer org.kxml2.wap.WbxmlSerializer.startTag((r1 'this' I:org.kxml2.wap.WbxmlSerializer A[IMMUTABLE_TYPE, THIS]), (r2 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_2 -> Node_4;
Node_2 -> Node_6[style=dashed];
Node_4 -> Node_5;
Node_6 -> Node_7;
}

