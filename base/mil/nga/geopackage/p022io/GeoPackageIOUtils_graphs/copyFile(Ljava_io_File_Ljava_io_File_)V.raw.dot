digraph "CFG formil.nga.geopackage.io.GeoPackageIOUtils.copyFile(Ljava\/io\/File;Ljava\/io\/File;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.io.FileInputStream) =  java.io.FileInputStream \l0x0002: INVOKE  (r0 I:java.io.FileInputStream), (r1 I:java.io.File) java.io.FileInputStream.\<init\>(java.io.File):void type: DIRECT \l0x0005: NEW_INSTANCE  (r1 I:java.io.FileOutputStream) =  java.io.FileOutputStream \l0x0007: INVOKE  (r1 I:java.io.FileOutputStream), (r2 I:java.io.File) java.io.FileOutputStream.\<init\>(java.io.File):void type: DIRECT \l0x000a: INVOKE  (r0 I:java.io.InputStream), (r1 I:java.io.OutputStream) mil.nga.geopackage.io.GeoPackageIOUtils.copyStream(java.io.InputStream, java.io.OutputStream):void type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x000d|0x000d: RETURN   \l}"];
MethodNode[shape=record,label="{public static void mil.nga.geopackage.io.GeoPackageIOUtils.copyFile((r1 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2 I:java.io.File A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.io.IOException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

