digraph "CFG formil.nga.geopackage.io.BitmapConverter.toBitmap([BLandroid\/graphics\/BitmapFactory$Options;)Landroid\/graphics\/Bitmap;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: ARRAY_LENGTH  (r0 I:int) = (r2 I:?[]) \l0x0001: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: INVOKE  (r2 I:android.graphics.Bitmap) = \l  (r2 I:byte[])\l  (r1 I:int)\l  (r0 I:int)\l  (r3 I:android.graphics.BitmapFactory$Options)\l android.graphics.BitmapFactory.decodeByteArray(byte[], int, int, android.graphics.BitmapFactory$Options):android.graphics.Bitmap type: STATIC \l}"];
Node_1 [shape=record,label="{1\:\ 0x0006|0x0006: RETURN  (r2 I:android.graphics.Bitmap) \l}"];
MethodNode[shape=record,label="{public static android.graphics.Bitmap mil.nga.geopackage.io.BitmapConverter.toBitmap((r2 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:android.graphics.BitmapFactory$Options A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

