digraph "CFG formil.nga.geopackage.projection.GeometryProjectionTransform.transform(Lmil\/nga\/wkb\/geom\/Point;)Lmil\/nga\/wkb\/geom\/Point;" {
subgraph cluster_Region_272201886 {
label = "R(5:(1:6)(1:7)|8|(1:(1:12)(1:13))|(1:16)|17) | DECL_VAR: org.osgeo.proj4j.ProjCoordinate null\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1188639222 {
label = "IF [B:1:0x0004] THEN: R(1:6) ELSE: R(1:7)";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0004|if (r10.hasZ() == true) goto L_0x0006\l}"];
subgraph cluster_Region_2145216062 {
label = "R(1:6)";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0021|PHI: r6 \l  PHI: (r6v1 double) =  binds: [] A[DONT_GENERATE, DONT_INLINE]\l|org.osgeo.proj4j.ProjCoordinate r1 = new org.osgeo.proj4j.ProjCoordinate(r10.getX(), r10.getY(), r10.getZ() != null ? r10.getZ().doubleValue() : Double.NaN)\l}"];
}
subgraph cluster_Region_683937400 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0026|org.osgeo.proj4j.ProjCoordinate r0 = new org.osgeo.proj4j.ProjCoordinate(r10.getX(), r10.getY())\l}"];
}
}
Node_8 [shape=record,label="{8\:\ 0x0033|PHI: r0 \l  PHI: (r0v1 org.osgeo.proj4j.ProjCoordinate) = (r0v7 org.osgeo.proj4j.ProjCoordinate), (r1v7 org.osgeo.proj4j.ProjCoordinate) binds: [B:7:0x0026, B:6:0x0021] A[DONT_GENERATE, DONT_INLINE]\l|org.osgeo.proj4j.ProjCoordinate org.osgeo.proj4j.ProjCoordinate r0 = r9.transform.transform(r0)\lmil.nga.wkb.geom.Point mil.nga.wkb.geom.Point r1 = new mil.nga.wkb.geom.Point(r10.hasZ(), r10.hasM(), r0.f294x, r0.f295y)\l}"];
subgraph cluster_IfRegion_1687433091 {
label = "IF [B:9:0x004f] THEN: R(1:(1:12)(1:13)) ELSE: null";
node [shape=record,color=blue];
Node_9 [shape=record,label="{9\:\ 0x004f|if (r10.hasZ() == true) goto L_0x0051\l}"];
subgraph cluster_Region_1220028988 {
label = "R(1:(1:12)(1:13))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_443648399 {
label = "IF [B:11:0x0057] THEN: R(1:12) ELSE: R(1:13)";
node [shape=record,color=blue];
Node_11 [shape=record,label="{11\:\ 0x0057|if (java.lang.Double.isNaN(r0.f296z) == true) goto L_0x0059\l}"];
subgraph cluster_Region_104237958 {
label = "R(1:12)";
node [shape=record,color=blue];
Node_12 [shape=record,label="{12\:\ 0x0059|r1.setZ(r10.getZ())\l}"];
}
subgraph cluster_Region_315552631 {
label = "R(1:13)";
node [shape=record,color=blue];
Node_13 [shape=record,label="{13\:\ 0x0061|r1.setZ(java.lang.Double.valueOf(r0.f296z))\l}"];
}
}
}
}
subgraph cluster_IfRegion_1035205675 {
label = "IF [B:15:0x006e] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x006e|if (r10.hasM() == true) goto L_0x0070\l}"];
subgraph cluster_Region_1569783382 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0070|r1.setM(r10.getM())\l}"];
}
}
Node_17 [shape=record,label="{17\:\ 0x0077|RETURN\l|return r1\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_2 [shape=record,color=red,label="{2\:\ 0x0006}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0014}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0016}"];
Node_5 [shape=record,color=red,label="{5\:\ 0x001f}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x0051}"];
Node_14 [shape=record,color=red,label="{14\:\ 0x006a}"];
MethodNode[shape=record,label="{public mil.nga.wkb.geom.Point mil.nga.geopackage.projection.GeometryProjectionTransform.transform((r9v0 'this' mil.nga.geopackage.projection.GeometryProjectionTransform A[IMMUTABLE_TYPE, THIS]), (r10v0 mil.nga.wkb.geom.Point A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10;
Node_9 -> Node_14[style=dashed];
Node_11 -> Node_12;
Node_11 -> Node_13[style=dashed];
Node_12 -> Node_14;
Node_13 -> Node_14;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_0 -> Node_1;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
Node_10 -> Node_11;
Node_14 -> Node_15;
}

