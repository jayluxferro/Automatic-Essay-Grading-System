digraph "CFG formil.nga.geopackage.projection.ProjectionFactory.getProjection(Ljava\/lang\/String;Ljava\/lang\/String;[Ljava\/lang\/String;Ljava\/lang\/String;)Lmil\/nga\/geopackage\/projection\/Projection;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:mil.nga.geopackage.projection.AuthorityProjections) = (r3 I:java.lang.String) mil.nga.geopackage.projection.ProjectionFactory.getProjections(java.lang.String):mil.nga.geopackage.projection.AuthorityProjections type: STATIC \l0x0004: INVOKE  (r1 I:mil.nga.geopackage.projection.Projection) = \l  (r0 I:mil.nga.geopackage.projection.AuthorityProjections)\l  (r4 I:java.lang.String)\l mil.nga.geopackage.projection.AuthorityProjections.getProjection(java.lang.String):mil.nga.geopackage.projection.Projection type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0008|0x0008: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0056 \l}"];
Node_2 [shape=record,label="{2\:\ 0x000a|0x000a: INVOKE  (r1 I:mil.nga.geopackage.projection.Projection) = \l  (r0 I:mil.nga.geopackage.projection.AuthorityProjections)\l  (r4 I:java.lang.String)\l  (r6 I:java.lang.String)\l mil.nga.geopackage.projection.ProjectionFactory.fromDefinition(mil.nga.geopackage.projection.AuthorityProjections, java.lang.String, java.lang.String):mil.nga.geopackage.projection.Projection type: STATIC \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0056 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: INVOKE  (r1 I:mil.nga.geopackage.projection.Projection) = \l  (r0 I:mil.nga.geopackage.projection.AuthorityProjections)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String[])\l mil.nga.geopackage.projection.ProjectionFactory.fromParams(mil.nga.geopackage.projection.AuthorityProjections, java.lang.String, java.lang.String[]):mil.nga.geopackage.projection.Projection type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0014|0x0014: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0056 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0016|0x0016: INVOKE  (r1 I:mil.nga.geopackage.projection.Projection) = \l  (r0 I:mil.nga.geopackage.projection.AuthorityProjections)\l  (r4 I:java.lang.String)\l mil.nga.geopackage.projection.ProjectionFactory.fromProperties(mil.nga.geopackage.projection.AuthorityProjections, java.lang.String):mil.nga.geopackage.projection.Projection type: STATIC \l}"];
Node_7 [shape=record,label="{7\:\ 0x001a|0x001a: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:13:0x0056 \l}"];
Node_8 [shape=record,label="{8\:\ 0x001c|0x001c: INVOKE  (r1 I:mil.nga.geopackage.projection.Projection) = \l  (r0 I:mil.nga.geopackage.projection.AuthorityProjections)\l  (r4 I:java.lang.String)\l mil.nga.geopackage.projection.ProjectionFactory.fromName(mil.nga.geopackage.projection.AuthorityProjections, java.lang.String):mil.nga.geopackage.projection.Projection type: STATIC \l}"];
Node_9 [shape=record,label="{9\:\ 0x0020|0x0020: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:11:0x0023 \l}"];
Node_11 [shape=record,label="{11\:\ 0x0023|0x0023: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0025: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0027: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x002a: CONST_STR  (r2 I:java.lang.String) =  \"Failed to create projection for authority: \" \l0x002c: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002f: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0032: CONST_STR  (r3 I:java.lang.String) =  \", code: \" \l0x0034: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0037: INVOKE  (r1 I:java.lang.StringBuilder), (r4 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003a: CONST_STR  (r3 I:java.lang.String) =  \", definition: \" \l0x003c: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x003f: INVOKE  (r1 I:java.lang.StringBuilder), (r6 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0042: CONST_STR  (r3 I:java.lang.String) =  \", params: \" \l0x0044: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0047: INVOKE  (r3 I:java.lang.String) = (r5 I:java.lang.Object[]) java.util.Arrays.toString(java.lang.Object[]):java.lang.String type: STATIC \l0x004b: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x004e: INVOKE  (r3 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0052: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r3 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_12 [shape=record,label="{12\:\ 0x0055|0x0055: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_13 [shape=record,label="{13\:\ 0x0056|0x0056: RETURN  (r1 I:mil.nga.geopackage.projection.Projection) \l}"];
MethodNode[shape=record,label="{public static mil.nga.geopackage.projection.Projection mil.nga.geopackage.projection.ProjectionFactory.getProjection((r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.String[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_13;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_13;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_13;
Node_6 -> Node_7;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_13;
Node_8 -> Node_9;
Node_9 -> Node_11;
Node_9 -> Node_13[style=dashed];
Node_11 -> Node_12;
}

