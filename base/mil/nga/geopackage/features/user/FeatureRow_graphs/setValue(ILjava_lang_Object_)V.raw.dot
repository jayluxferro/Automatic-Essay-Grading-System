digraph "CFG formil.nga.geopackage.features.user.FeatureRow.setValue(ILjava\/lang\/Object;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:int) = (r1 I:mil.nga.geopackage.features.user.FeatureRow) mil.nga.geopackage.features.user.FeatureRow.getGeometryColumnIndex():int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0004|0x0004: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|0x0006: INSTANCE_OF  (r0 I:boolean) = (r3 I:?[OBJECT, ARRAY]) byte[] \l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|0x0008: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0012 \l}"];
Node_4 [shape=record,label="{4\:\ 0x000a|0x000a: CHECK_CAST  (r3 I:byte[]) = (byte[]) (r3 I:?[OBJECT, ARRAY]) \l0x000c: NEW_INSTANCE  (r0 I:mil.nga.geopackage.geom.GeoPackageGeometryData) =  mil.nga.geopackage.geom.GeoPackageGeometryData \l0x000e: INVOKE  \l  (r0 I:mil.nga.geopackage.geom.GeoPackageGeometryData)\l  (r3 I:byte[])\l mil.nga.geopackage.geom.GeoPackageGeometryData.\<init\>(byte[]):void type: DIRECT \l0x0011: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r0 I:?[OBJECT, ARRAY]) \l}"];
Node_5 [shape=record,label="{5\:\ 0x0012|0x0012: INVOKE  \l  (r1 I:mil.nga.geopackage.user.UserRow)\l  (r2 I:int)\l  (r3 I:java.lang.Object)\l mil.nga.geopackage.user.UserRow.setValue(int, java.lang.Object):void type: SUPER \l}"];
Node_6 [shape=record,label="{6\:\ 0x0015|0x0015: RETURN   \l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.features.user.FeatureRow.setValue((r1 'this' I:mil.nga.geopackage.features.user.FeatureRow A[IMMUTABLE_TYPE, THIS]), (r2 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3 I:java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_5;
Node_5 -> Node_6;
}

