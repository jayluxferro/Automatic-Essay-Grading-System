digraph "CFG formil.nga.geopackage.features.user.FeatureTableReader.createColumn(Lmil\/nga\/geopackage\/features\/user\/FeatureCursor;ILjava\/lang\/String;Ljava\/lang\/String;Ljava\/lang\/Long;ZIZ)Lmil\/nga\/geopackage\/features\/user\/FeatureColumn;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r4 = r14\l}"];
Node_1 [shape=record,label="{1\:\ 0x000c|if (r14.equals(r11.geometryColumns.getColumnName()) == false) goto L_0x001a\l}"];
Node_2 [shape=record,label="{2\:\ 0x000e|mil.nga.wkb.geom.GeometryType r1 = mil.nga.wkb.geom.GeometryType.fromName(r15)\lr10 = r1\lr5 = mil.nga.geopackage.p021db.GeoPackageDataType.BLOB\l}"];
Node_3 [shape=record,label="{3\:\ 0x0016|PHI: r5 r10 \l  PHI: (r5v1 mil.nga.geopackage.db.GeoPackageDataType) = (r5v0 mil.nga.geopackage.db.GeoPackageDataType), (r5v2 mil.nga.geopackage.db.GeoPackageDataType) binds: [B:4:0x001a, B:2:0x000e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r10v1 mil.nga.wkb.geom.GeometryType) = (r10v0 mil.nga.wkb.geom.GeometryType), (r10v2 mil.nga.wkb.geom.GeometryType) binds: [B:4:0x001a, B:2:0x000e] A[DONT_GENERATE, DONT_INLINE]\l|r1 = r12\l}"];
Node_4 [shape=record,label="{4\:\ 0x001a|r5 = mil.nga.geopackage.p021db.GeoPackageDataType.fromName(r15)\lr10 = null\l}"];
Node_5 [shape=record,label="{5\:\ 0x0022|r3 = r13\lr4 = r14\lr6 = r16\lr7 = r17\l}"];
Node_6 [shape=record,label="{6\:\ 0x0034|RETURN\l|return new mil.nga.geopackage.features.user.FeatureColumn(r3, r4, r5, r6, r7, r12.getValue(r18, r5), r19, r10)\l}"];
MethodNode[shape=record,label="{protected mil.nga.geopackage.features.user.FeatureColumn mil.nga.geopackage.features.user.FeatureTableReader.createColumn((r11v0 'this' mil.nga.geopackage.features.user.FeatureTableReader A[IMMUTABLE_TYPE, THIS]), (r12v0 mil.nga.geopackage.features.user.FeatureCursor A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 java.lang.Long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_4;
Node_2 -> Node_3;
Node_3 -> Node_5;
Node_4 -> Node_3;
Node_5 -> Node_6;
}

