digraph "CFG formil.nga.geopackage.features.user.FeatureColumn.\<init\>(ILjava\/lang\/String;Lmil\/nga\/geopackage\/db\/GeoPackageDataType;Ljava\/lang\/Long;ZLjava\/lang\/Object;ZLmil\/nga\/wkb\/geom\/GeometryType;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r1, r2, r3, r4, r5, r6, r7)\lr0.geometryType = r8\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|if (r3 == null) goto L_0x0008\l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|RETURN\l|return\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|java.lang.StringBuilder r3 = new java.lang.StringBuilder()\lr3.append(\"Data Type is required to create column: \")\lr3.append(r2)\l}"];
Node_4 [shape=record,label="{4\:\ 0x001e|throw new mil.nga.geopackage.GeoPackageException(r3.toString())\l}"];
MethodNode[shape=record,label="{void mil.nga.geopackage.features.user.FeatureColumn.\<init\>((r0v0 'this' mil.nga.geopackage.features.user.FeatureColumn A[IMMUTABLE_TYPE, THIS]), (r1v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r2v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r3v0 mil.nga.geopackage.db.GeoPackageDataType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Long A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 boolean A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8v0 mil.nga.wkb.geom.GeometryType A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_3 -> Node_4;
}

