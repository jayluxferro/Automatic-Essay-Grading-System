digraph "CFG formil.nga.geopackage.features.columns.GeometryColumnsSqlMmDao.update(Lmil\/nga\/geopackage\/features\/columns\/GeometryColumnsSqlMm;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.stmt.UpdateBuilder) = \l  (r4 I:mil.nga.geopackage.features.columns.GeometryColumnsSqlMmDao)\l mil.nga.geopackage.features.columns.GeometryColumnsSqlMmDao.updateBuilder():com.j256.ormlite.stmt.UpdateBuilder type: VIRTUAL \l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"geometry_type_name\" \l0x0006: INVOKE  (r2 I:java.lang.String) = \l  (r5 I:mil.nga.geopackage.features.columns.GeometryColumnsSqlMm)\l mil.nga.geopackage.features.columns.GeometryColumnsSqlMm.getGeometryTypeName():java.lang.String type: VIRTUAL \l0x000a: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.UpdateBuilder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.stmt.UpdateBuilder.updateColumnValue(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.UpdateBuilder type: VIRTUAL \l0x000d: CONST_STR  (r1 I:java.lang.String) =  \"srs_id\" \l0x000f: INVOKE  (r2 I:long) = \l  (r5 I:mil.nga.geopackage.features.columns.GeometryColumnsSqlMm)\l mil.nga.geopackage.features.columns.GeometryColumnsSqlMm.getSrsId():long type: VIRTUAL \l0x0013: INVOKE  (r2 I:java.lang.Long) = (r2 I:long) java.lang.Long.valueOf(long):java.lang.Long type: STATIC \l0x0017: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.UpdateBuilder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.stmt.UpdateBuilder.updateColumnValue(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.UpdateBuilder type: VIRTUAL \l0x001a: INVOKE  (r1 I:com.j256.ormlite.stmt.Where) = (r0 I:com.j256.ormlite.stmt.UpdateBuilder) com.j256.ormlite.stmt.UpdateBuilder.where():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x001e: CONST_STR  (r2 I:java.lang.String) =  \"table_name\" \l0x0020: INVOKE  (r3 I:java.lang.String) = \l  (r5 I:mil.nga.geopackage.features.columns.GeometryColumnsSqlMm)\l mil.nga.geopackage.features.columns.GeometryColumnsSqlMm.getTableName():java.lang.String type: VIRTUAL \l0x0024: INVOKE  (r1 I:com.j256.ormlite.stmt.Where) = \l  (r1 I:com.j256.ormlite.stmt.Where)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.Object)\l com.j256.ormlite.stmt.Where.eq(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.Where type: VIRTUAL \l0x0028: INVOKE  (r1 I:com.j256.ormlite.stmt.Where) = (r1 I:com.j256.ormlite.stmt.Where) com.j256.ormlite.stmt.Where.and():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x002c: CONST_STR  (r2 I:java.lang.String) =  \"column_name\" \l0x002e: INVOKE  (r5 I:java.lang.String) = \l  (r5 I:mil.nga.geopackage.features.columns.GeometryColumnsSqlMm)\l mil.nga.geopackage.features.columns.GeometryColumnsSqlMm.getColumnName():java.lang.String type: VIRTUAL \l0x0032: INVOKE  \l  (r1 I:com.j256.ormlite.stmt.Where)\l  (r2 I:java.lang.String)\l  (r5 I:java.lang.Object)\l com.j256.ormlite.stmt.Where.eq(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.Where type: VIRTUAL \l0x0035: INVOKE  (r5 I:com.j256.ormlite.stmt.PreparedUpdate) = (r0 I:com.j256.ormlite.stmt.UpdateBuilder) com.j256.ormlite.stmt.UpdateBuilder.prepare():com.j256.ormlite.stmt.PreparedUpdate type: VIRTUAL \l0x0039: INVOKE  (r5 I:int) = \l  (r4 I:mil.nga.geopackage.features.columns.GeometryColumnsSqlMmDao)\l  (r5 I:com.j256.ormlite.stmt.PreparedUpdate)\l mil.nga.geopackage.features.columns.GeometryColumnsSqlMmDao.update(com.j256.ormlite.stmt.PreparedUpdate):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x003d|0x003d: RETURN  (r5 I:int) \l}"];
MethodNode[shape=record,label="{public int mil.nga.geopackage.features.columns.GeometryColumnsSqlMmDao.update((r4 'this' I:mil.nga.geopackage.features.columns.GeometryColumnsSqlMmDao A[IMMUTABLE_TYPE, THIS]), (r5 I:mil.nga.geopackage.features.columns.GeometryColumnsSqlMm A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

