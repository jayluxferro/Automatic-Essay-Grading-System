digraph "CFG formil.nga.geopackage.schema.constraints.DataColumnConstraintsDao.deleteCascade(Lmil\/nga\/geopackage\/schema\/constraints\/DataColumnConstraints;)I" {
subgraph cluster_Region_1342060451 {
label = "R(1:(2:(1:19)|(3:2|(2:4|(2:14|(1:16)))|18)))";
node [shape=record,color=blue];
subgraph cluster_Region_74056248 {
label = "R(2:(1:19)|(3:2|(2:4|(2:14|(1:16)))|18))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_831383895 {
label = "IF [B:1:0x0001] THEN: R(1:19) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0001|if (r5 == null) goto L_?\l}"];
subgraph cluster_Region_573187592 {
label = "R(1:19)";
node [shape=record,color=blue];
Node_19 [shape=record,label="{19\:\ ?|SYNTHETIC\lRETURN\l|return 0\l}"];
}
}
subgraph cluster_Region_2083055148 {
label = "R(3:2|(2:4|(2:14|(1:16)))|18)";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0003|java.util.List java.util.List\<mil.nga.geopackage.schema.constraints.DataColumnConstraints\> r1 = queryByConstraintName(r5.getConstraintName())\l}"];
subgraph cluster_IfRegion_1840162038 {
label = "IF [B:3:0x0010] THEN: R(2:4|(2:14|(1:16))) ELSE: null";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0010|if (r1.size() == 1) goto L_0x0012\l}"];
subgraph cluster_Region_1182987792 {
label = "R(2:4|(2:14|(1:16)))";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x0012|mil.nga.geopackage.schema.constraints.DataColumnConstraints mil.nga.geopackage.schema.constraints.DataColumnConstraints r0 = r1.get(0)\l}"];
subgraph cluster_IfRegion_722871936 {
label = "IF [B:5:0x0024, B:7:0x0032, B:9:0x0038, B:11:0x003e, B:13:0x004d] THEN: R(2:14|(1:16)) ELSE: null";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0024|ADDED_TO_REGION\l|if (r0.getConstraintName().equals(r5.getConstraintName()) == true) goto L_0x0026\l}"];
Node_7 [shape=record,label="{7\:\ 0x0032|ADDED_TO_REGION\l|if (r0.getConstraintType().equals(r5.getConstraintType()) == true) goto L_0x0034\l}"];
Node_9 [shape=record,label="{9\:\ 0x0038|ADDED_TO_REGION\l|if (r0.getValue() != null) goto L_0x0041\l}"];
Node_11 [shape=record,label="{11\:\ 0x003e|ADDED_TO_REGION\l|if (r5.getValue() == null) goto L_0x004f\l}"];
Node_13 [shape=record,label="{13\:\ 0x004d|ADDED_TO_REGION\l|if (r0.getValue().equals(r5.getValue()) == true) goto L_0x004f\l}"];
subgraph cluster_Region_280280136 {
label = "R(2:14|(1:16))";
node [shape=record,color=blue];
Node_14 [shape=record,label="{14\:\ 0x004f|mil.nga.geopackage.schema.columns.DataColumnsDao mil.nga.geopackage.schema.columns.DataColumnsDao r0 = getDataColumnsDao()\ljava.util.List java.util.List\<mil.nga.geopackage.schema.columns.DataColumns\> r1 = r0.queryByConstraintName(r5.getConstraintName())\l}"];
subgraph cluster_IfRegion_1497790158 {
label = "IF [B:15:0x005f] THEN: R(1:16) ELSE: null";
node [shape=record,color=blue];
Node_15 [shape=record,label="{15\:\ 0x005f|if (r1.isEmpty() == false) goto L_0x0061\l}"];
subgraph cluster_Region_145044412 {
label = "R(1:16)";
node [shape=record,color=blue];
Node_16 [shape=record,label="{16\:\ 0x0061|r0.delete(r1)\l}"];
}
}
}
}
}
}
Node_18 [shape=record,label="{18\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return delete(r5)\l}"];
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_6 [shape=record,color=red,label="{6\:\ 0x0026}"];
Node_8 [shape=record,color=red,label="{8\:\ 0x0034}"];
Node_10 [shape=record,color=red,label="{10\:\ 0x003a}"];
Node_12 [shape=record,color=red,label="{12\:\ 0x0041}"];
Node_17 [shape=record,color=red,label="{17\:\ 0x0064}"];
MethodNode[shape=record,label="{public int mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao.deleteCascade((r4v0 'this' mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao A[IMMUTABLE_TYPE, THIS]), (r5v0 mil.nga.geopackage.schema.constraints.DataColumnConstraints A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_19;
Node_2 -> Node_3;
Node_3 -> Node_4;
Node_3 -> Node_17[style=dashed];
Node_4 -> Node_5;
Node_5 -> Node_6;
Node_5 -> Node_17[style=dashed];
Node_7 -> Node_8;
Node_7 -> Node_17[style=dashed];
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_12;
Node_11 -> Node_17[style=dashed];
Node_11 -> Node_14;
Node_13 -> Node_14;
Node_13 -> Node_17[style=dashed];
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_15 -> Node_17[style=dashed];
Node_16 -> Node_17;
Node_0 -> Node_1;
Node_6 -> Node_7;
Node_8 -> Node_9;
Node_10 -> Node_11;
Node_12 -> Node_13;
Node_17 -> Node_18;
}

