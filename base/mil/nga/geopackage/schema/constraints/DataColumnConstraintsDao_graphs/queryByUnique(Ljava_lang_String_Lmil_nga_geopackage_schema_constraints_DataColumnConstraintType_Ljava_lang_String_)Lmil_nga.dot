digraph "CFG formil.nga.geopackage.schema.constraints.DataColumnConstraintsDao.queryByUnique(Ljava\/lang\/String;Lmil\/nga\/geopackage\/schema\/constraints\/DataColumnConstraintType;Ljava\/lang\/String;)Lmil\/nga\/geopackage\/schema\/constraints\/DataColumnConstraints;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|com.j256.ormlite.stmt.QueryBuilder r0 = queryBuilder()\lsetUniqueWhere(r0.where(), r4, r5, r6)\ljava.util.List r0 = r0.query()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0013|if (r0.isEmpty() != false) goto L_0x0059\l}"];
Node_2 [shape=record,label="{2\:\ 0x0015}"];
Node_3 [shape=record,label="{3\:\ 0x001a|if (r0.size() \> 1) goto L_0x0024\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c}"];
Node_5 [shape=record,label="{5\:\ 0x0024|java.lang.StringBuilder r1 = new java.lang.StringBuilder()\lr1.append(\"More than one \")\lr1.append(mil.nga.geopackage.schema.constraints.DataColumnConstraints.class.getSimpleName())\lr1.append(\" was found for unique constraint. Name: \")\lr1.append(r4)\lr1.append(\", Type: \")\lr1.append(r5)\lr1.append(\", Value: \")\lr1.append(r6)\l}"];
Node_6 [shape=record,label="{6\:\ 0x0058|throw new mil.nga.geopackage.GeoPackageException(r1.toString())\l}"];
Node_7 [shape=record,label="{7\:\ 0x0059|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_8 [shape=record,label="{8\:\ ?|SYNTHETIC\lRETURN\l|return (mil.nga.geopackage.schema.constraints.DataColumnConstraints) r0.get(0)\l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.schema.constraints.DataColumnConstraints mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao.queryByUnique((r3v0 'this' mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao A[IMMUTABLE_TYPE, THIS]), (r4v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 mil.nga.geopackage.schema.constraints.DataColumnConstraintType A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_8;
Node_5 -> Node_6;
}

