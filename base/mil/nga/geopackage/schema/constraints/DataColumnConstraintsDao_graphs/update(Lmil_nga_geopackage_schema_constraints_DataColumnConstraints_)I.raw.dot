digraph "CFG formil.nga.geopackage.schema.constraints.DataColumnConstraintsDao.update(Lmil\/nga\/geopackage\/schema\/constraints\/DataColumnConstraints;)I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:com.j256.ormlite.stmt.UpdateBuilder) = \l  (r4 I:mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao)\l mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao.updateBuilder():com.j256.ormlite.stmt.UpdateBuilder type: VIRTUAL \l0x0004: CONST_STR  (r1 I:java.lang.String) =  \"min\" \l0x0006: INVOKE  (r2 I:java.math.BigDecimal) = \l  (r5 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.getMin():java.math.BigDecimal type: VIRTUAL \l0x000a: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.UpdateBuilder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.stmt.UpdateBuilder.updateColumnValue(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.UpdateBuilder type: VIRTUAL \l0x000d: CONST_STR  (r1 I:java.lang.String) =  \"min_is_inclusive\" \l0x000f: INVOKE  (r2 I:java.lang.Boolean) = \l  (r5 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.getMinIsInclusive():java.lang.Boolean type: VIRTUAL \l0x0013: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.UpdateBuilder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.stmt.UpdateBuilder.updateColumnValue(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.UpdateBuilder type: VIRTUAL \l0x0016: CONST_STR  (r1 I:java.lang.String) =  \"max\" \l0x0018: INVOKE  (r2 I:java.math.BigDecimal) = \l  (r5 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.getMax():java.math.BigDecimal type: VIRTUAL \l0x001c: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.UpdateBuilder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.stmt.UpdateBuilder.updateColumnValue(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.UpdateBuilder type: VIRTUAL \l0x001f: CONST_STR  (r1 I:java.lang.String) =  \"max_is_inclusive\" \l0x0021: INVOKE  (r2 I:java.lang.Boolean) = \l  (r5 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.getMaxIsInclusive():java.lang.Boolean type: VIRTUAL \l0x0025: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.UpdateBuilder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.stmt.UpdateBuilder.updateColumnValue(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.UpdateBuilder type: VIRTUAL \l0x0028: CONST_STR  (r1 I:java.lang.String) =  \"description\" \l0x002a: INVOKE  (r2 I:java.lang.String) = \l  (r5 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.getDescription():java.lang.String type: VIRTUAL \l0x002e: INVOKE  \l  (r0 I:com.j256.ormlite.stmt.UpdateBuilder)\l  (r1 I:java.lang.String)\l  (r2 I:java.lang.Object)\l com.j256.ormlite.stmt.UpdateBuilder.updateColumnValue(java.lang.String, java.lang.Object):com.j256.ormlite.stmt.UpdateBuilder type: VIRTUAL \l0x0031: INVOKE  (r1 I:com.j256.ormlite.stmt.Where) = (r0 I:com.j256.ormlite.stmt.UpdateBuilder) com.j256.ormlite.stmt.UpdateBuilder.where():com.j256.ormlite.stmt.Where type: VIRTUAL \l0x0035: INVOKE  (r2 I:java.lang.String) = \l  (r5 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.getConstraintName():java.lang.String type: VIRTUAL \l0x0039: INVOKE  (r3 I:mil.nga.geopackage.schema.constraints.DataColumnConstraintType) = \l  (r5 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.getConstraintType():mil.nga.geopackage.schema.constraints.DataColumnConstraintType type: VIRTUAL \l0x003d: INVOKE  (r5 I:java.lang.String) = \l  (r5 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.getValue():java.lang.String type: VIRTUAL \l0x0041: INVOKE  \l  (r4 I:mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao)\l  (r1 I:com.j256.ormlite.stmt.Where)\l  (r2 I:java.lang.String)\l  (r3 I:mil.nga.geopackage.schema.constraints.DataColumnConstraintType)\l  (r5 I:java.lang.String)\l mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao.setUniqueWhere(com.j256.ormlite.stmt.Where, java.lang.String, mil.nga.geopackage.schema.constraints.DataColumnConstraintType, java.lang.String):void type: DIRECT \l0x0044: INVOKE  (r5 I:com.j256.ormlite.stmt.PreparedUpdate) = (r0 I:com.j256.ormlite.stmt.UpdateBuilder) com.j256.ormlite.stmt.UpdateBuilder.prepare():com.j256.ormlite.stmt.PreparedUpdate type: VIRTUAL \l0x0048: INVOKE  (r5 I:int) = \l  (r4 I:mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao)\l  (r5 I:com.j256.ormlite.stmt.PreparedUpdate)\l mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao.update(com.j256.ormlite.stmt.PreparedUpdate):int type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x004c|0x004c: RETURN  (r5 I:int) \l}"];
MethodNode[shape=record,label="{public int mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao.update((r4 'this' I:mil.nga.geopackage.schema.constraints.DataColumnConstraintsDao A[IMMUTABLE_TYPE, THIS]), (r5 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Throws, \{value=[java.sql.SQLException]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

