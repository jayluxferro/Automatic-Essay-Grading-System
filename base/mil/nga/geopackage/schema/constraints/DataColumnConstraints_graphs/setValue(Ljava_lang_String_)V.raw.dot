digraph "CFG formil.nga.geopackage.schema.constraints.DataColumnConstraints.setValue(Ljava\/lang\/String;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:java.lang.String) = \l  (r2 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.constraintType java.lang.String \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0031 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0031 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: INVOKE  (r0 I:mil.nga.geopackage.schema.constraints.DataColumnConstraintType) = \l  (r2 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.getConstraintType():mil.nga.geopackage.schema.constraints.DataColumnConstraintType type: VIRTUAL \l0x000a: SGET  (r1 I:mil.nga.geopackage.schema.constraints.DataColumnConstraintType) =  mil.nga.geopackage.schema.constraints.DataColumnConstraintType.RANGE mil.nga.geopackage.schema.constraints.DataColumnConstraintType \l0x000c: INVOKE  (r0 I:boolean) = \l  (r0 I:mil.nga.geopackage.schema.constraints.DataColumnConstraintType)\l  (r1 I:java.lang.Object)\l mil.nga.geopackage.schema.constraints.DataColumnConstraintType.equals(java.lang.Object):boolean type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|0x0010: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0013 \l}"];
Node_6 [shape=record,label="{6\:\ 0x0013|0x0013: NEW_INSTANCE  (r3 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0015: NEW_INSTANCE  (r0 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0017: INVOKE  (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x001a: CONST_STR  (r1 I:java.lang.String) =  \"The value must be null for \" \l0x001c: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001f: SGET  (r1 I:mil.nga.geopackage.schema.constraints.DataColumnConstraintType) =  mil.nga.geopackage.schema.constraints.DataColumnConstraintType.RANGE mil.nga.geopackage.schema.constraints.DataColumnConstraintType \l0x0021: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.Object) java.lang.StringBuilder.append(java.lang.Object):java.lang.StringBuilder type: VIRTUAL \l0x0024: CONST_STR  (r1 I:java.lang.String) =  \" constraints\" \l0x0026: INVOKE  (r0 I:java.lang.StringBuilder), (r1 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x0029: INVOKE  (r0 I:java.lang.String) = (r0 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x002d: INVOKE  \l  (r3 I:mil.nga.geopackage.GeoPackageException)\l  (r0 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0030|0x0030: THROW  (r3 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0031|0x0031: IPUT  \l  (r3 I:java.lang.String)\l  (r2 I:mil.nga.geopackage.schema.constraints.DataColumnConstraints)\l mil.nga.geopackage.schema.constraints.DataColumnConstraints.value java.lang.String \l}"];
Node_9 [shape=record,label="{9\:\ 0x0033|0x0033: RETURN   \l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.schema.constraints.DataColumnConstraints.setValue((r2 'this' I:mil.nga.geopackage.schema.constraints.DataColumnConstraints A[IMMUTABLE_TYPE, THIS]), (r3 I:java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_8[style=dashed];
Node_6 -> Node_7;
Node_8 -> Node_9;
}

