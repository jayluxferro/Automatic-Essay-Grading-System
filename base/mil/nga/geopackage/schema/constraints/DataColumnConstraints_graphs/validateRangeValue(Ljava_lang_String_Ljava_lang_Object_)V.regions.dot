digraph "CFG formil.nga.geopackage.schema.constraints.DataColumnConstraints.validateRangeValue(Ljava\/lang\/String;Ljava\/lang\/Object;)V" {
subgraph cluster_Region_305552512 {
label = "R(1:(1:(2:5|6)))";
node [shape=record,color=blue];
subgraph cluster_Region_344742753 {
label = "R(1:(2:5|6))";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1765473282 {
label = "IF [B:1:0x0002, B:2:0x0004, B:4:0x0010] THEN: R(2:5|6) ELSE: null";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r2.constraintType != null) goto L_0x0004\l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|ADDED_TO_REGION\l|if (r4 != null) goto L_0x0006\l}"];
Node_4 [shape=record,label="{4\:\ 0x0010|ADDED_TO_REGION\l|if (getConstraintType().equals(mil.nga.geopackage.schema.constraints.DataColumnConstraintType.RANGE) != true) goto L_0x0013\l}"];
subgraph cluster_Region_1391777150 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0013}"];
Node_6 [shape=record,label="{6\:\ 0x0042|throw new mil.nga.geopackage.GeoPackageException(\"The \" + r3 + \" must be null for \" + mil.nga.geopackage.schema.constraints.DataColumnConstraintType.ENUM + \" and \" + mil.nga.geopackage.schema.constraints.DataColumnConstraintType.GLOB + \" constraints\")\l}"];
}
}
}
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l}"];
Node_3 [shape=record,color=red,label="{3\:\ 0x0006}"];
Node_7 [shape=record,color=red,label="{7\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\lADDED_TO_REGION\l|return\l}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lRETURN\lADDED_TO_REGION\l|return\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{private void mil.nga.geopackage.schema.constraints.DataColumnConstraints.validateRangeValue((r2v0 'this' mil.nga.geopackage.schema.constraints.DataColumnConstraints A[IMMUTABLE_TYPE, THIS]), (r3v0 java.lang.String A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 java.lang.Object A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_1 -> Node_2;
Node_1 -> Node_7[style=dashed];
Node_2 -> Node_3;
Node_2 -> Node_8[style=dashed];
Node_4 -> Node_5;
Node_4 -> Node_9[style=dashed];
Node_5 -> Node_6;
Node_0 -> Node_1;
Node_3 -> Node_4;
}

