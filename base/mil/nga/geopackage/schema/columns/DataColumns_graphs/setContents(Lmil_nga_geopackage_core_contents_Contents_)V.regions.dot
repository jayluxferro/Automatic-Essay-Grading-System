digraph "CFG formil.nga.geopackage.schema.columns.DataColumns.setContents(Lmil\/nga\/geopackage\/core\/contents\/Contents;)V" {
subgraph cluster_Region_175591470 {
label = "R(2:0|(1:7)(1:(1:4)(2:5|6)))";
node [shape=record,color=blue];
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|r2.contents = r3\l}"];
subgraph cluster_IfRegion_1718486178 {
label = "IF [B:1:0x0002] THEN: R(1:7) ELSE: R(1:(1:4)(2:5|6))";
node [shape=record,color=blue];
Node_1 [shape=record,label="{1\:\ 0x0002|if (r3 == null) goto L_0x0041\l}"];
subgraph cluster_Region_1689866536 {
label = "R(1:7)";
node [shape=record,color=blue];
Node_7 [shape=record,label="{7\:\ 0x0041|r2.tableName = null\l}"];
}
subgraph cluster_Region_1622253833 {
label = "R(1:(1:4)(2:5|6)) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1358396177 {
label = "IF [B:3:0x0008] THEN: R(1:4) ELSE: R(2:5|6) | ELSE_IF_CHAIN\l";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|if (r3.getDataType() != null) goto L_0x000a\l}"];
subgraph cluster_Region_1185562297 {
label = "R(1:4)";
node [shape=record,color=blue];
Node_4 [shape=record,label="{4\:\ 0x000a|r2.tableName = r3.getId()\l}"];
}
subgraph cluster_Region_1756628821 {
label = "R(2:5|6)";
node [shape=record,color=blue];
Node_5 [shape=record,label="{5\:\ 0x0011}"];
Node_6 [shape=record,label="{6\:\ 0x0040|throw new mil.nga.geopackage.GeoPackageException(\"The \" + mil.nga.geopackage.core.contents.Contents.class.getSimpleName() + \" of a \" + mil.nga.geopackage.schema.columns.DataColumns.class.getSimpleName() + \" must have a data type\")\l}"];
}
}
}
}
}
Node_2 [shape=record,color=red,label="{2\:\ 0x0004}"];
Node_8 [shape=record,color=red,label="{8\:\ ?|SYNTHETIC\lORIG_RETURN\l}"];
Node_9 [shape=record,color=red,label="{9\:\ ?|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.schema.columns.DataColumns.setContents((r2v0 'this' mil.nga.geopackage.schema.columns.DataColumns A[IMMUTABLE_TYPE, THIS]), (r3v0 mil.nga.geopackage.core.contents.Contents A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_7;
Node_7 -> Node_8;
Node_3 -> Node_4;
Node_3 -> Node_5[style=dashed];
Node_4 -> Node_9;
Node_5 -> Node_6;
Node_2 -> Node_3;
}

