digraph "CFG formil.nga.geopackage.extension.RTreeIndexCoreExtension.createAllTriggers(Lmil\/nga\/geopackage\/features\/user\/FeatureTable;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r0 I:java.lang.String) = (r3 I:mil.nga.geopackage.features.user.FeatureTable) mil.nga.geopackage.features.user.FeatureTable.getTableName():java.lang.String type: VIRTUAL \l0x0004: INVOKE  (r1 I:mil.nga.geopackage.features.user.FeatureColumn) = (r3 I:mil.nga.geopackage.features.user.FeatureTable) mil.nga.geopackage.features.user.FeatureTable.getGeometryColumn():mil.nga.geopackage.features.user.FeatureColumn type: VIRTUAL \l0x0008: INVOKE  (r1 I:java.lang.String) = (r1 I:mil.nga.geopackage.features.user.FeatureColumn) mil.nga.geopackage.features.user.FeatureColumn.getName():java.lang.String type: VIRTUAL \l0x000c: INVOKE  (r3 I:mil.nga.geopackage.user.UserColumn) = (r3 I:mil.nga.geopackage.features.user.FeatureTable) mil.nga.geopackage.features.user.FeatureTable.getPkColumn():mil.nga.geopackage.user.UserColumn type: VIRTUAL \l0x0010: CHECK_CAST  (r3 I:mil.nga.geopackage.features.user.FeatureColumn) = (mil.nga.geopackage.features.user.FeatureColumn) (r3 I:?[OBJECT, ARRAY]) \l0x0012: INVOKE  (r3 I:java.lang.String) = (r3 I:mil.nga.geopackage.features.user.FeatureColumn) mil.nga.geopackage.features.user.FeatureColumn.getName():java.lang.String type: VIRTUAL \l0x0016: INVOKE  \l  (r2 I:mil.nga.geopackage.extension.RTreeIndexCoreExtension)\l  (r0 I:java.lang.String)\l  (r1 I:java.lang.String)\l  (r3 I:java.lang.String)\l mil.nga.geopackage.extension.RTreeIndexCoreExtension.createAllTriggers(java.lang.String, java.lang.String, java.lang.String):void type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0019|0x0019: RETURN   \l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.extension.RTreeIndexCoreExtension.createAllTriggers((r2 'this' I:mil.nga.geopackage.extension.RTreeIndexCoreExtension A[IMMUTABLE_TYPE, THIS]), (r3 I:mil.nga.geopackage.features.user.FeatureTable A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

