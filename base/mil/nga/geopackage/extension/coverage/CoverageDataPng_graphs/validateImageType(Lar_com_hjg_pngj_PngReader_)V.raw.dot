digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataPng.validateImageType(Lar\/com\/hjg\/pngj\/PngReader;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:8:0x0039 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IGET  (r0 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0004: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x0006: CONST  (r1 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0009|0x0009: IGET  (r0 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.imgInfo ar.com.hjg.pngj.ImageInfo \l0x000b: IGET  (r0 I:int) = (r0 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitDepth int \l0x000d: CONST  (r1 I:?[int, float, short, byte, char]) = (16 ?[int, float, short, byte, char]) \l}"];
Node_4 [shape=record,label="{4\:\ 0x000f|0x000f: IF  (r0 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:6:0x0012 \l}"];
Node_5 [shape=record,label="{5\:\ 0x0011|0x0011: RETURN   \l}"];
Node_6 [shape=record,label="{6\:\ 0x0012|0x0012: NEW_INSTANCE  (r0 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x0014: NEW_INSTANCE  (r1 I:java.lang.StringBuilder) =  java.lang.StringBuilder \l0x0016: INVOKE  (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.\<init\>():void type: DIRECT \l0x0019: CONST_STR  (r2 I:java.lang.String) =  \"The coverage data tile is expected to be a single channel 16 bit unsigned short, channels: \" \l0x001b: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x001e: IGET  (r2 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.imgInfo ar.com.hjg.pngj.ImageInfo \l0x0020: IGET  (r2 I:int) = (r2 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.channels int \l0x0022: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0025: CONST_STR  (r2 I:java.lang.String) =  \", bits: \" \l0x0027: INVOKE  (r1 I:java.lang.StringBuilder), (r2 I:java.lang.String) java.lang.StringBuilder.append(java.lang.String):java.lang.StringBuilder type: VIRTUAL \l0x002a: IGET  (r3 I:ar.com.hjg.pngj.ImageInfo) = (r3 I:ar.com.hjg.pngj.PngReader) ar.com.hjg.pngj.PngReader.imgInfo ar.com.hjg.pngj.ImageInfo \l0x002c: IGET  (r3 I:int) = (r3 I:ar.com.hjg.pngj.ImageInfo) ar.com.hjg.pngj.ImageInfo.bitDepth int \l0x002e: INVOKE  (r1 I:java.lang.StringBuilder), (r3 I:int) java.lang.StringBuilder.append(int):java.lang.StringBuilder type: VIRTUAL \l0x0031: INVOKE  (r3 I:java.lang.String) = (r1 I:java.lang.StringBuilder) java.lang.StringBuilder.toString():java.lang.String type: VIRTUAL \l0x0035: INVOKE  \l  (r0 I:mil.nga.geopackage.GeoPackageException)\l  (r3 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_7 [shape=record,label="{7\:\ 0x0038|0x0038: THROW  (r0 I:java.lang.Throwable) \l}"];
Node_8 [shape=record,label="{8\:\ 0x0039|0x0039: NEW_INSTANCE  (r3 I:mil.nga.geopackage.GeoPackageException) =  mil.nga.geopackage.GeoPackageException \l0x003b: CONST_STR  (r0 I:java.lang.String) =  \"The image is null\" \l0x003d: INVOKE  \l  (r3 I:mil.nga.geopackage.GeoPackageException)\l  (r0 I:java.lang.String)\l mil.nga.geopackage.GeoPackageException.\<init\>(java.lang.String):void type: DIRECT \l}"];
Node_9 [shape=record,label="{9\:\ 0x0040|0x0040: THROW  (r3 I:java.lang.Throwable) \l}"];
MethodNode[shape=record,label="{public static void mil.nga.geopackage.extension.coverage.CoverageDataPng.validateImageType((r3 I:ar.com.hjg.pngj.PngReader A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_8;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_4;
Node_4 -> Node_5[style=dashed];
Node_4 -> Node_6;
Node_6 -> Node_7;
Node_8 -> Node_9;
}

