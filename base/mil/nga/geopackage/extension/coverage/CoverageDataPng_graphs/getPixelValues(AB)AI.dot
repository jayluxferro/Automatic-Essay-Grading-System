digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataPng.getPixelValues([B)[I" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|ar.com.hjg.pngj.PngReaderInt r0 = new p004ar.com.hjg.pngj.PngReaderInt((java.io.InputStream) new java.io.ByteArrayInputStream(r7))\lvalidateImageType(r0)\lint[] r7 = new int[(r0.imgInfo.cols * r0.imgInfo.rows)]\lr2 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x001b|LOOP_START\lPHI: r2 \l  PHI: (r2v1 int) = (r2v0 int), (r2v2 int) binds: [B:0:0x0000, B:3:0x0021] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x001b\-\>B:3:0x0021\l}"];
Node_2 [shape=record,label="{2\:\ 0x001f|if (r0.hasMoreRows() == false) goto L_0x0036\l}"];
Node_3 [shape=record,label="{3\:\ 0x0021|LOOP_END\lLOOP:0: B:1:0x001b\-\>B:3:0x0021\l|int[] r3 = r0.readRowInt().getScanline()\ljava.lang.System.arraycopy(r3, 0, r7, r0.imgInfo.cols * r2, r3.length)\lint r2 = r2 + 1\l}"];
Node_4 [shape=record,label="{4\:\ 0x0036|r0.close()\l}"];
Node_5 [shape=record,label="{5\:\ 0x0039|RETURN\l|return r7\l}"];
Node_6 [shape=record,label="{6\:\ 0x0036|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public int[] mil.nga.geopackage.extension.coverage.CoverageDataPng.getPixelValues((r6v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataPng A[IMMUTABLE_TYPE, THIS]), (r7v0 byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_6;
Node_3 -> Node_1;
Node_4 -> Node_5;
Node_6 -> Node_4;
}

