digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataPng.drawTile([III)Lmil\/nga\/geopackage\/extension\/coverage\/CoverageDataPngImage;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|mil.nga.geopackage.extension.coverage.CoverageDataPngImage r0 = createImage(r10, r11)\lar.com.hjg.pngj.PngWriter r1 = r0.getWriter()\lr3 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x000a|LOOP_START\lPHI: r3 \l  PHI: (r3v1 int) = (r3v0 int), (r3v2 int) binds: [B:0:0x0000, B:5:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x000a\-\>B:5:0x0027\l|if (r3 \>= r11) goto L_0x002d\l}"];
Node_2 [shape=record,label="{2\:\ 0x000c|ar.com.hjg.pngj.ImageLineInt r4 = new p004ar.com.hjg.pngj.ImageLineInt(r1.imgInfo, new int[r10])\lint[] r5 = r4.getScanline()\lr6 = 0\l}"];
Node_3 [shape=record,label="{3\:\ 0x001a|LOOP_START\lPHI: r6 \l  PHI: (r6v2 int) = (r6v1 int), (r6v3 int) binds: [B:2:0x000c, B:4:0x001c] A[DONT_GENERATE, DONT_INLINE]\lLOOP:1: B:3:0x001a\-\>B:4:0x001c\l|if (r6 \>= r10) goto L_0x0027\l}"];
Node_4 [shape=record,label="{4\:\ 0x001c|LOOP_END\lLOOP:1: B:3:0x001a\-\>B:4:0x001c\l|setPixelValue(r5, r6, r9[(r3 * r10) + r6])\lint r6 = r6 + 1\l}"];
Node_5 [shape=record,label="{5\:\ 0x0027|LOOP_END\lLOOP:0: B:1:0x000a\-\>B:5:0x0027\l|r1.writeRow(r4)\lint r3 = r3 + 1\l}"];
Node_6 [shape=record,label="{6\:\ 0x002d|r1.end()\lr0.flushStream()\l}"];
Node_7 [shape=record,label="{7\:\ 0x0033|RETURN\l|return r0\l}"];
Node_8 [shape=record,label="{8\:\ 0x002d|SYNTHETIC\l}"];
Node_9 [shape=record,label="{9\:\ 0x0027|SYNTHETIC\l}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.extension.coverage.CoverageDataPngImage mil.nga.geopackage.extension.coverage.CoverageDataPng.drawTile((r8v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataPng A[IMMUTABLE_TYPE, THIS]), (r9v0 int[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11v0 int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_8;
Node_2 -> Node_3;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_9;
Node_4 -> Node_3;
Node_5 -> Node_1;
Node_6 -> Node_7;
Node_8 -> Node_6;
Node_9 -> Node_5;
}

