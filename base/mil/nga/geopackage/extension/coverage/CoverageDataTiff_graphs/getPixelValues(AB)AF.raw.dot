digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataTiff.getPixelValues([B)[F" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r7 I:mil.nga.tiff.TIFFImage) = (r7 I:byte[]) mil.nga.tiff.TiffReader.readTiff(byte[]):mil.nga.tiff.TIFFImage type: STATIC \l0x0004: INVOKE  (r7 I:mil.nga.tiff.FileDirectory) = (r7 I:mil.nga.tiff.TIFFImage) mil.nga.tiff.TIFFImage.getFileDirectory():mil.nga.tiff.FileDirectory type: VIRTUAL \l0x0008: INVOKE  (r7 I:mil.nga.tiff.FileDirectory) mil.nga.geopackage.extension.coverage.CoverageDataTiff.validateImageType(mil.nga.tiff.FileDirectory):void type: STATIC \l0x000b: INVOKE  (r7 I:mil.nga.tiff.Rasters) = (r7 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.readRasters():mil.nga.tiff.Rasters type: VIRTUAL \l0x000f: INVOKE  (r0 I:int) = (r7 I:mil.nga.tiff.Rasters) mil.nga.tiff.Rasters.getWidth():int type: VIRTUAL \l0x0013: INVOKE  (r1 I:int) = (r7 I:mil.nga.tiff.Rasters) mil.nga.tiff.Rasters.getHeight():int type: VIRTUAL \l0x0017: ARITH  (r0 I:int) = (r0 I:int) * (r1 I:int) \l0x0019: NEW_ARRAY  (r0 I:float[]) = (r0 I:int A[IMMUTABLE_TYPE]) type: float[] \l0x001b: CONST  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x001c: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x001d|0x001d: INVOKE  (r3 I:int) = (r7 I:mil.nga.tiff.Rasters) mil.nga.tiff.Rasters.getHeight():int type: VIRTUAL \l}"];
Node_2 [shape=record,label="{2\:\ 0x0021|0x0021: IF  (r2 I:?[int, byte, short, char]) \>= (r3 I:?[int, byte, short, char])  \-\> B:8:0x003e \l}"];
Node_3 [shape=record,label="{3\:\ 0x0023|0x0023: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0024|0x0024: INVOKE  (r4 I:int) = (r7 I:mil.nga.tiff.Rasters) mil.nga.tiff.Rasters.getWidth():int type: VIRTUAL \l}"];
Node_5 [shape=record,label="{5\:\ 0x0028|0x0028: IF  (r3 I:?[int, byte, short, char]) \>= (r4 I:?[int, byte, short, char])  \-\> B:7:0x003b \l}"];
Node_6 [shape=record,label="{6\:\ 0x002a|0x002a: INVOKE  (r4 I:int) = (r7 I:mil.nga.tiff.Rasters), (r3 I:int), (r2 I:int) mil.nga.tiff.Rasters.getSampleIndex(int, int):int type: VIRTUAL \l0x002e: INVOKE  (r5 I:java.lang.Number) = \l  (r7 I:mil.nga.tiff.Rasters)\l  (r1 I:int)\l  (r3 I:int)\l  (r2 I:int)\l mil.nga.tiff.Rasters.getPixelSample(int, int, int):java.lang.Number type: VIRTUAL \l0x0032: INVOKE  (r5 I:float) = (r5 I:java.lang.Number) java.lang.Number.floatValue():float type: VIRTUAL \l0x0036: APUT  \l  (r0 I:?[int, float][])\l  (r4 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x0038: ARITH  (r3 I:int) = (r3 I:int) + (1 int) \l}"];
Node_7 [shape=record,label="{7\:\ 0x003b|0x003b: ARITH  (r2 I:int) = (r2 I:int) + (1 int) \l}"];
Node_8 [shape=record,label="{8\:\ 0x003e|0x003e: RETURN  (r0 I:float[]) \l}"];
MethodNode[shape=record,label="{public float[] mil.nga.geopackage.extension.coverage.CoverageDataTiff.getPixelValues((r6 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataTiff A[IMMUTABLE_TYPE, THIS]), (r7 I:byte[] A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_8;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_4;
Node_7 -> Node_1;
}

