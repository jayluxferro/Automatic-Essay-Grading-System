digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataTiffImage.\<init\>(Lmil\/nga\/tiff\/FileDirectory;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  (r1 I:java.lang.Object) java.lang.Object.\<init\>():void type: DIRECT \l0x0003: IPUT  \l  (r2 I:mil.nga.tiff.FileDirectory)\l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataTiffImage)\l mil.nga.geopackage.extension.coverage.CoverageDataTiffImage.directory mil.nga.tiff.FileDirectory \l0x0005: INVOKE  (r0 I:mil.nga.tiff.Rasters) = (r2 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getWriteRasters():mil.nga.tiff.Rasters type: VIRTUAL \l0x0009: IPUT  \l  (r0 I:mil.nga.tiff.Rasters)\l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataTiffImage)\l mil.nga.geopackage.extension.coverage.CoverageDataTiffImage.rasters mil.nga.tiff.Rasters \l0x000b: INVOKE  (r0 I:java.lang.Number) = (r2 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getImageWidth():java.lang.Number type: VIRTUAL \l0x000f: INVOKE  (r0 I:int) = (r0 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x0013: IPUT  \l  (r0 I:int)\l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataTiffImage)\l mil.nga.geopackage.extension.coverage.CoverageDataTiffImage.width int \l0x0015: INVOKE  (r2 I:java.lang.Number) = (r2 I:mil.nga.tiff.FileDirectory) mil.nga.tiff.FileDirectory.getImageHeight():java.lang.Number type: VIRTUAL \l0x0019: INVOKE  (r2 I:int) = (r2 I:java.lang.Number) java.lang.Number.intValue():int type: VIRTUAL \l0x001d: IPUT  \l  (r2 I:int)\l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataTiffImage)\l mil.nga.geopackage.extension.coverage.CoverageDataTiffImage.height int \l}"];
Node_1 [shape=record,label="{1\:\ 0x001f|0x001f: RETURN   \l}"];
MethodNode[shape=record,label="{public void mil.nga.geopackage.extension.coverage.CoverageDataTiffImage.\<init\>((r1 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataTiffImage A[IMMUTABLE_TYPE, THIS]), (r2 I:mil.nga.tiff.FileDirectory A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

