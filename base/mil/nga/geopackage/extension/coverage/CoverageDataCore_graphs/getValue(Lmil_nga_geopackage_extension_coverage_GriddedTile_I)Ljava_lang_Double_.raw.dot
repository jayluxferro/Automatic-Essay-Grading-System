digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getValue(Lmil\/nga\/geopackage\/extension\/coverage\/GriddedTile;I)Ljava\/lang\/Double;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CAST  (r0 I:double) = (double) (r4 I:int) \l0x0001: INVOKE  (r4 I:boolean) = \l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r0 I:double)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.isDataNull(double):boolean type: VIRTUAL \l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|0x0005: IF  (r4 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0011 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0007|0x0007: NEW_INSTANCE  (r4 I:java.lang.Double) =  java.lang.Double \l0x0009: INVOKE  (r4 I:java.lang.Double), (r0 I:double) java.lang.Double.\<init\>(double):void type: DIRECT \l0x000c: INVOKE  (r3 I:java.lang.Double) = \l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r3 I:mil.nga.geopackage.extension.coverage.GriddedTile)\l  (r4 I:java.lang.Double)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.pixelValueToValue(mil.nga.geopackage.extension.coverage.GriddedTile, java.lang.Double):java.lang.Double type: DIRECT \l}"];
Node_3 [shape=record,label="{3\:\ 0x0011|0x0011: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: RETURN  (r3 I:java.lang.Double) \l}"];
MethodNode[shape=record,label="{public java.lang.Double mil.nga.geopackage.extension.coverage.CoverageDataCore.getValue((r2 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r3 I:mil.nga.geopackage.extension.coverage.GriddedTile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

