digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getNearestNeighbors(FF)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.util.ArrayList r0 = new java.util.ArrayList()\lmil.nga.geopackage.extension.coverage.CoverageDataSourcePixel r12 = getXSourceMinAndMax(r12)\lmil.nga.geopackage.extension.coverage.CoverageDataSourcePixel r13 = getYSourceMinAndMax(r13)\l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|if ((((double) r12.getOffset()) \> 0.5d ? 1 : (((double) r12.getOffset()) == 0.5d ? 0 : \-1)) \<= 0) goto L_0x0029\l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|int r1 = r12.getMax()\lint r2 = r12.getMin()\lfloat r6 = 1.0f \- r12.getOffset()\l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|int r1 = r12.getMin()\lint r2 = r12.getMax()\lfloat r6 = r12.getOffset()\l}"];
Node_4 [shape=record,label="{4\:\ 0x0035|PHI: r1 r2 r6 \l  PHI: (r1v3 int) = (r1v19 int), (r1v20 int) binds: [B:3:0x0029, B:2:0x001a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r2v0 int) = (r2v2 int), (r2v3 int) binds: [B:3:0x0029, B:2:0x001a] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r6v0 float) = (r6v1 float), (r6v3 float) binds: [B:3:0x0029, B:2:0x001a] A[DONT_GENERATE, DONT_INLINE]\l}"];
Node_5 [shape=record,label="{5\:\ 0x003c|if ((((double) r13.getOffset()) \> 0.5d ? 1 : (((double) r13.getOffset()) == 0.5d ? 0 : \-1)) \<= 0) goto L_0x004c\l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|int r4 = r13.getMax()\lint r5 = r13.getMin()\lfloat r3 = 1.0f \- r13.getOffset()\l}"];
Node_7 [shape=record,label="{7\:\ 0x004c|int r4 = r13.getMin()\lint r5 = r13.getMax()\lfloat r3 = r13.getOffset()\l}"];
Node_8 [shape=record,label="{8\:\ 0x0058|PHI: r3 r4 r5 \l  PHI: (r3v1 float) = (r3v18 float), (r3v19 float) binds: [B:7:0x004c, B:6:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r4v2 int) = (r4v3 int), (r4v4 int) binds: [B:7:0x004c, B:6:0x003e] A[DONT_GENERATE, DONT_INLINE]\l  PHI: (r5v0 int) = (r5v1 int), (r5v2 int) binds: [B:7:0x004c, B:6:0x003e] A[DONT_GENERATE, DONT_INLINE]\l|int[] r8 = new int[]\{r1, r4\}\lr0.add(r8)\l}"];
Node_9 [shape=record,label="{9\:\ 0x0066|if ((r6 \> r3 ? 1 : (r6 == r3 ? 0 : \-1)) \> 0) goto L_0x007b\l}"];
Node_10 [shape=record,label="{10\:\ 0x0068|int[] r3 = new int[]\{r2, r4\}\lr0.add(r3)\lint[] r3 = new int[]\{r1, r5\}\lr0.add(r3)\l}"];
Node_11 [shape=record,label="{11\:\ 0x007b|int[] r3 = new int[]\{r1, r5\}\lr0.add(r3)\lint[] r1 = new int[]\{r2, r4\}\lr0.add(r1)\l}"];
Node_12 [shape=record,label="{12\:\ 0x008d|int[] r1 = new int[]\{r2, r5\}\lr0.add(r1)\l}"];
Node_13 [shape=record,label="{13\:\ 0x009d|if ((r12.getOffset() \> 0.0f ? 1 : (r12.getOffset() == 0.0f ? 0 : \-1)) != 0) goto L_0x00c3\l}"];
Node_14 [shape=record,label="{14\:\ 0x009f|int[] r1 = new int[]\{r12.getMin() \- 1, r13.getMin()\}\lr0.add(r1)\lint[] r1 = new int[]\{r12.getMin() \- 1, r13.getMax()\}\lr0.add(r1)\l}"];
Node_15 [shape=record,label="{15\:\ 0x00c3}"];
Node_16 [shape=record,label="{16\:\ 0x00c9|if ((r13.getOffset() \> 0.0f ? 1 : (r13.getOffset() == 0.0f ? 0 : \-1)) != 0) goto L_0x00ef\l}"];
Node_17 [shape=record,label="{17\:\ 0x00cb|int[] r1 = new int[]\{r12.getMin(), r13.getMin() \- 1\}\lr0.add(r1)\lint[] r1 = new int[]\{r12.getMax(), r13.getMin() \- 1\}\lr0.add(r1)\l}"];
Node_18 [shape=record,label="{18\:\ 0x00ef}"];
Node_19 [shape=record,label="{19\:\ 0x00f5|if ((r12.getOffset() \> 0.0f ? 1 : (r12.getOffset() == 0.0f ? 0 : \-1)) != 0) goto L_0x0112\l}"];
Node_20 [shape=record,label="{20\:\ 0x00f7}"];
Node_21 [shape=record,label="{21\:\ 0x00fd|if ((r13.getOffset() \> 0.0f ? 1 : (r13.getOffset() == 0.0f ? 0 : \-1)) != 0) goto L_0x0112\l}"];
Node_22 [shape=record,label="{22\:\ 0x00ff|int[] r1 = new int[]\{r12.getMin() \- 1, r13.getMin() \- 1\}\lr0.add(r1)\l}"];
Node_23 [shape=record,label="{23\:\ 0x0112|RETURN\l|return r0\l}"];
MethodNode[shape=record,label="{protected java.util.List\<int[]\> mil.nga.geopackage.extension.coverage.CoverageDataCore.getNearestNeighbors((r11v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r12v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(FF), Ljava\/util\/List\<, [I\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
}

