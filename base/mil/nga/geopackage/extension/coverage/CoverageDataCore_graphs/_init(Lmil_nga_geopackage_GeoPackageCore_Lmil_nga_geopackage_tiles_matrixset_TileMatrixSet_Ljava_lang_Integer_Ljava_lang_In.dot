digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.\<init\>(Lmil\/nga\/geopackage\/GeoPackageCore;Lmil\/nga\/geopackage\/tiles\/matrixset\/TileMatrixSet;Ljava\/lang\/Integer;Ljava\/lang\/Integer;Lmil\/nga\/geopackage\/projection\/Projection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|super(r3)\lr2.zoomIn = true\lr2.zoomOut = true\lr2.zoomInBeforeOut = true\lr2.algorithm = mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm.NEAREST_NEIGHBOR\lr2.encoding = mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType.CENTER\lr2.tileMatrixSet = r4\lr2.griddedCoverageDao = r3.getGriddedCoverageDao()\lr2.griddedTileDao = r3.getGriddedTileDao()\lqueryGriddedCoverage()\lr2.width = r5\lr2.height = r6\lr2.requestProjection = r7\lr2.coverageProjection = mil.nga.geopackage.projection.ProjectionFactory.getProjection(r4.getSrs())\lr2.coverageBoundingBox = r4.getBoundingBox()\l}"];
Node_1 [shape=record,label="{1\:\ 0x0039|if (r7 == null) goto L_0x0050\l}"];
Node_2 [shape=record,label="{2\:\ 0x003b|r2.sameProjection = r7.getUnit().name.equals(r2.coverageProjection.getUnit().name)\l}"];
Node_3 [shape=record,label="{3\:\ 0x0050|r2.sameProjection = true\l}"];
Node_4 [shape=record,label="{4\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return\l}"];
Node_5 [shape=record,label="{5\:\ ?|SYNTHETIC\lRETURN\l|return\l}"];
MethodNode[shape=record,label="{protected void mil.nga.geopackage.extension.coverage.CoverageDataCore.\<init\>((r2v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r3v0 mil.nga.geopackage.GeoPackageCore A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4v0 mil.nga.geopackage.tiles.matrixset.TileMatrixSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5v0 java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6v0 java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7v0 mil.nga.geopackage.projection.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_5;
Node_3 -> Node_4;
}

