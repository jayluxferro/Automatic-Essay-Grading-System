digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.queryGriddedCoverage()Lmil\/nga\/geopackage\/extension\/coverage\/GriddedCoverage;" {
subgraph cluster_Region_1318333557 {
label = "R(1:(2:(1:3)|5))";
node [shape=record,color=blue];
subgraph cluster_TryCatchRegion_2145794433 {
label = "Try: R(2:(1:3)|5) catches: R(3:6|7|8)";
node [shape=record,color=blue];
subgraph cluster_Region_647104452 {
label = "R(2:(1:3)|5)";
node [shape=record,color=blue];
subgraph cluster_IfRegion_1818369708 {
label = "IF [B:2:0x0006] THEN: R(1:3) ELSE: null";
node [shape=record,color=blue];
Node_2 [shape=record,label="{2\:\ 0x0006|Catch:\{ SQLException \-\> 0x0015 \}\l|if (r4.griddedCoverageDao.isTableExists() == true) goto L_0x0008     \/\/ Catch:\{ SQLException \-\> 0x0015 \}\l}"];
subgraph cluster_Region_58351825 {
label = "R(1:3)";
node [shape=record,color=blue];
Node_3 [shape=record,label="{3\:\ 0x0008|Catch:\{ SQLException \-\> 0x0015 \}\l|r4.griddedCoverage = r4.griddedCoverageDao.query(r4.tileMatrixSet)     \/\/ Catch:\{ SQLException \-\> 0x0015 \}\l}"];
}
}
Node_5 [shape=record,label="{5\:\ 0x0014|RETURN\l|return r4.griddedCoverage\l}"];
}
subgraph cluster_Region_1293839118 {
label = "R(3:6|7|8) | ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016}"];
Node_8 [shape=record,label="{8\:\ 0x0032|throw new mil.nga.geopackage.GeoPackageException(\"Failed to get Gridded Coverage for table name: \" + r4.tileMatrixSet.getTableName(), r0)\l}"];
}
}
}
subgraph cluster_Region_1293839118 {
label = "R(3:6|7|8) | ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\l";
node [shape=record,color=blue];
Node_6 [shape=record,label="{6\:\ 0x0015|ExcHandler: SQLException (r0v0 'e' java.sql.SQLException A[CUSTOM_DECLARE])\lSplitter:B:0:0x0000\l}"];
Node_7 [shape=record,label="{7\:\ 0x0016}"];
Node_8 [shape=record,label="{8\:\ 0x0032|throw new mil.nga.geopackage.GeoPackageException(\"Failed to get Gridded Coverage for table name: \" + r4.tileMatrixSet.getTableName(), r0)\l}"];
}
Node_0 [shape=record,color=red,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\lSYNTHETIC\lSplitter:B:0:0x0000\l}"];
Node_1 [shape=record,color=red,label="{1\:\ ?|Catch:\{ SQLException \-\> 0x0015 \}\lSplitter:B:0:0x0000\l}"];
Node_4 [shape=record,color=red,label="{4\:\ 0x0012}"];
MethodNode[shape=record,label="{public mil.nga.geopackage.extension.coverage.GriddedCoverage mil.nga.geopackage.extension.coverage.CoverageDataCore.queryGriddedCoverage((r4v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS])) }"];
MethodNode -> Node_0;
Node_2 -> Node_3;
Node_2 -> Node_4[style=dashed];
Node_3 -> Node_4;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_6 -> Node_7;
Node_7 -> Node_8;
Node_0 -> Node_1;
Node_0 -> Node_6;
Node_1 -> Node_2;
Node_4 -> Node_5;
}

