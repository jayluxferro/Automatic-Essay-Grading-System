digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getNearestNeighbors(FF)Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x0002: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x0005: INVOKE  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel) = \l  (r11 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r12 I:float)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getXSourceMinAndMax(float):mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel type: VIRTUAL \l0x0009: INVOKE  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel) = \l  (r11 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r13 I:float)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getYSourceMinAndMax(float):mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel type: VIRTUAL \l0x000d: INVOKE  (r1 I:float) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getOffset():float type: VIRTUAL \l0x0011: CAST  (r1 I:double) = (double) (r1 I:float) \l0x0012: CONST  (r3 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0014: CONST  (r4 I:?[long, double]) = \l  (4602678819172646912(0x3fe0000000000000, double:0.5) ?[long, double])\l \l0x0016: CMP_L  (r1 I:int) = (r1 I:double), (r4 I:double) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0018|0x0018: IF  (r1 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:3:0x0029 \l}"];
Node_2 [shape=record,label="{2\:\ 0x001a|0x001a: INVOKE  (r1 I:int) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMax():int type: VIRTUAL \l0x001e: INVOKE  (r2 I:int) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x0022: INVOKE  (r6 I:float) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getOffset():float type: VIRTUAL \l0x0026: ARITH  (r6 I:float) = (r3 I:float) \- (r6 I:float) \l}"];
Node_3 [shape=record,label="{3\:\ 0x0029|0x0029: INVOKE  (r1 I:int) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x002d: INVOKE  (r2 I:int) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMax():int type: VIRTUAL \l0x0031: INVOKE  (r6 I:float) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getOffset():float type: VIRTUAL \l}"];
Node_4 [shape=record,label="{4\:\ 0x0035|0x0035: INVOKE  (r7 I:float) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getOffset():float type: VIRTUAL \l0x0039: CAST  (r7 I:double) = (double) (r7 I:float) \l0x003a: CMP_L  (r4 I:int) = (r7 I:double), (r4 I:double) \l}"];
Node_5 [shape=record,label="{5\:\ 0x003c|0x003c: IF  (r4 I:?[int, byte, short, char]) \<= (0 ?[int, byte, short, char])  \-\> B:7:0x004c \l}"];
Node_6 [shape=record,label="{6\:\ 0x003e|0x003e: INVOKE  (r4 I:int) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMax():int type: VIRTUAL \l0x0042: INVOKE  (r5 I:int) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x0046: INVOKE  (r7 I:float) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getOffset():float type: VIRTUAL \l0x004a: ARITH  (r3 I:float) = (r3 I:float) \- (r7 I:float) \l}"];
Node_7 [shape=record,label="{7\:\ 0x004c|0x004c: INVOKE  (r4 I:int) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x0050: INVOKE  (r5 I:int) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMax():int type: VIRTUAL \l0x0054: INVOKE  (r3 I:float) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getOffset():float type: VIRTUAL \l}"];
Node_8 [shape=record,label="{8\:\ 0x0058|0x0058: CONST  (r7 I:?[int, float, short, byte, char]) = (2 ?[int, float, short, byte, char]) \l0x0059: NEW_ARRAY  (r8 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x005b: CONST  (r9 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x005c: APUT  \l  (r8 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r1 I:?[int, float])\l \l0x005e: CONST  (r10 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x005f: APUT  \l  (r8 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x0061: INVOKE  (r0 I:java.util.List), (r8 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0064: CMP_G  (r3 I:int) = (r6 I:float), (r3 I:float) \l}"];
Node_9 [shape=record,label="{9\:\ 0x0066|0x0066: IF  (r3 I:?[int, byte, short, char]) \> (0 ?[int, byte, short, char])  \-\> B:11:0x007b \l}"];
Node_10 [shape=record,label="{10\:\ 0x0068|0x0068: NEW_ARRAY  (r3 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x006a: APUT  \l  (r3 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x006c: APUT  \l  (r3 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x006e: INVOKE  (r0 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0071: NEW_ARRAY  (r3 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0073: APUT  \l  (r3 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r1 I:?[int, float])\l \l0x0075: APUT  \l  (r3 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x0077: INVOKE  (r0 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_11 [shape=record,label="{11\:\ 0x007b|0x007b: NEW_ARRAY  (r3 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x007d: APUT  \l  (r3 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r1 I:?[int, float])\l \l0x007f: APUT  \l  (r3 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x0081: INVOKE  (r0 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0084: NEW_ARRAY  (r1 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0086: APUT  \l  (r1 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0088: APUT  \l  (r1 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r4 I:?[int, float])\l \l0x008a: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_12 [shape=record,label="{12\:\ 0x008d|0x008d: NEW_ARRAY  (r1 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x008f: APUT  \l  (r1 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r2 I:?[int, float])\l \l0x0091: APUT  \l  (r1 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r5 I:?[int, float])\l \l0x0093: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0096: INVOKE  (r1 I:float) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getOffset():float type: VIRTUAL \l0x009a: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x009b: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_13 [shape=record,label="{13\:\ 0x009d|0x009d: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:15:0x00c3 \l}"];
Node_14 [shape=record,label="{14\:\ 0x009f|0x009f: NEW_ARRAY  (r1 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x00a1: INVOKE  (r3 I:int) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x00a5: ARITH  (r3 I:int) = (r3 I:int) \- (r10 I:int) \l0x00a6: APUT  \l  (r1 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x00a8: INVOKE  (r3 I:int) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x00ac: APUT  \l  (r1 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x00ae: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x00b1: NEW_ARRAY  (r1 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x00b3: INVOKE  (r3 I:int) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x00b7: ARITH  (r3 I:int) = (r3 I:int) \- (r10 I:int) \l0x00b8: APUT  \l  (r1 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x00ba: INVOKE  (r3 I:int) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMax():int type: VIRTUAL \l0x00be: APUT  \l  (r1 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x00c0: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_15 [shape=record,label="{15\:\ 0x00c3|0x00c3: INVOKE  (r1 I:float) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getOffset():float type: VIRTUAL \l0x00c7: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_16 [shape=record,label="{16\:\ 0x00c9|0x00c9: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:18:0x00ef \l}"];
Node_17 [shape=record,label="{17\:\ 0x00cb|0x00cb: NEW_ARRAY  (r1 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x00cd: INVOKE  (r3 I:int) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x00d1: APUT  \l  (r1 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x00d3: INVOKE  (r3 I:int) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x00d7: ARITH  (r3 I:int) = (r3 I:int) \- (r10 I:int) \l0x00d8: APUT  \l  (r1 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x00da: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x00dd: NEW_ARRAY  (r1 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x00df: INVOKE  (r3 I:int) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMax():int type: VIRTUAL \l0x00e3: APUT  \l  (r1 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x00e5: INVOKE  (r3 I:int) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x00e9: ARITH  (r3 I:int) = (r3 I:int) \- (r10 I:int) \l0x00ea: APUT  \l  (r1 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r3 I:?[int, float])\l \l0x00ec: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_18 [shape=record,label="{18\:\ 0x00ef|0x00ef: INVOKE  (r1 I:float) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getOffset():float type: VIRTUAL \l0x00f3: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_19 [shape=record,label="{19\:\ 0x00f5|0x00f5: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0112 \l}"];
Node_20 [shape=record,label="{20\:\ 0x00f7|0x00f7: INVOKE  (r1 I:float) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getOffset():float type: VIRTUAL \l0x00fb: CMP_L  (r1 I:int) = (r1 I:float), (r2 I:float) \l}"];
Node_21 [shape=record,label="{21\:\ 0x00fd|0x00fd: IF  (r1 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) != (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:23:0x0112 \l}"];
Node_22 [shape=record,label="{22\:\ 0x00ff|0x00ff: NEW_ARRAY  (r1 I:int[]) = (r7 I:int A[IMMUTABLE_TYPE]) type: int[] \l0x0101: INVOKE  (r12 I:int) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x0105: ARITH  (r12 I:int) = (r12 I:int) \- (r10 I:int) \l0x0106: APUT  \l  (r1 I:?[int, float][])\l  (r9 I:?[int, short, byte, char])\l  (r12 I:?[int, float])\l \l0x0108: INVOKE  (r12 I:int) = \l  (r13 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.getMin():int type: VIRTUAL \l0x010c: ARITH  (r12 I:int) = (r12 I:int) \- (r10 I:int) \l0x010d: APUT  \l  (r1 I:?[int, float][])\l  (r10 I:?[int, short, byte, char])\l  (r12 I:?[int, float])\l \l0x010f: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_23 [shape=record,label="{23\:\ 0x0112|0x0112: RETURN  (r0 I:java.util.List\<int[]\>) \l}"];
MethodNode[shape=record,label="{protected java.util.List\<int[]\> mil.nga.geopackage.extension.coverage.CoverageDataCore.getNearestNeighbors((r11 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r12 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(FF), Ljava\/util\/List\<, [I\>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
Node_5 -> Node_6[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_8;
Node_7 -> Node_8;
Node_8 -> Node_9;
Node_9 -> Node_10[style=dashed];
Node_9 -> Node_11;
Node_10 -> Node_12;
Node_11 -> Node_12;
Node_12 -> Node_13;
Node_13 -> Node_14[style=dashed];
Node_13 -> Node_15;
Node_14 -> Node_15;
Node_15 -> Node_16;
Node_16 -> Node_17[style=dashed];
Node_16 -> Node_18;
Node_17 -> Node_18;
Node_18 -> Node_19;
Node_19 -> Node_20[style=dashed];
Node_19 -> Node_23;
Node_20 -> Node_21;
Node_21 -> Node_22[style=dashed];
Node_21 -> Node_23;
Node_22 -> Node_23;
}

