digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getSourceMinAndMax(FIF)Lmil\/nga\/geopackage\/extension\/coverage\/CoverageDataSourcePixel;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: CMP_G  (r0 I:int) = (r4 I:float), (r6 I:float) \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r0 I:?[int, byte, short, char]) \>= (0 ?[int, byte, short, char])  \-\> B:3:0x000e \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: ARITH  (r0 I:int) = (r5 I:int) + (\-1 int) \l0x0006: CONST  (r1 I:?[int, float, short, byte, char]) = \l  (1065353216(0x3f800000, float:1.0) ?[int, float, short, byte, char])\l \l0x0008: ARITH  (r6 I:float) = (r6 I:float) \- (r4 I:float) \l0x0009: ARITH  (r1 I:float) = (r1 I:float) \- (r6 I:float) \l0x000a: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000b: MOVE  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_3 [shape=record,label="{3\:\ 0x000e|0x000e: ARITH  (r0 I:int) = (r5 I:int) + (1 int) \l0x0010: ARITH  (r1 I:float) = (r4 I:float) \- (r6 I:float) \l}"];
Node_4 [shape=record,label="{4\:\ 0x0012|0x0012: NEW_INSTANCE  (r6 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel) =  mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel \l0x0014: INVOKE  \l  (r6 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l  (r4 I:float)\l  (r5 I:int)\l  (r0 I:int)\l  (r1 I:float)\l mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel.\<init\>(float, int, int, float):void type: DIRECT \l}"];
Node_5 [shape=record,label="{5\:\ 0x0017|0x0017: RETURN  \l  (r6 I:mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel)\l \l}"];
MethodNode[shape=record,label="{private mil.nga.geopackage.extension.coverage.CoverageDataSourcePixel mil.nga.geopackage.extension.coverage.CoverageDataCore.getSourceMinAndMax((r3 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r4 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
Node_4 -> Node_5;
}

