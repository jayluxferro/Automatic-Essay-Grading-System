digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getCubicInterpolationValue(Ljava\/lang\/Double;Ljava\/lang\/Double;Ljava\/lang\/Double;Ljava\/lang\/Double;D)Ljava\/lang\/Double;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IF  (r18 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0065 \l}"];
Node_1 [shape=record,label="{1\:\ 0x0002|0x0002: IF  (r19 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0065 \l}"];
Node_2 [shape=record,label="{2\:\ 0x0004|0x0004: IF  (r20 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0065 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0006|0x0006: IF  (r21 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0065 \l}"];
Node_4 [shape=record,label="{4\:\ 0x0008|0x0008: INVOKE  (r3 I:double) = (r19 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x000c: CONST  (r5 I:?[long, double]) = \l  (4611686018427387904(0x4000000000000000, double:2.0) ?[long, double])\l \l0x000e: ARITH  (r3 I:double) = (r3 I:double) * (r5 I:double) \l0x0010: INVOKE  (r7 I:double) = (r20 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0014: INVOKE  (r9 I:double) = (r18 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0018: ARITH  (r7 I:double) = (r7 I:double) \- (r9 I:double) \l0x0019: INVOKE  (r9 I:double) = (r18 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x001d: ARITH  (r9 I:double) = (r9 I:double) * (r5 I:double) \l0x001f: CONST  (r11 I:?[long, double]) = \l  (4617315517961601024(0x4014000000000000, double:5.0) ?[long, double])\l \l0x0021: INVOKE  (r13 I:double) = (r19 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0025: ARITH  (r13 I:double) = (r13 I:double) * (r11 I:double) \l0x0027: ARITH  (r9 I:double) = (r9 I:double) \- (r13 I:double) \l0x0028: CONST  (r11 I:?[long, double]) = \l  (4616189618054758400(0x4010000000000000, double:4.0) ?[long, double])\l \l0x002a: INVOKE  (r13 I:double) = (r20 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x002e: ARITH  (r13 I:double) = (r13 I:double) * (r11 I:double) \l0x0030: ARITH  (r9 I:double) = (r9 I:double) + (r13 I:double) \l0x0031: INVOKE  (r11 I:double) = (r21 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0035: ARITH  (r9 I:double) = (r9 I:double) \- (r11 I:double) \l0x0036: INVOKE  (r11 I:double) = (r18 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x003a: NEG  (r11 I:double) = (r11 I:double) \l0x003b: INVOKE  (r13 I:double) = (r19 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x003f: CONST  (r15 I:?[long, double]) = \l  (4613937818241073152(0x4008000000000000, double:3.0) ?[long, double])\l \l0x0041: ARITH  (r13 I:double) = (r13 I:double) * (r15 I:double) \l0x0043: ARITH  (r11 I:double) = (r11 I:double) + (r13 I:double) \l0x0044: INVOKE  (r1 I:double) = (r20 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x0048: ARITH  (r1 I:double) = (r1 I:double) * (r15 I:double) \l0x004a: ARITH  (r11 I:double) = (r11 I:double) \- (r1 I:double) \l0x004b: INVOKE  (r1 I:double) = (r21 I:java.lang.Double) java.lang.Double.doubleValue():double type: VIRTUAL \l0x004f: ARITH  (r11 I:double) = (r11 I:double) + (r1 I:double) \l0x0050: ARITH  (r11 I:double) = (r11 I:double) * (r22 I:double) \l0x0052: ARITH  (r11 I:double) = (r11 I:double) * (r22 I:double) \l0x0054: ARITH  (r11 I:double) = (r11 I:double) * (r22 I:double) \l0x0056: ARITH  (r9 I:double) = (r9 I:double) * (r22 I:double) \l0x0058: ARITH  (r9 I:double) = (r9 I:double) * (r22 I:double) \l0x005a: ARITH  (r11 I:double) = (r11 I:double) + (r9 I:double) \l0x005b: ARITH  (r7 I:double) = (r7 I:double) * (r22 I:double) \l0x005d: ARITH  (r11 I:double) = (r11 I:double) + (r7 I:double) \l0x005e: ARITH  (r11 I:double) = (r11 I:double) + (r3 I:double) \l0x005f: ARITH  (r11 I:double) = (r11 I:double) \/ (r5 I:double) \l0x0060: INVOKE  (r0 I:java.lang.Double) = (r11 I:double) java.lang.Double.valueOf(double):java.lang.Double type: STATIC \l}"];
Node_5 [shape=record,label="{5\:\ 0x0065|0x0065: CONST  (r0 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_6 [shape=record,label="{6\:\ 0x0066|0x0066: RETURN  (r0 I:java.lang.Double) \l}"];
MethodNode[shape=record,label="{protected java.lang.Double mil.nga.geopackage.extension.coverage.CoverageDataCore.getCubicInterpolationValue((r17 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r18 I:java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r20 I:java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r21 I:java.lang.Double A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r22 I:double A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1[style=dashed];
Node_0 -> Node_5;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_5;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4[style=dashed];
Node_3 -> Node_5;
Node_4 -> Node_6;
Node_5 -> Node_6;
}

