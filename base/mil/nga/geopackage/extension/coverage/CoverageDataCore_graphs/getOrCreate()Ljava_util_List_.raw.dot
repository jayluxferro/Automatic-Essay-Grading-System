digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getOrCreate()Ljava\/util\/List;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: IGET  (r0 I:mil.nga.geopackage.GeoPackageCore) = \l  (r9 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.geoPackage mil.nga.geopackage.GeoPackageCore \l0x0002: INVOKE  (r0 I:mil.nga.geopackage.GeoPackageCore) mil.nga.geopackage.GeoPackageCore.createGriddedCoverageTable():boolean type: INTERFACE \l0x0005: IGET  (r0 I:mil.nga.geopackage.GeoPackageCore) = \l  (r9 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.geoPackage mil.nga.geopackage.GeoPackageCore \l0x0007: INVOKE  (r0 I:mil.nga.geopackage.GeoPackageCore) mil.nga.geopackage.GeoPackageCore.createGriddedTileTable():boolean type: INTERFACE \l0x000a: NEW_INSTANCE  (r0 I:java.util.ArrayList) =  java.util.ArrayList \l0x000c: INVOKE  (r0 I:java.util.ArrayList) java.util.ArrayList.\<init\>():void type: DIRECT \l0x000f: SGET  (r2 I:java.lang.String) =  mil.nga.geopackage.extension.coverage.CoverageDataCore.EXTENSION_NAME java.lang.String \l0x0011: CONST_STR  (r3 I:java.lang.String) =  \"gpkg_2d_gridded_coverage_ancillary\" \l0x0013: SGET  (r5 I:java.lang.String) =  mil.nga.geopackage.extension.coverage.CoverageDataCore.EXTENSION_DEFINITION java.lang.String \l0x0015: SGET  (r6 I:mil.nga.geopackage.extension.ExtensionScopeType) =  mil.nga.geopackage.extension.ExtensionScopeType.READ_WRITE mil.nga.geopackage.extension.ExtensionScopeType \l0x0017: CONST  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0018: MOVE  (r1 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0019: INVOKE  (r1 I:mil.nga.geopackage.extension.Extensions) = \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r2 I:java.lang.String)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:mil.nga.geopackage.extension.ExtensionScopeType)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getOrCreate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, mil.nga.geopackage.extension.ExtensionScopeType):mil.nga.geopackage.extension.Extensions type: VIRTUAL \l0x001d: SGET  (r3 I:java.lang.String) =  mil.nga.geopackage.extension.coverage.CoverageDataCore.EXTENSION_NAME java.lang.String \l0x001f: CONST_STR  (r4 I:java.lang.String) =  \"gpkg_2d_gridded_tile_ancillary\" \l0x0021: SGET  (r6 I:java.lang.String) =  mil.nga.geopackage.extension.coverage.CoverageDataCore.EXTENSION_DEFINITION java.lang.String \l0x0023: SGET  (r7 I:mil.nga.geopackage.extension.ExtensionScopeType) =  mil.nga.geopackage.extension.ExtensionScopeType.READ_WRITE mil.nga.geopackage.extension.ExtensionScopeType \l0x0025: CONST  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0026: MOVE  (r2 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0027: INVOKE  (r2 I:mil.nga.geopackage.extension.Extensions) = \l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r3 I:java.lang.String)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r7 I:mil.nga.geopackage.extension.ExtensionScopeType)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getOrCreate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, mil.nga.geopackage.extension.ExtensionScopeType):mil.nga.geopackage.extension.Extensions type: VIRTUAL \l0x002b: SGET  (r4 I:java.lang.String) =  mil.nga.geopackage.extension.coverage.CoverageDataCore.EXTENSION_NAME java.lang.String \l0x002d: IGET  (r3 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) = \l  (r9 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.tileMatrixSet mil.nga.geopackage.tiles.matrixset.TileMatrixSet \l0x002f: INVOKE  (r5 I:java.lang.String) = (r3 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getTableName():java.lang.String type: VIRTUAL \l0x0033: CONST_STR  (r6 I:java.lang.String) =  \"tile_data\" \l0x0035: SGET  (r7 I:java.lang.String) =  mil.nga.geopackage.extension.coverage.CoverageDataCore.EXTENSION_DEFINITION java.lang.String \l0x0037: SGET  (r8 I:mil.nga.geopackage.extension.ExtensionScopeType) =  mil.nga.geopackage.extension.ExtensionScopeType.READ_WRITE mil.nga.geopackage.extension.ExtensionScopeType \l0x0039: MOVE  (r3 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x003a: INVOKE  (r3 I:mil.nga.geopackage.extension.Extensions) = \l  (r3 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r4 I:java.lang.String)\l  (r5 I:java.lang.String)\l  (r6 I:java.lang.String)\l  (r7 I:java.lang.String)\l  (r8 I:mil.nga.geopackage.extension.ExtensionScopeType)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getOrCreate(java.lang.String, java.lang.String, java.lang.String, java.lang.String, mil.nga.geopackage.extension.ExtensionScopeType):mil.nga.geopackage.extension.Extensions type: VIRTUAL \l0x003e: INVOKE  (r0 I:java.util.List), (r1 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0041: INVOKE  (r0 I:java.util.List), (r2 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l0x0044: INVOKE  (r0 I:java.util.List), (r3 I:java.lang.Object) java.util.List.add(java.lang.Object):boolean type: INTERFACE \l}"];
Node_1 [shape=record,label="{1\:\ 0x0047|0x0047: RETURN  \l  (r0 I:java.util.List\<mil.nga.geopackage.extension.Extensions\>)\l \l}"];
MethodNode[shape=record,label="{public java.util.List\<mil.nga.geopackage.extension.Extensions\> mil.nga.geopackage.extension.coverage.CoverageDataCore.getOrCreate((r9 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(), Ljava\/util\/List\<, Lmil\/nga\/geopackage\/extension\/Extensions;, \>;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
}

