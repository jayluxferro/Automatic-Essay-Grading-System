digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getBicubicInterpolationValue([[Ljava\/lang\/Double;FF)Ljava\/lang\/Double;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|java.lang.Double[] r2 = new java.lang.Double[4]\lr4 = 0\l}"];
Node_1 [shape=record,label="{1\:\ 0x0005|LOOP_START\lPHI: r4 \l  PHI: (r4v1 int) = (r4v0 int), (r4v2 int) binds: [B:0:0x0000, B:6:0x0027] A[DONT_GENERATE, DONT_INLINE]\lLOOP:0: B:1:0x0005\-\>B:6:0x0027\l}"];
Node_2 [shape=record,label="{2\:\ 0x0006|if (r4 \>= 4) goto L_0x002c\l}"];
Node_3 [shape=record,label="{3\:\ 0x0008|r7 = r14\ljava.lang.Double r7 = getCubicInterpolationValue(r15[r4][0], r15[r4][1], r15[r4][2], r15[r4][3], (double) r16)\l}"];
Node_4 [shape=record,label="{4\:\ 0x0023|if (r7 != null) goto L_0x0027\l}"];
Node_5 [shape=record,label="{5\:\ 0x0025|r2 = null\l}"];
Node_6 [shape=record,label="{6\:\ 0x0027|LOOP_END\lLOOP:0: B:1:0x0005\-\>B:6:0x0027\l|r2[r4] = r7\lint r4 = r4 + 1\l}"];
Node_7 [shape=record,label="{7\:\ 0x002c|PHI: r2 \l  PHI: (r2v1 java.lang.Double[]) = (r2v0 java.lang.Double[]), (r2v2 java.lang.Double[]) binds: [B:11:0x002c, B:5:0x0025] A[DONT_GENERATE, DONT_INLINE]\l|if (r2 == null) goto L_0x0037\l}"];
Node_8 [shape=record,label="{8\:\ 0x002e|r3 = r14\l}"];
Node_9 [shape=record,label="{9\:\ 0x0037|r3 = r14\l}"];
Node_10 [shape=record,label="{10\:\ 0x0025|SYNTHETIC\l}"];
Node_11 [shape=record,label="{11\:\ 0x002c|SYNTHETIC\l}"];
Node_12 [shape=record,label="{12\:\ ?|SYNTHETIC\lRETURN\lORIG_RETURN\l|return null\l}"];
Node_13 [shape=record,label="{13\:\ ?|SYNTHETIC\lRETURN\l|return getCubicInterpolationValue(r2, (double) r17)\l}"];
MethodNode[shape=record,label="{protected java.lang.Double mil.nga.geopackage.extension.coverage.CoverageDataCore.getBicubicInterpolationValue((r14v0 'this' mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r15v0 java.lang.Double[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17v0 float A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_11;
Node_3 -> Node_4;
Node_4 -> Node_6;
Node_4 -> Node_10[style=dashed];
Node_5 -> Node_7;
Node_6 -> Node_1;
Node_7 -> Node_8[style=dashed];
Node_7 -> Node_9;
Node_8 -> Node_13;
Node_9 -> Node_12;
Node_10 -> Node_5;
Node_11 -> Node_7;
}

