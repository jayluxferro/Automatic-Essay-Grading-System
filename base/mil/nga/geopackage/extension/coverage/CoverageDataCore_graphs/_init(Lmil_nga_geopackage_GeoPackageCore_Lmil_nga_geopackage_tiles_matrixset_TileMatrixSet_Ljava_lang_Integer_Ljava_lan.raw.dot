digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.\<init\>(Lmil\/nga\/geopackage\/GeoPackageCore;Lmil\/nga\/geopackage\/tiles\/matrixset\/TileMatrixSet;Ljava\/lang\/Integer;Ljava\/lang\/Integer;Lmil\/nga\/geopackage\/projection\/Projection;)V" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: INVOKE  \l  (r2 I:mil.nga.geopackage.extension.BaseExtension)\l  (r3 I:mil.nga.geopackage.GeoPackageCore)\l mil.nga.geopackage.extension.BaseExtension.\<init\>(mil.nga.geopackage.GeoPackageCore):void type: DIRECT \l0x0003: CONST  (r0 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x0004: IPUT  \l  (r0 I:boolean)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.zoomIn boolean \l0x0006: IPUT  \l  (r0 I:boolean)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.zoomOut boolean \l0x0008: IPUT  \l  (r0 I:boolean)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.zoomInBeforeOut boolean \l0x000a: SGET  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm) =  mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm.NEAREST_NEIGHBOR mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm \l0x000c: IPUT  \l  (r1 I:mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.algorithm mil.nga.geopackage.extension.coverage.CoverageDataAlgorithm \l0x000e: SGET  (r1 I:mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType) =  mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType.CENTER mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType \l0x0010: IPUT  \l  (r1 I:mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.encoding mil.nga.geopackage.extension.coverage.GriddedCoverageEncodingType \l0x0012: IPUT  \l  (r4 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.tileMatrixSet mil.nga.geopackage.tiles.matrixset.TileMatrixSet \l0x0014: INVOKE  (r1 I:mil.nga.geopackage.extension.coverage.GriddedCoverageDao) = (r3 I:mil.nga.geopackage.GeoPackageCore) mil.nga.geopackage.GeoPackageCore.getGriddedCoverageDao():mil.nga.geopackage.extension.coverage.GriddedCoverageDao type: INTERFACE \l0x0018: IPUT  \l  (r1 I:mil.nga.geopackage.extension.coverage.GriddedCoverageDao)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.griddedCoverageDao mil.nga.geopackage.extension.coverage.GriddedCoverageDao \l0x001a: INVOKE  (r3 I:mil.nga.geopackage.extension.coverage.GriddedTileDao) = (r3 I:mil.nga.geopackage.GeoPackageCore) mil.nga.geopackage.GeoPackageCore.getGriddedTileDao():mil.nga.geopackage.extension.coverage.GriddedTileDao type: INTERFACE \l0x001e: IPUT  \l  (r3 I:mil.nga.geopackage.extension.coverage.GriddedTileDao)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.griddedTileDao mil.nga.geopackage.extension.coverage.GriddedTileDao \l0x0020: INVOKE  \l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.queryGriddedCoverage():mil.nga.geopackage.extension.coverage.GriddedCoverage type: VIRTUAL \l0x0023: IPUT  \l  (r5 I:java.lang.Integer)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.width java.lang.Integer \l0x0025: IPUT  \l  (r6 I:java.lang.Integer)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.height java.lang.Integer \l0x0027: IPUT  \l  (r7 I:mil.nga.geopackage.projection.Projection)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.requestProjection mil.nga.geopackage.projection.Projection \l0x0029: INVOKE  (r3 I:mil.nga.geopackage.core.srs.SpatialReferenceSystem) = (r4 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getSrs():mil.nga.geopackage.core.srs.SpatialReferenceSystem type: VIRTUAL \l0x002d: INVOKE  (r3 I:mil.nga.geopackage.projection.Projection) = (r3 I:mil.nga.geopackage.core.srs.SpatialReferenceSystem) mil.nga.geopackage.projection.ProjectionFactory.getProjection(mil.nga.geopackage.core.srs.SpatialReferenceSystem):mil.nga.geopackage.projection.Projection type: STATIC \l0x0031: IPUT  \l  (r3 I:mil.nga.geopackage.projection.Projection)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.coverageProjection mil.nga.geopackage.projection.Projection \l0x0033: INVOKE  (r3 I:mil.nga.geopackage.BoundingBox) = (r4 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet) mil.nga.geopackage.tiles.matrixset.TileMatrixSet.getBoundingBox():mil.nga.geopackage.BoundingBox type: VIRTUAL \l0x0037: IPUT  \l  (r3 I:mil.nga.geopackage.BoundingBox)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.coverageBoundingBox mil.nga.geopackage.BoundingBox \l}"];
Node_1 [shape=record,label="{1\:\ 0x0039|0x0039: IF  (r7 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:3:0x0050 \l}"];
Node_2 [shape=record,label="{2\:\ 0x003b|0x003b: INVOKE  (r3 I:org.osgeo.proj4j.units.Unit) = (r7 I:mil.nga.geopackage.projection.Projection) mil.nga.geopackage.projection.Projection.getUnit():org.osgeo.proj4j.units.Unit type: VIRTUAL \l0x003f: IGET  (r3 I:java.lang.String) = (r3 I:org.osgeo.proj4j.units.Unit) org.osgeo.proj4j.units.Unit.name java.lang.String \l0x0041: IGET  (r4 I:mil.nga.geopackage.projection.Projection) = \l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.coverageProjection mil.nga.geopackage.projection.Projection \l0x0043: INVOKE  (r4 I:org.osgeo.proj4j.units.Unit) = (r4 I:mil.nga.geopackage.projection.Projection) mil.nga.geopackage.projection.Projection.getUnit():org.osgeo.proj4j.units.Unit type: VIRTUAL \l0x0047: IGET  (r4 I:java.lang.String) = (r4 I:org.osgeo.proj4j.units.Unit) org.osgeo.proj4j.units.Unit.name java.lang.String \l0x0049: INVOKE  (r3 I:boolean) = (r3 I:java.lang.String), (r4 I:java.lang.Object) java.lang.String.equals(java.lang.Object):boolean type: VIRTUAL \l0x004d: IPUT  \l  (r3 I:boolean)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.sameProjection boolean \l}"];
Node_3 [shape=record,label="{3\:\ 0x0050|0x0050: IPUT  \l  (r0 I:boolean)\l  (r2 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.sameProjection boolean \l}"];
Node_4 [shape=record,label="{4\:\ 0x0052|0x0052: RETURN   \l}"];
MethodNode[shape=record,label="{protected void mil.nga.geopackage.extension.coverage.CoverageDataCore.\<init\>((r2 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r3 I:mil.nga.geopackage.GeoPackageCore A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r4 I:mil.nga.geopackage.tiles.matrixset.TileMatrixSet A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r5 I:java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r6 I:java.lang.Integer A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r7 I:mil.nga.geopackage.projection.Projection A[IMMUTABLE_TYPE, METHOD_ARGUMENT])) }"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2[style=dashed];
Node_1 -> Node_3;
Node_2 -> Node_4;
Node_3 -> Node_4;
}

