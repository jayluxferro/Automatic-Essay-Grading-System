digraph "CFG formil.nga.geopackage.extension.coverage.CoverageDataCore.getNearestNeighborValue(Lmil\/nga\/geopackage\/extension\/coverage\/GriddedTile;Lmil\/nga\/geopackage\/extension\/coverage\/CoverageDataImage;[[Ljava\/lang\/Double;[[Ljava\/lang\/Double;[[Ljava\/lang\/Double;IIFFFFFF)Ljava\/lang\/Double;" {
Node_0 [shape=record,label="{0\:\ 0x0000|MTH_ENTER_BLOCK\l|0x0000: MOVE  (r0 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0001: MOVE  (r1 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r13 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0002: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r14 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0003: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r17 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0005: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0007: INVOKE  (r1 I:float) = \l  (r6 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r13 I:int)\l  (r3 I:float)\l  (r4 I:float)\l  (r14 I:float)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getXSource(int, float, float, float):float type: VIRTUAL \l0x000b: MOVE  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r12 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000c: MOVE  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r15 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000d: MOVE  (r4 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r16 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x000f: MOVE  (r5 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x0011: INVOKE  (r2 I:float) = \l  (r6 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r12 I:int)\l  (r4 I:float)\l  (r5 I:float)\l  (r15 I:float)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getYSource(int, float, float, float):float type: VIRTUAL \l0x0015: INVOKE  (r1 I:java.util.List) = \l  (r6 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r1 I:float)\l  (r2 I:float)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getNearestNeighbors(float, float):java.util.List type: VIRTUAL \l0x0019: INVOKE  (r1 I:java.util.Iterator) = (r1 I:java.util.List) java.util.List.iterator():java.util.Iterator type: INTERFACE \l0x001d: CONST  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l}"];
Node_1 [shape=record,label="{1\:\ 0x001e|0x001e: INVOKE  (r3 I:boolean) = (r1 I:java.util.Iterator) java.util.Iterator.hasNext():boolean type: INTERFACE \l}"];
Node_2 [shape=record,label="{2\:\ 0x0022|0x0022: IF  (r3 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:5:0x0042 \l}"];
Node_3 [shape=record,label="{3\:\ 0x0024|0x0024: INVOKE  (r2 I:java.lang.Object) = (r1 I:java.util.Iterator) java.util.Iterator.next():java.lang.Object type: INTERFACE \l0x0028: CHECK_CAST  (r2 I:int[]) = (int[]) (r2 I:?[OBJECT, ARRAY]) \l0x002a: CONST  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (0 ?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x002b: AGET  (r3 I:?[int, float]) = (r2 I:?[int, float][]), (r3 I:?[int, short, byte, char]) \l0x002d: CONST  (r4 I:?[boolean, int, float, short, byte, char]) = (1 ?[boolean, int, float, short, byte, char]) \l0x002e: AGET  (r2 I:?[int, float]) = (r2 I:?[int, float][]), (r4 I:?[int, short, byte, char]) \l0x0030: MOVE  (r12 I:?[OBJECT, ARRAY]) = (r6 I:?[OBJECT, ARRAY]) \l0x0031: MOVE  (r13 I:?[OBJECT, ARRAY]) = (r7 I:?[OBJECT, ARRAY]) \l0x0032: MOVE  (r14 I:?[OBJECT, ARRAY]) = (r8 I:?[OBJECT, ARRAY]) \l0x0033: MOVE  (r15 I:?[OBJECT, ARRAY]) = (r9 I:?[OBJECT, ARRAY]) \l0x0034: MOVE  (r16 I:?[OBJECT, ARRAY]) = (r10 I:?[OBJECT, ARRAY]) \l0x0036: MOVE  (r17 I:?[OBJECT, ARRAY]) = (r11 I:?[OBJECT, ARRAY]) \l0x0038: MOVE  (r18 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r3 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003a: MOVE  (r19 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY]) = \l  (r2 I:?[int, float, boolean, short, byte, char, OBJECT, ARRAY])\l \l0x003c: INVOKE  (r2 I:java.lang.Double) = \l  (r12 I:mil.nga.geopackage.extension.coverage.CoverageDataCore)\l  (r13 I:mil.nga.geopackage.extension.coverage.GriddedTile)\l  (r14 I:mil.nga.geopackage.extension.coverage.CoverageDataImage)\l  (r15 I:java.lang.Double[][])\l  (r16 I:java.lang.Double[][])\l  (r17 I:java.lang.Double[][])\l  (r18 I:int)\l  (r19 I:int)\l mil.nga.geopackage.extension.coverage.CoverageDataCore.getValueOverBorders(mil.nga.geopackage.extension.coverage.GriddedTile, mil.nga.geopackage.extension.coverage.CoverageDataImage, java.lang.Double[][], java.lang.Double[][], java.lang.Double[][], int, int):java.lang.Double type: DIRECT \l}"];
Node_4 [shape=record,label="{4\:\ 0x0040|0x0040: IF  (r2 I:?[int, boolean, OBJECT, ARRAY, byte, short, char]) == (0 ?[int, boolean, OBJECT, ARRAY, byte, short, char])  \-\> B:1:0x001e \l}"];
Node_5 [shape=record,label="{5\:\ 0x0042|0x0042: RETURN  (r2 I:java.lang.Double) \l}"];
MethodNode[shape=record,label="{protected java.lang.Double mil.nga.geopackage.extension.coverage.CoverageDataCore.getNearestNeighborValue((r6 'this' I:mil.nga.geopackage.extension.coverage.CoverageDataCore A[IMMUTABLE_TYPE, THIS]), (r7 I:mil.nga.geopackage.extension.coverage.GriddedTile A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r8 I:TImage A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r9 I:java.lang.Double[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r10 I:java.lang.Double[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r11 I:java.lang.Double[][] A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r12 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r13 I:int A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r14 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r15 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r16 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r17 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r18 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]), (r19 I:float A[IMMUTABLE_TYPE, METHOD_ARGUMENT]))  | Annotation[SYSTEM, dalvik.annotation.Signature, \{value=[(, Lmil\/nga\/geopackage\/extension\/coverage\/GriddedTile;, TTImage;[[, Ljava\/lang\/Double;, [[, Ljava\/lang\/Double;, [[, Ljava\/lang\/Double;, IIFFFFFF), Ljava\/lang\/Double;]\}]\l}"];
MethodNode -> Node_0;
Node_0 -> Node_1;
Node_1 -> Node_2;
Node_2 -> Node_3[style=dashed];
Node_2 -> Node_5;
Node_3 -> Node_4;
Node_4 -> Node_1;
Node_4 -> Node_5[style=dashed];
}

